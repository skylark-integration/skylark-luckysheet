/**
 * skylark-lucksheet - A version of lucksheet.js that ported to running on skylarkjs.
 * @author Hudaokeji Co.,Ltd
 * @version v0.9.0
 * @link www.skylarkjs.org
 * @license MIT
 */
define(["../methods/getdata","../methods/setdata","../methods/get","../store"],function(o,e,l,c){"use strict";const{datagridgrowth:n,getcellFormula:t}=o,{setcellvalue:u}=e,{getSheetIndex:r}=l;return{luckysheetextendData:function(o,e){let l=c.deepCopyFlowData(c.flowdata),t=$.extend(!0,{},c.config);null==t.merge&&(t.merge={});let m=l[0].length,w=n([],o,m);l=l.concat(w);for(let o=0;o<e.length;o++){let c=e[o].r,n=e[o].c,r=e[o].v;u(c,n,l,r),null!=r&&null!=r.mc&&null!=r.mc.rs&&(t.merge[r.mc.r+"_"+r.mc.c]=$.extend(!0,{},r.mc))}c.flowdata=l,c.webWorkerFlowDataCache(c.flowdata),c.luckysheetfile[r(c.currentSheetIndex)].data=l,c.config=t,c.luckysheetfile[r(c.currentSheetIndex)].config=c.config,c.refreshGrid_rhcw(c.flowdata.length,c.flowdata[0].length)},getMoveRange:function(o,e,l,c,n,t,u,r,m,w,f){let i=[];if("moveLeft"==o){if(e>u||l<t||c>m)i.push({row:[t,u],column:[r,m]});else if(n<r){if(e<=t&&l>=u)i.push({row:[t,u],column:[r-f,m-f]});else if(e>t&&l<u){let o=[{row:[t,e-1],column:[r,m]},{row:[l+1,u],column:[r,m]},{row:[e,l],column:[r-f,m-f]}];i=i.concat(o)}else if(e>t){let o=[{row:[t,e-1],column:[r,m]},{row:[e,u],column:[r-f,m-f]}];i=i.concat(o)}else if(l<u){let o=[{row:[t,l],column:[r-f,m-f]},{row:[l+1,u],column:[r,m]}];i=i.concat(o)}}else if(n>=r)if(c<=r&&n>=m){if(e>t&&l<u){let o=[{row:[t,e-1],column:[r,m]},{row:[l+1,u],column:[r,m]}];i=i.concat(o)}else if(e>t){let o=[{row:[t,e-1],column:[r,m]}];i=i.concat(o)}else if(l<u){let o=[{row:[l+1,u],column:[r,m]}];i=i.concat(o)}}else if(c>r&&n<m){if(e<=t&&l>=u)i.push({row:[t,u],column:[r,m-f]});else if(e>t&&l<u){let o=[{row:[t,e-1],column:[r,m]},{row:[l+1,u],column:[r,m]},{row:[e,l],column:[r,m-f]}];i=i.concat(o)}else if(e>t){let o=[{row:[t,e-1],column:[r,m]},{row:[e,u],column:[r,m-f]}];i=i.concat(o)}else if(l<u){let o=[{row:[t,l],column:[r,m-f]},{row:[l+1,u],column:[r,m]}];i=i.concat(o)}}else if(c>r){if(e<=t&&l>=u)i.push({row:[t,u],column:[r,c-1]});else if(e>t&&l<u){let o=[{row:[t,e-1],column:[r,m]},{row:[l+1,u],column:[r,m]},{row:[e,l],column:[r,c-1]}];i=i.concat(o)}else if(e>t){let o=[{row:[t,e-1],column:[r,m]},{row:[e,u],column:[r,c-1]}];i=i.concat(o)}else if(l<u){let o=[{row:[t,l],column:[r,c-1]},{row:[l+1,u],column:[r,m]}];i=i.concat(o)}}else if(n<m)if(e<=t&&l>=u)i.push({row:[t,u],column:[r-f,m-f]});else if(e>t&&l<u){let o=[{row:[t,e-1],column:[r,m]},{row:[l+1,u],column:[r,m]},{row:[e,l],column:[r-f,m-f]}];i=i.concat(o)}else if(e>t){let o=[{row:[t,e-1],column:[r,m]},{row:[e,u],column:[r-f,m-f]}];i=i.concat(o)}else if(l<u){let o=[{row:[t,l],column:[r-f,m-f]},{row:[l+1,u],column:[r,m]}];i=i.concat(o)}}else if("moveUp"==o)if(c>m||n<r||e>u)i.push({row:[t,u],column:[r,m]});else if(l<t){if(c<=r&&n>=m)i.push({row:[t-w,u-w],column:[r,m]});else if(c>r&&n<m){let o=[{row:[t,u],column:[r,c-1]},{row:[t,u],column:[n+1,m]},{row:[t-w,u-w],column:[c,n]}];i=i.concat(o)}else if(c>r){let o=[{row:[t,u],column:[r,c-1]},{row:[t-w,u-w],column:[c,m]}];i=i.concat(o)}else if(n<m){let o=[{row:[t-w,u-w],column:[r,n]},{row:[t,u],column:[n+1,m]}];i=i.concat(o)}}else if(l>=t)if(e<=t&&l>=u){if(c>r&&n<m){let o=[{row:[t,u],column:[r,c-1]},{row:[t,u],column:[n+1,m]}];i=i.concat(o)}else if(c>r){let o=[{row:[t,u],column:[r,c-1]}];i=i.concat(o)}else if(n<m){let o=[{row:[t,u],column:[n+1,m]}];i=i.concat(o)}}else if(e>t&&l<u){if(c<=r&&n>=m)i.push({row:[t,u-w],column:[r,m]});else if(c>r&&n<m){let o=[{row:[t,u],column:[r,c-1]},{row:[t,u],column:[n+1,m]},{row:[t,u-w],column:[c,n]}];i=i.concat(o)}else if(c>r){let o=[{row:[t,u],column:[r,c-1]},{row:[t,u-w],column:[c,m]}];i=i.concat(o)}else if(n<m){let o=[{row:[t,u-w],column:[r,n]},{row:[t,u],column:[n+1,m]}];i=i.concat(o)}}else if(e>t){if(c<=r&&n>=m)i.push({row:[t,e-1],column:[r,m]});else if(c>r&&n<m){let o=[{row:[t,u],column:[r,c-1]},{row:[t,u],column:[n+1,m]},{row:[t,e-1],column:[c,n]}];i=i.concat(o)}else if(c>r){let o=[{row:[t,u],column:[r,c-1]},{row:[t,e-1],column:[c,m]}];i=i.concat(o)}else if(n<m){let o=[{row:[t,e-1],column:[r,n]},{row:[t,u],column:[n+1,m]}];i=i.concat(o)}}else if(l<u)if(c<=r&&n>=m)i.push({row:[t-w,u-w],column:[r,m]});else if(c>r&&n<m){let o=[{row:[t,u],column:[r,c-1]},{row:[t,u],column:[n+1,m]},{row:[t-w,u-w],column:[c,n]}];i=i.concat(o)}else if(c>r){let o=[{row:[t,u],column:[r,c-1]},{row:[t-w,u-w],column:[c,m]}];i=i.concat(o)}else if(n<m){let o=[{row:[t-w,u-w],column:[r,n]},{row:[t,u],column:[n+1,m]}];i=i.concat(o)}return i}}});
//# sourceMappingURL=../sourcemaps/methods/extend_methods.js.map
