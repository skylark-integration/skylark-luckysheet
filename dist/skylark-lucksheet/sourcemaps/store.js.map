{"version":3,"sources":["store.js"],"names":["define","getObjType","obj","[object Boolean]","[object Number]","[object String]","[object Function]","[object Array]","[object Date]","[object RegExp]","[object Undefined]","[object Null]","[object Object]","Object","prototype","toString","call","Store","container","luckysheetfile","defaultcolumnNum","defaultrowNum","fullscreenmode","devicePixelRatio","currentSheetIndex","calculateSheetIndex","flowdata","config","visibledatarow","visibledatacolumn","ch_width","rh_height","cellmainWidth","cellmainHeight","toolbarHeight","infobarHeight","calculatebarHeight","rowHeaderWidth","columnHeaderHeight","cellMainSrollBarSize","sheetBarHeight","statisticBarHeight","luckysheetTableContentHW","defaultcollen","defaultrowlen","jfcountfuncTimeout","jfautoscrollTimeout","luckysheet_select_status","luckysheet_select_save","row","column","luckysheet_selection_range","luckysheet_copy_save","luckysheet_paste_iscut","filterchage","luckysheet_filter_save","luckysheet_sheet_move_status","luckysheet_sheet_move_data","luckysheet_scroll_status","luckysheetisrefreshdetail","luckysheetisrefreshtheme","luckysheetcurrentisPivotTable","luckysheet_rows_selected_status","luckysheet_cols_selected_status","luckysheet_rows_change_size","luckysheet_rows_change_size_start","luckysheet_cols_change_size","luckysheet_cols_change_size_start","luckysheet_cols_dbclick_timeout","luckysheet_cols_dbclick_times","luckysheetCellUpdate","luckysheet_shiftpositon","iscopyself","orderbyindex","luckysheet_model_move_state","luckysheet_model_xy","luckysheet_model_move_obj","luckysheet_cell_selected_move","luckysheet_cell_selected_move_index","luckysheet_cell_selected_extend","luckysheet_cell_selected_extend_index","luckysheet_cell_selected_extend_time","clearjfundo","jfundo","jfredo","lang","createChart","highlightChart","zIndex","chartparam","luckysheetCurrentChart","luckysheetCurrentChartActive","luckysheetCurrentChartMove","luckysheetCurrentChartMoveTimeout","luckysheetCurrentChartMoveObj","luckysheetCurrentChartMoveXy","luckysheetCurrentChartMoveWinH","luckysheetCurrentChartMoveWinW","luckysheetCurrentChartResize","luckysheetCurrentChartResizeObj","luckysheetCurrentChartResizeXy","luckysheetCurrentChartResizeWinH","luckysheetCurrentChartResizeWinW","luckysheetInsertChartTosheetChange","luckysheetCurrentChartZIndexRank","luckysheet_chart_redo_click","luckysheetCurrentChartMaxState","jfrefreshchartall","changeChartCellData","renderChart","getChartJson","functionList","luckysheet_function","chart_selection","currentChart","scrollRefreshSwitch","measureTextCache","measureTextCellInfoCache","measureTextCacheTimeOut","cellOverflowMapCache","zoomRatio","visibledatacolumn_unique","visibledatarow_unique","showGridLines","toobarObject","inlineStringEditCache","inlineStringEditRange","fontList","defaultFontSize","currentSheetView","cooperativeEdit","usernameTimeout","changeCollaborationSize","allDataColumnlen","merge_range","checkoutData","asyncLoad","deepCopyFlowDataState","deepCopyFlowDataCache","deepCopyFlowDataWorker","deepCopyFlowData","flowData","_this","this","terminate","$","extend","webWorkerFlowDataCache","worker","funcTxt","browser","isIE","response","Worker","postMessage","onmessage","e","data","getGridData","d","ret","r","length","c","push","v","getSheetMerge","merge","getSheetByName","name","i","file","getCurSheetnoset","curindex","status","index","getCurSheet","hasActive","indexs","forEach","item","generateRandomSheetIndex","includes","getSheetByIndex","getSheetIndex","setCurSheet","changeSheet","isPivotInitial","isNewSheet","onSheetChanging","hasSheet","dataVerification","historyParam","sheetIndex","range","r1","r2","c1","c2","saveParam","rowlen","collen","timeR","Math","floor","n","ceil","edr","str","v_row","type","value","params","allowUpdate","undefined","t","op","pos","rc","cid","cur","k","msg","pako","gzip","encodeURIComponent","JSON","stringify","to","websocket","send","gridKey","loadUrl","updateUrl","updateImageUrl","title","loadSheetUrl","refresh","scrollWidth","scrollHeight","onRefresh","setTimeout","refreshGrid","allParam","isRunExecFunction","isRefreshCanvas","onRefreshGrid","refreshGridAll","colwidth","rowheight","cfg","ctrlType","ctrlValue","cdformat","onRefreshGridAll","refreshRange","onRefreshRange","refreshGrid_adRC","calc","filterObj","cf","af","freezen","hyperlink","onRefreshGrid_adRC","refreshGrid_deleteCell","ctrl","onRefreshGrid_deleteCell","refreshGrid_pastcut","source","target","RowlChange","onRefreshGrid_pastcut","refreshGrid_rhcw","onRefreshGrid_rhcw","getluckysheetfile","plugin","chart","chartObj","chartJson","chart_id","chartOptions","getAllSheets","arr","celldata","load","toJson","toJsonOptions","active","onActive","invalidate","onInvalidate","freezenhorizontaldata","freezenverticaldata","luckysheetZoomTimeout","changeZoom","ratio","clearTimeout","curZoomRatio","onZoomChange"],"mappings":"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","file":"../store.js","sourcesContent":["define([\r\n],function () {\r\n\r\n    function getObjType(obj) { //TODO:lwf\r\n        let toString = Object.prototype.toString;\r\n        let map = {\r\n            '[object Boolean]': 'boolean',\r\n            '[object Number]': 'number',\r\n            '[object String]': 'string',\r\n            '[object Function]': 'function',\r\n            '[object Array]': 'array',\r\n            '[object Date]': 'date',\r\n            '[object RegExp]': 'regExp',\r\n            '[object Undefined]': 'undefined',\r\n            '[object Null]': 'null',\r\n            '[object Object]': 'object'\r\n        };    \r\n        return map[toString.call(obj)];\r\n    }   \r\n\r\n   'use strict';\r\n    const Store = {\r\n        container: null,\r\n        luckysheetfile: null,\r\n        defaultcolumnNum: 60,\r\n        defaultrowNum: 84,\r\n        fullscreenmode: true,\r\n        devicePixelRatio: 1,\r\n        currentSheetIndex: 0,\r\n        calculateSheetIndex: 0,\r\n        flowdata: [],\r\n        config: {},\r\n        visibledatarow: [],\r\n        visibledatacolumn: [],\r\n        ch_width: 0,\r\n        rh_height: 0,\r\n        cellmainWidth: 0,\r\n        cellmainHeight: 0,\r\n        toolbarHeight: 0,\r\n        infobarHeight: 0,\r\n        calculatebarHeight: 0,\r\n        rowHeaderWidth: 46,\r\n        columnHeaderHeight: 20,\r\n        cellMainSrollBarSize: 12,\r\n        sheetBarHeight: 31,\r\n        statisticBarHeight: 23,\r\n        luckysheetTableContentHW: [\r\n            0,\r\n            0\r\n        ],\r\n        defaultcollen: 73,\r\n        defaultrowlen: 19,\r\n        jfcountfuncTimeout: null,\r\n        jfautoscrollTimeout: null,\r\n        luckysheet_select_status: false,\r\n        luckysheet_select_save: [{\r\n                'row': [\r\n                    0,\r\n                    0\r\n                ],\r\n                'column': [\r\n                    0,\r\n                    0\r\n                ]\r\n            }],\r\n        luckysheet_selection_range: [],\r\n        luckysheet_copy_save: {},\r\n        luckysheet_paste_iscut: false,\r\n        filterchage: true,\r\n        luckysheet_filter_save: {\r\n            'row': [],\r\n            'column': []\r\n        },\r\n        luckysheet_sheet_move_status: false,\r\n        luckysheet_sheet_move_data: [],\r\n        luckysheet_scroll_status: false,\r\n        luckysheetisrefreshdetail: true,\r\n        luckysheetisrefreshtheme: true,\r\n        luckysheetcurrentisPivotTable: false,\r\n        luckysheet_rows_selected_status: false,\r\n        luckysheet_cols_selected_status: false,\r\n        luckysheet_rows_change_size: false,\r\n        luckysheet_rows_change_size_start: [],\r\n        luckysheet_cols_change_size: false,\r\n        luckysheet_cols_change_size_start: [],\r\n        luckysheet_cols_dbclick_timeout: null,\r\n        luckysheet_cols_dbclick_times: 0,\r\n        luckysheetCellUpdate: [],\r\n        luckysheet_shiftpositon: null,\r\n        iscopyself: true,\r\n        orderbyindex: 0,\r\n        luckysheet_model_move_state: false,\r\n        luckysheet_model_xy: [\r\n            0,\r\n            0\r\n        ],\r\n        luckysheet_model_move_obj: null,\r\n        luckysheet_cell_selected_move: false,\r\n        luckysheet_cell_selected_move_index: [],\r\n        luckysheet_cell_selected_extend: false,\r\n        luckysheet_cell_selected_extend_index: [],\r\n        luckysheet_cell_selected_extend_time: null,\r\n        clearjfundo: true,\r\n        jfundo: [],\r\n        jfredo: [],\r\n        lang: 'en',\r\n        createChart: '',\r\n        highlightChart: '',\r\n        zIndex: 15,\r\n        chartparam: {\r\n            luckysheetCurrentChart: null,\r\n            luckysheetCurrentChartActive: false,\r\n            luckysheetCurrentChartMove: null,\r\n            luckysheetCurrentChartMoveTimeout: null,\r\n            luckysheetCurrentChartMoveObj: null,\r\n            luckysheetCurrentChartMoveXy: null,\r\n            luckysheetCurrentChartMoveWinH: null,\r\n            luckysheetCurrentChartMoveWinW: null,\r\n            luckysheetCurrentChartResize: null,\r\n            luckysheetCurrentChartResizeObj: null,\r\n            luckysheetCurrentChartResizeXy: null,\r\n            luckysheetCurrentChartResizeWinH: null,\r\n            luckysheetCurrentChartResizeWinW: null,\r\n            luckysheetInsertChartTosheetChange: true,\r\n            luckysheetCurrentChartZIndexRank: 100,\r\n            luckysheet_chart_redo_click: false,\r\n            luckysheetCurrentChartMaxState: false,\r\n            jfrefreshchartall: '',\r\n            changeChartCellData: '',\r\n            renderChart: '',\r\n            getChartJson: ''\r\n        },\r\n        functionList: null,\r\n        luckysheet_function: null,\r\n        chart_selection: {},\r\n        currentChart: '',\r\n        scrollRefreshSwitch: true,\r\n        measureTextCache: {},\r\n        measureTextCellInfoCache: {},\r\n        measureTextCacheTimeOut: null,\r\n        cellOverflowMapCache: {},\r\n        zoomRatio: 1,\r\n        visibledatacolumn_unique: null,\r\n        visibledatarow_unique: null,\r\n        showGridLines: true,\r\n        toobarObject: {},\r\n        inlineStringEditCache: null,\r\n        inlineStringEditRange: null,\r\n        fontList: [],\r\n        defaultFontSize: 10,\r\n        currentSheetView: 'viewNormal',\r\n        cooperativeEdit: {\r\n            usernameTimeout: {},\r\n            changeCollaborationSize: [],\r\n            allDataColumnlen: [],\r\n            merge_range: {},\r\n            checkoutData: []\r\n        },\r\n        asyncLoad: ['core'],\r\n\r\n\r\n        // from ./global/editor\r\n\r\n        //worker+blob实现深拷贝替换extend\r\n        deepCopyFlowDataState: false,\r\n        deepCopyFlowDataCache: '',\r\n        deepCopyFlowDataWorker: null,\r\n\r\n        deepCopyFlowData: function (flowData) {\r\n            let _this = this;\r\n            if (_this.deepCopyFlowDataState) {\r\n                if (_this.deepCopyFlowDataWorker != null) {\r\n                    _this.deepCopyFlowDataWorker.terminate();\r\n                }\r\n                return _this.deepCopyFlowDataCache;\r\n            } else {\r\n                if (flowData == null) {\r\n                    flowData = Store.flowdata;\r\n                }\r\n                return $.extend(true, [], flowData);\r\n            }\r\n        },\r\n        webWorkerFlowDataCache: function (flowData) {\r\n            let _this = this;\r\n            try {\r\n                if (_this.deepCopyFlowDataWorker != null) {\r\n                    //存新的webwork前先销毁以前的\r\n                    _this.deepCopyFlowDataWorker.terminate();\r\n                }\r\n                let funcTxt = 'data:text/javascript;chartset=US-ASCII,onmessage = function (e) { postMessage(e.data); };';\r\n                _this.deepCopyFlowDataState = false;    //适配IE\r\n                //适配IE\r\n                let worker;\r\n                if (browser.isIE() == 1) {\r\n                    let response = 'self.onmessage=function(e){postMessage(e.data);}';\r\n                    worker = new Worker('./plugins/Worker-helper.js');\r\n                    worker.postMessage(response);\r\n                } else {\r\n                    worker = new Worker(funcTxt);\r\n                }\r\n                _this.deepCopyFlowDataWorker = worker;\r\n                worker.postMessage(flowData);\r\n                worker.onmessage = function (e) {\r\n                    _this.deepCopyFlowDataCache = e.data;\r\n                    _this.deepCopyFlowDataState = true;\r\n                };\r\n            } catch (e) {\r\n                _this.deepCopyFlowDataCache = $.extend(true, [], flowData);\r\n            }\r\n        },\r\n\r\n        /// from ./controllers/sheetmanage\r\n        getGridData : function (d) {\r\n            let ret = [];\r\n            for (let r = 0; r < d.length; r++) {\r\n                for (let c = 0; c < d[0].length; c++) {\r\n                    if (d[r][c] == null) {\r\n                        continue;\r\n                    }\r\n                    ret.push({\r\n                        r: r,\r\n                        c: c,\r\n                        v: d[r][c]\r\n                    });\r\n                }\r\n            }\r\n            return ret;\r\n        },\r\n        getSheetMerge: function () {\r\n            if (Store.config.merge == null) {\r\n                return null;\r\n            }\r\n            return Store.config.merge;\r\n        },\r\n        getSheetByName: function (name) {\r\n            let _this = this;\r\n            if (name == null) {\r\n                return null;\r\n            }\r\n            for (let i = 0; i < Store.luckysheetfile.length; i++) {\r\n                let file = Store.luckysheetfile[i];\r\n                if (file.name == name) {\r\n                    return file;\r\n                }\r\n            }\r\n            return null;\r\n        },\r\n        getCurSheetnoset: function () {\r\n            let curindex = 0;\r\n            for (let i = 0; i < Store.luckysheetfile.length; i++) {\r\n                if (Store.luckysheetfile[i].status == 1) {\r\n                    curindex = Store.luckysheetfile[i].index;\r\n                    break;\r\n                }\r\n            }\r\n            return curindex;\r\n        },\r\n        getCurSheet: function () {\r\n            if (Store.luckysheetfile.length) {\r\n                let hasActive = false, indexs = [];\r\n                Store.luckysheetfile.forEach(item => {\r\n                    if ('undefined' === typeof item.index) {\r\n                        item.index = this.generateRandomSheetIndex();\r\n                    }\r\n                    if (indexs.includes(item.index)) {\r\n                        item.index = this.generateRandomSheetIndex();\r\n                    } else {\r\n                        indexs.push(item.index);\r\n                    }\r\n                    if ('undefined' === typeof item.status) {\r\n                        item.status = 0;\r\n                    }\r\n                    if (item.status == 1) {\r\n                        if (hasActive) {\r\n                            item.status = 0;\r\n                        } else {\r\n                            hasActive = true;\r\n                        }\r\n                    }\r\n                });\r\n                if (!hasActive) {\r\n                    Store.luckysheetfile[0].status = 1;\r\n                }\r\n            }\r\n            Store.currentSheetIndex = Store.luckysheetfile[0].index;\r\n            for (let i = 0; i < Store.luckysheetfile.length; i++) {\r\n                if (Store.luckysheetfile[i].status == 1) {\r\n                    Store.currentSheetIndex = Store.luckysheetfile[i].index;\r\n                    break;\r\n                }\r\n            }\r\n            return Store.currentSheetIndex;\r\n        },\r\n        getSheetByIndex: function (index) {\r\n            let _this = this;\r\n            if (index == null) {\r\n                index = Store.currentSheetIndex;\r\n            }\r\n            let i = _this.getSheetIndex(index);\r\n            return Store.luckysheetfile[i];\r\n        },\r\n        setCurSheet: function (index) {\r\n            for (let i = 0; i < Store.luckysheetfile.length; i++) {\r\n                if (Store.luckysheetfile[i]['index'] == index) {\r\n                    Store.luckysheetfile[i].status = 1;\r\n                } else {\r\n                    Store.luckysheetfile[i].status = 0;\r\n                }\r\n            }\r\n            Store.currentSheetIndex = index;\r\n        },\r\n        getSheetIndex: function (index) {\r\n            for (let i = 0; i < Store.luckysheetfile.length; i++) {\r\n                if (Store.luckysheetfile[i]['index'] == index) {\r\n                    return i;\r\n                }\r\n            }\r\n            return null;\r\n        },\r\n\r\n        changeSheet: function (index, isPivotInitial, isNewSheet) {\r\n            if (index === Store.currentSheetIndex) {\r\n                return ;\r\n            }\r\n            if (Store.onSheetChanging) {\r\n                Store.onSheetChanging(index, isPivotInitial, isNewSheet);\r\n            }\r\n            Store.setCurSheet(index);\r\n        },\r\n\r\n        hasSheet: function (index) {\r\n            if (index == null) {\r\n                return false;\r\n            }\r\n            index = this.getSheetIndex(index);\r\n            if (index == null) {\r\n                return false;\r\n            } else {\r\n                return true;\r\n            }\r\n        },\r\n        /// from widgets/dataVerificationCtrl\r\n        dataVerification: null,\r\n\r\n        ///from controllers/server\r\n\r\n        //共享编辑模式\r\n        historyParam: function (data, sheetIndex, range) {\r\n            let _this = this;\r\n            let r1 = range.row[0], r2 = range.row[1];\r\n            let c1 = range.column[0], c2 = range.column[1];\r\n            if (r1 == r2 && c1 == c2) {\r\n                //单个单元格更新\r\n                let v = data[r1][c1];\r\n                Store.saveParam('v', sheetIndex, v, {\r\n                    'r': r1,\r\n                    'c': c1\r\n                });\r\n            } else {\r\n                //范围单元格更新\r\n                let rowlen = r2 - r1 + 1;\r\n                let collen = c2 - c1 + 1;\r\n                let timeR = Math.floor(1000 / collen);\r\n                let n = Math.ceil(rowlen / timeR);    //分批次更新，一次最多1000个单元格\r\n                //分批次更新，一次最多1000个单元格\r\n                for (let i = 0; i < n; i++) {\r\n                    let str = r1 + timeR * i;\r\n                    let edr;\r\n                    if (i == n - 1) {\r\n                        edr = r2;\r\n                    } else {\r\n                        edr = r1 + timeR * (i + 1) - 1;\r\n                    }\r\n                    let v = [];\r\n                    for (let r = str; r <= edr; r++) {\r\n                        let v_row = [];\r\n                        for (let c = c1; c <= c2; c++) {\r\n                            if (data[r] == null) {\r\n                                v_row.push(null);\r\n                            } else {\r\n                                v_row.push(data[r][c]);\r\n                            }\r\n                        }\r\n                        v.push(v_row);\r\n                    }\r\n                    Store.saveParam('rv', sheetIndex, v, {\r\n                        'range': {\r\n                            'row': [\r\n                                str,\r\n                                edr\r\n                            ],\r\n                            'column': [\r\n                                c1,\r\n                                c2\r\n                            ]\r\n                        }\r\n                    });\r\n                    if (i == n - 1) {\r\n                        Store.saveParam('rv_end', sheetIndex, null);\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        saveParam: function (type, index, value, params) {\r\n            let _this = this;\r\n            if (!_this.allowUpdate) {\r\n                return;\r\n            }\r\n            if (value == undefined) {\r\n                value = null;\r\n            }\r\n            let d = {};\r\n            d.t = type;\r\n            d.i = index;\r\n            d.v = value;    //切换sheet页不发后台，TODO：改为发后台+后台不广播 \r\n            //切换sheet页不发后台，TODO：改为发后台+后台不广播 \r\n            if (type === 'shs') {\r\n                return;\r\n            }\r\n            if (type == 'rv') {\r\n                //单元格批量更新\r\n                d.range = params.range;\r\n            } else if (type == 'v' || type == 'fu' || type == 'fm') {\r\n                d.r = params.r;\r\n                d.c = params.c;\r\n            } else if (type == 'fc') {\r\n                d.op = params.op;\r\n                d.pos = params.pos;\r\n            } else if (type == 'drc' || type == 'arc' || type == 'h' || type == 'wh') {\r\n                d.rc = params.rc;\r\n            } else if (type == 'c') {\r\n                d.cid = params.cid;\r\n                d.op = params.op;\r\n            } else if (type == 'f') {\r\n                d.op = params.op;\r\n                d.pos = params.pos;\r\n            } else if (type == 's') {\r\n            } else if (type == 'sh') {\r\n                d.op = params.op;\r\n                if (params.cur != null) {\r\n                    d.cur = params.cur;\r\n                }\r\n            } else if (type == 'cg') {\r\n                d.k = params.k;\r\n            } else if (type == 'all') {\r\n                d.k = params.k;    // d.s = params.s;\r\n            }\r\n            // d.s = params.s;\r\n            let msg = pako.gzip(encodeURIComponent(JSON.stringify(d)), { to: 'string' });\r\n            if (Store.websocket != null) {\r\n                Store.websocket.send(msg);\r\n            }\r\n        },\r\n        gridKey: null,\r\n        loadUrl: null,\r\n        updateUrl: null,\r\n        updateImageUrl: null,\r\n        title: null,\r\n        loadSheetUrl: null,\r\n        allowUpdate: false,\r\n        websocket: null,\r\n\r\n        // from global/refresh\r\n        //\r\n        refresh : function(scrollWidth,scrollHeight){\r\n            if (this.onRefresh) {\r\n               setTimeout(()=>{\r\n                 this.onRefresh(scrollWidth,scrollHeight);\r\n                }, 1);\r\n            }\r\n        },\r\n\r\n        refreshGrid : function(data, range, allParam, isRunExecFunction = true, isRefreshCanvas = true){\r\n            if (this.onRefresh) {\r\n               setTimeout(()=>{\r\n                 this.onRefreshGrid(data, range, allParam, isRunExecFunction , isRefreshCanvas);\r\n                }, 1);\r\n            }\r\n        },\r\n\r\n        refreshGridAll : function(colwidth, rowheight, data, cfg, range, ctrlType, ctrlValue, cdformat, isRefreshCanvas = true){\r\n            if (this.onRefresh) {\r\n               setTimeout(()=>{\r\n                 this.onRefreshGridAll(colwidth, rowheight, data, cfg, range, ctrlType, ctrlValue, cdformat, isRefreshCanvas);\r\n                }, 1);\r\n            }\r\n        },\r\n\r\n        refreshRange : function(data, range, allParam, isRunExecFunction = true, isRefreshCanvas = true) {\r\n            if (this.onRefreshRange) {\r\n                this.onRefreshRange(data,range,allParam,isRunExecFunction,isRefreshCanvas);\r\n            }\r\n        },\r\n\r\n        refreshGrid_adRC : function(data, cfg, ctrlType, ctrlValue, calc, filterObj, cf, af, freezen, dataVerification, hyperlink){\r\n            if (this.onRefresh) {\r\n               setTimeout(()=>{\r\n                 this.onRefreshGrid_adRC(data, cfg, ctrlType, ctrlValue, calc, filterObj, cf, af, freezen, dataVerification, hyperlink);\r\n                }, 1);\r\n            }\r\n        },\r\n\r\n        refreshGrid_deleteCell : function(data, cfg, ctrl, calc, filterObj, cf, dataVerification, hyperlink){\r\n            if (this.onRefresh) {\r\n               setTimeout(()=>{\r\n                 this.onRefreshGrid_deleteCell(data, cfg, ctrl, calc, filterObj, cf, dataVerification, hyperlink);\r\n                }, 1);\r\n            }\r\n        },\r\n\r\n        refreshGrid_pastcut : function(source, target, RowlChange){\r\n            if (this.onRefresh) {\r\n               setTimeout(()=>{\r\n                 this.onRefreshGrid_pastcut(source, target, RowlChange);\r\n                }, 1);\r\n            }\r\n        },\r\n\r\n        refreshGrid_rhcw : function(rowheight, colwidth, isRefreshCanvas = true){\r\n            if (this.onRefresh) {\r\n               setTimeout(()=>{\r\n                 this.onRefreshGrid_rhcw(rowheight, colwidth, isRefreshCanvas);\r\n                }, 1);\r\n            }\r\n        },\r\n\r\n\r\n        // from global/api\r\n        getluckysheetfile :function (plugin) {\r\n            // 获取图表数据\r\n            if (plugin) {\r\n                Store.luckysheetfile.forEach(file => {\r\n                    if (!!file.chart) {\r\n                        file.chart.forEach(chartObj => {\r\n                            const chartJson = Store.getChartJson(chartObj.chart_id);\r\n                            chartObj.chartOptions = chartJson;\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n            return Store.luckysheetfile;\r\n        },\r\n\r\n        getAllSheets : function () {\r\n            let data = $.extend(true, [], Store.luckysheetfile);\r\n            data.forEach((item, index, arr) => {\r\n                if (item.data != null && item.data.length > 0) {\r\n                    item.celldata = Store.getGridData(item.data);\r\n                }\r\n                delete item.load;\r\n                delete item.freezen;\r\n            });\r\n            return data;\r\n       },\r\n        toJson : function () {\r\n            const toJsonOptions = Store.toJsonOptions;    // Workbook name\r\n            // Workbook name\r\n            ////toJsonOptions.title = $('#luckysheet_info_detail_input').val(); \r\n            toJsonOptions.title = Store.title; //TODO:lwf\r\n            toJsonOptions.data = Store.getAllSheets();    // row and column\r\n            // row and column\r\n            Store.getluckysheetfile().forEach((file, index) => {\r\n                if (file.data == undefined) {\r\n                    return;\r\n                }\r\n                toJsonOptions.data[index].row = getObjType(file.data) === 'array' ? file.data.length : 0;\r\n                toJsonOptions.data[index].column = getObjType(file.data[0]) === 'array' ? file.data[0].length : 0;\r\n            });\r\n            return toJsonOptions;\r\n        },\r\n\r\n        // from global/createSheet\r\n        active : function() {\r\n            if (this.onActive) {\r\n               setTimeout(()=>{\r\n                 this.onActive();\r\n                }, 1);\r\n            }\r\n\r\n        },\r\n        // from global/resize\r\n        invalidate : function() {\r\n            if (this.onInvalidate) {\r\n               setTimeout(()=>{\r\n                 this.onInvalidate();\r\n                }, 1);\r\n            }\r\n\r\n        },\r\n\r\n        //from controllers/freezen\r\n        //from controllers/freezen\r\n        freezenhorizontaldata: null,\r\n        freezenverticaldata: null,\r\n\r\n        //from controller/zoom.js\r\n        luckysheetZoomTimeout : null,\r\n\r\n        changeZoom : function (ratio) {\r\n            if (Store.flowdata == null || Store.flowdata.length == 0) {\r\n                return;\r\n            }\r\n            clearTimeout(Store.luckysheetZoomTimeout);\r\n            Store.luckysheetZoomTimeout = setTimeout(() => {\r\n                if (Store.clearjfundo) {\r\n                    Store.jfredo.push({\r\n                        'type': 'zoomChange',\r\n                        'zoomRatio': Store.zoomRatio,\r\n                        'curZoomRatio': ratio,\r\n                        'sheetIndex': Store.currentSheetIndex\r\n                    });\r\n                }\r\n                Store.zoomRatio = ratio;\r\n                if (Store.onZoomChange) {\r\n                    Store.onZoomChange(ratio);\r\n                }\r\n            }, 100);\r\n        }\r\n\r\n    };\r\n    return Store;\r\n});"]}