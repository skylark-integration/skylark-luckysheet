{"version":3,"sources":["widgets/draw.js"],"names":["define","pivotTable","conditionformat","alternateformat","luckysheetSparkline","cells","dataVerificationCtrl","m_constant","m_sheetSearch","m_dynamicArray","browser","m_validate","m_getRowlen","m_getdata","m_border","m_get","m_util","luckysheetConfigsetting","Store","locale","luckysheetdefaultstyle","luckysheet_CFiconsImg","luckysheetdefaultFont","luckysheet_searcharray","dynamicArrayCompute","isRealNull","isRealNum","getMeasureText","getCellTextInfo","getRealCellValue","getBorderInfoComputeRange","getSheetIndex","getObjType","chatatABC","luckysheetfontformat","isInlineStringCell","sparklinesRender","r","c","offsetX","offsetY","canvasid","ctx","flowdata","sparklines","spl","Function","temp1","x","y","render","shapeseq","shapes","pixelWidth","pixelHeight","i","length","nullCellRender","start_r","start_c","end_r","end_c","luckysheetTableContent","af_compute","cf_compute","offsetLeft","offsetTop","dynamicArray_compute","cellOverflowMap","dataset_col_st","dataset_col_ed","scrollHeight","scrollWidth","bodrder05","isMerge","checksAF","checksCF","borderfix","fillStyle","checkstatus","tc","cellsize","createHookFunction","getSheetByIndex","fillRect","value","v","fontset","font","horizonAlignPos","verticalAlignPos","luckysheetrefreshfixed","textBaseline","fillText","ps","ps_w","zoomRatio","ps_h","beginPath","moveTo","lineTo","fill","closePath","cellOverflow_colInObj","cellOverflow_colIn","colLast","cellOverflowRender","rowIndex","colIndex","stc","edc","colIn","luckysheetcurrentisPivotTable","showGridLines","lineWidth","strokeStyle","stroke","cellRender","cell","cellWidth","cellHeight","horizonAlign","verticalAlign","dataVerification","validateCellData","dv_w","dv_h","qp","cellOverflow_bd_r_render","tb","type","pos_x","pos_y","save","rect","clip","scale","measureText","textMetrics","width","oneLineTextHeight","actualBoundingBoxDescent","actualBoundingBoxAscent","verticalCellHeight","verticalAlignPos_text","verticalAlignPos_checkbox","strokeRect","checked","restore","w","space_width","h","space_height","valueType","valueLen","format","minusLen","my_gradient","createLinearGradient","addColorStop","plusLen","textInfo","l","t","values","left","top","textHeightAll","desc","drawImage","ct","fa","indexOf","cellTextRender","visibledatarow","visibledatacolumn","cellOverflow_trace","curC","traceC","traceDir","data","success","mc","start_curC","end_curC","start_traceC","end_traceC","map","col_st","col_ed","rkey","ckey","mapItem","option","rotate","translate","textLeftAll","textTopAll","Math","PI","word","inline","style","fc","txt","content","m","cancelLine","floor","startX","startY","endX","endY","fs","underLine","underLines","a","item","setLineDash","canvasborder","hv","m_st","m_ed","line_st","line_ed","0","1","2","3","4","5","6","7","8","9","10","11","12","13","toString","e","console","log","luckysheetDrawgridRowTitle","drawHeight","$","scrollTop","luckysheetTableContentHW","columnHeaderHeight","dataset_row_st","dataset_row_ed","preEndR","get","getContext","devicePixelRatio","clearRect","rowHeaderWidth","firstOffset","lastOffset","height","config","luckysheetDrawgridColumnTitle","drawWidth","scrollLeft","preEndC","abc","round","luckysheetDrawMain","columnOffsetCell","rowOffsetCell","mycanvas","sheetFile","clearTimeout","measureTextCacheTimeOut","fill_row_st","fill_row_ed","fill_col_st","fill_col_ed","err","cellupdate","mergeCache","borderOffset","firstcolumnlen","defaultcollen","key","margeMain","push","luckysheetfile","currentSheetIndex","getComputeMap","canvas","row_st","row_end","cellOverflowMapCache","hasCellOver","textMetricsObj","textWidthAll","trace_forward","trace_backward","trace","getCellOverflowMap","mcArr","cud","margeMaindata","mainCell","rs","cs","drawPivotTable","textAlign","title","pivotTableBoundary","borderLeftRender","color","linetype","borderRightRender","borderBottomRender","borderTopRender","borderInfoCompute","bd_r","substr","bd_c","borderLeft","borderRight","borderTop","borderBottom","b","ch_width","setTimeout","measureTextCache","measureTextCellInfoCache"],"mappings":"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","file":"../../widgets/draw.js","sourcesContent":["define([\n    '../methods/pivotTable_methods',\n    '../methods/conditionformat_methods',\n    '../methods/alternateformat_methods',\n    '../widgets/sparkline',\n    '../methods/cells',\n    '../widgets/dataVerificationCtrl',\n    '../widgets/constant',\n    '../methods/sheetSearch',\n    '../methods/dynamicArray',\n    '../utils/browser',\n    '../methods/validate',\n    '../methods/getRowlen',\n    '../methods/getdata',\n    '../methods/border',\n    '../methods/get',\n    '../utils/util',\n    '../methods/luckysheetConfigsetting',\n    '../store',\n    '../locale/locale'\n], function (pivotTable, conditionformat, alternateformat, luckysheetSparkline, cells, dataVerificationCtrl, m_constant, m_sheetSearch, m_dynamicArray, browser, m_validate, m_getRowlen, m_getdata, m_border, m_get, m_util, luckysheetConfigsetting, Store, locale) {\n    'use strict';\n    const {luckysheetdefaultstyle, luckysheet_CFiconsImg, luckysheetdefaultFont} = m_constant;\n    const {luckysheet_searcharray} = m_sheetSearch;\n    const {dynamicArrayCompute} = m_dynamicArray;\n    const {isRealNull, isRealNum} = m_validate;\n    const {getMeasureText, getCellTextInfo} = m_getRowlen;\n    const {getRealCellValue} = m_getdata;\n    const {getBorderInfoComputeRange} = m_border;\n    const {getSheetIndex} = m_get;\n    const {getObjType, chatatABC, luckysheetfontformat} = m_util;\n    const {isInlineStringCell} = cells;\n\n\n    function luckysheetDrawgridRowTitle(scrollHeight, drawHeight, offsetTop) {\n        if (scrollHeight == null) {\n            scrollHeight = $('#luckysheet-cell-main').scrollTop();\n        }\n        if (drawHeight == null) {\n            drawHeight = Store.luckysheetTableContentHW[1];\n        }\n        if (offsetTop == null) {\n            offsetTop = Store.columnHeaderHeight;\n        }\n        let luckysheetTableContent = $('#luckysheetTableContent').get(0).getContext('2d');\n        luckysheetTableContent.save();\n        luckysheetTableContent.scale(Store.devicePixelRatio, Store.devicePixelRatio);\n        luckysheetTableContent.clearRect(0, offsetTop, Store.rowHeaderWidth - 1, drawHeight);\n        luckysheetTableContent.font = luckysheetdefaultFont();\n        luckysheetTableContent.textBaseline = luckysheetdefaultstyle.textBaseline;    //基准线 垂直居中\n        //基准线 垂直居中\n        luckysheetTableContent.fillStyle = luckysheetdefaultstyle.fillStyle;\n        let dataset_row_st, dataset_row_ed;\n        dataset_row_st = luckysheet_searcharray(Store.visibledatarow, scrollHeight);\n        dataset_row_ed = luckysheet_searcharray(Store.visibledatarow, scrollHeight + drawHeight);\n        if (dataset_row_st == -1) {\n            dataset_row_st = 0;\n        }\n        if (dataset_row_ed == -1) {\n            dataset_row_ed = Store.visibledatarow.length - 1;\n        }\n        luckysheetTableContent.save();\n        luckysheetTableContent.beginPath();\n        luckysheetTableContent.rect(0, offsetTop - 1, Store.rowHeaderWidth - 1, drawHeight - 2);\n        luckysheetTableContent.clip();\n        let end_r, start_r;\n        let bodrder05 = 0.5;    //Default 0.5\n        //Default 0.5\n        let preEndR;\n        for (let r = dataset_row_st; r <= dataset_row_ed; r++) {\n            if (r == 0) {\n                start_r = -scrollHeight - 1;\n            } else {\n                start_r = Store.visibledatarow[r - 1] - scrollHeight - 1;\n            }\n            end_r = Store.visibledatarow[r] - scrollHeight;    //若超出绘制区域终止\n                                                               // if(end_r > scrollHeight + drawHeight){\n                                                               //     break;\n                                                               // }\n            //若超出绘制区域终止\n            // if(end_r > scrollHeight + drawHeight){\n            //     break;\n            // }\n            let firstOffset = dataset_row_st == r ? -2 : 0;\n            let lastOffset = dataset_row_ed == r ? -2 : 0;    //列标题单元格渲染前触发，return false 则不渲染该单元格\n            //列标题单元格渲染前触发，return false 则不渲染该单元格\n            if (!luckysheetConfigsetting.createHookFunction('rowTitleCellRenderBefore', r + 1, {\n                    r: r,\n                    top: start_r + offsetTop + firstOffset,\n                    width: Store.rowHeaderWidth - 1,\n                    height: end_r - start_r + 1 + lastOffset - firstOffset\n                }, luckysheetTableContent)) {\n                continue;\n            }\n            if (Store.config['rowhidden'] != null && Store.config['rowhidden'][r] != null) {\n            } else {\n                luckysheetTableContent.fillStyle = '#ffffff';\n                luckysheetTableContent.fillRect(0, start_r + offsetTop + firstOffset, Store.rowHeaderWidth - 1, end_r - start_r + 1 + lastOffset - firstOffset);\n                luckysheetTableContent.fillStyle = '#000000';    //行标题栏序列号\n                //行标题栏序列号\n                luckysheetTableContent.save();    //save scale before draw text\n                //save scale before draw text\n                luckysheetTableContent.scale(Store.zoomRatio, Store.zoomRatio);\n                let textMetrics = getMeasureText(r + 1, luckysheetTableContent);    //luckysheetTableContent.measureText(r + 1);\n                //luckysheetTableContent.measureText(r + 1);\n                let horizonAlignPos = (Store.rowHeaderWidth - textMetrics.width) / 2;\n                let verticalAlignPos = start_r + (end_r - start_r) / 2 + offsetTop;\n                luckysheetTableContent.fillText(r + 1, horizonAlignPos / Store.zoomRatio, verticalAlignPos / Store.zoomRatio);\n                luckysheetTableContent.restore();    //restore scale after draw text\n            }    //vertical\n            //restore scale after draw text\n            //vertical\n            luckysheetTableContent.beginPath();\n            luckysheetTableContent.moveTo(Store.rowHeaderWidth - 2 + bodrder05, start_r + offsetTop - 2);\n            luckysheetTableContent.lineTo(Store.rowHeaderWidth - 2 + bodrder05, end_r + offsetTop - 2);\n            luckysheetTableContent.lineWidth = 1;\n            luckysheetTableContent.strokeStyle = luckysheetdefaultstyle.strokeStyle;\n            luckysheetTableContent.stroke();\n            luckysheetTableContent.closePath();    //行标题栏横线,horizen\n            //行标题栏横线,horizen\n            if (Store.config['rowhidden'] != null && Store.config['rowhidden'][r] == null && Store.config['rowhidden'][r + 1] != null) {\n                luckysheetTableContent.beginPath();\n                luckysheetTableContent.moveTo(-1, end_r + offsetTop - 4 + bodrder05);\n                luckysheetTableContent.lineTo(Store.rowHeaderWidth - 1, end_r + offsetTop - 4 + bodrder05);    // luckysheetTableContent.lineWidth = 1;\n                                                                                                               // luckysheetTableContent.strokeStyle = luckysheetdefaultstyle.strokeStyle;\n                // luckysheetTableContent.lineWidth = 1;\n                // luckysheetTableContent.strokeStyle = luckysheetdefaultstyle.strokeStyle;\n                luckysheetTableContent.closePath();\n                luckysheetTableContent.stroke();\n            } else if (Store.config['rowhidden'] == null || Store.config['rowhidden'][r] == null) {\n                luckysheetTableContent.beginPath();\n                luckysheetTableContent.moveTo(-1, end_r + offsetTop - 2 + bodrder05);\n                luckysheetTableContent.lineTo(Store.rowHeaderWidth - 1, end_r + offsetTop - 2 + bodrder05);    // luckysheetTableContent.lineWidth = 1;\n                                                                                                               // luckysheetTableContent.strokeStyle = luckysheetdefaultstyle.strokeStyle;\n                // luckysheetTableContent.lineWidth = 1;\n                // luckysheetTableContent.strokeStyle = luckysheetdefaultstyle.strokeStyle;\n                luckysheetTableContent.closePath();\n                luckysheetTableContent.stroke();\n            }\n            if (Store.config['rowhidden'] != null && Store.config['rowhidden'][r - 1] != null && preEndR != null) {\n                luckysheetTableContent.beginPath();\n                luckysheetTableContent.moveTo(-1, preEndR + offsetTop + bodrder05);\n                luckysheetTableContent.lineTo(Store.rowHeaderWidth - 1, preEndR + offsetTop + bodrder05);\n                luckysheetTableContent.closePath();\n                luckysheetTableContent.stroke();\n            }\n            preEndR = end_r;    //列标题单元格渲染前触发，return false 则不渲染该单元格\n            //列标题单元格渲染前触发，return false 则不渲染该单元格\n            luckysheetConfigsetting.createHookFunction('rowTitleCellRenderAfter', r + 1, {\n                r: r,\n                top: start_r + offsetTop + firstOffset,\n                width: Store.rowHeaderWidth - 1,\n                height: end_r - start_r + 1 + lastOffset - firstOffset\n            }, luckysheetTableContent);\n        }    //行标题栏竖线\n             // luckysheetTableContent.beginPath();\n             // luckysheetTableContent.moveTo(\n             //     (Store.rowHeaderWidth - 2 + 0.5) ,\n             //     (offsetTop - 1) \n             // );\n             // luckysheetTableContent.lineTo(\n             //     (Store.rowHeaderWidth - 2 + 0.5) ,\n             //     (Store.rh_height + offsetTop) \n             // );\n             // luckysheetTableContent.lineWidth = 1;\n             // luckysheetTableContent.strokeStyle = luckysheetdefaultstyle.strokeStyle;\n             // luckysheetTableContent.closePath();\n             // luckysheetTableContent.stroke();\n             //清除canvas左上角区域 防止列标题栏序列号溢出显示\n             // luckysheetTableContent.clearRect(0, 0, Store.rowHeaderWidth , Store.columnHeaderHeight );\n             // Must be restored twice, otherwise it will be enlarged under window.devicePixelRatio = 1.5\n        //行标题栏竖线\n        // luckysheetTableContent.beginPath();\n        // luckysheetTableContent.moveTo(\n        //     (Store.rowHeaderWidth - 2 + 0.5) ,\n        //     (offsetTop - 1) \n        // );\n        // luckysheetTableContent.lineTo(\n        //     (Store.rowHeaderWidth - 2 + 0.5) ,\n        //     (Store.rh_height + offsetTop) \n        // );\n        // luckysheetTableContent.lineWidth = 1;\n        // luckysheetTableContent.strokeStyle = luckysheetdefaultstyle.strokeStyle;\n        // luckysheetTableContent.closePath();\n        // luckysheetTableContent.stroke();\n        //清除canvas左上角区域 防止列标题栏序列号溢出显示\n        // luckysheetTableContent.clearRect(0, 0, Store.rowHeaderWidth , Store.columnHeaderHeight );\n        // Must be restored twice, otherwise it will be enlarged under window.devicePixelRatio = 1.5\n        luckysheetTableContent.restore();\n        luckysheetTableContent.restore();\n    }\n    function luckysheetDrawgridColumnTitle(scrollWidth, drawWidth, offsetLeft) {\n        if (scrollWidth == null) {\n            scrollWidth = $('#luckysheet-cell-main').scrollLeft();\n        }\n        if (drawWidth == null) {\n            drawWidth = Store.luckysheetTableContentHW[0];\n        }\n        if (offsetLeft == null) {\n            offsetLeft = Store.rowHeaderWidth;\n        }\n        let luckysheetTableContent = $('#luckysheetTableContent').get(0).getContext('2d');\n        luckysheetTableContent.save();\n        luckysheetTableContent.scale(Store.devicePixelRatio, Store.devicePixelRatio);\n        luckysheetTableContent.clearRect(offsetLeft, 0, drawWidth, Store.columnHeaderHeight - 1);\n        luckysheetTableContent.font = luckysheetdefaultFont();\n        luckysheetTableContent.textBaseline = luckysheetdefaultstyle.textBaseline;    //基准线 垂直居中\n        //基准线 垂直居中\n        luckysheetTableContent.fillStyle = luckysheetdefaultstyle.fillStyle;\n        let dataset_col_st, dataset_col_ed;\n        dataset_col_st = luckysheet_searcharray(Store.visibledatacolumn, scrollWidth);\n        dataset_col_ed = luckysheet_searcharray(Store.visibledatacolumn, scrollWidth + drawWidth);\n        if (dataset_col_st == -1) {\n            dataset_col_st = 0;\n        }\n        if (dataset_col_ed == -1) {\n            dataset_col_ed = Store.visibledatacolumn.length - 1;\n        }\n        luckysheetTableContent.save();\n        luckysheetTableContent.beginPath();\n        luckysheetTableContent.rect(offsetLeft - 1, 0, drawWidth, Store.columnHeaderHeight - 1);\n        luckysheetTableContent.clip();    // console.log(offsetLeft, 0, drawWidth, Store.columnHeaderHeight -1);\n        // console.log(offsetLeft, 0, drawWidth, Store.columnHeaderHeight -1);\n        let end_c, start_c;\n        let bodrder05 = 0.5;    //Default 0.5\n        //Default 0.5\n        let preEndC;\n        for (let c = dataset_col_st; c <= dataset_col_ed; c++) {\n            if (c == 0) {\n                start_c = -scrollWidth;\n            } else {\n                start_c = Store.visibledatacolumn[c - 1] - scrollWidth;\n            }\n            end_c = Store.visibledatacolumn[c] - scrollWidth;    //若超出绘制区域终止\n                                                                 // if(end_c > scrollWidth + drawWidth+1){\n                                                                 //     break;\n                                                                 // }\n            //若超出绘制区域终止\n            // if(end_c > scrollWidth + drawWidth+1){\n            //     break;\n            // }\n            let abc = chatatABC(c);    //列标题单元格渲染前触发，return false 则不渲染该单元格\n            //列标题单元格渲染前触发，return false 则不渲染该单元格\n            if (!luckysheetConfigsetting.createHookFunction('columnTitleCellRenderBefore', abc, {\n                    c: c,\n                    left: start_c + offsetLeft - 1,\n                    width: end_c - start_c,\n                    height: Store.columnHeaderHeight - 1\n                }, luckysheetTableContent)) {\n                continue;\n            }\n            if (Store.config['colhidden'] != null && Store.config['colhidden'][c] != null) {\n            } else {\n                luckysheetTableContent.fillStyle = '#ffffff';\n                luckysheetTableContent.fillRect(start_c + offsetLeft - 1, 0, end_c - start_c, Store.columnHeaderHeight - 1);\n                luckysheetTableContent.fillStyle = '#000000';    //列标题栏序列号\n                //列标题栏序列号\n                luckysheetTableContent.save();    //save scale before draw text\n                //save scale before draw text\n                luckysheetTableContent.scale(Store.zoomRatio, Store.zoomRatio);\n                let textMetrics = getMeasureText(abc, luckysheetTableContent);    //luckysheetTableContent.measureText(abc);\n                //luckysheetTableContent.measureText(abc);\n                let horizonAlignPos = Math.round(start_c + (end_c - start_c) / 2 + offsetLeft - textMetrics.width / 2);\n                let verticalAlignPos = Math.round(Store.columnHeaderHeight / 2);\n                luckysheetTableContent.fillText(abc, horizonAlignPos / Store.zoomRatio, verticalAlignPos / Store.zoomRatio);\n                luckysheetTableContent.restore();    //restore scale after draw text\n            }    //列标题栏竖线 vertical\n            //restore scale after draw text\n            //列标题栏竖线 vertical\n            if (Store.config['colhidden'] != null && Store.config['colhidden'][c] == null && Store.config['colhidden'][c + 1] != null) {\n                luckysheetTableContent.beginPath();\n                luckysheetTableContent.moveTo(end_c + offsetLeft - 4 + bodrder05, 0);\n                luckysheetTableContent.lineTo(end_c + offsetLeft - 4 + bodrder05, Store.columnHeaderHeight - 2);\n                luckysheetTableContent.lineWidth = 1;\n                luckysheetTableContent.strokeStyle = luckysheetdefaultstyle.strokeStyle;\n                luckysheetTableContent.closePath();\n                luckysheetTableContent.stroke();\n            } else if (Store.config['colhidden'] == null || Store.config['colhidden'][c] == null) {\n                luckysheetTableContent.beginPath();\n                luckysheetTableContent.moveTo(end_c + offsetLeft - 2 + bodrder05, 0);\n                luckysheetTableContent.lineTo(end_c + offsetLeft - 2 + bodrder05, Store.columnHeaderHeight - 2);\n                luckysheetTableContent.lineWidth = 1;\n                luckysheetTableContent.strokeStyle = luckysheetdefaultstyle.strokeStyle;\n                luckysheetTableContent.closePath();\n                luckysheetTableContent.stroke();\n            }\n            if (Store.config['colhidden'] != null && Store.config['colhidden'][c - 1] != null && preEndC != null) {\n                luckysheetTableContent.beginPath();\n                luckysheetTableContent.moveTo(preEndC + offsetLeft + bodrder05, 0);\n                luckysheetTableContent.lineTo(preEndC + offsetLeft + bodrder05, Store.columnHeaderHeight - 2);    // luckysheetTableContent.lineWidth = 1;\n                                                                                                                  // luckysheetTableContent.strokeStyle = luckysheetdefaultstyle.strokeStyle;\n                // luckysheetTableContent.lineWidth = 1;\n                // luckysheetTableContent.strokeStyle = luckysheetdefaultstyle.strokeStyle;\n                luckysheetTableContent.closePath();\n                luckysheetTableContent.stroke();\n            }    //horizen\n            //horizen\n            luckysheetTableContent.beginPath();\n            luckysheetTableContent.moveTo(start_c + offsetLeft - 1, Store.columnHeaderHeight - 2 + bodrder05);\n            luckysheetTableContent.lineTo(end_c + offsetLeft - 1, Store.columnHeaderHeight - 2 + bodrder05);    // luckysheetTableContent.lineWidth = 1;\n                                                                                                                // luckysheetTableContent.strokeStyle = luckysheetdefaultstyle.strokeStyle;        \n            // luckysheetTableContent.lineWidth = 1;\n            // luckysheetTableContent.strokeStyle = luckysheetdefaultstyle.strokeStyle;        \n            luckysheetTableContent.stroke();\n            luckysheetTableContent.closePath();\n            preEndC = end_c;\n            luckysheetConfigsetting.createHookFunction('columnTitleCellRenderAfter', abc, {\n                c: c,\n                left: start_c + offsetLeft - 1,\n                width: end_c - start_c,\n                height: Store.columnHeaderHeight - 1\n            }, luckysheetTableContent);\n        }    //列标题栏横线\n             // luckysheetTableContent.beginPath();\n             // luckysheetTableContent.moveTo(\n             //     (offsetLeft - 1) ,\n             //     (Store.columnHeaderHeight - 2 + 0.5) \n             // );\n             // luckysheetTableContent.lineTo(\n             //     (Store.ch_width + offsetLeft - 2) ,\n             //     (Store.columnHeaderHeight - 2 + 0.5) \n             // );\n             // luckysheetTableContent.lineWidth = 1;\n             // luckysheetTableContent.strokeStyle = luckysheetdefaultstyle.strokeStyle;\n             // luckysheetTableContent.closePath();\n             // luckysheetTableContent.stroke();\n             //清除canvas左上角区域 防止列标题栏序列号溢出显示\n             // luckysheetTableContent.clearRect(0, 0, Store.rowHeaderWidth , Store.columnHeaderHeight );\n             // Must be restored twice, otherwise it will be enlarged under window.devicePixelRatio = 1.5\n        //列标题栏横线\n        // luckysheetTableContent.beginPath();\n        // luckysheetTableContent.moveTo(\n        //     (offsetLeft - 1) ,\n        //     (Store.columnHeaderHeight - 2 + 0.5) \n        // );\n        // luckysheetTableContent.lineTo(\n        //     (Store.ch_width + offsetLeft - 2) ,\n        //     (Store.columnHeaderHeight - 2 + 0.5) \n        // );\n        // luckysheetTableContent.lineWidth = 1;\n        // luckysheetTableContent.strokeStyle = luckysheetdefaultstyle.strokeStyle;\n        // luckysheetTableContent.closePath();\n        // luckysheetTableContent.stroke();\n        //清除canvas左上角区域 防止列标题栏序列号溢出显示\n        // luckysheetTableContent.clearRect(0, 0, Store.rowHeaderWidth , Store.columnHeaderHeight );\n        // Must be restored twice, otherwise it will be enlarged under window.devicePixelRatio = 1.5\n        luckysheetTableContent.restore();\n        luckysheetTableContent.restore();\n    }\n    function luckysheetDrawMain(scrollWidth, scrollHeight, drawWidth, drawHeight, offsetLeft, offsetTop, columnOffsetCell, rowOffsetCell, mycanvas) {\n        if (Store.flowdata == null) {\n            return;\n        }\n        let sheetFile = Store.getSheetByIndex();    // console.trace();\n        // console.trace();\n        clearTimeout(Store.measureTextCacheTimeOut);    //参数未定义处理\n        //参数未定义处理\n        if (scrollWidth == null) {\n            scrollWidth = $('#luckysheet-cell-main').scrollLeft();\n        }\n        if (scrollHeight == null) {\n            scrollHeight = $('#luckysheet-cell-main').scrollTop();\n        }\n        if (drawWidth == null) {\n            drawWidth = Store.luckysheetTableContentHW[0];\n        }\n        if (drawHeight == null) {\n            drawHeight = Store.luckysheetTableContentHW[1];\n        }\n        if (offsetLeft == null) {\n            offsetLeft = Store.rowHeaderWidth;\n        }\n        if (offsetTop == null) {\n            offsetTop = Store.columnHeaderHeight;\n        }\n        if (columnOffsetCell == null) {\n            columnOffsetCell = 0;\n        }\n        if (rowOffsetCell == null) {\n            rowOffsetCell = 0;\n        }    //表格canvas\n        //表格canvas\n        let luckysheetTableContent = null;\n        if (mycanvas == null) {\n            luckysheetTableContent = $('#luckysheetTableContent').get(0).getContext('2d');\n        } else {\n            if (getObjType(mycanvas) == 'object') {\n                try {\n                    luckysheetTableContent = mycanvas.get(0).getContext('2d');\n                } catch (err) {\n                    luckysheetTableContent = mycanvas;\n                }\n            } else {\n                luckysheetTableContent = $('#' + mycanvas).get(0).getContext('2d');\n            }\n        }\n        luckysheetTableContent.save();\n        luckysheetTableContent.scale(Store.devicePixelRatio, Store.devicePixelRatio);\n        luckysheetTableContent.clearRect(0, 0, Store.luckysheetTableContentHW[0], Store.luckysheetTableContentHW[1]);    //表格渲染区域 起止行列下标\n        //表格渲染区域 起止行列下标\n        let dataset_row_st, dataset_row_ed, dataset_col_st, dataset_col_ed;\n        dataset_row_st = luckysheet_searcharray(Store.visibledatarow, scrollHeight);\n        dataset_row_ed = luckysheet_searcharray(Store.visibledatarow, scrollHeight + drawHeight);\n        if (dataset_row_st == -1) {\n            dataset_row_st = 0;\n        }\n        dataset_row_st += rowOffsetCell;\n        if (dataset_row_ed == -1) {\n            dataset_row_ed = Store.visibledatarow.length - 1;\n        }\n        dataset_row_ed += rowOffsetCell;\n        if (dataset_row_ed >= Store.visibledatarow.length) {\n            dataset_row_ed = Store.visibledatarow.length - 1;\n        }\n        dataset_col_st = luckysheet_searcharray(Store.visibledatacolumn, scrollWidth);\n        dataset_col_ed = luckysheet_searcharray(Store.visibledatacolumn, scrollWidth + drawWidth);\n        if (dataset_col_st == -1) {\n            dataset_col_st = 0;\n        }\n        dataset_col_st += columnOffsetCell;\n        if (dataset_col_ed == -1) {\n            dataset_col_ed = Store.visibledatacolumn.length - 1;\n        }\n        dataset_col_ed += columnOffsetCell;\n        if (dataset_col_ed >= Store.visibledatacolumn.length) {\n            dataset_col_ed = Store.visibledatacolumn.length - 1;\n        }    //表格渲染区域 起止行列坐标\n        //表格渲染区域 起止行列坐标\n        let fill_row_st, fill_row_ed, fill_col_st, fill_col_ed;\n        if (dataset_row_st == 0) {\n            fill_row_st = 0;\n        } else {\n            fill_row_st = Store.visibledatarow[dataset_row_st - 1];\n        }\n        fill_row_ed = Store.visibledatarow[dataset_row_ed];\n        if (dataset_col_st == 0) {\n            fill_col_st = 0;\n        } else {\n            fill_col_st = Store.visibledatacolumn[dataset_col_st - 1];\n        }\n        fill_col_ed = Store.visibledatacolumn[dataset_col_ed];    //表格canvas 初始化处理\n        //表格canvas 初始化处理\n        luckysheetTableContent.fillStyle = '#ffffff';\n        luckysheetTableContent.fillRect(offsetLeft - 1, offsetTop - 1, fill_col_ed - scrollWidth, fill_row_ed - scrollHeight);\n        luckysheetTableContent.font = luckysheetdefaultFont();    // luckysheetTableContent.textBaseline = \"top\";\n        // luckysheetTableContent.textBaseline = \"top\";\n        luckysheetTableContent.fillStyle = luckysheetdefaultstyle.fillStyle;    //表格渲染区域 非空单元格行列 起止坐标\n        //表格渲染区域 非空单元格行列 起止坐标\n        let cellupdate = [];\n        let mergeCache = {};\n        let borderOffset = {};\n        let bodrder05 = 0.5;    //Default 0.5\n                                // 钩子函数\n        //Default 0.5\n        // 钩子函数\n        luckysheetConfigsetting.createHookFunction('cellAllRenderBefore', Store.flowdata, sheetFile, luckysheetTableContent);\n        for (let r = dataset_row_st; r <= dataset_row_ed; r++) {\n            let start_r;\n            if (r == 0) {\n                start_r = -scrollHeight - 1;\n            } else {\n                start_r = Store.visibledatarow[r - 1] - scrollHeight - 1;\n            }\n            let end_r = Store.visibledatarow[r] - scrollHeight;\n            if (Store.config['rowhidden'] != null && Store.config['rowhidden'][r] != null) {\n                continue;\n            }\n            for (let c = dataset_col_st; c <= dataset_col_ed; c++) {\n                let start_c;\n                if (c == 0) {\n                    start_c = -scrollWidth;\n                } else {\n                    start_c = Store.visibledatacolumn[c - 1] - scrollWidth;\n                }\n                let end_c = Store.visibledatacolumn[c] - scrollWidth;\n                if (Store.config['colhidden'] != null && Store.config['colhidden'][c] != null) {\n                    continue;\n                }\n                let firstcolumnlen = Store.defaultcollen;\n                if (Store.config['columnlen'] != null && Store.config['columnlen'][c] != null) {\n                    firstcolumnlen = Store.config['columnlen'][c];\n                }\n                if (Store.flowdata[r] != null && Store.flowdata[r][c] != null) {\n                    let value = Store.flowdata[r][c];\n                    if (getObjType(value) == 'object' && 'mc' in value) {\n                        borderOffset[r + '_' + c] = {\n                            'start_r': start_r,\n                            'start_c': start_c,\n                            'end_r': end_r,\n                            'end_c': end_c\n                        };\n                        if ('rs' in value['mc']) {\n                            let key = 'r' + r + 'c' + c;\n                            mergeCache[key] = cellupdate.length;\n                        } else {\n                            let key = 'r' + value['mc'].r + 'c' + value['mc'].c;\n                            let margeMain = cellupdate[mergeCache[key]];\n                            if (margeMain == null) {\n                                mergeCache[key] = cellupdate.length;\n                                cellupdate.push({\n                                    'r': r,\n                                    'c': c,\n                                    'start_c': start_c,\n                                    'start_r': start_r,\n                                    'end_r': end_r,\n                                    'end_c': end_c,\n                                    'firstcolumnlen': firstcolumnlen\n                                });\n                            } else {\n                                if (margeMain.c == c) {\n                                    margeMain.end_r += end_r - start_r - 1;\n                                }\n                                if (margeMain.r == r) {\n                                    margeMain.end_c += end_c - start_c;\n                                    margeMain.firstcolumnlen += firstcolumnlen;\n                                }\n                            }\n                            continue;\n                        }\n                    }\n                } else {\n                }\n                cellupdate.push({\n                    'r': r,\n                    'c': c,\n                    'start_r': start_r,\n                    'start_c': start_c,\n                    'end_r': end_r,\n                    'end_c': end_c,\n                    'firstcolumnlen': firstcolumnlen\n                });\n                borderOffset[r + '_' + c] = {\n                    'start_r': start_r,\n                    'start_c': start_c,\n                    'end_r': end_r,\n                    'end_c': end_c\n                };\n            }\n        }    //动态数组公式计算\n        //动态数组公式计算\n        let dynamicArray_compute = dynamicArrayCompute(Store.luckysheetfile[getSheetIndex(Store.currentSheetIndex)]['dynamicArray']);    //交替颜色计算\n        //交替颜色计算\n        let af_compute = alternateformat.getComputeMap();    //条件格式计算\n        //条件格式计算\n        let cf_compute = conditionformat.getComputeMap();    //表格渲染区域 溢出单元格配置保存\n        //表格渲染区域 溢出单元格配置保存\n        let cellOverflowMap = getCellOverflowMap(luckysheetTableContent, dataset_col_st, dataset_col_ed, dataset_row_st, dataset_row_ed);\n        let mcArr = [];\n        for (let cud = 0; cud < cellupdate.length; cud++) {\n            let item = cellupdate[cud];\n            let r = item.r, c = item.c, start_r = item.start_r, start_c = item.start_c, end_r = item.end_r, end_c = item.end_c;\n            let firstcolumnlen = item.firstcolumnlen;\n            if (Store.flowdata[r] == null) {\n                continue;\n            }    // //有值单元格渲染前\n                 // if(!luckysheetConfigsetting.createHookFunction(\"cellRenderBefore\", Store.flowdata[r][c], {\n                 //     r:r,\n                 //     c:c,\n                 //     \"start_r\": cellsize[1],\n                 //     \"start_c\":cellsize[0], \n                 //     \"end_r\": cellsize[3], \n                 //     \"end_c\": cellsize[2]  \n                 // }, sheetFile,luckysheetTableContent)){ continue; }\n            // //有值单元格渲染前\n            // if(!luckysheetConfigsetting.createHookFunction(\"cellRenderBefore\", Store.flowdata[r][c], {\n            //     r:r,\n            //     c:c,\n            //     \"start_r\": cellsize[1],\n            //     \"start_c\":cellsize[0], \n            //     \"end_r\": cellsize[3], \n            //     \"end_c\": cellsize[2]  \n            // }, sheetFile,luckysheetTableContent)){ continue; }\n            if (Store.flowdata[r][c] == null) {\n                //空单元格\n                nullCellRender(r, c, start_r, start_c, end_r, end_c, luckysheetTableContent, af_compute, cf_compute, offsetLeft, offsetTop, dynamicArray_compute, cellOverflowMap, dataset_col_st, dataset_col_ed, scrollHeight, scrollWidth, bodrder05);\n            } else {\n                let cell = Store.flowdata[r][c];\n                let value = null;\n                if (typeof cell == 'object' && 'mc' in cell) {\n                    mcArr.push(cellupdate[cud]);    // continue;\n                } else\n                    // continue;\n                    {\n                        value = getRealCellValue(r, c);\n                    }\n                if (value == null || value.toString().length == 0) {\n                    nullCellRender(r, c, start_r, start_c, end_r, end_c, luckysheetTableContent, af_compute, cf_compute, offsetLeft, offsetTop, dynamicArray_compute, cellOverflowMap, dataset_col_st, dataset_col_ed, scrollHeight, scrollWidth, bodrder05);    //sparklines渲染\n                    //sparklines渲染\n                    let borderfix = cells.borderfix(Store.flowdata, r, c);\n                    let cellsize = [\n                        start_c + offsetLeft + borderfix[0],\n                        start_r + offsetTop + borderfix[1],\n                        end_c - start_c - 3 + borderfix[2],\n                        end_r - start_r - 3 - 1 + borderfix[3]\n                    ];\n                    sparklinesRender(r, c, cellsize[0], cellsize[1], 'luckysheetTableContent', luckysheetTableContent);\n                } else {\n                    if (r + '_' + c in dynamicArray_compute) {\n                        //动态数组公式\n                        value = dynamicArray_compute[r + '_' + c].v;\n                    }\n                    cellRender(r, c, start_r, start_c, end_r, end_c, value, luckysheetTableContent, af_compute, cf_compute, offsetLeft, offsetTop, dynamicArray_compute, cellOverflowMap, dataset_col_st, dataset_col_ed, scrollHeight, scrollWidth, bodrder05);\n                }\n            }    // luckysheetConfigsetting.createHookFunction(\"cellRenderAfter\", Store.flowdata[r][c], {\n                 //     r:r,\n                 //     c:c,\n                 //     \"start_r\": start_r,\n                 //     \"start_c\": start_c, \n                 //     \"end_r\": end_r, \n                 //     \"end_c\": end_c \n                 // }, sheetFile,luckysheetTableContent)\n        }    //合并单元格再处理\n        // luckysheetConfigsetting.createHookFunction(\"cellRenderAfter\", Store.flowdata[r][c], {\n        //     r:r,\n        //     c:c,\n        //     \"start_r\": start_r,\n        //     \"start_c\": start_c, \n        //     \"end_r\": end_r, \n        //     \"end_c\": end_c \n        // }, sheetFile,luckysheetTableContent)\n        //合并单元格再处理\n        for (let m = 0; m < mcArr.length; m++) {\n            let item = mcArr[m];\n            let r = item.r, c = item.c, start_r = item.start_r, start_c = item.start_c, end_r = item.end_r - 1, end_c = item.end_c - 1;\n            let firstcolumnlen = item.firstcolumnlen;\n            let cell = Store.flowdata[r][c];\n            let value = null;\n            let margeMaindata = cell['mc'];\n            value = getRealCellValue(margeMaindata.r, margeMaindata.c);\n            r = margeMaindata.r;\n            c = margeMaindata.c;\n            let mainCell = Store.flowdata[r][c];\n            if (c == 0) {\n                start_c = -scrollWidth;\n            } else {\n                start_c = Store.visibledatacolumn[c - 1] - scrollWidth;\n            }\n            if (r == 0) {\n                start_r = -scrollHeight - 1;\n            } else {\n                start_r = Store.visibledatarow[r - 1] - scrollHeight - 1;\n            }\n            end_r = Store.visibledatarow[r + mainCell['mc'].rs - 1] - scrollHeight;\n            end_c = Store.visibledatacolumn[c + mainCell['mc'].cs - 1] - scrollWidth;\n            if (value == null || value.toString().length == 0) {\n                nullCellRender(r, c, start_r, start_c, end_r, end_c, luckysheetTableContent, af_compute, cf_compute, offsetLeft, offsetTop, dynamicArray_compute, cellOverflowMap, dataset_col_st, dataset_col_ed, scrollHeight, scrollWidth, bodrder05, true);    //sparklines渲染\n                //sparklines渲染\n                let borderfix = cells.borderfix(Store.flowdata, r, c);\n                let cellsize = [\n                    start_c + offsetLeft + borderfix[0],\n                    start_r + offsetTop + borderfix[1],\n                    end_c - start_c - 3 + borderfix[2],\n                    end_r - start_r - 3 - 1 + borderfix[3]\n                ];\n                sparklinesRender(r, c, cellsize[0], cellsize[1], 'luckysheetTableContent', luckysheetTableContent);\n            } else {\n                if (r + '_' + c in dynamicArray_compute) {\n                    //动态数组公式\n                    value = dynamicArray_compute[r + '_' + c].v;\n                }\n                cellRender(r, c, start_r, start_c, end_r, end_c, value, luckysheetTableContent, af_compute, cf_compute, offsetLeft, offsetTop, dynamicArray_compute, cellOverflowMap, dataset_col_st, dataset_col_ed, scrollHeight, scrollWidth, bodrder05, true);\n            }\n        }    //数据透视表边框渲染\n        //数据透视表边框渲染\n        for (let r = dataset_row_st; r <= dataset_row_ed; r++) {\n            let start_r;\n            if (r == 0) {\n                start_r = -scrollHeight - 1;\n            } else {\n                start_r = Store.visibledatarow[r - 1] - scrollHeight - 1;\n            }\n            let end_r = Store.visibledatarow[r] - scrollHeight;\n            for (let c = dataset_col_st; c <= dataset_col_ed; c++) {\n                let start_c;\n                if (c == 0) {\n                    start_c = -scrollWidth;\n                } else {\n                    start_c = Store.visibledatacolumn[c - 1] - scrollWidth;\n                }\n                let end_c = Store.visibledatacolumn[c] - scrollWidth;    //数据透视表\n                //数据透视表\n                if (!!Store.luckysheetcurrentisPivotTable && pivotTable.drawPivotTable) {\n                    if ((c == 0 || c == 5) && r <= 11) {\n                        luckysheetTableContent.beginPath();\n                        luckysheetTableContent.moveTo(end_c - 2 + bodrder05 + offsetLeft, start_r + offsetTop);\n                        luckysheetTableContent.lineTo(end_c - 2 + bodrder05 + offsetLeft, end_r - 2 + bodrder05 + offsetTop);\n                        luckysheetTableContent.lineWidth = 1;\n                        luckysheetTableContent.strokeStyle = '#000000';\n                        luckysheetTableContent.closePath();\n                        luckysheetTableContent.stroke();\n                    }\n                    if ((r == 2 || r == 11) && c <= 5) {\n                        luckysheetTableContent.beginPath();\n                        luckysheetTableContent.moveTo(start_c - 1 + offsetLeft, end_r - 2 + bodrder05 + offsetTop);\n                        luckysheetTableContent.lineTo(end_c - 2 + bodrder05 + offsetLeft, end_r - 2 + bodrder05 + offsetTop);\n                        luckysheetTableContent.lineWidth = 1;\n                        luckysheetTableContent.strokeStyle = '#000000';\n                        luckysheetTableContent.closePath();\n                        luckysheetTableContent.stroke();\n                    }\n                    if (r == 6 && c == 3) {\n                        luckysheetTableContent.save();\n                        luckysheetTableContent.font = 'bold 30px Arial';\n                        luckysheetTableContent.fillStyle = '#626675';\n                        luckysheetTableContent.textAlign = 'center';\n                        luckysheetTableContent.fillText(locale().pivotTable.title, start_c + (end_c - start_c) / 2 + 4 + offsetLeft, start_r + (end_r - start_r) / 2 - 1 + offsetTop);\n                        luckysheetTableContent.restore();\n                    }\n                } else if (!!Store.luckysheetcurrentisPivotTable) {\n                    if (c < pivotTable.pivotTableBoundary[1] && r < pivotTable.pivotTableBoundary[0]) {\n                        luckysheetTableContent.beginPath();\n                        luckysheetTableContent.moveTo(end_c - 2 + bodrder05 + offsetLeft, start_r + offsetTop);\n                        luckysheetTableContent.lineTo(end_c - 2 + bodrder05 + offsetLeft, end_r - 2 + bodrder05 + offsetTop);\n                        luckysheetTableContent.lineWidth = 1;\n                        luckysheetTableContent.strokeStyle = '#000000';\n                        luckysheetTableContent.closePath();\n                        luckysheetTableContent.stroke();\n                        luckysheetTableContent.beginPath();\n                        luckysheetTableContent.moveTo(start_c - 1 + offsetLeft, end_r - 2 + bodrder05 + offsetTop);\n                        luckysheetTableContent.lineTo(end_c - 2 + offsetLeft, end_r - 2 + bodrder05 + offsetTop);\n                        luckysheetTableContent.lineWidth = 1;\n                        luckysheetTableContent.strokeStyle = '#000000';\n                        luckysheetTableContent.closePath();\n                        luckysheetTableContent.stroke();\n                    }\n                }\n            }\n        }    //边框单独渲染\n        //边框单独渲染\n        if (Store.config['borderInfo'] != null && Store.config['borderInfo'].length > 0) {\n            //边框渲染\n            let borderLeftRender = function (style, color, start_r, start_c, end_r, end_c, offsetLeft, offsetTop, canvas) {\n                let linetype = style;\n                let m_st = start_c - 2 + bodrder05 + offsetLeft;\n                let m_ed = start_r + offsetTop - 1;\n                let line_st = start_c - 2 + bodrder05 + offsetLeft;\n                let line_ed = end_r - 2 + bodrder05 + offsetTop;\n                canvas.save();\n                setLineDash(canvas, linetype, 'v', m_st, m_ed, line_st, line_ed);\n                canvas.strokeStyle = color;\n                canvas.stroke();\n                canvas.closePath();\n                canvas.restore();\n            };\n            let borderRightRender = function (style, color, start_r, start_c, end_r, end_c, offsetLeft, offsetTop, canvas) {\n                let linetype = style;\n                let m_st = end_c - 2 + bodrder05 + offsetLeft;\n                let m_ed = start_r + offsetTop - 1;\n                let line_st = end_c - 2 + bodrder05 + offsetLeft;\n                let line_ed = end_r - 2 + bodrder05 + offsetTop;\n                canvas.save();\n                setLineDash(canvas, linetype, 'v', m_st, m_ed, line_st, line_ed);\n                canvas.strokeStyle = color;\n                canvas.stroke();\n                canvas.closePath();\n                canvas.restore();\n            };\n            let borderBottomRender = function (style, color, start_r, start_c, end_r, end_c, offsetLeft, offsetTop, canvas) {\n                let linetype = style;\n                let m_st = start_c - 2 + bodrder05 + offsetLeft;\n                let m_ed = end_r - 2 + bodrder05 + offsetTop;\n                let line_st = end_c - 2 + bodrder05 + offsetLeft;\n                let line_ed = end_r - 2 + bodrder05 + offsetTop;\n                canvas.save();\n                setLineDash(canvas, linetype, 'h', m_st, m_ed, line_st, line_ed);\n                canvas.strokeStyle = color;\n                canvas.stroke();\n                canvas.closePath();\n                canvas.restore();\n            };\n            let borderTopRender = function (style, color, start_r, start_c, end_r, end_c, offsetLeft, offsetTop, canvas) {\n                let linetype = style;\n                let m_st = start_c - 2 + bodrder05 + offsetLeft;\n                let m_ed = start_r - 1 + bodrder05 + offsetTop;\n                let line_st = end_c - 2 + bodrder05 + offsetLeft;\n                let line_ed = start_r - 1 + bodrder05 + offsetTop;\n                canvas.save();\n                setLineDash(canvas, linetype, 'h', m_st, m_ed, line_st, line_ed);\n                canvas.strokeStyle = color;\n                canvas.stroke();\n                canvas.closePath();\n                canvas.restore();\n            };\n            let borderInfoCompute = getBorderInfoComputeRange(dataset_row_st, dataset_row_ed, dataset_col_st, dataset_col_ed);\n            for (let x in borderInfoCompute) {\n                //let bd_r = x.split(\"_\")[0], bd_c = x.split(\"_\")[1];\n                let bd_r = x.substr(0, x.indexOf('_'));\n                let bd_c = x.substr(x.indexOf('_') + 1);    // if(bd_r < dataset_row_st || bd_r > dataset_row_ed || bd_c < dataset_col_st || bd_c > dataset_col_ed){\n                                                            //     continue;\n                                                            // }\n                // if(bd_r < dataset_row_st || bd_r > dataset_row_ed || bd_c < dataset_col_st || bd_c > dataset_col_ed){\n                //     continue;\n                // }\n                if (borderOffset[bd_r + '_' + bd_c]) {\n                    let start_r = borderOffset[bd_r + '_' + bd_c].start_r;\n                    let start_c = borderOffset[bd_r + '_' + bd_c].start_c;\n                    let end_r = borderOffset[bd_r + '_' + bd_c].end_r;\n                    let end_c = borderOffset[bd_r + '_' + bd_c].end_c;\n                    let cellOverflow_colInObj = cellOverflow_colIn(cellOverflowMap, bd_r, bd_c, dataset_col_st, dataset_col_ed);\n                    let borderLeft = borderInfoCompute[x].l;\n                    if (borderLeft != null && (!cellOverflow_colInObj.colIn || cellOverflow_colInObj.stc == bd_c)) {\n                        borderLeftRender(borderLeft.style, borderLeft.color, start_r, start_c, end_r, end_c, offsetLeft, offsetTop, luckysheetTableContent);\n                    }\n                    let borderRight = borderInfoCompute[x].r;\n                    if (borderRight != null && (!cellOverflow_colInObj.colIn || cellOverflow_colInObj.colLast)) {\n                        borderRightRender(borderRight.style, borderRight.color, start_r, start_c, end_r, end_c, offsetLeft, offsetTop, luckysheetTableContent);\n                    }\n                    let borderTop = borderInfoCompute[x].t;\n                    if (borderTop != null) {\n                        borderTopRender(borderTop.style, borderTop.color, start_r, start_c, end_r, end_c, offsetLeft, offsetTop, luckysheetTableContent);\n                    }\n                    let borderBottom = borderInfoCompute[x].b;\n                    if (borderBottom != null) {\n                        borderBottomRender(borderBottom.style, borderBottom.color, start_r, start_c, end_r, end_c, offsetLeft, offsetTop, luckysheetTableContent);\n                    }\n                }\n            }\n        }    //渲染表格时有尾列时，清除右边灰色区域，防止表格有值溢出\n        //渲染表格时有尾列时，清除右边灰色区域，防止表格有值溢出\n        if (dataset_col_ed == Store.visibledatacolumn.length - 1) {\n            luckysheetTableContent.clearRect(fill_col_ed - scrollWidth + offsetLeft - 1, offsetTop - 1, Store.ch_width - Store.visibledatacolumn[dataset_col_ed], fill_row_ed - scrollHeight);\n        }\n        luckysheetTableContent.restore();\n        Store.measureTextCacheTimeOut = setTimeout(() => {\n            Store.measureTextCache = {};\n            Store.measureTextCellInfoCache = {};\n            Store.cellOverflowMapCache = {};\n        }, 100);\n    } \n    //sparklines渲染\n    let sparklinesRender = function (r, c, offsetX, offsetY, canvasid, ctx) {\n        if (Store.flowdata[r] == null || Store.flowdata[r][c] == null) {\n            return;\n        }\n        let sparklines = Store.flowdata[r][c].spl;\n        if (sparklines != null) {\n            if (typeof sparklines == 'string') {\n                sparklines = new Function('return ' + sparklines)();\n            }\n            if (getObjType(sparklines) == 'object') {\n                let temp1 = sparklines;\n                let x = temp1.offsetX;\n                let y = temp1.offsetY;\n                x = x == null ? 0 : x;\n                y = y == null ? 0 : y;\n                luckysheetSparkline.render(temp1.shapeseq, temp1.shapes, offsetX + x, offsetY + y, temp1.pixelWidth, temp1.pixelHeight, canvasid, ctx);\n            } else if (getObjType(sparklines) == 'array' && getObjType(sparklines[0]) == 'object') {\n                for (let i = 0; i < sparklines.length; i++) {\n                    let temp1 = sparklines[i];\n                    let x = temp1.offsetX;\n                    let y = temp1.offsetY;\n                    x = x == null ? 0 : x;\n                    y = y == null ? 0 : y;\n                    luckysheetSparkline.render(temp1.shapeseq, temp1.shapes, offsetX + x, offsetY + y, temp1.pixelWidth, temp1.pixelHeight, canvasid, ctx);\n                }\n            }\n        }\n    }; \n    //空白单元格渲染 \n    let nullCellRender = function (r, c, start_r, start_c, end_r, end_c, luckysheetTableContent, af_compute, cf_compute, offsetLeft, offsetTop, dynamicArray_compute, cellOverflowMap, dataset_col_st, dataset_col_ed, scrollHeight, scrollWidth, bodrder05, isMerge) {\n        let checksAF = alternateformat.checksAF(r, c, af_compute);    //交替颜色\n        //交替颜色\n        let checksCF = conditionformat.checksCF(r, c, cf_compute);    //条件格式\n        //条件格式\n        let borderfix = cells.borderfix(Store.flowdata, r, c);    //背景色\n        //背景色\n        let fillStyle = cells.checkstatus(Store.flowdata, r, c, 'bg');\n        if (checksAF != null && checksAF[1] != null) {\n            //交替颜色 \n            fillStyle = checksAF[1];\n        }\n        if (checksCF != null && checksCF['cellColor'] != null) {\n            //条件格式 \n            fillStyle = checksCF['cellColor'];\n        }\n        if (Store.flowdata[r][c] != null && Store.flowdata[r][c].tc != null) {\n            //标题色\n            fillStyle = Store.flowdata[r][c].tc;\n        }\n        if (fillStyle == null) {\n            luckysheetTableContent.fillStyle = '#FFFFFF';\n        } else {\n            luckysheetTableContent.fillStyle = fillStyle;\n        }\n        let cellsize = [\n            start_c + offsetLeft + borderfix[0],\n            start_r + offsetTop + borderfix[1],\n            end_c - start_c + borderfix[2] - (!!isMerge ? 1 : 0),\n            end_r - start_r + borderfix[3]\n        ];    //单元格渲染前，考虑到合并单元格会再次渲染一遍，统一放到这里\n        //单元格渲染前，考虑到合并单元格会再次渲染一遍，统一放到这里\n        if (!luckysheetConfigsetting.createHookFunction('cellRenderBefore', Store.flowdata[r][c], {\n                r: r,\n                c: c,\n                'start_r': cellsize[1],\n                'start_c': cellsize[0],\n                'end_r': cellsize[3] + cellsize[1],\n                'end_c': cellsize[2] + cellsize[0]\n            }, Store.getSheetByIndex(), luckysheetTableContent)) {\n            return;\n        }\n        luckysheetTableContent.fillRect(cellsize[0], cellsize[1], cellsize[2], cellsize[3]);\n        if (r + '_' + c in dynamicArray_compute) {\n            let value = dynamicArray_compute[r + '_' + c].v;\n            luckysheetTableContent.fillStyle = '#000000';    //文本宽度和高度\n            //文本宽度和高度\n            let fontset = luckysheetdefaultFont();\n            luckysheetTableContent.font = fontset;    //水平对齐 (默认为1，左对齐)\n            //水平对齐 (默认为1，左对齐)\n            let horizonAlignPos = start_c + 4 + offsetLeft;    //垂直对齐 (默认为2，下对齐)\n            //垂直对齐 (默认为2，下对齐)\n            let verticalFixed = browser.luckysheetrefreshfixed();\n            let verticalAlignPos = end_r + offsetTop - 2;\n            luckysheetTableContent.textBaseline = 'bottom';\n            luckysheetTableContent.fillText(value == null ? '' : value, horizonAlignPos, verticalAlignPos);\n        }    //若单元格有批注\n        //若单元格有批注\n        if (Store.flowdata[r][c] != null && Store.flowdata[r][c].ps != null) {\n            let ps_w = 8 * Store.zoomRatio, ps_h = 8 * Store.zoomRatio;\n            luckysheetTableContent.beginPath();\n            luckysheetTableContent.moveTo(end_c + offsetLeft - 1 - ps_w, start_r + offsetTop);\n            luckysheetTableContent.lineTo(end_c + offsetLeft - 1, start_r + offsetTop);\n            luckysheetTableContent.lineTo(end_c + offsetLeft - 1, start_r + offsetTop + ps_h);\n            luckysheetTableContent.fillStyle = '#FC6666';\n            luckysheetTableContent.fill();\n            luckysheetTableContent.closePath();\n        }    //此单元格 与  溢出单元格关系\n        //此单元格 与  溢出单元格关系\n        let cellOverflow_colInObj = cellOverflow_colIn(cellOverflowMap, r, c, dataset_col_st, dataset_col_ed);    //此单元格 为 溢出单元格渲染范围最后一列，绘制溢出单元格内容\n        //此单元格 为 溢出单元格渲染范围最后一列，绘制溢出单元格内容\n        if (cellOverflow_colInObj.colLast) {\n            cellOverflowRender(cellOverflow_colInObj.rowIndex, cellOverflow_colInObj.colIndex, cellOverflow_colInObj.stc, cellOverflow_colInObj.edc, luckysheetTableContent, scrollHeight, scrollWidth, offsetLeft, offsetTop, af_compute, cf_compute);\n        }    //即溢出单元格跨此单元格，此单元格不绘制右边框\n        //即溢出单元格跨此单元格，此单元格不绘制右边框\n        if (!cellOverflow_colInObj.colIn || cellOverflow_colInObj.colLast) {\n            //右边框\n            if (!Store.luckysheetcurrentisPivotTable && !fillStyle && Store.showGridLines) {\n                luckysheetTableContent.beginPath();\n                luckysheetTableContent.moveTo(end_c + offsetLeft - 2 + bodrder05, start_r + offsetTop);\n                luckysheetTableContent.lineTo(end_c + offsetLeft - 2 + bodrder05, end_r + offsetTop);\n                luckysheetTableContent.lineWidth = 1;\n                luckysheetTableContent.strokeStyle = luckysheetdefaultstyle.strokeStyle;\n                luckysheetTableContent.stroke();\n                luckysheetTableContent.closePath();\n            }\n        }    //下边框\n        //下边框\n        if (!Store.luckysheetcurrentisPivotTable && !fillStyle && Store.showGridLines) {\n            luckysheetTableContent.beginPath();\n            luckysheetTableContent.moveTo(start_c + offsetLeft - 1, end_r + offsetTop - 2 + bodrder05);\n            luckysheetTableContent.lineTo(end_c + offsetLeft - 1, end_r + offsetTop - 2 + bodrder05);\n            luckysheetTableContent.lineWidth = 1;\n            luckysheetTableContent.strokeStyle = luckysheetdefaultstyle.strokeStyle;\n            luckysheetTableContent.stroke();\n            luckysheetTableContent.closePath();\n        }    // 单元格渲染后\n        // 单元格渲染后\n        luckysheetConfigsetting.createHookFunction('cellRenderAfter', Store.flowdata[r][c], {\n            r: r,\n            c: c,\n            'start_r': cellsize[1],\n            'start_c': cellsize[0],\n            'end_r': cellsize[3] + cellsize[1],\n            'end_c': cellsize[2] + cellsize[0]\n        }, Store.getSheetByIndex(), luckysheetTableContent);\n    };\n    let cellRender = function (r, c, start_r, start_c, end_r, end_c, value, luckysheetTableContent, af_compute, cf_compute, offsetLeft, offsetTop, dynamicArray_compute, cellOverflowMap, dataset_col_st, dataset_col_ed, scrollHeight, scrollWidth, bodrder05, isMerge) {\n        let cell = Store.flowdata[r][c];\n        let cellWidth = end_c - start_c - 2;\n        let cellHeight = end_r - start_r - 2;\n        let space_width = 2, space_height = 2; \n        //宽高方向 间隙\n        //水平对齐\n        let horizonAlign = cells.checkstatus(Store.flowdata, r, c, 'ht');    //垂直对齐\n        //垂直对齐\n        let verticalAlign = cells.checkstatus(Store.flowdata, r, c, 'vt');    //交替颜色\n        //交替颜色\n        let checksAF = alternateformat.checksAF(r, c, af_compute);    //条件格式\n        //条件格式\n        let checksCF = conditionformat.checksCF(r, c, cf_compute);    //单元格 背景颜色\n        //单元格 背景颜色\n        let fillStyle = cells.checkstatus(Store.flowdata, r, c, 'bg');\n        if (checksAF != null && checksAF[1] != null) {\n            //若单元格有交替颜色 背景颜色\n            fillStyle = checksAF[1];\n        }\n        if (checksCF != null && checksCF['cellColor'] != null) {\n            //若单元格有条件格式 背景颜色\n            fillStyle = checksCF['cellColor'];\n        }    // luckysheetTableContent.textBaseline = 'top';\n        // luckysheetTableContent.textBaseline = 'top';\n        if (fillStyle == null) {\n            luckysheetTableContent.fillStyle = '#FFFFFF';\n        } else {\n            luckysheetTableContent.fillStyle = fillStyle;\n        }\n        let borderfix = cells.borderfix(Store.flowdata, r, c);    // console.log(value, fillStyle,borderfix);\n        // console.log(value, fillStyle,borderfix);\n        let cellsize = [\n            start_c + offsetLeft + borderfix[0],\n            start_r + offsetTop + borderfix[1],\n            end_c - start_c + borderfix[2] - (!!isMerge ? 1 : 0),\n            end_r - start_r + borderfix[3]\n        ]; \n        //单元格渲染前，考虑到合并单元格会再次渲染一遍，统一放到这里\n        if (!luckysheetConfigsetting.createHookFunction('cellRenderBefore', Store.flowdata[r][c], {\n                r: r,\n                c: c,\n                'start_r': cellsize[1],\n                'start_c': cellsize[0],\n                'end_r': cellsize[3] + cellsize[1],\n                'end_c': cellsize[2] + cellsize[0]\n            }, Store.getSheetByIndex(), luckysheetTableContent)) {\n            return;\n        }\n        luckysheetTableContent.fillRect(cellsize[0], cellsize[1], cellsize[2], cellsize[3]);\n        let dataVerification = Store.dataVerification;\n        if (dataVerification != null && dataVerification[r + '_' + c] != null && !dataVerificationCtrl.validateCellData(value, dataVerification[r + '_' + c])) {\n            //单元格左上角红色小三角标示\n            let dv_w = 5 * Store.zoomRatio, dv_h = 5 * Store.zoomRatio;    //红色小三角宽高\n            //红色小三角宽高\n            luckysheetTableContent.beginPath();\n            luckysheetTableContent.moveTo(start_c + offsetLeft, start_r + offsetTop);\n            luckysheetTableContent.lineTo(start_c + offsetLeft + dv_w, start_r + offsetTop);\n            luckysheetTableContent.lineTo(start_c + offsetLeft, start_r + offsetTop + dv_h);\n            luckysheetTableContent.fillStyle = '#FC6666';\n            luckysheetTableContent.fill();\n            luckysheetTableContent.closePath();\n        }  \n        //若单元格有批注（单元格右上角红色小三角标示）\n        if (cell.ps != null) {\n            let ps_w = 8 * Store.zoomRatio, ps_h = 8 * Store.zoomRatio; \n            //红色小三角宽高\n            luckysheetTableContent.beginPath();\n            luckysheetTableContent.moveTo(end_c + offsetLeft - ps_w, start_r + offsetTop);\n            luckysheetTableContent.lineTo(end_c + offsetLeft, start_r + offsetTop);\n            luckysheetTableContent.lineTo(end_c + offsetLeft, start_r + offsetTop + ps_h);\n            luckysheetTableContent.fillStyle = '#FC6666';\n            luckysheetTableContent.fill();\n            luckysheetTableContent.closePath();\n        } \n        //若单元格强制为字符串，则显示绿色小三角\n        if (cell.qp == 1 && isRealNum(cell.v)) {\n            let ps_w = 6 * Store.zoomRatio, ps_h = 6 * Store.zoomRatio;    //红色小三角宽高\n            //红色小三角宽高\n            luckysheetTableContent.beginPath();\n            luckysheetTableContent.moveTo(start_c + offsetLeft + ps_w - 1, start_r + offsetTop);\n            luckysheetTableContent.lineTo(start_c + offsetLeft - 1, start_r + offsetTop);\n            luckysheetTableContent.lineTo(start_c + offsetLeft - 1, start_r + offsetTop + ps_h);\n            luckysheetTableContent.fillStyle = '#487f1e';\n            luckysheetTableContent.fill();\n            luckysheetTableContent.closePath();\n        } \n        //溢出单元格\n        let cellOverflow_bd_r_render = true; \n        //溢出单元格右边框是否需要绘制\n        let cellOverflow_colInObj = cellOverflow_colIn(cellOverflowMap, r, c, dataset_col_st, dataset_col_ed);\n        if (cell.tb == '1' && cellOverflow_colInObj.colIn) {\n            //此单元格 为 溢出单元格渲染范围最后一列，绘制溢出单元格内容\n            if (cellOverflow_colInObj.colLast) {\n                cellOverflowRender(cellOverflow_colInObj.rowIndex, cellOverflow_colInObj.colIndex, cellOverflow_colInObj.stc, cellOverflow_colInObj.edc, luckysheetTableContent, scrollHeight, scrollWidth, offsetLeft, offsetTop, af_compute, cf_compute);\n            } else {\n                cellOverflow_bd_r_render = false;\n            }\n        }    //数据验证 复选框\n        else //数据验证 复选框\n        if (dataVerification != null && dataVerification[r + '_' + c] != null && dataVerification[r + '_' + c].type == 'checkbox') {\n            let pos_x = start_c + offsetLeft;\n            let pos_y = start_r + offsetTop + 1;\n            luckysheetTableContent.save();\n            luckysheetTableContent.beginPath();\n            luckysheetTableContent.rect(pos_x, pos_y, cellWidth, cellHeight);\n            luckysheetTableContent.clip();\n            luckysheetTableContent.scale(Store.zoomRatio, Store.zoomRatio);\n            let measureText = getMeasureText(value, luckysheetTableContent);\n            let textMetrics = measureText.width + 14;\n            let oneLineTextHeight = measureText.actualBoundingBoxDescent + measureText.actualBoundingBoxAscent;\n            let horizonAlignPos = pos_x + space_width;    //默认为1，左对齐\n            //默认为1，左对齐\n            if (horizonAlign == '0') {\n                //居中对齐\n                horizonAlignPos = pos_x + cellWidth / 2 - textMetrics / 2;\n            } else if (horizonAlign == '2') {\n                //右对齐\n                horizonAlignPos = pos_x + cellWidth - space_width - textMetrics;\n            }\n            let verticalCellHeight = cellHeight > oneLineTextHeight ? cellHeight : oneLineTextHeight;\n            let verticalAlignPos_text = pos_y + verticalCellHeight - space_height;    //文本垂直方向基准线\n            //文本垂直方向基准线\n            luckysheetTableContent.textBaseline = 'bottom';\n            let verticalAlignPos_checkbox = verticalAlignPos_text - 13 * Store.zoomRatio;\n            if (verticalAlign == '0') {\n                //居中对齐 \n                verticalAlignPos_text = pos_y + verticalCellHeight / 2;\n                luckysheetTableContent.textBaseline = 'middle';\n                verticalAlignPos_checkbox = verticalAlignPos_text - 6 * Store.zoomRatio;\n            } else if (verticalAlign == '1') {\n                //上对齐\n                verticalAlignPos_text = pos_y + space_height;\n                luckysheetTableContent.textBaseline = 'top';\n                verticalAlignPos_checkbox = verticalAlignPos_text + 1 * Store.zoomRatio;\n            }\n            horizonAlignPos = horizonAlignPos / Store.zoomRatio;\n            verticalAlignPos_text = verticalAlignPos_text / Store.zoomRatio;\n            verticalAlignPos_checkbox = verticalAlignPos_checkbox / Store.zoomRatio;    //复选框\n            //复选框\n            luckysheetTableContent.lineWidth = 1;\n            luckysheetTableContent.strokeStyle = '#000';\n            luckysheetTableContent.strokeRect(horizonAlignPos, verticalAlignPos_checkbox, 10, 10);\n            if (dataVerification[r + '_' + c].checked) {\n                luckysheetTableContent.beginPath();\n                luckysheetTableContent.lineTo(horizonAlignPos + 1, verticalAlignPos_checkbox + 6);\n                luckysheetTableContent.lineTo(horizonAlignPos + 4, verticalAlignPos_checkbox + 9);\n                luckysheetTableContent.lineTo(horizonAlignPos + 9, verticalAlignPos_checkbox + 2);\n                luckysheetTableContent.stroke();\n                luckysheetTableContent.closePath();\n            }    //文本\n            //文本\n            luckysheetTableContent.fillStyle = cells.checkstatus(Store.flowdata, r, c, 'fc');\n            luckysheetTableContent.fillText(value == null ? '' : value, horizonAlignPos + 14, verticalAlignPos_text);\n            luckysheetTableContent.restore();\n        } else {\n            //若单元格有条件格式数据条\n            if (checksCF != null && checksCF['dataBar'] != null) {\n                let x = start_c + offsetLeft + space_width;\n                let y = start_r + offsetTop + space_height;\n                let w = cellWidth - space_width * 2;\n                let h = cellHeight - space_height * 2;\n                let valueType = checksCF['dataBar']['valueType'];\n                let valueLen = checksCF['dataBar']['valueLen'];\n                let format = checksCF['dataBar']['format'];\n                if (valueType == 'minus') {\n                    //负数\n                    let minusLen = checksCF['dataBar']['minusLen'];\n                    if (format.length > 1) {\n                        //渐变\n                        let my_gradient = luckysheetTableContent.createLinearGradient(x + w * minusLen * (1 - valueLen), y, x + w * minusLen, y);\n                        my_gradient.addColorStop(0, '#ffffff');\n                        my_gradient.addColorStop(1, '#ff0000');\n                        luckysheetTableContent.fillStyle = my_gradient;\n                    } else {\n                        //单色\n                        luckysheetTableContent.fillStyle = '#ff0000';\n                    }\n                    luckysheetTableContent.fillRect(x + w * minusLen * (1 - valueLen), y, w * minusLen * valueLen, h);\n                    luckysheetTableContent.beginPath();\n                    luckysheetTableContent.moveTo(x + w * minusLen * (1 - valueLen), y);\n                    luckysheetTableContent.lineTo(x + w * minusLen * (1 - valueLen), y + h);\n                    luckysheetTableContent.lineTo(x + w * minusLen, y + h);\n                    luckysheetTableContent.lineTo(x + w * minusLen, y);\n                    luckysheetTableContent.lineTo(x + w * minusLen * (1 - valueLen), y);\n                    luckysheetTableContent.lineWidth = 1;\n                    luckysheetTableContent.strokeStyle = '#ff0000';\n                    luckysheetTableContent.stroke();\n                    luckysheetTableContent.closePath();\n                } else if (valueType == 'plus') {\n                    //正数\n                    let plusLen = checksCF['dataBar']['plusLen'];\n                    if (plusLen == 1) {\n                        if (format.length > 1) {\n                            //渐变\n                            let my_gradient = luckysheetTableContent.createLinearGradient(x, y, x + w * valueLen, y);\n                            my_gradient.addColorStop(0, format[0]);\n                            my_gradient.addColorStop(1, format[1]);\n                            luckysheetTableContent.fillStyle = my_gradient;\n                        } else {\n                            //单色\n                            luckysheetTableContent.fillStyle = format[0];\n                        }\n                        luckysheetTableContent.fillRect(x, y, w * valueLen, h);\n                        luckysheetTableContent.beginPath();\n                        luckysheetTableContent.moveTo(x, y);\n                        luckysheetTableContent.lineTo(x, y + h);\n                        luckysheetTableContent.lineTo(x + w * valueLen, y + h);\n                        luckysheetTableContent.lineTo(x + w * valueLen, y);\n                        luckysheetTableContent.lineTo(x, y);\n                        luckysheetTableContent.lineWidth = 1;\n                        luckysheetTableContent.strokeStyle = format[0];\n                        luckysheetTableContent.stroke();\n                        luckysheetTableContent.closePath();\n                    } else {\n                        let minusLen = checksCF['dataBar']['minusLen'];\n                        if (format.length > 1) {\n                            //渐变\n                            let my_gradient = luckysheetTableContent.createLinearGradient(x + w * minusLen, y, x + w * minusLen + w * plusLen * valueLen, y);\n                            my_gradient.addColorStop(0, format[0]);\n                            my_gradient.addColorStop(1, format[1]);\n                            luckysheetTableContent.fillStyle = my_gradient;\n                        } else {\n                            //单色\n                            luckysheetTableContent.fillStyle = format[0];\n                        }\n                        luckysheetTableContent.fillRect(x + w * minusLen, y, w * plusLen * valueLen, h);\n                        luckysheetTableContent.beginPath();\n                        luckysheetTableContent.moveTo(x + w * minusLen, y);\n                        luckysheetTableContent.lineTo(x + w * minusLen, y + h);\n                        luckysheetTableContent.lineTo(x + w * minusLen + w * plusLen * valueLen, y + h);\n                        luckysheetTableContent.lineTo(x + w * minusLen + w * plusLen * valueLen, y);\n                        luckysheetTableContent.lineTo(x + w * minusLen, y);\n                        luckysheetTableContent.lineWidth = 1;\n                        luckysheetTableContent.strokeStyle = format[0];\n                        luckysheetTableContent.stroke();\n                        luckysheetTableContent.closePath();\n                    }\n                }\n            }\n            let pos_x = start_c + offsetLeft;\n            let pos_y = start_r + offsetTop + 1;\n            luckysheetTableContent.save();\n            luckysheetTableContent.beginPath();\n            luckysheetTableContent.rect(pos_x, pos_y, cellWidth, cellHeight);\n            luckysheetTableContent.clip();\n            luckysheetTableContent.scale(Store.zoomRatio, Store.zoomRatio);\n            let textInfo = getCellTextInfo(cell, luckysheetTableContent, {\n                cellWidth: cellWidth,\n                cellHeight: cellHeight,\n                space_width: space_width,\n                space_height: space_height,\n                r: r,\n                c: c\n            });    //若单元格有条件格式图标集\n            //若单元格有条件格式图标集\n            if (checksCF != null && checksCF['icons'] != null && textInfo.type == 'plain') {\n                let l = checksCF['icons']['left'];\n                let t = checksCF['icons']['top'];\n                let value = textInfo.values[0];\n                let horizonAlignPos = pos_x + value.left;\n                let verticalAlignPos = pos_y + value.top - textInfo.textHeightAll;\n                if (verticalAlign == '0') {\n                    //居中对齐 \n                    verticalAlignPos = pos_y + cellHeight / 2 - textInfo.textHeightAll / 2;\n                } else if (verticalAlign == '1') {\n                    //上对齐\n                    verticalAlignPos = pos_y;\n                } else if (verticalAlign == '2') {\n                    //下对齐\n                    verticalAlignPos = verticalAlignPos - textInfo.desc;\n                }\n                verticalAlignPos = verticalAlignPos / Store.zoomRatio;\n                horizonAlignPos = horizonAlignPos / Store.zoomRatio;\n                luckysheetTableContent.drawImage(luckysheet_CFiconsImg, l * 42, t * 32, 32, 32, pos_x / Store.zoomRatio, verticalAlignPos, textInfo.textHeightAll / Store.zoomRatio, textInfo.textHeightAll / Store.zoomRatio);\n                if (horizonAlign != '0' && horizonAlign != '2') {\n                    //左对齐时 文本渲染空出一个图标的距离\n                    horizonAlignPos = horizonAlignPos + textInfo.textHeightAll / Store.zoomRatio;\n                }\n            }    //单元格 文本颜色\n            //单元格 文本颜色\n            luckysheetTableContent.fillStyle = cells.checkstatus(Store.flowdata, r, c, 'fc');    //若单元格有交替颜色 文本颜色\n            //若单元格有交替颜色 文本颜色\n            if (checksAF != null && checksAF[0] != null) {\n                luckysheetTableContent.fillStyle = checksAF[0];\n            }    //若单元格有条件格式 文本颜色\n            //若单元格有条件格式 文本颜色\n            if (checksCF != null && checksCF['textColor'] != null) {\n                luckysheetTableContent.fillStyle = checksCF['textColor'];\n            }    //若单元格格式为自定义数字格式（[red]） 文本颜色为红色\n            //若单元格格式为自定义数字格式（[red]） 文本颜色为红色\n            if (cell.ct && cell.ct.fa && cell.ct.fa.indexOf('[Red]') > -1 && cell.ct.t == 'n' && cell.v < 0) {\n                luckysheetTableContent.fillStyle = '#ff0000';\n            }\n            cellTextRender(textInfo, luckysheetTableContent, {\n                pos_x: pos_x,\n                pos_y: pos_y\n            });\n            luckysheetTableContent.restore();\n        }\n        if (cellOverflow_bd_r_render) {\n            //右边框\n            if (!Store.luckysheetcurrentisPivotTable && !fillStyle && Store.showGridLines) {\n                luckysheetTableContent.beginPath();\n                luckysheetTableContent.moveTo(end_c + offsetLeft - 2 + bodrder05, start_r + offsetTop);\n                luckysheetTableContent.lineTo(end_c + offsetLeft - 2 + bodrder05, end_r + offsetTop);\n                luckysheetTableContent.lineWidth = 1;\n                luckysheetTableContent.strokeStyle = luckysheetdefaultstyle.strokeStyle;\n                luckysheetTableContent.stroke();\n                luckysheetTableContent.closePath();\n            }\n        }    //下边框\n        //下边框\n        if (!Store.luckysheetcurrentisPivotTable && !fillStyle && Store.showGridLines) {\n            luckysheetTableContent.beginPath();\n            luckysheetTableContent.moveTo(start_c + offsetLeft - 1, end_r + offsetTop - 2 + bodrder05);\n            luckysheetTableContent.lineTo(end_c + offsetLeft - 1, end_r + offsetTop - 2 + bodrder05);\n            luckysheetTableContent.lineWidth = 1;\n            luckysheetTableContent.strokeStyle = luckysheetdefaultstyle.strokeStyle;\n            luckysheetTableContent.stroke();\n            luckysheetTableContent.closePath();\n        }    // 单元格渲染后\n        // 单元格渲染后\n        luckysheetConfigsetting.createHookFunction('cellRenderAfter', Store.flowdata[r][c], {\n            r: r,\n            c: c,\n            'start_r': cellsize[1],\n            'start_c': cellsize[0],\n            'end_r': cellsize[3] + cellsize[1],\n            'end_c': cellsize[2] + cellsize[0]\n        }, Store.getSheetByIndex(), luckysheetTableContent);\n    };    //溢出单元格渲染\n    //溢出单元格渲染\n    let cellOverflowRender = function (r, c, stc, edc, luckysheetTableContent, scrollHeight, scrollWidth, offsetLeft, offsetTop, af_compute, cf_compute) {\n        //溢出单元格 起止行列坐标\n        let start_r;\n        if (r == 0) {\n            start_r = -scrollHeight - 1;\n        } else {\n            start_r = Store.visibledatarow[r - 1] - scrollHeight - 1;\n        }\n        let end_r = Store.visibledatarow[r] - scrollHeight;\n        let start_c;\n        if (stc == 0) {\n            start_c = -scrollWidth;\n        } else {\n            start_c = Store.visibledatacolumn[stc - 1] - scrollWidth;\n        }\n        let end_c = Store.visibledatacolumn[edc] - scrollWidth;    //\n        //\n        let cell = Store.flowdata[r][c];\n        let cellWidth = end_c - start_c - 2;\n        let cellHeight = end_r - start_r - 2;\n        let space_width = 2, space_height = 2;    //宽高方向 间隙\n        //宽高方向 间隙\n        let pos_x = start_c + offsetLeft;\n        let pos_y = start_r + offsetTop + 1;\n        let fontset = luckysheetfontformat(cell);\n        luckysheetTableContent.font = fontset;\n        luckysheetTableContent.save();\n        luckysheetTableContent.beginPath();\n        luckysheetTableContent.rect(pos_x, pos_y, cellWidth, cellHeight);\n        luckysheetTableContent.clip();\n        luckysheetTableContent.scale(Store.zoomRatio, Store.zoomRatio);\n        let textInfo = getCellTextInfo(cell, luckysheetTableContent, {\n            cellWidth: cellWidth,\n            cellHeight: cellHeight,\n            space_width: space_width,\n            space_height: space_height,\n            r: r,\n            c: c\n        });    //交替颜色\n        //交替颜色\n        let checksAF = alternateformat.checksAF(r, c, af_compute);    //条件格式\n        //条件格式\n        let checksCF = conditionformat.checksCF(r, c, cf_compute);    //单元格 文本颜色\n        //单元格 文本颜色\n        luckysheetTableContent.fillStyle = cells.checkstatus(Store.flowdata, r, c, 'fc');    //若单元格有交替颜色 文本颜色\n        //若单元格有交替颜色 文本颜色\n        if (checksAF != null && checksAF[0] != null) {\n            luckysheetTableContent.fillStyle = checksAF[0];\n        }    //若单元格有条件格式 文本颜色\n        //若单元格有条件格式 文本颜色\n        if (checksCF != null && checksCF['textColor'] != null) {\n            luckysheetTableContent.fillStyle = checksCF['textColor'];\n        }\n        cellTextRender(textInfo, luckysheetTableContent, {\n            pos_x: pos_x,\n            pos_y: pos_y\n        });\n        luckysheetTableContent.restore();\n    };    //获取表格渲染范围 溢出单元格 \n    //获取表格渲染范围 溢出单元格 \n    function getCellOverflowMap(canvas, col_st, col_ed, row_st, row_end) {\n        let map = {};\n        let data = Store.flowdata;\n        for (let r = row_st; r <= row_end; r++) {\n            if (data[r] == null) {\n                continue;\n            }\n            if (Store.cellOverflowMapCache[r] != null) {\n                map[r] = Store.cellOverflowMapCache[r];\n                continue;\n            }\n            let hasCellOver = false;\n            for (let c = 0; c < data[r].length; c++) {\n                let cell = data[r][c];    // if(Store.cellOverflowMapCache[r + '_' + c]!=null){\n                                          //     map[r + '_' + c] = Store.cellOverflowMapCache[r + '_' + c];\n                                          //     continue;\n                                          // }\n                // if(Store.cellOverflowMapCache[r + '_' + c]!=null){\n                //     map[r + '_' + c] = Store.cellOverflowMapCache[r + '_' + c];\n                //     continue;\n                // }\n                if (Store.config['colhidden'] != null && Store.config['colhidden'][c] != null) {\n                    continue;\n                }\n                if (cell != null && (!isRealNull(cell.v) || isInlineStringCell(cell)) && cell.mc == null && cell.tb == '1') {\n                    //水平对齐\n                    let horizonAlign = cells.checkstatus(data, r, c, 'ht');\n                    let textMetricsObj = getCellTextInfo(cell, canvas, {\n                        r: r,\n                        c: c\n                    });\n                    let textMetrics = 0;\n                    if (textMetricsObj != null) {\n                        textMetrics = textMetricsObj.textWidthAll;\n                    }    \n                    //canvas.measureText(value).width;\n                    let start_c = c - 1 < 0 ? 0 : Store.visibledatacolumn[c - 1];\n                    let end_c = Store.visibledatacolumn[c];\n                    let stc, edc;\n                    if (end_c - start_c < textMetrics) {\n                        if (horizonAlign == '0') {\n                            //居中对齐\n                            let trace_forward = cellOverflow_trace(r, c, c - 1, 'forward', horizonAlign, textMetrics);\n                            let trace_backward = cellOverflow_trace(r, c, c + 1, 'backward', horizonAlign, textMetrics);\n                            if (trace_forward.success) {\n                                stc = trace_forward.c;\n                            } else {\n                                stc = trace_forward.c + 1;\n                            }\n                            if (trace_backward.success) {\n                                edc = trace_backward.c;\n                            } else {\n                                edc = trace_backward.c - 1;\n                            }\n                        } else if (horizonAlign == '1') {\n                            //左对齐\n                            let trace = cellOverflow_trace(r, c, c + 1, 'backward', horizonAlign, textMetrics);\n                            stc = c;\n                            if (trace.success) {\n                                edc = trace.c;\n                            } else {\n                                edc = trace.c - 1;\n                            }\n                        } else if (horizonAlign == '2') {\n                            //右对齐\n                            let trace = cellOverflow_trace(r, c, c - 1, 'forward', horizonAlign, textMetrics);\n                            edc = c;\n                            if (trace.success) {\n                                stc = trace.c;\n                            } else {\n                                stc = trace.c + 1;\n                            }\n                        }\n                    } else {\n                        stc = c;\n                        edc = c;\n                    }    // if(((stc >= col_st && stc <= col_ed) || (edc >= col_st && edc <= col_ed)) && stc < edc){\n                    // if(((stc >= col_st && stc <= col_ed) || (edc >= col_st && edc <= col_ed)) && stc < edc){\n                    if ((stc <= col_ed || edc >= col_st) && stc < edc) {\n                        let item = {\n                            r: r,\n                            stc: stc,\n                            edc: edc\n                        };\n                        if (map[r] == null) {\n                            map[r] = {};\n                        }\n                        map[r][c] = item;    // Store.cellOverflowMapCache[r + '_' + c] = item;\n                        // Store.cellOverflowMapCache[r + '_' + c] = item;\n                        hasCellOver = true;\n                    }\n                }\n            }\n            if (hasCellOver) {\n                Store.cellOverflowMapCache[r] = map[r];\n            }\n        }\n        return map;\n    }\n    function cellOverflow_trace(r, curC, traceC, traceDir, horizonAlign, textMetrics) {\n        let data = Store.flowdata;    //追溯单元格列超出数组范围 则追溯终止\n        //追溯单元格列超出数组范围 则追溯终止\n        if (traceDir == 'forward' && traceC < 0) {\n            return {\n                success: false,\n                r: r,\n                c: traceC\n            };\n        }\n        if (traceDir == 'backward' && traceC > data[r].length - 1) {\n            return {\n                success: false,\n                r: r,\n                c: traceC\n            };\n        }    //追溯单元格是 非空单元格或合并单元格 则追溯终止\n        //追溯单元格是 非空单元格或合并单元格 则追溯终止\n        let cell = data[r][traceC];\n        if (cell != null && (!isRealNull(cell.v) || cell.mc != null)) {\n            return {\n                success: false,\n                r: r,\n                c: traceC\n            };\n        }\n        let start_curC = curC - 1 < 0 ? 0 : Store.visibledatacolumn[curC - 1];\n        let end_curC = Store.visibledatacolumn[curC];\n        let w = textMetrics - (end_curC - start_curC);\n        if (horizonAlign == '0') {\n            //居中对齐\n            start_curC -= w / 2;\n            end_curC += w / 2;\n        } else if (horizonAlign == '1') {\n            //左对齐\n            end_curC += w;\n        } else if (horizonAlign == '2') {\n            //右对齐\n            start_curC -= w;\n        }\n        let start_traceC = traceC - 1 < 0 ? 0 : Store.visibledatacolumn[traceC - 1];\n        let end_traceC = Store.visibledatacolumn[traceC];\n        if (traceDir == 'forward') {\n            if (start_curC < start_traceC) {\n                return cellOverflow_trace(r, curC, traceC - 1, traceDir, horizonAlign, textMetrics);\n            } else if (start_curC < end_traceC) {\n                return {\n                    success: true,\n                    r: r,\n                    c: traceC\n                };\n            } else {\n                return {\n                    success: false,\n                    r: r,\n                    c: traceC\n                };\n            }\n        }\n        if (traceDir == 'backward') {\n            if (end_curC > end_traceC) {\n                return cellOverflow_trace(r, curC, traceC + 1, traceDir, horizonAlign, textMetrics);\n            } else if (end_curC > start_traceC) {\n                return {\n                    success: true,\n                    r: r,\n                    c: traceC\n                };\n            } else {\n                return {\n                    success: false,\n                    r: r,\n                    c: traceC\n                };\n            }\n        }\n    }\n    function cellOverflow_colIn(map, r, c, col_st, col_ed) {\n        let colIn = false,\n            //此单元格 是否在 某个溢出单元格的渲染范围\n            colLast = false,\n            //此单元格 是否是 某个溢出单元格的渲染范围的最后一列\n            rowIndex,\n            //溢出单元格 行下标 \n            colIndex,\n            //溢出单元格 列下标\n            stc, edc;\n        for (let rkey in map) {\n            for (let ckey in map[rkey]) {\n                rowIndex = rkey;\n                colIndex = ckey;    // rowIndex = key.substr(0, key.indexOf('_'));\n                                    // colIndex = key.substr(key.indexOf('_') + 1);\n                // rowIndex = key.substr(0, key.indexOf('_'));\n                // colIndex = key.substr(key.indexOf('_') + 1);\n                let mapItem = map[rkey][ckey];\n                stc = mapItem.stc;\n                edc = mapItem.edc;\n                if (rowIndex == r) {\n                    if (c >= stc && c <= edc) {\n                        colIn = true;\n                        if (c == edc || c == col_ed) {\n                            colLast = true;\n                            break;\n                        }\n                    }\n                }\n            }\n            if (colLast) {\n                break;\n            }\n        }\n        return {\n            colIn: colIn,\n            colLast: colLast,\n            rowIndex: rowIndex,\n            colIndex: colIndex,\n            stc: stc,\n            edc: edc\n        };\n    }\n    function cellTextRender(textInfo, ctx, option) {\n        if (textInfo == null) {\n            return;\n        }\n        let values = textInfo.values;\n        let pos_x = option.pos_x, pos_y = option.pos_y;\n        if (values == null) {\n            return;\n        }    // console.log(textInfo, pos_x, pos_y, values[0].width, values[0].left, ctx);\n             // for(let i=0;i<values.length;i++){\n             //     let word = values[i];\n             //     ctx.font = word.style;\n             //     ctx.fillText(word.content, (pos_x + word.left)/Store.zoomRatio, (pos_y+word.top)/Store.zoomRatio);\n             // }\n             // ctx.fillStyle = \"rgba(255,255,0,0.2)\";\n             // ctx.fillRect((pos_x + values[0].left)/Store.zoomRatio, (pos_y+values[0].top-values[0].asc)/Store.zoomRatio, textInfo.textWidthAll, textInfo.textHeightAll)\n        // console.log(textInfo, pos_x, pos_y, values[0].width, values[0].left, ctx);\n        // for(let i=0;i<values.length;i++){\n        //     let word = values[i];\n        //     ctx.font = word.style;\n        //     ctx.fillText(word.content, (pos_x + word.left)/Store.zoomRatio, (pos_y+word.top)/Store.zoomRatio);\n        // }\n        // ctx.fillStyle = \"rgba(255,255,0,0.2)\";\n        // ctx.fillRect((pos_x + values[0].left)/Store.zoomRatio, (pos_y+values[0].top-values[0].asc)/Store.zoomRatio, textInfo.textWidthAll, textInfo.textHeightAll)\n        if (textInfo.rotate != 0 && textInfo.type != 'verticalWrap') {\n            ctx.save();\n            ctx.translate((pos_x + textInfo.textLeftAll) / Store.zoomRatio, (pos_y + textInfo.textTopAll) / Store.zoomRatio);\n            ctx.rotate(-textInfo.rotate * Math.PI / 180);\n            ctx.translate(-(textInfo.textLeftAll + pos_x) / Store.zoomRatio, -(pos_y + textInfo.textTopAll) / Store.zoomRatio);\n        }\n        // ctx.fillStyle = \"rgb(0,0,0)\";\n        for (let i = 0; i < values.length; i++) {\n            let word = values[i];\n            if (word.inline === true && word.style != null) {\n                ctx.font = word.style.fontset;\n                ctx.fillStyle = word.style.fc;\n            } else {\n                ctx.font = word.style;\n            }\n            // 暂时未排查到word.content第一次会是object，先做下判断来渲染，后续找到问题再复原\n            let txt = typeof word.content === 'object' ? word.content.m : word.content;\n            ctx.fillText(txt, (pos_x + word.left) / Store.zoomRatio, (pos_y + word.top) / Store.zoomRatio);\n            if (word.cancelLine != null) {\n                let c = word.cancelLine;\n                ctx.beginPath();\n                ctx.moveTo(Math.floor((pos_x + c.startX) / Store.zoomRatio) + 0.5, Math.floor((pos_y + c.startY) / Store.zoomRatio) + 0.5);\n                ctx.lineTo(Math.floor((pos_x + c.endX) / Store.zoomRatio) + 0.5, Math.floor((pos_y + c.endY) / Store.zoomRatio) + 0.5);\n                ctx.lineWidth = Math.floor(c.fs / 9);\n                ctx.strokeStyle = ctx.fillStyle;\n                ctx.stroke();\n                ctx.closePath();\n            }\n            if (word.underLine != null) {\n                let underLines = word.underLine;\n                for (let a = 0; a < underLines.length; a++) {\n                    let item = underLines[a];\n                    ctx.beginPath();\n                    ctx.moveTo(Math.floor((pos_x + item.startX) / Store.zoomRatio) + 0.5, Math.floor((pos_y + item.startY) / Store.zoomRatio));\n                    ctx.lineTo(Math.floor((pos_x + item.endX) / Store.zoomRatio) + 0.5, Math.floor((pos_y + item.endY) / Store.zoomRatio) + 0.5);\n                    ctx.lineWidth = Math.floor(item.fs / 9);\n                    ctx.strokeStyle = ctx.fillStyle;\n                    ctx.stroke();\n                    ctx.closePath();\n                }\n            }\n        } \n        // ctx.fillStyle = \"rgba(0,0,0,0.2)\";\n        // ctx.fillRect((pos_x + values[0].left)/Store.zoomRatio, (pos_y+values[0].top-values[0].asc)/Store.zoomRatio, textInfo.textWidthAll, textInfo.textHeightAll)\n        // ctx.fillStyle = \"rgba(255,0,0,1)\";\n        // ctx.fillRect(pos_x+textInfo.textLeftAll-2, pos_y+textInfo.textTopAll-2, 4,4);\n        if (textInfo.rotate != 0 && textInfo.type != 'verticalWrap') {\n            ctx.restore();\n        }\n    }\n\n    // from controllers/menuButton\n    function setLineDash(canvasborder, type, hv, m_st, m_ed, line_st, line_ed) {\n        let borderType = {\n            '0': 'none',\n            '1': 'Thin',\n            '2': 'Hair',\n            '3': 'Dotted',\n            '4': 'Dashed',\n            '5': 'DashDot',\n            '6': 'DashDotDot',\n            '7': 'Double',\n            '8': 'Medium',\n            '9': 'MediumDashed',\n            '10': 'MediumDashDot',\n            '11': 'MediumDashDotDot',\n            '12': 'SlantedDashDot',\n            '13': 'Thick'\n        };\n        type = borderType[type.toString()];\n        try {\n            if (type == 'Hair') {\n                canvasborder.setLineDash([\n                    1,\n                    2\n                ]);\n            } else if (type.indexOf('DashDotDot') > -1) {\n                canvasborder.setLineDash([\n                    2,\n                    2,\n                    5,\n                    2,\n                    2\n                ]);\n            } else if (type.indexOf('DashDot') > -1) {\n                canvasborder.setLineDash([\n                    2,\n                    5,\n                    2\n                ]);\n            } else if (type.indexOf('Dotted') > -1) {\n                canvasborder.setLineDash([2]);\n            } else if (type.indexOf('Dashed') > -1) {\n                canvasborder.setLineDash([3]);\n            } else {\n                canvasborder.setLineDash([0]);\n            }\n        } catch (e) {\n            console.log(e);\n        }\n        canvasborder.beginPath();\n        if (type.indexOf('Medium') > -1) {\n            if (hv == 'h') {\n                canvasborder.moveTo(m_st, m_ed - 0.5);\n                canvasborder.lineTo(line_st, line_ed - 0.5);\n            } else {\n                canvasborder.moveTo(m_st - 0.5, m_ed);\n                canvasborder.lineTo(line_st - 0.5, line_ed);\n            }\n            canvasborder.lineWidth = 2;\n        } else if (type == 'Thick') {\n            canvasborder.moveTo(m_st, m_ed);\n            canvasborder.lineTo(line_st, line_ed);\n            canvasborder.lineWidth = 3;\n        } else {\n            canvasborder.moveTo(m_st, m_ed);\n            canvasborder.lineTo(line_st, line_ed);\n            canvasborder.lineWidth = 1;\n        }\n    }\n    return {\n        setLineDash,\n        luckysheetDrawgridRowTitle,\n        luckysheetDrawgridColumnTitle,\n        luckysheetDrawMain\n    };\n});"]}