{"version":3,"sources":["global/sort.js"],"names":["define","m_util","m_validate","m_datecontroll","tooltip","editor","m_getRowlen","m_refresh","m_protection","Store","numeral","getObjType","isRealNull","isRealNum","isEditMode","isdatetime","diff","rowlenByRange","jfrefreshgrid","checkProtectionAuthorityNormal","orderbydata","data","index","isAsc","a","x","y","x1","y1","v","value","localeCompare","d","sort","orderbydata1D","sortSelection","currentSheetIndex","luckysheet_select_save","length","alert","info","str","edr","deepCopyFlowData","flowdata","r1","row","r2","c1","column","c2","r","cell","mc","test","hasMc","data_row","c","push","allParam","config","cfg","$","extend","RowlChange","sortColumnSeletion","colIndex"],"mappings":"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","file":"../../global/sort.js","sourcesContent":["define([\n    '../utils/util',\n    './validate',\n    './datecontroll',\n    './tooltip',\n    './editor',\n    './getRowlen',\n    './refresh',\n    '../controllers/protection',\n    '../store',\n    '../vendors/numeral'\n], function (m_util, m_validate, m_datecontroll, tooltip, editor, m_getRowlen, m_refresh, m_protection, Store, numeral) {\n    'use strict';\n    const {getObjType} = m_util;\n    const {isRealNull, isRealNum, isEditMode} = m_validate;\n    const {isdatetime, diff} = m_datecontroll;\n    const {rowlenByRange} = m_getRowlen;\n    const {jfrefreshgrid} = m_refresh;\n    const {checkProtectionAuthorityNormal} = m_protection;\n    //数据排序方法\n    function orderbydata(data, index, isAsc) {\n        if (isAsc == null) {\n            isAsc = true;\n        }\n        let a = function (x, y) {\n            let x1 = x[index], y1 = y[index];\n            if (getObjType(x[index]) == 'object') {\n                x1 = x[index].v;\n            }\n            if (getObjType(y[index]) == 'object') {\n                y1 = y[index].v;\n            }\n            if (isRealNull(x1)) {\n                return 1;\n            }\n            if (isRealNull(y1)) {\n                return -1;\n            }\n            if (isdatetime(x1) && isdatetime(y1)) {\n                return diff(x1, y1);\n            } else if (isRealNum(x1) && isRealNum(y1)) {\n                return numeral(x1).value() - numeral(y1).value();\n            } else if (!isRealNum(x1) && !isRealNum(y1)) {\n                return x1.localeCompare(y1, 'zh');\n            } else if (!isRealNum(x1)) {\n                return 1;\n            } else if (!isRealNum(y1)) {\n                return -1;\n            }\n        };\n        let d = function (x, y) {\n            let x1 = x[index], y1 = y[index];\n            if (getObjType(x[index]) == 'object') {\n                x1 = x[index].v;\n            }\n            if (getObjType(y[index]) == 'object') {\n                y1 = y[index].v;\n            }\n            if (isRealNull(x1)) {\n                return 1;\n            }\n            if (isRealNull(y1)) {\n                return -1;\n            }\n            if (isdatetime(x1) && isdatetime(y1)) {\n                return diff(y1, x1);\n            } else if (isRealNum(x1) && isRealNum(y1)) {\n                return numeral(y1).value() - numeral(x1).value();\n            } else if (!isRealNum(x1) && !isRealNum(y1)) {\n                return y1.localeCompare(x1, 'zh');\n            } else if (!isRealNum(x1)) {\n                return -1;\n            } else if (!isRealNum(y1)) {\n                return 1;\n            }\n        };\n        if (isAsc) {\n            return data.sort(a);\n        } else {\n            return data.sort(d);\n        }\n    }\n    function orderbydata1D(data, isAsc) {\n        if (isAsc == null) {\n            isAsc = true;\n        }\n        let a = function (x, y) {\n            let x1 = x, y1 = y;\n            if (getObjType(x) == 'object') {\n                x1 = x.v;\n            }\n            if (getObjType(y) == 'object') {\n                y1 = y.v;\n            }\n            if (x1 == null) {\n                x1 = '';\n            }\n            if (y1 == null) {\n                y1 = '';\n            }\n            if (isdatetime(x1) && isdatetime(y1)) {\n                return diff(x1, y1);\n            } else if (isRealNum(x1) && isRealNum(y1)) {\n                return numeral(x1).value() - numeral(y1).value();\n            } else if (!isRealNum(x1) && !isRealNum(y1)) {\n                return x1.localeCompare(y1, 'zh');\n            } else if (!isRealNum(x1)) {\n                return 1;\n            } else if (!isRealNum(y1)) {\n                return -1;\n            }\n        };\n        let d = function (x, y) {\n            let x1 = x, y1 = y;\n            if (getObjType(x) == 'object') {\n                x1 = x.v;\n            }\n            if (getObjType(y) == 'object') {\n                y1 = y.v;\n            }\n            if (x1 == null) {\n                x1 = '';\n            }\n            if (y1 == null) {\n                y1 = '';\n            }\n            if (isdatetime(x1) && isdatetime(y1)) {\n                return diff(y1, x1);\n            } else if (isRealNum(x1) && isRealNum(y1)) {\n                return numeral(y1).value() - numeral(x1).value();\n            } else if (!isRealNum(x1) && !isRealNum(y1)) {\n                return y1.localeCompare(x1, 'zh');\n            } else if (!isRealNum(x1)) {\n                return -1;\n            } else if (!isRealNum(y1)) {\n                return 1;\n            }\n        };\n        if (isAsc) {\n            return data.sort(a);\n        } else {\n            return data.sort(d);\n        }\n    }    //排序选区数据\n    //排序选区数据\n    function sortSelection(isAsc) {\n        if (!checkProtectionAuthorityNormal(Store.currentSheetIndex, 'sort')) {\n            return;\n        }\n        if (Store.luckysheet_select_save.length > 1) {\n            if (isEditMode()) {\n                alert('不能对多重选择区域执行此操作\\uFF0C请选择单个区域\\uFF0C然后再试');\n            } else {\n                tooltip.info('不能对多重选择区域执行此操作\\uFF0C请选择单个区域\\uFF0C然后再试', '');\n            }\n            return;\n        }\n        if (isAsc == null) {\n            isAsc = true;\n        }\n        let d = editor.deepCopyFlowData(Store.flowdata);\n        let r1 = Store.luckysheet_select_save[0].row[0], r2 = Store.luckysheet_select_save[0].row[1];\n        let c1 = Store.luckysheet_select_save[0].column[0], c2 = Store.luckysheet_select_save[0].column[1];\n        let str, edr;\n        for (let r = r1; r <= r2; r++) {\n            if (d[r] != null && d[r][c1] != null) {\n                let cell = d[r][c1];\n                if (cell.mc != null || isRealNull(cell.v)) {\n                    continue;\n                }\n                if (str == null && /[\\u4e00-\\u9fa5]+/g.test(cell.v)) {\n                    str = r + 1;\n                    edr = r + 1;\n                    continue;\n                }\n                if (str == null) {\n                    str = r;\n                }\n                edr = r;\n            }\n        }\n        if (str == null || str > r2) {\n            return;\n        }\n        let hasMc = false;    //排序选区是否有合并单元格\n        //排序选区是否有合并单元格\n        let data = [];\n        for (let r = str; r <= edr; r++) {\n            let data_row = [];\n            for (let c = c1; c <= c2; c++) {\n                if (d[r][c] != null && d[r][c].mc != null) {\n                    hasMc = true;\n                    break;\n                }\n                data_row.push(d[r][c]);\n            }\n            data.push(data_row);\n        }\n        if (hasMc) {\n            if (isEditMode()) {\n                alert('选区有合并单元格\\uFF0C无法执行此操作\\uFF01');\n            } else {\n                tooltip.info('选区有合并单元格\\uFF0C无法执行此操作\\uFF01', '');\n            }\n            return;\n        }\n        data = orderbydata(data, 0, isAsc);\n        for (let r = str; r <= edr; r++) {\n            for (let c = c1; c <= c2; c++) {\n                d[r][c] = data[r - str][c - c1];\n            }\n        }\n        let allParam = {};\n        if (Store.config['rowlen'] != null) {\n            let cfg = $.extend(true, {}, Store.config);\n            cfg = rowlenByRange(d, str, edr, cfg);\n            allParam = {\n                'cfg': cfg,\n                'RowlChange': true\n            };\n        }\n        jfrefreshgrid(d, [{\n                'row': [\n                    str,\n                    edr\n                ],\n                'column': [\n                    c1,\n                    c2\n                ]\n            }], allParam);\n    }    //排序一列数据\n    //排序一列数据\n    function sortColumnSeletion(colIndex, isAsc) {\n        if (!checkProtectionAuthorityNormal(Store.currentSheetIndex, 'sort')) {\n            return;\n        }\n        if (isAsc == null) {\n            isAsc = true;\n        }\n        let d = editor.deepCopyFlowData(Store.flowdata);\n        let r1 = 0, r2 = d.length - 1;\n        let c1 = 0, c2 = d[0].length - 1;\n        let str, edr;\n        for (let r = r1; r <= r2; r++) {\n            if (d[r][colIndex] != null && d[r][colIndex].mc != null) {\n                continue;\n            }\n            if (d[r][colIndex] != null && !isRealNull(d[r][colIndex].v) && /[\\u4e00-\\u9fa5]+/g.test(d[r][colIndex].v) && str == null) {\n                str = r + 1;\n                edr = r + 1;\n                continue;\n            }\n            if (str == null) {\n                str = r;\n            }\n            if (d[r][colIndex] != null && !isRealNull(d[r][colIndex].v)) {\n                edr = r;\n            }\n        }\n        if (str == null || str > r2) {\n            return;\n        }\n        let hasMc = false;    //排序选区是否有合并单元格\n        //排序选区是否有合并单元格\n        let data = [];\n        for (let r = str; r <= edr; r++) {\n            let data_row = [];\n            for (let c = c1; c <= c2; c++) {\n                if (d[r][c] != null && d[r][c].mc != null) {\n                    hasMc = true;\n                    break;\n                }\n                data_row.push(d[r][c]);\n            }\n            data.push(data_row);\n        }\n        if (hasMc) {\n            if (isEditMode()) {\n                alert('列排序会扩展至整个表格选区\\uFF0C选区有合并单元格\\uFF0C无法执行此操作\\uFF0C请选择功能栏排序功能\\uFF01');\n            } else {\n                tooltip.info('列排序会扩展至整个表格选区\\uFF0C选区有合并单元格\\uFF0C无法执行此操作\\uFF0C请选择功能栏排序功能\\uFF01', '');\n            }\n            return;\n        }\n        data = orderbydata(data, colIndex, isAsc);\n        for (let r = str; r <= edr; r++) {\n            for (let c = c1; c <= c2; c++) {\n                d[r][c] = data[r - str][c - c1];\n            }\n        }\n        let allParam = {};\n        if (Store.config['rowlen'] != null) {\n            let cfg = $.extend(true, {}, Store.config);\n            cfg = rowlenByRange(d, str, edr, cfg);\n            allParam = {\n                'cfg': cfg,\n                'RowlChange': true\n            };\n        }\n        jfrefreshgrid(d, [{\n                'row': [\n                    str,\n                    edr\n                ],\n                'column': [\n                    c1,\n                    c2\n                ]\n            }], allParam);\n    }\n    return {\n        orderbydata,\n        orderbydata1D,\n        sortSelection,\n        sortColumnSeletion\n    };\n});"]}