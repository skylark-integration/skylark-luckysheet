{"version":3,"sources":["global/formula.js"],"names":["define","m_util","m_get","m_set","m_constant","sheetmanage","menuButton","server","luckysheetFreezen","m_protection","dataVerificationCtrl","m_select","m_validate","m_datecontroll","m_getRowlen","m_getdata","m_setdata","m_format","editor","tooltip","m_location","m_cursorPos","m_refresh","m_inlineString","m_func","Store","locale","json","method","replaceHtml","getObjType","chatatABC","ABCatNum","luckysheetfontformat","getSheetIndex","getRangetxt","getluckysheetfile","setluckysheetfile","luckyColor","checkProtectionLocked","checkProtectionCellHidden","seletedHighlistByindex","luckysheet_count_show","isRealNum","isRealNull","valueIsError","isEditMode","isdatetime","isdatatype","getCellTextSplitArr","getCellTextInfo","getcellvalue","getcellFormula","getInlineStringNoStyle","getOrigincell","setcellvalue","genarate","valueShowEs","rowLocation","colLocation","colLocationByIndex","mouseposition","luckysheetRangeLast","jfrefreshgrid","isInlineStringCell","convertSpanToShareString","luckysheet_compareWith","luckysheet_getarraydata","luckysheet_getcelldata","luckysheet_parseData","luckysheet_getValue","luckysheet_indirect_check","luckysheet_indirect_check_return","luckysheet_offset_check","luckysheet_calcADPMM","luckysheet_getSpecialReference","error","v","n","na","r","d","nm","nl","sp","errorInfo","err","errorParamCheck","thisp","data","i","type","require","locale_formulaMore","formulaMore","length","indexOf","tipSuccessText","tipParamErrorText","getPureValueByData","output","row","c","cell","push","readCellDataToOneArray","rangeValue","_this","this","dataformat","test","replace","Function","concat","getValueByFuncData","value","arg","luckysheet_function","AVERAGE","f","apply","SUM","luckysheet","mask","getValueByFormat","sparklinesColorMap","args","len","colorLists","colorMap","colorListArray","a","ca","calist","split","index","colorList","classlist","province","11","12","13","14","15","21","22","23","31","32","33","34","35","36","37","41","42","43","44","45","46","50","51","52","53","54","61","62","63","64","65","71","81","82","91","oldvalue","dontupdate","luckysheetCellUpdate","$","html","cancelNormalSelected","rangetosheet","currentSheetIndex","changeSheetExec","fucntionboxshow","flowdata","extend","cellOffset","range","rows","cols","height","width","offsetRange","startCell","startCellRow","rowl","coll","parseInt","startCellCol","col","cellF","cellL","sheetName","parseDatetoNum","date","parseFloat","getRangeArray","rangeNow","fmt","ct","fa","getRangeArrayTwo","Object","m","isWildcard","b","toString","isCompareOperator","flag","num","str","charAt","reg","RegExp","match","ret","ope","strOne","substr","strTwo","acompareb","compareParams","fp","sym","classNameA","call","classNameB","propsA","getOwnPropertyNames","propsB","propName","parseDecimal","getcellrange","txt","formulaIndex","sheettxt","rangetxt","sheetIndex","sheetdata","luckysheetfile","cellTextToIndexList","val","substring","name","isNaN","item","column","addToCellIndexList","rangeHightlightHTML","createRangeHightlight","$span","find","remove","each","rangeindex","attr","text","append","id","cellrange","rangeid","css","background","end","show","searchHTML","helpHTML","getrangeseleciton","currSelection","window","getSelection","anchor","anchorNode","anchorOffset","parent","is","trim","lasttxt","prev","ahr","last","eq","searchFunctionPosition","$menu","$editor","x","y","isparam","winH","winW","menuW","outerWidth","menuH","outerHeight","left","top","get","reverse","searchFunctionCell","searchFunction","$editer","functionlist","$cell","inputContent","searchtxt","toUpperCase","result","s","t","result_i","unshift","list","listHTML","searchFunctionHTML","hide","$c","offset","searchFunctionEnter","$obj","functxt","after","setCaretPosition","next","helpFunctionExe","closest","on","removeClass","addClass","itemHTML","retHTML","class","functionlistPosition","helpFunction","funcname","paramIndex","$func","fht","ahf","fhcp","p","paramitem","nameli","repeat","allowRepeatText","allowOptionText","example","param","content","detail","helpClose","helpCollapse","helpExample","helpAbstract","click","$content","slideToggle","rangeResizeTo","$prev","currentIndex","funcName","paramindex","$cur","exceptIndex","endstate","rangeHightlightselected","kcode","opacity","updatecell","isRefresh","$input","inputText","inputHtml","dataVerification","dvItem","prohibitInput","validateCellData","failureText","getFailureText","info","curv","oldValue","JSON","stringify","isPrevInline","isCurInline","slice","isCopyVal","splitArr","join","createHookFunction","spl","qp","luckysheet_getcelldata_cache","isRunExecFunction","deepCopyFlowData","dynamicArrayItem","execfunction","undefined","curCalv","valueFunction","delFunctionGroup","execFunctionGroup","RowlChange","cfg","tb","defaultrowlen","canvas","getContext","cellWidth","textInfo","currentRowLen","textHeightAll","dynamicArray","insertUpdateDynamicArray","allParam","setTimeout","parse","execFunctionGlobalData","canceFunctionrangeSelected","removeAttr","rangestart","rangedrag_column_start","rangedrag_row_start","iscellformat","iscelldata","reg_cell","reg_cellRange","operator","operatorjson","functionCopy","mode","step","arr","op","funcstack","function_str","matchConfig","bracket","comma","squote","dquote","s_next","s_pre","downparam","upparam","leftparam","rightparam","isfreezonFuc","row$","col$","setfreezonFuceExe","setfreezonFuc","event","obj","pos","prefix","newtxt","newpos","rangetxtIndex","firsttxt","updateparam","orient","freezonFuc","$row","$col","freezonFuc0","freezonFuc1","$row0","$col0","$row1","$col1","functionStrChange","rc","stindex","functionStrChange_range","r1","r2","c1","c2","israngeseleciton","istooltip","rangeSetValueTo","rangechangeindex","func_selectedrange","rangeSetValue","selected","rf","cf","config","data_parm_index","txtdata","Array","txtArr","j","functionHtmlTxt","isVal","parmValArr","lvi","e","parmtxt","functionHTMLGenerate","functionParserExe","functionHTMLIndex","insertAfter","rangedrag","mouse","pageX","pageY","scrollLeft","scrollTop","row_location","row_pre","row_index","col_location","col_pre","col_index","rowseleted","columnseleted","changeFreezenIndex","changeparam","mergeMoveMain","scrollFreezen","rangedrag_column","visibledatarow","rangedrag_row","visibledatacolumn","rangedragged","rangeResizeObj","rangeResize","rangeResizeIndex","rangeResizexy","rangeResizeWinH","rangeResizeWinW","rangeResizeDraging","luckysheetCurrentChartResizeObj","luckysheetCurrentChartResizeXy","luckysheetCurrentChartResize","luckysheetCurrentChartResizeWinW","luckysheetCurrentChartResizeWinH","ch_width","rh_height","topchange","leftchange","getSelectedFromRange","row_st","row_ed","col_st","col_ed","rangeResizeDragged","rangeMovexy","rangeMove","rangeMoveObj","rangeMoveIndex","rangeMoveRangedata","rangeMoveDraging","luckysheet_cell_selected_move_index","luckysheet_select_save","sheetBarHeight","statisticBarHeight","row_index_original","col_index_original","row_s","row_e","col_s","col_e","display","rangeMoveDragged","functionRangeIndex","findrangeindex","vp","re","v_a","vp_a","pop","pfri","vplen","vlen","start","search","textDom","children","el","document","createRange","sel","setStart","childNodes","collapse","removeAllRanges","addRange","focus","functionRange","fri","selectAllChildren","collapseToEnd","selection","moveToElementText","select","functionInputHanddler","$to","$copy","value1","value1txt","editorlen","textRange","functionHTML","braces","regx","arraytxt","exec","arraystart","alltxt","getfunctionParam","compare","fn","calPostfixExpression","cal","stack","s2","checkBracketNum","bra_l","bra_r","bra_tl_txt","bra_tr_txt","bra_l_len","bra_r_len","bra_tl_len","bra_tr_len","bra_tl","bra_tr","operatorPriority","^","%","*","/","+","-","functionParser","cellRangeFunction","cal1","cal2","firstSQ","funcArray","functionS","stackCeilPri","shift","sPri","endstr","str_nb","calc","addFunctionGroup","func","file","calcChain","cc","saveParam","getAllFunctionGroup","tempCalcChain","forEach","idx","dynamicArray_compute","getFunctionGroup","updateFunctionGroup","insertUpdateFunctionGroup","isFunctionRangeSave","isFunctionRangeSimple","txtArray","isFunctionRangeSaveChange","isFunctionRangeSimple1","isFunctionRangeSelect","txt1","isOffsetFunc","formulaContainCellList","cellList","cellStr","isFunctionRange","addToCellList","checkSpecialFunctionRange","isd_range","d_r","d_c","calculateSheetIndex","execvertex","execFunctionGroupData","execFunctionExist","formulaContainSheetList","formulaTxt","cellstring","infoObj","addToSheetIndexList","obIndex","execFunctionGroupForce","isForce","origin_r","origin_c","cellCache","calcChains","formulaObjects","sheets","sheetData","sheet","updateValueOjects","updateValueArray","key","arrayMatchCache","formulaCell","calc_funcStr","formulaArray","point","formulaTextArray","sq_end_array","calc_funcStr_length","char","splice","parents","chidren","color","keys","formulaObject","cacheKey","functionArr","arrayMatch","childKey","childFormulaObject","formulaRunList","existsFormulaRunList","cacheStack","parentKey","parentFormulaObject","ii","level","Math","max","groupValuesRefreshData","spe","execFunctionGroup1","group","vertex1","count","times","u","excludeList","getChildrenVertex","ukey","functionDFS","chd","groupValuesRefresh","updateValue","webWorkerFlowDataCache","isrefresh","notInsertFunc","testFunction","execfunctionError","luckysheetCurrentRow","luckysheetCurrentColumn","luckysheetCurrentIndex","luckysheetCurrentFunction","sparklines","funcg","funcgStr","funcgRange","alert","execfunctionSelfError","execfunctionSelfErrorResult","console","log","isErr","execstringformula","functionResizeData","functionResizeStatus","functionResizeTimeout"],"mappings":"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","file":"../../global/formula.js","sourcesContent":["define([\n    '../utils/util',\n    '../methods/get',\n    '../methods/set',\n    '../controllers/constant',\n    '../controllers/sheetmanage',\n    '../controllers/menuButton',\n    '../controllers/server',\n    '../controllers/freezen',\n    '../controllers/protection',\n    '../controllers/dataVerificationCtrl',\n    '../controllers/select',\n    './validate',\n    './datecontroll',\n    '../global/getRowlen',\n    './getdata',\n    './setdata',\n    './format',\n    './editor',\n    './tooltip',\n    './location',\n    './cursorPos',\n    './refresh',\n    '../controllers/inlineString',\n    '../function/func',\n    '../store',\n    '../locale/locale',\n    './json',\n    './method'\n], function (m_util, m_get, m_set, m_constant, sheetmanage, menuButton, server, luckysheetFreezen, m_protection, dataVerificationCtrl, m_select, m_validate, m_datecontroll, m_getRowlen, m_getdata, m_setdata, m_format, editor, tooltip, m_location, m_cursorPos, m_refresh, m_inlineString, m_func, Store, locale, json, method) {\n    'use strict';\n    const {replaceHtml, getObjType, chatatABC, ABCatNum, luckysheetfontformat} = m_util;\n    const {getSheetIndex, getRangetxt, getluckysheetfile} = m_get;\n    const {setluckysheetfile} = m_set;\n    const {luckyColor} = m_constant;\n    const {checkProtectionLocked, checkProtectionCellHidden} = m_protection;\n    const {seletedHighlistByindex, luckysheet_count_show} = m_select;\n    const {isRealNum, isRealNull, valueIsError, isEditMode} = m_validate;\n    const {isdatetime, isdatatype} = m_datecontroll;\n    const {getCellTextSplitArr, getCellTextInfo} = m_getRowlen;\n    const {getcellvalue, getcellFormula, getInlineStringNoStyle, getOrigincell} = m_getdata;\n    const {setcellvalue} = m_setdata;\n    const {genarate, valueShowEs} = m_format;\n    const {rowLocation, colLocation, colLocationByIndex, mouseposition} = m_location;\n    const {luckysheetRangeLast} = m_cursorPos;\n    const {jfrefreshgrid} = m_refresh;\n    const {isInlineStringCell, convertSpanToShareString} = m_inlineString;\n    const {luckysheet_compareWith, luckysheet_getarraydata, luckysheet_getcelldata, luckysheet_parseData, luckysheet_getValue, luckysheet_indirect_check, luckysheet_indirect_check_return, luckysheet_offset_check, luckysheet_calcADPMM, luckysheet_getSpecialReference} = m_func;\n    const luckysheetformula = {\n        error: {\n            v: '#VALUE!',\n            //错误的参数或运算符\n            n: '#NAME?',\n            //公式名称错误\n            na: '#N/A',\n            //函数或公式中没有可用数值\n            r: '#REF!',\n            //删除了由其他公式引用的单元格\n            d: '#DIV/0!',\n            //除数是0或空单元格\n            nm: '#NUM!',\n            //当公式或函数中某个数字有问题时\n            nl: '#NULL!',\n            //交叉运算符（空格）使用不正确\n            sp: '#SPILL!'    //数组范围有其它值\n        },\n        //数组范围有其它值\n        errorInfo: function (err) {\n            return err;\n        },\n        errorParamCheck: function (thisp, data, i) {\n            let type, require;\n            let _locale = locale();\n            let locale_formulaMore = _locale.formulaMore;\n            if (i < thisp.length) {\n                type = thisp[i].type;\n                require = thisp[i].require;\n            } else {\n                type = thisp[thisp.length - 1].type;\n                require = thisp[thisp.length - 1].require;\n            }\n            if (require == 'o' && (data == null || data == '')) {\n                return [\n                    true,\n                    locale_formulaMore.tipSuccessText\n                ];\n            }\n            if (type.indexOf('all') > -1) {\n                return [\n                    true,\n                    locale_formulaMore.tipSuccessText\n                ];\n            } else {\n                if (type.indexOf('range') > -1 && (getObjType(data) == 'object' || getObjType(data) == 'array')) {\n                    return [\n                        true,\n                        locale_formulaMore.tipSuccessText\n                    ];\n                }\n                if (type.indexOf('number') > -1 && (isRealNum(data) || getObjType(data) == 'boolean')) {\n                    return [\n                        true,\n                        locale_formulaMore.tipSuccessText\n                    ];\n                }\n                if (type.indexOf('string') > -1 && getObjType(data) == 'string') {\n                    return [\n                        true,\n                        locale_formulaMore.tipSuccessText\n                    ];\n                }\n                if (type.indexOf('date') > -1 && isdatetime(data)) {\n                    return [\n                        true,\n                        locale_formulaMore.tipSuccessText\n                    ];\n                }\n                return [\n                    false,\n                    locale_formulaMore.tipParamErrorText\n                ];\n            }\n        },\n        getPureValueByData: function (data) {\n            if (data.length == 0) {\n                return [];\n            }\n            let output = [];\n            if (getObjType(data) == 'array') {\n                if (getObjType(data[0]) == 'array') {\n                    for (let r = 0; r < data.length; r++) {\n                        let row = [];\n                        for (let c = 0; c < data[0].length; c++) {\n                            let cell = data[r][c];\n                            if (getObjType(cell) == 'object') {\n                                row.push(cell.v);\n                            } else {\n                                row.push(cell);\n                            }\n                        }\n                        output.push(row);\n                    }\n                } else {\n                    for (let i = 0; i < data.length; i++) {\n                        let cell = data[i];\n                        if (getObjType(cell) == 'object') {\n                            output.push(cell.v);\n                        } else {\n                            output.push(cell);\n                        }\n                    }\n                }\n            } else {\n                let cell = data;\n                if (getObjType(cell) == 'object') {\n                    output.push(cell.v);\n                } else {\n                    output.push(cell);\n                }\n            }\n            return output;\n        },\n        //sparklines添加\n        readCellDataToOneArray: function (rangeValue) {\n            let _this = this;\n            if (rangeValue == null) {\n                return [];\n            }\n            if (getObjType(rangeValue) != 'object') {\n                return [rangeValue];\n            }\n            let dataformat = [];\n            let data = [];\n            if (rangeValue != null && rangeValue.data != null) {\n                data = rangeValue.data;\n            } else if (rangeValue != null && !isRealNull(rangeValue.v)) {\n                return [rangeValue.v];\n            } else {\n                return [];\n            }    //适配excel的动态数组格式，{1，2，3，4，5}或者{{1，2，3}，{4，5，6}，{7，8，9}}\n            //适配excel的动态数组格式，{1，2，3，4，5}或者{{1，2，3}，{4，5，6}，{7，8，9}}\n            if (getObjType(data) == 'array') {\n                data = _this.getPureValueByData(data);\n            } else if (getObjType(data) == 'object') {\n                data = data.v;\n                return [data];\n            } else {\n                if (/\\{.*?\\}/.test(data)) {\n                    data = data.replace(/\\{/g, '[').replace(/\\}/g, ']');\n                }\n                data = new Function('return ' + data)();\n            }    //把二维数组转换为一维数组，sparklines要求数据格式为一维数组\n                 //let dataformat = [];\n            //把二维数组转换为一维数组，sparklines要求数据格式为一维数组\n            //let dataformat = [];\n            if (getObjType(data[0]) == 'array') {\n                for (let i = 0; i < data.length; i++) {\n                    dataformat = dataformat.concat(data[i]);\n                }\n            } else {\n                dataformat = data;\n            }\n            return dataformat;\n        },\n        //sparklines添加\n        //获得函数里某个参数的值，使用此函数需要在函数中执行luckysheet_getValue方法\n        getValueByFuncData: function (value, arg) {\n            if (value == null) {\n                return null;\n            }\n            let _this = this;\n            if (getObjType(value) == 'array') {\n                if (arg == 'avg') {\n                    return luckysheet_function.AVERAGE.f.apply(luckysheet_function.AVERAGE, value);\n                } else if (arg == 'sum') {\n                    return luckysheet_function.SUM.f.apply(luckysheet_function.SUM, value);\n                } else {\n                    if (getObjType(value[0]) == 'object') {\n                        return luckysheet.mask.getValueByFormat(value[0]);\n                    } else {\n                        return value[0];\n                    }\n                }\n            } else if (getObjType(value) == 'object') {\n                return luckysheet.mask.getValueByFormat(value);\n            } else {\n                return value;\n            }\n        },\n        //sparklines添加\n        sparklinesColorMap: function (args, len) {\n            let _this = this;\n            let colorLists = null;\n            if (len == null) {\n                len = 5;\n            }\n            let index = 0;\n            if (args.length > len) {\n                for (let i = len; i < args.length; i++) {\n                    let colorMap = args[i];\n                    let colorListArray = _this.readCellDataToOneArray(colorMap);\n                    for (let a = 0; a < colorListArray.length; a++) {\n                        let ca = colorListArray[a];\n                        if (ca.indexOf(':') > -1) {\n                            if (!colorLists) {\n                                colorLists = {};\n                            }\n                            let calist = ca.split(':');\n                            if (calist.length == 2) {\n                                colorLists[calist[0]] = calist[1];\n                            } else if (calist.length > 1) {\n                                colorLists[calist[0] + ':' + calist[1]] = calist[2];\n                            }\n                        } else {\n                            if (!colorLists) {\n                                colorLists = [];\n                            }\n                            colorLists.push(ca);\n                        }\n                    }\n                    index++;\n                }\n            }\n            return colorLists;\n        },\n        //sparklines添加\n        colorList: [\n            '#2ec7c9',\n            '#fc5c5c',\n            '#5ab1ef',\n            '#ffb980',\n            '#d87a80',\n            '#8d98b3',\n            '#e5cf0d',\n            '#97b552',\n            '#95706d',\n            '#dc69aa',\n            '#07a2a4',\n            '#9a7fd1',\n            '#588dd5',\n            '#f5994e',\n            '#c05050',\n            '#59678c',\n            '#c9ab00',\n            '#7eb00a',\n            '#6f5553',\n            '#c14089'\n        ],\n        classlist: {\n            'province': {\n                11: '北京',\n                12: '天津',\n                13: '河北',\n                14: '山西',\n                15: '内蒙古',\n                21: '辽宁',\n                22: '吉林',\n                23: '黑龙江',\n                31: '上海',\n                32: '江苏',\n                33: '浙江',\n                34: '安徽',\n                35: '福建',\n                36: '江西',\n                37: '山东',\n                41: '河南',\n                42: '湖北',\n                43: '湖南',\n                44: '广东',\n                45: '广西',\n                46: '海南',\n                50: '重庆',\n                51: '四川',\n                52: '贵州',\n                53: '云南',\n                54: '西藏',\n                61: '陕西',\n                62: '甘肃',\n                63: '青海',\n                64: '宁夏',\n                65: '新疆',\n                71: '台湾',\n                81: '香港',\n                82: '澳门',\n                91: '国外'\n            }\n        },\n        oldvalue: null,\n        dontupdate: function () {\n            let _this = this;\n            Store.luckysheetCellUpdate.length = 0;    //clear array\n            //clear array\n            $('#luckysheet-functionbox-cell, #luckysheet-rich-text-editor').html(_this.oldvalue);\n            _this.cancelNormalSelected();\n            if (_this.rangetosheet != Store.currentSheetIndex) {\n                sheetmanage.changeSheetExec(_this.rangetosheet);\n            }\n        },\n        fucntionboxshow: function (r, c) {\n            if (!checkProtectionCellHidden(r, c, Store.currentSheetIndex)) {\n                $('#luckysheet-functionbox-cell').html('');\n                return;\n            }\n            let _this = this;\n            let d = Store.flowdata;\n            let value = '';    // && d[r][c].v != null\n            // && d[r][c].v != null\n            if (d[r] != null && d[r][c] != null) {\n                let cell = $.extend(true, {}, d[r][c]);\n                if (isInlineStringCell(cell)) {\n                    value = getInlineStringNoStyle(r, c);\n                } else if (cell.f != null) {\n                    value = getcellvalue(r, c, d, 'f');\n                } else {\n                    value = valueShowEs(r, c, d);\n                }\n            }\n            _this.oldvalue = value;\n            $('#luckysheet-functionbox-cell').html(value);\n        },\n        //获得某个单元格或区域的偏移一定距离后的单元格( Sheet1!B6:C8 格式)\n        cellOffset: function (range, rows, cols, height, width) {\n            // 参数：range or cell , rows,cols,height,width\n            let startCell = range.startCell;\n            let rowl = range.rowl;\n            let coll = range.coll;\n            let startCellRow = parseInt(startCell.replace(/[^0-9]/g, ''));\n            let startCellCol = ABCatNum(startCell.replace(/[^A-Za-z]/g, ''));\n            let row = [], col = [], offsetRange;\n            row[0] = startCellRow + rows;\n            col[0] = startCellCol + cols;\n            row[1] = row[0] + height - 1;\n            col[1] = col[0] + width - 1;\n            col[0] = chatatABC(col[0]);\n            col[1] = chatatABC(col[1]);\n            let cellF = col[0] + row[0];\n            let cellL = col[1] + row[1];\n            if (cellF == cellL) {\n                offsetRange = range.sheetName + '!' + cellF;\n            } else {\n                offsetRange = range.sheetName + '!' + cellF + ':' + cellL;\n            }\n            return offsetRange;\n        },\n        parseDatetoNum: function (date) {\n            //函数中获取到时间格式或者数字形式统一转化为数字进行运算\n            let _this = this;\n            if (typeof date == 'object' && typeof date.v == 'number') {\n                date = date.v;\n            } else if (isdatatype(date) == 'num') {\n                date = parseFloat(date);\n            } else if (isdatatype(date) == 'date') {\n                date = genarate(date)[2];\n            } else {\n                return _this.error.v;\n            }\n            return date;\n        },\n        //获取一维数组\n        getRangeArray: function (range) {\n            let rangeNow = [];\n            let fmt = 'General';\n            if (range.length == 1) {\n                //一行\n                for (let c = 0; c < range[0].length; c++) {\n                    if (range[0][c] != null && range[0][c].v) {\n                        rangeNow.push(range[0][c].v);\n                        let f = range[0][c].ct.fa;\n                        fmt = fmt == 'General' ? f : fmt;\n                    } else {\n                        //若单元格为null或为空，此处推入null（待考虑是否使用\"null\"）\n                        rangeNow.push(null);\n                    }\n                }\n            } else if (range[0].length == 1) {\n                //一列\n                for (let r = 0; r < range.length; r++) {\n                    if (range[r][0] != null && range[r][0].v) {\n                        rangeNow.push(range[r][0].v);\n                        let f = range[r][0].ct.fa;\n                        fmt = fmt == 'General' ? f : fmt;\n                    } else {\n                        rangeNow.push(null);\n                    }\n                }\n            } else {\n                for (let r = 0; r < range.length; r++) {\n                    for (let c = 0; c < range[r].length; c++) {\n                        if (range[r][c] != null && range[r][c].v) {\n                            rangeNow.push(range[r][c].v);\n                            let f = range[r][c].ct.fa;\n                            fmt = fmt == 'General' ? f : fmt;\n                        } else {\n                            rangeNow.push(null);\n                        }\n                    }\n                }\n            }\n            range = rangeNow;\n            return [\n                range,\n                fmt\n            ];\n        },\n        //获取二维数组：qksheet格式[[{v,m,ct}] ==> [1]\n        getRangeArrayTwo: function (range) {\n            let data = $.extend(true, [], range);\n            if (data.length == 1) {\n                //一行\n                for (let c = 0; c < data[0].length; c++) {\n                    if (data[0][c] instanceof Object) {\n                        if (data[0][c] != null && data[0][c] instanceof Object && !!data[0][c].m) {\n                            data[0][c] = data[0][c].m;\n                        } else {\n                            if (data[0][c] != null && data[0][c] instanceof Object && !!data[0][c].v) {\n                                data[0][c] = data[0][c].v;\n                            } else {\n                                data[0][c] = null;\n                            }\n                        }\n                    }\n                }\n            } else if (data[0].length == 1) {\n                //一列\n                for (let r = 0; r < data.length; r++) {\n                    if (data[r][0] instanceof Object) {\n                        if (data[r][0] != null && data[r][0] instanceof Object && !!data[r][0].m) {\n                            data[r][0] = data[r][0].m;\n                        } else {\n                            if (data[r][0] != null && data[r][0] instanceof Object && !!data[r][0].v) {\n                                data[r][0] = data[r][0].v;\n                            } else {\n                                data[r][0] = null;\n                            }\n                        }\n                    }\n                }\n            } else {\n                for (let r = 0; r < data.length; r++) {\n                    for (let c = 0; c < data[r].length; c++) {\n                        if (data[r][c] instanceof Object) {\n                            if (data[r][c] != null && data[r][c] instanceof Object && !!data[r][c].m) {\n                                data[r][c] = data[r][c].m;\n                            } else {\n                                if (data[r][c] != null && data[r][c] instanceof Object && !!data[r][c].v) {\n                                    data[r][c] = data[r][c].v;\n                                } else {\n                                    data[r][c] = null;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            return data;\n        },\n        isWildcard: function (a, b) {\n            //正则匹配通配符: * ? ~* ~?,a目标参数，b通配符\n            let _this = this;\n            a = a.toString();\n            b = b.toString();\n            if (_this.isCompareOperator(b).flag) {\n                b = _this.isCompareOperator(b).num;\n            }\n            let str = '';\n            for (let i = 0; i < b.length; i++) {\n                let v = b.charAt(i);\n                if (v == '*') {\n                    str += '.*';\n                } else if (v == '?') {\n                    str += '.';\n                } else if (v == '~') {\n                    if (b.charAt(i + 1) == '*') {\n                        str += '\\\\*';\n                        i++;\n                    } else if (b.charAt(i + 1) == '?') {\n                        str += '\\\\?';\n                        i++;\n                    } else {\n                        str += '~';\n                    }\n                } else {\n                    str += v;\n                }\n            }\n            let reg = new RegExp('^' + str + '$', 'g');\n            return !!a.match(reg);\n        },\n        isCompareOperator: function (str) {\n            //判断前一个或者两个字符是否是比较运算符\n            str = str.toString();\n            let ope = '';    //存放比较运算符\n            //存放比较运算符\n            let num = '';    //截取比较运算符之后的数字用于实际比较\n            //截取比较运算符之后的数字用于实际比较\n            let strOne = str.substr(0, 1);\n            let strTwo = str.substr(1, 1);\n            let flag = false;\n            let ret;\n            if (strOne == '>') {\n                if (strTwo == '=') {\n                    ope = str.substr(0, 2);\n                    num = str.substr(2);\n                    flag = true;\n                } else if (strTwo != '=') {\n                    ope = str.substr(0, 1);\n                    num = str.substr(1);\n                    flag = true;\n                }\n            } else if (strOne == '<') {\n                if (strTwo == '=' || strTwo == '>') {\n                    ope = str.substr(0, 2);\n                    num = str.substr(2);\n                    flag = true;\n                } else if (strTwo != '=' && strTwo != '>') {\n                    ope = str.substr(0, 1);\n                    num = str.substr(1);\n                    flag = true;\n                }\n            } else if (strOne == '=' && strTwo != '=') {\n                ope = str.substr(0, 1);\n                num = str.substr(1);\n                flag = true;\n            }\n            ret = {\n                'flag': flag,\n                'ope': ope,\n                'num': num\n            };\n            return ret;\n        },\n        acompareb: function (a, b) {\n            //a 与 b比较，b可为含比较符，通配符\n            let _this = this;\n            let flag = false;\n            if (isRealNum(b)) {\n                flag = luckysheet_compareWith(a, '==', b);\n            } else if (typeof b == 'string') {\n                //条件输入字符串，如：\">233\"\n                if (b.indexOf('*') != -1 || b.indexOf('?') != -1) {\n                    // 正则匹配：输入通配符：\"黑*\",\"白?\",以及\"白?黑*~*\"\n                    //通配符函数\n                    return _this.isWildcard(a, b);\n                } else if (_this.isCompareOperator(b).flag) {\n                    //\"黑糖\"\n                    let ope = _this.isCompareOperator(b).ope;\n                    let num = _this.isCompareOperator(b).num;\n                    flag = luckysheet_compareWith(a, ope, num);\n                } else {\n                    flag = luckysheet_compareWith(a, '==', b);\n                }\n            }\n            return flag;\n        },\n        compareParams: function (fp, sp, sym) {\n            //比较两个字符串或者数字的大小，支持比较对象,暂不支持数组\n            let flag = false;    //判断a和b的数据类型\n            //判断a和b的数据类型\n            let classNameA = toString.call(fp), classNameB = toString.call(sp);\n            if (sym == '>' && fp > sp) {\n                flag = true;\n            } else if (sym == '>=' && fp >= sp) {\n                flag = true;\n            } else if (sym == '<' && fp < sp) {\n                flag = true;\n            } else if (sym == '<=' && fp <= sp) {\n                flag = true;\n            } else if (sym == '=' && fp == sp) {\n                flag = true;\n            } else if (sym == '<>' && fp != sp) {\n                flag = true;\n            }    //对象类型比较相等\n            //对象类型比较相等\n            if (classNameA == '[object Object]' && classNameB == '[object Object]') {\n                //获取a和b的属性长度\n                let propsA = Object.getOwnPropertyNames(fp), propsB = Object.getOwnPropertyNames(sp);\n                if (propsA.length != propsB.length) {\n                    return false;\n                }\n                for (let i = 0; i < propsA.length; i++) {\n                    let propName = propsA[i];    //如果对应属性对应值不相等，则返回false\n                    //如果对应属性对应值不相等，则返回false\n                    if (fp[propName] !== sp[propName]) {\n                        return false;\n                    }\n                }\n                return true;\n            }    //数组类型\n            //数组类型\n            if (classNameA == '[object Array]' && classNameB == '[object Array]') {\n                if (fp.toString() == sp.toString()) {\n                    return true;\n                }\n                return false;\n            }\n            return flag;\n        },\n        parseDecimal: function (num) {\n            num = parseFloat(num);\n            let d = parseInt(num, 10);\n            if (d == 0) {\n                return num;\n            }\n            num = num % d;\n            return num;\n        },\n        getcellrange: function (txt, formulaIndex) {\n            if (txt == null || txt.length == 0) {\n                return;\n            }\n            let sheettxt = '', rangetxt = '', sheetIndex = null, sheetdata = null;\n            let luckysheetfile = getluckysheetfile();\n            if (txt.indexOf('!') > -1) {\n                if (txt in this.cellTextToIndexList) {\n                    return this.cellTextToIndexList[txt];\n                }\n                let val = txt.split('!');\n                sheettxt = val[0];\n                rangetxt = val[1];\n                sheettxt = sheettxt.replace(/\\\\'/g, \"'\").replace(/''/g, \"'\");\n                if (sheettxt.substr(0, 1) == \"'\" && sheettxt.substr(sheettxt.length - 1, 1) == \"'\") {\n                    sheettxt = sheettxt.substring(1, sheettxt.length - 1);\n                }\n                for (let i in luckysheetfile) {\n                    if (sheettxt == luckysheetfile[i].name) {\n                        sheetIndex = luckysheetfile[i].index;\n                        sheetdata = luckysheetfile[i].data;\n                        break;\n                    }\n                }\n            } else {\n                let i = formulaIndex;\n                if (i == null) {\n                    i = Store.currentSheetIndex;\n                }\n                if (txt + '_' + i in this.cellTextToIndexList) {\n                    return this.cellTextToIndexList[txt + '_' + i];\n                }\n                let index = getSheetIndex(i);\n                sheettxt = luckysheetfile[index].name;\n                sheetIndex = luckysheetfile[index].index;\n                sheetdata = Store.flowdata;\n                rangetxt = txt;\n            }\n            if (rangetxt.indexOf(':') == -1) {\n                let row = parseInt(rangetxt.replace(/[^0-9]/g, '')) - 1;\n                let col = ABCatNum(rangetxt.replace(/[^A-Za-z]/g, ''));\n                if (!isNaN(row) && !isNaN(col)) {\n                    let item = {\n                        'row': [\n                            row,\n                            row\n                        ],\n                        'column': [\n                            col,\n                            col\n                        ],\n                        'sheetIndex': sheetIndex\n                    };\n                    this.addToCellIndexList(txt, item);\n                    return item;\n                } else {\n                    return null;\n                }\n            } else {\n                rangetxt = rangetxt.split(':');\n                let row = [], col = [];\n                row[0] = parseInt(rangetxt[0].replace(/[^0-9]/g, '')) - 1;\n                row[1] = parseInt(rangetxt[1].replace(/[^0-9]/g, '')) - 1;\n                if (isNaN(row[0])) {\n                    row[0] = 0;\n                }\n                if (isNaN(row[1])) {\n                    row[1] = sheetdata.length - 1;\n                }\n                if (row[0] > row[1]) {\n                    return null;\n                }\n                col[0] = ABCatNum(rangetxt[0].replace(/[^A-Za-z]/g, ''));\n                col[1] = ABCatNum(rangetxt[1].replace(/[^A-Za-z]/g, ''));\n                if (isNaN(col[0])) {\n                    col[0] = 0;\n                }\n                if (isNaN(col[1])) {\n                    col[1] = sheetdata[0].length - 1;\n                }\n                if (col[0] > col[1]) {\n                    return null;\n                }\n                let item = {\n                    'row': row,\n                    'column': col,\n                    'sheetIndex': sheetIndex\n                };\n                this.addToCellIndexList(txt, item);\n                return item;\n            }\n        },\n        rangeHightlightHTML: '<div id=\"luckysheet-formula-functionrange-highlight-${id}\" rangeindex=\"${id}\"  class=\"luckysheet-selection-highlight luckysheet-formula-functionrange-highlight\"><div data-type=\"top\" class=\"luckysheet-selection-copy-top luckysheet-copy\"></div><div data-type=\"right\" class=\"luckysheet-selection-copy-right luckysheet-copy\"></div><div data-type=\"bottom\" class=\"luckysheet-selection-copy-bottom luckysheet-copy\"></div><div data-type=\"left\" class=\"luckysheet-selection-copy-left luckysheet-copy\"></div><div class=\"luckysheet-selection-copy-hc\"></div><div data-type=\"lt\" class=\"luckysheet-selection-highlight-topleft luckysheet-highlight\"></div><div data-type=\"rt\" class=\"luckysheet-selection-highlight-topright luckysheet-highlight\"></div><div data-type=\"lb\" class=\"luckysheet-selection-highlight-bottomleft luckysheet-highlight\"></div><div data-type=\"rb\" class=\"luckysheet-selection-highlight-bottomright luckysheet-highlight\"></div></div>',\n        createRangeHightlight: function () {\n            let _this = this;\n            let $span = $('#luckysheet-rich-text-editor').find('span.luckysheet-formula-functionrange-cell');\n            $('#luckysheet-formula-functionrange .luckysheet-formula-functionrange-highlight').remove();\n            $span.each(function () {\n                let rangeindex = $(this).attr('rangeindex'), range = $(this).text();\n                $('#luckysheet-formula-functionrange').append(replaceHtml(_this.rangeHightlightHTML, { 'id': rangeindex }));\n                let cellrange = _this.getcellrange(range);\n                let rangeid = 'luckysheet-formula-functionrange-highlight-' + rangeindex;\n                if (cellrange == null) {\n                } else if (cellrange.sheetIndex == Store.currentSheetIndex || cellrange.sheetIndex == -1 && _this.rangetosheet == Store.currentSheetIndex) {\n                    $('#' + rangeid).data('range', cellrange).find('.luckysheet-copy').css({ 'background': luckyColor[rangeindex] }).end().find('.luckysheet-highlight').css({ 'background': luckyColor[rangeindex] }).end().find('.luckysheet-selection-copy-hc').css({ 'background': luckyColor[rangeindex] });\n                    seletedHighlistByindex(rangeid, cellrange.row[0], cellrange.row[1], cellrange.column[0], cellrange.column[1]);\n                }\n            });\n            $('#luckysheet-formula-functionrange .luckysheet-formula-functionrange-highlight').show();\n        },\n        searchHTML: '<div id=\"luckysheet-formula-search-c\" class=\"luckysheet-formula-search-c\"></div>',\n        helpHTML: '<div id=\"luckysheet-formula-help-c\" class=\"luckysheet-formula-help-c\"> <div class=\"luckysheet-formula-help-close\" title=\"${helpClose}\"><i class=\"fa fa-times\" aria-hidden=\"true\"></i></div> <div class=\"luckysheet-formula-help-collapse\" title=\"${helpCollapse}\"><i class=\"fa fa-angle-up\" aria-hidden=\"true\"></i></div> <div class=\"luckysheet-formula-help-title\"><div class=\"luckysheet-formula-help-title-formula\"> <span class=\"luckysheet-arguments-help-function-name\">SUM</span> <span class=\"luckysheet-arguments-paren\">(</span> <span class=\"luckysheet-arguments-parameter-holder\"> <span class=\"luckysheet-arguments-help-parameter luckysheet-arguments-help-parameter-active\" dir=\"auto\">A2:A100</span>, <span class=\"luckysheet-arguments-help-parameter\" dir=\"auto\">101</span> </span> <span class=\"luckysheet-arguments-paren\">)</span> </div></div> <div class=\"luckysheet-formula-help-content\"> <div class=\"luckysheet-formula-help-content-example\"> <div class=\"luckysheet-arguments-help-section-title\">${helpExample}</div> <div class=\"luckysheet-arguments-help-formula\"> <span class=\"luckysheet-arguments-help-function-name\">SUM</span> <span class=\"luckysheet-arguments-paren\">(</span> <span class=\"luckysheet-arguments-parameter-holder\"> <span class=\"luckysheet-arguments-help-parameter luckysheet-arguments-help-parameter-active\" dir=\"auto\">A2:A100</span>, <span class=\"luckysheet-arguments-help-parameter\" dir=\"auto\">101</span> </span> <span class=\"luckysheet-arguments-paren\">)</span> </div> </div> <div class=\"luckysheet-formula-help-content-detail\"> <div class=\"luckysheet-arguments-help-section\"> <div class=\"luckysheet-arguments-help-section-title luckysheet-arguments-help-parameter-name\">${helpAbstract}</div> <span class=\"luckysheet-arguments-help-parameter-content\">${helpAbstract}</span> </div> </div> <div class=\"luckysheet-formula-help-content-param\"> ${param} </div> </div> <div class=\"luckysheet-formula-help-foot\"></div></div>',\n        getrangeseleciton: function () {\n            let currSelection = window.getSelection();\n            let anchor = $(currSelection.anchorNode);\n            let anchorOffset = currSelection.anchorOffset;\n            if (anchor.parent().is('span') && anchorOffset != 0) {\n                let txt = $.trim(anchor.text()), lasttxt = '';\n                if (txt.length == 0 && anchor.parent().prev().length > 0) {\n                    let ahr = anchor.parent().prev();\n                    txt = $.trim(ahr.text());\n                    lasttxt = txt.substr(txt.length - 1, 1);\n                    return ahr;\n                } else {\n                    lasttxt = txt.substr(anchorOffset - 1, 1);\n                    return anchor.parent();\n                }\n            } else if (anchor.is('#luckysheet-rich-text-editor') || anchor.is('#luckysheet-functionbox-cell')) {\n                let txt = $.trim(anchor.find('span').last().text());\n                if (txt.length == 0 && anchor.find('span').length > 1) {\n                    let ahr = anchor.find('span');\n                    txt = $.trim(ahr.eq(ahr.length - 2).text());\n                    return ahr;\n                } else {\n                    return anchor.find('span').last();\n                }\n            } else if (anchor.parent().is('#luckysheet-rich-text-editor') || anchor.parent().is('#luckysheet-functionbox-cell') || anchorOffset == 0) {\n                if (anchorOffset == 0) {\n                    anchor = anchor.parent();\n                }\n                if (anchor.prev().length > 0) {\n                    let txt = $.trim(anchor.prev().text());\n                    let lasttxt = txt.substr(txt.length - 1, 1);\n                    return anchor.prev();\n                }\n            }\n            return null;\n        },\n        searchFunctionPosition: function ($menu, $editor, x, y, isparam) {\n            let winH = $(window).height(), winW = $(window).width();\n            let menuW = $menu.outerWidth(), menuH = $menu.outerHeight();\n            if (isparam == null) {\n                isparam = false;\n            }\n            let left = x;\n            if (x + menuW > winW) {\n                left = x - menuW + $editor.outerWidth();\n            } else {\n                left = x;\n            }\n            let top = y;\n            if (y + menuH > winH) {\n                top = y - menuH;\n            } else {\n                top = y + $editor.outerHeight();\n                if (!isparam) {\n                    $menu.html($menu.find('.luckysheet-formula-search-item').get().reverse());\n                }\n            }\n            if (top < 0) {\n                top = 0;\n            }\n            if (left < 0) {\n                left = 0;\n            }\n            $menu.css({\n                'top': top,\n                'left': left\n            }).show();\n        },\n        searchFunctionCell: null,\n        searchFunction: function ($editer) {\n            let _this = this;\n            let functionlist = Store.functionlist;\n            let $cell = _this.getrangeseleciton();\n            _this.searchFunctionCell = $cell;\n            if ($cell == null || $editer == null) {\n                return;\n            }\n            let inputContent = $editer.text();\n            let searchtxt = $cell.text().toUpperCase();\n            let reg = /^[a-zA-Z]|[a-zA-Z_]+$/;\n            if (!reg.test(searchtxt) || inputContent.substr(0, 1) != '=') {\n                return;\n            }\n            let result = {\n                    'f': [],\n                    's': [],\n                    't': []\n                }, result_i = 0;\n            for (let i = 0; i < functionlist.length; i++) {\n                let item = functionlist[i], n = item.n;\n                if (n == searchtxt) {\n                    result.f.unshift(item);\n                    result_i++;\n                } else if (n.substr(0, searchtxt.length) == searchtxt) {\n                    result.s.unshift(item);\n                    result_i++;\n                } else if (n.indexOf(searchtxt) > -1) {\n                    result.t.unshift(item);\n                    result_i++;\n                }\n                if (result_i >= 10) {\n                    break;\n                }\n            }\n            let list = result.t.concat(result.s.concat(result.f));\n            if (list.length <= 0) {\n                return;\n            }\n            let listHTML = _this.searchFunctionHTML(list);\n            $('#luckysheet-formula-search-c').html(listHTML).show();\n            $('#luckysheet-formula-help-c').hide();\n            let $c = $editer.parent(), offset = $c.offset();\n            _this.searchFunctionPosition($('#luckysheet-formula-search-c'), $c, offset.left, offset.top);\n        },\n        searchFunctionEnter: function ($obj) {\n            let _this = this;\n            let functxt = $obj.data('func');\n            _this.searchFunctionCell.text(functxt).after('<span dir=\"auto\" class=\"luckysheet-formula-text-color\">(</span>');\n            _this.setCaretPosition(_this.searchFunctionCell.next().get(0), 0, 1);\n            $('#luckysheet-formula-search-c').hide();\n            _this.helpFunctionExe(_this.searchFunctionCell.closest('div'), _this.searchFunctionCell.next());\n        },\n        searchFunctionHTML: function (list) {\n            let _this = this;\n            if ($('#luckysheet-formula-search-c').length == 0) {\n                $('body').append(_this.searchHTML);\n                $('#luckysheet-formula-search-c').on('mouseover', '.luckysheet-formula-search-item', function () {\n                    $('#luckysheet-formula-search-c').find('.luckysheet-formula-search-item').removeClass('luckysheet-formula-search-item-active');\n                    $(this).addClass('luckysheet-formula-search-item-active');\n                }).on('mouseout', '.luckysheet-formula-search-item', function () {\n                }).on('click', '.luckysheet-formula-search-item', function () {\n                    if (_this.searchFunctionCell == null) {\n                        return;\n                    }\n                    _this.searchFunctionEnter($(this));\n                });\n            }\n            let itemHTML = '<div data-func=\"${n}\" class=\"luckysheet-formula-search-item ${class}\"><div class=\"luckysheet-formula-search-func\">${n}</div><div class=\"luckysheet-formula-search-detail\">${a}</div></div>';\n            let retHTML = '';\n            for (let i = 0; i < list.length; i++) {\n                let item = list[i];\n                if (i == list.length - 1) {\n                    retHTML += replaceHtml(itemHTML, {\n                        'class': 'luckysheet-formula-search-item-active',\n                        'n': item.n,\n                        'a': item.a\n                    });\n                } else {\n                    retHTML += replaceHtml(itemHTML, {\n                        'class': '',\n                        'n': item.n,\n                        'a': item.a\n                    });\n                }\n            }\n            return retHTML;\n        },\n        functionlistPosition: {},\n        helpFunction: function ($editer, funcname, paramIndex) {\n            let _this = this;\n            let functionlist = Store.functionlist;\n            let $func = functionlist[_this.functionlistPosition[$.trim(funcname).toUpperCase()]];\n            if ($func == null) {\n                return;\n            }\n            let _locale = locale();\n            let locale_formulaMore = _locale.formulaMore;\n            $('#luckysheet-formula-help-c .luckysheet-arguments-help-function-name').html($func.n);\n            $('#luckysheet-formula-help-c .luckysheet-arguments-help-parameter-content').html($func.d);\n            let helpformula = '<span class=\"luckysheet-arguments-help-function-name\">${name}</span> <span class=\"luckysheet-arguments-paren\">(</span> <span class=\"luckysheet-arguments-parameter-holder\"> ${param} </span> <span class=\"luckysheet-arguments-paren\">)</span>';\n            let helpformulaItem = '<span class=\"luckysheet-arguments-help-parameter\" dir=\"auto\">${param}</span>';\n            let helpformulaArg = '<div class=\"luckysheet-arguments-help-section\"><div class=\"luckysheet-arguments-help-section-title\">${param}</div><span class=\"luckysheet-arguments-help-parameter-content\">${content}</span></div>';    //\"n\": \"AVERAGE\",\n                                                                                                                                                                                                                                           //\"t\": \"1\",\n                                                                                                                                                                                                                                           //\"d\": \"返回数据集的算术平均值，对文本忽略不计。\",\n                                                                                                                                                                                                                                           //\"a\": \"返回数据集的算术平均值\",\n                                                                                                                                                                                                                                           //\"p\": [{ \"name\": \"数值1\", \"example\": \"A2:A100\", \"detail\": \"计算平均值时用到的第一个数值或范围。\", \"require\": \"m\", \"repeat\": \"n\", \"type\": \"rangenumber\" },\n                                                                                                                                                                                                                                           //    { \"name\": \"数值2\", \"example\": \"B2:B100\", \"detail\": \"计算平均值时用到的其他数值或范围。\", \"require\": \"o\", \"repeat\": \"y\", \"type\": \"rangenumber\" }\n                                                                                                                                                                                                                                           //]\n            //\"n\": \"AVERAGE\",\n            //\"t\": \"1\",\n            //\"d\": \"返回数据集的算术平均值，对文本忽略不计。\",\n            //\"a\": \"返回数据集的算术平均值\",\n            //\"p\": [{ \"name\": \"数值1\", \"example\": \"A2:A100\", \"detail\": \"计算平均值时用到的第一个数值或范围。\", \"require\": \"m\", \"repeat\": \"n\", \"type\": \"rangenumber\" },\n            //    { \"name\": \"数值2\", \"example\": \"B2:B100\", \"detail\": \"计算平均值时用到的其他数值或范围。\", \"require\": \"o\", \"repeat\": \"y\", \"type\": \"rangenumber\" }\n            //]\n            let fht = '', ahf = '', fhcp = '';\n            for (let i = 0; i < $func.p.length; i++) {\n                let paramitem = $func.p[i];\n                let name = paramitem.name, nameli = paramitem.name;\n                if (paramitem.repeat == 'y') {\n                    name += ', ...';\n                    nameli += '<span class=\"luckysheet-arguments-help-argument-info\">...-' + locale_formulaMore.allowRepeatText + '</span>';\n                }\n                if (paramitem.require == 'o') {\n                    name = '[' + name + ']';\n                    nameli += '<span class=\"luckysheet-arguments-help-argument-info\">-[' + locale_formulaMore.allowOptionText + ']</span>';\n                }\n                fht += '<span class=\"luckysheet-arguments-help-parameter\" dir=\"auto\">' + name + '</span>, ';\n                ahf += '<span class=\"luckysheet-arguments-help-parameter\" dir=\"auto\">' + paramitem.example + '</span>, ';\n                fhcp += replaceHtml(helpformulaArg, {\n                    'param': nameli,\n                    'content': paramitem.detail\n                });\n            }\n            fht = fht.substr(0, fht.length - 2);\n            ahf = ahf.substr(0, ahf.length - 2);\n            $('#luckysheet-formula-help-c .luckysheet-formula-help-title .luckysheet-arguments-parameter-holder').html(fht);    //介绍\n            //介绍\n            $('#luckysheet-formula-help-c .luckysheet-arguments-help-formula .luckysheet-arguments-parameter-holder').html(ahf);    //示例\n            //示例\n            $('#luckysheet-formula-help-c .luckysheet-formula-help-content-param').html(fhcp);    //参数\n            //参数\n            if (paramIndex == null) {\n                $('#luckysheet-formula-help-c .luckysheet-formula-help-title-formula .luckysheet-arguments-help-function-name').css('font-weight', 'bold');\n            } else {\n                $('#luckysheet-formula-help-c .luckysheet-formula-help-title-formula .luckysheet-arguments-help-function-name').css('font-weight', 'normal');\n                let index = paramIndex >= $func.p.length ? $func.p.length - 1 : paramIndex;\n                $('#luckysheet-formula-help-c .luckysheet-formula-help-title .luckysheet-arguments-parameter-holder .luckysheet-arguments-help-parameter').removeClass('luckysheet-arguments-help-parameter-active');\n                $('#luckysheet-formula-help-c .luckysheet-formula-help-title .luckysheet-arguments-parameter-holder .luckysheet-arguments-help-parameter').eq(index).addClass('luckysheet-arguments-help-parameter-active');\n                $('#luckysheet-formula-help-c .luckysheet-arguments-help-formula .luckysheet-arguments-parameter-holder .luckysheet-arguments-help-parameter').removeClass('luckysheet-arguments-help-parameter-active');\n                $('#luckysheet-formula-help-c .luckysheet-arguments-help-formula .luckysheet-arguments-parameter-holder .luckysheet-arguments-help-parameter').eq(index).addClass('luckysheet-arguments-help-parameter-active');\n                $('#luckysheet-formula-help-c .luckysheet-formula-help-content-param .luckysheet-arguments-help-section').removeClass('luckysheet-arguments-help-parameter-active');\n                $('#luckysheet-formula-help-c .luckysheet-formula-help-content-param .luckysheet-arguments-help-section').eq(index).addClass('luckysheet-arguments-help-parameter-active');\n            }\n            let $c = $editer.parent(), offset = $c.offset();\n            _this.searchFunctionPosition($('#luckysheet-formula-help-c'), $c, offset.left, offset.top, true);\n        },\n        helpFunctionExe: function ($editer, currSelection) {\n            let _this = this;\n            let functionlist = Store.functionlist;\n            let _locale = locale();\n            let locale_formulaMore = _locale.formulaMore;\n            if ($('#luckysheet-formula-help-c').length == 0) {\n                $('body').after(replaceHtml(_this.helpHTML, {\n                    helpClose: locale_formulaMore.helpClose,\n                    helpCollapse: locale_formulaMore.helpCollapse,\n                    helpExample: locale_formulaMore.helpExample,\n                    helpAbstract: locale_formulaMore.helpAbstract\n                }));\n                $('#luckysheet-formula-help-c .luckysheet-formula-help-close').click(function () {\n                    $('#luckysheet-formula-help-c').hide();\n                });\n                $('#luckysheet-formula-help-c .luckysheet-formula-help-collapse').click(function () {\n                    let $content = $('#luckysheet-formula-help-c .luckysheet-formula-help-content');\n                    $content.slideToggle(100, function () {\n                        let $c = _this.rangeResizeTo.parent(), offset = $c.offset();\n                        _this.searchFunctionPosition($('#luckysheet-formula-help-c'), $c, offset.left, offset.top, true);\n                    });\n                    if ($content.is(':hidden')) {\n                        $(this).html('<i class=\"fa fa-angle-up\" aria-hidden=\"true\"></i>');\n                    } else {\n                        $(this).html('<i class=\"fa fa-angle-down\" aria-hidden=\"true\"></i>');\n                    }\n                });\n                for (let i = 0; i < functionlist.length; i++) {\n                    _this.functionlistPosition[functionlist[i].n] = i;\n                }\n            }\n            if (!currSelection) {\n                return;\n            }\n            let $prev = currSelection, funcLen = $editer.length, $span = $editer.find('span'), currentIndex = currSelection.index(), i = currentIndex;\n            if ($prev == null) {\n                return;\n            }\n            let funcName = null, paramindex = null;\n            if ($span.eq(i).is('.luckysheet-formula-text-func')) {\n                funcName = $span.eq(i).text();\n            } else {\n                let $cur = null, exceptIndex = [\n                        -1,\n                        -1\n                    ];\n                while (--i > 0) {\n                    $cur = $span.eq(i);\n                    if ($cur.is('.luckysheet-formula-text-func') || $.trim($cur.text()).toUpperCase() in _this.functionlistPosition) {\n                        funcName = $cur.text();\n                        paramindex = null;\n                        let endstate = true;\n                        for (let a = i; a <= currentIndex; a++) {\n                            if (!paramindex) {\n                                paramindex = 0;\n                            }\n                            if (a >= exceptIndex[0] && a <= exceptIndex[1]) {\n                                continue;\n                            }\n                            $cur = $span.eq(a);\n                            if ($cur.is('.luckysheet-formula-text-rpar')) {\n                                exceptIndex = [\n                                    i,\n                                    a\n                                ];\n                                funcName = null;\n                                endstate = false;\n                                break;\n                            }\n                            if ($cur.is('.luckysheet-formula-text-comma')) {\n                                paramindex++;\n                            }\n                        }\n                        if (endstate) {\n                            break;\n                        }\n                    }\n                }\n            }\n            if (funcName == null) {\n                return;\n            }\n            _this.helpFunction($editer, funcName, paramindex);\n        },\n        rangeHightlightselected: function ($editer, kcode) {\n            let _this = this;\n            let currSelection = _this.getrangeseleciton();\n            $('#luckysheet-formula-search-c, #luckysheet-formula-help-c').hide();\n            $('#luckysheet-formula-functionrange .luckysheet-formula-functionrange-highlight .luckysheet-selection-copy-hc').css('opacity', '0.03');\n            $('#luckysheet-formula-search-c, #luckysheet-formula-help-c').hide();\n            _this.helpFunctionExe($editer, currSelection);    // console.log(currSelection, $(currSelection).closest(\".luckysheet-formula-functionrange-cell\").length);\n            // console.log(currSelection, $(currSelection).closest(\".luckysheet-formula-functionrange-cell\").length);\n            if ($(currSelection).closest('.luckysheet-formula-functionrange-cell').length == 0) {\n                _this.searchFunction($editer);\n                return;\n            }\n            let $anchorOffset = $(currSelection).closest('.luckysheet-formula-functionrange-cell');\n            let rangeindex = $anchorOffset.attr('rangeindex');\n            let rangeid = 'luckysheet-formula-functionrange-highlight-' + rangeindex;\n            $('#' + rangeid).find('.luckysheet-selection-copy-hc').css({ 'opacity': '0.13' });\n        },\n        updatecell: function (r, c, value, isRefresh = true) {\n            let _this = this;\n            let $input = $('#luckysheet-rich-text-editor');\n            let inputText = $input.text(), inputHtml = $input.html();\n            if (_this.rangetosheet != null && _this.rangetosheet != Store.currentSheetIndex) {\n                sheetmanage.changeSheetExec(_this.rangetosheet);\n            }\n            if (!checkProtectionLocked(r, c, Store.currentSheetIndex)) {\n                return;\n            }    //数据验证 输入数据无效时禁止输入\n            //数据验证 输入数据无效时禁止输入\n            if (dataVerificationCtrl.dataVerification != null) {\n                let dvItem = dataVerificationCtrl.dataVerification[r + '_' + c];\n                if (dvItem != null && dvItem.prohibitInput && !dataVerificationCtrl.validateCellData(inputText, dvItem)) {\n                    let failureText = dataVerificationCtrl.getFailureText(dvItem);\n                    tooltip.info(failureText, '');\n                    _this.cancelNormalSelected();\n                    return;\n                }\n            }\n            let curv = Store.flowdata[r][c];    // Store old value for hook function\n            // Store old value for hook function\n            const oldValue = JSON.stringify(curv);\n            let isPrevInline = isInlineStringCell(curv);\n            let isCurInline = inputText.slice(0, 1) != '=' && inputHtml.substr(0, 5) == '<span';\n            let isCopyVal = false;\n            if (!isCurInline && inputText && inputText.length > 0) {\n                let splitArr = inputText.replace(/\\r\\n/g, '_x000D_').replace(/&#13;&#10;/g, '_x000D_').replace(/\\r/g, '_x000D_').replace(/\\n/g, '_x000D_').split('_x000D_');\n                if (splitArr.length > 1) {\n                    isCopyVal = true;\n                    isCurInline = true;\n                    inputText = splitArr.join('\\r\\n');\n                }\n            }\n            if (!value && !isCurInline && isPrevInline) {\n                delete curv.ct.s;\n                curv.ct.t = 'g';\n                curv.ct.fa = 'General';\n                value = '';\n            } else if (isCurInline) {\n                if (getObjType(curv) != 'object') {\n                    curv = {};\n                }\n                delete curv.f;\n                delete curv.v;\n                delete curv.m;\n                if (curv.ct == null) {\n                    curv.ct = {};\n                    curv.ct.fa = 'General';\n                }\n                curv.ct.t = 'inlineStr';\n                curv.ct.s = convertSpanToShareString($input.find('span'));\n                if (isCopyVal) {\n                    curv.ct.s = [{ v: inputText }];\n                }\n            }    // API, we get value from user\n            // API, we get value from user\n            value = value || $input.text();    // Hook function\n            // Hook function\n            if (!method.createHookFunction('cellUpdateBefore', r, c, value, isRefresh)) {\n                _this.cancelNormalSelected();\n                return;\n            }\n            if (!isCurInline) {\n                if (isRealNull(value) && !isPrevInline) {\n                    if (curv == null || isRealNull(curv.v) && curv.spl == null && curv.f == null) {\n                        _this.cancelNormalSelected();\n                        return;\n                    }\n                } else if (curv != null && curv.qp != 1) {\n                    if (getObjType(curv) == 'object' && (value == curv.f || value == curv.v || value == curv.m)) {\n                        _this.cancelNormalSelected();\n                        return;\n                    } else if (value == curv) {\n                        _this.cancelNormalSelected();\n                        return;\n                    }\n                }\n                if (getObjType(value) == 'string' && value.slice(0, 1) == '=' && value.length > 1) {\n                } else if (getObjType(curv) == 'object' && curv.ct != null && curv.ct.fa != null && curv.ct.fa != '@' && !isRealNull(value)) {\n                    delete curv.m;    //更新时间m处理 ， 会实际删除单元格数据的参数（flowdata时已删除）\n                    //更新时间m处理 ， 会实际删除单元格数据的参数（flowdata时已删除）\n                    if (curv.f != null) {\n                        //如果原来是公式，而更新的数据不是公式，则把公式删除\n                        delete curv.f;\n                        delete curv.spl;    //删除单元格的sparklines的配置串\n                    }\n                }\n            }\n            //删除单元格的sparklines的配置串\n            window.luckysheet_getcelldata_cache = null;\n            let isRunExecFunction = true;\n            let d = editor.deepCopyFlowData(Store.flowdata);\n            let dynamicArrayItem = null;    //动态数组\n            //动态数组\n            if (getObjType(curv) == 'object') {\n                if (!isCurInline) {\n                    if (getObjType(value) == 'string' && value.slice(0, 1) == '=' && value.length > 1) {\n                        let v = _this.execfunction(value, r, c, undefined, true);\n                        isRunExecFunction = false;\n                        curv = $.extend(true, {}, d[r][c]);\n                        curv.v = v[1];\n                        curv.f = v[2];    //打进单元格的sparklines的配置串， 报错需要单独处理。\n                        //打进单元格的sparklines的配置串， 报错需要单独处理。\n                        if (v.length == 4 && v[3].type == 'sparklines') {\n                            delete curv.m;\n                            delete curv.v;\n                            let curCalv = v[3].data;\n                            if (getObjType(curCalv) == 'array' && getObjType(curCalv[0]) != 'object') {\n                                curv.v = curCalv[0];\n                            } else {\n                                curv.spl = v[3].data;\n                            }\n                        } else if (v.length == 4 && v[3].type == 'dynamicArrayItem') {\n                            dynamicArrayItem = v[3].data;\n                        }\n                    }    // from API setCellValue,luckysheet.setCellValue(0, 0, {f: \"=sum(D1)\", bg:\"#0188fb\"}),value is an object, so get attribute f as value\n                    else // from API setCellValue,luckysheet.setCellValue(0, 0, {f: \"=sum(D1)\", bg:\"#0188fb\"}),value is an object, so get attribute f as value\n                    if (getObjType(value) == 'object') {\n                        let valueFunction = value.f;\n                        if (getObjType(valueFunction) == 'string' && valueFunction.slice(0, 1) == '=' && valueFunction.length > 1) {\n                            let v = _this.execfunction(valueFunction, r, c, undefined, true);\n                            isRunExecFunction = false;    // get v/m/ct\n                            // get v/m/ct\n                            curv = $.extend(true, {}, d[r][c]);\n                            curv.v = v[1];\n                            curv.f = v[2];    //打进单元格的sparklines的配置串， 报错需要单独处理。\n                            //打进单元格的sparklines的配置串， 报错需要单独处理。\n                            if (v.length == 4 && v[3].type == 'sparklines') {\n                                delete curv.m;\n                                delete curv.v;\n                                let curCalv = v[3].data;\n                                if (getObjType(curCalv) == 'array' && getObjType(curCalv[0]) != 'object') {\n                                    curv.v = curCalv[0];\n                                } else {\n                                    curv.spl = v[3].data;\n                                }\n                            } else if (v.length == 4 && v[3].type == 'dynamicArrayItem') {\n                                dynamicArrayItem = v[3].data;\n                            }\n                        }    // from API setCellValue,luckysheet.setCellValue(0, 0, {f: \"=sum(D1)\", bg:\"#0188fb\"}),value is an object, so get attribute f as value\n                        else\n                            // from API setCellValue,luckysheet.setCellValue(0, 0, {f: \"=sum(D1)\", bg:\"#0188fb\"}),value is an object, so get attribute f as value\n                            {\n                                for (let attr in value) {\n                                    curv[attr] = value[attr];\n                                }    // let valueFunction = value.f;\n                                     // if(getObjType(valueFunction) == \"string\" && valueFunction.slice(0, 1) == \"=\" && valueFunction.length > 1){\n                                     //     let v = _this.execfunction(valueFunction, r, c, undefined, true);\n                                     //     isRunExecFunction = false;\n                                     //     // get v/m/ct\n                                     //     curv = d[r][c];\n                                     //     curv.v = v[1];\n                                     //     // get f\n                                     //     curv.f = v[2];\n                                     //     // get other cell style attribute\n                                     //     delete value.v;\n                                     //     delete value.m;\n                                     //     delete value.f;\n                                     //     Object.assign(curv,value);\n                                     //     //打进单元格的sparklines的配置串， 报错需要单独处理。\n                                     //     if(v.length == 4 && v[3].type == \"sparklines\"){\n                                     //         delete curv.m;\n                                     //         delete curv.v;\n                                     //         let curCalv = v[3].data;\n                                     //         if(getObjType(curCalv) == \"array\" && getObjType(curCalv[0]) != \"object\"){\n                                     //             curv.v = curCalv[0];\n                                     //         }\n                                     //         else{\n                                     //             curv.spl = v[3].data;\n                                     //         }\n                                     //     }\n                                     // }\n                            }\n                    } else\n                        // let valueFunction = value.f;\n                        // if(getObjType(valueFunction) == \"string\" && valueFunction.slice(0, 1) == \"=\" && valueFunction.length > 1){\n                        //     let v = _this.execfunction(valueFunction, r, c, undefined, true);\n                        //     isRunExecFunction = false;\n                        //     // get v/m/ct\n                        //     curv = d[r][c];\n                        //     curv.v = v[1];\n                        //     // get f\n                        //     curv.f = v[2];\n                        //     // get other cell style attribute\n                        //     delete value.v;\n                        //     delete value.m;\n                        //     delete value.f;\n                        //     Object.assign(curv,value);\n                        //     //打进单元格的sparklines的配置串， 报错需要单独处理。\n                        //     if(v.length == 4 && v[3].type == \"sparklines\"){\n                        //         delete curv.m;\n                        //         delete curv.v;\n                        //         let curCalv = v[3].data;\n                        //         if(getObjType(curCalv) == \"array\" && getObjType(curCalv[0]) != \"object\"){\n                        //             curv.v = curCalv[0];\n                        //         }\n                        //         else{\n                        //             curv.spl = v[3].data;\n                        //         }\n                        //     }\n                        // }\n                        {\n                            _this.delFunctionGroup(r, c);\n                            _this.execFunctionGroup(r, c, value);\n                            isRunExecFunction = false;\n                            curv = $.extend(true, {}, d[r][c]);    // let gd = _this.execFunctionGlobalData[r+\"_\"+c+\"_\"+Store.currentSheetIndex];\n                                                                   // if(gd!=null){\n                                                                   //     curv.v = gd.v;\n                                                                   // }\n                            // let gd = _this.execFunctionGlobalData[r+\"_\"+c+\"_\"+Store.currentSheetIndex];\n                            // if(gd!=null){\n                            //     curv.v = gd.v;\n                            // }\n                            curv.v = value;\n                            delete curv.f;\n                            delete curv.spl;\n                            if (curv.qp == 1 && ('' + value).substr(0, 1) != \"'\") {\n                                //if quotePrefix is 1, cell is force string, cell clear quotePrefix when it is updated\n                                curv.qp = 0;\n                                if (curv.ct != null) {\n                                    curv.ct.fa = 'General';\n                                    curv.ct.t = 'n';\n                                }\n                            }\n                        }\n                }\n                value = curv;\n            } else {\n                if (getObjType(value) == 'string' && value.slice(0, 1) == '=' && value.length > 1) {\n                    let v = _this.execfunction(value, r, c, undefined, true);\n                    isRunExecFunction = false;\n                    value = {\n                        'v': v[1],\n                        'f': v[2]\n                    };    //打进单元格的sparklines的配置串， 报错需要单独处理。\n                    //打进单元格的sparklines的配置串， 报错需要单独处理。\n                    if (v.length == 4 && v[3].type == 'sparklines') {\n                        let curCalv = v[3].data;\n                        if (getObjType(curCalv) == 'array' && getObjType(curCalv[0]) != 'object') {\n                            value.v = curCalv[0];\n                        } else {\n                            value.spl = v[3].data;\n                        }\n                    } else if (v.length == 4 && v[3].type == 'dynamicArrayItem') {\n                        dynamicArrayItem = v[3].data;\n                    }\n                }    // from API setCellValue,luckysheet.setCellValue(0, 0, {f: \"=sum(D1)\", bg:\"#0188fb\"}),value is an object, so get attribute f as value\n                else // from API setCellValue,luckysheet.setCellValue(0, 0, {f: \"=sum(D1)\", bg:\"#0188fb\"}),value is an object, so get attribute f as value\n                if (getObjType(value) == 'object') {\n                    let valueFunction = value.f;\n                    if (getObjType(valueFunction) == 'string' && valueFunction.slice(0, 1) == '=' && valueFunction.length > 1) {\n                        let v = _this.execfunction(valueFunction, r, c, undefined, true);\n                        isRunExecFunction = false;    // value = {\n                                                      //     \"v\": v[1],\n                                                      //     \"f\": v[2]\n                                                      // };\n                                                      // update attribute v\n                        // value = {\n                        //     \"v\": v[1],\n                        //     \"f\": v[2]\n                        // };\n                        // update attribute v\n                        value.v = v[1];\n                        value.f = v[2];    //打进单元格的sparklines的配置串， 报错需要单独处理。\n                        //打进单元格的sparklines的配置串， 报错需要单独处理。\n                        if (v.length == 4 && v[3].type == 'sparklines') {\n                            let curCalv = v[3].data;\n                            if (getObjType(curCalv) == 'array' && getObjType(curCalv[0]) != 'object') {\n                                value.v = curCalv[0];\n                            } else {\n                                value.spl = v[3].data;\n                            }\n                        } else if (v.length == 4 && v[3].type == 'dynamicArrayItem') {\n                            dynamicArrayItem = v[3].data;\n                        }\n                    } else {\n                        let v = curv;\n                        if (value.v == null) {\n                            value.v = v;\n                        }\n                    }\n                } else {\n                    _this.delFunctionGroup(r, c);\n                    _this.execFunctionGroup(r, c, value);\n                    isRunExecFunction = false;\n                }\n            }    // value maybe an object\n            // value maybe an object\n            setcellvalue(r, c, d, value);\n            _this.cancelNormalSelected();\n            let RowlChange = false;\n            let cfg = $.extend(true, {}, getluckysheetfile()[getSheetIndex(Store.currentSheetIndex)]['config']);\n            if (cfg['rowlen'] == null) {\n                cfg['rowlen'] = {};\n            }\n            if (d[r][c].tb == '2' && d[r][c].v != null || isInlineStringCell(d[r][c])) {\n                //自动换行\n                let defaultrowlen = Store.defaultrowlen;\n                let canvas = $('#luckysheetTableContent').get(0).getContext('2d');    // offlinecanvas.textBaseline = 'top'; //textBaseline以top计算\n                                                                                      // let fontset = luckysheetfontformat(d[r][c]);\n                                                                                      // offlinecanvas.font = fontset;\n                // offlinecanvas.textBaseline = 'top'; //textBaseline以top计算\n                // let fontset = luckysheetfontformat(d[r][c]);\n                // offlinecanvas.font = fontset;\n                if (cfg['customHeight'] && cfg['customHeight'][r] == 1) {\n                } else {\n                    // let currentRowLen = defaultrowlen;\n                    // if(cfg[\"rowlen\"][r] != null){\n                    //     currentRowLen = cfg[\"rowlen\"][r];\n                    // }\n                    let cellWidth = colLocationByIndex(c)[1] - colLocationByIndex(c)[0] - 2;\n                    let textInfo = getCellTextInfo(d[r][c], canvas, {\n                        r: r,\n                        c: c,\n                        cellWidth: cellWidth\n                    });\n                    let currentRowLen = defaultrowlen;    // console.log(\"rowlen\", textInfo);\n                    // console.log(\"rowlen\", textInfo);\n                    if (textInfo != null) {\n                        currentRowLen = textInfo.textHeightAll + 2;\n                    }    // let strValue = getcellvalue(r, c, d).toString();\n                         // let measureText = offlinecanvas.measureText(strValue);\n                         // let textMetrics = measureText.width;\n                         // let cellWidth = colLocationByIndex(c)[1] - colLocationByIndex(c)[0] - 4;\n                         // let oneLineTextHeight = measureText.actualBoundingBoxDescent - measureText.actualBoundingBoxAscent;\n                         // if(textMetrics > cellWidth){\n                         //     let strArr = [];//文本截断数组\n                         //     strArr = getCellTextSplitArr(strValue, strArr, cellWidth, offlinecanvas);\n                         //     let computeRowlen = oneLineTextHeight * strArr.length + 4;\n                         //     //比较计算高度和当前高度取最大高度\n                         //     if(computeRowlen > currentRowLen){\n                         //         currentRowLen = computeRowlen;\n                         //     }\n                         // }\n                    // let strValue = getcellvalue(r, c, d).toString();\n                    // let measureText = offlinecanvas.measureText(strValue);\n                    // let textMetrics = measureText.width;\n                    // let cellWidth = colLocationByIndex(c)[1] - colLocationByIndex(c)[0] - 4;\n                    // let oneLineTextHeight = measureText.actualBoundingBoxDescent - measureText.actualBoundingBoxAscent;\n                    // if(textMetrics > cellWidth){\n                    //     let strArr = [];//文本截断数组\n                    //     strArr = getCellTextSplitArr(strValue, strArr, cellWidth, offlinecanvas);\n                    //     let computeRowlen = oneLineTextHeight * strArr.length + 4;\n                    //     //比较计算高度和当前高度取最大高度\n                    //     if(computeRowlen > currentRowLen){\n                    //         currentRowLen = computeRowlen;\n                    //     }\n                    // }\n                    if (currentRowLen > defaultrowlen) {\n                        cfg['rowlen'][r] = currentRowLen;\n                        RowlChange = true;\n                    }\n                }\n            }    //动态数组\n            //动态数组\n            let dynamicArray = null;\n            if (!!dynamicArrayItem) {\n                // let file = Store.luckysheetfile[getSheetIndex(Store.currentSheetIndex)];\n                dynamicArray = $.extend(true, [], this.insertUpdateDynamicArray(dynamicArrayItem));    // dynamicArray.push(dynamicArrayItem);\n            }\n            // dynamicArray.push(dynamicArrayItem);\n            let allParam = { 'dynamicArray': dynamicArray };\n            if (RowlChange) {\n                allParam = {\n                    'cfg': cfg,\n                    'dynamicArray': dynamicArray,\n                    'RowlChange': RowlChange\n                };\n            }\n            setTimeout(() => {\n                // Hook function\n                method.createHookFunction('cellUpdated', r, c, JSON.parse(oldValue), Store.flowdata[r][c], isRefresh);\n            }, 0);\n            if (isRefresh) {\n                jfrefreshgrid(d, [{\n                        'row': [\n                            r,\n                            r\n                        ],\n                        'column': [\n                            c,\n                            c\n                        ]\n                    }], allParam, isRunExecFunction);    // Store.luckysheetCellUpdate.length = 0; //clear array\n                // Store.luckysheetCellUpdate.length = 0; //clear array\n                _this.execFunctionGlobalData = null;    //销毁\n            } else\n                //销毁\n                {\n                    return {\n                        data: d,\n                        allParam: allParam\n                    };\n                }\n        },\n        cancelNormalSelected: function () {\n            let _this = this;\n            _this.canceFunctionrangeSelected();\n            $('#luckysheet-formula-functionrange .luckysheet-formula-functionrange-highlight').remove();\n            $('#luckysheet-input-box').removeAttr('style');\n            $('#luckysheet-input-box-index').hide();\n            $('#luckysheet-wa-functionbox-cancel, #luckysheet-wa-functionbox-confirm').removeClass('luckysheet-wa-calculate-active');\n            _this.rangestart = false;\n            _this.rangedrag_column_start = false;\n            _this.rangedrag_row_start = false;\n        },\n        canceFunctionrangeSelected: function () {\n            $('#luckysheet-formula-functionrange-select').hide();\n            $('#luckysheet-row-count-show, #luckysheet-column-count-show').hide();    // $(\"#luckysheet-cols-h-selected, #luckysheet-rows-h-selected\").hide();\n            // $(\"#luckysheet-cols-h-selected, #luckysheet-rows-h-selected\").hide();\n            $('#luckysheet-formula-search-c, #luckysheet-formula-help-c').hide();\n        },\n        iscellformat: function (txt) {\n            let re_abc = /[abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ][123456789]/;\n        },\n        iscelldata: function (txt) {\n            //判断是否为单元格格式\n            let val = txt.split('!'), rangetxt;\n            if (val.length > 1) {\n                rangetxt = val[1];\n            } else {\n                rangetxt = val[0];\n            }\n            let reg_cell = /^(([a-zA-Z]+)|([$][a-zA-Z]+))(([0-9]+)|([$][0-9]+))$/g;    //增加正则判断单元格为字母+数字的格式：如 A1:B3\n            //增加正则判断单元格为字母+数字的格式：如 A1:B3\n            let reg_cellRange = /^(((([a-zA-Z]+)|([$][a-zA-Z]+))(([0-9]+)|([$][0-9]+)))|((([a-zA-Z]+)|([$][a-zA-Z]+))))$/g;    //增加正则判断单元格为字母+数字或字母的格式：如 A1:B3，A:A\n            //增加正则判断单元格为字母+数字或字母的格式：如 A1:B3，A:A\n            if (rangetxt.indexOf(':') == -1) {\n                let row = parseInt(rangetxt.replace(/[^0-9]/g, '')) - 1;\n                let col = ABCatNum(rangetxt.replace(/[^A-Za-z]/g, ''));\n                if (!isNaN(row) && !isNaN(col) && rangetxt.toString().match(reg_cell)) {\n                    return true;\n                } else if (!isNaN(row)) {\n                    return false;\n                } else if (!isNaN(col)) {\n                    return false;\n                } else {\n                    return false;\n                }\n            } else {\n                reg_cellRange = /^(((([a-zA-Z]+)|([$][a-zA-Z]+))(([0-9]+)|([$][0-9]+)))|((([a-zA-Z]+)|([$][a-zA-Z]+)))|((([0-9]+)|([$][0-9]+s))))$/g;\n                rangetxt = rangetxt.split(':');\n                let row = [], col = [];\n                row[0] = parseInt(rangetxt[0].replace(/[^0-9]/g, '')) - 1;\n                row[1] = parseInt(rangetxt[1].replace(/[^0-9]/g, '')) - 1;\n                if (row[0] > row[1]) {\n                    return false;\n                }\n                col[0] = ABCatNum(rangetxt[0].replace(/[^A-Za-z]/g, ''));\n                col[1] = ABCatNum(rangetxt[1].replace(/[^A-Za-z]/g, ''));\n                if (col[0] > col[1]) {\n                    return false;\n                }\n                if (rangetxt[0].toString().match(reg_cellRange) && rangetxt[1].toString().match(reg_cellRange)) {\n                    return true;\n                } else {\n                    return false;\n                }\n            }\n        },\n        operator: '==|!=|<>|<=|>=|=|+|-|>|<|/|*|%|&|^',\n        operatorjson: null,\n        functionCopy: function (txt, mode, step) {\n            let _this = this;\n            if (_this.operatorjson == null) {\n                let arr = _this.operator.split('|'), op = {};\n                for (let i = 0; i < arr.length; i++) {\n                    op[arr[i].toString()] = 1;\n                }\n                _this.operatorjson = op;\n            }\n            if (mode == null) {\n                mode = 'down';\n            }\n            if (step == null) {\n                step = 1;\n            }\n            if (txt.substr(0, 1) == '=') {\n                txt = txt.substr(1);\n            }\n            let funcstack = txt.split('');\n            let i = 0, str = '', function_str = '', ispassby = true;\n            let matchConfig = {\n                'bracket': 0,\n                'comma': 0,\n                'squote': 0,\n                'dquote': 0\n            };\n            while (i < funcstack.length) {\n                let s = funcstack[i];\n                if (s == '(' && matchConfig.dquote == 0) {\n                    matchConfig.bracket += 1;\n                    if (str.length > 0) {\n                        function_str += str + '(';\n                    } else {\n                        function_str += '(';\n                    }\n                    str = '';\n                } else if (s == ')' && matchConfig.dquote == 0) {\n                    matchConfig.bracket -= 1;\n                    function_str += _this.functionCopy(str, mode, step) + ')';\n                    str = '';\n                } else if (s == '\"' && matchConfig.squote == 0) {\n                    if (matchConfig.dquote > 0) {\n                        function_str += str + '\"';\n                        matchConfig.dquote -= 1;\n                        str = '';\n                    } else {\n                        matchConfig.dquote += 1;\n                        str += '\"';\n                    }\n                } else if (s == ',' && matchConfig.dquote == 0) {\n                    function_str += _this.functionCopy(str, mode, step) + ',';\n                    str = '';\n                } else if (s == '&' && matchConfig.dquote == 0) {\n                    if (str.length > 0) {\n                        function_str += _this.functionCopy(str, mode, step) + '&';\n                        str = '';\n                    } else {\n                        function_str += '&';\n                    }\n                } else if (s in _this.operatorjson && matchConfig.dquote == 0) {\n                    let s_next = '';\n                    if (i + 1 < funcstack.length) {\n                        s_next = funcstack[i + 1];\n                    }\n                    let p = i - 1, s_pre = null;\n                    if (p >= 0) {\n                        do {\n                            s_pre = funcstack[p--];\n                        } while (p >= 0 && s_pre == ' ');\n                    }\n                    if (s + s_next in _this.operatorjson) {\n                        if (str.length > 0) {\n                            function_str += _this.functionCopy(str, mode, step) + s + s_next;\n                            str = '';\n                        } else {\n                            function_str += s + s_next;\n                        }\n                        i++;\n                    } else if (!/[^0-9]/.test(s_next) && s == '-' && (s_pre == '(' || s_pre == null || s_pre == ',' || s_pre == ' ' || s_pre in _this.operatorjson)) {\n                        str += s;\n                    } else {\n                        if (str.length > 0) {\n                            function_str += _this.functionCopy(str, mode, step) + s;\n                            str = '';\n                        } else {\n                            function_str += s;\n                        }\n                    }\n                } else {\n                    str += s;\n                }\n                if (i == funcstack.length - 1) {\n                    if (_this.iscelldata($.trim(str))) {\n                        if (mode == 'down') {\n                            function_str += _this.downparam($.trim(str), step);\n                        } else if (mode == 'up') {\n                            function_str += _this.upparam($.trim(str), step);\n                        } else if (mode == 'left') {\n                            function_str += _this.leftparam($.trim(str), step);\n                        } else if (mode == 'right') {\n                            function_str += _this.rightparam($.trim(str), step);\n                        }\n                    } else {\n                        function_str += $.trim(str);\n                    }\n                }\n                i++;\n            }\n            return function_str;\n        },\n        isfreezonFuc: function (txt) {\n            let row = txt.replace(/[^0-9]/g, '');\n            let col = txt.replace(/[^A-Za-z]/g, '');\n            let row$ = txt.substr(txt.indexOf(row) - 1, 1);\n            let col$ = txt.substr(txt.indexOf(col) - 1, 1);\n            let ret = [\n                false,\n                false\n            ];\n            if (row$ == '$') {\n                ret[0] = true;\n            }\n            if (col$ == '$') {\n                ret[1] = true;\n            }\n            return ret;\n        },\n        setfreezonFuceExe: function (rangetxt) {\n            let row = parseInt(rangetxt.replace(/[^0-9]/g, ''));\n            let col = ABCatNum(rangetxt.replace(/[^A-Za-z]/g, ''));\n            let $row = '$', $col = '$';\n            if (!isNaN(row) && !isNaN(col)) {\n                return $col + chatatABC(col) + $row + row;\n            } else if (!isNaN(row)) {\n                return $row + row;\n            } else if (!isNaN(col)) {\n                return $col + chatatABC(col);\n            } else {\n                return rangetxt;\n            }\n        },\n        setfreezonFuc: function (event) {\n            let _this = this;\n            let obj = _this.getrangeseleciton();\n            if (!_this.iscelldata(obj.text())) {\n                return;\n            }\n            let txt = obj.text(), pos = window.getSelection().anchorOffset;\n            let val = txt.split('!'), rangetxt, prefix = '';\n            if (val.length > 1) {\n                rangetxt = val[1];\n                prefix = val[0] + '!';\n            } else {\n                rangetxt = val[0];\n            }\n            let newtxt = '', newpos = '';\n            let rangetxtIndex = rangetxt.indexOf(':');\n            if (rangetxtIndex == -1) {\n                newtxt = prefix + _this.setfreezonFuceExe(rangetxt);\n                newpos = newtxt.length;\n            } else {\n                rangetxt = rangetxt.split(':');\n                if (pos > rangetxtIndex) {\n                    let ret = prefix + rangetxt[0] + ':' + _this.setfreezonFuceExe(rangetxt[1]);\n                    newtxt = ret;\n                    newpos = ret.length;\n                } else {\n                    let firsttxt = prefix + _this.setfreezonFuceExe(rangetxt[0]);\n                    let ret = firsttxt + ':' + rangetxt[1];\n                    newtxt = ret;\n                    newpos = firsttxt.length;\n                }\n            }\n            obj.text(prefix + newtxt);\n            _this.setCaretPosition(obj.get(0), 0, newpos);\n        },\n        updateparam: function (orient, txt, step) {\n            let _this = this;\n            let val = txt.split('!'), rangetxt, prefix = '';\n            if (val.length > 1) {\n                rangetxt = val[1];\n                prefix = val[0] + '!';\n            } else {\n                rangetxt = val[0];\n            }\n            if (rangetxt.indexOf(':') == -1) {\n                let row = parseInt(rangetxt.replace(/[^0-9]/g, ''));\n                let col = ABCatNum(rangetxt.replace(/[^A-Za-z]/g, ''));\n                let freezonFuc = _this.isfreezonFuc(rangetxt);\n                let $row = freezonFuc[0] ? '$' : '', $col = freezonFuc[1] ? '$' : '';\n                if (orient == 'u' && !freezonFuc[0]) {\n                    row -= step;\n                } else if (orient == 'r' && !freezonFuc[1]) {\n                    col += step;\n                } else if (orient == 'l' && !freezonFuc[1]) {\n                    col -= step;\n                } else if (orient == 'd' && !freezonFuc[0]) {\n                    row += step;\n                }\n                if (row[0] < 0 || col[0] < 0) {\n                    return _this.error.r;\n                }\n                if (!isNaN(row) && !isNaN(col)) {\n                    return prefix + $col + chatatABC(col) + $row + row;\n                } else if (!isNaN(row)) {\n                    return prefix + $row + row;\n                } else if (!isNaN(col)) {\n                    return prefix + $col + chatatABC(col);\n                } else {\n                    return txt;\n                }\n            } else {\n                rangetxt = rangetxt.split(':');\n                let row = [], col = [];\n                row[0] = parseInt(rangetxt[0].replace(/[^0-9]/g, ''));\n                row[1] = parseInt(rangetxt[1].replace(/[^0-9]/g, ''));\n                if (row[0] > row[1]) {\n                    return txt;\n                }\n                col[0] = ABCatNum(rangetxt[0].replace(/[^A-Za-z]/g, ''));\n                col[1] = ABCatNum(rangetxt[1].replace(/[^A-Za-z]/g, ''));\n                if (col[0] > col[1]) {\n                    return txt;\n                }\n                let freezonFuc0 = _this.isfreezonFuc(rangetxt[0]);\n                let freezonFuc1 = _this.isfreezonFuc(rangetxt[1]);\n                let $row0 = freezonFuc0[0] ? '$' : '', $col0 = freezonFuc0[1] ? '$' : '';\n                let $row1 = freezonFuc1[0] ? '$' : '', $col1 = freezonFuc1[1] ? '$' : '';\n                if (orient == 'u') {\n                    if (!freezonFuc0[0]) {\n                        row[0] -= step;\n                    }\n                    if (!freezonFuc1[0]) {\n                        row[1] -= step;\n                    }\n                } else if (orient == 'r') {\n                    if (!freezonFuc0[1]) {\n                        col[0] += step;\n                    }\n                    if (!freezonFuc1[1]) {\n                        col[1] += step;\n                    }\n                } else if (orient == 'l') {\n                    if (!freezonFuc0[1]) {\n                        col[0] -= step;\n                    }\n                    if (!freezonFuc1[1]) {\n                        col[1] -= step;\n                    }\n                } else if (orient == 'd') {\n                    if (!freezonFuc0[0]) {\n                        row[0] += step;\n                    }\n                    if (!freezonFuc1[0]) {\n                        row[1] += step;\n                    }\n                }\n                if (row[0] < 0 || col[0] < 0) {\n                    return _this.error.r;\n                }\n                if (isNaN(col[0]) && isNaN(col[1])) {\n                    return prefix + $row0 + row[0] + ':' + $row1 + row[1];\n                } else if (isNaN(row[0]) && isNaN(row[1])) {\n                    return prefix + $col0 + chatatABC(col[0]) + ':' + $col1 + chatatABC(col[1]);\n                } else {\n                    return prefix + $col0 + chatatABC(col[0]) + $row0 + row[0] + ':' + $col1 + chatatABC(col[1]) + $row1 + row[1];\n                }\n            }\n        },\n        downparam: function (txt, step) {\n            return this.updateparam('d', txt, step);\n        },\n        upparam: function (txt, step) {\n            return this.updateparam('u', txt, step);\n        },\n        leftparam: function (txt, step) {\n            return this.updateparam('l', txt, step);\n        },\n        rightparam: function (txt, step) {\n            return this.updateparam('r', txt, step);\n        },\n        functionStrChange: function (txt, type, rc, orient, stindex, step) {\n            let _this = this;\n            if (_this.operatorjson == null) {\n                let arr = _this.operator.split('|'), op = {};\n                for (let i = 0; i < arr.length; i++) {\n                    op[arr[i].toString()] = 1;\n                }\n                _this.operatorjson = op;\n            }\n            if (txt.substr(0, 1) == '=') {\n                txt = txt.substr(1);\n            }\n            let funcstack = txt.split('');\n            let i = 0, str = '', function_str = '', ispassby = true;\n            let matchConfig = {\n                'bracket': 0,\n                //括号\n                'comma': 0,\n                //逗号\n                'squote': 0,\n                //单引号\n                'dquote': 0    //双引号\n            };\n            //双引号\n            while (i < funcstack.length) {\n                let s = funcstack[i];\n                if (s == '(' && matchConfig.dquote == 0) {\n                    matchConfig.bracket += 1;\n                    if (str.length > 0) {\n                        function_str += str + '(';\n                    } else {\n                        function_str += '(';\n                    }\n                    str = '';\n                } else if (s == ')' && matchConfig.dquote == 0) {\n                    matchConfig.bracket -= 1;\n                    function_str += _this.functionStrChange(str, type, rc, orient, stindex, step) + ')';\n                    str = '';\n                } else if (s == '\"' && matchConfig.squote == 0) {\n                    if (matchConfig.dquote > 0) {\n                        function_str += str + '\"';\n                        matchConfig.dquote -= 1;\n                        str = '';\n                    } else {\n                        matchConfig.dquote += 1;\n                        str += '\"';\n                    }\n                } else if (s == ',' && matchConfig.dquote == 0) {\n                    function_str += _this.functionStrChange(str, type, rc, orient, stindex, step) + ',';\n                    str = '';\n                } else if (s == '&' && matchConfig.dquote == 0) {\n                    if (str.length > 0) {\n                        function_str += _this.functionStrChange(str, type, rc, orient, stindex, step) + '&';\n                        str = '';\n                    } else {\n                        function_str += '&';\n                    }\n                } else if (s in _this.operatorjson && matchConfig.dquote == 0) {\n                    let s_next = '';\n                    if (i + 1 < funcstack.length) {\n                        s_next = funcstack[i + 1];\n                    }\n                    let p = i - 1, s_pre = null;\n                    if (p >= 0) {\n                        do {\n                            s_pre = funcstack[p--];\n                        } while (p >= 0 && s_pre == ' ');\n                    }\n                    if (s + s_next in _this.operatorjson) {\n                        if (str.length > 0) {\n                            function_str += _this.functionStrChange(str, type, rc, orient, stindex, step) + s + s_next;\n                            str = '';\n                        } else {\n                            function_str += s + s_next;\n                        }\n                        i++;\n                    } else if (!/[^0-9]/.test(s_next) && s == '-' && (s_pre == '(' || s_pre == null || s_pre == ',' || s_pre == ' ' || s_pre in _this.operatorjson)) {\n                        str += s;\n                    } else {\n                        if (str.length > 0) {\n                            function_str += _this.functionStrChange(str, type, rc, orient, stindex, step) + s;\n                            str = '';\n                        } else {\n                            function_str += s;\n                        }\n                    }\n                } else {\n                    str += s;\n                }\n                if (i == funcstack.length - 1) {\n                    if (_this.iscelldata($.trim(str))) {\n                        function_str += _this.functionStrChange_range($.trim(str), type, rc, orient, stindex, step);\n                    } else {\n                        function_str += $.trim(str);\n                    }\n                }\n                i++;\n            }\n            return function_str;\n        },\n        functionStrChange_range: function (txt, type, rc, orient, stindex, step) {\n            let _this = this;\n            let val = txt.split('!'), rangetxt, prefix = '';\n            if (val.length > 1) {\n                rangetxt = val[1];\n                prefix = val[0] + '!';\n            } else {\n                rangetxt = val[0];\n            }\n            let r1, r2, c1, c2;\n            let $row0, $row1, $col0, $col1;\n            if (rangetxt.indexOf(':') == -1) {\n                r1 = r2 = parseInt(rangetxt.replace(/[^0-9]/g, '')) - 1;\n                c1 = c2 = ABCatNum(rangetxt.replace(/[^A-Za-z]/g, ''));\n                let freezonFuc = _this.isfreezonFuc(rangetxt);\n                $row0 = $row1 = freezonFuc[0] ? '$' : '', $col0 = $col1 = freezonFuc[1] ? '$' : '';\n            } else {\n                rangetxt = rangetxt.split(':');\n                r1 = parseInt(rangetxt[0].replace(/[^0-9]/g, '')) - 1;\n                r2 = parseInt(rangetxt[1].replace(/[^0-9]/g, '')) - 1;\n                if (r1 > r2) {\n                    return txt;\n                }\n                c1 = ABCatNum(rangetxt[0].replace(/[^A-Za-z]/g, ''));\n                c2 = ABCatNum(rangetxt[1].replace(/[^A-Za-z]/g, ''));\n                if (c1 > c2) {\n                    return txt;\n                }\n                let freezonFuc0 = _this.isfreezonFuc(rangetxt[0]);\n                $row0 = freezonFuc0[0] ? '$' : '';\n                $col0 = freezonFuc0[1] ? '$' : '';\n                let freezonFuc1 = _this.isfreezonFuc(rangetxt[1]);\n                $row1 = freezonFuc1[0] ? '$' : '';\n                $col1 = freezonFuc1[1] ? '$' : '';\n            }\n            if (type == 'del') {\n                if (rc == 'row') {\n                    if (r1 >= stindex && r2 <= stindex + step - 1) {\n                        return _this.error.r;\n                    }\n                    if (r1 > stindex + step - 1) {\n                        r1 -= step;\n                    } else if (r1 >= stindex) {\n                        r1 = stindex;\n                    }\n                    if (r2 > stindex + step - 1) {\n                        r2 -= step;\n                    } else if (r2 >= stindex) {\n                        r2 = stindex - 1;\n                    }\n                    if (r1 < 0) {\n                        r1 = 0;\n                    }\n                    if (r2 < r1) {\n                        r2 = r1;\n                    }\n                } else if (rc == 'col') {\n                    if (c1 >= stindex && c2 <= stindex + step - 1) {\n                        return _this.error.r;\n                    }\n                    if (c1 > stindex + step - 1) {\n                        c1 -= step;\n                    } else if (c1 >= stindex) {\n                        c1 = stindex;\n                    }\n                    if (c2 > stindex + step - 1) {\n                        c2 -= step;\n                    } else if (c2 >= stindex) {\n                        c2 = stindex - 1;\n                    }\n                    if (c1 < 0) {\n                        c1 = 0;\n                    }\n                    if (c2 < c1) {\n                        c2 = c1;\n                    }\n                }\n                if (r1 == r2 && c1 == c2) {\n                    if (!isNaN(r1) && !isNaN(c1)) {\n                        return prefix + $col0 + chatatABC(c1) + $row0 + (r1 + 1);\n                    } else if (!isNaN(r1)) {\n                        return prefix + $row0 + (r1 + 1);\n                    } else if (!isNaN(c1)) {\n                        return prefix + $col0 + chatatABC(c1);\n                    } else {\n                        return txt;\n                    }\n                } else {\n                    if (isNaN(c1) && isNaN(c2)) {\n                        return prefix + $row0 + (r1 + 1) + ':' + $row1 + (r2 + 1);\n                    } else if (isNaN(r1) && isNaN(r2)) {\n                        return prefix + $col0 + chatatABC(c1) + ':' + $col1 + chatatABC(c2);\n                    } else {\n                        return prefix + $col0 + chatatABC(c1) + $row0 + (r1 + 1) + ':' + $col1 + chatatABC(c2) + $row1 + (r2 + 1);\n                    }\n                }\n            } else if (type == 'add') {\n                if (rc == 'row') {\n                    if (orient == 'lefttop') {\n                        if (r1 >= stindex) {\n                            r1 += step;\n                        }\n                        if (r2 >= stindex) {\n                            r2 += step;\n                        }\n                    } else if (orient == 'rightbottom') {\n                        if (r1 > stindex) {\n                            r1 += step;\n                        }\n                        if (r2 > stindex) {\n                            r2 += step;\n                        }\n                    }\n                } else if (rc == 'col') {\n                    if (orient == 'lefttop') {\n                        if (c1 >= stindex) {\n                            c1 += step;\n                        }\n                        if (c2 >= stindex) {\n                            c2 += step;\n                        }\n                    } else if (orient == 'rightbottom') {\n                        if (c1 > stindex) {\n                            c1 += step;\n                        }\n                        if (c2 > stindex) {\n                            c2 += step;\n                        }\n                    }\n                }\n                if (r1 == r2 && c1 == c2) {\n                    if (!isNaN(r1) && !isNaN(c1)) {\n                        return prefix + $col0 + chatatABC(c1) + $row0 + (r1 + 1);\n                    } else if (!isNaN(r1)) {\n                        return prefix + $row0 + (r1 + 1);\n                    } else if (!isNaN(c1)) {\n                        return prefix + $col0 + chatatABC(c1);\n                    } else {\n                        return txt;\n                    }\n                } else {\n                    if (isNaN(c1) && isNaN(c2)) {\n                        return prefix + $row0 + (r1 + 1) + ':' + $row1 + (r2 + 1);\n                    } else if (isNaN(r1) && isNaN(r2)) {\n                        return prefix + $col0 + chatatABC(c1) + ':' + $col1 + chatatABC(c2);\n                    } else {\n                        return prefix + $col0 + chatatABC(c1) + $row0 + (r1 + 1) + ':' + $col1 + chatatABC(c2) + $row1 + (r2 + 1);\n                    }\n                }\n            }\n        },\n        israngeseleciton: function (istooltip) {\n            let _this = this;\n            if (_this.operatorjson == null) {\n                let arr = _this.operator.split('|'), op = {};\n                for (let i = 0; i < arr.length; i++) {\n                    op[arr[i].toString()] = 1;\n                }\n                _this.operatorjson = op;\n            }\n            if (istooltip == null) {\n                istooltip = false;\n            }\n            let currSelection = window.getSelection();\n            let anchor = $(currSelection.anchorNode);\n            let anchorOffset = currSelection.anchorOffset;\n            if (anchor.parent().is('span') && anchorOffset != 0) {\n                let txt = $.trim(anchor.text()), lasttxt = '';\n                if (txt.length == 0 && anchor.parent().prev().length > 0) {\n                    let ahr = anchor.parent().prev();\n                    txt = $.trim(ahr.text());\n                    lasttxt = txt.substr(txt.length - 1, 1);\n                    _this.rangeSetValueTo = ahr;\n                } else {\n                    lasttxt = txt.substr(anchorOffset - 1, 1);\n                    _this.rangeSetValueTo = anchor.parent();\n                }\n                if (istooltip && (lasttxt == '(' || lasttxt == ',') || !istooltip && (lasttxt == '(' || lasttxt == ',' || lasttxt == '=' || lasttxt in _this.operatorjson || lasttxt == '&')) {\n                    return true;\n                }\n            } else if (anchor.is('#luckysheet-rich-text-editor') || anchor.is('#luckysheet-functionbox-cell')) {\n                let txt = $.trim(anchor.find('span').last().text()), lasttxt;\n                _this.rangeSetValueTo = anchor.find('span').last();\n                if (txt.length == 0 && anchor.find('span').length > 1) {\n                    let ahr = anchor.find('span');\n                    txt = $.trim(ahr.eq(ahr.length - 2).text());\n                    _this.rangeSetValueTo = ahr;\n                }\n                lasttxt = txt.substr(txt.length - 1, 1);\n                if (istooltip && (lasttxt == '(' || lasttxt == ',') || !istooltip && (lasttxt == '(' || lasttxt == ',' || lasttxt == '=' || lasttxt in _this.operatorjson || lasttxt == '&')) {\n                    return true;\n                }\n            } else if (anchor.parent().is('#luckysheet-rich-text-editor') || anchor.parent().is('#luckysheet-functionbox-cell') || anchorOffset == 0) {\n                if (anchorOffset == 0) {\n                    anchor = anchor.parent();\n                }\n                if (anchor.prev().length > 0) {\n                    let txt = $.trim(anchor.prev().text());\n                    let lasttxt = txt.substr(txt.length - 1, 1);\n                    _this.rangeSetValueTo = anchor.prev();\n                    if (istooltip && (lasttxt == '(' || lasttxt == ',') || !istooltip && (lasttxt == '(' || lasttxt == ',' || lasttxt == '=' || lasttxt in _this.operatorjson || lasttxt == '&')) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        },\n        rangechangeindex: null,\n        rangestart: false,\n        rangetosheet: null,\n        rangeSetValueTo: null,\n        func_selectedrange: {},\n        //函数选区范围\n        rangeSetValue: function (selected, obj) {\n            let _this = this;\n            let range = '', rf = selected['row'][0], cf = selected['column'][0];\n            if (Store.config['merge'] != null && rf + '_' + cf in Store.config['merge']) {\n                range = getRangetxt(Store.currentSheetIndex, {\n                    column: [\n                        cf,\n                        cf\n                    ],\n                    row: [\n                        rf,\n                        rf\n                    ]\n                }, _this.rangetosheet);\n            } else {\n                range = getRangetxt(Store.currentSheetIndex, selected, _this.rangetosheet);\n            }\n            let $editor;\n            if (_this.rangestart || _this.rangedrag_column_start || _this.rangedrag_row_start) {\n                if ($('#luckysheet-search-formula-parm').is(':visible') || $('#luckysheet-search-formula-parm-select').is(':visible')) {\n                    //公式参数框选取范围\n                    $editor = $('#luckysheet-rich-text-editor');\n                    $('#luckysheet-search-formula-parm-select-input').val(range);\n                    $('#luckysheet-search-formula-parm .parmBox').eq(_this.data_parm_index).find('.txt input').val(range);    //参数对应值显示\n                    //参数对应值显示\n                    let txtdata = luckysheet_getcelldata(range).data;\n                    if (txtdata instanceof Array) {\n                        //参数为多个单元格选区\n                        let txtArr = [];\n                        for (let i = 0; i < txtdata.length; i++) {\n                            for (let j = 0; j < txtdata[i].length; j++) {\n                                if (txtdata[i][j] == null) {\n                                    txtArr.push(null);\n                                } else {\n                                    txtArr.push(txtdata[i][j].v);\n                                }\n                            }\n                        }\n                        $('#luckysheet-search-formula-parm .parmBox').eq(_this.data_parm_index).find('.val').text(' = {' + txtArr.join(',') + '}');\n                    } else {\n                        //参数为单个单元格选区\n                        $('#luckysheet-search-formula-parm .parmBox').eq(_this.data_parm_index).find('.val').text(' = {' + txtdata.v + '}');\n                    }    //计算结果显示\n                    //计算结果显示\n                    let isVal = true;    //参数不为空\n                    //参数不为空\n                    let parmValArr = [];    //参数值集合\n                    //参数值集合\n                    let lvi = -1;    //最后一个有值的参数索引\n                    //最后一个有值的参数索引\n                    $('#luckysheet-search-formula-parm .parmBox').each(function (i, e) {\n                        let parmtxt = $(e).find('.txt input').val();\n                        if (parmtxt == '' && $(e).find('.txt input').attr('data_parm_require') == 'm') {\n                            isVal = false;\n                        }\n                        if (parmtxt != '') {\n                            lvi = i;\n                        }\n                    });    //单元格显示\n                    //单元格显示\n                    let functionHtmlTxt;\n                    if (lvi == -1) {\n                        functionHtmlTxt = '=' + $('#luckysheet-search-formula-parm .luckysheet-modal-dialog-title-text').text() + '()';\n                    } else if (lvi == 0) {\n                        functionHtmlTxt = '=' + $('#luckysheet-search-formula-parm .luckysheet-modal-dialog-title-text').text() + '(' + $('#luckysheet-search-formula-parm .parmBox').eq(0).find('.txt input').val() + ')';\n                    } else {\n                        for (let j = 0; j <= lvi; j++) {\n                            parmValArr.push($('#luckysheet-search-formula-parm .parmBox').eq(j).find('.txt input').val());\n                        }\n                        functionHtmlTxt = '=' + $('#luckysheet-search-formula-parm .luckysheet-modal-dialog-title-text').text() + '(' + parmValArr.join(',') + ')';\n                    }\n                    let function_str = _this.functionHTMLGenerate(functionHtmlTxt);\n                    $('#luckysheet-rich-text-editor').html(function_str);\n                    $('#luckysheet-functionbox-cell').html($('#luckysheet-rich-text-editor').html());\n                    if (isVal) {\n                        //公式计算\n                        let fp = $.trim(_this.functionParserExe($('#luckysheet-rich-text-editor').text()));\n                        let result = new Function('return ' + fp)();\n                        $('#luckysheet-search-formula-parm .result span').text(result);\n                    }\n                } else {\n                    let currSelection = window.getSelection();\n                    let anchorOffset = currSelection.anchorNode;\n                    $editor = $(anchorOffset).closest('div');\n                    let $span = $editor.find(\"span[rangeindex='\" + _this.rangechangeindex + \"']\").html(range);\n                    _this.setCaretPosition($span.get(0), 0, range.length);\n                }\n            } else {\n                let function_str = '<span class=\"luckysheet-formula-functionrange-cell\" rangeindex=\"' + _this.functionHTMLIndex + '\" dir=\"auto\" style=\"color:' + luckyColor[_this.functionHTMLIndex] + ';\">' + range + '</span>';\n                let $t = $(function_str).insertAfter(_this.rangeSetValueTo);\n                _this.rangechangeindex = _this.functionHTMLIndex;\n                $editor = $(_this.rangeSetValueTo).closest('div');\n                _this.setCaretPosition($editor.find(\"span[rangeindex='\" + _this.rangechangeindex + \"']\").get(0), 0, range.length);\n                _this.functionHTMLIndex++;\n            }\n            if ($editor.attr('id') == 'luckysheet-rich-text-editor') {\n                $('#luckysheet-functionbox-cell').html($('#luckysheet-rich-text-editor').html());\n            } else {\n                $('#luckysheet-rich-text-editor').html($('#luckysheet-functionbox-cell').html());\n            }\n        },\n        rangedrag: function (event) {\n            let _this = this;\n            let mouse = mouseposition(event.pageX, event.pageY);\n            let x = mouse[0] + $('#luckysheet-cell-main').scrollLeft();\n            let y = mouse[1] + $('#luckysheet-cell-main').scrollTop();\n            let row_location = rowLocation(y), row = row_location[1], row_pre = row_location[0], row_index = row_location[2];\n            let col_location = colLocation(x), col = col_location[1], col_pre = col_location[0], col_index = col_location[2];\n            let top = 0, height = 0, rowseleted = [];\n            if (_this.func_selectedrange.top > row_pre) {\n                top = row_pre;\n                height = _this.func_selectedrange.top + _this.func_selectedrange.height - row_pre;\n                rowseleted = [\n                    row_index,\n                    _this.func_selectedrange.row[1]\n                ];\n            } else if (_this.func_selectedrange.top == row_pre) {\n                top = row_pre;\n                height = _this.func_selectedrange.top + _this.func_selectedrange.height - row_pre;\n                rowseleted = [\n                    row_index,\n                    _this.func_selectedrange.row[0]\n                ];\n            } else {\n                top = _this.func_selectedrange.top;\n                height = row - _this.func_selectedrange.top - 1;\n                rowseleted = [\n                    _this.func_selectedrange.row[0],\n                    row_index\n                ];\n            }\n            let left = 0, width = 0, columnseleted = [];\n            if (_this.func_selectedrange.left > col_pre) {\n                left = col_pre;\n                width = _this.func_selectedrange.left + _this.func_selectedrange.width - col_pre;\n                columnseleted = [\n                    col_index,\n                    _this.func_selectedrange.column[1]\n                ];\n            } else if (_this.func_selectedrange.left == col_pre) {\n                left = col_pre;\n                width = _this.func_selectedrange.left + _this.func_selectedrange.width - col_pre;\n                columnseleted = [\n                    col_index,\n                    _this.func_selectedrange.column[0]\n                ];\n            } else {\n                left = _this.func_selectedrange.left;\n                width = col - _this.func_selectedrange.left - 1;\n                columnseleted = [\n                    _this.func_selectedrange.column[0],\n                    col_index\n                ];\n            }\n            rowseleted[0] = luckysheetFreezen.changeFreezenIndex(rowseleted[0], 'h');\n            rowseleted[1] = luckysheetFreezen.changeFreezenIndex(rowseleted[1], 'h');\n            columnseleted[0] = luckysheetFreezen.changeFreezenIndex(columnseleted[0], 'v');\n            columnseleted[1] = luckysheetFreezen.changeFreezenIndex(columnseleted[1], 'v');\n            let changeparam = menuButton.mergeMoveMain(columnseleted, rowseleted, _this.func_selectedrange, top, height, left, width);\n            if (changeparam != null) {\n                columnseleted = changeparam[0];\n                rowseleted = changeparam[1];\n                top = changeparam[2];\n                height = changeparam[3];\n                left = changeparam[4];\n                width = changeparam[5];\n            }\n            _this.func_selectedrange['row'] = rowseleted;\n            _this.func_selectedrange['column'] = columnseleted;\n            _this.func_selectedrange['left_move'] = left;\n            _this.func_selectedrange['width_move'] = width;\n            _this.func_selectedrange['top_move'] = top;\n            _this.func_selectedrange['height_move'] = height;\n            luckysheet_count_show(left, top, width, height, rowseleted, columnseleted);\n            $('#luckysheet-formula-functionrange-select').css({\n                'left': left,\n                'width': width,\n                'top': top,\n                'height': height\n            }).show();\n            if ($('#luckysheet-ifFormulaGenerator-multiRange-dialog').is(':visible')) {\n                //if公式生成器 选择范围\n                let range = getRangetxt(Store.currentSheetIndex, {\n                    'row': rowseleted,\n                    'column': columnseleted\n                }, Store.currentSheetIndex);\n                $('#luckysheet-ifFormulaGenerator-multiRange-dialog input').val(range);\n            } else {\n                _this.rangeSetValue({\n                    'row': rowseleted,\n                    'column': columnseleted\n                });\n            }\n            luckysheetFreezen.scrollFreezen(rowseleted, columnseleted);\n        },\n        rangedrag_column_start: false,\n        rangedrag_row_start: false,\n        rangedrag_column: function (event) {\n            let _this = this;\n            let mouse = mouseposition(event.pageX, event.pageY);\n            let x = mouse[0] + $('#luckysheet-cell-main').scrollLeft();\n            let y = mouse[1] + $('#luckysheet-cell-main').scrollTop();\n            let visibledatarow = Store.visibledatarow;\n            let row_index = visibledatarow.length - 1, row = visibledatarow[row_index], row_pre = 0;\n            let col_location = colLocation(x), col = col_location[1], col_pre = col_location[0], col_index = col_location[2];\n            let left = 0, width = 0, columnseleted = [];\n            if (_this.func_selectedrange.left > col_pre) {\n                left = col_pre;\n                width = _this.func_selectedrange.left + _this.func_selectedrange.width - col_pre;\n                columnseleted = [\n                    col_index,\n                    _this.func_selectedrange.column[1]\n                ];\n            } else if (_this.func_selectedrange.left == col_pre) {\n                left = col_pre;\n                width = _this.func_selectedrange.left + _this.func_selectedrange.width - col_pre;\n                columnseleted = [\n                    col_index,\n                    _this.func_selectedrange.column[0]\n                ];\n            } else {\n                left = _this.func_selectedrange.left;\n                width = col - _this.func_selectedrange.left - 1;\n                columnseleted = [\n                    _this.func_selectedrange.column[0],\n                    col_index\n                ];\n            }    //rowseleted[0] = luckysheetFreezen.changeFreezenIndex(rowseleted[0], \"h\");\n                 //rowseleted[1] = luckysheetFreezen.changeFreezenIndex(rowseleted[1], \"h\");\n            //rowseleted[0] = luckysheetFreezen.changeFreezenIndex(rowseleted[0], \"h\");\n            //rowseleted[1] = luckysheetFreezen.changeFreezenIndex(rowseleted[1], \"h\");\n            columnseleted[0] = luckysheetFreezen.changeFreezenIndex(columnseleted[0], 'v');\n            columnseleted[1] = luckysheetFreezen.changeFreezenIndex(columnseleted[1], 'v');\n            let changeparam = menuButton.mergeMoveMain(columnseleted, [\n                0,\n                row_index\n            ], _this.func_selectedrange, row_pre, row - row_pre - 1, left, width);\n            if (changeparam != null) {\n                columnseleted = changeparam[0];    // rowseleted= changeparam[1];\n                                                   // top = changeparam[2];\n                                                   // height = changeparam[3];\n                // rowseleted= changeparam[1];\n                // top = changeparam[2];\n                // height = changeparam[3];\n                left = changeparam[4];\n                width = changeparam[5];\n            }\n            _this.func_selectedrange['column'] = columnseleted;\n            _this.func_selectedrange['left_move'] = left;\n            _this.func_selectedrange['width_move'] = width;\n            luckysheet_count_show(left, row_pre, width, row - row_pre - 1, [\n                0,\n                row_index\n            ], columnseleted);\n            _this.rangeSetValue({\n                'row': [\n                    null,\n                    null\n                ],\n                'column': columnseleted\n            });\n            $('#luckysheet-formula-functionrange-select').css({\n                'left': left,\n                'width': width,\n                'top': row_pre,\n                'height': row - row_pre - 1\n            }).show();\n            luckysheetFreezen.scrollFreezen([\n                0,\n                row_index\n            ], columnseleted);\n        },\n        rangedrag_row: function (event) {\n            let _this = this;\n            let mouse = mouseposition(event.pageX, event.pageY);\n            let x = mouse[0] + $('#luckysheet-cell-main').scrollLeft();\n            let y = mouse[1] + $('#luckysheet-cell-main').scrollTop();\n            let row_location = rowLocation(y), row = row_location[1], row_pre = row_location[0], row_index = row_location[2];\n            let visibledatacolumn = Store.visibledatacolumn;\n            let col_index = visibledatacolumn.length - 1, col = visibledatacolumn[col_index], col_pre = 0;\n            let top = 0, height = 0, rowseleted = [];\n            if (_this.func_selectedrange.top > row_pre) {\n                top = row_pre;\n                height = _this.func_selectedrange.top + _this.func_selectedrange.height - row_pre;\n                rowseleted = [\n                    row_index,\n                    _this.func_selectedrange.row[1]\n                ];\n            } else if (_this.func_selectedrange.top == row_pre) {\n                top = row_pre;\n                height = _this.func_selectedrange.top + _this.func_selectedrange.height - row_pre;\n                rowseleted = [\n                    row_index,\n                    _this.func_selectedrange.row[0]\n                ];\n            } else {\n                top = _this.func_selectedrange.top;\n                height = row - _this.func_selectedrange.top - 1;\n                rowseleted = [\n                    _this.func_selectedrange.row[0],\n                    row_index\n                ];\n            }\n            rowseleted[0] = luckysheetFreezen.changeFreezenIndex(rowseleted[0], 'h');\n            rowseleted[1] = luckysheetFreezen.changeFreezenIndex(rowseleted[1], 'h');    // columnseleted[0] = luckysheetFreezen.changeFreezenIndex(columnseleted[0], \"v\");\n                                                                                         // columnseleted[1] = luckysheetFreezen.changeFreezenIndex(columnseleted[1], \"v\");\n            // columnseleted[0] = luckysheetFreezen.changeFreezenIndex(columnseleted[0], \"v\");\n            // columnseleted[1] = luckysheetFreezen.changeFreezenIndex(columnseleted[1], \"v\");\n            let changeparam = menuButton.mergeMoveMain([\n                0,\n                col_index\n            ], rowseleted, _this.func_selectedrange, top, height, col_pre, col - col_pre - 1);\n            if (changeparam != null) {\n                // columnseleted = changeparam[0];\n                rowseleted = changeparam[1];\n                top = changeparam[2];\n                height = changeparam[3];    // left = changeparam[4];\n                                            // width = changeparam[5];\n            }\n            // left = changeparam[4];\n            // width = changeparam[5];\n            _this.func_selectedrange['row'] = rowseleted;\n            _this.func_selectedrange['top_move'] = top;\n            _this.func_selectedrange['height_move'] = height;\n            luckysheet_count_show(col_pre, top, col - col_pre - 1, height, rowseleted, [\n                0,\n                col_index\n            ]);\n            _this.rangeSetValue({\n                'row': rowseleted,\n                'column': [\n                    null,\n                    null\n                ]\n            });\n            $('#luckysheet-formula-functionrange-select').css({\n                'left': col_pre,\n                'width': col - col_pre - 1,\n                'top': top,\n                'height': height\n            }).show();\n            luckysheetFreezen.scrollFreezen(rowseleted, [\n                0,\n                col_index\n            ]);\n        },\n        rangedragged: function () {\n        },\n        rangeResizeObj: null,\n        rangeResize: null,\n        rangeResizeIndex: null,\n        rangeResizexy: null,\n        rangeResizeWinH: null,\n        rangeResizeWinW: null,\n        rangeResizeTo: null,\n        rangeResizeDraging: function (event, luckysheetCurrentChartResizeObj, luckysheetCurrentChartResizeXy, luckysheetCurrentChartResize, luckysheetCurrentChartResizeWinW, luckysheetCurrentChartResizeWinH, ch_width, rh_height) {\n            let _this = this;\n            let scrollTop = $('#luckysheet-scrollbar-y').scrollTop(), scrollLeft = $('#luckysheet-scrollbar-x').scrollLeft();\n            let mouse = mouseposition(event.pageX, event.pageY);\n            let x = mouse[0] + scrollLeft;\n            let y = mouse[1] + scrollTop;\n            let row_location = rowLocation(y), row = row_location[1], row_pre = row_location[0], row_index = row_location[2];\n            let col_location = colLocation(x), col = col_location[1], col_pre = col_location[0], col_index = col_location[2];\n            if (x < 0 || y < 0) {\n                return false;\n            }\n            let topchange = row_pre - luckysheetCurrentChartResizeXy[1], leftchange = col_pre - luckysheetCurrentChartResizeXy[0];\n            let top = luckysheetCurrentChartResizeXy[5], height = luckysheetCurrentChartResizeXy[3], left = luckysheetCurrentChartResizeXy[4], width = luckysheetCurrentChartResizeXy[2];\n            if (luckysheetCurrentChartResize == 'lt' || luckysheetCurrentChartResize == 'lb') {\n                if (luckysheetCurrentChartResizeXy[0] + luckysheetCurrentChartResizeXy[2] < col_pre) {\n                    return;\n                }\n                left = col_pre;\n                width = luckysheetCurrentChartResizeXy[2] - leftchange;\n                if (left > luckysheetCurrentChartResizeXy[2] + luckysheetCurrentChartResizeXy[4] - col + col_pre) {\n                    left = luckysheetCurrentChartResizeXy[2] + luckysheetCurrentChartResizeXy[4] - col + col_pre;\n                    width = luckysheetCurrentChartResizeXy[2] - (luckysheetCurrentChartResizeXy[2] + luckysheetCurrentChartResizeXy[4] - col + col_pre - luckysheetCurrentChartResizeXy[0]);\n                } else if (left <= 0) {\n                    left = 0;\n                    width = luckysheetCurrentChartResizeXy[2] + luckysheetCurrentChartResizeXy[0];\n                }\n            }\n            if (luckysheetCurrentChartResize == 'rt' || luckysheetCurrentChartResize == 'rb') {\n                if (luckysheetCurrentChartResizeXy[6] - luckysheetCurrentChartResizeXy[2] > col) {\n                    return;\n                }\n                width = luckysheetCurrentChartResizeXy[2] + col - luckysheetCurrentChartResizeXy[6];\n                if (width < col - col_pre - 1) {\n                    width = col - col_pre - 1;\n                } else if (width >= ch_width - left) {\n                    width = ch_width - left;\n                }\n            }\n            if (luckysheetCurrentChartResize == 'lt' || luckysheetCurrentChartResize == 'rt') {\n                if (luckysheetCurrentChartResizeXy[1] + luckysheetCurrentChartResizeXy[3] < row_pre) {\n                    return;\n                }\n                top = row_pre;\n                height = luckysheetCurrentChartResizeXy[3] - topchange;\n                if (top > luckysheetCurrentChartResizeXy[3] + luckysheetCurrentChartResizeXy[5] - row + row_pre) {\n                    top = luckysheetCurrentChartResizeXy[3] + luckysheetCurrentChartResizeXy[5] - row + row_pre;\n                    height = luckysheetCurrentChartResizeXy[3] - (luckysheetCurrentChartResizeXy[3] + luckysheetCurrentChartResizeXy[5] - row + row_pre - luckysheetCurrentChartResizeXy[1]);\n                } else if (top <= 0) {\n                    top = 0;\n                    height = luckysheetCurrentChartResizeXy[3] + luckysheetCurrentChartResizeXy[1];\n                }\n            }\n            if (luckysheetCurrentChartResize == 'lb' || luckysheetCurrentChartResize == 'rb') {\n                if (luckysheetCurrentChartResizeXy[7] - luckysheetCurrentChartResizeXy[3] > row) {\n                    return;\n                }\n                height = luckysheetCurrentChartResizeXy[3] + row - luckysheetCurrentChartResizeXy[7];\n                if (height < row - row_pre - 1) {\n                    height = row - row_pre - 1;\n                } else if (height >= rh_height - top) {\n                    height = rh_height - top;\n                }\n            }\n            let rangeindex = _this.rangeResizeIndex;\n            let selected = {\n                'top': top,\n                'left': left,\n                'height': height,\n                'width': width\n            };\n            let range = _this.getSelectedFromRange(selected);\n            let rangetxt = getRangetxt(Store.currentSheetIndex, range, _this.rangetosheet);\n            let $span = _this.rangeResizeTo.find(\"span[rangeindex='\" + rangeindex + \"']\").html(rangetxt);\n            luckysheetRangeLast(_this.rangeResizeTo[0]);\n            luckysheetCurrentChartResizeObj.css(selected).data('range', range);\n        },\n        getSelectedFromRange: function (obj) {\n            let row_st = obj.top + 2, row_ed = obj.top + obj.height - 2;\n            let col_st = obj.left + 2, col_ed = obj.left + obj.width - 2;\n            let ret = {\n                'row': [\n                    rowLocation(row_st)[2],\n                    rowLocation(row_ed)[2]\n                ],\n                'column': [\n                    colLocation(col_st)[2],\n                    colLocation(col_ed)[2]\n                ]\n            };\n            return ret;\n        },\n        rangeResizeDragged: function (event, luckysheetCurrentChartResizeObj, luckysheetCurrentChartResizeXy, luckysheetCurrentChartResize, luckysheetCurrentChartResizeWinW, luckysheetCurrentChartResizeWinH) {\n            let _this = this;\n            _this.rangeResize = null;\n            $('#luckysheet-formula-functionrange-highlight-' + _this.rangeResizeIndex).find('.luckysheet-selection-copy-hc').css('opacity', 0.03);\n        },\n        rangeMovexy: null,\n        rangeMove: false,\n        rangeMoveObj: null,\n        rangeMoveIndex: null,\n        rangeMoveRangedata: null,\n        rangeMoveDraging: function (event, luckysheet_cell_selected_move_index, luckysheet_select_save, obj, sheetBarHeight, statisticBarHeight) {\n            let _this = this;\n            let mouse = mouseposition(event.pageX, event.pageY);\n            let scrollLeft = $('#luckysheet-scrollbar-x').scrollLeft();\n            let scrollTop = $('#luckysheet-scrollbar-y').scrollTop();\n            let x = mouse[0] + scrollLeft;\n            let y = mouse[1] + scrollTop;\n            let winH = $(window).height() + scrollTop - sheetBarHeight - statisticBarHeight, winW = $(window).width() + scrollLeft;\n            let row_index_original = luckysheet_cell_selected_move_index[0], col_index_original = luckysheet_cell_selected_move_index[1];\n            let row_s = luckysheet_select_save['row'][0] - row_index_original + rowLocation(y)[2], row_e = luckysheet_select_save['row'][1] - row_index_original + rowLocation(y)[2];\n            let col_s = luckysheet_select_save['column'][0] - col_index_original + colLocation(x)[2], col_e = luckysheet_select_save['column'][1] - col_index_original + colLocation(x)[2];\n            if (row_s < 0 || y < 0) {\n                row_s = 0;\n                row_e = luckysheet_select_save['row'][1] - luckysheet_select_save['row'][0];\n            }\n            if (col_s < 0 || x < 0) {\n                col_s = 0;\n                col_e = luckysheet_select_save['column'][1] - luckysheet_select_save['column'][0];\n            }\n            let visibledatarow = Store.visibledatarow;\n            if (row_e >= visibledatarow[visibledatarow.length - 1] || y > winH) {\n                row_s = visibledatarow.length - 1 - luckysheet_select_save['row'][1] + luckysheet_select_save['row'][0];\n                row_e = visibledatarow.length - 1;\n            }\n            let visibledatacolumn = Store.visibledatacolumn;\n            if (col_e >= visibledatacolumn[visibledatacolumn.length - 1] || x > winW) {\n                col_s = visibledatacolumn.length - 1 - luckysheet_select_save['column'][1] + luckysheet_select_save['column'][0];\n                col_e = visibledatacolumn.length - 1;\n            }\n            let col_pre = col_s - 1 == -1 ? 0 : visibledatacolumn[col_s - 1], col = visibledatacolumn[col_e];\n            let row_pre = row_s - 1 == -1 ? 0 : visibledatarow[row_s - 1], row = visibledatarow[row_e];\n            let rangeindex = _this.rangeMoveIndex;\n            let selected = {\n                'left': col_pre,\n                'width': col - col_pre - 2,\n                'top': row_pre,\n                'height': row - row_pre - 2,\n                'display': 'block'\n            };\n            let range = _this.getSelectedFromRange(selected);\n            let rangetxt = getRangetxt(Store.currentSheetIndex, range, _this.rangetosheet);\n            let $span = _this.rangeResizeTo.find(\"span[rangeindex='\" + rangeindex + \"']\").html(rangetxt);\n            luckysheetRangeLast(_this.rangeResizeTo[0]);\n            _this.rangeMoveRangedata = range;\n            obj.css(selected);\n        },\n        rangeMoveDragged: function (obj) {\n            let _this = this;\n            _this.rangeMove = false;\n            $('#luckysheet-formula-functionrange-highlight-' + _this.rangeMoveIndex).data('range', _this.rangeMoveRangedata).find('.luckysheet-selection-copy-hc').css('opacity', 0.03);\n        },\n        functionHTMLIndex: 0,\n        functionRangeIndex: null,\n        findrangeindex: function (v, vp) {\n            let _this = this;\n            let re = /<span.*?>/g;\n            let v_a = v.replace(re, ''), vp_a = vp.replace(re, '');\n            v_a = v_a.split('</span>');\n            vp_a = vp_a.split('</span>');\n            v_a.pop();\n            vp_a.pop();\n            let pfri = _this.functionRangeIndex;\n            let i = 0;\n            let spanlen = vp_a.length > v_a.length ? v_a.length : vp_a.length;\n            let vplen = vp_a.length, vlen = v_a.length;    //不增加元素输入\n            //不增加元素输入\n            if (vplen == vlen) {\n                let i = pfri[0];\n                let p = vp_a[i], n = v_a[i];\n                if (p == null) {\n                    if (vp_a.length <= i) {\n                        pfri = [\n                            vp_a.length - 1,\n                            vp_a.length - 1\n                        ];\n                    } else if (v_a.length <= i) {\n                        pfri = [\n                            v_a.length - 1,\n                            v_a.length - 1\n                        ];\n                    }\n                    return pfri;\n                } else if (p.length == n.length) {\n                    if (vp_a[i + 1] != null && v_a[i + 1] != null && vp_a[i + 1].length < v_a[i + 1].length) {\n                        pfri[0] = pfri[0] + 1;\n                        pfri[1] = 1;\n                    }\n                    return pfri;\n                } else if (p.length > n.length) {\n                    if (p != null && v_a[i + 1] != null && v_a[i + 1].substr(0, 1) == '\"' && (p.indexOf('{') > -1 || p.indexOf('}') > -1)) {\n                        pfri[0] = pfri[0] + 1;\n                        pfri[1] = 1;\n                    }\n                    return pfri;\n                } else if (p.length < n.length) {\n                    if (pfri[1] > n.length) {\n                        pfri[1] = n.length;\n                    }\n                    return pfri;\n                }\n            }    //减少元素输入\n            else //减少元素输入\n            if (vplen > vlen) {\n                let i = pfri[0];\n                let p = vp_a[i], n = v_a[i];\n                if (n == null) {\n                    if (v_a[i - 1].indexOf('{') > -1) {\n                        pfri[0] = pfri[0] - 1;\n                        let start = v_a[i - 1].search('{');\n                        pfri[1] = pfri[1] + start;\n                    } else {\n                        pfri[0] = 0;\n                        pfri[1] = 0;\n                    }\n                } else if (p.length == n.length) {\n                    if (v_a[i + 1] != null && (v_a[i + 1].substr(0, 1) == '\"' || v_a[i + 1].substr(0, 1) == '{' || v_a[i + 1].substr(0, 1) == '}')) {\n                        pfri[0] = pfri[0] + 1;\n                        pfri[1] = 1;\n                    } else if (p != null && p.length > 2 && p.substr(0, 1) == '\"' && p.substr(p.length - 1, 1) == '\"') {\n                    } else if (v_a[i] != null && v_a[i] == '\")') {\n                        pfri[1] = 1;\n                    } else if (v_a[i] != null && v_a[i] == '\"}') {\n                        pfri[1] = 1;\n                    } else if (v_a[i] != null && v_a[i] == '{)') {\n                        pfri[1] = 1;\n                    } else {\n                        pfri[1] = n.length;\n                    }\n                    return pfri;\n                } else if (p.length > n.length) {\n                    if (v_a[i + 1] != null && (v_a[i + 1].substr(0, 1) == '\"' || v_a[i + 1].substr(0, 1) == '{' || v_a[i + 1].substr(0, 1) == '}')) {\n                        pfri[0] = pfri[0] + 1;\n                        pfri[1] = 1;\n                    }\n                    return pfri;\n                } else if (p.length < n.length) {\n                    return pfri;\n                }\n                return pfri;\n            }    //增加元素输入\n            else //增加元素输入\n            if (vplen < vlen) {\n                let i = pfri[0];\n                let p = vp_a[i], n = v_a[i];\n                if (p == null) {\n                    pfri[0] = v_a.length - 1;\n                    if (n != null) {\n                        pfri[1] = n.length;\n                    } else {\n                        pfri[1] = 1;\n                    }\n                } else if (p.length == n.length) {\n                    if (vp_a[i + 1] != null && (vp_a[i + 1].substr(0, 1) == '\"' || vp_a[i + 1].substr(0, 1) == '{' || vp_a[i + 1].substr(0, 1) == '}')) {\n                        pfri[1] = n.length;\n                    } else if (v_a[i + 1] != null && v_a[i + 1].substr(0, 1) == '\"' && (v_a[i + 1].substr(0, 1) == '{' || v_a[i + 1].substr(0, 1) == '}')) {\n                        pfri[0] = pfri[0] + 1;\n                        pfri[1] = 1;\n                    } else if (n != null && n.substr(0, 1) == '\"' && n.substr(n.length - 1, 1) == '\"' && p.substr(0, 1) == '\"' && p.substr(p.length - 1, 1) == ')') {\n                        pfri[1] = n.length;\n                    } else if (n != null && n.substr(0, 1) == '{' && n.substr(n.length - 1, 1) == '}' && p.substr(0, 1) == '{' && p.substr(p.length - 1, 1) == ')') {\n                        pfri[1] = n.length;\n                    } else {\n                        pfri[0] = pfri[0] + vlen - vplen;\n                        if (v_a.length > vp_a.length) {\n                            pfri[1] = v_a[i + 1].length;\n                        } else {\n                            pfri[1] = 1;\n                        }\n                    }\n                    return pfri;\n                } else if (p.length > n.length) {\n                    if (p != null && p.substr(0, 1) == '\"') {\n                        pfri[1] = n.length;\n                    } else if (v_a[i + 1] != null && /{.*?}/.test(v_a[i + 1])) {\n                        pfri[0] = pfri[0] + 1;\n                        pfri[1] = v_a[i + 1].length;\n                    } else if (p != null && v_a[i + 1].substr(0, 1) == '\"' && (p.indexOf('{') > -1 || p.indexOf('}') > -1)) {\n                        pfri[0] = pfri[0] + 1;\n                        pfri[1] = 1;\n                    } else if (p != null && (p.indexOf('{') > -1 || p.indexOf('}') > -1)) {\n                    } else {\n                        pfri[0] = pfri[0] + vlen - vplen - 1;\n                        pfri[1] = v_a[i - 1].length;\n                    }\n                    return pfri;\n                } else if (p.length < n.length) {\n                    return pfri;\n                }\n                return pfri;\n            }\n            return null;\n        },\n        setCaretPosition: function (textDom, children, pos) {\n            try {\n                let el = textDom;\n                let range = document.createRange();\n                let sel = window.getSelection();\n                range.setStart(el.childNodes[children], pos);\n                range.collapse(true);\n                sel.removeAllRanges();\n                sel.addRange(range);\n                el.focus();\n            } catch (err) {\n                luckysheetRangeLast(this.rangeResizeTo[0]);\n            }\n        },\n        functionRange: function (obj, v, vp) {\n            let _this = this;\n            if (window.getSelection) {\n                //ie11 10 9 ff safari\n                let currSelection = window.getSelection();\n                let fri = _this.findrangeindex(v, vp);\n                if (fri == null) {\n                    currSelection.selectAllChildren(obj.get(0));\n                    currSelection.collapseToEnd();\n                } else {\n                    _this.setCaretPosition(obj.find('span').get(fri[0]), 0, fri[1]);\n                }\n            } else if (document.selection) {\n                //ie10 9 8 7 6 5\n                _this.functionRangeIndex.moveToElementText(obj);    //range定位到obj\n                //range定位到obj\n                _this.functionRangeIndex.collapse(false);    //光标移至最后\n                //光标移至最后\n                _this.functionRangeIndex.select();\n            }\n        },\n        functionInputHanddler: function ($to, $input, kcode) {\n            if (isEditMode()) {\n                //此模式下禁用公式栏\n                return;\n            }\n            let _this = this;\n            let $copy = $to, $editer = $input;\n            let value1 = $editer.html(), value1txt = $editer.text();\n            setTimeout(function () {\n                let value = $editer.text(), valuetxt = value;\n                if (value.length > 0 && value.substr(0, 1) == '=' && (kcode != 229 || value.length == 1)) {\n                    value = _this.functionHTMLGenerate(value);\n                    value1 = _this.functionHTMLGenerate(value1txt);\n                    if (window.getSelection) {\n                        // all browsers, except IE before version 9\n                        let currSelection = window.getSelection();\n                        if ($(currSelection.anchorNode).is('div')) {\n                            let editorlen = $('#luckysheet-rich-text-editor span').length;\n                            _this.functionRangeIndex = [\n                                editorlen - 1,\n                                $('#luckysheet-rich-text-editor').find('span').eq(editorlen - 1).text().length\n                            ];\n                        } else {\n                            _this.functionRangeIndex = [\n                                $(currSelection.anchorNode).parent().index(),\n                                currSelection.anchorOffset\n                            ];\n                        }\n                    } else {\n                        // Internet Explorer before version 9\n                        let textRange = document.selection.createRange();\n                        _this.functionRangeIndex = textRange;\n                    }\n                    $editer.html(value);\n                    _this.functionRange($editer, value, value1);\n                    _this.canceFunctionrangeSelected();\n                    if (kcode != 46) {\n                        //delete不执行此函数\n                        _this.createRangeHightlight();\n                    }\n                    $copy.html(value);\n                    _this.rangestart = false;\n                    _this.rangedrag_column_start = false;\n                    _this.rangedrag_row_start = false;\n                    _this.rangeHightlightselected($editer, kcode);\n                } else if (value1txt.substr(0, 1) != '=') {\n                    //&& value1.indexOf(\"span\")>-1\n                    // $editer.html(value1);\n                    // let w = window.getSelection();\n                    // if(w!=null && w.type!=\"None\"){\n                    //     let range = w.getRangeAt(0);\n                    //     let c = range.startContainer;\n                    //     if(c.id==\"luckysheet-rich-text-editor\" || $(c).closest(\"#luckysheet-rich-text-editor\")){\n                    //         $functionbox.html(value);\n                    //     }\n                    //     else if(c.id==\"luckysheet-functionbox-cell\" || $(c).closest(\"#luckysheet-functionbox-cell\")){\n                    //         if(value1.indexOf(\"span\")>-1){\n                    //         }\n                    //         else{\n                    //             $editer.html(value);\n                    //         }\n                    //     }\n                    // }\n                    // console.trace();\n                    // console.log(value, $copy.attr(\"id\"));\n                    if ($copy.attr('id') == 'luckysheet-rich-text-editor') {\n                        if ($copy.html().substr(0, 5) == '<span') {\n                        } else {\n                            $copy.html(value);\n                        }\n                    } else {\n                        $copy.html(value);\n                    }\n                }\n            }, 1);\n        },\n        functionHTMLGenerate: function (txt) {\n            let _this = this;\n            if (txt.length == 0 || txt.substr(0, 1) != '=') {\n                return txt;\n            }\n            _this.functionHTMLIndex = 0;\n            return '<span dir=\"auto\" class=\"luckysheet-formula-text-color\">=</span>' + _this.functionHTML(txt);\n        },\n        functionHTML: function (txt) {\n            let _this = this;\n            if (_this.operatorjson == null) {\n                let arr = _this.operator.split('|'), op = {};\n                for (let i = 0; i < arr.length; i++) {\n                    op[arr[i].toString()] = 1;\n                }\n                _this.operatorjson = op;\n            }\n            if (txt.substr(0, 1) == '=') {\n                txt = txt.substr(1);\n            }\n            let funcstack = txt.split('');\n            let i = 0, str = '', function_str = '', ispassby = true;\n            let matchConfig = {\n                'bracket': 0,\n                'comma': 0,\n                'squote': 0,\n                'dquote': 0,\n                'braces': 0\n            };\n            while (i < funcstack.length) {\n                let s = funcstack[i];\n                if (s == '(' && matchConfig.squote == 0 && matchConfig.dquote == 0 && matchConfig.braces == 0) {\n                    matchConfig.bracket += 1;\n                    if (str.length > 0) {\n                        function_str += '<span dir=\"auto\" class=\"luckysheet-formula-text-func\">' + str + '</span><span dir=\"auto\" class=\"luckysheet-formula-text-lpar\">(</span>';\n                    } else {\n                        function_str += '<span dir=\"auto\" class=\"luckysheet-formula-text-lpar\">(</span>';\n                    }\n                    str = '';\n                } else if (s == ')' && matchConfig.squote == 0 && matchConfig.dquote == 0 && matchConfig.braces == 0) {\n                    matchConfig.bracket -= 1;\n                    function_str += _this.functionHTML(str) + '<span dir=\"auto\" class=\"luckysheet-formula-text-rpar\">)</span>';\n                    str = '';\n                } else if (s == '{' && matchConfig.squote == 0 && matchConfig.dquote == 0) {\n                    str += '{';\n                    matchConfig.braces += 1;\n                } else if (s == '}' && matchConfig.squote == 0 && matchConfig.dquote == 0) {\n                    str += '}';\n                    matchConfig.braces -= 1;\n                } else if (s == '\"' && matchConfig.squote == 0) {\n                    if (matchConfig.dquote > 0) {\n                        if (str.length > 0) {\n                            function_str += str + '\"</span>';\n                        } else {\n                            function_str += '\"</span>';\n                        }\n                        matchConfig.dquote -= 1;\n                        str = '';\n                    } else {\n                        matchConfig.dquote += 1;\n                        if (str.length > 0) {\n                            function_str += _this.functionHTML(str) + '<span dir=\"auto\" class=\"luckysheet-formula-text-string\">\"';\n                        } else {\n                            function_str += '<span dir=\"auto\" class=\"luckysheet-formula-text-string\">\"';\n                        }\n                        str = '';\n                    }\n                }    //修正例如输入公式='1-2'!A1时，只有2'!A1是luckysheet-formula-functionrange-cell色，'1-是黑色的问题。\n                else //修正例如输入公式='1-2'!A1时，只有2'!A1是luckysheet-formula-functionrange-cell色，'1-是黑色的问题。\n                if (s == \"'\" && matchConfig.dquote == 0) {\n                    str += \"'\";\n                    matchConfig.squote = matchConfig.squote == 0 ? 1 : 0;\n                } else if (s == ',' && matchConfig.squote == 0 && matchConfig.dquote == 0 && matchConfig.braces == 0) {\n                    //matchConfig.comma += 1;\n                    function_str += _this.functionHTML(str) + '<span dir=\"auto\" class=\"luckysheet-formula-text-comma\">,</span>';\n                    str = '';\n                } else if (s == '&' && matchConfig.squote == 0 && matchConfig.dquote == 0 && matchConfig.braces == 0) {\n                    if (str.length > 0) {\n                        function_str += _this.functionHTML(str) + '<span dir=\"auto\" class=\"luckysheet-formula-text-calc\">' + '&' + '</span>';\n                        str = '';\n                    } else {\n                        function_str += '<span dir=\"auto\" class=\"luckysheet-formula-text-calc\">' + '&' + '</span>';\n                    }\n                } else if (s in _this.operatorjson && matchConfig.squote == 0 && matchConfig.dquote == 0 && matchConfig.braces == 0) {\n                    let s_next = '';\n                    if (i + 1 < funcstack.length) {\n                        s_next = funcstack[i + 1];\n                    }\n                    let p = i - 1, s_pre = null;\n                    if (p >= 0) {\n                        do {\n                            s_pre = funcstack[p--];\n                        } while (p >= 0 && s_pre == ' ');\n                    }\n                    if (s + s_next in _this.operatorjson) {\n                        if (str.length > 0) {\n                            function_str += _this.functionHTML(str) + '<span dir=\"auto\" class=\"luckysheet-formula-text-calc\">' + s + s_next + '</span>';\n                            str = '';\n                        } else {\n                            function_str += '<span dir=\"auto\" class=\"luckysheet-formula-text-calc\">' + s + s_next + '</span>';\n                        }\n                        i++;\n                    } else if (!/[^0-9]/.test(s_next) && s == '-' && (s_pre == '(' || s_pre == null || s_pre == ',' || s_pre == ' ' || s_pre in _this.operatorjson)) {\n                        str += s;\n                    } else {\n                        if (str.length > 0) {\n                            function_str += _this.functionHTML(str) + '<span dir=\"auto\" class=\"luckysheet-formula-text-calc\">' + s + '</span>';\n                            str = '';\n                        } else {\n                            function_str += '<span dir=\"auto\" class=\"luckysheet-formula-text-calc\">' + s + '</span>';\n                        }\n                    }\n                } else {\n                    str += s;\n                }\n                if (i == funcstack.length - 1) {\n                    //function_str += str;\n                    if (_this.iscelldata($.trim(str))) {\n                        function_str += '<span class=\"luckysheet-formula-functionrange-cell\" rangeindex=\"' + _this.functionHTMLIndex + '\" dir=\"auto\" style=\"color:' + luckyColor[_this.functionHTMLIndex] + ';\">' + str + '</span>';\n                        _this.functionHTMLIndex++;\n                    } else if (matchConfig.dquote > 0) {\n                        function_str += str + '</span>';\n                    } else if (str.indexOf('</span>') == -1 && str.length > 0) {\n                        let regx = /{.*?}/;\n                        if (regx.test($.trim(str))) {\n                            let arraytxt = regx.exec(str)[0];\n                            let arraystart = str.search(regx);\n                            let alltxt = '';\n                            if (arraystart > 0) {\n                                alltxt += '<span dir=\"auto\" class=\"luckysheet-formula-text-color\">' + str.substr(0, arraystart) + '</span>';\n                            }\n                            alltxt += '<span dir=\"auto\" style=\"color:#959a05\" class=\"luckysheet-formula-text-array\">' + arraytxt + '</span>';\n                            if (arraystart + arraytxt.length < str.length) {\n                                alltxt += '<span dir=\"auto\" class=\"luckysheet-formula-text-color\">' + str.substr(arraystart + arraytxt.length, str.length) + '</span>';\n                            }\n                            function_str += alltxt;\n                        } else {\n                            function_str += '<span dir=\"auto\" class=\"luckysheet-formula-text-color\">' + str + '</span>';\n                        }\n                    }\n                }\n                i++;\n            }\n            return function_str;\n        },\n        getfunctionParam: function (txt) {\n            let _this = this;\n            if (_this.operatorjson == null) {\n                let arr = _this.operator.split('|'), op = {};\n                for (let i = 0; i < arr.length; i++) {\n                    op[arr[i].toString()] = 1;\n                }\n                _this.operatorjson = op;\n            }\n            if (txt.substr(0, 1) == '=') {\n                txt = txt.substr(1);\n            }\n            let funcstack = txt.split('');\n            let i = 0, str = '', function_str = '';\n            let matchConfig = {\n                'bracket': 0,\n                'comma': 0,\n                'squote': 0,\n                'dquote': 0,\n                'compare': 0\n            };    //bracket 0为运算符括号、1为函数括号\n            //bracket 0为运算符括号、1为函数括号\n            let fn = null, param = [], bracket = [];\n            while (i < funcstack.length) {\n                let s = funcstack[i];\n                if (s == '(' && matchConfig.dquote == 0) {\n                    if (str.length > 0 && bracket.length == 0) {\n                        fn = str.toUpperCase();\n                        bracket.push(1);\n                        str = '';\n                    } else if (bracket.length == 0) {\n                        //function_str += \"(\";\n                        bracket.push(0);\n                        str = '';\n                    } else {\n                        bracket.push(0);\n                        str += s;\n                    }\n                } else if (s == ')' && matchConfig.dquote == 0) {\n                    let bt = bracket.pop();\n                    if (bracket.length == 0) {\n                        param.push(str);\n                        str = '';\n                    } else {\n                        str += s;\n                    }\n                } else if (s == '\"') {\n                    str += '\"';\n                    if (matchConfig.dquote > 0) {\n                        matchConfig.dquote -= 1;\n                        str = '';\n                    } else {\n                        matchConfig.dquote += 1;\n                    }\n                } else if (s == ',' && matchConfig.dquote == 0) {\n                    if (bracket.length <= 1) {\n                        param.push(str);\n                        str = '';\n                    } else {\n                        str += ',';\n                    }\n                } else if (s in _this.operatorjson && matchConfig.dquote == 0) {\n                    let s_next = '';\n                    if (i + 1 < funcstack.length) {\n                        s_next = funcstack[i + 1];\n                    }\n                    let p = i - 1, s_pre = null;\n                    if (p >= 0) {\n                        do {\n                            s_pre = funcstack[p--];\n                        } while (p >= 0 && s_pre == ' ');\n                    }\n                    if (!/[^0-9]/.test(s_next) && s == '-' && (s_pre == '(' || s_pre == null || s_pre == ',' || s_pre == ' ' || s_pre in _this.operatorjson)) {\n                        if (matchConfig.dquote == 0) {\n                            str += $.trim(s);\n                        } else {\n                            str += s;\n                        }\n                    } else {\n                        function_str = '';\n                        str = '';\n                    }\n                } else {\n                    if (matchConfig.dquote == 0) {\n                        str += $.trim(s);\n                    } else {\n                        str += s;\n                    }\n                }\n                i++;\n            }\n            return {\n                'fn': fn,\n                'param': param\n            };\n        },\n        calPostfixExpression: function (cal) {\n            if (cal.length == 0) {\n                return '';\n            }\n            let stack = [];\n            for (let i = cal.length - 1; i >= 0; i--) {\n                let c = cal[i];\n                if (c in this.operatorjson) {\n                    let s2 = stack.pop();\n                    let s1 = stack.pop();\n                    let str = 'luckysheet_compareWith(' + s1 + \",'\" + c + \"', \" + s2 + ')';\n                    stack.push(str);\n                } else {\n                    stack.push(c);\n                }\n            }\n            if (stack.length > 0) {\n                return stack[0];\n            } else {\n                return '';\n            }\n        },\n        checkBracketNum: function (fp) {\n            let bra_l = fp.match(/\\(/g), bra_r = fp.match(/\\)/g), bra_tl_txt = fp.match(/(['\"])(?:(?!\\1).)*?\\1/g), bra_tr_txt = fp.match(/(['\"])(?:(?!\\1).)*?\\1/g);\n            let bra_l_len = 0, bra_r_len = 0;\n            if (bra_l != null) {\n                bra_l_len += bra_l.length;\n            }\n            if (bra_r != null) {\n                bra_r_len += bra_r.length;\n            }\n            let bra_tl_len = 0, bra_tr_len = 0;\n            if (bra_tl_txt != null) {\n                for (let i = 0; i < bra_tl_txt.length; i++) {\n                    let bra_tl = bra_tl_txt[i].match(/\\(/g);\n                    if (bra_tl != null) {\n                        bra_tl_len += bra_tl.length;\n                    }\n                }\n            }\n            if (bra_tr_txt != null) {\n                for (let i = 0; i < bra_tr_txt.length; i++) {\n                    let bra_tr = bra_tr_txt[i].match(/\\)/g);\n                    if (bra_tr != null) {\n                        bra_tr_len += bra_tr.length;\n                    }\n                }\n            }\n            bra_l_len -= bra_tl_len;\n            bra_r_len -= bra_tr_len;\n            if (bra_l_len != bra_r_len) {\n                return false;\n            } else {\n                return true;\n            }\n        },\n        operatorPriority: {\n            '^': 0,\n            '%': 1,\n            '*': 1,\n            '/': 1,\n            '+': 2,\n            '-': 2\n        },\n        functionParserExe: function (txt) {\n            let _this = this;    // let txt1 = txt.toUpperCase();\n                                 // return this.functionParser(txt, function(c){\n                                 //     _this.addToCellList(txt, c);\n                                 // });\n            // let txt1 = txt.toUpperCase();\n            // return this.functionParser(txt, function(c){\n            //     _this.addToCellList(txt, c);\n            // });\n            return this.functionParser(txt);\n        },\n        functionParser: function (txt, cellRangeFunction) {\n            let _this = this;\n            if (_this.operatorjson == null) {\n                let arr = _this.operator.split('|'), op = {};\n                for (let i = 0; i < arr.length; i++) {\n                    op[arr[i].toString()] = 1;\n                }\n                _this.operatorjson = op;\n            }\n            if (txt == null) {\n                return '';\n            }\n            if (txt.substr(0, 2) == '=+') {\n                txt = txt.substr(2);\n            } else if (txt.substr(0, 1) == '=') {\n                txt = txt.substr(1);\n            }\n            let funcstack = txt.split('');\n            let i = 0, str = '', function_str = '';\n            let matchConfig = {\n                'bracket': 0,\n                'comma': 0,\n                'squote': 0,\n                'dquote': 0,\n                'compare': 0,\n                'braces': 0\n            };    //=(sum(b1:c10)+10)*5-100\n                  //=MAX(B1:C10,10)*5-100\n                  // =(sum(max(B1:C10,10)*5-100,((1+1)*2+5)/2,10)+count(B1:C10,10*5-100))*5-100\n                  //=SUM(MAX(B1:C10,10)*5-100,((1+1)*2+5)/2,10)+COUNT(B1:C10,10*5-100)\n                  //=SUM(MAX(B1:C10,10)*5-100,((1+1)*2+5)/2,10)\n                  //=SUM(10,((1+1)*2+5)/2,10)\n                  //=SUM(MAX(B1:C10,10)*5-100)\n                  //=IFERROR(IF(ROW()-ROW($G$3)=1,$F4+$D4,SUM($D1:INDEX($D$4:$D$9,1,1),$F1:INDEX($F$4:$F$9,1,1))), \"\")\n                  //=IFERROR(IF(ROW()-ROW($G$3)=1,$F4+$D4,SUM(INDEX($D$4:$D$9,1,1):$D4,INDEX($F$4:$F$9,1,1):$F4)), \"\")\n                  //=SUM(I$4:OFFSET(I10,0,0))\n                  //bracket 0为运算符括号、1为函数括号\n            //=(sum(b1:c10)+10)*5-100\n            //=MAX(B1:C10,10)*5-100\n            // =(sum(max(B1:C10,10)*5-100,((1+1)*2+5)/2,10)+count(B1:C10,10*5-100))*5-100\n            //=SUM(MAX(B1:C10,10)*5-100,((1+1)*2+5)/2,10)+COUNT(B1:C10,10*5-100)\n            //=SUM(MAX(B1:C10,10)*5-100,((1+1)*2+5)/2,10)\n            //=SUM(10,((1+1)*2+5)/2,10)\n            //=SUM(MAX(B1:C10,10)*5-100)\n            //=IFERROR(IF(ROW()-ROW($G$3)=1,$F4+$D4,SUM($D1:INDEX($D$4:$D$9,1,1),$F1:INDEX($F$4:$F$9,1,1))), \"\")\n            //=IFERROR(IF(ROW()-ROW($G$3)=1,$F4+$D4,SUM(INDEX($D$4:$D$9,1,1):$D4,INDEX($F$4:$F$9,1,1):$F4)), \"\")\n            //=SUM(I$4:OFFSET(I10,0,0))\n            //bracket 0为运算符括号、1为函数括号\n            let cal1 = [], cal2 = [], bracket = [];\n            let firstSQ = -1;\n            while (i < funcstack.length) {\n                let s = funcstack[i];\n                if (s == '(' && matchConfig.squote == 0 && matchConfig.dquote == 0 && matchConfig.braces == 0) {\n                    if (str.length > 0 && bracket.length == 0) {\n                        str = str.toUpperCase();\n                        if (str.indexOf(':') > -1) {\n                            let funcArray = str.split(':');\n                            function_str += \"luckysheet_getSpecialReference(true,'\" + $.trim(funcArray[0]).replace(/'/g, \"\\\\'\") + \"', luckysheet_function.\" + funcArray[1] + '.f(#lucky#';\n                        } else {\n                            function_str += 'luckysheet_function.' + str + '.f(';\n                        }\n                        bracket.push(1);\n                        str = '';\n                    } else if (bracket.length == 0) {\n                        function_str += '(';\n                        bracket.push(0);\n                        str = '';\n                    } else {\n                        bracket.push(0);\n                        str += s;\n                    }\n                } else if (s == ')' && matchConfig.squote == 0 && matchConfig.dquote == 0 && matchConfig.braces == 0) {\n                    let bt = bracket.pop();\n                    if (bracket.length == 0) {\n                        let functionS = _this.functionParser(str, cellRangeFunction);\n                        if (functionS.indexOf('#lucky#') > -1) {\n                            functionS = functionS.replace(/#lucky#/g, '') + ')';\n                        }\n                        function_str += functionS + ')';\n                        str = '';\n                    } else {\n                        str += s;\n                    }\n                } else if (s == '{' && matchConfig.squote == 0 && matchConfig.dquote == 0) {\n                    str += '{';\n                    matchConfig.braces += 1;\n                } else if (s == '}' && matchConfig.squote == 0 && matchConfig.dquote == 0) {\n                    str += '}';\n                    matchConfig.braces -= 1;\n                } else if (s == '\"' && matchConfig.squote == 0) {\n                    if (matchConfig.dquote > 0) {\n                        //如果是\"\"代表着输出\"\n                        if (i < funcstack.length - 1 && funcstack[i + 1] == '\"') {\n                            i++;\n                            str += '\\x7F';    //用非打印控制字符DEL替换一下\"\"\n                        } else\n                            //用非打印控制字符DEL替换一下\"\"\n                            {\n                                matchConfig.dquote -= 1;\n                                str += '\"';\n                            }\n                    } else {\n                        matchConfig.dquote += 1;\n                        str += '\"';\n                    }\n                } else if (s == \"'\" && matchConfig.dquote == 0) {\n                    str += \"'\";\n                    if (matchConfig.squote > 0) {\n                        if (firstSQ == i - 1)\n                            //配对的单引号后第一个字符不能是单引号\n                            {\n                                return '';\n                            }    //如果是''代表着输出'\n                        //如果是''代表着输出'\n                        if (i < funcstack.length - 1 && funcstack[i + 1] == \"'\") {\n                            i++;\n                            str += \"'\";\n                        } else {\n                            //如果下一个字符不是'代表单引号结束\n                            if (funcstack[i - 1] == \"'\") {\n                                //配对的单引号后最后一个字符不能是单引号\n                                return '';\n                            } else {\n                                matchConfig.squote -= 1;\n                            }\n                        }\n                    } else {\n                        matchConfig.squote += 1;\n                        firstSQ = i;\n                    }\n                } else if (s == ',' && matchConfig.squote == 0 && matchConfig.dquote == 0 && matchConfig.braces == 0) {\n                    if (bracket.length <= 1) {\n                        let functionS = _this.functionParser(str, cellRangeFunction);\n                        if (functionS.indexOf('#lucky#') > -1) {\n                            functionS = functionS.replace(/#lucky#/g, '') + ')';\n                        }\n                        function_str += functionS + ',';\n                        str = '';\n                    } else {\n                        str += ',';\n                    }\n                } else if (s in _this.operatorjson && matchConfig.squote == 0 && matchConfig.dquote == 0 && matchConfig.braces == 0) {\n                    let s_next = '';\n                    let op = _this.operatorPriority;\n                    if (i + 1 < funcstack.length) {\n                        s_next = funcstack[i + 1];\n                    }\n                    if (s + s_next in _this.operatorjson) {\n                        if (bracket.length == 0) {\n                            if ($.trim(str).length > 0) {\n                                cal2.unshift(_this.functionParser($.trim(str), cellRangeFunction));\n                            } else if ($.trim(function_str).length > 0) {\n                                cal2.unshift($.trim(function_str));\n                            }\n                            if (cal1[0] in _this.operatorjson) {\n                                let stackCeilPri = op[cal1[0]];\n                                while (cal1.length > 0 && stackCeilPri != null) {\n                                    cal2.unshift(cal1.shift());\n                                    stackCeilPri = op[cal1[0]];\n                                }\n                            }\n                            cal1.unshift(s + s_next);\n                            function_str = '';\n                            str = '';\n                        } else {\n                            str += s + s_next;\n                        }\n                        i++;\n                    } else {\n                        if (bracket.length == 0) {\n                            if ($.trim(str).length > 0) {\n                                cal2.unshift(_this.functionParser($.trim(str), cellRangeFunction));\n                            } else if ($.trim(function_str).length > 0) {\n                                cal2.unshift($.trim(function_str));\n                            }\n                            if (cal1[0] in _this.operatorjson) {\n                                let stackCeilPri = op[cal1[0]];\n                                stackCeilPri = stackCeilPri == null ? 1000 : stackCeilPri;\n                                let sPri = op[s];\n                                sPri = sPri == null ? 1000 : sPri;\n                                while (cal1.length > 0 && sPri >= stackCeilPri) {\n                                    cal2.unshift(cal1.shift());\n                                    stackCeilPri = op[cal1[0]];\n                                    stackCeilPri = stackCeilPri == null ? 1000 : stackCeilPri;\n                                }\n                            }\n                            cal1.unshift(s);\n                            function_str = '';\n                            str = '';\n                        } else {\n                            str += s;\n                        }\n                    }\n                } else {\n                    if (matchConfig.dquote == 0 && matchConfig.squote == 0) {\n                        // str += $.trim(s);\n                        str += s;    //Do not use $.trim(s). When obtaining the worksheet name that contains spaces, you should keep the spaces\n                    } else\n                        //Do not use $.trim(s). When obtaining the worksheet name that contains spaces, you should keep the spaces\n                        {\n                            str += s;\n                        }\n                }\n                if (i == funcstack.length - 1) {\n                    let endstr = '';\n                    let str_nb = $.trim(str).replace(/'/g, \"\\\\'\");\n                    if (_this.iscelldata(str_nb) && str_nb.substr(0, 1) != ':') {\n                        endstr = \"luckysheet_getcelldata('\" + str_nb + \"')\";\n                        if (typeof cellRangeFunction == 'function') {\n                            cellRangeFunction(str_nb);\n                        }\n                    } else if (str_nb.substr(0, 1) == ':') {\n                        str_nb = str_nb.substr(1);\n                        if (_this.iscelldata(str_nb)) {\n                            endstr = 'luckysheet_getSpecialReference(false,' + function_str + \",'\" + str_nb + \"')\";\n                        }\n                    } else {\n                        str = $.trim(str);\n                        let regx = /{.*?}/;\n                        if (regx.test(str) && str.substr(0, 1) != '\"' && str.substr(str.length - 1, 1) != '\"') {\n                            let arraytxt = regx.exec(str)[0];\n                            let arraystart = str.search(regx);\n                            let alltxt = '';\n                            if (arraystart > 0) {\n                                endstr += str.substr(0, arraystart);\n                            }\n                            endstr += \"luckysheet_getarraydata('\" + arraytxt + \"')\";\n                            if (arraystart + arraytxt.length < str.length) {\n                                endstr += str.substr(arraystart + arraytxt.length, str.length);\n                            }\n                        } else {\n                            endstr = str;\n                        }\n                    }\n                    if (endstr.length > 0) {\n                        cal2.unshift(endstr);\n                    }\n                    if (cal1.length > 0) {\n                        if (function_str.length > 0) {\n                            cal2.unshift(function_str);\n                            function_str = '';\n                        }\n                        while (cal1.length > 0) {\n                            cal2.unshift(cal1.shift());\n                        }\n                    }\n                    if (cal2.length > 0) {\n                        function_str = _this.calPostfixExpression(cal2);\n                    } else {\n                        function_str += endstr;\n                    }\n                }\n                i++;\n            }    // console.log(function_str);\n            // console.log(function_str);\n            return function_str;\n        },\n        insertUpdateDynamicArray: function (dynamicArrayItem) {\n            let r = dynamicArrayItem.r, c = dynamicArrayItem.c, index = dynamicArrayItem.index;\n            if (index == null) {\n                index = Store.currentSheetIndex;\n            }\n            let luckysheetfile = getluckysheetfile();\n            let file = luckysheetfile[getSheetIndex(index)];\n            let dynamicArray = file.dynamicArray;\n            if (dynamicArray == null) {\n                dynamicArray = [];\n            }\n            for (let i = 0; i < dynamicArray.length; i++) {\n                let calc = dynamicArray[i];\n                if (calc.r == r && calc.c == c && calc.index == index) {\n                    calc.data = dynamicArrayItem.data;\n                    calc.f = dynamicArrayItem.f;\n                    return dynamicArray;\n                }\n            }\n            dynamicArray.push(dynamicArrayItem);\n            return dynamicArray;\n        },\n        addFunctionGroup: function (r, c, func, index) {\n            if (index == null) {\n                index = Store.currentSheetIndex;\n            }\n            let luckysheetfile = getluckysheetfile();\n            let file = luckysheetfile[getSheetIndex(index)];\n            if (file.calcChain == null) {\n                file.calcChain = [];\n            }\n            let cc = {\n                'r': r,\n                'c': c,\n                'index': index,\n                'func': func\n            };\n            file.calcChain.push(cc);\n            server.saveParam('fc', index, JSON.stringify(cc), {\n                'op': 'add',\n                'pos': file.calcChain.length - 1\n            });\n            setluckysheetfile(luckysheetfile);\n        },\n        getAllFunctionGroup: function () {\n            let luckysheetfile = getluckysheetfile();\n            let ret = [];\n            for (let i = 0; i < luckysheetfile.length; i++) {\n                let file = luckysheetfile[i];\n                let calcChain = file.calcChain;    /* 备注：再次加载表格获取的数据可能是JSON字符串格式(需要进行发序列化处理) */\n                /* 备注：再次加载表格获取的数据可能是JSON字符串格式(需要进行发序列化处理) */\n                if (calcChain) {\n                    let tempCalcChain = [];\n                    calcChain.forEach((item, idx) => {\n                        if (typeof item === 'string') {\n                            tempCalcChain.push(JSON.parse(item));\n                        } else {\n                            tempCalcChain.push(item);\n                        }\n                    });\n                    calcChain = file.calcChain = tempCalcChain;\n                }\n                let dynamicArray_compute = file.dynamicArray_compute;\n                if (calcChain == null) {\n                    calcChain = [];\n                }\n                if (dynamicArray_compute == null) {\n                    dynamicArray_compute = [];\n                }\n                ret = ret.concat(calcChain);\n                for (let i = 0; i < dynamicArray_compute.length; i++) {\n                    let d = dynamicArray_compute[0];\n                    ret.push({\n                        r: d.r,\n                        c: d.c,\n                        index: d.index\n                    });\n                }\n            }\n            return ret;\n        },\n        getFunctionGroup: function (index) {\n            if (index == null) {\n                index = Store.currentSheetIndex;\n            }\n            let luckysheetfile = getluckysheetfile();\n            let file = luckysheetfile[getSheetIndex(index)];\n            if (file.calcChain == null) {\n                return [];\n            }\n            return file.calcChain;\n        },\n        updateFunctionGroup: function (r, c, index) {\n            if (index == null) {\n                index = Store.currentSheetIndex;\n            }\n            let luckysheetfile = getluckysheetfile();\n            let file = luckysheetfile[getSheetIndex(index)];\n            let calcChain = file.calcChain;\n            if (calcChain != null) {\n                for (let i = 0; i < calcChain.length; i++) {\n                    let calc = calcChain[i];\n                    if (calc.r == r && calc.c == c && calc.index == index) {\n                        server.saveParam('fc', index, JSON.stringify(calc), {\n                            'op': 'update',\n                            'pos': i\n                        });\n                        break;\n                    }\n                }\n            }\n            setluckysheetfile(luckysheetfile);\n        },\n        insertUpdateFunctionGroup: function (r, c, index) {\n            if (index == null) {\n                index = Store.currentSheetIndex;\n            }    // let func = getcellFormula(r, c, index);\n                 // if (func == null || func.length==0) {\n                 //     this.delFunctionGroup(r, c, index);\n                 //     return;\n                 // }\n            // let func = getcellFormula(r, c, index);\n            // if (func == null || func.length==0) {\n            //     this.delFunctionGroup(r, c, index);\n            //     return;\n            // }\n            let luckysheetfile = getluckysheetfile();\n            let file = luckysheetfile[getSheetIndex(index)];\n            let calcChain = file.calcChain;\n            if (calcChain == null) {\n                calcChain = [];\n            }\n            for (let i = 0; i < calcChain.length; i++) {\n                let calc = calcChain[i];\n                if (calc.r == r && calc.c == c && calc.index == index) {\n                    server.saveParam('fc', index, JSON.stringify(calc), {\n                        'op': 'update',\n                        'pos': i\n                    });\n                    return;\n                }\n            }\n            let cc = {\n                'r': r,\n                'c': c,\n                'index': index\n            };\n            calcChain.push(cc);\n            file.calcChain = calcChain;\n            server.saveParam('fc', index, JSON.stringify(cc), {\n                'op': 'add',\n                'pos': file.calcChain.length - 1\n            });\n            setluckysheetfile(luckysheetfile);\n        },\n        isFunctionRangeSave: false,\n        isFunctionRangeSimple: function (txt, r, c, index, dynamicArray_compute) {\n            if (txt == null || txt.length == 0) {\n                return;\n            }\n            let txtArray = txt.split(/==|!=|<>|<=|>=|[,()=+-\\/*%&^><]/g);\n            if (txtArray.length > 0) {\n                for (let i = 0; i < txtArray.length; i++) {\n                    let t = txtArray[i];\n                    if (t.length <= 1) {\n                        continue;\n                    }\n                    if (t.substr(0, 1) == '\"' && t.substr(t.length - 1, 1) == '\"') {\n                        continue;\n                    }\n                    this.isFunctionRangeSaveChange(t, r, c, index, dynamicArray_compute);\n                }\n            }\n        },\n        isFunctionRangeSimple1: function (txt, r, c, index, dynamicArray_compute) {\n            let _this = this;\n            if (_this.operatorjson == null) {\n                let arr = _this.operator.split('|'), op = {};\n                for (let i = 0; i < arr.length; i++) {\n                    op[arr[i].toString()] = 1;\n                }\n                _this.operatorjson = op;\n            }\n            if (txt.substr(0, 1) == '=') {\n                txt = txt.substr(1);\n            }\n            let funcstack = txt.split('');\n            let i = 0, str = '', function_str = '', ispassby = true;\n            let matchConfig = {\n                'bracket': 0,\n                'comma': 0,\n                'squote': 0,\n                'dquote': 0\n            };\n            let luckysheetfile = getluckysheetfile();\n            while (i < funcstack.length) {\n                let s = funcstack[i];\n                if (s == '(' && matchConfig.dquote == 0) {\n                    matchConfig.bracket += 1;\n                    if (str.length > 0) {\n                        function_str += 'luckysheet_function.' + str.toUpperCase() + '.f(';\n                    } else {\n                        function_str += '(';\n                    }\n                    str = '';\n                } else if (s == ')' && matchConfig.dquote == 0) {\n                    matchConfig.bracket -= 1;\n                    function_str += _this.isFunctionRangeSimple(str, r, c, index, dynamicArray_compute) + ')';\n                    str = '';\n                } else if (s == ',' && matchConfig.dquote == 0) {\n                    //matchConfig.comma += 1;\n                    function_str += _this.isFunctionRangeSimple(str, r, c, index, dynamicArray_compute) + ',';\n                    str = '';\n                } else if (s in _this.operatorjson && matchConfig.dquote == 0) {\n                    let s_next = '';\n                    if (i + 1 < funcstack.length) {\n                        s_next = funcstack[i + 1];\n                    }\n                    if (s + s_next in _this.operatorjson) {\n                        if (str.length > 0) {\n                            function_str += _this.isFunctionRangeSimple(str, r, c, index, dynamicArray_compute) + s + s_next;\n                            str = '';\n                        } else {\n                            function_str += s + s_next;\n                        }\n                        i++;\n                    } else {\n                        if (str.length > 0) {\n                            function_str += _this.isFunctionRangeSimple(str, r, c, index, dynamicArray_compute) + s;\n                            str = '';\n                        } else {\n                            function_str += s;\n                        }\n                    }\n                } else {\n                    str += s;\n                }\n                if (i == funcstack.length - 1) {\n                    if (_this.iscelldata($.trim(str))) {\n                        _this.isFunctionRangeSaveChange(str, r, c, index, dynamicArray_compute);    // if (r != null && c != null) {\n                                                                                                    //     let range = _this.getcellrange($.trim(str));\n                                                                                                    //     let row = range.row,\n                                                                                                    //         col = range.column;\n                                                                                                    //     if ((r + \"_\" + c) in dynamicArray_compute) {\n                                                                                                    //         let isd_range = false;\n                                                                                                    //         for (let d_r = row[0]; d_r <= row[1]; d_r++) {\n                                                                                                    //             for (let d_c = col[0]; d_c <= col[1]; d_c++) {\n                                                                                                    //                 if ((d_r + \"_\" + d_c) in dynamicArray_compute && dynamicArray_compute[d_r + \"_\" + d_c].r == r && dynamicArray_compute[d_r + \"_\" + d_c].c == c) {\n                                                                                                    //                     isd_range = true;\n                                                                                                    //                 }\n                                                                                                    //             }\n                                                                                                    //         }\n                                                                                                    //         if (isd_range) {\n                                                                                                    //             _this.isFunctionRangeSave = _this.isFunctionRangeSave || true;\n                                                                                                    //         }\n                                                                                                    //         else {\n                                                                                                    //             _this.isFunctionRangeSave = _this.isFunctionRangeSave || false;\n                                                                                                    //         }\n                                                                                                    //     }\n                                                                                                    //     else {\n                                                                                                    //         if (r >= row[0] && r <= row[1] && c >= col[0] && c <= col[1]) {\n                                                                                                    //             _this.isFunctionRangeSave = _this.isFunctionRangeSave || true;\n                                                                                                    //         }\n                                                                                                    //         else {\n                                                                                                    //             _this.isFunctionRangeSave = _this.isFunctionRangeSave || false;\n                                                                                                    //         }\n                                                                                                    //     }\n                                                                                                    // }\n                                                                                                    // else {\n                                                                                                    //     let sheetlen = $.trim(str).split(\"!\");\n                                                                                                    //     if (sheetlen.length > 1) {\n                                                                                                    //         _this.isFunctionRangeSave = _this.isFunctionRangeSave || true;\n                                                                                                    //     }\n                                                                                                    //     else {\n                                                                                                    //         _this.isFunctionRangeSave = _this.isFunctionRangeSave || false;\n                                                                                                    //     }\n                                                                                                    // }\n                    } else {\n                    }\n                }\n                i++;\n            }    //console.log(function_str);\n            //console.log(function_str);\n            return function_str;\n        },\n        isFunctionRangeSelect: function (txt, r, c, index, dynamicArray_compute) {\n            if (txt == null || txt == '') {\n                return;\n            }\n            if (index == null) {\n                index = Store.currentSheetIndex;\n            }\n            if (dynamicArray_compute == null) {\n                dynamicArray_compute = {};\n            }\n            let _this = this;\n            let txt1 = txt.toUpperCase();\n            let isOffsetFunc = txt1.indexOf('INDIRECT(') > -1 || txt1.indexOf('OFFSET(') > -1 || txt1.indexOf('INDEX(') > -1;\n            if (txt in this.formulaContainCellList) {\n                let cellList = this.formulaContainCellList[txt];\n                if (isOffsetFunc) {\n                    let isoff = cellList['__LuckyisOff__'];\n                    if (isoff == true) {\n                        for (let cellStr in cellList) {\n                            if (cellStr == '__LuckyisOff__') {\n                                continue;\n                            }\n                            this.isFunctionRangeSaveChange(cellStr, r, c, index, dynamicArray_compute);\n                        }\n                    } else {\n                        this.isFunctionRange(txt, r, c, index, dynamicArray_compute, function (str) {\n                            _this.addToCellList(txt, str);\n                        });\n                        cellList['__LuckyisOff__'] = true;\n                    }\n                } else {\n                    for (let cellStr in cellList) {\n                        if (cellStr == '__LuckyisOff__') {\n                            continue;\n                        }\n                        this.isFunctionRangeSaveChange(cellStr, r, c, index, dynamicArray_compute);\n                    }\n                }\n                return;\n            }\n            if (isOffsetFunc) {\n                this.isFunctionRange(txt, r, c, index, dynamicArray_compute);\n            } else {\n                this.isFunctionRangeSimple(txt, r, c, index, dynamicArray_compute);\n            }\n        },\n        isFunctionRange: function (txt, r, c, index, dynamicArray_compute, cellRangeFunction) {\n            let _this = this;\n            if (_this.operatorjson == null) {\n                let arr = _this.operator.split('|'), op = {};\n                for (let i = 0; i < arr.length; i++) {\n                    op[arr[i].toString()] = 1;\n                }\n                _this.operatorjson = op;\n            }\n            if (txt.substr(0, 1) == '=') {\n                txt = txt.substr(1);\n            }\n            let funcstack = txt.split('');\n            let i = 0, str = '', function_str = '', ispassby = true;\n            let matchConfig = {\n                'bracket': 0,\n                'comma': 0,\n                'squote': 0,\n                'dquote': 0,\n                'compare': 0,\n                'braces': 0\n            };    // let luckysheetfile = getluckysheetfile();\n                  // let dynamicArray_compute = luckysheetfile[getSheetIndex(Store.currentSheetIndex)][\"dynamicArray_compute\"] == null ? {} : luckysheetfile[getSheetIndex(Store.currentSheetIndex)][\"dynamicArray_compute\"];\n                  //bracket 0为运算符括号、1为函数括号\n            // let luckysheetfile = getluckysheetfile();\n            // let dynamicArray_compute = luckysheetfile[getSheetIndex(Store.currentSheetIndex)][\"dynamicArray_compute\"] == null ? {} : luckysheetfile[getSheetIndex(Store.currentSheetIndex)][\"dynamicArray_compute\"];\n            //bracket 0为运算符括号、1为函数括号\n            let cal1 = [], cal2 = [], bracket = [];\n            let firstSQ = -1;\n            while (i < funcstack.length) {\n                let s = funcstack[i];\n                if (s == '(' && matchConfig.squote == 0 && matchConfig.dquote == 0 && matchConfig.braces == 0) {\n                    if (str.length > 0 && bracket.length == 0) {\n                        str = str.toUpperCase();\n                        if (str.indexOf(':') > -1) {\n                            let funcArray = str.split(':');\n                            function_str += \"luckysheet_getSpecialReference(true,'\" + $.trim(funcArray[0]).replace(/'/g, \"\\\\'\") + \"', luckysheet_function.\" + funcArray[1] + '.f(#lucky#';\n                        } else {\n                            function_str += 'luckysheet_function.' + str + '.f(';\n                        }\n                        bracket.push(1);\n                        str = '';\n                    } else if (bracket.length == 0) {\n                        function_str += '(';\n                        bracket.push(0);\n                        str = '';\n                    } else {\n                        bracket.push(0);\n                        str += s;\n                    }\n                } else if (s == ')' && matchConfig.squote == 0 && matchConfig.dquote == 0 && matchConfig.braces == 0) {\n                    let bt = bracket.pop();\n                    if (bracket.length == 0) {\n                        // function_str += _this.isFunctionRange(str,r,c, index,dynamicArray_compute,cellRangeFunction) + \")\";\n                        // str = \"\";\n                        let functionS = _this.isFunctionRange(str, r, c, index, dynamicArray_compute, cellRangeFunction);\n                        if (functionS.indexOf('#lucky#') > -1) {\n                            functionS = functionS.replace(/#lucky#/g, '') + ')';\n                        }\n                        function_str += functionS + ')';\n                        str = '';\n                    } else {\n                        str += s;\n                    }\n                } else if (s == '{' && matchConfig.squote == 0 && matchConfig.dquote == 0) {\n                    str += '{';\n                    matchConfig.braces += 1;\n                } else if (s == '}' && matchConfig.squote == 0 && matchConfig.dquote == 0) {\n                    str += '}';\n                    matchConfig.braces -= 1;\n                } else if (s == '\"' && matchConfig.squote == 0) {\n                    if (matchConfig.dquote > 0) {\n                        //如果是\"\"代表着输出\"\n                        if (i < funcstack.length - 1 && funcstack[i + 1] == '\"') {\n                            i++;\n                            str += '\\x7F';    //用DEL替换一下\"\"\n                        } else\n                            //用DEL替换一下\"\"\n                            {\n                                matchConfig.dquote -= 1;\n                                str += '\"';\n                            }\n                    } else {\n                        matchConfig.dquote += 1;\n                        str += '\"';\n                    }\n                } else if (s == \"'\" && matchConfig.dquote == 0) {\n                    str += \"'\";\n                    if (matchConfig.squote > 0) {\n                        //if (firstSQ == i - 1)//配对的单引号后第一个字符不能是单引号\n                        //{\n                        //    代码到了此处应该是公式错误\n                        //}\n                        //如果是''代表着输出'\n                        if (i < funcstack.length - 1 && funcstack[i + 1] == \"'\") {\n                            i++;\n                            str += \"'\";\n                        } else {\n                            //如果下一个字符不是'代表单引号结束\n                            //if (funcstack[i - 1] == \"'\") {//配对的单引号后最后一个字符不能是单引号\n                            //    代码到了此处应该是公式错误\n                            //} else {\n                            matchConfig.squote -= 1;    //}\n                        }\n                    } else\n                        //}\n                        {\n                            matchConfig.squote += 1;\n                            firstSQ = i;\n                        }\n                } else if (s == ',' && matchConfig.squote == 0 && matchConfig.dquote == 0 && matchConfig.braces == 0) {\n                    if (bracket.length <= 1) {\n                        // function_str += _this.isFunctionRange(str, r, c, index,dynamicArray_compute,cellRangeFunction) + \",\";\n                        // str = \"\";\n                        let functionS = _this.isFunctionRange(str, r, c, index, dynamicArray_compute, cellRangeFunction);\n                        if (functionS.indexOf('#lucky#') > -1) {\n                            functionS = functionS.replace(/#lucky#/g, '') + ')';\n                        }\n                        function_str += functionS + ',';\n                        str = '';\n                    } else {\n                        str += ',';\n                    }\n                } else if (s in _this.operatorjson && matchConfig.squote == 0 && matchConfig.dquote == 0 && matchConfig.braces == 0) {\n                    let s_next = '';\n                    let op = _this.operatorPriority;\n                    if (i + 1 < funcstack.length) {\n                        s_next = funcstack[i + 1];\n                    }\n                    if (s + s_next in _this.operatorjson) {\n                        if (bracket.length == 0) {\n                            if ($.trim(str).length > 0) {\n                                cal2.unshift(_this.isFunctionRange($.trim(str), r, c, index, dynamicArray_compute, cellRangeFunction));\n                            } else if ($.trim(function_str).length > 0) {\n                                cal2.unshift($.trim(function_str));\n                            }\n                            if (cal1[0] in _this.operatorjson) {\n                                let stackCeilPri = op[cal1[0]];\n                                while (cal1.length > 0 && stackCeilPri != null) {\n                                    cal2.unshift(cal1.shift());\n                                    stackCeilPri = op[cal1[0]];\n                                }\n                            }\n                            cal1.unshift(s + s_next);\n                            function_str = '';\n                            str = '';\n                        } else {\n                            str += s + s_next;\n                        }\n                        i++;\n                    } else {\n                        if (bracket.length == 0) {\n                            if ($.trim(str).length > 0) {\n                                cal2.unshift(_this.isFunctionRange($.trim(str), r, c, index, dynamicArray_compute, cellRangeFunction));\n                            } else if ($.trim(function_str).length > 0) {\n                                cal2.unshift($.trim(function_str));\n                            }\n                            if (cal1[0] in _this.operatorjson) {\n                                let stackCeilPri = op[cal1[0]];\n                                stackCeilPri = stackCeilPri == null ? 1000 : stackCeilPri;\n                                let sPri = op[s];\n                                sPri = sPri == null ? 1000 : sPri;\n                                while (cal1.length > 0 && sPri >= stackCeilPri) {\n                                    cal2.unshift(cal1.shift());\n                                    stackCeilPri = op[cal1[0]];\n                                    stackCeilPri = stackCeilPri == null ? 1000 : stackCeilPri;\n                                }\n                            }\n                            cal1.unshift(s);\n                            function_str = '';\n                            str = '';\n                        } else {\n                            str += s;\n                        }\n                    }\n                } else {\n                    if (matchConfig.dquote == 0 && matchConfig.squote == 0) {\n                        str += $.trim(s);\n                    } else {\n                        str += s;\n                    }\n                }\n                if (i == funcstack.length - 1) {\n                    let endstr = '';\n                    let str_nb = $.trim(str).replace(/'/g, \"\\\\'\");\n                    if (_this.iscelldata(str_nb) && str_nb.substr(0, 1) != ':') {\n                        // endstr = \"luckysheet_getcelldata('\" + $.trim(str) + \"')\";\n                        endstr = \"luckysheet_getcelldata('\" + str_nb + \"')\";\n                        _this.isFunctionRangeSaveChange(str, r, c, index, dynamicArray_compute);\n                    } else if (str_nb.substr(0, 1) == ':') {\n                        str_nb = str_nb.substr(1);\n                        if (_this.iscelldata(str_nb)) {\n                            endstr = 'luckysheet_getSpecialReference(false,' + function_str + \",'\" + str_nb + \"')\";\n                        }\n                    } else {\n                        str = $.trim(str);\n                        let regx = /{.*?}/;\n                        if (regx.test(str) && str.substr(0, 1) != '\"' && str.substr(str.length - 1, 1) != '\"') {\n                            let arraytxt = regx.exec(str)[0];\n                            let arraystart = str.search(regx);\n                            let alltxt = '';\n                            if (arraystart > 0) {\n                                endstr += str.substr(0, arraystart);\n                            }\n                            endstr += \"luckysheet_getarraydata('\" + arraytxt + \"')\";\n                            if (arraystart + arraytxt.length < str.length) {\n                                endstr += str.substr(arraystart + arraytxt.length, str.length);\n                            }\n                        } else {\n                            endstr = str;\n                        }\n                    }\n                    if (endstr.length > 0) {\n                        cal2.unshift(endstr);\n                    }\n                    if (cal1.length > 0) {\n                        if (function_str.length > 0) {\n                            cal2.unshift(function_str);\n                            function_str = '';\n                        }\n                        while (cal1.length > 0) {\n                            cal2.unshift(cal1.shift());\n                        }\n                    }\n                    if (cal2.length > 0) {\n                        function_str = _this.calPostfixExpression(cal2);\n                    } else {\n                        function_str += endstr;\n                    }\n                }\n                i++;\n            }    // console.log(function_str);\n            // console.log(function_str);\n            _this.checkSpecialFunctionRange(function_str, r, c, index, dynamicArray_compute, cellRangeFunction);\n            return function_str;\n        },\n        isFunctionRangeSaveChange: function (str, r, c, index, dynamicArray_compute) {\n            let _this = this;\n            if (r != null && c != null) {\n                let range = _this.getcellrange($.trim(str), index);\n                if (range == null) {\n                    return;\n                }\n                let row = range.row, col = range.column, sheetIndex = range.sheetIndex;\n                if (r + '_' + c in dynamicArray_compute && (index == sheetIndex || index == null)) {\n                    let isd_range = false;\n                    for (let d_r = row[0]; d_r <= row[1]; d_r++) {\n                        for (let d_c = col[0]; d_c <= col[1]; d_c++) {\n                            if (d_r + '_' + d_c in dynamicArray_compute && dynamicArray_compute[d_r + '_' + d_c].r == r && dynamicArray_compute[d_r + '_' + d_c].c == c) {\n                                isd_range = true;\n                            }\n                        }\n                    }\n                    if (isd_range) {\n                        _this.isFunctionRangeSave = _this.isFunctionRangeSave || true;\n                    } else {\n                        _this.isFunctionRangeSave = _this.isFunctionRangeSave || false;\n                    }\n                } else {\n                    if (r >= row[0] && r <= row[1] && c >= col[0] && c <= col[1] && (index == sheetIndex || index == null)) {\n                        _this.isFunctionRangeSave = _this.isFunctionRangeSave || true;\n                    } else {\n                        _this.isFunctionRangeSave = _this.isFunctionRangeSave || false;\n                    }\n                }\n            } else {\n                _this.isFunctionRangeSave = _this.isFunctionRangeSave || false;    // let sheetlen = $.trim(str).split(\"!\");\n                                                                                   // if (sheetlen.length > 1) {\n                                                                                   //     _this.isFunctionRangeSave = _this.isFunctionRangeSave || true;//if change sheet, it must be true, but this is very slow\n                                                                                   // }\n                                                                                   // else {\n                                                                                   //     _this.isFunctionRangeSave = _this.isFunctionRangeSave || false;\n                                                                                   // }\n            }\n        },\n        // let sheetlen = $.trim(str).split(\"!\");\n        // if (sheetlen.length > 1) {\n        //     _this.isFunctionRangeSave = _this.isFunctionRangeSave || true;//if change sheet, it must be true, but this is very slow\n        // }\n        // else {\n        //     _this.isFunctionRangeSave = _this.isFunctionRangeSave || false;\n        // }\n        checkSpecialFunctionRange: function (function_str, r, c, index, dynamicArray_compute, cellRangeFunction) {\n            if (function_str.substr(0, 30) == 'luckysheet_getSpecialReference' || function_str.substr(0, 20) == 'luckysheet_function.') {\n                if (function_str.substr(0, 20) == 'luckysheet_function.') {\n                    let funcName = function_str.split('.')[1];\n                    if (funcName != null) {\n                        funcName = funcName.toUpperCase();\n                        if (funcName != 'INDIRECT' && funcName != 'OFFSET' && funcName != 'INDEX') {\n                            return;\n                        }\n                    }\n                }\n                try {\n                    Store.calculateSheetIndex = index;\n                    let str = new Function('return ' + function_str)();\n                    if (str instanceof Object && str.startCell != null) {\n                        str = str.startCell;\n                    }\n                    let str_nb = $.trim(str);    // console.log(function_str, tempFunc,str, this.iscelldata(str_nb),this.isFunctionRangeSave,r,c);\n                    // console.log(function_str, tempFunc,str, this.iscelldata(str_nb),this.isFunctionRangeSave,r,c);\n                    if (this.iscelldata(str_nb)) {\n                        if (typeof cellRangeFunction == 'function') {\n                            cellRangeFunction(str_nb);\n                        }    // this.isFunctionRangeSaveChange(str, r, c, index, dynamicArray_compute);\n                             // console.log(function_str, str, this.isFunctionRangeSave,r,c);\n                    }\n                } // this.isFunctionRangeSaveChange(str, r, c, index, dynamicArray_compute);\n                // console.log(function_str, str, this.isFunctionRangeSave,r,c);\n                catch (e) {\n                }\n            }    // if (function_str.substr(0, 20) == \"luckysheet_function.\") {\n                 //     let funcName = function_str.split(\".\")[1];\n                 //     if (funcName != null) {\n                 //         funcName = funcName.toUpperCase();\n                 //         if (funcName == \"INDIRECT\") {\n                 //             let tempFunc = \"luckysheet_indirect_check\" + function_str.substr(30, function_str.length);\n                 //             //tempFunc = tempFunc.replace(/luckysheet_getcelldata/g, \"luckysheet_indirect_check_return\");\n                 //             try {\n                 //                 Store.calculateSheetIndex = index;\n                 //                 let str = eval(tempFunc);\n                 //                 if(str instanceof Object && str.data!=null){\n                 //                     str = str.data.v;\n                 //                 }\n                 //                 let str_nb = $.trim(str);\n                 //                 // console.log(function_str, tempFunc,str, this.iscelldata(str_nb),this.isFunctionRangeSave,r,c);\n                 //                 if (this.iscelldata(str_nb)) {\n                 //                     if(typeof(cellRangeFunction)==\"function\"){\n                 //                         cellRangeFunction(str_nb);\n                 //                     }\n                 //                     this.isFunctionRangeSaveChange(str, r, c, index, dynamicArray_compute);\n                 //                     // console.log(function_str, str, this.isFunctionRangeSave,r,c);\n                 //                 }\n                 //             }\n                 //             catch{\n                 //             }\n                 //         }\n                 //         else if (funcName == \"OFFSET\") {\n                 //             let tempFunc = \"luckysheet_offset_check\" + function_str.substr(28, function_str.length);\n                 //             try {\n                 //                 Store.calculateSheetIndex = index;\n                 //                 let str = eval(tempFunc);\n                 //                 if(str instanceof Object && str.data!=null){\n                 //                     str = str.data.v;\n                 //                 }\n                 //                 let str_nb = $.trim(str);\n                 //                 if (this.iscelldata(str_nb)) {\n                 //                     if(typeof(cellRangeFunction)==\"function\"){\n                 //                         cellRangeFunction(str_nb);\n                 //                     }\n                 //                     this.isFunctionRangeSaveChange(str, r, c, index,dynamicArray_compute);\n                 //                     //console.log(function_str, str, this.isFunctionRangeSave,r,c);\n                 //                 }\n                 //             }\n                 //             catch{\n                 //             }\n                 //             //let result = eval(function_str);\n                 //             //console.log(function_str, result);\n                 //         }\n                 //     }\n                 // }\n        },\n        // if (function_str.substr(0, 20) == \"luckysheet_function.\") {\n        //     let funcName = function_str.split(\".\")[1];\n        //     if (funcName != null) {\n        //         funcName = funcName.toUpperCase();\n        //         if (funcName == \"INDIRECT\") {\n        //             let tempFunc = \"luckysheet_indirect_check\" + function_str.substr(30, function_str.length);\n        //             //tempFunc = tempFunc.replace(/luckysheet_getcelldata/g, \"luckysheet_indirect_check_return\");\n        //             try {\n        //                 Store.calculateSheetIndex = index;\n        //                 let str = eval(tempFunc);\n        //                 if(str instanceof Object && str.data!=null){\n        //                     str = str.data.v;\n        //                 }\n        //                 let str_nb = $.trim(str);\n        //                 // console.log(function_str, tempFunc,str, this.iscelldata(str_nb),this.isFunctionRangeSave,r,c);\n        //                 if (this.iscelldata(str_nb)) {\n        //                     if(typeof(cellRangeFunction)==\"function\"){\n        //                         cellRangeFunction(str_nb);\n        //                     }\n        //                     this.isFunctionRangeSaveChange(str, r, c, index, dynamicArray_compute);\n        //                     // console.log(function_str, str, this.isFunctionRangeSave,r,c);\n        //                 }\n        //             }\n        //             catch{\n        //             }\n        //         }\n        //         else if (funcName == \"OFFSET\") {\n        //             let tempFunc = \"luckysheet_offset_check\" + function_str.substr(28, function_str.length);\n        //             try {\n        //                 Store.calculateSheetIndex = index;\n        //                 let str = eval(tempFunc);\n        //                 if(str instanceof Object && str.data!=null){\n        //                     str = str.data.v;\n        //                 }\n        //                 let str_nb = $.trim(str);\n        //                 if (this.iscelldata(str_nb)) {\n        //                     if(typeof(cellRangeFunction)==\"function\"){\n        //                         cellRangeFunction(str_nb);\n        //                     }\n        //                     this.isFunctionRangeSaveChange(str, r, c, index,dynamicArray_compute);\n        //                     //console.log(function_str, str, this.isFunctionRangeSave,r,c);\n        //                 }\n        //             }\n        //             catch{\n        //             }\n        //             //let result = eval(function_str);\n        //             //console.log(function_str, result);\n        //         }\n        //     }\n        // }\n        execvertex: {},\n        execFunctionGroupData: null,\n        execFunctionExist: null,\n        formulaContainSheetList: {},\n        formulaContainCellList: {},\n        cellTextToIndexList: {},\n        addToCellList: function (formulaTxt, cellstring) {\n            if (formulaTxt == null || formulaTxt.length == 0 || cellstring == null || cellstring.length == 0) {\n                return;\n            }\n            if (this.formulaContainCellList == null) {\n                this.formulaContainCellList = {};\n            }    // formulaTxt = formulaTxt.toUpperCase();\n            // formulaTxt = formulaTxt.toUpperCase();\n            if (this.formulaContainCellList[formulaTxt] == null) {\n                this.formulaContainCellList[formulaTxt] = {};\n            }\n            this.formulaContainCellList[formulaTxt][cellstring] = 1;\n        },\n        addToCellIndexList: function (txt, infoObj) {\n            if (txt == null || txt.length == 0 || infoObj == null) {\n                return;\n            }\n            if (this.cellTextToIndexList == null) {\n                this.cellTextToIndexList = {};\n            }\n            if (txt.indexOf('!') > -1) {\n                txt = txt.replace(/\\\\'/g, \"'\").replace(/''/g, \"'\");\n                this.cellTextToIndexList[txt] = infoObj;\n            } else {\n                this.cellTextToIndexList[txt + '_' + infoObj.sheetIndex] = infoObj;\n            }    // console.log(this.cellTextToIndexList);\n        },\n        // console.log(this.cellTextToIndexList);\n        addToSheetIndexList: function (formulaTxt, sheetIndex, obIndex) {\n            if (formulaTxt == null || formulaTxt.length == 0) {\n                return;\n            }\n            if (sheetIndex == null || sheetIndex.length == 0) {\n                sheetIndex = Store.currentSheetIndex;\n            }\n            if (obIndex == null || obIndex.length == 0) {\n                obIndex = '';\n            }\n            if (this.formulaContainSheetList == null) {\n                this.formulaContainSheetList = {};\n            }\n            if (this.formulaContainSheetList[formulaTxt] == null) {\n                this.formulaContainSheetList[formulaTxt] = {};\n            }\n            this.formulaContainSheetList[formulaTxt][sheetIndex] = obIndex;\n        },\n        execFunctionGlobalData: {},\n        execFunctionGroupForce: function (isForce) {\n            if (isForce) {\n                this.execFunctionGroup(undefined, undefined, undefined, undefined, undefined, true);\n            } else {\n                this.execFunctionGroup();\n            }\n        },\n        execFunctionGroup: function (origin_r, origin_c, value, index, data, isForce = false) {\n            let _this = this;\n            if (data == null) {\n                data = Store.flowdata;\n            }\n            if (!window.luckysheet_compareWith) {\n                window.luckysheet_compareWith = luckysheet_compareWith;\n                window.luckysheet_getarraydata = luckysheet_getarraydata;\n                window.luckysheet_getcelldata = luckysheet_getcelldata;\n                window.luckysheet_parseData = luckysheet_parseData;\n                window.luckysheet_getValue = luckysheet_getValue;\n                window.luckysheet_indirect_check = luckysheet_indirect_check;\n                window.luckysheet_indirect_check_return = luckysheet_indirect_check_return;\n                window.luckysheet_offset_check = luckysheet_offset_check;\n                window.luckysheet_calcADPMM = luckysheet_calcADPMM;\n                window.luckysheet_getSpecialReference = luckysheet_getSpecialReference;\n            }\n            if (_this.execFunctionGlobalData == null) {\n                _this.execFunctionGlobalData = {};\n            }    // let luckysheetfile = getluckysheetfile();\n                 // let dynamicArray_compute = luckysheetfile[getSheetIndex(Store.currentSheetIndex)][\"dynamicArray_compute\"] == null ? {} : luckysheetfile[getSheetIndex(Store.currentSheetIndex)][\"dynamicArray_compute\"];\n            // let luckysheetfile = getluckysheetfile();\n            // let dynamicArray_compute = luckysheetfile[getSheetIndex(Store.currentSheetIndex)][\"dynamicArray_compute\"] == null ? {} : luckysheetfile[getSheetIndex(Store.currentSheetIndex)][\"dynamicArray_compute\"];\n            if (index == null) {\n                index = Store.currentSheetIndex;\n            }\n            if (value != null) {\n                //此处setcellvalue 中this.execFunctionGroupData会保存想要更新的值，本函数结尾不要设为null,以备后续函数使用\n                // setcellvalue(origin_r, origin_c, _this.execFunctionGroupData, value);\n                let cellCache = [[{ v: null }]];\n                setcellvalue(0, 0, cellCache, value);\n                _this.execFunctionGlobalData[origin_r + '_' + origin_c + '_' + index] = cellCache[0][0];\n            }    //{ \"r\": r, \"c\": c, \"index\": index, \"func\": func}\n            //{ \"r\": r, \"c\": c, \"index\": index, \"func\": func}\n            let calcChains = _this.getAllFunctionGroup(), formulaObjects = {};\n            let sheets = getluckysheetfile();\n            let sheetData = {};\n            for (let i = 0; i < sheets.length; i++) {\n                let sheet = sheets[i];\n                sheetData[sheet.index] = sheet.data;\n            }    //把修改涉及的单元格存储为对象\n            //把修改涉及的单元格存储为对象\n            let updateValueOjects = {}, updateValueArray = [];\n            if (_this.execFunctionExist == null) {\n                let key = 'r' + origin_r + 'c' + origin_c + 'i' + index;\n                updateValueOjects[key] = 1;\n            } else {\n                for (let x = 0; x < _this.execFunctionExist.length; x++) {\n                    let cell = _this.execFunctionExist[x];\n                    let key = 'r' + cell.r + 'c' + cell.c + 'i' + cell.i;\n                    updateValueOjects[key] = 1;\n                }\n            }\n            let arrayMatchCache = {};\n            let arrayMatch = function (formulaArray, formulaObjects, updateValueOjects, func) {\n                for (let a = 0; a < formulaArray.length; a++) {\n                    let range = formulaArray[a];\n                    let cacheKey = 'r' + range.row[0] + '' + range.row[1] + 'c' + range.column[0] + '' + range.column[1] + 'index' + range.sheetIndex;\n                    if (cacheKey in arrayMatchCache) {\n                        let amc = arrayMatchCache[cacheKey];    // console.log(amc);\n                        // console.log(amc);\n                        amc.forEach(item => {\n                            func(item.key, item.r, item.c, item.sheetIndex);\n                        });\n                    } else {\n                        let functionArr = [];\n                        for (let r = range.row[0]; r <= range.row[1]; r++) {\n                            for (let c = range.column[0]; c <= range.column[1]; c++) {\n                                let key = 'r' + r + 'c' + c + 'i' + range.sheetIndex;\n                                func(key, r, c, range.sheetIndex);\n                                if (formulaObjects && key in formulaObjects || updateValueOjects && key in updateValueOjects) {\n                                    functionArr.push({\n                                        key: key,\n                                        r: r,\n                                        c: c,\n                                        sheetIndex: range.sheetIndex\n                                    });\n                                }\n                            }\n                        }\n                        if (formulaObjects || updateValueOjects) {\n                            arrayMatchCache[cacheKey] = functionArr;\n                        }\n                    }\n                }\n            };\n            let existsChildFormulaMatch = {}, ii = 0;    //创建公式缓存及其范围的缓存\n                                                         // console.time(\"1\");\n            //创建公式缓存及其范围的缓存\n            // console.time(\"1\");\n            for (let i = 0; i < calcChains.length; i++) {\n                let formulaCell = calcChains[i];\n                let key = 'r' + formulaCell.r + 'c' + formulaCell.c + 'i' + formulaCell.index;\n                let calc_funcStr = getcellFormula(formulaCell.r, formulaCell.c, formulaCell.index);\n                if (calc_funcStr == null) {\n                    continue;\n                }\n                let txt1 = calc_funcStr.toUpperCase();\n                let isOffsetFunc = txt1.indexOf('INDIRECT(') > -1 || txt1.indexOf('OFFSET(') > -1 || txt1.indexOf('INDEX(') > -1;\n                let formulaArray = [];\n                if (isOffsetFunc) {\n                    this.isFunctionRange(calc_funcStr, null, null, formulaCell.index, null, function (str_nb) {\n                        let range = _this.getcellrange($.trim(str_nb), formulaCell.index);\n                        if (range != null) {\n                            formulaArray.push(range);\n                        }\n                    });\n                } else if (!(calc_funcStr.substr(0, 2) == '=\"' && calc_funcStr.substr(calc_funcStr.length - 1, 1) == '\"')) {\n                    //let formulaTextArray = calc_funcStr.split(/==|!=|<>|<=|>=|[,()=+-\\/*%&^><]/g);//无法正确分割单引号或双引号之间有==、!=、-等运算符的情况。导致如='1-2'!A1公式中表名1-2的A1单元格内容更新后，公式的值不更新的bug\n                    //解决='1-2'!A1+5会被calc_funcStr.split(/==|!=|<>|<=|>=|[,()=+-\\/*%&^><]/g)分割成[\"\",\"'1\",\"2'!A1\",5]的错误情况\n                    let point = 0;    //指针\n                    //指针\n                    let squote = -1;    //双引号\n                    //双引号\n                    let dquote = -1;    //单引号\n                    //单引号\n                    let formulaTextArray = [];\n                    let sq_end_array = [];    //保存了配对的单引号在formulaTextArray的index索引。\n                    //保存了配对的单引号在formulaTextArray的index索引。\n                    let calc_funcStr_length = calc_funcStr.length;\n                    for (let i = 0; i < calc_funcStr_length; i++) {\n                        let char = calc_funcStr.charAt(i);\n                        if (char == \"'\" && dquote == -1) {\n                            //如果是单引号开始\n                            if (squote == -1) {\n                                if (point != i) {\n                                    formulaTextArray.push(...calc_funcStr.substring(point, i).split(/==|!=|<>|<=|>=|[,()=+-\\/*%&\\^><]/));\n                                }\n                                squote = i;\n                                point = i;\n                            } else\n                                //单引号结束\n                                {\n                                    //if (squote == i - 1)//配对的单引号后第一个字符不能是单引号\n                                    //{\n                                    //    ;//到此处说明公式错误\n                                    //}\n                                    //如果是''代表着输出'\n                                    if (i < calc_funcStr_length - 1 && calc_funcStr.charAt(i + 1) == \"'\") {\n                                        i++;\n                                    } else {\n                                        //如果下一个字符不是'代表单引号结束\n                                        //if (calc_funcStr.charAt(i - 1) == \"'\") {//配对的单引号后最后一个字符不能是单引号\n                                        //    ;//到此处说明公式错误\n                                        point = i + 1;\n                                        formulaTextArray.push(calc_funcStr.substring(squote, point));\n                                        sq_end_array.push(formulaTextArray.length - 1);\n                                        squote = -1;    //} else {\n                                                        //    point = i + 1;\n                                                        //    formulaTextArray.push(calc_funcStr.substring(squote, point));\n                                                        //    sq_end_array.push(formulaTextArray.length - 1);\n                                                        //    squote = -1;\n                                                        //}\n                                    }\n                                }\n                        }\n                        //} else {\n                        //    point = i + 1;\n                        //    formulaTextArray.push(calc_funcStr.substring(squote, point));\n                        //    sq_end_array.push(formulaTextArray.length - 1);\n                        //    squote = -1;\n                        //}\n                        if (char == '\"' && squote == -1) {\n                            //如果是双引号开始\n                            if (dquote == -1) {\n                                if (point != i) {\n                                    formulaTextArray.push(...calc_funcStr.substring(point, i).split(/==|!=|<>|<=|>=|[,()=+-\\/*%&\\^><]/));\n                                }\n                                dquote = i;\n                                point = i;\n                            } else {\n                                //如果是\"\"代表着输出\"\n                                if (i < calc_funcStr_length - 1 && calc_funcStr.charAt(i + 1) == '\"') {\n                                    i++;\n                                } else {\n                                    //双引号结束\n                                    point = i + 1;\n                                    formulaTextArray.push(calc_funcStr.substring(dquote, point));\n                                    dquote = -1;\n                                }\n                            }\n                        }\n                    }\n                    if (point != calc_funcStr_length) {\n                        formulaTextArray.push(...calc_funcStr.substring(point, calc_funcStr_length).split(/==|!=|<>|<=|>=|[,()=+-\\/*%&\\^><]/));\n                    }    //拼接所有配对单引号及之后一个单元格内容，例如[\"'1-2'\",\"!A1\"]拼接为[\"'1-2'!A1\"]\n                    //拼接所有配对单引号及之后一个单元格内容，例如[\"'1-2'\",\"!A1\"]拼接为[\"'1-2'!A1\"]\n                    for (let i = sq_end_array.length - 1; i >= 0; i--) {\n                        if (sq_end_array[i] != formulaTextArray.length - 1) {\n                            formulaTextArray[sq_end_array[i]] = formulaTextArray[sq_end_array[i]] + formulaTextArray[sq_end_array[i] + 1];\n                            formulaTextArray.splice(sq_end_array[i] + 1, 1);\n                        }\n                    }    //至此=SUM('1-2'!A1:A2&\"'1-2'!A2\")由原来的[\"\",\"SUM\",\"'1\",\"2'!A1:A2\",\"\",\"\"'1\",\"2'!A2\"\"]更正为[\"\",\"SUM\",\"\",\"'1-2'!A1:A2\",\"\",\"\",\"\"'1-2'!A2\"\"]\n                    //至此=SUM('1-2'!A1:A2&\"'1-2'!A2\")由原来的[\"\",\"SUM\",\"'1\",\"2'!A1:A2\",\"\",\"\"'1\",\"2'!A2\"\"]更正为[\"\",\"SUM\",\"\",\"'1-2'!A1:A2\",\"\",\"\",\"\"'1-2'!A2\"\"]\n                    for (let i = 0; i < formulaTextArray.length; i++) {\n                        let t = formulaTextArray[i];\n                        if (t.length <= 1) {\n                            continue;\n                        }\n                        if (t.substr(0, 1) == '\"' && t.substr(t.length - 1, 1) == '\"' && !_this.iscelldata(t)) {\n                            continue;\n                        }\n                        let range = _this.getcellrange($.trim(t), formulaCell.index);\n                        if (range == null) {\n                            continue;\n                        }\n                        formulaArray.push(range);\n                    }\n                }\n                let item = {\n                    formulaArray: formulaArray,\n                    calc_funcStr: calc_funcStr,\n                    key: key,\n                    r: formulaCell.r,\n                    c: formulaCell.c,\n                    index: formulaCell.index,\n                    parents: {},\n                    chidren: {},\n                    color: 'w'\n                };\n                formulaObjects[key] = item;    // if(isForce){\n                                               //     updateValueArray.push(item);\n                                               // }\n                                               // else{\n                                               //     arrayMatch(formulaArray, null, function(key){\n                                               //         if(key in updateValueOjects){\n                                               //             updateValueArray.push(item);\n                                               //         }\n                                               //     });\n                                               // }\n            }    // console.timeEnd(\"1\");\n                 // console.time(\"2\");\n                 //形成一个公式之间引用的图结构\n            // if(isForce){\n            //     updateValueArray.push(item);\n            // }\n            // else{\n            //     arrayMatch(formulaArray, null, function(key){\n            //         if(key in updateValueOjects){\n            //             updateValueArray.push(item);\n            //         }\n            //     });\n            // }\n            // console.timeEnd(\"1\");\n            // console.time(\"2\");\n            //形成一个公式之间引用的图结构\n            Object.keys(formulaObjects).forEach(key => {\n                let formulaObject = formulaObjects[key];\n                arrayMatch(formulaObject.formulaArray, formulaObjects, updateValueOjects, function (childKey) {\n                    if (childKey in formulaObjects) {\n                        let childFormulaObject = formulaObjects[childKey];\n                        formulaObject.chidren[childKey] = 1;\n                        childFormulaObject.parents[key] = 1;\n                    }    // console.log(childKey,formulaObject.formulaArray);\n                    // console.log(childKey,formulaObject.formulaArray);\n                    if (!isForce && childKey in updateValueOjects) {\n                        updateValueArray.push(formulaObject);\n                    }\n                });\n                if (isForce) {\n                    updateValueArray.push(formulaObject);\n                }\n            });    // console.log(formulaObjects)\n                   // console.timeEnd(\"2\");\n                   // console.time(\"3\");\n            // console.log(formulaObjects)\n            // console.timeEnd(\"2\");\n            // console.time(\"3\");\n            let formulaRunList = [];    //计算，采用深度优先遍历公式形成的图结构\n                                        // updateValueArray.forEach((key)=>{\n                                        //     let formulaObject = formulaObjects[key];\n                                        // });\n            //计算，采用深度优先遍历公式形成的图结构\n            // updateValueArray.forEach((key)=>{\n            //     let formulaObject = formulaObjects[key];\n            // });\n            let stack = updateValueArray, existsFormulaRunList = {};\n            while (stack.length > 0) {\n                let formulaObject = stack.pop();\n                if (formulaObject == null || formulaObject.key in existsFormulaRunList) {\n                    continue;\n                }\n                if (formulaObject.color == 'b') {\n                    formulaRunList.push(formulaObject);\n                    existsFormulaRunList[formulaObject.key] = 1;\n                    continue;\n                }\n                let cacheStack = [];\n                Object.keys(formulaObject.parents).forEach(parentKey => {\n                    let parentFormulaObject = formulaObjects[parentKey];\n                    if (parentFormulaObject != null) {\n                        cacheStack.push(parentFormulaObject);\n                    }\n                });\n                ii++;\n                if (cacheStack.length == 0) {\n                    formulaRunList.push(formulaObject);\n                    existsFormulaRunList[formulaObject.key] = 1;\n                } else {\n                    formulaObject.color = 'b';\n                    stack.push(formulaObject);\n                    stack = stack.concat(cacheStack);\n                }\n            }\n            formulaRunList.reverse();    // console.log(formulaObjects, ii)\n                                         // console.timeEnd(\"3\");\n                                         // console.time(\"4\");\n            // console.log(formulaObjects, ii)\n            // console.timeEnd(\"3\");\n            // console.time(\"4\");\n            for (let i = 0; i < formulaRunList.length; i++) {\n                let formulaCell = formulaRunList[i];\n                if (formulaCell.level == Math.max) {\n                    continue;\n                }\n                window.luckysheet_getcelldata_cache = null;\n                let calc_funcStr = formulaCell.calc_funcStr;\n                let v = _this.execfunction(calc_funcStr, formulaCell.r, formulaCell.c, formulaCell.index);\n                _this.groupValuesRefreshData.push({\n                    'r': formulaCell.r,\n                    'c': formulaCell.c,\n                    'v': v[1],\n                    'f': v[2],\n                    'spe': v[3],\n                    'index': formulaCell.index\n                });    // _this.execFunctionGroupData[u.r][u.c] = value;\n                // _this.execFunctionGroupData[u.r][u.c] = value;\n                _this.execFunctionGlobalData[formulaCell.r + '_' + formulaCell.c + '_' + formulaCell.index] = {\n                    v: v[1],\n                    f: v[2]\n                };\n            }    // console.log(formulaRunList);\n                 // console.timeEnd(\"4\");\n            // console.log(formulaRunList);\n            // console.timeEnd(\"4\");\n            _this.execFunctionExist = null;\n        },\n        // When set origin_r and origin_c, that mean just refresh cell value link to [origin_r,origin_c] cell\n        execFunctionGroup1: function (origin_r, origin_c, value, index, data, isForce = false) {\n            let _this = this;\n            if (data == null) {\n                data = Store.flowdata;\n            }\n            if (!window.luckysheet_compareWith) {\n                window.luckysheet_compareWith = luckysheet_compareWith;\n                window.luckysheet_getarraydata = luckysheet_getarraydata;\n                window.luckysheet_getcelldata = luckysheet_getcelldata;\n                window.luckysheet_parseData = luckysheet_parseData;\n                window.luckysheet_getValue = luckysheet_getValue;\n                window.luckysheet_indirect_check = luckysheet_indirect_check;\n                window.luckysheet_indirect_check_return = luckysheet_indirect_check_return;\n                window.luckysheet_offset_check = luckysheet_offset_check;\n                window.luckysheet_calcADPMM = luckysheet_calcADPMM;\n                window.luckysheet_getSpecialReference = luckysheet_getSpecialReference;\n            }\n            if (_this.execFunctionGlobalData == null) {\n                _this.execFunctionGlobalData = {};\n            }\n            let luckysheetfile = getluckysheetfile();\n            let dynamicArray_compute = luckysheetfile[getSheetIndex(Store.currentSheetIndex)]['dynamicArray_compute'] == null ? {} : luckysheetfile[getSheetIndex(Store.currentSheetIndex)]['dynamicArray_compute'];\n            if (index == null) {\n                index = Store.currentSheetIndex;\n            }\n            if (value != null) {\n                //此处setcellvalue 中this.execFunctionGroupData会保存想要更新的值，本函数结尾不要设为null,以备后续函数使用\n                // setcellvalue(origin_r, origin_c, _this.execFunctionGroupData, value);\n                let cellCache = [[{ v: null }]];\n                setcellvalue(0, 0, cellCache, value);\n                _this.execFunctionGlobalData[origin_r + '_' + origin_c + '_' + index] = cellCache[0][0];\n            }    //{ \"r\": r, \"c\": c, \"index\": index, \"func\": func}\n            //{ \"r\": r, \"c\": c, \"index\": index, \"func\": func}\n            let group = _this.getAllFunctionGroup(), vertex1 = {}, stack = [], count = 0;\n            _this.execvertex = {};\n            if (_this.execFunctionExist == null) {\n                for (let i = 0; i < group.length; i++) {\n                    let item = group[i];\n                    let file = luckysheetfile[getSheetIndex(item['index'])];\n                    if (file == null) {\n                        continue;\n                    }\n                    let cell = file.data[item.r][item.c];\n                    let calc_funcStr = getcellFormula(item.r, item.c, item.index);\n                    if (cell != null && cell.f != null && cell.f == calc_funcStr) {\n                        if (!(item instanceof Object)) {\n                            item = new Function('return ' + item)();\n                        }\n                        item.color = 'w';\n                        item.parent = null;\n                        item.chidren = {};\n                        item.times = 0;\n                        vertex1['r' + item.r + 'c' + item.c + 'i' + item.index] = item;\n                        _this.isFunctionRangeSave = false;\n                        if (isForce) {\n                            _this.isFunctionRangeSave = true;\n                        } else if (origin_r != null && origin_c != null) {\n                            _this.isFunctionRangeSelect(calc_funcStr, origin_r, origin_c, index, dynamicArray_compute);\n                        }    // else {\n                             //     _this.isFunctionRangeSelect(calc_funcStr, undefined, undefined ,dynamicArray_compute);\n                             // }\n                        // else {\n                        //     _this.isFunctionRangeSelect(calc_funcStr, undefined, undefined ,dynamicArray_compute);\n                        // }\n                        if (_this.isFunctionRangeSave) {\n                            stack.push(item);\n                            _this.execvertex['r' + item.r + 'c' + item.c + 'i' + item.index] = item;\n                            count++;\n                        }\n                    }\n                }\n            } else {\n                for (let x = 0; x < _this.execFunctionExist.length; x++) {\n                    let cell = _this.execFunctionExist[x];\n                    if ('r' + cell.r + 'c' + cell.c + 'i' + cell.i in vertex1) {\n                        continue;\n                    }\n                    for (let i = 0; i < group.length; i++) {\n                        let item = group[i];\n                        let calc_funcStr = getcellFormula(item.r, item.c, item.index);\n                        item.color = 'w';\n                        item.parent = null;\n                        item.chidren = {};\n                        item.times = 0;\n                        vertex1['r' + item.r + 'c' + item.c + 'i' + item.index] = item;\n                        _this.isFunctionRangeSave = false;\n                        if (isForce) {\n                            _this.isFunctionRangeSave = true;\n                        } else {\n                            _this.isFunctionRangeSelect(calc_funcStr, cell.r, cell.c, cell.i, dynamicArray_compute);\n                        }\n                        if (_this.isFunctionRangeSave) {\n                            stack.push(item);\n                            _this.execvertex['r' + item.r + 'c' + item.c + 'i' + item.index] = item;\n                            count++;\n                        }\n                    }\n                }\n            }    // console.time(\"1\");\n                 // console.log(group.length);\n                 // let iii = 0, ii=0;\n                 //先进先出法，构建逆向执行结构树\n            // console.time(\"1\");\n            // console.log(group.length);\n            // let iii = 0, ii=0;\n            //先进先出法，构建逆向执行结构树\n            while (stack.length > 0) {\n                let u = stack.shift();\n                let excludeList = {};\n                _this.getChildrenVertex(u, vertex1, excludeList);    // ii++;\n                                                                     // console.log(JSON.stringify(excludeList));\n                // ii++;\n                // console.log(JSON.stringify(excludeList));\n                for (let name in vertex1) {\n                    let item = vertex1[name];\n                    if (item == null) {\n                        continue;\n                    }\n                    let ukey = 'r' + u.r + 'c' + u.c + 'i' + u.index;    // if ((u.r == item.r && u.c == item.c && u.index == item.index) ) {\n                                                                         //     continue;\n                                                                         // }\n                    // if ((u.r == item.r && u.c == item.c && u.index == item.index) ) {\n                    //     continue;\n                    // }\n                    if (name in excludeList) {\n                        continue;\n                    }\n                    _this.isFunctionRangeSave = false;\n                    let calc_funcStr = getcellFormula(item.r, item.c, item.index);\n                    _this.isFunctionRangeSelect(calc_funcStr, u.r, u.c, u.index, dynamicArray_compute);    // iii++;\n                    // iii++;\n                    if (_this.isFunctionRangeSave) {\n                        if (!(name in _this.execvertex)) {\n                            // console.log(JSON.stringify(item), JSON.stringify(u), _this.isFunctionRangeSave);\n                            stack.push(item);\n                            _this.execvertex[name] = item;\n                        }\n                        count++;\n                        _this.execvertex[name].chidren[ukey] = 1;\n                    }\n                }\n            }    // console.log(iii, ii);\n                 // console.timeEnd(\"1\");\n                 // console.time(\"2\");\n            // console.log(iii, ii);\n            // console.timeEnd(\"1\");\n            // console.time(\"2\");\n            _this.groupValuesRefreshData = [];\n            let i = 0;\n            while (i < count) {\n                for (let name in _this.execvertex) {\n                    let u = _this.execvertex[name];\n                    if (u.color == 'w') {\n                        _this.functionDFS(u);\n                    } else if (u.color == 'b') {\n                        i++;\n                    }\n                }\n            }    // console.timeEnd(\"2\");\n            // console.timeEnd(\"2\");\n            _this.execFunctionExist = null;\n        },\n        //递归得到引用节点\n        getChildrenVertex: function (u, vertex1, obj) {\n            let ukey = 'r' + u.r + 'c' + u.c + 'i' + u.index;\n            obj[ukey] = 1;\n            if (u.chidren != null) {\n                for (let key in u.chidren) {\n                    if (vertex1[key] && !(key in obj)) {\n                        this.getChildrenVertex(vertex1[key], vertex1, obj);\n                    }\n                }\n            }\n        },\n        //深度优先算法，处理多级调用函数\n        functionDFS: function (u) {\n            let _this = this;\n            u.color = 'g';\n            u.times += 1;\n            for (let chd in u.chidren) {\n                let v = _this.execvertex[chd];\n                if (v.color == 'w') {\n                    v.parent = 'r' + u.r.toString() + 'c' + u.c.toString() + 'i' + u.index;\n                    _this.functionDFS(v);\n                }\n            }\n            u.color = 'b';\n            window.luckysheet_getcelldata_cache = null;\n            let calc_funcStr = getcellFormula(u.r, u.c, u.index);\n            let v = _this.execfunction(calc_funcStr, u.r, u.c, u.index);    // let value = _this.execFunctionGroupData[u.r][u.c];\n                                                                            // if(value == null){\n                                                                            //     value = {};\n                                                                            // }\n                                                                            // value.v = v[1];\n                                                                            // value.f = v[2];\n                                                                            // let cell = getOrigincell(u.r,u.c,u.index);\n                                                                            // let spl;\n                                                                            // if(v[3]!=null){\n                                                                            //     if(v[3].type==\"sparklines\"){\n                                                                            //         window.luckysheetCurrentRow = u.r;\n                                                                            //         window.luckysheetCurrentColumn = u.c;\n                                                                            //         window.luckysheetCurrentIndex = u.index;\n                                                                            //         window.luckysheetCurrentFunction = calc_funcStr;\n                                                                            //         let fp = $.trim(_this.functionParserExe(calc_funcStr));\n                                                                            //         let sparklines = eval(fp);\n                                                                            //         spl = sparklines;\n                                                                            //     }\n                                                                            // }\n            // let value = _this.execFunctionGroupData[u.r][u.c];\n            // if(value == null){\n            //     value = {};\n            // }\n            // value.v = v[1];\n            // value.f = v[2];\n            // let cell = getOrigincell(u.r,u.c,u.index);\n            // let spl;\n            // if(v[3]!=null){\n            //     if(v[3].type==\"sparklines\"){\n            //         window.luckysheetCurrentRow = u.r;\n            //         window.luckysheetCurrentColumn = u.c;\n            //         window.luckysheetCurrentIndex = u.index;\n            //         window.luckysheetCurrentFunction = calc_funcStr;\n            //         let fp = $.trim(_this.functionParserExe(calc_funcStr));\n            //         let sparklines = eval(fp);\n            //         spl = sparklines;\n            //     }\n            // }\n            _this.groupValuesRefreshData.push({\n                'r': u.r,\n                'c': u.c,\n                'v': v[1],\n                'f': v[2],\n                'spe': v[3],\n                'index': u.index\n            });    // _this.execFunctionGroupData[u.r][u.c] = value;\n            // _this.execFunctionGroupData[u.r][u.c] = value;\n            _this.execFunctionGlobalData[u.r + '_' + u.c + '_' + u.index] = {\n                v: v[1],\n                f: v[2]\n            };\n        },\n        groupValuesRefreshData: [],\n        groupValuesRefresh: function () {\n            let _this = this;\n            let luckysheetfile = getluckysheetfile();\n            if (_this.groupValuesRefreshData.length > 0) {\n                for (let i = 0; i < _this.groupValuesRefreshData.length; i++) {\n                    let item = _this.groupValuesRefreshData[i];    // if(item.i != Store.currentSheetIndex){\n                                                                   //     continue;\n                                                                   // }\n                    // if(item.i != Store.currentSheetIndex){\n                    //     continue;\n                    // }\n                    let file = luckysheetfile[getSheetIndex(item.index)];\n                    let data = file.data;\n                    if (data == null) {\n                        continue;\n                    }\n                    let updateValue = {};\n                    if (item.spe != null) {\n                        if (item.spe.type == 'sparklines') {\n                            updateValue.spl = item.spe.data;\n                        } else if (item.spe.type == 'dynamicArrayItem') {\n                            file.dynamicArray = _this.insertUpdateDynamicArray(item.spe.data);\n                        }\n                    }\n                    updateValue.v = item.v;\n                    updateValue.f = item.f;\n                    setcellvalue(item.r, item.c, data, updateValue);\n                    server.saveParam('v', item.index, item.v, {\n                        'r': item.r,\n                        'c': item.c\n                    });\n                }\n                editor.webWorkerFlowDataCache(Store.flowdata);    //worker存数据\n                //worker存数据\n                _this.groupValuesRefreshData = [];\n            }\n        },\n        delFunctionGroup: function (r, c, index) {\n            if (index == null) {\n                index = Store.currentSheetIndex;\n            }\n            let luckysheetfile = getluckysheetfile();\n            let file = luckysheetfile[getSheetIndex(index)];\n            let calcChain = file.calcChain;\n            if (calcChain != null) {\n                for (let i = 0; i < calcChain.length; i++) {\n                    let calc = calcChain[i];\n                    if (calc.r == r && calc.c == c && calc.index == index) {\n                        calcChain.splice(i, 1);\n                        server.saveParam('fc', index, null, {\n                            'op': 'del',\n                            'pos': i\n                        });\n                        break;\n                    }\n                }\n            }\n            let dynamicArray = file.dynamicArray;\n            if (dynamicArray != null) {\n                for (let i = 0; i < dynamicArray.length; i++) {\n                    let calc = dynamicArray[i];\n                    if (calc.r == r && calc.c == c && (calc.index == null || calc.index == index)) {\n                        dynamicArray.splice(i, 1);\n                        server.saveParam('ac', index, null, {\n                            'op': 'del',\n                            'pos': i\n                        });\n                        break;\n                    }\n                }\n            }\n            setluckysheetfile(luckysheetfile);\n        },\n        execfunction: function (txt, r, c, index, isrefresh, notInsertFunc) {\n            let _this = this;\n            let _locale = locale();\n            let locale_formulaMore = _locale.formulaMore;    // console.log(txt,r,c)\n            // console.log(txt,r,c)\n            if (txt.indexOf(_this.error.r) > -1) {\n                return [\n                    false,\n                    _this.error.r,\n                    txt\n                ];\n            }\n            if (!_this.checkBracketNum(txt)) {\n                txt += ')';\n            }\n            if (index == null) {\n                index = Store.currentSheetIndex;\n            }\n            Store.calculateSheetIndex = index;\n            let fp = $.trim(_this.functionParserExe(txt));    //console.log(fp)\n            //console.log(fp)\n            if (fp.substr(0, 20) == 'luckysheet_function.' || fp.substr(0, 22) == 'luckysheet_compareWith') {\n                _this.functionHTMLIndex = 0;\n            }\n            if (!_this.testFunction(txt, fp) || fp == '') {\n                tooltip.info('', locale_formulaMore.execfunctionError);\n                return [\n                    false,\n                    _this.error.n,\n                    txt\n                ];\n            }\n            let result = null;\n            window.luckysheetCurrentRow = r;\n            window.luckysheetCurrentColumn = c;\n            window.luckysheetCurrentIndex = index;\n            window.luckysheetCurrentFunction = txt;\n            let sparklines = null;\n            try {\n                if (fp.indexOf('luckysheet_getcelldata') > -1) {\n                    let funcg = fp.split(\"luckysheet_getcelldata('\");\n                    for (let i = 1; i < funcg.length; i++) {\n                        let funcgStr = funcg[i].split(\"')\")[0];\n                        let funcgRange = _this.getcellrange(funcgStr);\n                        if (funcgRange.row[0] < 0 || funcgRange.column[0] < 0) {\n                            return [\n                                true,\n                                _this.error.r,\n                                txt\n                            ];\n                        }\n                        if (funcgRange.sheetIndex == Store.calculateSheetIndex && r >= funcgRange.row[0] && r <= funcgRange.row[1] && c >= funcgRange.column[0] && c <= funcgRange.column[1]) {\n                            if (isEditMode()) {\n                                alert(locale_formulaMore.execfunctionSelfError);\n                            } else {\n                                tooltip.info('', locale_formulaMore.execfunctionSelfErrorResult);\n                            }\n                            return [\n                                false,\n                                0,\n                                txt\n                            ];\n                        }\n                    }\n                }\n                result = new Function('return ' + fp)();\n                if (typeof result == 'string') {\n                    //把之前的非打印控制字符DEL替换回一个双引号。\n                    result = result.replace(/\\x7F/g, '\"');\n                }    //加入sparklines的参数项目\n                //加入sparklines的参数项目\n                if (fp.indexOf('SPLINES') > -1) {\n                    sparklines = result;\n                    result = '';\n                }\n            } catch (e) {\n                let err = e;    //err错误提示处理\n                //err错误提示处理\n                console.log(e, fp);\n                err = _this.errorInfo(err);\n                result = [\n                    _this.error.n,\n                    err\n                ];\n            }    //公式结果是对象，则表示只是选区。如果是单个单元格，则返回其值；如果是多个单元格，则返回 #VALUE!。\n            //公式结果是对象，则表示只是选区。如果是单个单元格，则返回其值；如果是多个单元格，则返回 #VALUE!。\n            if (getObjType(result) == 'object' && result.startCell != null) {\n                if (getObjType(result.data) == 'array') {\n                    result = _this.error.v;\n                } else {\n                    if (getObjType(result.data) == 'object' && !isRealNull(result.data.v)) {\n                        result = result.data.v;\n                    } else if (!isRealNull(result.data)) {\n                        //只有data长或宽大于1才可能是选区\n                        if (result.cell > 1 || result.rowl > 1) {\n                            result = result.data;\n                        } else\n                            //否则就是单个不为null的没有值v的单元格\n                            {\n                                result = 0;\n                            }\n                    } else {\n                        result = 0;\n                    }\n                }\n            }    //公式结果是数组，分错误值 和 动态数组 两种情况\n            //公式结果是数组，分错误值 和 动态数组 两种情况\n            let dynamicArrayItem = null;\n            if (getObjType(result) == 'array') {\n                let isErr = false;\n                if (getObjType(result[0]) != 'array' && result.length == 2) {\n                    isErr = valueIsError(result[0]);\n                }\n                if (!isErr) {\n                    if (getObjType(result[0]) == 'array' && result.length == 1 && result[0].length == 1) {\n                        result = result[0][0];\n                    } else {\n                        dynamicArrayItem = {\n                            'r': r,\n                            'c': c,\n                            'f': txt,\n                            'index': index,\n                            'data': result\n                        };\n                        result = '';\n                    }\n                } else {\n                    result = result[0];\n                }\n            }\n            window.luckysheetCurrentRow = null;\n            window.luckysheetCurrentColumn = null;\n            window.luckysheetCurrentIndex = null;\n            window.luckysheetCurrentFunction = null;\n            if (r != null && c != null) {\n                if (isrefresh) {\n                    _this.execFunctionGroup(r, c, result, index);\n                }\n                if (!notInsertFunc) {\n                    _this.insertUpdateFunctionGroup(r, c, index);\n                }\n            }\n            if (!!sparklines) {\n                return [\n                    true,\n                    result,\n                    txt,\n                    {\n                        type: 'sparklines',\n                        data: sparklines\n                    }\n                ];\n            }\n            if (!!dynamicArrayItem) {\n                return [\n                    true,\n                    result,\n                    txt,\n                    {\n                        type: 'dynamicArrayItem',\n                        data: dynamicArrayItem\n                    }\n                ];\n            }    // console.log(result, txt);\n            // console.log(result, txt);\n            return [\n                true,\n                result,\n                txt\n            ];\n        },\n        testFunction: function (txt, fp) {\n            if (txt.substr(0, 1) == '=') {\n                return true;\n            } else {\n                return false;\n            }\n        },\n        //供function/functionImplementation.js的EVALUATE函数调用。\n        execstringformula: function (txt, r, c, index) {\n            let _this = this;\n            return this.execfunction(txt, r, c, index);\n        },\n        functionResizeData: {},\n        functionResizeStatus: false,\n        functionResizeTimeout: null,\n        data_parm_index: 0    //选择公式后参数索引标记\n    };\n    //选择公式后参数索引标记\n    return luckysheetformula;\n});"]}