{"version":3,"sources":["global/method.js"],"names":["define","server","m_constant","sheetmanage","luckysheetformula","imageCtrl","dataVerificationCtrl","pivotTable","luckysheetFreezen","m_get","m_extend","luckysheetConfigsetting","editor","luckysheetcreatesheet","Store","luckysheetlodingHTML","luckyColor","getSheetIndex","luckysheetextendData","defaultConfig","container","luckysheetfile","defaultcolumnNum","defaultrowNum","fullscreenmode","devicePixelRatio","currentSheetIndex","calculateSheetIndex","flowdata","config","visibledatarow","visibledatacolumn","ch_width","rh_height","cellmainWidth","cellmainHeight","toolbarHeight","infobarHeight","calculatebarHeight","rowHeaderWidth","columnHeaderHeight","cellMainSrollBarSize","sheetBarHeight","statisticBarHeight","luckysheetTableContentHW","defaultcollen","defaultrowlen","jfcountfuncTimeout","jfautoscrollTimeout","luckysheet_select_status","luckysheet_select_save","row","column","luckysheet_selection_range","luckysheet_copy_save","luckysheet_paste_iscut","filterchage","luckysheet_filter_save","luckysheet_sheet_move_status","luckysheet_sheet_move_data","luckysheet_scroll_status","luckysheetisrefreshdetail","luckysheetisrefreshtheme","luckysheetcurrentisPivotTable","luckysheet_rows_selected_status","luckysheet_cols_selected_status","luckysheet_rows_change_size","luckysheet_rows_change_size_start","luckysheet_cols_change_size","luckysheet_cols_change_size_start","luckysheet_cols_dbclick_timeout","luckysheet_cols_dbclick_times","luckysheetCellUpdate","luckysheet_shiftpositon","iscopyself","orderbyindex","luckysheet_model_move_state","luckysheet_model_xy","luckysheet_model_move_obj","luckysheet_cell_selected_move","luckysheet_cell_selected_move_index","luckysheet_cell_selected_extend","luckysheet_cell_selected_extend_index","luckysheet_cell_selected_extend_time","clearjfundo","jfredo","jfundo","lang","createChart","highlightChart","zIndex","chartparam","luckysheetCurrentChart","luckysheetCurrentChartActive","luckysheetCurrentChartMove","luckysheetCurrentChartMoveTimeout","luckysheetCurrentChartMoveObj","luckysheetCurrentChartMoveXy","luckysheetCurrentChartMoveWinH","luckysheetCurrentChartMoveWinW","luckysheetCurrentChartResize","luckysheetCurrentChartResizeObj","luckysheetCurrentChartResizeXy","luckysheetCurrentChartResizeWinH","luckysheetCurrentChartResizeWinW","luckysheetInsertChartTosheetChange","luckysheetCurrentChartZIndexRank","luckysheet_chart_redo_click","luckysheetCurrentChartMaxState","jfrefreshchartall","changeChartCellData","renderChart","getChartJson","functionList","luckysheet_function","chart_selection","currentChart","scrollRefreshSwitch","measureTextCache","measureTextCellInfoCache","measureTextCacheTimeOut","cellOverflowMapCache","zoomRatio","visibledatacolumn_unique","visibledatarow_unique","showGridLines","toobarObject","inlineStringEditCache","inlineStringEditRange","fontList","currentSheetView","searchFunctionCell","functionlistPosition","rangechangeindex","rangestart","rangetosheet","rangeSetValueTo","func_selectedrange","rangedrag_column_start","rangedrag_row_start","rangeResizeObj","rangeResize","rangeResizeIndex","rangeResizexy","rangeResizeWinH","rangeResizeWinW","rangeResizeTo","rangeMovexy","rangeMove","rangeMoveObj","rangeMoveIndex","rangeMoveRangedata","functionHTMLIndex","functionRangeIndex","execvertex","execFunctionGroupData","execFunctionExist","formulaContainSheetList","cellTextToIndexList","isFunctionRangeSave","formulaContainCellList","execFunctionGlobalData","groupValuesRefreshData","functionResizeData","functionResizeStatus","functionResizeTimeout","data_parm_index","sheetMaxIndex","nulldata","mergeCalculationSheet","checkLoadSheetIndexToDataIndex","CacheNotLoadControll","pivotDatas","pivotSheetIndex","pivotDataSheetIndex","celldata","origindata","pivot_data_type","pivot_select_save","values","filter","showType","rowhidden","selected","caljs","initial","filterparm","luckysheet_pivotTable_select_state","jgridCurrentPivotInput","movestate","moveitemposition","movesave","drawPivotTable","pivotTableBoundary","imgItem","type","src","originWidth","originHeight","default","width","height","left","top","crop","offsetLeft","offsetTop","isFixedPos","fixedLeft","fixedTop","border","radius","style","color","images","currentImgId","currentWinW","currentWinH","resize","resizeXY","move","moveXY","cropChange","cropChangeXY","cropChangeObj","copyImgItemObj","defaultItem","type2","value1","value2","checked","remote","prohibitInput","hintShow","hintText","curItem","dataVerification","selectRange","selectStatus","addDataAjax","param","index","url","func","loadSheetUrl","$","append","currentPage","token","sessionStorage","getItem","ajax","method","headers","x-auth-token","data","JSON","stringify","contentType","success","d","parse","dataset","newData","setTimeout","fadeOut","remove","reload","arg","gridKey","extend","file","post","Function","toString","buildGridData","webWorkerFlowDataCache","length","saveParam","changeSheet","clearSheetByIndex","i","sheetfile","isPivotTable","chart","filter_select","calcChain","status","load","hide","clear","_this","this","destroy","empty","parent","document","off","initialHorizontal","initialVertical","defaultStore","key","defaultFormula","defaultSheet","defaultPivotTable","defaultImage","defaultDataVerification","asyncLoad","editorChart","c","chart_selection_color","chart_id","chartTheme","luckysheet","insertChartTosheet","sheetIndex","dataSheetIndex","option","chartType","selfOption","defaultOption","chartStyle","rangeConfigCheck","rangeRowCheck","rangeColCheck","chartMarkConfig","chartTitleConfig","winWidth","winHeight","scrollLeft","scrollTop","myWidth","myHeight","myLeft","parseFloat","myTop","myindexrank","find","click","createHookFunction","hookName","arguments","hook","args","Array","prototype","slice","apply","shift"],"mappings":"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","file":"../../global/method.js","sourcesContent":["define([\n    '../controllers/server',\n    '../controllers/constant',\n    '../controllers/sheetmanage',\n    './formula',\n    '../controllers/imageCtrl',\n    '../controllers/dataVerificationCtrl',\n    '../controllers/pivotTable',\n    '../controllers/freezen',\n    '../methods/get',\n    './extend',\n    '../controllers/luckysheetConfigsetting',\n    './editor',\n    './createsheet',\n    '../store'\n], function (server, m_constant, sheetmanage, luckysheetformula, imageCtrl, dataVerificationCtrl, pivotTable, luckysheetFreezen, m_get, m_extend, luckysheetConfigsetting, editor, luckysheetcreatesheet, Store) {\n    'use strict';\n    const {luckysheetlodingHTML, luckyColor} = m_constant;\n    const {getSheetIndex} = m_get;\n    const {luckysheetextendData} = m_extend;\n    const defaultConfig = {\n        defaultStore: {\n            container: null,\n            luckysheetfile: null,\n            defaultcolumnNum: 60,\n            defaultrowNum: 84,\n            fullscreenmode: true,\n            devicePixelRatio: 1,\n            currentSheetIndex: 0,\n            calculateSheetIndex: 0,\n            flowdata: [],\n            config: {},\n            visibledatarow: [],\n            visibledatacolumn: [],\n            ch_width: 0,\n            rh_height: 0,\n            cellmainWidth: 0,\n            cellmainHeight: 0,\n            toolbarHeight: 0,\n            infobarHeight: 0,\n            calculatebarHeight: 0,\n            rowHeaderWidth: 46,\n            columnHeaderHeight: 20,\n            cellMainSrollBarSize: 12,\n            sheetBarHeight: 31,\n            statisticBarHeight: 23,\n            luckysheetTableContentHW: [\n                0,\n                0\n            ],\n            defaultcollen: 73,\n            defaultrowlen: 19,\n            jfcountfuncTimeout: null,\n            jfautoscrollTimeout: null,\n            luckysheet_select_status: false,\n            luckysheet_select_save: [{\n                    'row': [\n                        0,\n                        0\n                    ],\n                    'column': [\n                        0,\n                        0\n                    ]\n                }],\n            luckysheet_selection_range: [],\n            luckysheet_copy_save: {},\n            //复制粘贴\n            luckysheet_paste_iscut: false,\n            filterchage: true,\n            //筛选\n            luckysheet_filter_save: {\n                'row': [],\n                'column': []\n            },\n            luckysheet_sheet_move_status: false,\n            luckysheet_sheet_move_data: [],\n            luckysheet_scroll_status: false,\n            luckysheetisrefreshdetail: true,\n            luckysheetisrefreshtheme: true,\n            luckysheetcurrentisPivotTable: false,\n            luckysheet_rows_selected_status: false,\n            //行列标题相关参\n            luckysheet_cols_selected_status: false,\n            luckysheet_rows_change_size: false,\n            luckysheet_rows_change_size_start: [],\n            luckysheet_cols_change_size: false,\n            luckysheet_cols_change_size_start: [],\n            luckysheet_cols_dbclick_timeout: null,\n            luckysheet_cols_dbclick_times: 0,\n            luckysheetCellUpdate: [],\n            luckysheet_shiftpositon: null,\n            iscopyself: true,\n            orderbyindex: 0,\n            //排序下标\n            luckysheet_model_move_state: false,\n            //模态框拖动\n            luckysheet_model_xy: [\n                0,\n                0\n            ],\n            luckysheet_model_move_obj: null,\n            luckysheet_cell_selected_move: false,\n            //选区拖动替换\n            luckysheet_cell_selected_move_index: [],\n            luckysheet_cell_selected_extend: false,\n            //选区下拉\n            luckysheet_cell_selected_extend_index: [],\n            luckysheet_cell_selected_extend_time: null,\n            clearjfundo: true,\n            jfredo: [],\n            jfundo: [],\n            lang: 'en',\n            //language\n            createChart: '',\n            highlightChart: '',\n            zIndex: 15,\n            chartparam: {\n                luckysheetCurrentChart: null,\n                //current chart_id\n                luckysheetCurrentChartActive: false,\n                luckysheetCurrentChartMove: null,\n                // Debounce state\n                luckysheetCurrentChartMoveTimeout: null,\n                //拖动图表框的节流定时器\n                luckysheetCurrentChartMoveObj: null,\n                //chart DOM object\n                luckysheetCurrentChartMoveXy: null,\n                //上一次操作结束的图表信息，x,y: chart框位置，scrollLeft1,scrollTop1: 滚动条位置\n                luckysheetCurrentChartMoveWinH: null,\n                //左右滚动条滑动距离\n                luckysheetCurrentChartMoveWinW: null,\n                //上下滚动条滑动距离\n                luckysheetCurrentChartResize: null,\n                luckysheetCurrentChartResizeObj: null,\n                luckysheetCurrentChartResizeXy: null,\n                luckysheetCurrentChartResizeWinH: null,\n                luckysheetCurrentChartResizeWinW: null,\n                luckysheetInsertChartTosheetChange: true,\n                // 正在执行撤销\n                luckysheetCurrentChartZIndexRank: 100,\n                luckysheet_chart_redo_click: false,\n                //撤销重做时标识\n                luckysheetCurrentChartMaxState: false,\n                //图表全屏状态\n                jfrefreshchartall: '',\n                changeChartCellData: '',\n                renderChart: '',\n                getChartJson: ''\n            },\n            functionList: null,\n            //function list explanation\n            luckysheet_function: null,\n            chart_selection: {},\n            currentChart: '',\n            scrollRefreshSwitch: true,\n            measureTextCache: {},\n            measureTextCellInfoCache: {},\n            measureTextCacheTimeOut: null,\n            cellOverflowMapCache: {},\n            zoomRatio: 1,\n            visibledatacolumn_unique: null,\n            visibledatarow_unique: null,\n            showGridLines: true,\n            toobarObject: {},\n            //toolbar constant\n            inlineStringEditCache: null,\n            inlineStringEditRange: null,\n            fontList: [],\n            currentSheetView: 'viewNormal'\n        },\n        defaultFormula: {\n            searchFunctionCell: null,\n            functionlistPosition: {},\n            rangechangeindex: null,\n            rangestart: false,\n            rangetosheet: null,\n            rangeSetValueTo: null,\n            func_selectedrange: {},\n            //函数选区范围\n            rangedrag_column_start: false,\n            rangedrag_row_start: false,\n            rangeResizeObj: null,\n            rangeResize: null,\n            rangeResizeIndex: null,\n            rangeResizexy: null,\n            rangeResizeWinH: null,\n            rangeResizeWinW: null,\n            rangeResizeTo: null,\n            rangeMovexy: null,\n            rangeMove: false,\n            rangeMoveObj: null,\n            rangeMoveIndex: null,\n            rangeMoveRangedata: null,\n            functionHTMLIndex: 0,\n            functionRangeIndex: null,\n            execvertex: {},\n            execFunctionGroupData: null,\n            execFunctionExist: null,\n            formulaContainSheetList: {},\n            cellTextToIndexList: {},\n            isFunctionRangeSave: false,\n            execvertex: {},\n            execFunctionGroupData: null,\n            execFunctionExist: null,\n            formulaContainSheetList: {},\n            formulaContainCellList: {},\n            cellTextToIndexList: {},\n            execFunctionGlobalData: {},\n            groupValuesRefreshData: [],\n            functionResizeData: {},\n            functionResizeStatus: false,\n            functionResizeTimeout: null,\n            data_parm_index: 0    //选择公式后参数索引标记\n        },\n        //选择公式后参数索引标记\n        defaultSheet: {\n            sheetMaxIndex: 0,\n            nulldata: null,\n            mergeCalculationSheet: {},\n            checkLoadSheetIndexToDataIndex: {},\n            CacheNotLoadControll: []\n        },\n        defaultPivotTable: {\n            pivotDatas: null,\n            pivotSheetIndex: 0,\n            pivotDataSheetIndex: 0,\n            celldata: null,\n            origindata: null,\n            pivot_data_type: {},\n            pivot_select_save: null,\n            column: null,\n            row: null,\n            values: null,\n            filter: null,\n            showType: null,\n            rowhidden: null,\n            selected: null,\n            caljs: null,\n            initial: true,\n            filterparm: null,\n            luckysheet_pivotTable_select_state: false,\n            jgridCurrentPivotInput: null,\n            movestate: false,\n            moveitemposition: [],\n            movesave: {},\n            drawPivotTable: true,\n            pivotTableBoundary: [\n                12,\n                6\n            ]\n        },\n        defaultImage: {\n            imgItem: {\n                type: '3',\n                //1移动并调整单元格大小 2移动并且不调整单元格的大小 3不要移动单元格并调整其大小\n                src: '',\n                //图片url\n                originWidth: null,\n                //图片原始宽度\n                originHeight: null,\n                //图片原始高度\n                default: {\n                    width: null,\n                    //图片 宽度\n                    height: null,\n                    //图片 高度\n                    left: null,\n                    //图片离表格左边的 位置\n                    top: null\n                },\n                //图片离表格顶部的 位置\n                crop: {\n                    width: null,\n                    //图片裁剪后 宽度\n                    height: null,\n                    //图片裁剪后 高度\n                    offsetLeft: 0,\n                    //图片裁剪后离未裁剪时 左边的位移\n                    offsetTop: 0\n                },\n                //图片裁剪后离未裁剪时 顶部的位移\n                isFixedPos: false,\n                //固定位置\n                fixedLeft: null,\n                //固定位置 左位移\n                fixedTop: null,\n                //固定位置 右位移\n                border: {\n                    width: 0,\n                    //边框宽度\n                    radius: 0,\n                    //边框半径\n                    style: 'solid',\n                    //边框类型\n                    color: '#000'\n                }\n            },\n            //边框颜色\n            images: null,\n            currentImgId: null,\n            currentWinW: null,\n            currentWinH: null,\n            resize: null,\n            resizeXY: null,\n            move: false,\n            moveXY: null,\n            cropChange: null,\n            cropChangeXY: null,\n            cropChangeObj: null,\n            copyImgItemObj: null\n        },\n        defaultDataVerification: {\n            defaultItem: {\n                type: 'dropdown',\n                //类型\n                type2: null,\n                //\n                value1: '',\n                //\n                value2: '',\n                //\n                checked: false,\n                remote: false,\n                //自动远程获取选项\n                prohibitInput: false,\n                //输入数据无效时禁止输入\n                hintShow: false,\n                //选中单元格时显示提示语\n                hintText: ''\n            },\n            //\n            curItem: null,\n            dataVerification: null,\n            selectRange: [],\n            selectStatus: false\n        }\n    };\n    const method = {\n        //翻页\n        addDataAjax: function (param, index, url, func) {\n            let _this = this;\n            if (index == null) {\n                index = Store.currentSheetIndex;\n            }\n            if (url == null) {\n                url = server.loadSheetUrl;\n            }\n            $('#luckysheet-grid-window-1').append(luckysheetlodingHTML());\n            param.currentPage++;\n            let dataType = 'application/json;charset=UTF-8';\n            let token = sessionStorage.getItem('x-auth-token');\n            $.ajax({\n                method: 'POST',\n                url: url,\n                headers: { 'x-auth-token': token },\n                data: JSON.stringify(param),\n                contentType: dataType,\n                success: function (d) {\n                    //d可能为json字符串\n                    if (typeof d == 'string') {\n                        d = JSON.parse(d);\n                    }\n                    let dataset = d.data;\n                    let newData = dataset.celldata;\n                    luckysheetextendData(dataset['row'], newData);\n                    setTimeout(function () {\n                        $('#luckysheetloadingdata').fadeOut().remove();\n                    }, 500);\n                    if (func && typeof func == 'function') {\n                        func(dataset);\n                    }\n                }\n            });\n        },\n        //重载\n        reload: function (param, index, url, func) {\n            let _this = this;\n            if (index == null) {\n                index = Store.currentSheetIndex;\n            }\n            if (url == null) {\n                url = server.loadSheetUrl;\n            }\n            $('#luckysheet-grid-window-1').append(luckysheetlodingHTML());\n            let arg = {\n                'gridKey': server.gridKey,\n                'index': index\n            };\n            param = $.extend(true, param, arg);\n            let file = Store.luckysheetfile[getSheetIndex(index)];\n            $.post(url, param, function (d) {\n                let dataset = new Function('return ' + d)();\n                file.celldata = dataset[index.toString()];\n                let data = sheetmanage.buildGridData(file);\n                setTimeout(function () {\n                    $('#luckysheetloadingdata').fadeOut().remove();\n                }, 500);\n                file['data'] = data;\n                Store.flowdata = data;\n                editor.webWorkerFlowDataCache(data);    //worker存数据\n                //worker存数据\n                luckysheetcreatesheet(data[0].length, data.length, data, null, false);\n                file['load'] = '1';\n                Store.luckysheet_select_save.length = 0;\n                Store.luckysheet_selection_range = [];\n                server.saveParam('shs', null, Store.currentSheetIndex);\n                sheetmanage.changeSheet(index);\n                if (func && typeof func == 'function') {\n                    func();\n                }\n            });\n        },\n        clearSheetByIndex: function (i) {\n            let index = getSheetIndex(i);\n            let sheetfile = Store.luckysheetfile[index];\n            if (!sheetfile.isPivotTable) {\n                sheetfile.data = [];\n                sheetfile.row = Store.defaultrowNum;\n                sheetfile.column = Store.defaultcolumnNum;\n                sheetfile.chart = [];\n                sheetfile.config = null;\n                sheetfile.filter = null;\n                sheetfile.filter_select = null;\n                sheetfile.celldata = [];\n                sheetfile.pivotTable = {};\n                sheetfile.calcChain = [];\n                sheetfile.status = 0;\n                sheetfile.load = 0;\n                Store.flowdata = [];\n                editor.webWorkerFlowDataCache(Store.flowdata);    //worker存数据\n                //worker存数据\n                $('#' + Store.container + ' .luckysheet-data-visualization-chart').remove();\n                $('#' + Store.container + ' .luckysheet-datavisual-selection-set').remove();\n                $('#luckysheet-row-count-show, #luckysheet-formula-functionrange-select, #luckysheet-row-count-show, #luckysheet-column-count-show, #luckysheet-change-size-line, #luckysheet-cell-selected-focus, #luckysheet-selection-copy, #luckysheet-cell-selected-extend, #luckysheet-cell-selected-move, #luckysheet-cell-selected').hide();\n                delete sheetfile.load;\n            } else {\n                delete Store.luckysheetfile[index];\n            }\n        },\n        clear: function (index) {\n            let _this = this;\n            if (index == 'all') {\n                for (let i = 0; i < Store.luckysheetfile.length; i++) {\n                    let sheetfile = Store.luckysheetfile[i];\n                    _this.clearSheetByIndex(sheetfile.index);\n                }\n            } else {\n                if (index == null) {\n                    index = Store.currentSheetIndex;\n                }\n                _this.clearSheetByIndex(index);\n            }\n            sheetmanage.changeSheet(Store.luckysheetfile[0].index);\n        },\n        destroy: function () {\n            $('#' + Store.container).empty();\n            $('body > .luckysheet-cols-menu').remove();\n            $('#luckysheet-modal-dialog-mask, #luckysheetTextSizeTest, #luckysheet-icon-morebtn-div').remove();\n            $('#luckysheet-input-box').parent().remove();\n            $('#luckysheet-formula-help-c').remove();\n            $('.chartSetting, .luckysheet-modal-dialog-slider').remove();    //document event release\n            //document event release\n            $(document).off('.luckysheetEvent');\n            $(document).off('.luckysheetProtection');    //参数重置\n            //参数重置\n            luckysheetFreezen.initialHorizontal = true;\n            luckysheetFreezen.initialVertical = true;\n            let defaultStore = $.extend(true, {}, defaultConfig.defaultStore);\n            for (let key in defaultStore) {\n                if (key in Store) {\n                    Store[key] = defaultStore[key];\n                }\n            }\n            let defaultFormula = $.extend(true, {}, defaultConfig.defaultFormula);\n            for (let key in defaultFormula) {\n                if (key in luckysheetformula) {\n                    luckysheetformula[key] = defaultFormula[key];\n                }\n            }\n            let defaultSheet = $.extend(true, {}, defaultConfig.defaultSheet);\n            for (let key in defaultSheet) {\n                if (key in sheetmanage) {\n                    sheetmanage[key] = defaultSheet[key];\n                }\n            }\n            let defaultPivotTable = $.extend(true, {}, defaultConfig.defaultPivotTable);\n            for (let key in defaultPivotTable) {\n                if (key in pivotTable) {\n                    pivotTable[key] = defaultPivotTable[key];\n                }\n            }\n            let defaultImage = $.extend(true, {}, defaultConfig.defaultImage);\n            for (let key in defaultImage) {\n                if (key in imageCtrl) {\n                    imageCtrl[key] = defaultImage[key];\n                }\n            }\n            let defaultDataVerification = $.extend(true, {}, defaultConfig.defaultDataVerification);\n            for (let key in defaultDataVerification) {\n                if (key in dataVerificationCtrl) {\n                    dataVerificationCtrl[key] = defaultDataVerification[key];\n                }\n            }    // remove proxy\n            // remove proxy\n            Store.asyncLoad = ['core'];\n        },\n        editorChart: function (c) {\n            let chart_selection_color = luckyColor[0];\n            let chart_id = 'luckysheetEditMode-datav-chart';\n            let chart_selection_id = chart_id + '_selection';\n            c.chart_id = chart_id;\n            let chartTheme = c.chartTheme;\n            chartTheme = chartTheme == null ? 'default0000' : chartTheme;\n            luckysheet.insertChartTosheet(c.sheetIndex, c.dataSheetIndex, c.option, c.chartType, c.selfOption, c.defaultOption, c.row, c.column, chart_selection_color, chart_id, chart_selection_id, c.chartStyle, c.rangeConfigCheck, c.rangeRowCheck, c.rangeColCheck, c.chartMarkConfig, c.chartTitleConfig, c.winWidth, c.winHeight, c.scrollLeft, c.scrollTop, chartTheme, c.myWidth, c.myHeight, c.myLeft != null ? parseFloat(c.myLeft) : null, c.myTop != null ? parseFloat(c.myTop) : null, c.myindexrank, true);\n            $('#' + chart_id).find('.luckysheet-modal-controll-update').click();\n        },\n        /**\n     * 获取单元格的值\n     * @param {name} 函数名称\n     * @param {arguments} 函数参数\n     */\n        createHookFunction: function () {\n            let hookName = arguments[0];\n            if (luckysheetConfigsetting.hook && luckysheetConfigsetting.hook[hookName] != null && typeof luckysheetConfigsetting.hook[hookName] == 'function') {\n                var args = Array.prototype.slice.apply(arguments);\n                args.shift();\n                let ret = luckysheetConfigsetting.hook[hookName].apply(this, args);\n                if (ret === false) {\n                    return false;\n                } else {\n                    return true;\n                }\n            }\n            return true;\n        }\n    };\n    return method;\n});"]}