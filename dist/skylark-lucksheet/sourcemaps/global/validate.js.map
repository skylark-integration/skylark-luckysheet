{"version":3,"sources":["global/validate.js"],"names":["define","luckysheetConfigsetting","Store","error","v","n","na","r","d","nm","nl","sp","isRealNull","val","toString","replace","isRealNum","isNaN","valueIsError","value","isError","x","hasChinaword","s","exec","isEditMode","editMode","hasPartMC","cfg","r1","r2","c1","c2","config","mc","rs","c","cs","checkWordByteLength","Math","ceil","charCodeAt","length"],"mappings":";;;;;;;AAAAA,QACI,yCACA,YACD,SAAUC,EAAyBC,GAClC,aACA,MAAMC,GACFC,EAAG,UAEHC,EAAG,SAEHC,GAAI,OAEJC,EAAG,QAEHC,EAAG,UAEHC,GAAI,QAEJC,GAAI,SAEJC,GAAI,WAiJR,OACIR,MAAOA,EACPS,WA/IJ,SAAoBC,GAChB,OAAW,MAAPA,GAAoD,IAArCA,EAAIC,WAAWC,QAAQ,MAAO,KA+IjDC,UAxIJ,SAAmBH,GACf,OAAW,MAAPA,GAAqD,KAAtCA,EAAIC,WAAWC,QAAQ,MAAO,KAG/B,kBAAPF,IAGNI,MAAMJ,IAkIXK,aA3HJ,SAAsBC,GAClB,IAAIC,GAAU,EACd,IAAK,IAAIC,KAAKlB,EACV,GAAIgB,GAAShB,EAAMkB,GAAI,CACnBD,GAAU,EACV,MAGR,OAAOA,GAoHPE,aAjHJ,SAAsBC,GAElB,QADY,oCACDC,KAAKD,IAgHhBE,WAzGJ,WACI,QAAIxB,EAAwByB,UAyG5BC,UAlGJ,SAAmBC,EAAKC,EAAIC,EAAIC,EAAIC,GAChC,IAAIL,GAAY,EAChB,IAAK,IAAIN,KAAKnB,EAAM+B,OAAc,MAAG,CACjC,IAAIC,EAAKN,EAAW,MAAEP,GACtB,GAAIQ,EAAKK,EAAG3B,GACR,GAAIuB,GAAMI,EAAG3B,GAAKuB,EAAKI,EAAG3B,EAAI2B,EAAGC,GAAK,EAAG,CACrC,GAAIJ,GAAMG,EAAGE,GAAKL,GAAMG,EAAGE,EAAIF,EAAGG,GAAK,EAAG,CACtCV,GAAY,EACZ,MACG,GAAIK,GAAME,EAAGE,GAAKJ,GAAME,EAAGE,EAAIF,EAAGG,GAAK,EAAG,CAC7CV,GAAY,EACZ,MACG,GAAII,EAAKG,EAAGE,GAAKJ,EAAKE,EAAGE,EAAIF,EAAGG,GAAK,EAAG,CAC3CV,GAAY,EACZ,YAED,GAAIG,GAAMI,EAAG3B,GAAKuB,GAAMI,EAAG3B,EAAI2B,EAAGC,GAAK,EAAG,CAC7C,GAAIJ,EAAKG,EAAGE,GAAKL,EAAKG,EAAGE,EAAIF,EAAGG,GAAK,EAAG,CACpCV,GAAY,EACZ,MACG,GAAIK,EAAKE,EAAGE,GAAKJ,EAAKE,EAAGE,EAAIF,EAAGG,GAAK,EAAG,CAC3CV,GAAY,EACZ,MACG,GAAII,GAAMG,EAAGE,GAAKJ,EAAKE,EAAGE,EAAIF,EAAGG,GAAK,EAAG,CAC5CV,GAAY,EACZ,MACG,GAAII,EAAKG,EAAGE,GAAKJ,GAAME,EAAGE,EAAIF,EAAGG,GAAK,EAAG,CAC5CV,GAAY,EACZ,YAED,GAAIG,EAAKI,EAAG3B,EAAI2B,EAAGC,GAAK,EAAG,CAC9B,GAAIJ,EAAKG,EAAGE,GAAKL,GAAMG,EAAGE,EAAIF,EAAGG,GAAK,EAAG,CACrCV,GAAY,EACZ,MACG,GAAIK,GAAME,EAAGE,GAAKJ,EAAKE,EAAGE,EAAIF,EAAGG,GAAK,EAAG,CAC5CV,GAAY,EACZ,MACG,GAAII,GAAMG,EAAGE,GAAKJ,EAAKE,EAAGE,EAAIF,EAAGG,GAAK,EAAG,CAC5CV,GAAY,EACZ,MACG,GAAII,EAAKG,EAAGE,GAAKJ,GAAME,EAAGE,EAAIF,EAAGG,GAAK,EAAG,CAC5CV,GAAY,EACZ,aAGL,GAAIE,GAAMK,EAAG3B,GAChB,GAAIuB,EAAKI,EAAG3B,EAAI2B,EAAGC,GAAK,EAAG,CACvB,GAAIJ,GAAMG,EAAGE,GAAKL,GAAMG,EAAGE,EAAIF,EAAGG,GAAK,EAAG,CACtCV,GAAY,EACZ,MACG,GAAIK,GAAME,EAAGE,GAAKJ,GAAME,EAAGE,EAAIF,EAAGG,GAAK,EAAG,CAC7CV,GAAY,EACZ,MACG,GAAII,EAAKG,EAAGE,GAAKJ,EAAKE,EAAGE,EAAIF,EAAGG,GAAK,EAAG,CAC3CV,GAAY,EACZ,YAED,GAAIG,GAAMI,EAAG3B,EAAI2B,EAAGC,GAAK,EAAG,CAC/B,GAAIJ,EAAKG,EAAGE,GAAKL,GAAMG,EAAGE,EAAIF,EAAGG,GAAK,EAAG,CACrCV,GAAY,EACZ,MACG,GAAIK,GAAME,EAAGE,GAAKJ,EAAKE,EAAGE,EAAIF,EAAGG,GAAK,EAAG,CAC5CV,GAAY,EACZ,MACG,GAAII,GAAMG,EAAGE,GAAKJ,EAAKE,EAAGE,EAAIF,EAAGG,GAAK,EAAG,CAC5CV,GAAY,EACZ,MACG,GAAII,EAAKG,EAAGE,GAAKJ,GAAME,EAAGE,EAAIF,EAAGG,GAAK,EAAG,CAC5CV,GAAY,EACZ,aAGL,GAAIE,GAAMK,EAAG3B,EAAI2B,EAAGC,GAAK,EAAG,CAC/B,GAAIJ,GAAMG,EAAGE,GAAKL,GAAMG,EAAGE,EAAIF,EAAGG,GAAK,EAAG,CACtCV,GAAY,EACZ,MACG,GAAIK,GAAME,EAAGE,GAAKJ,GAAME,EAAGE,EAAIF,EAAGG,GAAK,EAAG,CAC7CV,GAAY,EACZ,MACG,GAAII,EAAKG,EAAGE,GAAKJ,EAAKE,EAAGE,EAAIF,EAAGG,GAAK,EAAG,CAC3CV,GAAY,EACZ,QAIZ,OAAOA,GAcPW,oBAXJ,SAA6BnB,GACzB,OAAOoB,KAAKC,KAAKrB,EAAMsB,aAAa3B,SAAS,GAAG4B,OAAS","file":"../../global/validate.js","sourcesContent":["define([\n    '../controllers/luckysheetConfigsetting',\n    '../store'\n], function (luckysheetConfigsetting, Store) {\n    'use strict';\n    const error = {\n        v: '#VALUE!',\n        //错误的参数或运算符\n        n: '#NAME?',\n        //公式名称错误\n        na: '#N/A',\n        //函数或公式中没有可用数值\n        r: '#REF!',\n        //删除了由其他公式引用的单元格\n        d: '#DIV/0!',\n        //除数是0或空单元格\n        nm: '#NUM!',\n        //当公式或函数中某个数字有问题时\n        nl: '#NULL!',\n        //交叉运算符（空格）使用不正确\n        sp: '#SPILL!'    //数组范围有其它值\n    };\n    //数组范围有其它值\n    //是否是空值\n    function isRealNull(val) {\n        if (val == null || val.toString().replace(/\\s/g, '') == '') {\n            return true;\n        } else {\n            return false;\n        }\n    }    //是否是纯数字\n    //是否是纯数字\n    function isRealNum(val) {\n        if (val == null || val.toString().replace(/\\s/g, '') === '') {\n            return false;\n        }\n        if (typeof val == 'boolean') {\n            return false;\n        }\n        if (!isNaN(val)) {\n            return true;\n        } else {\n            return false;\n        }\n    }    //是否是错误类型\n    //是否是错误类型\n    function valueIsError(value) {\n        let isError = false;\n        for (let x in error) {\n            if (value == error[x]) {\n                isError = true;\n                break;\n            }\n        }\n        return isError;\n    }    //是否有中文\n    //是否有中文\n    function hasChinaword(s) {\n        let patrn = /[\\u4E00-\\u9FA5]|[\\uFE30-\\uFFA0]/gi;\n        if (!patrn.exec(s)) {\n            return false;\n        } else {\n            return true;\n        }\n    }    //是否为非编辑模式\n    //是否为非编辑模式\n    function isEditMode() {\n        if (luckysheetConfigsetting.editMode) {\n            return true;\n        } else {\n            return false;\n        }\n    }    //范围是否只包含部分合并单元格\n    //范围是否只包含部分合并单元格\n    function hasPartMC(cfg, r1, r2, c1, c2) {\n        let hasPartMC = false;\n        for (let x in Store.config['merge']) {\n            let mc = cfg['merge'][x];\n            if (r1 < mc.r) {\n                if (r2 >= mc.r && r2 < mc.r + mc.rs - 1) {\n                    if (c1 >= mc.c && c1 <= mc.c + mc.cs - 1) {\n                        hasPartMC = true;\n                        break;\n                    } else if (c2 >= mc.c && c2 <= mc.c + mc.cs - 1) {\n                        hasPartMC = true;\n                        break;\n                    } else if (c1 < mc.c && c2 > mc.c + mc.cs - 1) {\n                        hasPartMC = true;\n                        break;\n                    }\n                } else if (r2 >= mc.r && r2 == mc.r + mc.rs - 1) {\n                    if (c1 > mc.c && c1 < mc.c + mc.cs - 1) {\n                        hasPartMC = true;\n                        break;\n                    } else if (c2 > mc.c && c2 < mc.c + mc.cs - 1) {\n                        hasPartMC = true;\n                        break;\n                    } else if (c1 == mc.c && c2 < mc.c + mc.cs - 1) {\n                        hasPartMC = true;\n                        break;\n                    } else if (c1 > mc.c && c2 == mc.c + mc.cs - 1) {\n                        hasPartMC = true;\n                        break;\n                    }\n                } else if (r2 > mc.r + mc.rs - 1) {\n                    if (c1 > mc.c && c1 <= mc.c + mc.cs - 1) {\n                        hasPartMC = true;\n                        break;\n                    } else if (c2 >= mc.c && c2 < mc.c + mc.cs - 1) {\n                        hasPartMC = true;\n                        break;\n                    } else if (c1 == mc.c && c2 < mc.c + mc.cs - 1) {\n                        hasPartMC = true;\n                        break;\n                    } else if (c1 > mc.c && c2 == mc.c + mc.cs - 1) {\n                        hasPartMC = true;\n                        break;\n                    }\n                }\n            } else if (r1 == mc.r) {\n                if (r2 < mc.r + mc.rs - 1) {\n                    if (c1 >= mc.c && c1 <= mc.c + mc.cs - 1) {\n                        hasPartMC = true;\n                        break;\n                    } else if (c2 >= mc.c && c2 <= mc.c + mc.cs - 1) {\n                        hasPartMC = true;\n                        break;\n                    } else if (c1 < mc.c && c2 > mc.c + mc.cs - 1) {\n                        hasPartMC = true;\n                        break;\n                    }\n                } else if (r2 >= mc.r + mc.rs - 1) {\n                    if (c1 > mc.c && c1 <= mc.c + mc.cs - 1) {\n                        hasPartMC = true;\n                        break;\n                    } else if (c2 >= mc.c && c2 < mc.c + mc.cs - 1) {\n                        hasPartMC = true;\n                        break;\n                    } else if (c1 == mc.c && c2 < mc.c + mc.cs - 1) {\n                        hasPartMC = true;\n                        break;\n                    } else if (c1 > mc.c && c2 == mc.c + mc.cs - 1) {\n                        hasPartMC = true;\n                        break;\n                    }\n                }\n            } else if (r1 <= mc.r + mc.rs - 1) {\n                if (c1 >= mc.c && c1 <= mc.c + mc.cs - 1) {\n                    hasPartMC = true;\n                    break;\n                } else if (c2 >= mc.c && c2 <= mc.c + mc.cs - 1) {\n                    hasPartMC = true;\n                    break;\n                } else if (c1 < mc.c && c2 > mc.c + mc.cs - 1) {\n                    hasPartMC = true;\n                    break;\n                }\n            }\n        }\n        return hasPartMC;\n    }    //获取单个字符的字节数\n    //获取单个字符的字节数\n    function checkWordByteLength(value) {\n        return Math.ceil(value.charCodeAt().toString(2).length / 8);\n    }\n    return {\n        error: error,\n        isRealNull,\n        isRealNum,\n        valueIsError,\n        hasChinaword,\n        isEditMode,\n        hasPartMC,\n        checkWordByteLength\n    };\n});"]}