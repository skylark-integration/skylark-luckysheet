{"version":3,"sources":["global/api.js"],"names":["define","Store","m_util","m_get","locale","formula","func_methods","tooltip","json","editor","luckysheetformula","cleargridelement","m_format","m_setdata","m_sort","m_getRowlen","m_getdata","m_refresh","m_extend","m_validate","m_datecontroll","m_border","m_draw","server","menuButton","selection","luckysheetConfigsetting","luckysheetFreezen","luckysheetsizeauto","sheetmanage","conditionformat","m_sheetSearch","m_select","m_constant","m_filter","controlHistory","m_zoom","dataVerificationCtrl","imageCtrl","dayjs","m_updateCell","replaceHtml","getObjType","chatatABC","luckysheetactiveCell","getSheetIndex","getluckysheet_select_save","getluckysheetfile","getRangetxt","genarate","update","setAccuracy","setcellvalue","orderbydata","rowlenByRange","getdatabyselection","getcellvalue","luckysheetrefreshgrid","jfrefreshgrid","jfrefreshgrid_rhcw","luckysheetDeleteCell","luckysheetextendtable","luckysheetdeletetable","isRealNull","valueIsError","isRealNum","hasPartMC","isEditMode","isdatetime","diff","getBorderInfoCompute","luckysheetDrawMain","luckysheet_searcharray","selectHightlightShow","selectIsOverlap","sheetHTML","luckysheetdefaultstyle","createFilterOptions","zoomRefreshView","zoomNumberDomBind","luckysheetupdateCell","setCellValue","row","column","value","options","curv","flowdata","oldValue","JSON","stringify","info","order","currentSheetIndex","isRefresh","success","file","luckysheetfile","createHookFunction","data","$","extend","length","buildGridData","formatList","bg","ff","fc","bl","it","fs","cl","un","vt","ht","mc","tr","tb","rt","qp","toString","delFunctionGroup","Object","cell","f","v","ct","updatecell","m","attr","updateFormatCell","substr","setTimeout","parse","index","refreshRange","find","content","curSheetOrder","isRegularExpression","isWholeWord","isCaseSensitive","type","targetSheetData","result","i","rowArr","j","push","toLowerCase","reg","RegExp","getRegExpStr","test","frozenFirstRow","saveFrozen","scrollTop","row_st","visibledatarow","top","columnHeaderHeight","freezenhorizontaldata","cutVolumn","saveFreezen","freezenverticaldata","cancelFreezenVertical","createAssistCanvas","createFreezenHorizontal","frozenFirstColumn","scrollLeft","col_st","visibledatacolumn","left","rowHeaderWidth","cancelFreezenHorizontal","createFreezenVertical","frozenRowRange","range","locale_frozen","freezen","hasOwnProperty","iscelldata","row_focus","getcellrange","column_focus","alert","noSeletionError","frozenColumnRange","isStringRange","cancelFrozen","insertRowOrColumn","sheetIndex","number","locale_info","parseInt","tipInputNumberLimit","tipInputNumber","deleteRowOrColumn","startIndex","endIndex","hideRowOrColumn","cfgKey","cfg","config","clearjfundo","redo","jfundo","jfredo","saveParam","k","showRowOrColumn","getRange","rangeArr","luckysheet_select_save","rangeItem","temp","getRangeWithFlatten","forEach","ele","rs","cs","r","c","setSingleRangeFormat","curRange","Array","console","log","[object Object]","cancelRangeMerge","cellrange","has_PartMC","s","r1","r2","c1","c2","fv","mc_r","mc_c","cell_clone","spl","curData","curConfig","toJson","getCellValue","return_v","cellData","functionHTMLGenerate","fa","undefined","clearCell","deleteCell","move","indexOf","moveType","replace","toUpperCase","setCellFormat","TypeError","borderInfo","rangeType","borderType","color","style","replaceContent","matchCells","sheetData","fileData","exitEditMode","css","is","searchFunctionCell","searchFunctionEnter","luckysheetCellUpdate","hide","enterEditMode","last","row_index","col_index","setHorizontalFrozen","isRange","setVerticalFrozen","setBothFrozen","isCurrentSheet","insertRow","insertColumn","deleteRow","rowStart","rowEnd","deleteColumn","columnStart","columnEnd","hideRow","showRow","hideColumn","showColumn","setRowHeight","rowInfo","len","Number","setColumnWidth","columnInfo","getRowHeight","rowlen","rowlenObj","item","size","defaultrowlen","getColumnWidth","columnlen","columnlenObj","defaultcollen","getDefaultRowHeight","defaultRowHeight","getDefaultColWidth","defaultColWidth","getRangeValuesWithFlatte","values","getRangeAxis","axisText","getRangeValue","curOrder","getRangeHtml","cdformat","luckysheet_conditionformat_save","hasCF","cf_compute","getComputeMap","checksCF","isSameRow","str_r","end_r","isSameCol","str_c","end_c","borderInfoCompute","rowIndexArr","colIndexArr","includes","d","cpdata","colgroup","sort","span","c_value","match","getStyleByCell","bl_obj","br_obj","bt_obj","bb_obj","bd_r","bd_c","t","linetype","bcolor","b","l","collen","bl_color","bl_style","x","getHtmlBorderStyle","br_color","br_style","bt_color","bt_style","bb_color","bb_style","getRangeArray","dimensional","dataArr","getRangeJson","isFirstRowTitle","locale_drag","noMulti","drag","noPartMerge","getdata","arr","obj","st","getRangeDiagonal","clen","inputCorrect","offsetColumnLessZero","copybyformat","Event","getRangeBoolean","a","bool","event","setRangeShow","show","changeparam","cells","mergeMoveMain","empty","setRangeValue","rowCount","columnCount","setRangeFormat","some","setRangeFilter","filter_select","filter","luckysheet_filter_save","remove","setRangeMerge","isHasMc","isfirst","setRangeSort","noRangeError","hasMc","data_row","mergeError","concat","allParam","RowlChange","setRangeSortMulti","hasTitle","str","sortItem","setRangeConditionalFormatDefault","conditionName","conditionValue","format","textColor","cellColor","conditionformat_Text","conditionRange","conditionValue2","v1","v2","rangeArr1","getRangeByTxt","infoDialog","onlySingleCell","isNaN","conditionValueCanOnly","rangeArr2","pleaseEnterInteger","rule","fileH","historyRules","getHistoryRules","ruleArr","fileC","currentRules","getCurrentRules","ref","allowUpdate","setRangeConditionalFormat","formatValues","leftMin","deleteRangeConditionalFormat","itemIndex","cdformatItem","splice","clearRange","deleteRange","edr","stc","edc","matrixOperation","getdatalen","arr1","stdel","eddel","a1","unshift","repeat","controlHandler","matrixCalculation","numFormat","Math","pow","sqrt","cbrt","jfnqrt","abs","setSheetAdd","lastOrder","sheetObject","generateRandomSheetIndex","calcChain","sheetname","generateRandomSheetName","name","sameName","append","active","colorset","sheetconfig","status","celldata","defaultrowNum","defaultcolumnNum","pivotTable","isPivotTable","beforeIndex","beforeObj","insertBefore","afterIndex","afterObj","insertAfter","orders","removeClass","addClass","changeSheet","setSheetDelete","noMoreSheet","deleteSheet","setSheetCopy","targetOrder","copyindex","copyjson","generateCopySheetName","reOrderAllSheet","jfredostr","setSheetHide","setSheetShow","setSheetActive","multipleRangeShow","setSheetName","oldtxt","text","setSheetColor","oldcolor","setSheetMove","prevIndex","nextIndex","setSheetOrder","orderList","orderListMap","y","order_x","order_y","preIndex","setSheetZoom","zoom","zoomRatio","showGridLines","hideGridLines","refresh","scroll","targetRow","targetColumn","col_pre","row_pre","resize","getScreenshot","scrollHeight","rh_height","scrollWidth","ch_width","newCanvas","width","ceil","devicePixelRatio","height","ctx_newCanvas","get","getContext","beginPath","moveTo","lineTo","lineWidth","strokeStyle","stroke","closePath","toDataURL","setWorkbookName","val","getWorkbookName","element","trim","undo","ctr","getAllSheets","getSheet","getSheetByIndex","getSheetByName","getSheetData","getConfig","setConfig","refreshGrid_rhcw","getLuckysheetfile","setDataVerification","optionItem","type2","value1","value2","remote","prohibitInput","hintShow","hintText","checked","type2Values_1","type2Values_2","type2Values_3","type2Values_4","dvText","dataVerification","tooltipInfo1","tooltipInfo2","tooltipInfo3","tooltipInfo4","tooltipInfo5","tooltipInfo6","tooltipInfo7","currentDataVerification","historyDataVerification","refOfCheckbox","deleteDataVerification","insertImage","src","rowIndex","colIndex","image","Image","onload","img","originWidth","originHeight","addImgItem","images","rowheight","round","colwidth","firstcolumnlen","imgItem","default","crop","id","generateRandomId","deleteImage","idList","currentImgId","allImagesShow","init","getImageOption","transToCellData","getGridData","transToData","changLang","lang","luckysheet","create","closeWebsocket","websocket","close","txt","getTxtByRange","refreshFormula","execFunctionGroupForce","refreshMenuButtonFocus","menuButtonFocus"],"mappings":"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","file":"../../global/api.js","sourcesContent":["define([\n    '../store',\n    '../utils/util',\n    '../methods/get',\n    '../locale/locale',\n    '../controllers/formula',\n    '../methods/func_methods',\n    '../widgets/tooltip',\n    '../methods/json',\n    '../controllers/editor',\n    '../controllers/formula',\n    '../widgets/cleargridelement',\n    '../methods/format',\n    '../methods/setdata',\n    '../controllers/sort',\n    '../methods/getRowlen',\n    '../methods/getdata',\n    '../controllers/refresh',\n    '../widgets/extend',\n    '../methods/validate',\n    '../methods/datecontroll',\n    '../methods/border',\n    '../widgets/draw',\n    '../controllers/server',\n    '../controllers/menuButton',\n    '../controllers/selection',\n    '../methods/luckysheetConfigsetting',\n    '../controllers/freezen',\n    '../widgets/resize',\n    '../controllers/sheetmanage',\n    '../controllers/conditionformat',\n    '../methods/sheetSearch',\n    '../widgets/select',\n    '../widgets/constant',\n    '../controllers/filter',\n    '../controllers/controlHistory',\n    '../controllers/zoom',\n    '../widgets/dataVerificationCtrl',\n    '../widgets/imageCtrl',\n    'skylark-moment',\n    '../controllers/updateCell'\n], function (Store, m_util, m_get, locale, formula, func_methods, tooltip, json, editor, luckysheetformula, cleargridelement, m_format, m_setdata, m_sort, m_getRowlen, m_getdata, m_refresh, m_extend, m_validate, m_datecontroll, m_border, m_draw, server, menuButton, selection, luckysheetConfigsetting, luckysheetFreezen, luckysheetsizeauto, sheetmanage, conditionformat, m_sheetSearch, m_select, m_constant, m_filter, controlHistory, m_zoom, dataVerificationCtrl, imageCtrl, dayjs, m_updateCell) {\n    'use strict';\n    const {replaceHtml, getObjType, chatatABC, luckysheetactiveCell} = m_util;\n    const {getSheetIndex, getluckysheet_select_save, getluckysheetfile, getRangetxt} = m_get;\n    const {genarate, update} = m_format;\n    const {setAccuracy, setcellvalue} = m_setdata;\n    const {orderbydata} = m_sort;\n    const {rowlenByRange} = m_getRowlen;\n    const {getdatabyselection, getcellvalue} = m_getdata;\n    const {luckysheetrefreshgrid, jfrefreshgrid, jfrefreshgrid_rhcw} = m_refresh;\n    const {luckysheetDeleteCell, luckysheetextendtable, luckysheetdeletetable} = m_extend;\n    const {isRealNull, valueIsError, isRealNum, hasPartMC} = m_validate;\n    const isEditMode = luckysheetConfigsetting.isEditMode;\n    const {isdatetime, diff} = m_datecontroll;\n    const {getBorderInfoCompute} = m_border;\n    const {luckysheetDrawMain} = m_draw;\n    const {luckysheet_searcharray} = m_sheetSearch;\n    const {selectHightlightShow, selectIsOverlap} = m_select;\n    const {sheetHTML, luckysheetdefaultstyle} = m_constant;\n    const {createFilterOptions} = m_filter;\n    const {zoomRefreshView, zoomNumberDomBind} = m_zoom;\n    const {luckysheetupdateCell} = m_updateCell;\n    const IDCardReg = /^\\d{6}(18|19|20)?\\d{2}(0[1-9]|1[12])(0[1-9]|[12]\\d|3[01])\\d{3}(\\d|X)$/i;   \n     /**\n * 获取单元格的值\n * @param {Number} row 单元格所在行数；从0开始的整数，0表示第一行\n * @param {Number} column 单元格所在列数；从0开始的整数，0表示第一列\n * @param {Object} options 可选参数\n * @param {String} options.type 单元格的值类型，可以设置为原始值\"v\"或者显示值\"m\"；默认值为'v',表示获取单元格的实际值\n * @param {Number} options.order 工作表索引；默认值为当前工作表索引\n */\n    function getCellValue(row, column, options = {}) {\n        if (!isRealNum(row) || !isRealNum(column)) {\n            return tooltip.info('Arguments row or column cannot be null or undefined.', '');\n        }\n        let curSheetOrder = getSheetIndex(Store.currentSheetIndex);\n        let {type = 'v', order = curSheetOrder} = { ...options };\n        let targetSheetData = Store.luckysheetfile[order].data;\n        let cellData = targetSheetData[row][column];\n        let return_v;\n        if (getObjType(cellData) == 'object') {\n            return_v = cellData[type];\n            if (type == 'f' && return_v != null) {\n                return_v = formula.functionHTMLGenerate(return_v);\n            } else if (type == 'f') {\n                return_v = cellData['v'];\n            } else if (cellData && cellData.ct && cellData.ct.fa == 'yyyy-MM-dd') {\n                return_v = cellData.m;\n            }\n        }\n        if (return_v == undefined) {\n            return_v = null;\n        }\n        return return_v;\n    }\n    function setCellValue(row, column, value, options = {}) {\n        let curv = Store.flowdata[row][column];    // Store old value for hook function\n        // Store old value for hook function\n        const oldValue = JSON.stringify(curv);\n        if (!isRealNum(row) || !isRealNum(column)) {\n            return tooltip.info('The row or column parameter is invalid.', '');\n        }\n        let {order = getSheetIndex(Store.currentSheetIndex), isRefresh = true, success} = { ...options };\n        let file = Store.luckysheetfile[order];\n        if (file == null) {\n            return tooltip.info('The order parameter is invalid.', '');\n        }    /* cell更新前触发  */\n        /* cell更新前触发  */\n        if (!luckysheetConfigsetting.createHookFunction('cellUpdateBefore', row, column, value, isRefresh)) {\n            /* 如果cellUpdateBefore函数返回false 则不执行后续的更新 */\n            return;\n        }\n        let data = file.data;\n        if (isRefresh) {\n            data = $.extend(true, [], file.data);\n        }\n        if (data.length == 0) {\n            data = sheetmanage.buildGridData(file);\n        }    // luckysheetformula.updatecell(row, column, value);\n        // luckysheetformula.updatecell(row, column, value);\n        let formatList = {\n            //ct:1, //celltype,Cell value format: text, time, etc.\n            bg: 1,\n            //background,#fff000\n            ff: 1,\n            //fontfamily,\n            fc: 1,\n            //fontcolor\n            bl: 1,\n            //Bold\n            it: 1,\n            //italic\n            fs: 1,\n            //font size\n            cl: 1,\n            //Cancelline, 0 Regular, 1 Cancelline\n            un: 1,\n            //underline, 0 Regular, 1 underlines, fonts\n            vt: 1,\n            //Vertical alignment, 0 middle, 1 up, 2 down\n            ht: 1,\n            //Horizontal alignment,0 center, 1 left, 2 right\n            mc: 1,\n            //Merge Cells\n            tr: 1,\n            //Text rotation,0: 0、1: 45 、2: -45、3 Vertical text、4: 90 、5: -90\n            tb: 1,\n            //Text wrap,0 truncation, 1 overflow, 2 word wrap\n            //v: 1, //Original value\n            //m: 1, //Display value\n            rt: 1,\n            //text rotation angle 0-180 alignment\n            //f: 1, //formula\n            qp: 1    //quotePrefix, show number as string\n        };\n        //quotePrefix, show number as string\n        if (value == null || value.toString().length == 0) {\n            formula.delFunctionGroup(row, column);\n            setcellvalue(row, column, data, value);\n        } else if (value instanceof Object) {\n            let curv = {};\n            let cell = data[row][column];\n            if (isRealNull(cell)) {\n                cell = {};\n            }\n            if (value.f != null && value.v == null) {\n                curv.f = value.f;\n                if (value.ct != null) {\n                    curv.ct = value.ct;\n                }\n                data = luckysheetformula.updatecell(row, column, curv, false).data;    //update formula value\n            } else\n                //update formula value\n                {\n                    if (value.ct != null) {\n                        curv.ct = value.ct;\n                    }\n                    if (value.f != null) {\n                        curv.f = value.f;\n                    }\n                    if (value.v != null) {\n                        curv.v = value.v;\n                    } else {\n                        curv.v = cell.v;\n                    }\n                    if (value.m != null) {\n                        curv.m = value.m;\n                    }\n                    formula.delFunctionGroup(row, column);\n                    setcellvalue(row, column, data, curv);    //update text value\n                }\n            //update text value\n            for (let attr in value) {\n                let v = value[attr];\n                if (attr in formatList) {\n                    menuButton.updateFormatCell(data, attr, v, row, row, column, column);    //change range format\n                } else\n                    //change range format\n                    {\n                        cell[attr] = v;\n                    }\n            }\n            data[row][column] = cell;\n        } else {\n            if (value.toString().substr(0, 1) == '=' || value.toString().substr(0, 5) == '<span') {\n                data = luckysheetformula.updatecell(row, column, value, false).data;    //update formula value or convert inline string html to object\n            } else\n                //update formula value or convert inline string html to object\n                {\n                    formula.delFunctionGroup(row, column);\n                    setcellvalue(row, column, data, value);\n                }\n        }    /* cell更新后触发  */\n        /* cell更新后触发  */\n        setTimeout(() => {\n            // Hook function\n            luckysheetConfigsetting.createHookFunction('cellUpdated', row, column, JSON.parse(oldValue), Store.flowdata[row][column], isRefresh);\n        }, 0);\n        if (file.index == Store.currentSheetIndex && isRefresh) {\n            Store.refreshRange(data, [{\n                    'row': [\n                        row,\n                        row\n                    ],\n                    'column': [\n                        column,\n                        column\n                    ]\n                }]); \n        } else\n            //update data, meanwhile refresh canvas and store data to history\n            {\n                file.data = data;    //only update data\n            }\n        //only update data\n        if (success && typeof success === 'function') {\n            success(data);\n        }\n    }\n    function clearCell(row, column, options = {}) {\n        if (!isRealNum(row) || !isRealNum(column)) {\n            return tooltip.info('Arguments row and column cannot be null or undefined.', '');\n        }\n        let curSheetOrder = getSheetIndex(Store.currentSheetIndex);\n        let {order = curSheetOrder, success} = { ...options };\n        let targetSheetData = $.extend(true, [], Store.luckysheetfile[order].data);\n        let cell = targetSheetData[row][column];\n        if (getObjType(cell) == 'object') {\n            delete cell['m'];\n            delete cell['v'];\n            if (cell['f'] != null) {\n                delete cell['f'];\n                formula.delFunctionGroup(row, column, order);\n                delete cell['spl'];\n            }\n        } else {\n            cell = null;\n        }    // 若操作为当前sheet页，则刷新当前sheet页\n        // 若操作为当前sheet页，则刷新当前sheet页\n        if (order === curSheetOrder) {\n            Store.refreshRange(targetSheetData, [{\n                    row: [\n                        row,\n                        row\n                    ],\n                    column: [\n                        column,\n                        column\n                    ]\n                }]);\n        } else {\n            Store.luckysheetfile[order].data = targetSheetData;\n        }\n        if (success && typeof success === 'function') {\n            success(cell);\n        }\n    }\n    function deleteCell(move, row, column, options = {}) {\n        let moveTypes = [\n            'left',\n            'up'\n        ];\n        if (!move || moveTypes.indexOf(move) < 0) {\n            return tooltip.info(\"Arguments move cannot be null or undefined and its value must be 'left' or 'up'\", '');\n        }\n        if (!isRealNum(row) || !isRealNum(column)) {\n            return tooltip.info('Arguments row and column cannot be null or undefined.', '');\n        }\n        let curSheetOrder = getSheetIndex(Store.currentSheetIndex);\n        let {order = curSheetOrder, success} = { ...options };\n        let moveType = 'move' + move.replace(move[0], move[0].toUpperCase());    // left-moveLeft;  up-moveUp\n        // left-moveLeft;  up-moveUp\n        let sheetIndex;\n        if (order) {\n            if (Store.luckysheetfile[order]) {\n                sheetIndex = Store.luckysheetfile[order].index;\n            }\n        }\n        luckysheetDeleteCell(moveType, row, row, column, column, sheetIndex);\n        if (success && typeof success === 'function') {\n            success();\n        }\n    }\n    function setCellFormat(row, column, attr, value, options = {}) {\n        if (!isRealNum(row) || !isRealNum(column)) {\n            return tooltip.info('Arguments row or column cannot be null or undefined.', '');\n        }\n        if (!attr) {\n            return tooltip.info('Arguments attr cannot be null or undefined.', '');\n        }\n        let curSheetOrder = getSheetIndex(Store.currentSheetIndex);\n        let {order = curSheetOrder, success} = { ...options };\n        let file = Store.luckysheetfile[order];\n        if (file == null) {\n            return tooltip.info('The order parameter is invalid.', '');\n        }\n        let targetSheetData = $.extend(true, [], file.data);\n        if (targetSheetData.length == 0) {\n            targetSheetData = sheetmanage.buildGridData(file);\n        }\n        let cellData = targetSheetData[row][column] || {};\n        let cfg = $.extend(true, {}, file.config);    // 特殊格式\n        // 特殊格式\n        if (attr == 'ct' && (!value || !value.hasOwnProperty('fa') || !value.hasOwnProperty('t'))) {\n            return new TypeError(\"While set attribute 'ct' to cell, the value must have property 'fa' and 't'\");\n        }\n        if (attr == 'bd') {\n            if (cfg['borderInfo'] == null) {\n                cfg['borderInfo'] = [];\n            }\n            let borderInfo = {\n                rangeType: 'range',\n                borderType: 'border-all',\n                color: '#000',\n                style: '1',\n                range: [{\n                        column: [\n                            column,\n                            column\n                        ],\n                        row: [\n                            row,\n                            row\n                        ]\n                    }],\n                ...value\n            };\n            cfg['borderInfo'].push(borderInfo);\n        } else {\n            cellData[attr] = value;\n        }\n        targetSheetData[row][column] = cellData;    // refresh\n        // refresh\n        if (file.index == Store.currentSheetIndex) {\n            file.config = cfg;\n            Store.config = cfg;\n            Store.refreshRange(targetSheetData, [{\n                    'row': [\n                        row,\n                        row\n                    ],\n                    'column': [\n                        column,\n                        column\n                    ]\n                }]);\n        } else {\n            file.config = cfg;\n            file.data = targetSheetData;\n        }\n        if (success && typeof success === 'function') {\n            success(cellData);\n        }\n    }\n    function find(content, options = {}) {\n        if (!content && content != 0) {\n            return tooltip.info('Search content cannot be null or empty', '');\n        }\n        let curSheetOrder = getSheetIndex(Store.currentSheetIndex);\n        let {isRegularExpression = false, isWholeWord = false, isCaseSensitive = false, order = curSheetOrder, type = 'm'} = { ...options };\n        let targetSheetData = Store.luckysheetfile[order].data;\n        let result = [];\n        for (let i = 0; i < targetSheetData.length; i++) {\n            const rowArr = targetSheetData[i];\n            for (let j = 0; j < rowArr.length; j++) {\n                const cell = rowArr[j];\n                if (!cell) {\n                    continue;\n                }    // 添加cell的row, column属性\n                     // replace方法中的setCellValue中需要使用该属性\n                // 添加cell的row, column属性\n                // replace方法中的setCellValue中需要使用该属性\n                cell.row = i;\n                cell.column = j;\n                if (isWholeWord) {\n                    if (isCaseSensitive) {\n                        if (content.toString() == cell[type]) {\n                            result.push(cell);\n                        }\n                    } else {\n                        if (cell[type] && content.toString().toLowerCase() == cell[type].toLowerCase()) {\n                            result.push(cell);\n                        }\n                    }\n                } else if (isRegularExpression) {\n                    let reg;\n                    if (isCaseSensitive) {\n                        reg = new RegExp(func_methods.getRegExpStr(content), 'g');\n                    } else {\n                        reg = new RegExp(func_methods.getRegExpStr(content), 'ig');\n                    }\n                    if (reg.test(cell[type])) {\n                        result.push(cell);\n                    }\n                } else if (isCaseSensitive) {\n                    let reg = new RegExp(func_methods.getRegExpStr(content), 'g');\n                    if (reg.test(cell[type])) {\n                        result.push(cell);\n                    }\n                } else {\n                    let reg = new RegExp(func_methods.getRegExpStr(content), 'ig');\n                    if (reg.test(cell[type])) {\n                        result.push(cell);\n                    }\n                }\n            }\n        }\n        return result;\n    }\n    function replace(content, replaceContent, options = {}) {\n        let matchCells = find(content, options);\n        let curSheetOrder = getSheetIndex(Store.currentSheetIndex);\n        let {\n            order = curSheetOrder\n        } = { ...options };\n        let file = Store.luckysheetfile[order];\n        if (file == null) {\n            return tooltip.info('The order parameter is invalid.', '');\n        }\n        let sheetData = $.extend(true, [], file.data);\n        matchCells.forEach(cell => {\n            cell.m = replaceContent;\n            setCellValue(cell.row, cell.column, replaceContent, {\n                order: order,\n                isRefresh: false\n            });\n        });\n        let fileData = $.extend(true, [], file.data);\n        file.data.length = 0;\n        file.data.push(...sheetData);\n        if (file.index == Store.currentSheetIndex) {\n            Store.refreshRange(fileData, undefined, undefined, true, false);\n        }\n        luckysheetrefreshgrid();\n        if (options.success && typeof options.success === 'function') {\n            options.success(matchCells);\n        }\n        return matchCells;\n    }\n    function exitEditMode(options = {}) {\n        if (parseInt($('#luckysheet-input-box').css('top')) > 0) {\n            if ($('#luckysheet-formula-search-c').is(':visible') && formula.searchFunctionCell != null) {\n                formula.searchFunctionEnter($('#luckysheet-formula-search-c').find('.luckysheet-formula-search-item-active'));\n            } else {\n                formula.updatecell(Store.luckysheetCellUpdate[0], Store.luckysheetCellUpdate[1]);\n                Store.luckysheet_select_save = [{\n                        'row': [\n                            Store.luckysheetCellUpdate[0],\n                            Store.luckysheetCellUpdate[0]\n                        ],\n                        'column': [\n                            Store.luckysheetCellUpdate[1],\n                            Store.luckysheetCellUpdate[1]\n                        ],\n                        'row_focus': Store.luckysheetCellUpdate[0],\n                        'column_focus': Store.luckysheetCellUpdate[1]\n                    }];\n            }    //若有参数弹出框，隐藏\n            //若有参数弹出框，隐藏\n            if ($('#luckysheet-search-formula-parm').is(':visible')) {\n                $('#luckysheet-search-formula-parm').hide();\n            }    //若有参数选取范围弹出框，隐藏\n            //若有参数选取范围弹出框，隐藏\n            if ($('#luckysheet-search-formula-parm-select').is(':visible')) {\n                $('#luckysheet-search-formula-parm-select').hide();\n            }\n        }\n        if (options.success && typeof options.success === 'function') {\n            options.success();\n        }\n    }\n    function enterEditMode(options = {}) {\n        if ($('#luckysheet-conditionformat-dialog').is(':visible')) {\n            return;\n        } else if ($('#luckysheet-cell-selected').is(':visible')) {\n            let last = Store.luckysheet_select_save[Store.luckysheet_select_save.length - 1];\n            let row_index = last['row_focus'], col_index = last['column_focus'];\n            luckysheetupdateCell(row_index, col_index, Store.flowdata);\n        }\n        if (options.success && typeof options.success === 'function') {\n            options.success();\n        }\n    }\n    function frozenFirstRow(order) {\n        // store frozen\n        luckysheetFreezen.saveFrozen('freezenRow', order);    // 冻结为当前sheet页\n        // 冻结为当前sheet页\n        if (!order || order == getSheetIndex(Store.currentSheetIndex)) {\n            let scrollTop = $('#luckysheet-cell-main').scrollTop();\n            let row_st = luckysheet_searcharray(Store.visibledatarow, scrollTop);\n            if (row_st == -1) {\n                row_st = 0;\n            }\n            let top = Store.visibledatarow[row_st] - 2 - scrollTop + Store.columnHeaderHeight;\n            let freezenhorizontaldata = [\n                Store.visibledatarow[row_st],\n                row_st + 1,\n                scrollTop,\n                luckysheetFreezen.cutVolumn(Store.visibledatarow, row_st + 1),\n                top\n            ];\n            luckysheetFreezen.saveFreezen(freezenhorizontaldata, top, null, null);\n            if (Store.freezenverticaldata != null) {\n                luckysheetFreezen.cancelFreezenVertical();\n                luckysheetFreezen.createAssistCanvas();\n                luckysheetrefreshgrid();\n            }\n            luckysheetFreezen.createFreezenHorizontal(freezenhorizontaldata, top);\n            luckysheetFreezen.createAssistCanvas();\n            luckysheetrefreshgrid();\n        }\n    }\n    function frozenFirstColumn(order) {\n        // store frozen\n        luckysheetFreezen.saveFrozen('freezenColumn', order);    // 冻结为当前sheet页\n        // 冻结为当前sheet页\n        if (!order || order == getSheetIndex(Store.currentSheetIndex)) {\n            let scrollLeft = $('#luckysheet-cell-main').scrollLeft();\n            let col_st = luckysheet_searcharray(Store.visibledatacolumn, scrollLeft);\n            if (col_st == -1) {\n                col_st = 0;\n            }\n            let left = Store.visibledatacolumn[col_st] - 2 - scrollLeft + Store.rowHeaderWidth;\n            let freezenverticaldata = [\n                Store.visibledatacolumn[col_st],\n                col_st + 1,\n                scrollLeft,\n                luckysheetFreezen.cutVolumn(Store.visibledatacolumn, col_st + 1),\n                left\n            ];\n            luckysheetFreezen.saveFreezen(null, null, freezenverticaldata, left);\n            if (Store.freezenhorizontaldata != null) {\n                luckysheetFreezen.cancelFreezenHorizontal();\n                luckysheetFreezen.createAssistCanvas();\n                luckysheetrefreshgrid();\n            }\n            luckysheetFreezen.createFreezenVertical(freezenverticaldata, left);\n            luckysheetFreezen.createAssistCanvas();\n            luckysheetrefreshgrid();\n        }\n    }\n    function frozenRowRange(range, order) {\n        const locale_frozen = locale().freezen;\n        if (!range || !range.hasOwnProperty('row_focus') && !formula.iscelldata(range)) {\n            if (isEditMode()) {\n                alert(locale_frozen.noSeletionError);\n            } else {\n                tooltip.info(locale_frozen.noSeletionError, '');\n            }\n            return;\n        }\n        if (typeof range === 'string' && formula.iscelldata(range)) {\n            range = formula.getcellrange(range);\n            range = {\n                row_focus: range.row[0],\n                column_focus: range.column[0]\n            };\n        }    // store frozen\n        // store frozen\n        luckysheetFreezen.saveFrozen('freezenRowRange', order, range);\n        if (!order || order == getSheetIndex(Store.currentSheetIndex)) {\n            let scrollTop = $('#luckysheet-cell-main').scrollTop();\n            let row_st = luckysheet_searcharray(Store.visibledatarow, scrollTop);\n            let row_focus = range.row_focus;\n            if (row_focus > row_st) {\n                row_st = row_focus;\n            }\n            if (row_st == -1) {\n                row_st = 0;\n            }\n            let top = Store.visibledatarow[row_st] - 2 - scrollTop + Store.columnHeaderHeight;\n            let freezenhorizontaldata = [\n                Store.visibledatarow[row_st],\n                row_st + 1,\n                scrollTop,\n                luckysheetFreezen.cutVolumn(Store.visibledatarow, row_st + 1),\n                top\n            ];\n            luckysheetFreezen.saveFreezen(freezenhorizontaldata, top, null, null);\n            if (Store.freezenverticaldata != null) {\n                luckysheetFreezen.cancelFreezenVertical();\n                luckysheetFreezen.createAssistCanvas();\n                luckysheetrefreshgrid();\n            }\n            luckysheetFreezen.createFreezenHorizontal(freezenhorizontaldata, top);\n            luckysheetFreezen.createAssistCanvas();\n            luckysheetrefreshgrid();\n        }\n    }\n    function frozenColumnRange(range, order) {\n        const locale_frozen = locale().freezen;\n        let isStringRange = typeof range === 'string' && formula.iscelldata(range);\n        if (!range || !range.hasOwnProperty('column_focus') && !isStringRange) {\n            if (isEditMode()) {\n                alert(locale_frozen.noSeletionError);\n            } else {\n                tooltip.info(locale_frozen.noSeletionError, '');\n            }\n            return;\n        }\n        if (isStringRange) {\n            range = formula.getcellrange(range);\n            range = {\n                row_focus: range.row[0],\n                column_focus: range.column[0]\n            };\n        }    // store frozen\n        // store frozen\n        luckysheetFreezen.saveFrozen('freezenColumnRange', order, range);\n        if (!order || order == getSheetIndex(Store.currentSheetIndex)) {\n            let scrollLeft = $('#luckysheet-cell-main').scrollLeft();\n            let col_st = luckysheet_searcharray(Store.visibledatacolumn, scrollLeft);\n            let column_focus = range.column_focus;\n            if (column_focus > col_st) {\n                col_st = column_focus;\n            }\n            if (col_st == -1) {\n                col_st = 0;\n            }\n            let left = Store.visibledatacolumn[col_st] - 2 - scrollLeft + Store.rowHeaderWidth;\n            let freezenverticaldata = [\n                Store.visibledatacolumn[col_st],\n                col_st + 1,\n                scrollLeft,\n                luckysheetFreezen.cutVolumn(Store.visibledatacolumn, col_st + 1),\n                left\n            ];\n            luckysheetFreezen.saveFreezen(null, null, freezenverticaldata, left);\n            if (Store.freezenhorizontaldata != null) {\n                luckysheetFreezen.cancelFreezenHorizontal();\n                luckysheetFreezen.createAssistCanvas();\n                luckysheetrefreshgrid();\n            }\n            luckysheetFreezen.createFreezenVertical(freezenverticaldata, left);\n            luckysheetFreezen.createAssistCanvas();\n            luckysheetrefreshgrid();\n        }\n    }\n    function cancelFrozen(order) {\n        luckysheetFreezen.saveFrozen('freezenCancel', order);    // 取消当前sheet冻结时，刷新canvas\n        // 取消当前sheet冻结时，刷新canvas\n        if (!order || order == getSheetIndex(Store.currentSheetIndex)) {\n            if (Store.freezenverticaldata != null) {\n                luckysheetFreezen.cancelFreezenVertical();\n            }\n            if (Store.freezenhorizontaldata != null) {\n                luckysheetFreezen.cancelFreezenHorizontal();\n            }\n            luckysheetFreezen.createAssistCanvas();\n            luckysheetrefreshgrid();\n        }\n    }\n    function setHorizontalFrozen(isRange, options = {}) {\n        let curSheetOrder = getSheetIndex(Store.currentSheetIndex);\n        let {range, order = curSheetOrder, success} = { ...options };    // 若已存在冻结，取消之前的冻结效果\n        // 若已存在冻结，取消之前的冻结效果\n        cancelFrozen(order);\n        if (!isRange) {\n            frozenFirstRow(order);\n        } else {\n            // 选区行冻结\n            frozenRowRange(range, order);\n        }\n        if (success && typeof success === 'function') {\n            success();\n        }\n    }\n    function setVerticalFrozen(isRange, options = {}) {\n        let curSheetOrder = getSheetIndex(Store.currentSheetIndex);\n        let {range, order = curSheetOrder, success} = { ...options };    // 若已存在冻结，取消之前的冻结效果\n        // 若已存在冻结，取消之前的冻结效果\n        cancelFrozen(order);\n        if (!isRange) {\n            frozenFirstColumn(order);\n        } else {\n            frozenColumnRange(range, order);\n        }\n        if (success && typeof success === 'function') {\n            success();\n        }\n    }\n    function setBothFrozen(isRange, options = {}) {\n        let curSheetOrder = getSheetIndex(Store.currentSheetIndex);\n        let {range, order = curSheetOrder, success} = { ...options };\n        let isCurrentSheet = !order || order == getSheetIndex(Store.currentSheetIndex);\n        const locale_frozen = locale().freezen;    // 若已存在冻结，取消之前的冻结效果\n        // 若已存在冻结，取消之前的冻结效果\n        cancelFrozen(order);    // 冻结首行列\n        // 冻结首行列\n        if (!isRange) {\n            // store frozen\n            luckysheetFreezen.saveFrozen('freezenRC', order);\n            if (isCurrentSheet) {\n                let scrollTop = $('#luckysheet-cell-main').scrollTop();\n                let row_st = luckysheet_searcharray(Store.visibledatarow, scrollTop);\n                if (row_st == -1) {\n                    row_st = 0;\n                }\n                let top = Store.visibledatarow[row_st] - 2 - scrollTop + Store.columnHeaderHeight;\n                let freezenhorizontaldata = [\n                    Store.visibledatarow[row_st],\n                    row_st + 1,\n                    scrollTop,\n                    luckysheetFreezen.cutVolumn(Store.visibledatarow, row_st + 1),\n                    top\n                ];\n                luckysheetFreezen.saveFreezen(freezenhorizontaldata, top, null, null);\n                luckysheetFreezen.createFreezenHorizontal(freezenhorizontaldata, top);\n                let scrollLeft = $('#luckysheet-cell-main').scrollLeft();\n                let col_st = luckysheet_searcharray(Store.visibledatacolumn, scrollLeft);\n                if (col_st == -1) {\n                    col_st = 0;\n                }\n                let left = Store.visibledatacolumn[col_st] - 2 - scrollLeft + Store.rowHeaderWidth;\n                let freezenverticaldata = [\n                    Store.visibledatacolumn[col_st],\n                    col_st + 1,\n                    scrollLeft,\n                    luckysheetFreezen.cutVolumn(Store.visibledatacolumn, col_st + 1),\n                    left\n                ];\n                luckysheetFreezen.saveFreezen(null, null, freezenverticaldata, left);\n                luckysheetFreezen.createFreezenVertical(freezenverticaldata, left);\n                luckysheetFreezen.createAssistCanvas();\n                luckysheetrefreshgrid();\n            }\n        } else {\n            // 冻结行列到选区\n            // store frozen\n            luckysheetFreezen.saveFrozen('freezenRCRange', order, range);\n            let isStringRange = typeof range === 'string' && formula.iscelldata(range);\n            if (isCurrentSheet) {\n                if ((!range || !(range.hasOwnProperty('column_focus') && range.hasOwnProperty('row_focus'))) && !isStringRange) {\n                    if (isEditMode()) {\n                        alert(locale_frozen.noSeletionError);\n                    } else {\n                        tooltip.info(locale_frozen.noSeletionError, '');\n                    }\n                    return;\n                }\n                if (isStringRange) {\n                    range = formula.getcellrange(range);\n                    range = {\n                        row_focus: range.row[0],\n                        column_focus: range.column[0]\n                    };\n                }\n                let scrollTop = $('#luckysheet-cell-main').scrollTop();\n                let row_st = luckysheet_searcharray(Store.visibledatarow, scrollTop);\n                let row_focus = range.row_focus;\n                if (row_focus > row_st) {\n                    row_st = row_focus;\n                }\n                if (row_st == -1) {\n                    row_st = 0;\n                }\n                let top = Store.visibledatarow[row_st] - 2 - scrollTop + Store.columnHeaderHeight;\n                let freezenhorizontaldata = [\n                    Store.visibledatarow[row_st],\n                    row_st + 1,\n                    scrollTop,\n                    luckysheetFreezen.cutVolumn(Store.visibledatarow, row_st + 1),\n                    top\n                ];\n                luckysheetFreezen.saveFreezen(freezenhorizontaldata, top, null, null);\n                luckysheetFreezen.createFreezenHorizontal(freezenhorizontaldata, top);\n                let scrollLeft = $('#luckysheet-cell-main').scrollLeft();\n                let col_st = luckysheet_searcharray(Store.visibledatacolumn, scrollLeft);\n                let column_focus = range.column_focus;\n                if (column_focus > col_st) {\n                    col_st = column_focus;\n                }\n                if (col_st == -1) {\n                    col_st = 0;\n                }\n                let left = Store.visibledatacolumn[col_st] - 2 - scrollLeft + Store.rowHeaderWidth;\n                let freezenverticaldata = [\n                    Store.visibledatacolumn[col_st],\n                    col_st + 1,\n                    scrollLeft,\n                    luckysheetFreezen.cutVolumn(Store.visibledatacolumn, col_st + 1),\n                    left\n                ];\n                luckysheetFreezen.saveFreezen(null, null, freezenverticaldata, left);\n                luckysheetFreezen.createFreezenVertical(freezenverticaldata, left);\n                luckysheetFreezen.createAssistCanvas();\n                luckysheetrefreshgrid();\n            }\n        }\n    }\n    function insertRowOrColumn(type, index = 0, options = {}) {\n        if (!isRealNum(index)) {\n            return tooltip.info('The index parameter is invalid.', '');\n        }\n        let curSheetOrder = getSheetIndex(Store.currentSheetIndex);\n        let {number = 1, order = curSheetOrder, success} = { ...options };\n        let _locale = locale();\n        let locale_info = _locale.info;\n        if (!isRealNum(number)) {\n            if (isEditMode()) {\n                alert(locale_info.tipInputNumber);\n            } else {\n                tooltip.info(locale_info.tipInputNumber, '');\n            }\n            return;\n        }\n        number = parseInt(number);\n        if (number < 1 || number > 100) {\n            if (isEditMode()) {\n                alert(locale_info.tipInputNumberLimit);\n            } else {\n                tooltip.info(locale_info.tipInputNumberLimit, '');\n            }\n            return;\n        }    // 默认在行上方增加行，列左侧增加列\n        // 默认在行上方增加行，列左侧增加列\n        let sheetIndex;\n        if (order) {\n            if (Store.luckysheetfile[order]) {\n                sheetIndex = Store.luckysheetfile[order].index;\n            }\n        }\n        luckysheetextendtable(type, index, number, 'lefttop', sheetIndex);\n        if (success && typeof success === 'function') {\n            success();\n        }\n    }\n    function insertRow(row = 0, options = {}) {\n        insertRowOrColumn('row', row, options);\n    }\n    function insertColumn(column = 0, options = {}) {\n        insertRowOrColumn('column', column, options);\n    }\n    function deleteRowOrColumn(type, startIndex, endIndex, options = {}) {\n        if (!isRealNum(startIndex) || !isRealNum(endIndex)) {\n            return tooltip.info('Please enter the index for deleting rows or columns correctly.', '');\n        }\n        let curSheetOrder = getSheetIndex(Store.currentSheetIndex);\n        let {order = curSheetOrder, success} = { ...options };\n        let sheetIndex;\n        if (order) {\n            if (Store.luckysheetfile[order]) {\n                sheetIndex = Store.luckysheetfile[order].index;\n            }\n        }\n        luckysheetdeletetable(type, startIndex, endIndex, sheetIndex);\n        if (success && typeof success === 'function') {\n            success();\n        }\n    }\n    function deleteRow(rowStart, rowEnd, options = {}) {\n        deleteRowOrColumn('row', rowStart, rowEnd, options);\n    }\n    function deleteColumn(columnStart, columnEnd, options = {}) {\n        deleteRowOrColumn('column', columnStart, columnEnd, options);\n    }\n    function hideRowOrColumn(type, startIndex, endIndex, options = {}) {\n        if (!isRealNum(startIndex) || !isRealNum(endIndex)) {\n            return tooltip.info('Please enter the index for deleting rows or columns correctly.', '');\n        }\n        let curSheetOrder = getSheetIndex(Store.currentSheetIndex);\n        let {order = curSheetOrder, success} = { ...options };\n        let file = Store.luckysheetfile[order];\n        let cfgKey = type === 'row' ? 'rowhidden' : 'colhidden';\n        let cfg = $.extend(true, {}, file.config);\n        if (cfg[cfgKey] == null) {\n            cfg[cfgKey] = {};\n        }\n        for (let i = startIndex; i <= endIndex; i++) {\n            cfg[cfgKey][i] = 0;\n        }    //保存撤销\n        //保存撤销\n        if (Store.clearjfundo) {\n            let redo = {};\n            redo['type'] = type === 'row' ? 'showHidRows' : 'showHidCols';\n            redo['sheetIndex'] = file.index;\n            redo['config'] = $.extend(true, {}, file.config);\n            redo['curconfig'] = cfg;\n            Store.jfundo.length = 0;\n            Store.jfredo.push(redo);\n        }\n        Store.luckysheetfile[order].config = cfg;\n        Store.saveParam('cg', file.index, cfg[cfgKey], { 'k': cfgKey });    // 若操作sheet为当前sheet页，行高、列宽 刷新\n        // 若操作sheet为当前sheet页，行高、列宽 刷新\n        if (order == curSheetOrder) {\n            //config\n            Store.config = cfg;\n            jfrefreshgrid_rhcw(Store.flowdata.length, Store.flowdata[0].length);\n        }\n        if (success && typeof success === 'function') {\n            success();\n        }\n    }\n    function showRowOrColumn(type, startIndex, endIndex, options = {}) {\n        if (!isRealNum(startIndex) || !isRealNum(endIndex)) {\n            return tooltip.info('Please enter the index for deleting rows or columns correctly.', '');\n        }\n        let curSheetOrder = getSheetIndex(Store.currentSheetIndex);\n        let {order = curSheetOrder, success} = { ...options };\n        let file = Store.luckysheetfile[order];\n        let cfgKey = type === 'row' ? 'rowhidden' : 'colhidden';\n        let cfg = $.extend(true, {}, file.config);\n        if (cfg[cfgKey] == null) {\n            return;\n        }\n        for (let i = startIndex; i <= endIndex; i++) {\n            delete cfg[cfgKey][i];\n        }    //保存撤销\n        //保存撤销\n        if (Store.clearjfundo) {\n            let redo = {};\n            redo['type'] = type === 'row' ? 'showHidRows' : 'showHidCols';\n            redo['sheetIndex'] = file.index;\n            redo['config'] = $.extend(true, {}, file.config);\n            redo['curconfig'] = cfg;\n            Store.jfundo.length = 0;\n            Store.jfredo.push(redo);\n        }    //config\n        //config\n        Store.luckysheetfile[order].config = Store.config;\n        Store.saveParam('cg', file.index, cfg[cfgKey], { 'k': cfgKey });    // 若操作sheet为当前sheet页，行高、列宽 刷新\n        // 若操作sheet为当前sheet页，行高、列宽 刷新\n        if (order === curSheetOrder) {\n            Store.config = cfg;\n            jfrefreshgrid_rhcw(Store.flowdata.length, Store.flowdata[0].length);\n        }\n        if (success && typeof success === 'function') {\n            success();\n        }\n    }\n    function hideRow(startIndex, endIndex, options = {}) {\n        hideRowOrColumn('row', startIndex, endIndex, options);\n    }\n    function showRow(startIndex, endIndex, options = {}) {\n        showRowOrColumn('row', startIndex, endIndex, options);\n    }\n    function hideColumn(startIndex, endIndex, options = {}) {\n        hideRowOrColumn('column', startIndex, endIndex, options);\n    }\n    function showColumn(startIndex, endIndex, options = {}) {\n        showRowOrColumn('column', startIndex, endIndex, options);\n    }\n    function setRowHeight(rowInfo, options = {}) {\n        if (getObjType(rowInfo) != 'object') {\n            return tooltip.info('The rowInfo parameter is invalid.', '');\n        }\n        let {order = getSheetIndex(Store.currentSheetIndex), success} = { ...options };\n        let file = Store.luckysheetfile[order];\n        if (file == null) {\n            return tooltip.info('The order parameter is invalid.', '');\n        }\n        let cfg = $.extend(true, {}, file.config);\n        if (cfg['rowlen'] == null) {\n            cfg['rowlen'] = {};\n        }\n        for (let r in rowInfo) {\n            if (parseInt(r) >= 0) {\n                let len = rowInfo[r];\n                if (Number(len) >= 0) {\n                    cfg['rowlen'][parseInt(r)] = Number(len);\n                }\n            }\n        }\n        file.config = cfg;\n        Store.saveParam('cg', file.index, cfg['rowlen'], { 'k': 'rowlen' });\n        if (file.index == Store.currentSheetIndex) {\n            Store.config = cfg;\n            jfrefreshgrid_rhcw(Store.flowdata.length, Store.flowdata[0].length);\n        }\n        if (success && typeof success === 'function') {\n            success();\n        }\n    }\n    function setColumnWidth(columnInfo, options = {}) {\n        if (getObjType(columnInfo) != 'object') {\n            return tooltip.info('The columnInfo parameter is invalid.', '');\n        }\n        let {order = getSheetIndex(Store.currentSheetIndex), success} = { ...options };\n        let file = Store.luckysheetfile[order];\n        if (file == null) {\n            return tooltip.info('The order parameter is invalid.', '');\n        }\n        let cfg = $.extend(true, {}, file.config);\n        if (cfg['columnlen'] == null) {\n            cfg['columnlen'] = {};\n        }\n        for (let c in columnInfo) {\n            if (parseInt(c) >= 0) {\n                let len = columnInfo[c];\n                if (Number(len) >= 0) {\n                    cfg['columnlen'][parseInt(c)] = Number(len);\n                }\n            }\n        }\n        file.config = cfg;\n        Store.saveParam('cg', file.index, cfg['columnlen'], { 'k': 'columnlen' });\n        if (file.index == Store.currentSheetIndex) {\n            Store.config = cfg;\n            jfrefreshgrid_rhcw(Store.flowdata.length, Store.flowdata[0].length);\n        }\n        if (success && typeof success === 'function') {\n            success();\n        }\n    }\n    function getRowHeight(rowInfo, options = {}) {\n        if (getObjType(rowInfo) != 'array' || rowInfo.length == 0) {\n            return tooltip.info('The rowInfo parameter is invalid.', '');\n        }\n        let {order = getSheetIndex(Store.currentSheetIndex), success} = { ...options };\n        let file = Store.luckysheetfile[order];\n        if (file == null) {\n            return tooltip.info('The order parameter is invalid.', '');\n        }\n        let cfg = $.extend(true, {}, file.config);\n        let rowlen = cfg['rowlen'] || {};\n        let rowlenObj = {};\n        rowInfo.forEach(item => {\n            if (parseInt(item) >= 0) {\n                let size = rowlen[parseInt(item)] || Store.defaultrowlen;\n                rowlenObj[parseInt(item)] = size;\n            }\n        });\n        setTimeout(() => {\n            if (success && typeof success === 'function') {\n                success();\n            }\n        }, 1);\n        return rowlenObj;\n    }\n    function getColumnWidth(columnInfo, options = {}) {\n        if (getObjType(columnInfo) != 'array' || columnInfo.length == 0) {\n            return tooltip.info('The columnInfo parameter is invalid.', '');\n        }\n        let {order = getSheetIndex(Store.currentSheetIndex), success} = { ...options };\n        let file = Store.luckysheetfile[order];\n        if (file == null) {\n            return tooltip.info('The order parameter is invalid.', '');\n        }\n        let cfg = $.extend(true, {}, file.config);\n        let columnlen = cfg['columnlen'] || {};\n        let columnlenObj = {};\n        columnInfo.forEach(item => {\n            if (parseInt(item) >= 0) {\n                let size = columnlen[parseInt(item)] || Store.defaultcollen;\n                columnlenObj[parseInt(item)] = size;\n            }\n        });\n        setTimeout(() => {\n            if (success && typeof success === 'function') {\n                success();\n            }\n        }, 1);\n        return columnlenObj;\n    }\n    function getDefaultRowHeight(options = {}) {\n        let {order = getSheetIndex(Store.currentSheetIndex), success} = { ...options };\n        setTimeout(() => {\n            if (success && typeof success === 'function') {\n                success();\n            }\n        }, 1);\n        return Store.luckysheetfile[order].defaultRowHeight;\n    }\n    function getDefaultColWidth(options = {}) {\n        let {order = getSheetIndex(Store.currentSheetIndex), success} = { ...options };\n        setTimeout(() => {\n            if (success && typeof success === 'function') {\n                success();\n            }\n        }, 1);\n        return Store.luckysheetfile[order].defaultColWidth;\n    }\n    function getRange() {\n        let rangeArr = Store.luckysheet_select_save;\n        let result = [];\n        for (let i = 0; i < rangeArr.length; i++) {\n            let rangeItem = rangeArr[i];\n            let temp = {\n                row: rangeItem.row,\n                column: rangeItem.column\n            };\n            result.push(temp);\n        }\n        return result;\n    }\n    function getRangeWithFlatten(range) {\n        range = range || getRange();\n        let result = [];\n        range.forEach(ele => {\n            // 这个data可能是个范围或者是单个cell\n            let rs = ele.row;\n            let cs = ele.column;\n            for (let r = rs[0]; r <= rs[1]; r++) {\n                for (let c = cs[0]; c <= cs[1]; c++) {\n                    // r c 当前的r和当前的c\n                    result.push({\n                        r,\n                        c\n                    });\n                }\n            }\n        });\n        return result;\n    }\n    function getRangeValuesWithFlatte(range) {\n        range = range || getRangeWithFlatten();\n        let values = [];    // 获取到的这个数据不是最新的数据\n        // 获取到的这个数据不是最新的数据\n        range.forEach(item => {\n            values.push(Store.flowdata[item.r][item.c]);\n        });\n        return values;\n    }\n    function getRangeAxis() {\n        let result = [];\n        let rangeArr = Store.luckysheet_select_save;\n        let sheetIndex = Store.currentSheetIndex;\n        rangeArr.forEach(ele => {\n            let axisText = getRangetxt(sheetIndex, {\n                column: ele.column,\n                row: ele.row\n            });\n            result.push(axisText);\n        });\n        return result;\n    }\n    function getRangeValue(options = {}) {\n        let curOrder = getSheetIndex(Store.currentSheetIndex);\n        let {range, order = curOrder} = { ...options };\n        let file = Store.luckysheetfile[order];\n        if (!range || typeof range === 'object') {\n            return getdatabyselection(range, file.index);\n        } else if (typeof range === 'string') {\n            if (formula.iscelldata(range)) {\n                return getdatabyselection(formula.getcellrange(range), file.index);\n            } else {\n                tooltip.info('The range is invalid, please check range parameter.', '');\n            }\n        }\n    }\n    function getRangeHtml(options = {}) {\n        let {range = Store.luckysheet_select_save, order = getSheetIndex(Store.currentSheetIndex), success} = { ...options };\n        if (getObjType(range) == 'string') {\n            if (!formula.iscelldata(range)) {\n                return tooltip.info('The range parameter is invalid.', '');\n            }\n            let cellrange = formula.getcellrange(range);\n            range = [{\n                    'row': cellrange.row,\n                    'column': cellrange.column\n                }];\n        } else if (getObjType(range) == 'object') {\n            if (range.row == null || range.column == null) {\n                return tooltip.info('The range parameter is invalid.', '');\n            }\n            range = [{\n                    'row': range.row,\n                    'column': range.column\n                }];\n        }\n        if (getObjType(range) != 'array') {\n            return tooltip.info('The range parameter is invalid.', '');\n        }\n        let file = Store.luckysheetfile[order];\n        if (file == null) {\n            return tooltip.info('The order parameter is invalid.', '');\n        }    //复制范围内包含部分合并单元格，提示\n        //复制范围内包含部分合并单元格，提示\n        let cfg = $.extend(true, {}, file.config);\n        if (cfg['merge'] != null) {\n            let has_PartMC = false;\n            for (let s = 0; s < range.length; s++) {\n                let r1 = range[s].row[0], r2 = range[s].row[1];\n                let c1 = range[s].column[0], c2 = range[s].column[1];\n                has_PartMC = hasPartMC(cfg, r1, r2, c1, c2);\n                if (has_PartMC) {\n                    break;\n                }\n            }\n            if (has_PartMC) {\n                return tooltip.info('Cannot perform this operation on partially merged cells', '');\n            }\n        }    //多重选区 有条件格式时 提示\n        //多重选区 有条件格式时 提示\n        let cdformat = $.extend(true, [], file.luckysheet_conditionformat_save);\n        if (range.length > 1 && cdformat.length > 0) {\n            let hasCF = false;\n            let cf_compute = conditionformat.getComputeMap(file.index);\n            for (let s = 0; s < range.length; s++) {\n                let r1 = range[s].row[0], r2 = range[s].row[1];\n                let c1 = range[s].column[0], c2 = range[s].column[1];\n                for (let r = r1; r <= r2; r++) {\n                    for (let c = c1; c <= c2; c++) {\n                        if (conditionformat.checksCF(r, c, cf_compute) != null) {\n                            hasCF = true;\n                            break;\n                        }\n                    }\n                    if (hasCF) {\n                        break;\n                    }\n                }\n                if (hasCF) {\n                    break;\n                }\n            }\n            if (hasCF) {\n                return tooltip.info('Cannot perform this operation on multiple selection areas, please select a single area', '');\n            }\n        }    //多重选区 行不一样且列不一样时 提示\n        //多重选区 行不一样且列不一样时 提示\n        if (range.length > 1) {\n            let isSameRow = true, str_r = range[0].row[0], end_r = range[0].row[1];\n            let isSameCol = true, str_c = range[0].column[0], end_c = range[0].column[1];\n            for (let s = 1; s < range.length; s++) {\n                if (range[s].row[0] != str_r || range[s].row[1] != end_r) {\n                    isSameRow = false;\n                }\n                if (range[s].column[0] != str_c || range[s].column[1] != end_c) {\n                    isSameCol = false;\n                }\n            }\n            if (!isSameRow && !isSameCol || selectIsOverlap(range)) {\n                return tooltip.info('Cannot perform this operation on multiple selection areas, please select a single area', '');\n            }\n        }\n        let rowIndexArr = [], colIndexArr = [];\n        for (let s = 0; s < range.length; s++) {\n            let r1 = range[s].row[0], r2 = range[s].row[1];\n            let c1 = range[s].column[0], c2 = range[s].column[1];\n            for (let r = r1; r <= r2; r++) {\n                if (cfg['rowhidden'] != null && cfg['rowhidden'][r] != null) {\n                    continue;\n                }\n                if (!rowIndexArr.includes(r)) {\n                    rowIndexArr.push(r);\n                }\n                for (let c = c1; c <= c2; c++) {\n                    if (cfg['colhidden'] != null && cfg['colhidden'][c] != null) {\n                        continue;\n                    }\n                    if (!colIndexArr.includes(c)) {\n                        colIndexArr.push(c);\n                    }\n                }\n            }\n        }\n        let borderInfoCompute;\n        if (cfg['borderInfo'] && cfg['borderInfo'].length > 0) {\n            //边框\n            borderInfoCompute = getBorderInfoCompute(file.index);\n        }\n        let d = file.data;\n        if (d == null || d.length == 0) {\n            d = sheetmanage.buildGridData(file);\n        }\n        let cpdata = '';\n        let colgroup = '';\n        rowIndexArr = rowIndexArr.sort();\n        colIndexArr = colIndexArr.sort();\n        for (let i = 0; i < rowIndexArr.length; i++) {\n            let r = rowIndexArr[i];\n            if (cfg['rowhidden'] != null && cfg['rowhidden'][r] != null) {\n                continue;\n            }\n            cpdata += '<tr>';\n            for (let j = 0; j < colIndexArr.length; j++) {\n                let c = colIndexArr[j];\n                if (cfg['colhidden'] != null && cfg['colhidden'][c] != null) {\n                    continue;\n                }\n                let column = '<td ${span} style=\"${style}\">';\n                if (d[r] != null && d[r][c] != null) {\n                    let style = '', span = '';\n                    if (r == rowIndexArr[0]) {\n                        if (cfg['columnlen'] == null || cfg['columnlen'][c.toString()] == null) {\n                            colgroup += '<colgroup width=\"72px\"></colgroup>';\n                        } else {\n                            colgroup += '<colgroup width=\"' + cfg['columnlen'][c.toString()] + 'px\"></colgroup>';\n                        }\n                    }\n                    if (c == colIndexArr[0]) {\n                        if (cfg['rowlen'] == null || cfg['rowlen'][r.toString()] == null) {\n                            style += 'height:19px;';\n                        } else {\n                            style += 'height:' + cfg['rowlen'][r.toString()] + 'px;';\n                        }\n                    }\n                    let reg = /^(w|W)((0?)|(0\\.0+))$/;\n                    let c_value;\n                    if (d[r][c].ct != null && d[r][c].ct.fa != null && d[r][c].ct.fa.match(reg)) {\n                        c_value = getcellvalue(r, c, d);\n                    } else {\n                        c_value = getcellvalue(r, c, d, 'm');\n                    }\n                    style += menuButton.getStyleByCell(d, r, c);\n                    if (getObjType(d[r][c]) == 'object' && 'mc' in d[r][c]) {\n                        if ('rs' in d[r][c]['mc']) {\n                            span = 'rowspan=\"' + d[r][c]['mc'].rs + '\" colspan=\"' + d[r][c]['mc'].cs + '\"';    //边框\n                            //边框\n                            if (borderInfoCompute && borderInfoCompute[r + '_' + c]) {\n                                let bl_obj = {\n                                        'color': {},\n                                        'style': {}\n                                    }, br_obj = {\n                                        'color': {},\n                                        'style': {}\n                                    }, bt_obj = {\n                                        'color': {},\n                                        'style': {}\n                                    }, bb_obj = {\n                                        'color': {},\n                                        'style': {}\n                                    };\n                                for (let bd_r = r; bd_r < r + d[r][c]['mc'].rs; bd_r++) {\n                                    for (let bd_c = c; bd_c < c + d[r][c]['mc'].cs; bd_c++) {\n                                        if (bd_r == r && borderInfoCompute[bd_r + '_' + bd_c] && borderInfoCompute[bd_r + '_' + bd_c].t) {\n                                            let linetype = borderInfoCompute[bd_r + '_' + bd_c].t.style;\n                                            let bcolor = borderInfoCompute[bd_r + '_' + bd_c].t.color;\n                                            if (bt_obj['style'][linetype] == null) {\n                                                bt_obj['style'][linetype] = 1;\n                                            } else {\n                                                bt_obj['style'][linetype] = bt_obj['style'][linetype] + 1;\n                                            }\n                                            if (bt_obj['color'][bcolor] == null) {\n                                                bt_obj['color'][bcolor] = 1;\n                                            } else {\n                                                bt_obj['color'][bcolor] = bt_obj['color'][bcolor] + 1;\n                                            }\n                                        }\n                                        if (bd_r == r + d[r][c]['mc'].rs - 1 && borderInfoCompute[bd_r + '_' + bd_c] && borderInfoCompute[bd_r + '_' + bd_c].b) {\n                                            let linetype = borderInfoCompute[bd_r + '_' + bd_c].b.style;\n                                            let bcolor = borderInfoCompute[bd_r + '_' + bd_c].b.color;\n                                            if (bb_obj['style'][linetype] == null) {\n                                                bb_obj['style'][linetype] = 1;\n                                            } else {\n                                                bb_obj['style'][linetype] = bb_obj['style'][linetype] + 1;\n                                            }\n                                            if (bb_obj['color'][bcolor] == null) {\n                                                bb_obj['color'][bcolor] = 1;\n                                            } else {\n                                                bb_obj['color'][bcolor] = bb_obj['color'][bcolor] + 1;\n                                            }\n                                        }\n                                        if (bd_c == c && borderInfoCompute[bd_r + '_' + bd_c] && borderInfoCompute[bd_r + '_' + bd_c].l) {\n                                            let linetype = borderInfoCompute[r + '_' + c].l.style;\n                                            let bcolor = borderInfoCompute[bd_r + '_' + bd_c].l.color;\n                                            if (bl_obj['style'][linetype] == null) {\n                                                bl_obj['style'][linetype] = 1;\n                                            } else {\n                                                bl_obj['style'][linetype] = bl_obj['style'][linetype] + 1;\n                                            }\n                                            if (bl_obj['color'][bcolor] == null) {\n                                                bl_obj['color'][bcolor] = 1;\n                                            } else {\n                                                bl_obj['color'][bcolor] = bl_obj['color'][bcolor] + 1;\n                                            }\n                                        }\n                                        if (bd_c == c + d[r][c]['mc'].cs - 1 && borderInfoCompute[bd_r + '_' + bd_c] && borderInfoCompute[bd_r + '_' + bd_c].r) {\n                                            let linetype = borderInfoCompute[bd_r + '_' + bd_c].r.style;\n                                            let bcolor = borderInfoCompute[bd_r + '_' + bd_c].r.color;\n                                            if (br_obj['style'][linetype] == null) {\n                                                br_obj['style'][linetype] = 1;\n                                            } else {\n                                                br_obj['style'][linetype] = br_obj['style'][linetype] + 1;\n                                            }\n                                            if (br_obj['color'][bcolor] == null) {\n                                                br_obj['color'][bcolor] = 1;\n                                            } else {\n                                                br_obj['color'][bcolor] = br_obj['color'][bcolor] + 1;\n                                            }\n                                        }\n                                    }\n                                }\n                                let rowlen = d[r][c]['mc'].rs, collen = d[r][c]['mc'].cs;\n                                if (JSON.stringify(bl_obj).length > 23) {\n                                    let bl_color = null, bl_style = null;\n                                    for (let x in bl_obj.color) {\n                                        if (bl_obj.color[x] >= rowlen / 2) {\n                                            bl_color = x;\n                                        }\n                                    }\n                                    for (let x in bl_obj.style) {\n                                        if (bl_obj.style[x] >= rowlen / 2) {\n                                            bl_style = x;\n                                        }\n                                    }\n                                    if (bl_color != null && bl_style != null) {\n                                        style += 'border-left:' + selection.getHtmlBorderStyle(bl_style, bl_color);\n                                    }\n                                }\n                                if (JSON.stringify(br_obj).length > 23) {\n                                    let br_color = null, br_style = null;\n                                    for (let x in br_obj.color) {\n                                        if (br_obj.color[x] >= rowlen / 2) {\n                                            br_color = x;\n                                        }\n                                    }\n                                    for (let x in br_obj.style) {\n                                        if (br_obj.style[x] >= rowlen / 2) {\n                                            br_style = x;\n                                        }\n                                    }\n                                    if (br_color != null && br_style != null) {\n                                        style += 'border-right:' + selection.getHtmlBorderStyle(br_style, br_color);\n                                    }\n                                }\n                                if (JSON.stringify(bt_obj).length > 23) {\n                                    let bt_color = null, bt_style = null;\n                                    for (let x in bt_obj.color) {\n                                        if (bt_obj.color[x] >= collen / 2) {\n                                            bt_color = x;\n                                        }\n                                    }\n                                    for (let x in bt_obj.style) {\n                                        if (bt_obj.style[x] >= collen / 2) {\n                                            bt_style = x;\n                                        }\n                                    }\n                                    if (bt_color != null && bt_style != null) {\n                                        style += 'border-top:' + selection.getHtmlBorderStyle(bt_style, bt_color);\n                                    }\n                                }\n                                if (JSON.stringify(bb_obj).length > 23) {\n                                    let bb_color = null, bb_style = null;\n                                    for (let x in bb_obj.color) {\n                                        if (bb_obj.color[x] >= collen / 2) {\n                                            bb_color = x;\n                                        }\n                                    }\n                                    for (let x in bb_obj.style) {\n                                        if (bb_obj.style[x] >= collen / 2) {\n                                            bb_style = x;\n                                        }\n                                    }\n                                    if (bb_color != null && bb_style != null) {\n                                        style += 'border-bottom:' + selection.getHtmlBorderStyle(bb_style, bb_color);\n                                    }\n                                }\n                            }\n                        } else {\n                            continue;\n                        }\n                    } else {\n                        //边框\n                        if (borderInfoCompute && borderInfoCompute[r + '_' + c]) {\n                            //左边框\n                            if (borderInfoCompute[r + '_' + c].l) {\n                                let linetype = borderInfoCompute[r + '_' + c].l.style;\n                                let bcolor = borderInfoCompute[r + '_' + c].l.color;\n                                style += 'border-left:' + selection.getHtmlBorderStyle(linetype, bcolor);\n                            }    //右边框\n                            //右边框\n                            if (borderInfoCompute[r + '_' + c].r) {\n                                let linetype = borderInfoCompute[r + '_' + c].r.style;\n                                let bcolor = borderInfoCompute[r + '_' + c].r.color;\n                                style += 'border-right:' + selection.getHtmlBorderStyle(linetype, bcolor);\n                            }    //下边框\n                            //下边框\n                            if (borderInfoCompute[r + '_' + c].b) {\n                                let linetype = borderInfoCompute[r + '_' + c].b.style;\n                                let bcolor = borderInfoCompute[r + '_' + c].b.color;\n                                style += 'border-bottom:' + selection.getHtmlBorderStyle(linetype, bcolor);\n                            }    //上边框\n                            //上边框\n                            if (borderInfoCompute[r + '_' + c].t) {\n                                let linetype = borderInfoCompute[r + '_' + c].t.style;\n                                let bcolor = borderInfoCompute[r + '_' + c].t.color;\n                                style += 'border-top:' + selection.getHtmlBorderStyle(linetype, bcolor);\n                            }\n                        }\n                    }\n                    column = replaceHtml(column, {\n                        'style': style,\n                        'span': span\n                    });\n                    if (c_value == null) {\n                        c_value = getcellvalue(r, c, d);\n                    }\n                    if (c_value == null) {\n                        c_value = ' ';\n                    }\n                    column += c_value;\n                } else {\n                    let style = '';    //边框\n                    //边框\n                    if (borderInfoCompute && borderInfoCompute[r + '_' + c]) {\n                        //左边框\n                        if (borderInfoCompute[r + '_' + c].l) {\n                            let linetype = borderInfoCompute[r + '_' + c].l.style;\n                            let bcolor = borderInfoCompute[r + '_' + c].l.color;\n                            style += 'border-left:' + selection.getHtmlBorderStyle(linetype, bcolor);\n                        }    //右边框\n                        //右边框\n                        if (borderInfoCompute[r + '_' + c].r) {\n                            let linetype = borderInfoCompute[r + '_' + c].r.style;\n                            let bcolor = borderInfoCompute[r + '_' + c].r.color;\n                            style += 'border-right:' + selection.getHtmlBorderStyle(linetype, bcolor);\n                        }    //下边框\n                        //下边框\n                        if (borderInfoCompute[r + '_' + c].b) {\n                            let linetype = borderInfoCompute[r + '_' + c].b.style;\n                            let bcolor = borderInfoCompute[r + '_' + c].b.color;\n                            style += 'border-bottom:' + selection.getHtmlBorderStyle(linetype, bcolor);\n                        }    //上边框\n                        //上边框\n                        if (borderInfoCompute[r + '_' + c].t) {\n                            let linetype = borderInfoCompute[r + '_' + c].t.style;\n                            let bcolor = borderInfoCompute[r + '_' + c].t.color;\n                            style += 'border-top:' + selection.getHtmlBorderStyle(linetype, bcolor);\n                        }\n                    }\n                    column += '';\n                    if (r == rowIndexArr[0]) {\n                        if (cfg['columnlen'] == null || cfg['columnlen'][c.toString()] == null) {\n                            colgroup += '<colgroup width=\"72px\"></colgroup>';\n                        } else {\n                            colgroup += '<colgroup width=\"' + cfg['columnlen'][c.toString()] + 'px\"></colgroup>';\n                        }\n                    }\n                    if (c == colIndexArr[0]) {\n                        if (cfg['rowlen'] == null || cfg['rowlen'][r.toString()] == null) {\n                            style += 'height:19px;';\n                        } else {\n                            style += 'height:' + cfg['rowlen'][r.toString()] + 'px;';\n                        }\n                    }\n                    column = replaceHtml(column, {\n                        'style': style,\n                        'span': ''\n                    });\n                    column += ' ';\n                }\n                column += '</td>';\n                cpdata += column;\n            }\n            cpdata += '</tr>';\n        }\n        cpdata = '<table data-type=\"luckysheet_copy_action_table\">' + colgroup + cpdata + '</table>';\n        return cpdata;\n    }\n    function getRangeArray(dimensional, options = {}) {\n        let dimensionalValues = [\n            'oneDimensional',\n            'twoDimensional'\n        ];\n        if (!dimensionalValues.includes(dimensional)) {\n            return tooltip.info('The dimensional parameter is invalid.', '');\n        }\n        let {range = Store.luckysheet_select_save[Store.luckysheet_select_save.length - 1], order = getSheetIndex(Store.currentSheetIndex)} = { ...options };\n        let file = Store.luckysheetfile[order];\n        if (file == null) {\n            return tooltip.info('The order parameter is invalid.', '');\n        }\n        if (getObjType(range) == 'string') {\n            if (!formula.iscelldata(range)) {\n                return tooltip.info('The range parameter is invalid.', '');\n            }\n            range = formula.getcellrange(range);\n        }\n        if (getObjType(range) != 'object' || range.row == null || range.column == null) {\n            return tooltip.info('The range parameter is invalid.', '');\n        }\n        let r1 = range.row[0], r2 = range.row[1];\n        let c1 = range.column[0], c2 = range.column[1];    //复制范围内包含部分合并单元格，提示\n        //复制范围内包含部分合并单元格，提示\n        let cfg = $.extend(true, {}, file.config);\n        if (cfg['merge'] != null) {\n            let has_PartMC = hasPartMC(cfg, r1, r2, c1, c2);\n            if (has_PartMC) {\n                return tooltip.info('Cannot perform this operation on partially merged cells', '');\n            }\n        }\n        let data = file.data;\n        if (data == null || data.length == 0) {\n            data = sheetmanage.buildGridData(file);\n        }\n        let dataArr = [];\n        if (dimensional == 'oneDimensional') {\n            //一维数组\n            for (let r = r1; r <= r2; r++) {\n                for (let c = c1; c <= c2; c++) {\n                    let cell = data[r][c];\n                    if (cell == null || cell.v == null) {\n                        dataArr.push(null);\n                    } else {\n                        dataArr.push(cell.v);\n                    }\n                }\n            }\n        } else if (dimensional == 'twoDimensional') {\n            for (let r = r1; r <= r2; r++) {\n                let row = [];\n                for (let c = c1; c <= c2; c++) {\n                    let cell = data[r][c];\n                    if (cell == null || cell.v == null) {\n                        row.push(null);\n                    } else {\n                        row.push(cell.v);\n                    }\n                }\n                dataArr.push(row);\n            }\n        }\n        return dataArr;\n    }\n    function getRangeJson(isFirstRowTitle, options = {}) {\n        let curRange = Store.luckysheet_select_save[0];\n        let curSheetOrder = getSheetIndex(Store.currentSheetIndex);\n        let {range = curRange, order = curSheetOrder} = { ...options };\n        let file = Store.luckysheetfile[order];\n        let config = file.config;\n        if (range && typeof range === 'string' && formula.iscelldata(range)) {\n            range = formula.getcellrange(range);\n        }\n        if (!range || range.length > 1) {\n            if (isEditMode()) {\n                alert(locale_drag.noMulti);\n            } else {\n                tooltip.info(locale_drag.noMulti, '');\n            }\n            return;\n        }    //复制范围内包含部分合并单元格，提示\n        //复制范围内包含部分合并单元格，提示\n        if (config['merge'] != null) {\n            let has_PartMC = false;\n            let r1 = range.row[0], r2 = range.row[1], c1 = range.column[0], c2 = range.column[1];\n            has_PartMC = hasPartMC(config, r1, r2, c1, c2);\n            if (has_PartMC) {\n                if (isEditMode()) {\n                    alert(locale().drag.noPartMerge);\n                } else {\n                    tooltip.info(locale().drag.noPartMerge, '');\n                }\n                return;\n            }\n        }\n        let getdata = getdatabyselection(range, file.index);\n        let arr = [];\n        if (getdata.length === 0) {\n            return;\n        }\n        if (isFirstRowTitle) {\n            if (getdata.length === 1) {\n                let obj = {};\n                for (let i = 0; i < getdata[0].length; i++) {\n                    obj[getcellvalue(0, i, getdata)] = '';\n                }\n                arr.push(obj);\n            } else {\n                for (let r = 1; r < getdata.length; r++) {\n                    let obj = {};\n                    for (let c = 0; c < getdata[0].length; c++) {\n                        if (getcellvalue(0, c, getdata) == undefined) {\n                            obj[''] = getcellvalue(r, c, getdata);\n                        } else {\n                            obj[getcellvalue(0, c, getdata)] = getcellvalue(r, c, getdata);\n                        }\n                    }\n                    arr.push(obj);\n                }\n            }\n        } else {\n            let st = range['column'][0];\n            for (let r = 0; r < getdata.length; r++) {\n                let obj = {};\n                for (let c = 0; c < getdata[0].length; c++) {\n                    obj[chatatABC(c + st)] = getcellvalue(r, c, getdata);\n                }\n                arr.push(obj);\n            }\n        }    // selection.copybyformat(new Event('click'), JSON.stringify(arr));\n        // selection.copybyformat(new Event('click'), JSON.stringify(arr));\n        return arr;\n    }\n    function getRangeDiagonal(type, options = {}) {\n        let typeValues = [\n            'normal',\n            'anti',\n            'offset'\n        ];\n        if (typeValues.indexOf(type) < 0) {\n            return tooltip.info(\"The type parameter must be included in ['normal', 'anti', 'offset']\", '');\n        }\n        let curSheetOrder = getSheetIndex(Store.currentSheetIndex);\n        let curRange = Store.luckysheet_select_save;\n        let {column = 1, range = curRange, order = curSheetOrder} = { ...options };\n        let file = Store.luckysheetfile[order];\n        let config = file.config;\n        if (range && typeof range === 'string' && formula.iscelldata(range)) {\n            range = formula.getcellrange(range);\n        }\n        if (!range || range.length > 1) {\n            if (isEditMode()) {\n                alert(locale().drag.noMulti);\n            } else {\n                tooltip.info(locale().drag.noMulti, '');\n            }\n            return;\n        }    //复制范围内包含部分合并单元格，提示\n        //复制范围内包含部分合并单元格，提示\n        if (config['merge'] != null) {\n            let has_PartMC = false;\n            let r1 = range[0].row[0], r2 = range[0].row[1], c1 = range[0].column[0], c2 = range[0].column[1];\n            has_PartMC = hasPartMC(config, r1, r2, c1, c2);\n            if (has_PartMC) {\n                if (isEditMode()) {\n                    alert(locale().drag.noPartMerge);\n                } else {\n                    tooltip.info(locale().drag.noPartMerge, '');\n                }\n                return;\n            }\n        }\n        let getdata = getdatabyselection(range, order);\n        let arr = [];\n        if (getdata.length === 0) {\n            return;\n        }\n        let clen = getdata[0].length;\n        switch (type) {\n        case 'normal':\n            for (let r = 0; r < getdata.length; r++) {\n                if (r >= clen) {\n                    break;\n                }\n                arr.push(getdata[r][r]);\n            }\n            break;\n        case 'anti':\n            for (let r = 0; r < getdata.length; r++) {\n                if (r >= clen) {\n                    break;\n                }\n                arr.push(getdata[r][clen - r - 1]);\n            }\n            break;\n        case 'offset':\n            if (column.toString() == 'NaN') {\n                if (isEditMode()) {\n                    alert(locale().drag.inputCorrect);\n                } else {\n                    tooltip.info(locale().drag.inputCorrect, '');\n                }\n                return;\n            }\n            if (column < 0) {\n                if (isEditMode()) {\n                    alert(locale().drag.offsetColumnLessZero);\n                } else {\n                    tooltip.info(locale().drag.offsetColumnLessZero, '');\n                }\n                return;\n            }\n            for (let r = 0; r < getdata.length; r++) {\n                if (r + column >= clen) {\n                    break;\n                }\n                arr.push(getdata[r][r + column]);\n            }\n            break;\n        }\n        selection.copybyformat(new Event(), JSON.stringify(arr));\n    }\n    function getRangeBoolean(options = {}) {\n        let curSheetOrder = getSheetIndex(Store.currentSheetIndex);\n        let curRange = Store.luckysheet_select_save;\n        let {range = curRange, order = curSheetOrder} = { ...options };\n        let file = Store.luckysheetfile[order];\n        let config = file.config;\n        if (range && typeof range === 'string' && formula.iscelldata(range)) {\n            range = formula.getcellrange(range);\n        }\n        if (!range || range.length > 1) {\n            if (isEditMode()) {\n                alert(locale().drag.noMulti);\n            } else {\n                tooltip.info(locale().drag.noMulti, '');\n            }\n            return;\n        }    //复制范围内包含部分合并单元格，提示\n        //复制范围内包含部分合并单元格，提示\n        if (config['merge'] != null) {\n            let has_PartMC = false;\n            let r1 = range[0].row[0], r2 = range[0].row[1], c1 = range[0].column[0], c2 = range[0].column[1];\n            has_PartMC = hasPartMC(config, r1, r2, c1, c2);\n            if (has_PartMC) {\n                if (isEditMode()) {\n                    alert(locale().drag.noPartMerge);\n                } else {\n                    tooltip.info(locale().drag.noPartMerge, '');\n                }\n                return;\n            }\n        }\n        let getdata = getdatabyselection(range, order);\n        let arr = [];\n        if (getdata.length === 0) {\n            return;\n        }\n        for (let r = 0; r < getdata.length; r++) {\n            let a = [];\n            for (let c = 0; c < getdata[0].length; c++) {\n                let bool = false;\n                let v;\n                if (getObjType(getdata[r][c]) == 'object') {\n                    v = getdata[r][c].v;\n                } else {\n                    v = getdata[r][c];\n                }\n                if (v == null || v == '') {\n                    bool = false;\n                } else {\n                    v = parseInt(v);\n                    if (v == null || v > 0) {\n                        bool = true;\n                    } else {\n                        bool = false;\n                    }\n                }\n                a.push(bool);\n            }\n            arr.push(a);\n        }\n        selection.copybyformat(event, JSON.stringify(arr));\n    }\n    function setRangeShow(range, options = {}) {\n        if (getObjType(range) == 'string') {\n            if (!formula.iscelldata(range)) {\n                return tooltip.info('The range parameter is invalid.', '');\n            }\n            let cellrange = formula.getcellrange(range);\n            range = [{\n                    'row': cellrange.row,\n                    'column': cellrange.column\n                }];\n        } else if (getObjType(range) == 'object') {\n            if (range.row == null || range.column == null) {\n                return tooltip.info('The range parameter is invalid.', '');\n            }\n            range = [{\n                    'row': range.row,\n                    'column': range.column\n                }];\n        }\n        if (getObjType(range) == 'array') {\n            for (let i = 0; i < range.length; i++) {\n                if (getObjType(range[i]) === 'string') {\n                    if (!formula.iscelldata(range[i])) {\n                        return tooltip.info('The range parameter is invalid.', '');\n                    }\n                    let cellrange = formula.getcellrange(range[i]);\n                    range[i] = {\n                        'row': cellrange.row,\n                        'column': cellrange.column\n                    };\n                } else if (getObjType(range) == 'object') {\n                    if (range.row == null || range.column == null) {\n                        return tooltip.info('The range parameter is invalid.', '');\n                    }\n                    range = {\n                        'row': range.row,\n                        'column': range.column\n                    };\n                }\n            }\n        }\n        if (getObjType(range) != 'array') {\n            return tooltip.info('The range parameter is invalid.', '');\n        }\n        let {show = true, order = getSheetIndex(Store.currentSheetIndex), success} = { ...options };\n        let file = Store.luckysheetfile[order];\n        if (file == null) {\n            return tooltip.info('The order parameter is invalid.', '');\n        }\n        for (let i = 0; i < range.length; i++) {\n            let changeparam = cells.mergeMoveMain(range[i].column, range[i].row, range[i]);\n            if (changeparam) {\n                range[i] = {\n                    'row': changeparam[1],\n                    'column': changeparam[0]\n                };\n            }\n        }\n        file.luckysheet_select_save = range;\n        if (file.index == Store.currentSheetIndex) {\n            Store.luckysheet_select_save = range;\n            selectHightlightShow();\n            if (!show) {\n                $('#luckysheet-cell-selected-boxs').hide();\n                $('#luckysheet-cell-selected-focus').hide();\n                $('#luckysheet-row-count-show').hide();\n                $('#luckysheet-column-count-show').hide();\n                $('#luckysheet-rows-h-selected').empty();\n                $('#luckysheet-cols-h-selected').empty();\n            }\n        }\n        if (success && typeof success === 'function') {\n            success();\n        }\n    }\n    function setRangeValue(data, options = {}) {\n        let curSheetOrder = getSheetIndex(Store.currentSheetIndex);\n        let curRange = Store.luckysheet_select_save[Store.luckysheet_select_save.length - 1];\n        let {range = curRange, isRefresh = true, order = curSheetOrder, success} = { ...options };\n        if (data == null) {\n            return tooltip.info('The data which will be set to range cannot be null.', '');\n        }\n        if (range instanceof Array) {\n            return tooltip.info('setRangeValue only supports a single selection.', '');\n        }\n        if (typeof range === 'string' && formula.iscelldata(range)) {\n            range = formula.getcellrange(range);\n        }\n        let rowCount = range.row[1] - range.row[0] + 1, columnCount = range.column[1] - range.column[0] + 1;\n        if (data.length !== rowCount || data[0].length !== columnCount) {\n            return tooltip.info('The data to be set does not match the selection.', '');\n        }\n        let file = Store.luckysheetfile[order];\n        if (file == null) {\n            return tooltip.info('The order parameter is invalid.', '');\n        }\n        let sheetData = $.extend(true, [], file.data);\n        for (let i = 0; i < rowCount; i++) {\n            for (let j = 0; j < columnCount; j++) {\n                let row = range.row[0] + i, column = range.column[0] + j;\n                setCellValue(row, column, data[i][j], {\n                    order: order,\n                    isRefresh: false\n                });\n            }\n        }\n        let fileData = $.extend(true, [], file.data);\n        file.data.length = 0;\n        file.data.push(...sheetData);\n        if (file.index == Store.currentSheetIndex) {\n            Store.refreshRange(fileData, [{\n                    row: range.row,\n                    column: range.column\n                }], undefined, true, false);\n        }\n        if (isRefresh) {\n            luckysheetrefreshgrid();\n        }\n        if (success && typeof success === 'function') {\n            success();\n        }\n    }\n    function setSingleRangeFormat(attr, value, options = {}) {\n        let curSheetOrder = getSheetIndex(Store.currentSheetIndex);\n        let curRange = Store.luckysheet_select_save[Store.luckysheet_select_save.length - 1];\n        let {range = curRange, order = curSheetOrder} = { ...options };\n        if (!attr) {\n            tooltip.info('Arguments attr cannot be null or undefined.', '');\n            return 'error';\n        }\n        if (range instanceof Array) {\n            tooltip.info('setRangeValue only supports a single selection.', '');\n            return 'error';\n        }\n        if (getObjType(range) == 'string') {\n            if (!formula.iscelldata(range)) {\n                tooltip.info('The range parameter is invalid.', '');\n                return 'error';\n            }\n            range = formula.getcellrange(range);\n        }\n        if (getObjType(range) != 'object' || range.row == null || range.column == null) {\n            tooltip.info('The range parameter is invalid.', '');\n            return 'error';\n        }\n        for (let r = range.row[0]; r <= range.row[1]; r++) {\n            for (let c = range.column[0]; c <= range.column[1]; c++) {\n                console.log('r', r);\n                console.log('c', c);\n                setCellValue(r, c, { [attr]: value }, {\n                    order: order,\n                    isRefresh: false\n                });\n            }\n        }\n    }\n    function setRangeFormat(attr, value, options = {}) {\n        let curSheetOrder = getSheetIndex(Store.currentSheetIndex);\n        let curRange = Store.luckysheet_select_save;\n        let {range = curRange, order = curSheetOrder, success} = { ...options };\n        if (getObjType(range) == 'string') {\n            if (!formula.iscelldata(range)) {\n                return tooltip.info('The range parameter is invalid.', '');\n            }\n            let cellrange = formula.getcellrange(range);\n            range = [{\n                    'row': cellrange.row,\n                    'column': cellrange.column\n                }];\n        } else if (getObjType(range) == 'object') {\n            if (range.row == null || range.column == null) {\n                return tooltip.info('The range parameter is invalid.', '');\n            }\n            range = [{\n                    'row': range.row,\n                    'column': range.column\n                }];\n        }\n        if (getObjType(range) != 'array') {\n            return tooltip.info('The range parameter is invalid.', '');\n        }\n        let file = Store.luckysheetfile[order];\n        if (file == null) {\n            return tooltip.info('The order parameter is invalid.', '');\n        }\n        let sheetData = $.extend(true, [], file.data);\n        let result = [];\n        for (let i = 0; i < range.length; i++) {\n            result.push(setSingleRangeFormat(attr, value, {\n                range: range[i],\n                order: order\n            }));\n        }\n        if (result.some(i => i === 'error')) {\n            file.data.length = 0;\n            file.data.push(...sheetData);\n            return false;\n        }\n        let fileData = $.extend(true, [], file.data);\n        file.data.length = 0;\n        file.data.push(...sheetData);\n        if (file.index == Store.currentSheetIndex) {\n            Store.refreshRange(fileData, undefined, undefined, true, false);\n        }\n        luckysheetrefreshgrid();\n        if (success && typeof success === 'function') {\n            success();\n        }\n    }\n    function setRangeFilter(type, options = {}) {\n        let typeValues = [\n            'open',\n            'close'\n        ];\n        if (!typeValues.includes(type)) {\n            return tooltip.info('The type parameter is invalid.', '');\n        }\n        let {range = Store.luckysheet_select_save[Store.luckysheet_select_save.length - 1], order = getSheetIndex(Store.currentSheetIndex), success} = { ...options };\n        let file = Store.luckysheetfile[order];\n        if (file == null) {\n            return tooltip.info('The order parameter is invalid.', '');\n        }\n        if (getObjType(range) == 'string') {\n            if (!formula.iscelldata(range)) {\n                return tooltip.info('The range parameter is invalid.', '');\n            }\n            range = formula.getcellrange(range);\n        }\n        if (getObjType(range) != 'object' || range.row == null || range.column == null) {\n            return tooltip.info('The range parameter is invalid.', '');\n        }\n        setTimeout(() => {\n            if (success && typeof success === 'function') {\n                success();\n            }\n        }, 1);\n        if (type == 'open') {\n            file.filter_select = range;\n            if (file.index == Store.currentSheetIndex) {\n                createFilterOptions(range, file.filter);\n            }\n            return {\n                'row': range.row,\n                'column': range.column\n            };\n        } else if (type == 'close') {\n            let luckysheet_filter_save = $.extend(true, {}, file.filter_select);\n            file.filter_select = null;\n            $('#luckysheet-filter-selected-sheet' + file.index).remove();\n            $('#luckysheet-filter-options-sheet' + file.index).remove();\n            return {\n                'row': luckysheet_filter_save.row,\n                'column': luckysheet_filter_save.column\n            };\n        }\n    }\n    function setRangeMerge(type, options = {}) {\n        let typeValues = [\n            'all',\n            'horizontal',\n            'vertical'\n        ];\n        if (typeValues.indexOf(type) < 0) {\n            return tooltip.info(\"The type parameter must be included in ['all', 'horizontal', 'vertical']\", '');\n        }\n        let curSheetOrder = getSheetIndex(Store.currentSheetIndex), curRange = Store.luckysheet_select_save;\n        let {range = curRange, order = curSheetOrder, success} = { ...options };\n        let file = Store.luckysheetfile[order], cfg = $.extend(true, {}, file.config), data = $.extend(true, [], file.data);\n        if (data.length == 0) {\n            data = $.extend(true, [], sheetmanage.buildGridData(file));\n        }\n        if (getObjType(range) == 'string') {\n            if (!formula.iscelldata(range)) {\n                return tooltip.info('Incorrect selection format', '');\n            }\n            let cellrange = formula.getcellrange(range);\n            range = [{\n                    'row': cellrange.row,\n                    'column': cellrange.column\n                }];\n        } else if (getObjType(range) == 'object') {\n            if (!range.hasOwnProperty('row') || !range.hasOwnProperty('column')) {\n                return tooltip.info('Incorrect selection format', '');\n            }\n            range = [{\n                    'row': range.row,\n                    'column': range.column\n                }];\n        }    //不能合并重叠区域\n        //不能合并重叠区域\n        if (selectIsOverlap(range)) {\n            return tooltip.info('Cannot merge overlapping range', '');\n        }    //选区是否含有 部分合并单元格\n        //选区是否含有 部分合并单元格\n        if (cfg['merge'] != null) {\n            let has_PartMC = false;\n            for (let s = 0; s < range.length; s++) {\n                let r1 = range[s].row[0], r2 = range[s].row[1];\n                let c1 = range[s].column[0], c2 = range[s].column[1];\n                has_PartMC = hasPartMC(cfg, r1, r2, c1, c2);\n                if (has_PartMC) {\n                    break;\n                }\n            }\n            if (has_PartMC) {\n                return tooltip.info('Cannot perform this operation on partially merged cells', '');\n            }\n        }    //选区是否含有 合并的单元格\n        //选区是否含有 合并的单元格\n        let isHasMc = false;\n        for (let i = 0; i < range.length; i++) {\n            let r1 = range[i].row[0], r2 = range[i].row[1];\n            let c1 = range[i].column[0], c2 = range[i].column[1];\n            for (let r = r1; r <= r2; r++) {\n                for (let c = c1; c <= c2; c++) {\n                    let cell = data[r][c];\n                    if (getObjType(cell) == 'object' && 'mc' in cell) {\n                        isHasMc = true;\n                        break;\n                    }\n                }\n                if (isHasMc) {\n                    break;\n                }\n            }\n        }\n        if (isHasMc) {\n            //选区有合并单元格（选区都执行 取消合并）\n            cancelRangeMerge({\n                range: range,\n                order: order\n            });\n        } else {\n            for (let i = 0; i < range.length; i++) {\n                let r1 = range[i].row[0], r2 = range[i].row[1];\n                let c1 = range[i].column[0], c2 = range[i].column[1];\n                if (r1 == r2 && c1 == c2) {\n                    continue;\n                }\n                if (type == 'all') {\n                    let fv = {}, isfirst = false;\n                    for (let r = r1; r <= r2; r++) {\n                        for (let c = c1; c <= c2; c++) {\n                            let cell = data[r][c];\n                            if (cell != null && (!isRealNull(cell.v) || cell.f != null) && !isfirst) {\n                                fv = $.extend(true, {}, cell);\n                                isfirst = true;\n                            }\n                            data[r][c] = {\n                                'mc': {\n                                    'r': r1,\n                                    'c': c1\n                                }\n                            };\n                        }\n                    }\n                    data[r1][c1] = fv;\n                    data[r1][c1].mc = {\n                        'r': r1,\n                        'c': c1,\n                        'rs': r2 - r1 + 1,\n                        'cs': c2 - c1 + 1\n                    };\n                    cfg['merge'][r1 + '_' + c1] = {\n                        'r': r1,\n                        'c': c1,\n                        'rs': r2 - r1 + 1,\n                        'cs': c2 - c1 + 1\n                    };\n                } else if (type == 'vertical') {\n                    for (let c = c1; c <= c2; c++) {\n                        let fv = {}, isfirst = false;\n                        for (let r = r1; r <= r2; r++) {\n                            let cell = data[r][c];\n                            if (cell != null && (!isRealNull(cell.v) || cell.f != null) && !isfirst) {\n                                fv = $.extend(true, {}, cell);\n                                isfirst = true;\n                            }\n                            data[r][c] = {\n                                'mc': {\n                                    'r': r1,\n                                    'c': c\n                                }\n                            };\n                        }\n                        data[r1][c] = fv;\n                        data[r1][c].mc = {\n                            'r': r1,\n                            'c': c,\n                            'rs': r2 - r1 + 1,\n                            'cs': 1\n                        };\n                        cfg['merge'][r1 + '_' + c] = {\n                            'r': r1,\n                            'c': c,\n                            'rs': r2 - r1 + 1,\n                            'cs': 1\n                        };\n                    }\n                } else if (type == 'horizontal') {\n                    for (let r = r1; r <= r2; r++) {\n                        let fv = {}, isfirst = false;\n                        for (let c = c1; c <= c2; c++) {\n                            let cell = data[r][c];\n                            if (cell != null && (!isRealNull(cell.v) || cell.f != null) && !isfirst) {\n                                fv = $.extend(true, {}, cell);\n                                isfirst = true;\n                            }\n                            data[r][c] = {\n                                'mc': {\n                                    'r': r,\n                                    'c': c1\n                                }\n                            };\n                        }\n                        data[r][c1] = fv;\n                        data[r][c1].mc = {\n                            'r': r,\n                            'c': c1,\n                            'rs': 1,\n                            'cs': c2 - c1 + 1\n                        };\n                        cfg['merge'][r + '_' + c1] = {\n                            'r': r,\n                            'c': c1,\n                            'rs': 1,\n                            'cs': c2 - c1 + 1\n                        };\n                    }\n                }\n            }\n            if (order == curSheetOrder) {\n                if (Store.clearjfundo) {\n                    Store.jfundo.length = 0;\n                    Store.jfredo.push({\n                        'type': 'mergeChange',\n                        'sheetIndex': file.index,\n                        'data': $.extend(true, [], file.data),\n                        'curData': data,\n                        'range': range,\n                        'config': $.extend(true, {}, file.config),\n                        'curConfig': cfg\n                    });\n                }\n                Store.clearjfundo = false;\n                Store.refreshRange(data, range, { 'cfg': cfg });\n                Store.clearjfundo = true;\n            } else {\n                file.data = data;\n                file.config = cfg;\n            }\n        }\n        if (success && typeof success === 'function') {\n            success();\n        }\n    }\n    function cancelRangeMerge(options = {}) {\n        let curRange = Store.luckysheet_select_save, curSheetOrder = getSheetIndex(Store.currentSheetIndex);\n        let {range = curRange, order = curSheetOrder, success} = { ...options };\n        let file = Store.luckysheetfile[order], cfg = $.extend(true, {}, file.config), data = $.extend(true, [], file.data);\n        if (data.length == 0) {\n            data = $.extend(true, [], sheetmanage.buildGridData(file));\n        }\n        if (getObjType(range) == 'string') {\n            if (!formula.iscelldata(range)) {\n                return tooltip.info('Incorrect selection format', '');\n            }\n            let cellrange = formula.getcellrange(range);\n            range = [{\n                    'row': cellrange.row,\n                    'column': cellrange.column\n                }];\n        } else if (getObjType(range) == 'object') {\n            if (!range.hasOwnProperty('row') || !range.hasOwnProperty('column')) {\n                return tooltip.info('Incorrect selection format', '');\n            }\n            range = [{\n                    'row': range.row,\n                    'column': range.column\n                }];\n        }    //不能合并重叠区域\n        //不能合并重叠区域\n        if (selectIsOverlap(range)) {\n            return tooltip.info('Cannot merge overlapping range', '');\n        }    //选区是否含有 部分合并单元格\n        //选区是否含有 部分合并单元格\n        if (cfg['merge'] != null) {\n            let has_PartMC = false;\n            for (let s = 0; s < range.length; s++) {\n                let r1 = range[s].row[0], r2 = range[s].row[1];\n                let c1 = range[s].column[0], c2 = range[s].column[1];\n                has_PartMC = hasPartMC(cfg, r1, r2, c1, c2);\n                if (has_PartMC) {\n                    break;\n                }\n            }\n            if (has_PartMC) {\n                return tooltip.info('Cannot perform this operation on partially merged cells', '');\n            }\n        }\n        for (let i = 0; i < range.length; i++) {\n            let r1 = range[i].row[0], r2 = range[i].row[1];\n            let c1 = range[i].column[0], c2 = range[i].column[1];\n            if (r1 == r2 && c1 == c2) {\n                continue;\n            }\n            let fv = {};\n            for (let r = r1; r <= r2; r++) {\n                for (let c = c1; c <= c2; c++) {\n                    let cell = data[r][c];\n                    if (cell != null && cell.mc != null) {\n                        let mc_r = cell.mc.r, mc_c = cell.mc.c;\n                        if ('rs' in cell.mc) {\n                            delete cell.mc;\n                            delete cfg['merge'][mc_r + '_' + mc_c];\n                            fv[mc_r + '_' + mc_c] = $.extend(true, {}, cell);\n                        } else {\n                            // let cell_clone = fv[mc_r + \"_\" + mc_c];\n                            let cell_clone = JSON.parse(JSON.stringify(fv[mc_r + '_' + mc_c]));\n                            delete cell_clone.v;\n                            delete cell_clone.m;\n                            delete cell_clone.ct;\n                            delete cell_clone.f;\n                            delete cell_clone.spl;\n                            data[r][c] = cell_clone;\n                        }\n                    }\n                }\n            }\n        }\n        if (order == curSheetOrder) {\n            if (Store.clearjfundo) {\n                Store.jfundo.length = 0;\n                Store.jfredo.push({\n                    'type': 'mergeChange',\n                    'sheetIndex': file.index,\n                    'data': $.extend(true, [], file.data),\n                    'curData': data,\n                    'range': range,\n                    'config': $.extend(true, {}, file.config),\n                    'curConfig': cfg\n                });\n            }\n            Store.clearjfundo = false;\n            Store.refreshRange(data, range, { 'cfg': cfg });\n            Store.clearjfundo = true;\n        } else {\n            file.data = data;\n            file.config = cfg;\n        }\n    }\n    function setRangeSort(type, options = {}) {\n        let typeValues = [\n            'asc',\n            'desc'\n        ];\n        if (typeValues.indexOf(type) < 0) {\n            return tooltip.info(\"The type parameter must be included in ['asc', 'desc'\", '');\n        }\n        let curSheetOrder = getSheetIndex(Store.currentSheetIndex), curRange = Store.luckysheet_select_save[0];\n        let {range = curRange, order = curSheetOrder, success} = { ...options };\n        let file = Store.luckysheetfile[order], cfg = $.extend(true, {}, file.config), fileData = $.extend(true, [], file.data);\n        if (fileData.length == 0) {\n            fileData = $.extend(true, [], sheetmanage.buildGridData(file));\n        }\n        if (range instanceof Array && range.length > 1) {\n            tooltip.info(locale().sort.noRangeError, '');\n            return;\n        }\n        if (range && typeof range === 'string' && formula.iscelldata(range)) {\n            range = formula.getcellrange(range);\n        }\n        let r1 = range.row[0], r2 = range.row[1], c1 = range.column[0], c2 = range.column[1];\n        let hasMc = false;    //Whether the sort selection has merged cells\n        //Whether the sort selection has merged cells\n        let data = [];\n        for (let r = r1; r <= r2; r++) {\n            let data_row = [];\n            for (let c = c1; c <= c2; c++) {\n                if (fileData[r][c] != null && fileData[r][c].mc != null) {\n                    hasMc = true;\n                    break;\n                }\n                data_row.push(fileData[r][c]);\n            }\n            data.push(data_row);\n        }\n        if (hasMc) {\n            tooltip.info(locale().sort.mergeError, '');\n            return;\n        }\n        data = orderbydata([].concat(data), 0, type === 'asc');\n        for (let r = r1; r <= r2; r++) {\n            for (let c = c1; c <= c2; c++) {\n                fileData[r][c] = data[r - r1][c - c1];\n            }\n        }\n        let allParam = {};\n        if (cfg['rowlen'] != null) {\n            cfg = rowlenByRange(fileData, r1, r2, cfg);\n            allParam = {\n                'cfg': cfg,\n                'RowlChange': true\n            };\n        }\n        if (file.index == Store.currentSheetIndex) {\n            Store.refreshRange(fileData, [{\n                    'row': [\n                        r1,\n                        r2\n                    ],\n                    'column': [\n                        c1,\n                        c2\n                    ]\n                }], allParam);\n        } else {\n            file.data = fileData;\n            file.config = cfg;\n        }\n        if (success && typeof success === 'function') {\n            success();\n        }\n    }\n    function setRangeSortMulti(hasTitle, sort, options = {}) {\n        if (!sort || !(sort instanceof Array)) {\n            return tooltip.info('The sort parameter is invalid.', '');\n        }\n        let curSheetOrder = getSheetIndex(Store.currentSheetIndex), curRange = Store.luckysheet_select_save[0];\n        let {range = curRange, order = curSheetOrder, success} = { ...options };\n        let file = Store.luckysheetfile[order], cfg = $.extend(true, {}, file.config), fileData = $.extend(true, [], file.data);\n        if (fileData.length == 0) {\n            fileData = $.extend(true, [], sheetmanage.buildGridData(file));\n        }\n        if (range instanceof Array && range.length > 1) {\n            tooltip.info(locale().sort.noRangeError, '');\n            return;\n        }\n        if (range && typeof range === 'string' && formula.iscelldata(range)) {\n            range = formula.getcellrange(range);\n        }\n        let r1 = range.row[0], r2 = range.row[1], c1 = range.column[0], c2 = range.column[1];\n        let str;\n        if (hasTitle) {\n            str = r1 + 1;\n        } else {\n            str = r1;\n        }\n        let hasMc = false;    //Whether the sort selection has merged cells\n        //Whether the sort selection has merged cells\n        let data = [];\n        for (let r = str; r <= r2; r++) {\n            let data_row = [];\n            for (let c = c1; c <= c2; c++) {\n                if (fileData[r][c] != null && fileData[r][c].mc != null) {\n                    hasMc = true;\n                    break;\n                }\n                data_row.push(fileData[r][c]);\n            }\n            data.push(data_row);\n        }\n        if (hasMc) {\n            tooltip.info(locale().sort.mergeError, '');\n            return;\n        }\n        sort.forEach(sortItem => {\n            let i = sortItem.i;\n            i -= c1;\n            data = orderbydata([].concat(data), i, sortItem.sort === 'asc');\n        });\n        for (let r = str; r <= r2; r++) {\n            for (let c = c1; c <= c2; c++) {\n                fileData[r][c] = data[r - str][c - c1];\n            }\n        }\n        let allParam = {};\n        if (cfg['rowlen'] != null) {\n            cfg = rowlenByRange(fileData, str, r2, cfg);\n            allParam = {\n                'cfg': cfg,\n                'RowlChange': true\n            };\n        }\n        if (file.index === Store.currentSheetIndex) {\n            Store.refreshRange(fileData, [{\n                    'row': [\n                        str,\n                        r2\n                    ],\n                    'column': [\n                        c1,\n                        c2\n                    ]\n                }], allParam);\n        } else {\n            file.data = fileData;\n            file.config = cfg;\n        }\n        if (success && typeof success === 'function') {\n            success();\n        }\n    }\n    function setRangeConditionalFormatDefault(conditionName, conditionValue, options = {}) {\n        let conditionNameValues = [\n            'greaterThan',\n            'lessThan',\n            'betweenness',\n            'equal',\n            'textContains',\n            'occurrenceDate',\n            'duplicateValue',\n            'top10',\n            'top10%',\n            'last10',\n            'last10%',\n            'AboveAverage',\n            'SubAverage'\n        ];\n        if (!conditionName || !conditionNameValues.includes(conditionName)) {\n            return tooltip.info('The conditionName parameter is invalid.', '');\n        }\n        if (getObjType(conditionValue) != 'array' || conditionValue.length == 0) {\n            return tooltip.info('The conditionValue parameter is invalid.', '');\n        }\n        let {format = {\n                'textColor': '#000000',\n                'cellColor': '#ff0000'\n            }, cellrange = Store.luckysheet_select_save, order = getSheetIndex(Store.currentSheetIndex), success} = { ...options };\n        let file = Store.luckysheetfile[order];\n        let data = file.data;\n        if (data == null || data.length == 0) {\n            data = sheetmanage.buildGridData(file);\n        }\n        if (file == null) {\n            return tooltip.info('Incorrect worksheet index', '');\n        }\n        const conditionformat_Text = locale().conditionformat;\n        let conditionRange = [], conditionValue2 = [];\n        if (conditionName == 'betweenness') {\n            let v1 = conditionValue[0];\n            let v2 = conditionValue[1];    //条件值是否是选区\n            //条件值是否是选区\n            let rangeArr1 = conditionformat.getRangeByTxt(v1);\n            if (rangeArr1.length > 1) {\n                conditionformat.infoDialog(conditionformat_Text.onlySingleCell, '');\n                return;\n            } else if (rangeArr1.length == 1) {\n                let r1 = rangeArr1[0].row[0], r2 = rangeArr1[0].row[1];\n                let c1 = rangeArr1[0].column[0], c2 = rangeArr1[0].column[1];\n                if (r1 == r2 && c1 == c2) {\n                    v1 = getcellvalue(r1, c1, data);\n                    conditionRange.push({\n                        'row': rangeArr1[0].row,\n                        'column': rangeArr1[0].column\n                    });\n                    conditionValue2.push(v1);\n                } else {\n                    conditionformat.infoDialog(conditionformat_Text.onlySingleCell, '');\n                    return;\n                }\n            } else if (rangeArr1.length == 0) {\n                if (isNaN(v1) || v1 == '') {\n                    conditionformat.infoDialog(conditionformat_Text.conditionValueCanOnly, '');\n                    return;\n                } else {\n                    conditionValue2.push(v1);\n                }\n            }\n            let rangeArr2 = conditionformat.getRangeByTxt(v2);\n            if (rangeArr2.length > 1) {\n                conditionformat.infoDialog(conditionformat_Text.onlySingleCell, '');\n                return;\n            } else if (rangeArr2.length == 1) {\n                let r1 = rangeArr2[0].row[0], r2 = rangeArr2[0].row[1];\n                let c1 = rangeArr2[0].column[0], c2 = rangeArr2[0].column[1];\n                if (r1 == r2 && c1 == c2) {\n                    v2 = getcellvalue(r1, c1, data);\n                    conditionRange.push({\n                        'row': rangeArr2[0].row,\n                        'column': rangeArr2[0].column\n                    });\n                    conditionValue2.push(v2);\n                } else {\n                    conditionformat.infoDialog(conditionformat_Text.onlySingleCell, '');\n                    return;\n                }\n            } else if (rangeArr2.length == 0) {\n                if (isNaN(v2) || v2 == '') {\n                    conditionformat.infoDialog(conditionformat_Text.conditionValueCanOnly, '');\n                    return;\n                } else {\n                    conditionValue2.push(v2);\n                }\n            }\n        } else if (conditionName == 'greaterThan' || conditionName == 'lessThan' || conditionName == 'equal') {\n            let v = conditionValue[0];    //条件值是否是选区\n            //条件值是否是选区\n            let rangeArr = conditionformat.getRangeByTxt(v);\n            if (rangeArr.length > 1) {\n                conditionformat.infoDialog(conditionformat_Text.onlySingleCell, '');\n                return;\n            } else if (rangeArr.length == 1) {\n                let r1 = rangeArr[0].row[0], r2 = rangeArr[0].row[1];\n                let c1 = rangeArr[0].column[0], c2 = rangeArr[0].column[1];\n                if (r1 == r2 && c1 == c2) {\n                    v = getcellvalue(r1, c1, data);\n                    conditionRange.push({\n                        'row': rangeArr[0].row,\n                        'column': rangeArr[0].column\n                    });\n                    conditionValue2.push(v);\n                } else {\n                    conditionformat.infoDialog(conditionformat_Text.onlySingleCell, '');\n                    return;\n                }\n            } else if (rangeArr.length == 0) {\n                if (isNaN(v) || v == '') {\n                    conditionformat.infoDialog(conditionformat_Text.conditionValueCanOnly, '');\n                    return;\n                } else {\n                    conditionValue2.push(v);\n                }\n            }\n        } else if (conditionName == 'textContains') {\n            let v = conditionValue[0];    //条件值是否是选区\n            //条件值是否是选区\n            let rangeArr = conditionformat.getRangeByTxt(v);\n            if (rangeArr.length > 1) {\n                conditionformat.infoDialog(conditionformat_Text.onlySingleCell, '');\n                return;\n            } else if (rangeArr.length == 1) {\n                let r1 = rangeArr[0].row[0], r2 = rangeArr[0].row[1];\n                let c1 = rangeArr[0].column[0], c2 = rangeArr[0].column[1];\n                if (r1 == r2 && c1 == c2) {\n                    v = getcellvalue(r1, c1, data);\n                    conditionRange.push({\n                        'row': rangeArr[0].row,\n                        'column': rangeArr[0].column\n                    });\n                    conditionValue2.push(v);\n                } else {\n                    conditionformat.infoDialog(conditionformat_Text.onlySingleCell, '');\n                    return;\n                }\n            } else if (rangeArr.length == 0) {\n                if (v == '') {\n                    conditionformat.infoDialog(conditionformat_Text.conditionValueCanOnly, '');\n                    return;\n                } else {\n                    conditionValue2.push(v);\n                }\n            }\n        } else if (conditionName == 'occurrenceDate') {\n            let v1 = conditionValue[0];\n            let v2 = conditionValue[1];\n            if (!isdatetime(v1) || !isdatetime(v2)) {\n                return tooltip.info('The conditionValue parameter is invalid.', '');\n            }\n            let v;\n            if (diff(v1, v2) > 0) {\n                v = dayjs(v2).format('YYYY/MM/DD') + '-' + dayjs(v1).format('YYYY/MM/DD');\n            } else {\n                v = dayjs(v1).format('YYYY/MM/DD') + '-' + dayjs(v2).format('YYYY/MM/DD');\n            }\n            conditionValue2.push(v);\n        } else if (conditionName == 'duplicateValue') {\n            let v = conditionValue[0];\n            if (v != '0' || v != '1') {\n                return tooltip.info('The conditionValue parameter is invalid.', '');\n            }\n            conditionValue2.push(v);\n        } else if (conditionName == 'top10' || conditionName == 'top10%' || conditionName == 'last10' || conditionName == 'last10%') {\n            let v = conditionValue[0];\n            if (parseInt(v) != v || parseInt(v) < 1 || parseInt(v) > 1000) {\n                conditionformat.infoDialog(conditionformat_Text.pleaseEnterInteger, '');\n                return;\n            }\n            conditionValue2.push(parseInt(v));\n        } else if (conditionName == 'AboveAverage' || conditionName == 'SubAverage') {\n            conditionValue2.push(conditionName);\n        }\n        if (!format.hasOwnProperty('textColor') || !format.hasOwnProperty('cellColor')) {\n            return tooltip.info('The format parameter is invalid.', '');\n        }\n        if (getObjType(cellrange) == 'string') {\n            cellrange = conditionformat.getRangeByTxt(cellrange);\n        } else if (getObjType(cellrange) == 'object') {\n            cellrange = [cellrange];\n        }\n        if (getObjType(cellrange) != 'array') {\n            return tooltip.info('The cellrange parameter is invalid.', '');\n        }\n        let rule = {\n            'type': 'default',\n            'cellrange': cellrange,\n            'format': format,\n            'conditionName': conditionName,\n            'conditionRange': conditionRange,\n            'conditionValue': conditionValue2\n        };    //保存之前的规则\n        //保存之前的规则\n        let fileH = $.extend(true, [], Store.luckysheetfile);\n        let historyRules = conditionformat.getHistoryRules(fileH);    //保存当前的规则\n        //保存当前的规则\n        let ruleArr = file['luckysheet_conditionformat_save'] || [];\n        ruleArr.push(rule);\n        file['luckysheet_conditionformat_save'] = ruleArr;\n        let fileC = $.extend(true, [], Store.luckysheetfile);\n        let currentRules = conditionformat.getCurrentRules(fileC);    //刷新一次表格\n        //刷新一次表格\n        conditionformat.ref(historyRules, currentRules);    //发送给后台\n        //发送给后台\n        if (Store.allowUpdate) {\n            Store.saveParam('all', file.index, ruleArr, { 'k': 'luckysheet_conditionformat_save' });\n        }\n        if (success && typeof success === 'function') {\n            success();\n        }\n    }\n    function setRangeConditionalFormat(type, options = {}) {\n        let typeValues = [\n            'dataBar',\n            'colorGradation',\n            'icons'\n        ];\n        if (!type || !typeValues.includes(type)) {\n            return tooltip.info('The type parameter is invalid.', '');\n        }\n        let {format, cellrange = Store.luckysheet_select_save, order = getSheetIndex(Store.currentSheetIndex), success} = { ...options };\n        let file = Store.luckysheetfile[order];\n        if (file == null) {\n            return tooltip.info('Incorrect worksheet index', '');\n        }\n        if (type == 'dataBar') {\n            if (format == null) {\n                format = [\n                    '#638ec6',\n                    '#ffffff'\n                ];\n            }\n            if (getObjType(format) != 'array' || format.length < 1 || format.length > 2) {\n                return tooltip.info('The format parameter is invalid.', '');\n            }\n        } else if (type == 'colorGradation') {\n            if (format == null) {\n                format = [\n                    'rgb(99, 190, 123)',\n                    'rgb(255, 235, 132)',\n                    'rgb(248, 105, 107)'\n                ];\n            }\n            if (getObjType(format) != 'array' || format.length < 2 || format.length > 3) {\n                return tooltip.info('The format parameter is invalid.', '');\n            }\n        } else if (type == 'icons') {\n            if (format == null) {\n                format = 'threeWayArrowMultiColor';\n            }\n            let formatValues = [\n                'threeWayArrowMultiColor',\n                'threeTriangles',\n                'fourWayArrowMultiColor',\n                'fiveWayArrowMultiColor',\n                'threeWayArrowGrayColor',\n                'fourWayArrowGrayColor',\n                'fiveWayArrowGrayColor',\n                'threeColorTrafficLightRimless',\n                'threeSigns',\n                'greenRedBlackGradient',\n                'threeColorTrafficLightBordered',\n                'fourColorTrafficLight',\n                'threeSymbolsCircled',\n                'tricolorFlag',\n                'threeSymbolsnoCircle',\n                'threeStars',\n                'fiveQuadrantDiagram',\n                'fiveBoxes',\n                'grade4',\n                'grade5'\n            ];\n            if (getObjType(format) != 'string' || !formatValues.includes(format)) {\n                return tooltip.info('The format parameter is invalid.', '');\n            }\n            switch (format) {\n            case 'threeWayArrowMultiColor':\n                format = {\n                    'len': 3,\n                    'leftMin': 0,\n                    'top': 0\n                };\n                break;\n            case 'threeTriangles':\n                format = {\n                    'len': 3,\n                    'leftMin': 0,\n                    'top': 1\n                };\n                break;\n            case 'fourWayArrowMultiColor':\n                format = {\n                    'len': 4,\n                    'leftMin': 0,\n                    'top': 2\n                };\n                break;\n            case 'fiveWayArrowMultiColor':\n                format = {\n                    'len': 5,\n                    'leftMin': 0,\n                    'top': 3\n                };\n                break;\n            case 'threeWayArrowGrayColor':\n                format = {\n                    'len': 3,\n                    'leftMin': 5,\n                    'top': 0\n                };\n                break;\n            case 'fourWayArrowGrayColor':\n                format = {\n                    'len': 4,\n                    'leftMin': 5,\n                    'top': 1\n                };\n                break;\n            case 'fiveWayArrowGrayColor':\n                format = {\n                    'len': 5,\n                    'leftMin': 5,\n                    'top': 2\n                };\n                break;\n            case 'threeColorTrafficLightRimless':\n                format = {\n                    'len': 3,\n                    'leftMin': 0,\n                    'top': 4\n                };\n                break;\n            case 'threeSigns':\n                format = {\n                    'len': 3,\n                    'leftMin': 0,\n                    'top': 5\n                };\n                break;\n            case 'greenRedBlackGradient':\n                format = {\n                    'len': 4,\n                    'leftMin': 0,\n                    'top': 6\n                };\n                break;\n            case 'threeColorTrafficLightBordered':\n                format = {\n                    'len': 3,\n                    'leftMin': 5,\n                    'top': 4\n                };\n                break;\n            case 'fourColorTrafficLight':\n                format = {\n                    'len': 4,\n                    'leftMin': 5,\n                    'top': 5\n                };\n                break;\n            case 'threeSymbolsCircled':\n                format = {\n                    'len': 3,\n                    'leftMin': 0,\n                    'top': 7\n                };\n                break;\n            case 'tricolorFlag':\n                format = {\n                    'len': 3,\n                    'leftMin': 0,\n                    'top': 8\n                };\n                break;\n            case 'threeSymbolsnoCircle':\n                format = {\n                    'len': 3,\n                    'leftMin': 5,\n                    'top': 7\n                };\n                break;\n            case 'threeStars':\n                format = {\n                    'len': 3,\n                    'leftMin': 0,\n                    'top': 9\n                };\n                break;\n            case 'fiveQuadrantDiagram':\n                format = {\n                    'len': 5,\n                    'leftMin': 0,\n                    'top': 10\n                };\n                break;\n            case 'fiveBoxes':\n                format = {\n                    'len': 5,\n                    'leftMin': 0,\n                    'top': 11\n                };\n                break;\n            case 'grade4':\n                format = {\n                    'len': 4,\n                    'leftMin': 5,\n                    'top': 9\n                };\n                break;\n            case 'grade5':\n                format = {\n                    'len': 5,\n                    'leftMin': 5,\n                    'top': 10\n                };\n                break;\n            }\n        }\n        if (getObjType(cellrange) == 'string') {\n            cellrange = conditionformat.getRangeByTxt(cellrange);\n        } else if (getObjType(cellrange) == 'object') {\n            cellrange = [cellrange];\n        }\n        if (getObjType(cellrange) != 'array') {\n            return tooltip.info('The cellrange parameter is invalid.', '');\n        }\n        let rule = {\n            'type': type,\n            'cellrange': cellrange,\n            'format': format\n        };    //保存之前的规则\n        //保存之前的规则\n        let fileH = $.extend(true, [], Store.luckysheetfile);\n        let historyRules = conditionformat.getHistoryRules(fileH);    //保存当前的规则\n        //保存当前的规则\n        let ruleArr = file['luckysheet_conditionformat_save'] || [];\n        ruleArr.push(rule);\n        file['luckysheet_conditionformat_save'] = ruleArr;\n        let fileC = $.extend(true, [], Store.luckysheetfile);\n        let currentRules = conditionformat.getCurrentRules(fileC);    //刷新一次表格\n        //刷新一次表格\n        conditionformat.ref(historyRules, currentRules);    //发送给后台\n        //发送给后台\n        if (Store.allowUpdate) {\n            Store.saveParam('all', file.index, ruleArr, { 'k': 'luckysheet_conditionformat_save' });\n        }\n        if (success && typeof success === 'function') {\n            success();\n        }\n    }\n    function deleteRangeConditionalFormat(itemIndex, options = {}) {\n        if (!isRealNum(itemIndex)) {\n            return tooltip.info('The itemIndex parameter is invalid.', '');\n        }\n        itemIndex = Number(itemIndex);\n        let {order = getSheetIndex(Store.currentSheetIndex), success} = { ...options };\n        let file = Store.luckysheetfile[order];\n        if (file == null) {\n            return tooltip.info('The order parameter is invalid.', '');\n        }\n        let cdformat = $.extend(true, [], file.luckysheet_conditionformat_save);\n        if (cdformat.length == 0) {\n            return tooltip.info('This worksheet has no conditional format to delete', '');\n        } else if (cdformat[itemIndex] == null) {\n            return tooltip.info('The conditional format of the index cannot be found', '');\n        }\n        let cdformatItem = cdformat.splice(itemIndex, 1);    //保存之前的规则\n        //保存之前的规则\n        let fileH = $.extend(true, [], Store.luckysheetfile);\n        let historyRules = conditionformat.getHistoryRules(fileH);    //保存当前的规则\n        //保存当前的规则\n        file['luckysheet_conditionformat_save'] = cdformat;\n        let fileC = $.extend(true, [], Store.luckysheetfile);\n        let currentRules = conditionformat.getCurrentRules(fileC);    //刷新一次表格\n        //刷新一次表格\n        conditionformat.ref(historyRules, currentRules);    //发送给后台\n        //发送给后台\n        if (Store.allowUpdate) {\n            Store.saveParam('all', file.index, ruleArr, { 'k': 'luckysheet_conditionformat_save' });\n        }\n        setTimeout(() => {\n            if (success && typeof success === 'function') {\n                success();\n            }\n        }, 1);\n        return cdformatItem;\n    }\n    function clearRange(options = {}) {\n        let {range = Store.luckysheet_select_save, order = getSheetIndex(Store.currentSheetIndex), success} = { ...options };\n        if (getObjType(range) == 'string') {\n            if (!formula.iscelldata(range)) {\n                return tooltip.info('The range parameter is invalid.', '');\n            }\n            let cellrange = formula.getcellrange(range);\n            range = [{\n                    'row': cellrange.row,\n                    'column': cellrange.column\n                }];\n        } else if (getObjType(range) == 'object') {\n            if (range.row == null || range.column == null) {\n                return tooltip.info('The range parameter is invalid.', '');\n            }\n            range = [{\n                    'row': range.row,\n                    'column': range.column\n                }];\n        }\n        if (getObjType(range) != 'array') {\n            return tooltip.info('The range parameter is invalid.', '');\n        }\n        let file = Store.luckysheetfile[order];\n        if (file == null) {\n            return tooltip.info('The order parameter is invalid.', '');\n        }\n        let cfg = $.extend(true, {}, file.config);\n        let has_PartMC = false;\n        for (let s = 0; s < range.length; s++) {\n            let r1 = range[s].row[0], r2 = range[s].row[1];\n            let c1 = range[s].column[0], c2 = range[s].column[1];\n            has_PartMC = hasPartMC(cfg, r1, r2, c1, c2);\n            if (has_PartMC) {\n                break;\n            }\n        }\n        if (has_PartMC) {\n            return tooltip.info('Cannot perform this operation on partially merged cells', '');\n        }\n        let d = $.extend(true, [], file.data);\n        if (d.length == 0) {\n            d = $.extend(true, [], sheetmanage.buildGridData(file));\n        }\n        for (let s = 0; s < range.length; s++) {\n            let r1 = range[s].row[0], r2 = range[s].row[1];\n            let c1 = range[s].column[0], c2 = range[s].column[1];\n            for (let r = r1; r <= r2; r++) {\n                for (let c = c1; c <= c2; c++) {\n                    let cell = d[r][c];\n                    if (getObjType(cell) == 'object') {\n                        delete cell['m'];\n                        delete cell['v'];\n                        if (cell['f'] != null) {\n                            delete cell['f'];\n                            formula.delFunctionGroup(r, c, file.index);\n                            delete cell['spl'];\n                        }\n                        if (cell['ct'] != null && cell['ct'].t == 'inlineStr') {\n                            delete cell['ct'];\n                        }\n                    } else {\n                        d[r][c] = null;\n                    }\n                }\n            }\n        }\n        if (file.index == Store.currentSheetIndex) {\n            Store.refreshRange(d, range);\n        } else {\n            file.data = d;\n        }\n        if (success && typeof success === 'function') {\n            success();\n        }\n    }\n    function deleteRange(move, options = {}) {\n        let moveList = [\n            'left',\n            'up'\n        ];\n        if (!moveList.includes(move)) {\n            return tooltip.info('The move parameter is invalid.', '');\n        }\n        let {range = Store.luckysheet_select_save[Store.luckysheet_select_save.length - 1], order = getSheetIndex(Store.currentSheetIndex), success} = { ...options };\n        if (getObjType(range) == 'string') {\n            if (!formula.iscelldata(range)) {\n                return tooltip.info('The range parameter is invalid.', '');\n            }\n            let cellrange = formula.getcellrange(range);\n            range = {\n                'row': cellrange.row,\n                'column': cellrange.column\n            };\n        }\n        if (getObjType(range) != 'object' || range.row == null || range.column == null) {\n            return tooltip.info('The range parameter is invalid.', '');\n        }\n        let file = Store.luckysheetfile[order];\n        if (file == null) {\n            return tooltip.info('The order parameter is invalid.', '');\n        }\n        let str = range.row[0], edr = range.row[1], stc = range.column[0], edc = range.column[1];\n        if (move == 'left') {\n            luckysheetDeleteCell('moveLeft', str, edr, stc, edc, order);\n        } else if (move == 'up') {\n            luckysheetDeleteCell('moveUp', str, edr, stc, edc, order);\n        }\n        if (success && typeof success === 'function') {\n            success();\n        }\n    }\n    function matrixOperation(type, options = {}) {\n        let typeValues = [\n            'flipUpDown',\n            // 上下翻转\n            'flipLeftRight',\n            // 左右翻转\n            'flipClockwise',\n            // 顺时针旋转\n            'flipCounterClockwise',\n            // 逆时针旋转\n            'transpose',\n            // 转置\n            'deleteZeroByRow',\n            // 按行删除两端0值\n            'deleteZeroByColumn',\n            // 按列删除两端0值\n            'removeDuplicateByRow',\n            // 按行删除重复值\n            'removeDuplicateByColumn',\n            // 按列删除重复值\n            'newMatrix'    // 生产新矩阵\n        ];\n        // 生产新矩阵\n        if (!type || typeValues.indexOf(type) < 0) {\n            return tooltip.info('The type parameter is invalid.', '');\n        }\n        let curRange = Store.luckysheet_select_save[0];\n        let {range = curRange, success} = { ...options };\n        if (range instanceof Array && range.length > 1) {\n            tooltip.info(locale().drag.noMulti, '');\n            return;\n        }\n        if (range && typeof range === 'string' && formula.iscelldata(range)) {\n            range = formula.getcellrange(range);\n        }\n        let getdata = getdatabyselection(range);\n        let arr = [];\n        if (getdata.length === 0) {\n            return;\n        }\n        let getdatalen, collen, arr1;\n        switch (type) {\n        case 'flipUpDown':\n            for (let r = getdata.length - 1; r >= 0; r--) {\n                let a = [];\n                for (let c = 0; c < getdata[0].length; c++) {\n                    let value = '';\n                    if (getdata[r] != null && getdata[r][c] != null) {\n                        value = getdata[r][c];\n                    }\n                    a.push(value);\n                }\n                arr.push(a);\n            }\n            break;\n        case 'flipLeftRight':\n            for (let r = 0; r < getdata.length; r++) {\n                let a = [];\n                for (let c = getdata[0].length - 1; c >= 0; c--) {\n                    let value = '';\n                    if (getdata[r] != null && getdata[r][c] != null) {\n                        value = getdata[r][c];\n                    }\n                    a.push(value);\n                }\n                arr.push(a);\n            }\n            break;\n        case 'flipClockwise':\n            for (let c = 0; c < getdata[0].length; c++) {\n                let a = [];\n                for (let r = getdata.length - 1; r >= 0; r--) {\n                    let value = '';\n                    if (getdata[r] != null && getdata[r][c] != null) {\n                        value = getdata[r][c];\n                    }\n                    a.push(value);\n                }\n                arr.push(a);\n            }\n            break;\n        case 'flipCounterClockwise':\n            for (let c = getdata[0].length - 1; c >= 0; c--) {\n                let a = [];\n                for (let r = 0; r < getdata.length; r++) {\n                    let value = '';\n                    if (getdata[r] != null && getdata[r][c] != null) {\n                        value = getdata[r][c];\n                    }\n                    a.push(value);\n                }\n                arr.push(a);\n            }\n            break;\n        case 'transpose':\n            for (let c = 0; c < getdata[0].length; c++) {\n                let a = [];\n                for (let r = 0; r < getdata.length; r++) {\n                    let value = '';\n                    if (getdata[r] != null && getdata[r][c] != null) {\n                        value = getdata[r][c];\n                    }\n                    a.push(value);\n                }\n                arr.push(a);\n            }\n            break;\n        case 'deleteZeroByRow':\n            getdatalen = getdata[0].length;\n            for (let r = 0; r < getdata.length; r++) {\n                let a = [], stdel = true, eddel = true;\n                for (let c = 0; c < getdatalen; c++) {\n                    let value = '';\n                    if (getdata[r] != null && getdata[r][c] != null) {\n                        value = getdata[r][c];\n                        if ((value.v == '0' || value.v == 0) && stdel) {\n                            continue;\n                        } else {\n                            stdel = false;\n                        }\n                    }\n                    a.push(value);\n                }\n                let a1 = [];\n                if (a.length == getdatalen) {\n                    a1 = a;\n                } else {\n                    for (let c = a.length - 1; c >= 0; c--) {\n                        let value = '';\n                        if (a[c] != null) {\n                            value = a[c];\n                            if ((value.v == '0' || value.v == 0) && eddel) {\n                                continue;\n                            } else {\n                                eddel = false;\n                            }\n                        }\n                        a1.unshift(value);\n                    }\n                    let l = getdatalen - a1.length;\n                    for (let c1 = 0; c1 < l; c1++) {\n                        a1.push('');\n                    }\n                }\n                arr.push(a1);\n            }\n            break;\n        case 'deleteZeroByColumn':\n            getdatalen = getdata.length;\n            collen = getdata[0].length;\n            for (let c = 0; c < collen; c++) {\n                let a = [], stdel = true, eddel = true;\n                for (let r = 0; r < getdatalen; r++) {\n                    let value = '';\n                    if (getdata[r] != null && getdata[r][c] != null) {\n                        value = getdata[r][c];\n                        if ((value.v == '0' || value.v == 0) && stdel) {\n                            continue;\n                        } else {\n                            stdel = false;\n                        }\n                    }\n                    a.push(value);\n                }\n                let a1 = [];\n                if (a.length == getdatalen) {\n                    a1 = a;\n                } else {\n                    for (let r = a.length - 1; r >= 0; r--) {\n                        let value = '';\n                        if (a[r] != null) {\n                            value = a[r];\n                            if ((value.v == '0' || value.v == 0) && eddel) {\n                                continue;\n                            } else {\n                                eddel = false;\n                            }\n                        }\n                        a1.unshift(value);\n                    }\n                    let l = getdatalen - a1.length;\n                    for (let r1 = 0; r1 < l; r1++) {\n                        a1.push('');\n                    }\n                }\n                arr.push(a1);\n            }\n            arr1 = [];\n            for (let c = 0; c < arr[0].length; c++) {\n                let a = [];\n                for (let r = 0; r < arr.length; r++) {\n                    let value = '';\n                    if (arr[r] != null && arr[r][c] != null) {\n                        value = arr[r][c];\n                    }\n                    a.push(value);\n                }\n                arr1.push(a);\n            }\n            break;\n        case 'removeDuplicateByRow':\n            getdatalen = getdata[0].length;\n            for (let r = 0; r < getdata.length; r++) {\n                let a = [], repeat = {};\n                for (let c = 0; c < getdatalen; c++) {\n                    let value = null;\n                    if (getdata[r] != null && getdata[r][c] != null) {\n                        value = getdata[r][c];\n                        if (value.v in repeat) {\n                            repeat[value.v].push(value);\n                        } else {\n                            repeat[value.v] = [];\n                            repeat[value.v].push(value);\n                        }\n                    }\n                }\n                for (let c = 0; c < getdatalen; c++) {\n                    let value = null;\n                    if (getdata[r] != null && getdata[r][c] != null) {\n                        value = getdata[r][c];\n                        if (repeat[value.v].length == 1) {\n                            a.push(value);\n                        }\n                    }\n                }\n                let l = getdatalen - a.length;\n                for (let c1 = 0; c1 < l; c1++) {\n                    a.push(null);\n                }\n                arr.push(a);\n            }\n            break;\n        case 'removeDuplicateByColumn':\n            collen = getdata[0].length;\n            getdatalen = getdata.length;\n            for (let c = 0; c < collen; c++) {\n                let a = [], repeat = {};\n                for (let r = 0; r < getdatalen; r++) {\n                    let value = null;\n                    if (getdata[r] != null && getdata[r][c] != null) {\n                        value = getdata[r][c];\n                        if (value.v in repeat) {\n                            repeat[value.v].push(value);\n                        } else {\n                            repeat[value.v] = [];\n                            repeat[value.v].push(value);\n                        }\n                    }\n                }\n                for (let r = 0; r < getdatalen; r++) {\n                    let value = null;\n                    if (getdata[r] != null && getdata[r][c] != null) {\n                        value = getdata[r][c];\n                        if (repeat[value.v].length == 1) {\n                            a.push(value);\n                        }\n                    }\n                }\n                a1 = a;\n                let l = getdatalen - a1.length;\n                for (let r1 = 0; r1 < l; r1++) {\n                    a1.push(null);\n                }\n                arr.push(a1);\n            }\n            arr1 = [];\n            for (let c = 0; c < arr[0].length; c++) {\n                let a = [];\n                for (let r = 0; r < arr.length; r++) {\n                    let value = null;\n                    if (arr[r] != null && arr[r][c] != null) {\n                        value = arr[r][c];\n                    }\n                    a.push(value);\n                }\n                arr1.push(a);\n            }\n            break;\n        case 'newMatrix':\n            // TODO\n            console.log('TODO');\n            break;\n        }\n        editor.controlHandler(arr, range);\n        if (success && typeof success === 'function') {\n            success();\n        }\n    }\n    function matrixCalculation(type, number, options = {}) {\n        let typeValues = [\n            'plus',\n            // 加\n            'minus',\n            // 减\n            'multiply',\n            // 乘\n            'divided',\n            // 除\n            'power',\n            // 幂\n            'root',\n            // 次方根\n            'log'    // 对数log\n        ];\n        // 对数log\n        if (!type || typeValues.indexOf(type) < 0) {\n            return tooltip.info('The type parameter is invalid.', '');\n        }\n        if (!isRealNum(number)) {\n            return tooltip.info('The number parameter is invalid.', '');\n        }\n        let curRange = Store.luckysheet_select_save[0];\n        let {range = curRange, success} = { ...options };\n        if (range instanceof Array && range.length > 1) {\n            tooltip.info(locale().drag.noMulti, '');\n            return;\n        }\n        if (range && typeof range === 'string' && formula.iscelldata(range)) {\n            range = formula.getcellrange(range);\n        }\n        let getdata = getdatabyselection(range);\n        if (getdata.length == 0) {\n            return;\n        }\n        let arr = [];\n        for (let r = 0; r < getdata.length; r++) {\n            let a = [];\n            for (let c = 0; c < getdata[0].length; c++) {\n                let value = '';\n                if (getdata[r] != null && getdata[r][c] != null) {\n                    value = getdata[r][c];\n                    if (parseInt(value) != null && getdata[r][c].ct != undefined && getdata[r][c].ct.t == 'n') {\n                        if (type == 'minus') {\n                            value.v = value.v - number;\n                        } else if (type == 'multiply') {\n                            value.v = value.v * number;\n                        } else if (type == 'divided') {\n                            value.v = numFormat(value.v / number, 4);\n                        } else if (type == 'power') {\n                            value.v = Math.pow(value.v, number);\n                        } else if (type == 'root') {\n                            if (number == 2) {\n                                value.v = numFormat(Math.sqrt(value.v), 4);\n                            } else if (number == 3 && Math.cbrt) {\n                                value.v = numFormat(Math.cbrt(value.v), 4);\n                            } else {\n                                value.v = numFormat(jfnqrt(value.v, number), 4);\n                            }\n                        } else if (type == 'log') {\n                            value.v = numFormat(Math.log(value.v) * 10000 / Math.log(Math.abs(number)), 4);\n                        } else {\n                            value.v = value.v + number;\n                        }\n                        if (value.v == null) {\n                            value.m = '';\n                        } else {\n                            value.m = value.v.toString();\n                        }\n                    }\n                }\n                a.push(value);\n            }\n            arr.push(a);\n        }\n        editor.controlHandler(arr, range);\n        if (success && typeof success === 'function') {\n            success();\n        }\n    }\n    function setSheetAdd(options = {}) {\n        let lastOrder = Store.luckysheetfile.length - 1;\n        let {sheetObject = {}, order = lastOrder, success} = { ...options };\n        if (!isRealNum(order)) {\n            return tooltip.info('Parameter is not a table index', '');\n        }\n        order = Number(order);\n        let index = sheetmanage.generateRandomSheetIndex();    // calcChain公式链里的index也要跟着变化\n        // calcChain公式链里的index也要跟着变化\n        if (sheetObject.calcChain && sheetObject.calcChain.length > 0) {\n            sheetObject.calcChain.forEach(item => {\n                item.index = index;\n            });\n        }\n        let sheetname = sheetmanage.generateRandomSheetName(Store.luckysheetfile, false);\n        if (!!sheetObject.name) {\n            let sameName = false;\n            for (let i = 0; i < Store.luckysheetfile.length; i++) {\n                if (Store.luckysheetfile[i].name == sheetObject.name) {\n                    sameName = true;\n                    break;\n                }\n            }\n            if (!sameName) {\n                sheetname = sheetObject.name;\n            }\n        }\n        $('#luckysheet-sheet-container-c').append(replaceHtml(sheetHTML, {\n            'index': index,\n            'active': '',\n            'name': sheetname,\n            'style': '',\n            'colorset': ''\n        }));\n        let sheetconfig = {\n            'name': '',\n            'color': '',\n            'status': '0',\n            'order': '',\n            'index': '',\n            'celldata': [],\n            'row': Store.defaultrowNum,\n            'column': Store.defaultcolumnNum,\n            'config': {},\n            'pivotTable': null,\n            'isPivotTable': false\n        };\n        sheetconfig = $.extend(true, sheetconfig, sheetObject);\n        sheetconfig.index = index;\n        sheetconfig.name = sheetname;\n        sheetconfig.order = order;\n        if (order <= 0) {\n            let beforeIndex = Store.luckysheetfile[0].index;\n            let beforeObj = $('#luckysheet-sheets-item' + beforeIndex);\n            $('#luckysheet-sheets-item' + index).insertBefore(beforeObj);\n            Store.luckysheetfile.splice(0, 0, sheetconfig);\n        } else {\n            if (order > Store.luckysheetfile.length) {\n                order = Store.luckysheetfile.length;\n            }\n            let afterIndex = Store.luckysheetfile[order - 1].index;\n            let afterObj = $('#luckysheet-sheets-item' + afterIndex);\n            $('#luckysheet-sheets-item' + index).insertAfter(afterObj);\n            Store.luckysheetfile.splice(order, 0, sheetconfig);\n        }\n        let orders = {};\n        Store.luckysheetfile.forEach((item, i, arr) => {\n            arr[i].order = i;\n            orders[item.index.toString()] = i;\n        });\n        $('#luckysheet-sheet-area div.luckysheet-sheets-item').removeClass('luckysheet-sheets-item-active');\n        $('#luckysheet-sheets-item' + index).addClass('luckysheet-sheets-item-active');\n        $('#luckysheet-cell-main').append('<div id=\"luckysheet-datavisual-selection-set-' + index + '\" class=\"luckysheet-datavisual-selection-set\"></div>');\n        cleargridelement(true);\n        Store.saveParam('sha', null, $.extend(true, {}, sheetconfig));\n        Store.saveParam('shr', null, orders);\n        if (Store.clearjfundo) {\n            Store.jfundo.length = 0;\n            let redo = {};\n            redo['type'] = 'addSheet';\n            redo['sheetconfig'] = $.extend(true, {}, sheetconfig);\n            redo['index'] = index;\n            redo['currentSheetIndex'] = Store.currentSheetIndex;\n            Store.jfredo.push(redo);\n        }\n        Store.changeSheet(index, false, true);\n        if (success && typeof success === 'function') {\n            success();\n        }\n    }\n    function setSheetDelete(options = {}) {\n        let {order = getSheetIndex(Store.currentSheetIndex), success} = { ...options };\n        let file = Store.luckysheetfile[order];\n        if (file == null) {\n            return tooltip.info('The order parameter is invalid.', '');\n        }\n        if (Store.luckysheetfile.length === 1) {\n            return tooltip.info(locale().sheetconfig.noMoreSheet, '');\n        }\n        sheetmanage.deleteSheet(file.index);\n        setTimeout(() => {\n            if (success && typeof success === 'function') {\n                success();\n            }\n        }, 1);\n        return file;\n    }\n    function setSheetCopy(options = {}) {\n        let {targetOrder, order = getSheetIndex(Store.currentSheetIndex), success} = { ...options };\n        let file = Store.luckysheetfile[order];\n        if (file == null) {\n            return tooltip.info('The order parameter is invalid.', '');\n        }\n        if (targetOrder == null) {\n            targetOrder = order + 1;\n        }\n        if (!isRealNum(targetOrder)) {\n            return tooltip.info('The targetOrder parameter is invalid.', '');\n        }\n        let copyindex = file.index;\n        let index = sheetmanage.generateRandomSheetIndex();\n        let copyjson = $.extend(true, {}, file);\n        copyjson.order = Store.luckysheetfile.length;\n        copyjson.index = index;\n        copyjson.name = sheetmanage.generateCopySheetName(Store.luckysheetfile, copyjson.name);\n        let colorset = '';\n        if (copyjson.color != null) {\n            colorset = '<div class=\"luckysheet-sheets-item-color\" style=\" position: absolute; width: 100%; height: 3px; bottom: 0px; left: 0px; background-color: ' + copyjson.color + ';\"></div>';\n        }\n        let afterObj = $('#luckysheet-sheets-item' + copyindex);\n        if (isRealNum(targetOrder)) {\n            afterObj = $('#luckysheet-sheets-item' + Store.luckysheetfile[targetOrder - 1].index);\n        }\n        $('#luckysheet-sheet-container-c').append(replaceHtml(sheetHTML, {\n            'index': copyjson.index,\n            'active': '',\n            'name': copyjson.name,\n            'order': copyjson.order,\n            'style': '',\n            'colorset': colorset\n        }));\n        $('#luckysheet-sheets-item' + copyjson.index).insertAfter(afterObj);\n        Store.luckysheetfile.splice(targetOrder, 0, copyjson);\n        $('#luckysheet-sheet-area div.luckysheet-sheets-item').removeClass('luckysheet-sheets-item-active');\n        $('#luckysheet-sheets-item' + index).addClass('luckysheet-sheets-item-active');\n        $('#luckysheet-cell-main').append('<div id=\"luckysheet-datavisual-selection-set-' + index + '\" class=\"luckysheet-datavisual-selection-set\"></div>');\n        cleargridelement(true);\n        Store.saveParam('shc', index, {\n            'copyindex': copyindex,\n            'name': copyjson.name\n        });\n        Store.changeSheet(index);\n        sheetmanage.reOrderAllSheet();\n        if (Store.clearjfundo) {\n            Store.jfredo.push({\n                'type': 'copySheet',\n                'copyindex': copyindex,\n                'index': copyjson.index,\n                'sheetIndex': copyjson.index\n            });\n        } else if (Store.jfredo.length > 0) {\n            let jfredostr = Store.jfredo[Store.jfredo.length - 1];\n            if (jfredostr.type == 'copySheet') {\n                jfredostr.index = copyjson.index;\n                jfredostr.sheetIndex = copyjson.index;\n            }\n        }\n        setTimeout(() => {\n            if (success && typeof success === 'function') {\n                success();\n            }\n        }, 1);\n        return copyjson;\n    }\n    function setSheetHide(options = {}) {\n        let {order = getSheetIndex(Store.currentSheetIndex), success} = { ...options };\n        let file = Store.luckysheetfile[order];\n        if (file == null) {\n            return tooltip.info('The order parameter is invalid.', '');\n        }\n        sheetmanage.setSheetHide(file.index);\n        setTimeout(() => {\n            if (success && typeof success === 'function') {\n                success();\n            }\n        }, 1);\n        return file;\n    }\n    function setSheetShow(options = {}) {\n        let {order = getSheetIndex(Store.currentSheetIndex), success} = { ...options };\n        let file = Store.luckysheetfile[order];\n        if (file == null) {\n            return tooltip.info('The order parameter is invalid.', '');\n        }\n        sheetmanage.setSheetShow(file.index);\n        setTimeout(() => {\n            if (success && typeof success === 'function') {\n                success();\n            }\n        }, 1);\n        return file;\n    }\n    function setSheetActive(order, options = {}) {\n        if (order == null || !isRealNum(order) || Store.luckysheetfile[order] == null) {\n            return tooltip.info('The order parameter is invalid.', '');\n        }\n        let file = Store.luckysheetfile[order];\n        let {success} = { ...options };\n        $('#luckysheet-sheet-area div.luckysheet-sheets-item').removeClass('luckysheet-sheets-item-active');\n        $('#luckysheet-sheets-item' + file.index).addClass('luckysheet-sheets-item-active');\n        sheetmanage.changeSheet(file.index);\n        setTimeout(() => {\n            if (success && typeof success === 'function') {\n                success();\n            }\n        }, 1);\n        server.multipleRangeShow();\n        return file;\n    }\n    function setSheetName(name, options = {}) {\n        if (getObjType(name) != 'string' || name.toString().length == 0) {\n            return tooltip.info('The name parameter is invalid.', '');\n        }\n        let {order = getSheetIndex(Store.currentSheetIndex), success} = { ...options };\n        let file = Store.luckysheetfile[order];\n        if (file == null) {\n            return tooltip.info('The order parameter is invalid.', '');\n        }\n        let oldtxt = file.name;\n        file.name = name;\n        $('#luckysheet-sheets-item' + file.index + ' .luckysheet-sheets-item-name').text(name);\n        Store.saveParam('all', file.index, name, { 'k': 'name' });\n        if (Store.clearjfundo) {\n            let redo = {};\n            redo['type'] = 'sheetName';\n            redo['sheetIndex'] = file.index;\n            redo['oldtxt'] = oldtxt;\n            redo['txt'] = name;\n            Store.jfundo.length = 0;\n            Store.jfredo.push(redo);\n        }\n        if (success && typeof success === 'function') {\n            success();\n        }\n    }\n    function setSheetColor(color, options = {}) {\n        if (getObjType(color) != 'string' || color.toString().length == 0) {\n            return tooltip.info('The color parameter is invalid.', '');\n        }\n        let {order = getSheetIndex(Store.currentSheetIndex), success} = { ...options };\n        let file = Store.luckysheetfile[order];\n        if (file == null) {\n            return tooltip.info('The order parameter is invalid.', '');\n        }\n        let oldcolor = file.color;\n        file.color = color;\n        $('#luckysheet-sheets-item' + file.index).find('.luckysheet-sheets-item-color').remove();\n        $('#luckysheet-sheets-item' + file.index).append('<div class=\"luckysheet-sheets-item-color\" style=\" position: absolute; width: 100%; height: 3px; bottom: 0px; left: 0px; background-color: ' + color + ';\"></div>');\n        Store.saveParam('all', file.index, color, { 'k': 'color' });\n        if (Store.clearjfundo) {\n            let redo = {};\n            redo['type'] = 'sheetColor';\n            redo['sheetIndex'] = file.index;\n            redo['oldcolor'] = oldcolor;\n            redo['color'] = color;\n            Store.jfundo.length = 0;\n            Store.jfredo.push(redo);\n        }\n        if (success && typeof success === 'function') {\n            success();\n        }\n    }\n    function setSheetMove(type, options = {}) {\n        if (type != 'left' && type != 'right' && !isRealNum(type)) {\n            return tooltip.info('Type parameter not available', '');\n        }\n        if (isRealNum(type)) {\n            type = parseInt(type);\n        }\n        let curOrder = getSheetIndex(Store.currentSheetIndex);\n        let {order = curOrder, success} = { ...options };\n        let file = Store.luckysheetfile[order];\n        if (file == null) {\n            return tooltip.info('ncorrect worksheet index', '');\n        }\n        let sheetIndex = file.index;\n        if (type == 'left') {\n            if (order == 0) {\n                return;\n            }\n            let prevIndex = Store.luckysheetfile[order - 1].index;\n            $('#luckysheet-sheets-item' + sheetIndex).insertBefore($('#luckysheet-sheets-item' + prevIndex));\n            Store.luckysheetfile.splice(order, 1);\n            Store.luckysheetfile.splice(order - 1, 0, file);\n        } else if (type == 'right') {\n            if (order == Store.luckysheetfile.length - 1) {\n                return;\n            }\n            let nextIndex = Store.luckysheetfile[order + 1].index;\n            $('#luckysheet-sheets-item' + sheetIndex).insertAfter($('#luckysheet-sheets-item' + nextIndex));\n            Store.luckysheetfile.splice(order, 1);\n            Store.luckysheetfile.splice(order + 1, 0, file);\n        } else {\n            if (type < 0) {\n                type = 0;\n            }\n            if (type > Store.luckysheetfile.length - 1) {\n                type = Store.luckysheetfile.length - 1;\n            }\n            if (type == order) {\n                return;\n            }\n            if (type < order) {\n                let prevIndex = Store.luckysheetfile[type].index;\n                $('#luckysheet-sheets-item' + sheetIndex).insertBefore($('#luckysheet-sheets-item' + prevIndex));\n            } else {\n                let nextIndex = Store.luckysheetfile[type].index;\n                $('#luckysheet-sheets-item' + sheetIndex).insertAfter($('#luckysheet-sheets-item' + nextIndex));\n            }\n            Store.luckysheetfile.splice(order, 1);\n            Store.luckysheetfile.splice(type, 0, file);\n        }\n        let orders = {};\n        Store.luckysheetfile.forEach((item, i, arr) => {\n            arr[i].order = i;\n            orders[item.index.toString()] = i;\n        });\n        Store.saveParam('shr', null, orders);\n        if (success && typeof success === 'function') {\n            success();\n        }\n    }\n    function setSheetOrder(orderList, options = {}) {\n        if (orderList == null || orderList.length == 0) {\n            return tooltip.info('Type orderList not available', '');\n        }\n        let orderListMap = {};\n        orderList.forEach(item => {\n            orderListMap[item.index.toString()] = item.order;\n        });\n        Store.luckysheetfile.sort((x, y) => {\n            let order_x = orderListMap[x.index.toString()];\n            let order_y = orderListMap[y.index.toString()];\n            if (order_x != null && order_y != null) {\n                return order_x - order_y;\n            } else if (order_x != null) {\n                return -1;\n            } else if (order_y != null) {\n                return 1;\n            } else {\n                return 1;\n            }\n        });\n        let orders = {};\n        Store.luckysheetfile.forEach((item, i, arr) => {\n            arr[i].order = i;\n            orders[item.index.toString()] = i;\n            if (i > 0) {\n                let preIndex = arr[i - 1].index;\n                $('#luckysheet-sheets-item' + item.index).insertAfter($('#luckysheet-sheets-item' + preIndex));\n            }\n        });\n        Store.saveParam('shr', null, orders);\n        let {success} = { ...options };\n        if (success && typeof success === 'function') {\n            success();\n        }\n    }\n    function setSheetZoom(zoom, options = {}) {\n        if (!isRealNum(zoom) || zoom < 0.1 || zoom > 4) {\n            return tooltip.info('The zoom parameter is invalid.', '');\n        }\n        let {order = getSheetIndex(Store.currentSheetIndex), success} = { ...options };\n        let file = Store.luckysheetfile[order];\n        if (file == null) {\n            return tooltip.info('The order parameter is invalid.', '');\n        }\n        file['zoomRatio'] = zoom;\n        Store.saveParam('all', file.index, zoom, { 'k': 'zoomRatio' });\n        if (file.index == Store.currentSheetIndex) {\n            Store.zoomRatio = zoom;\n            zoomNumberDomBind();\n            zoomRefreshView();\n        }\n        if (success && typeof success === 'function') {\n            success();\n        }\n    }\n    function showGridLines(options = {}) {\n        let {order = getSheetIndex(Store.currentSheetIndex), success} = { ...options };\n        let file = Store.luckysheetfile[order];\n        if (file == null) {\n            return tooltip.info('The order parameter is invalid.', '');\n        }\n        file.showGridLines = true;\n        if (file.index == Store.currentSheetIndex) {\n            Store.showGridLines = true;\n            setTimeout(function () {\n                luckysheetrefreshgrid();\n            }, 1);\n        }\n        setTimeout(() => {\n            if (success && typeof success === 'function') {\n                success();\n            }\n        }, 1);\n        return file;\n    }\n    function hideGridLines(options = {}) {\n        let {order = getSheetIndex(Store.currentSheetIndex), success} = { ...options };\n        let file = Store.luckysheetfile[order];\n        if (file == null) {\n            return tooltip.info('The order parameter is invalid.', '');\n        }\n        file.showGridLines = false;\n        if (file.index == Store.currentSheetIndex) {\n            Store.showGridLines = false;\n            setTimeout(function () {\n                luckysheetrefreshgrid();\n            }, 1);\n        }\n        setTimeout(() => {\n            if (success && typeof success === 'function') {\n                success();\n            }\n        }, 1);\n        return file;\n    }\n    function refresh(options = {}) {\n        // luckysheetrefreshgrid();\n        Store.refreshRange();\n        let {success} = { ...options };\n        if (success && typeof success === 'function') {\n            success();\n        }\n    }\n    function scroll(options = {}) {\n        let {scrollLeft, scrollTop, targetRow, targetColumn, success} = { ...options };\n        if (scrollLeft != null) {\n            if (!isRealNum(scrollLeft)) {\n                return tooltip.info('The scrollLeft parameter is invalid.', '');\n            }\n            $('#luckysheet-scrollbar-x').scrollLeft(scrollLeft);\n        } else if (targetColumn != null) {\n            if (!isRealNum(targetColumn)) {\n                return tooltip.info('The targetColumn parameter is invalid.', '');\n            }\n            let col = Store.visibledatacolumn[targetColumn], col_pre = targetColumn <= 0 ? 0 : Store.visibledatacolumn[targetColumn - 1];\n            $('#luckysheet-scrollbar-x').scrollLeft(col_pre);\n        }\n        if (scrollTop != null) {\n            if (!isRealNum(scrollTop)) {\n                return tooltip.info('The scrollTop parameter is invalid.', '');\n            }\n            $('#luckysheet-scrollbar-y').scrollTop(scrollTop);\n        } else if (targetRow != null) {\n            if (!isRealNum(targetRow)) {\n                return tooltip.info('The targetRow parameter is invalid.', '');\n            }\n            let row = Store.visibledatarow[targetRow], row_pre = targetRow <= 0 ? 0 : Store.visibledatarow[targetRow - 1];\n            $('#luckysheet-scrollbar-y').scrollTop(row_pre);\n        }\n        if (success && typeof success === 'function') {\n            success();\n        }\n    }\n    function resize(options = {}) {\n        luckysheetsizeauto();\n        let {success} = { ...options };\n        if (success && typeof success === 'function') {\n            success();\n        }\n    }\n    function getScreenshot(options = {}) {\n        let {\n            range = Store.luckysheet_select_save[Store.luckysheet_select_save.length - 1]\n        } = { ...options };\n        if (getObjType(range) == 'string') {\n            if (!formula.iscelldata(range)) {\n                return tooltip.info('The range parameter is invalid.', '');\n            }\n            let cellrange = formula.getcellrange(range);\n            range = {\n                'row': cellrange.row,\n                'column': cellrange.column\n            };\n        }\n        if (getObjType(range) != 'object' || range.row == null || range.column == null) {\n            return tooltip.info('The range parameter is invalid.', '');\n        }\n        let str = range.row[0], edr = range.row[1], stc = range.column[0], edc = range.column[1];\n        let has_PartMC = hasPartMC(Store.config, str, edr, stc, edc);\n        if (has_PartMC) {\n            return tooltip.info('Cannot perform this operation on partially merged cells', '');\n        }\n        let visibledatarow = Store.visibledatarow;\n        let visibledatacolumn = Store.visibledatacolumn;\n        let scrollHeight, rh_height;\n        if (str - 1 < 0) {\n            scrollHeight = 0;\n            rh_height = visibledatarow[edr];\n        } else {\n            scrollHeight = visibledatarow[str - 1];\n            rh_height = visibledatarow[edr] - visibledatarow[str - 1];\n        }\n        let scrollWidth, ch_width;\n        if (stc - 1 < 0) {\n            scrollWidth = 0;\n            ch_width = visibledatacolumn[edc];\n        } else {\n            scrollWidth = visibledatacolumn[stc - 1];\n            ch_width = visibledatacolumn[edc] - visibledatacolumn[stc - 1];\n        }\n        let newCanvas = $('<canvas>').attr({\n            width: Math.ceil(ch_width * Store.devicePixelRatio),\n            height: Math.ceil(rh_height * Store.devicePixelRatio)\n        }).css({\n            width: ch_width,\n            height: rh_height\n        });\n        luckysheetDrawMain(scrollWidth, scrollHeight, ch_width, rh_height, 1, 1, null, null, newCanvas);\n        let ctx_newCanvas = newCanvas.get(0).getContext('2d');    //补上 左边框和上边框\n        //补上 左边框和上边框\n        ctx_newCanvas.beginPath();\n        ctx_newCanvas.moveTo(0, 0);\n        ctx_newCanvas.lineTo(0, Store.devicePixelRatio * rh_height);\n        ctx_newCanvas.lineWidth = Store.devicePixelRatio * 2;\n        ctx_newCanvas.strokeStyle = luckysheetdefaultstyle.strokeStyle;\n        ctx_newCanvas.stroke();\n        ctx_newCanvas.closePath();\n        ctx_newCanvas.beginPath();\n        ctx_newCanvas.moveTo(0, 0);\n        ctx_newCanvas.lineTo(Store.devicePixelRatio * ch_width, 0);\n        ctx_newCanvas.lineWidth = Store.devicePixelRatio * 2;\n        ctx_newCanvas.strokeStyle = luckysheetdefaultstyle.strokeStyle;\n        ctx_newCanvas.stroke();\n        ctx_newCanvas.closePath();\n        let url = newCanvas.get(0).toDataURL('image/png');\n        return url;\n    }\n    function setWorkbookName(name, options = {}) {\n        if (name == null || name.toString().length == 0) {\n            return tooltip.info('The name parameter is invalid.', '');\n        }\n        $('#luckysheet_info_detail_input').val(name);\n        let {success} = { ...options };\n        if (success && typeof success === 'function') {\n            success();\n        }\n    }\n    function getWorkbookName(options = {}) {\n        let name = '';\n        let element = $('#luckysheet_info_detail_input');\n        if (element.length == 0) {\n            tooltip.info('Failed to get workbook name, label loading failed!');\n            return name;\n        }\n        name = $.trim(element.val());\n        let {success} = { ...options };\n        setTimeout(() => {\n            if (success && typeof success === 'function') {\n                success();\n            }\n        }, 1);\n        return name;\n    }\n    function undo(options = {}) {\n        let ctr = $.extend(true, {}, Store.jfredo[Store.jfredo.length - 1]);\n        controlHistory.redo(new Event('custom'));\n        luckysheetactiveCell();\n        let {success} = { ...options };\n        setTimeout(() => {\n            if (success && typeof success === 'function') {\n                success();\n            }\n        }, 1);\n        return ctr;\n    }\n    function redo(options = {}) {\n        let ctr = $.extend(true, {}, Store.jfundo[Store.jfundo.length - 1]);\n        controlHistory.undo(new Event('custom'));\n        luckysheetactiveCell();\n        let {success} = { ...options };\n        setTimeout(() => {\n            if (success && typeof success === 'function') {\n                success();\n            }\n        }, 1);\n        return ctr;\n    }\n    function getAllSheets() {\n        return Store.getAllSheets();\n    }\n    function getSheet(options = {}) {\n        let {index, order, name} = { ...options };\n        if (index != null) {\n            return sheetmanage.getSheetByIndex(index);\n        } else if (order != null) {\n            return Store.luckysheetfile[order];\n        } else if (name != null) {\n            return sheetmanage.getSheetByName(name);\n        }\n        return sheetmanage.getSheetByIndex();\n    }\n    function getSheetData(options = {}) {\n        let {\n            order = getSheetIndex(Store.currentSheetIndex)\n        } = { ...options };\n        let file = Store.luckysheetfile[order];\n        if (file == null) {\n            return tooltip.info('The order parameter is invalid.', '');\n        }\n        let data = $.extend(true, [], file.data);\n        if (data == null || data.length == 0) {\n            data = $.extend(true, [], sheetmanage.buildGridData(file));\n        }\n        return data;\n    }\n    function getConfig(options = {}) {\n        let {\n            order = getSheetIndex(Store.currentSheetIndex)\n        } = { ...options };\n        let file = Store.luckysheetfile[order];\n        if (file == null) {\n            return tooltip.info('The order parameter is invalid.', '');\n        }\n        let config = $.extend(true, {}, file.config);\n        return config;\n    }\n    function setConfig(cfg, options = {}) {\n        if (getObjType(cfg) != 'object') {\n            return tooltip.info('The cfg parameter is invalid.', '');\n        }\n        let {order = getSheetIndex(Store.currentSheetIndex), success} = { ...options };\n        let file = Store.luckysheetfile[order];\n        if (file == null) {\n            return tooltip.info('The order parameter is invalid.', '');\n        }\n        file.config = cfg;\n        if (file.index == Store.currentSheetIndex) {\n            Store.config = cfg;\n            if ('rowhidden' in cfg || 'colhidden' in cfg || 'rowlen' in cfg || 'columnlen' in cfg) {\n                //jfrefreshgrid_rhcw(Store.flowdata.length, Store.flowdata[0].length);\n                Store.refreshGrid_rhcw(Store.flowdata.length, Store.flowdata[0].length);\n            }\n            ///setTimeout(function () {\n            ///    luckysheetrefreshgrid();\n            ///}, 1);\n            Store.refresh();\n        }\n        if (success && typeof success === 'function') {\n            success();\n        }\n    }\n    function getLuckysheetfile() {\n        return getluckysheetfile();\n    }\n    function setDataVerification(optionItem, options = {}) {\n        if (getObjType(optionItem) != 'object') {\n            return tooltip.info('The optionItem parameter is invalid.', '');\n        }\n        let {type, type2 = null, value1 = '', value2 = '', remote = false, prohibitInput = false, hintShow = false, hintText = '', checked = false} = { ...optionItem };\n        let typeValues = [\n            'dropdown',\n            'checkbox',\n            'number',\n            'number_integer',\n            'number_decimal',\n            'text_content',\n            'text_length',\n            'date',\n            'validity'\n        ];\n        let type2Values_1 = [\n            'bw',\n            'nb',\n            'eq',\n            'ne',\n            'gt',\n            'lt',\n            'gte',\n            'lte'\n        ];\n        let type2Values_2 = [\n            'include',\n            'exclude',\n            'equal'\n        ];\n        let type2Values_3 = [\n            'bw',\n            'nb',\n            'eq',\n            'ne',\n            'bf',\n            'nbf',\n            'af',\n            'naf'\n        ];\n        let type2Values_4 = [\n            'card',\n            'phone'\n        ];\n        if (!typeValues.includes(type)) {\n            return tooltip.info('The optionItem.type parameter is invalid.', '');\n        }\n        let dvText = locale().dataVerification;\n        if (type == 'dropdown') {\n            if (value1.length == 0) {\n                tooltip.info('<i class=\"fa fa-exclamation-triangle\"></i>', dvText.tooltipInfo1);\n                return;\n            }\n        } else if (type == 'checkbox') {\n            if (value1.length == 0 || value2.length == 0) {\n                tooltip.info('<i class=\"fa fa-exclamation-triangle\"></i>', dvText.tooltipInfo2);\n                return;\n            }\n        } else if (type == 'number' || type == 'number_integer' || type == 'number_decimal') {\n            if (!type2Values_1.includes(type2)) {\n                return tooltip.info('The optionItem.type2 parameter is invalid.', '');\n            }\n            if (!isRealNum(value1)) {\n                tooltip.info('<i class=\"fa fa-exclamation-triangle\"></i>', dvText.tooltipInfo3);\n                return;\n            }\n            if (type2 == 'bw' || type2 == 'nb') {\n                if (!isRealNum(value2)) {\n                    tooltip.info('<i class=\"fa fa-exclamation-triangle\"></i>', dvText.tooltipInfo3);\n                    return;\n                }\n                if (Number(value2) < Number(value1)) {\n                    tooltip.info('<i class=\"fa fa-exclamation-triangle\"></i>', dvText.tooltipInfo4);\n                    return;\n                }\n            }\n        } else if (type == 'text_content') {\n            if (!type2Values_2.includes(type2)) {\n                return tooltip.info('The optionItem.type2 parameter is invalid.', '');\n            }\n            if (value1.length == 0) {\n                tooltip.info('<i class=\"fa fa-exclamation-triangle\"></i>', dvText.tooltipInfo5);\n                return;\n            }\n        } else if (type == 'text_length') {\n            if (!type2Values_1.includes(type2)) {\n                return tooltip.info('The optionItem.type2 parameter is invalid.', '');\n            }\n            if (!isRealNum(value1)) {\n                tooltip.info('<i class=\"fa fa-exclamation-triangle\"></i>', dvText.tooltipInfo3);\n                return;\n            }\n            if (type2 == 'bw' || type2 == 'nb') {\n                if (!isRealNum(value2)) {\n                    tooltip.info('<i class=\"fa fa-exclamation-triangle\"></i>', dvText.tooltipInfo3);\n                    return;\n                }\n                if (Number(value2) < Number(value1)) {\n                    tooltip.info('<i class=\"fa fa-exclamation-triangle\"></i>', dvText.tooltipInfo4);\n                    return;\n                }\n            }\n        } else if (type == 'date') {\n            if (!type2Values_3.includes(type2)) {\n                return tooltip.info('The optionItem.type2 parameter is invalid.', '');\n            }\n            if (!isdatetime(value1)) {\n                tooltip.info('<i class=\"fa fa-exclamation-triangle\"></i>', dvText.tooltipInfo6);\n                return;\n            }\n            if (type2 == 'bw' || type2 == 'nb') {\n                if (!isdatetime(value2)) {\n                    tooltip.info('<i class=\"fa fa-exclamation-triangle\"></i>', dvText.tooltipInfo6);\n                    return;\n                }\n                if (diff(value1, value2) > 0) {\n                    tooltip.info('<i class=\"fa fa-exclamation-triangle\"></i>', dvText.tooltipInfo7);\n                    return;\n                }\n            }\n        } else if (type == 'validity') {\n            if (!type2Values_4.includes(type2)) {\n                return tooltip.info('The optionItem.type2 parameter is invalid.', '');\n            }\n        }\n        if (getObjType(remote) != 'boolean') {\n            return tooltip.info('The optionItem.remote parameter is invalid.', '');\n        }\n        if (getObjType(prohibitInput) != 'boolean') {\n            return tooltip.info('The optionItem.prohibitInput parameter is invalid.', '');\n        }\n        if (getObjType(hintShow) != 'boolean') {\n            return tooltip.info('The optionItem.hintShow parameter is invalid.', '');\n        }\n        let {range = Store.luckysheet_select_save[Store.luckysheet_select_save.length - 1], order = getSheetIndex(Store.currentSheetIndex), success} = { ...options };\n        if (getObjType(range) == 'string') {\n            if (!formula.iscelldata(range)) {\n                return tooltip.info('The range parameter is invalid.', '');\n            }\n            let cellrange = formula.getcellrange(range);\n            range = {\n                'row': cellrange.row,\n                'column': cellrange.column\n            };\n        }\n        if (getObjType(range) != 'object' || range.row == null || range.column == null) {\n            return tooltip.info('The range parameter is invalid.', '');\n        }\n        let file = Store.luckysheetfile[order];\n        if (file == null) {\n            return tooltip.info('The order parameter is invalid.', '');\n        }\n        let item = {\n            type: type,\n            type2: type2,\n            value1: value1,\n            value2: value2,\n            checked: checked,\n            remote: remote,\n            prohibitInput: prohibitInput,\n            hintShow: hintShow,\n            hintText: hintText\n        };\n        let currentDataVerification = $.extend(true, {}, file.dataVerification);\n        let data = $.extend(true, [], file.data);\n        if (data.length == 0) {\n            data = sheetmanage.buildGridData(file);\n        }\n        let str = range.row[0], edr = range.row[1], stc = range.column[0], edc = range.column[1];\n        for (let r = str; r <= edr; r++) {\n            for (let c = stc; c <= edc; c++) {\n                currentDataVerification[r + '_' + c] = item;\n                if (type == 'checkbox') {\n                    item.checked ? setcellvalue(r, c, data, item.value1) : setcellvalue(r, c, data, item.value2);\n                }\n            }\n        }\n        if (file.index == Store.currentSheetIndex) {\n            let historyDataVerification = $.extend(true, {}, file.dataVerification);\n            if (type == 'checkbox') {\n                dataVerificationCtrl.refOfCheckbox(historyDataVerification, currentDataVerification, Store.currentSheetIndex, data, range);\n            } else {\n                dataVerificationCtrl.ref(historyDataVerification, currentDataVerification, Store.currentSheetIndex);\n            }\n        } else {\n            file.dataVerification = currentDataVerification;\n            file.data = data;\n        }\n        if (success && typeof success === 'function') {\n            success();\n        }\n    }\n    function deleteDataVerification(options = {}) {\n        let {range = Store.luckysheet_select_save[Store.luckysheet_select_save.length - 1], order = getSheetIndex(Store.currentSheetIndex), success} = { ...options };\n        if (getObjType(range) == 'string') {\n            if (!formula.iscelldata(range)) {\n                return tooltip.info('The range parameter is invalid.', '');\n            }\n            let cellrange = formula.getcellrange(range);\n            range = {\n                'row': cellrange.row,\n                'column': cellrange.column\n            };\n        }\n        if (getObjType(range) != 'object' || range.row == null || range.column == null) {\n            return tooltip.info('The range parameter is invalid.', '');\n        }\n        let file = Store.luckysheetfile[order];\n        if (file == null) {\n            return tooltip.info('The order parameter is invalid.', '');\n        }\n        let currentDataVerification = $.extend(true, {}, file.dataVerification);\n        let str = range.row[0], edr = range.row[1], stc = range.column[0], edc = range.column[1];\n        for (let r = str; r <= edr; r++) {\n            for (let c = stc; c <= edc; c++) {\n                delete currentDataVerification[r + '_' + c];\n            }\n        }\n        if (file.index == Store.currentSheetIndex) {\n            let historyDataVerification = $.extend(true, {}, file.dataVerification);\n            dataVerificationCtrl.ref(historyDataVerification, currentDataVerification, Store.currentSheetIndex);\n        } else {\n            file.dataVerification = currentDataVerification;\n        }\n        if (success && typeof success === 'function') {\n            success();\n        }\n    }\n    function insertImage(src, options = {}) {\n        let {order = getSheetIndex(Store.currentSheetIndex), rowIndex, colIndex, success} = { ...options };\n        let file = Store.luckysheetfile[order];\n        if (file == null) {\n            return tooltip.info('The order parameter is invalid.', '');\n        }\n        if (file.index == Store.currentSheetIndex) {\n            let last = Store.luckysheet_select_save[Store.luckysheet_select_save.length - 1];\n            if (rowIndex == null) {\n                rowIndex = last.row_focus || 0;\n            }\n            if (rowIndex < 0) {\n                rowIndex = 0;\n            }\n            if (rowIndex > Store.visibledatarow.length) {\n                rowIndex = Store.visibledatarow.length;\n            }\n            if (colIndex == null) {\n                colIndex = last.column_focus || 0;\n            }\n            if (colIndex < 0) {\n                colIndex = 0;\n            }\n            if (colIndex > Store.visibledatacolumn.length) {\n                colIndex = Store.visibledatacolumn.length;\n            }\n            let left = colIndex == 0 ? 0 : Store.visibledatacolumn[colIndex - 1];\n            let top = rowIndex == 0 ? 0 : Store.visibledatarow[rowIndex - 1];\n            let image = new Image();\n            image.onload = function () {\n                let width = image.width, height = image.height;\n                let img = {\n                    src: src,\n                    left: left,\n                    top: top,\n                    originWidth: width,\n                    originHeight: height\n                };\n                imageCtrl.addImgItem(img);\n                if (success && typeof success === 'function') {\n                    success();\n                }\n            };\n            image.src = src;\n        } else {\n            let images = file.images || {};\n            let config = file.config;\n            let zoomRatio = file.zoomRatio || 1;\n            let rowheight = file.row;\n            let visibledatarow = file.visibledatarow || [];\n            if (visibledatarow.length === 0) {\n                let rh_height = 0;\n                for (let r = 0; r < rowheight; r++) {\n                    let rowlen = Store.defaultrowlen;\n                    if (config['rowlen'] != null && config['rowlen'][r] != null) {\n                        rowlen = config['rowlen'][r];\n                    }\n                    if (config['rowhidden'] != null && config['rowhidden'][r] != null) {\n                        visibledatarow.push(rh_height);\n                        continue;\n                    }\n                    rh_height += Math.round((rowlen + 1) * zoomRatio);\n                    visibledatarow.push(rh_height);    //行的临时长度分布\n                }\n            }\n            //行的临时长度分布\n            let colwidth = file.column;\n            let visibledatacolumn = file.visibledatacolumn || [];\n            if (visibledatacolumn.length === 0) {\n                let ch_width = 0;\n                for (let c = 0; c < colwidth; c++) {\n                    let firstcolumnlen = Store.defaultcollen;\n                    if (config['columnlen'] != null && config['columnlen'][c] != null) {\n                        firstcolumnlen = config['columnlen'][c];\n                    }\n                    if (config['colhidden'] != null && config['colhidden'][c] != null) {\n                        visibledatacolumn.push(ch_width);\n                        continue;\n                    }\n                    ch_width += Math.round((firstcolumnlen + 1) * zoomRatio);\n                    visibledatacolumn.push(ch_width);    //列的临时长度分布\n                }\n            }\n            //列的临时长度分布\n            if (rowIndex == null) {\n                rowIndex = 0;\n            }\n            if (rowIndex < 0) {\n                rowIndex = 0;\n            }\n            if (rowIndex > visibledatarow.length) {\n                rowIndex = visibledatarow.length;\n            }\n            if (colIndex == null) {\n                colIndex = 0;\n            }\n            if (colIndex < 0) {\n                colIndex = 0;\n            }\n            if (colIndex > visibledatacolumn.length) {\n                colIndex = visibledatacolumn.length;\n            }\n            let left = colIndex == 0 ? 0 : visibledatacolumn[colIndex - 1];\n            let top = rowIndex == 0 ? 0 : visibledatarow[rowIndex - 1];\n            let image = new Image();\n            image.onload = function () {\n                let img = {\n                    src: src,\n                    left: left,\n                    top: top,\n                    originWidth: image.width,\n                    originHeight: image.height\n                };\n                let width, height;\n                let max = 400;\n                if (img.originHeight < img.originWidth) {\n                    height = Math.round(img.originHeight * (max / img.originWidth));\n                    width = max;\n                } else {\n                    width = Math.round(img.originWidth * (max / img.originHeight));\n                    height = max;\n                }\n                let imgItem = $.extend(true, {}, imageCtrl.imgItem);\n                imgItem.src = img.src;\n                imgItem.originWidth = img.originWidth;\n                imgItem.originHeight = img.originHeight;\n                imgItem.default.width = width;\n                imgItem.default.height = height;\n                imgItem.default.left = img.left;\n                imgItem.default.top = img.top;\n                imgItem.crop.width = width;\n                imgItem.crop.height = height;\n                let id = imageCtrl.generateRandomId();\n                images[id] = imgItem;\n                file.images = images;\n                if (success && typeof success === 'function') {\n                    success();\n                }\n            };\n            image.src = src;\n        }\n    }\n    function deleteImage(options = {}) {\n        let {order = getSheetIndex(Store.currentSheetIndex), idList = 'all', success} = { ...options };\n        let file = Store.luckysheetfile[order];\n        if (file == null) {\n            return tooltip.info('The order parameter is invalid.', '');\n        }\n        let images = file.images;\n        if (images == null) {\n            return tooltip.info('The worksheet has no pictures to delete.', '');\n        }\n        if (idList != 'all' && getObjType(idList) != 'array') {\n            return tooltip.info('The idList parameter is invalid.', '');\n        }\n        if (getObjType(idList) == 'array') {\n            idList.forEach(item => {\n                delete images[item];\n            });\n        } else {\n            images = null;\n        }\n        file.images = images;\n        if (file.index == Store.currentSheetIndex) {\n            if (imageCtrl.currentImgId != null && (idList == 'all' || idList.includes(imageCtrl.currentImgId))) {\n                $('#luckysheet-modal-dialog-activeImage').hide();\n                $('#luckysheet-modal-dialog-cropping').hide();\n                $('#luckysheet-modal-dialog-slider-imageCtrl').hide();\n            }\n            imageCtrl.images = images;\n            imageCtrl.allImagesShow();\n            imageCtrl.init();\n        }\n        if (success && typeof success === 'function') {\n            success();\n        }\n    }\n    function getImageOption(options = {}) {\n        let {order = getSheetIndex(Store.currentSheetIndex), success} = { ...options };\n        let file = Store.luckysheetfile[order];\n        if (file == null) {\n            return tooltip.info('The order parameter is invalid.', '');\n        }\n        setTimeout(function () {\n            if (success && typeof success === 'function') {\n                success();\n            }\n        }, 1);\n        return file.images;\n    }\n    function transToCellData(data, options = {}) {\n        let {success} = { ...options };\n        setTimeout(() => {\n            if (success && typeof success === 'function') {\n                success();\n            }\n        }, 0);\n        return sheetmanage.getGridData(data);\n    }\n    function transToData(celldata, options = {}) {\n        let {success} = { ...options };\n        setTimeout(() => {\n            if (success && typeof success === 'function') {\n                success();\n            }\n        }, 0);\n        return sheetmanage.buildGridData({ celldata: celldata });\n    }\n    function toJson() {\n        return Store.toJson();\n    }\n    function changLang(lang = 'zh') {\n        if (![\n                'zh',\n                'en',\n                'es'\n            ].includes(lang)) {\n            return tooltip.info('The lang parameter is invalid.', '');\n        }\n        let options = toJson();\n        options.lang = lang;\n        luckysheet.create(options);\n    }\n    function closeWebsocket() {\n        if (Store.websocket == null) {\n            return;\n        }\n        Store.websocket.close(1000);\n    }\n    function getRangeByTxt(txt) {\n        // 默认取当前第一个范围\n        if (txt == null) {\n            return {\n                column: Store.luckysheet_select_save[Store.luckysheet_select_save.length - 1].column,\n                row: Store.luckysheet_select_save[Store.luckysheet_select_save.length - 1].row\n            };\n        }\n        const range = conditionformat.getRangeByTxt(txt);\n        return {\n            column: range[0].column,\n            row: range[0].row\n        };\n    }\n    function getTxtByRange(range = Store.luckysheet_select_save) {\n        // 单个范围\n        if (getObjType(range) === 'object') {\n            range = [range];\n        }\n        return conditionformat.getTxtByRange(range);\n    }\n\n    function refreshFormula(success) {\n        formula.execFunctionGroupForce(true);\n        luckysheetrefreshgrid();\n        setTimeout(() => {\n            if (success && typeof success === 'function') {\n                success();\n            }\n        });\n    }\n    function refreshMenuButtonFocus(data, r, c, success) {\n        data = data || Store.flowdata;\n        if (r == null && c == null) {\n            /* 获取选取范围 */\n            let last = Store.luckysheet_select_save[Store.luckysheet_select_save.length - 1];\n            r = last.row_focus || last.row[0];\n            c = last.column_focus || last.column[0];\n        }\n        menuButton.menuButtonFocus(data, r, c);\n        setTimeout(() => {\n            if (success && typeof success === 'function') {\n                success();\n            }\n        });\n    }\n    return {\n        getCellValue: getCellValue,\n        setCellValue: setCellValue,\n        clearCell: clearCell,\n        deleteCell: deleteCell,\n        setCellFormat: setCellFormat,\n        find: find,\n        replace: replace,\n        exitEditMode: exitEditMode,\n        enterEditMode: enterEditMode,\n        frozenFirstRow: frozenFirstRow,\n        frozenFirstColumn: frozenFirstColumn,\n        frozenRowRange: frozenRowRange,\n        frozenColumnRange: frozenColumnRange,\n        cancelFrozen: cancelFrozen,\n        setHorizontalFrozen: setHorizontalFrozen,\n        setVerticalFrozen: setVerticalFrozen,\n        setBothFrozen: setBothFrozen,\n        insertRowOrColumn: insertRowOrColumn,\n        insertRow: insertRow,\n        insertColumn: insertColumn,\n        deleteRowOrColumn: deleteRowOrColumn,\n        deleteRow: deleteRow,\n        deleteColumn: deleteColumn,\n        hideRowOrColumn: hideRowOrColumn,\n        showRowOrColumn: showRowOrColumn,\n        hideRow: hideRow,\n        showRow: showRow,\n        hideColumn: hideColumn,\n        showColumn: showColumn,\n        setRowHeight: setRowHeight,\n        setColumnWidth: setColumnWidth,\n        getRowHeight: getRowHeight,\n        getColumnWidth: getColumnWidth,\n        getDefaultRowHeight: getDefaultRowHeight,\n        getDefaultColWidth: getDefaultColWidth,\n        getRange: getRange,\n        getRangeWithFlatten: getRangeWithFlatten,\n        getRangeValuesWithFlatte: getRangeValuesWithFlatte,\n        getRangeAxis: getRangeAxis,\n        getRangeValue: getRangeValue,\n        getRangeHtml: getRangeHtml,\n        getRangeArray: getRangeArray,\n        getRangeJson: getRangeJson,\n        getRangeDiagonal: getRangeDiagonal,\n        getRangeBoolean: getRangeBoolean,\n        setRangeShow: setRangeShow,\n        setRangeValue: setRangeValue,\n        setSingleRangeFormat: setSingleRangeFormat,\n        setRangeFormat: setRangeFormat,\n        setRangeFilter: setRangeFilter,\n        setRangeMerge: setRangeMerge,\n        cancelRangeMerge: cancelRangeMerge,\n        setRangeSort: setRangeSort,\n        setRangeSortMulti: setRangeSortMulti,\n        setRangeConditionalFormatDefault: setRangeConditionalFormatDefault,\n        setRangeConditionalFormat: setRangeConditionalFormat,\n        deleteRangeConditionalFormat: deleteRangeConditionalFormat,\n        clearRange: clearRange,\n        deleteRange: deleteRange,\n        matrixOperation: matrixOperation,\n        matrixCalculation: matrixCalculation,\n        setSheetAdd: setSheetAdd,\n        setSheetDelete: setSheetDelete,\n        setSheetCopy: setSheetCopy,\n        setSheetHide: setSheetHide,\n        setSheetShow: setSheetShow,\n        setSheetActive: setSheetActive,\n        setSheetName: setSheetName,\n        setSheetColor: setSheetColor,\n        setSheetMove: setSheetMove,\n        setSheetOrder: setSheetOrder,\n        setSheetZoom: setSheetZoom,\n        showGridLines: showGridLines,\n        hideGridLines: hideGridLines,\n        refresh: refresh,\n        scroll: scroll,\n        resize: resize,\n        getScreenshot: getScreenshot,\n        setWorkbookName: setWorkbookName,\n        getWorkbookName: getWorkbookName,\n        undo: undo,\n        redo: redo,\n        getAllSheets: getAllSheets,\n        getSheet: getSheet,\n        getSheetData: getSheetData,\n        getConfig: getConfig,\n        setConfig: setConfig,\n        getLuckysheetfile: getLuckysheetfile,\n        setDataVerification: setDataVerification,\n        deleteDataVerification: deleteDataVerification,\n        insertImage: insertImage,\n        deleteImage: deleteImage,\n        getImageOption: getImageOption,\n        transToCellData: transToCellData,\n        transToData: transToData,\n        toJson: toJson,\n        changLang: changLang,\n        closeWebsocket: closeWebsocket,\n        getRangeByTxt: getRangeByTxt,\n        getTxtByRange: getTxtByRange,\n        ///pagerInit: pagerInit,\n        refreshFormula: refreshFormula,\n        refreshMenuButtonFocus: refreshMenuButtonFocus\n    };\n});"]}