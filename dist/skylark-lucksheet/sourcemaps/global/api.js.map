{"version":3,"sources":["global/api.js"],"names":["define","Store","m_util","m_get","locale","method","formula","func_methods","tooltip","json","editor","luckysheetformula","cleargridelement","m_format","m_setdata","m_sort","m_getRowlen","m_getdata","m_refresh","m_extend","m_validate","m_datecontroll","m_border","m_draw","server","menuButton","selection","luckysheetConfigsetting","luckysheetFreezen","luckysheetsizeauto","sheetmanage","conditionformat","m_sheetSearch","m_select","m_constant","m_filter","controlHistory","m_zoom","dataVerificationCtrl","imageCtrl","dayjs","m_updateCell","replaceHtml","getObjType","chatatABC","luckysheetactiveCell","getSheetIndex","getluckysheet_select_save","getluckysheetfile","getRangetxt","genarate","update","setAccuracy","setcellvalue","orderbydata","rowlenByRange","getdatabyselection","getcellvalue","luckysheetrefreshgrid","jfrefreshgrid","jfrefreshgrid_rhcw","luckysheetDeleteCell","luckysheetextendtable","luckysheetdeletetable","isRealNull","valueIsError","isRealNum","isEditMode","hasPartMC","isdatetime","diff","getBorderInfoCompute","luckysheetDrawMain","luckysheet_searcharray","selectHightlightShow","selectIsOverlap","sheetHTML","luckysheetdefaultstyle","createFilterOptions","zoomRefreshView","zoomNumberDomBind","luckysheetupdateCell","setCellValue","row","column","value","options","curv","flowdata","oldValue","JSON","stringify","info","order","currentSheetIndex","isRefresh","success","file","luckysheetfile","createHookFunction","data","$","extend","length","buildGridData","formatList","bg","ff","fc","bl","it","fs","cl","un","vt","ht","mc","tr","tb","rt","qp","toString","delFunctionGroup","Object","cell","f","v","ct","updatecell","m","attr","updateFormatCell","substr","setTimeout","parse","index","find","content","curSheetOrder","isRegularExpression","isWholeWord","isCaseSensitive","type","targetSheetData","result","i","rowArr","j","push","toLowerCase","reg","RegExp","getRegExpStr","test","frozenFirstRow","saveFrozen","scrollTop","row_st","visibledatarow","top","columnHeaderHeight","freezenhorizontaldata","cutVolumn","saveFreezen","freezenverticaldata","cancelFreezenVertical","createAssistCanvas","createFreezenHorizontal","frozenFirstColumn","scrollLeft","col_st","visibledatacolumn","left","rowHeaderWidth","cancelFreezenHorizontal","createFreezenVertical","frozenRowRange","range","locale_frozen","freezen","hasOwnProperty","iscelldata","row_focus","getcellrange","column_focus","alert","noSeletionError","frozenColumnRange","isStringRange","cancelFrozen","insertRowOrColumn","sheetIndex","number","locale_info","parseInt","tipInputNumberLimit","tipInputNumber","deleteRowOrColumn","startIndex","endIndex","hideRowOrColumn","cfgKey","cfg","config","clearjfundo","redo","jfundo","jfredo","saveParam","k","showRowOrColumn","getRange","rangeArr","luckysheet_select_save","rangeItem","temp","getRangeWithFlatten","forEach","ele","rs","cs","r","c","setSingleRangeFormat","curRange","Array","console","log","[object Object]","cancelRangeMerge","cellrange","has_PartMC","s","r1","r2","c1","c2","fv","mc_r","mc_c","cell_clone","spl","curData","curConfig","getAllSheets","item","arr","celldata","getGridData","load","toJson","toJsonOptions","title","val","undefined","getCellValue","return_v","cellData","functionHTMLGenerate","fa","clearCell","deleteCell","move","indexOf","moveType","replace","toUpperCase","setCellFormat","TypeError","borderInfo","rangeType","borderType","color","style","replaceContent","matchCells","sheetData","fileData","exitEditMode","css","is","searchFunctionCell","searchFunctionEnter","luckysheetCellUpdate","hide","enterEditMode","last","row_index","col_index","setHorizontalFrozen","isRange","setVerticalFrozen","setBothFrozen","isCurrentSheet","insertRow","insertColumn","deleteRow","rowStart","rowEnd","deleteColumn","columnStart","columnEnd","hideRow","showRow","hideColumn","showColumn","setRowHeight","rowInfo","len","Number","setColumnWidth","columnInfo","getRowHeight","rowlen","rowlenObj","size","defaultrowlen","getColumnWidth","columnlen","columnlenObj","defaultcollen","getDefaultRowHeight","defaultRowHeight","getDefaultColWidth","defaultColWidth","getRangeValuesWithFlatte","values","getRangeAxis","axisText","getRangeValue","curOrder","getRangeHtml","cdformat","luckysheet_conditionformat_save","hasCF","cf_compute","getComputeMap","checksCF","isSameRow","str_r","end_r","isSameCol","str_c","end_c","borderInfoCompute","rowIndexArr","colIndexArr","includes","d","cpdata","colgroup","sort","span","c_value","match","getStyleByCell","bl_obj","br_obj","bt_obj","bb_obj","bd_r","bd_c","t","linetype","bcolor","b","l","collen","bl_color","bl_style","x","getHtmlBorderStyle","br_color","br_style","bt_color","bt_style","bb_color","bb_style","getRangeArray","dimensional","dataArr","getRangeJson","isFirstRowTitle","locale_drag","noMulti","drag","noPartMerge","getdata","obj","st","getRangeDiagonal","clen","inputCorrect","offsetColumnLessZero","copybyformat","Event","getRangeBoolean","a","bool","event","setRangeShow","show","changeparam","mergeMoveMain","empty","setRangeValue","rowCount","columnCount","setRangeFormat","some","setRangeFilter","filter_select","filter","luckysheet_filter_save","remove","setRangeMerge","isHasMc","isfirst","setRangeSort","noRangeError","hasMc","data_row","mergeError","concat","allParam","RowlChange","setRangeSortMulti","hasTitle","str","sortItem","setRangeConditionalFormatDefault","conditionName","conditionValue","format","textColor","cellColor","conditionformat_Text","conditionRange","conditionValue2","v1","v2","rangeArr1","getRangeByTxt","infoDialog","onlySingleCell","isNaN","conditionValueCanOnly","rangeArr2","pleaseEnterInteger","rule","fileH","historyRules","getHistoryRules","ruleArr","fileC","currentRules","getCurrentRules","ref","allowUpdate","setRangeConditionalFormat","formatValues","leftMin","deleteRangeConditionalFormat","itemIndex","cdformatItem","splice","clearRange","deleteRange","edr","stc","edc","matrixOperation","getdatalen","arr1","stdel","eddel","a1","unshift","repeat","controlHandler","matrixCalculation","numFormat","Math","pow","sqrt","cbrt","jfnqrt","abs","setSheetAdd","lastOrder","sheetObject","generateRandomSheetIndex","calcChain","sheetname","generateRandomSheetName","name","sameName","append","active","colorset","sheetconfig","status","defaultrowNum","defaultcolumnNum","pivotTable","isPivotTable","beforeIndex","beforeObj","insertBefore","afterIndex","afterObj","insertAfter","orders","removeClass","addClass","changeSheetExec","setSheetDelete","noMoreSheet","deleteSheet","setSheetCopy","targetOrder","copyindex","copyjson","generateCopySheetName","reOrderAllSheet","jfredostr","setSheetHide","setSheetShow","setSheetActive","changeSheet","multipleRangeShow","setSheetName","oldtxt","text","setSheetColor","oldcolor","setSheetMove","prevIndex","nextIndex","setSheetOrder","orderList","orderListMap","y","order_x","order_y","preIndex","setSheetZoom","zoom","zoomRatio","showGridLines","hideGridLines","refresh","scroll","targetRow","targetColumn","col_pre","row_pre","resize","getScreenshot","scrollHeight","rh_height","scrollWidth","ch_width","newCanvas","width","ceil","devicePixelRatio","height","ctx_newCanvas","get","getContext","beginPath","moveTo","lineTo","lineWidth","strokeStyle","stroke","closePath","toDataURL","setWorkbookName","getWorkbookName","element","trim","undo","ctr","getSheet","getSheetByIndex","getSheetByName","getSheetData","getConfig","setConfig","getLuckysheetfile","setDataVerification","optionItem","type2","value1","value2","remote","prohibitInput","hintShow","hintText","checked","type2Values_1","type2Values_2","type2Values_3","type2Values_4","dvText","dataVerification","tooltipInfo1","tooltipInfo2","tooltipInfo3","tooltipInfo4","tooltipInfo5","tooltipInfo6","tooltipInfo7","currentDataVerification","historyDataVerification","refOfCheckbox","deleteDataVerification","insertImage","src","rowIndex","colIndex","image","Image","onload","img","originWidth","originHeight","addImgItem","images","rowheight","round","colwidth","firstcolumnlen","imgItem","default","crop","id","generateRandomId","deleteImage","idList","currentImgId","allImagesShow","init","getImageOption","transToCellData","transToData","changLang","lang","luckysheet","create","closeWebsocket","websocket","close","txt","getTxtByRange","pagerInit","sPage","page","pageIndex","total","selectOption","pageSize","showTotal","showSkip","showPN","backFun","refreshFormula","execFunctionGroupForce","refreshMenuButtonFocus","menuButtonFocus"],"mappings":";;;;;;;AAAAA,QACI,WACA,gBACA,iBACA,mBACA,WACA,YACA,iBACA,YACA,SACA,WACA,YACA,qBACA,WACA,YACA,SACA,cACA,YACA,YACA,WACA,aACA,iBACA,WACA,SACA,wBACA,4BACA,2BACA,yCACA,yBACA,wBACA,6BACA,iCACA,6BACA,wBACA,0BACA,wBACA,gCACA,sBACA,sCACA,2BACA,iBACA,6BACD,SAAUC,EAAOC,EAAQC,EAAOC,EAAQC,EAAQC,EAASC,EAAcC,EAASC,EAAMC,EAAQC,EAAmBC,EAAkBC,EAAUC,EAAWC,EAAQC,EAAaC,EAAWC,EAAWC,EAAUC,EAAYC,EAAgBC,EAAUC,EAAQC,EAAQC,EAAYC,EAAWC,EAAyBC,EAAmBC,EAAoBC,EAAaC,EAAiBC,EAAeC,EAAUC,EAAYC,EAAUC,EAAgBC,EAAQC,EAAsBC,EAAWC,EAAOC,GACte,aACA,MAAMC,YAACA,EAAWC,WAAEA,EAAUC,UAAEA,EAASC,qBAAEA,GAAwB3C,GAC7D4C,cAACA,EAAaC,0BAAEA,EAAyBC,kBAAEA,EAAiBC,YAAEA,GAAe9C,GAC7E+C,SAACA,EAAQC,OAAEA,GAAUtC,GACrBuC,YAACA,EAAWC,aAAEA,GAAgBvC,GAC9BwC,YAACA,IAAevC,GAChBwC,cAACA,IAAiBvC,GAClBwC,mBAACA,GAAkBC,aAAEA,IAAgBxC,GACrCyC,sBAACA,GAAqBC,cAAEA,GAAaC,mBAAEA,IAAsB1C,GAC7D2C,qBAACA,GAAoBC,sBAAEA,GAAqBC,sBAAEA,IAAyB5C,GACvE6C,WAACA,GAAUC,aAAEA,GAAYC,UAAEA,GAASC,WAAEA,GAAUC,UAAEA,IAAahD,GAC/DiD,WAACA,GAAUC,KAAEA,IAAQjD,GACrBkD,qBAACA,IAAwBjD,GACzBkD,mBAACA,IAAsBjD,GACvBkD,uBAACA,IAA0BzC,GAC3B0C,qBAACA,GAAoBC,gBAAEA,IAAmB1C,GAC1C2C,UAACA,GAASC,uBAAEA,IAA0B3C,GACtC4C,oBAACA,IAAuB3C,GACxB4C,gBAACA,GAAeC,kBAAEA,IAAqB3C,GACvC4C,qBAACA,IAAwBxC,EAiC/B,SAASyC,GAAaC,EAAKC,EAAQC,EAAOC,MACtC,IAAIC,EAAOtF,EAAMuF,SAASL,GAAKC,GAE/B,MAAMK,EAAWC,KAAKC,UAAUJ,GAChC,IAAKrB,GAAUiB,KAASjB,GAAUkB,GAC9B,OAAO5E,EAAQoF,KAAK,0CAA2C,IAEnE,IAAIC,MAACA,EAAQ/C,EAAc7C,EAAM6F,mBAAkBC,UAAEA,GAAY,EAAIC,QAAEA,OAAgBV,GACnFW,EAAOhG,EAAMiG,eAAeL,GAChC,GAAY,MAARI,EACA,OAAOzF,EAAQoF,KAAK,kCAAmC,IAG3D,IAAKvF,EAAO8F,mBAAmB,mBAAoBhB,EAAKC,EAAQC,EAAOU,GAEnE,OAEJ,IAAIK,EAAOH,EAAKG,KACZL,IACAK,EAAOC,EAAEC,QAAO,KAAUL,EAAKG,OAEhB,GAAfA,EAAKG,SACLH,EAAOtE,EAAY0E,cAAcP,IAGrC,IAAIQ,GAEAC,GAAI,EAEJC,GAAI,EAEJC,GAAI,EAEJC,GAAI,EAEJC,GAAI,EAEJC,GAAI,EAEJC,GAAI,EAEJC,GAAI,EAEJC,GAAI,EAEJC,GAAI,EAEJC,GAAI,EAEJC,GAAI,EAEJC,GAAI,EAIJC,GAAI,EAGJC,GAAI,GAGR,GAAa,MAATnC,GAA4C,GAA3BA,EAAMoC,WAAWlB,OAClCjG,EAAQoH,iBAAiBvC,EAAKC,GAC9B/B,EAAa8B,EAAKC,EAAQgB,EAAMf,QAC7B,GAAIA,aAAiBsC,OAAQ,CAChC,IAAIpC,KACAqC,EAAOxB,EAAKjB,GAAKC,GACjBpB,GAAW4D,KACXA,MAEW,MAAXvC,EAAMwC,GAAwB,MAAXxC,EAAMyC,GACzBvC,EAAKsC,EAAIxC,EAAMwC,EACC,MAAZxC,EAAM0C,KACNxC,EAAKwC,GAAK1C,EAAM0C,IAEpB3B,EAAOzF,EAAkBqH,WAAW7C,EAAKC,EAAQG,GAAM,GAAOa,OAI1C,MAAZf,EAAM0C,KACNxC,EAAKwC,GAAK1C,EAAM0C,IAEL,MAAX1C,EAAMwC,IACNtC,EAAKsC,EAAIxC,EAAMwC,GAEJ,MAAXxC,EAAMyC,EACNvC,EAAKuC,EAAIzC,EAAMyC,EAEfvC,EAAKuC,EAAIF,EAAKE,EAEH,MAAXzC,EAAM4C,IACN1C,EAAK0C,EAAI5C,EAAM4C,GAEnB3H,EAAQoH,iBAAiBvC,EAAKC,GAC9B/B,EAAa8B,EAAKC,EAAQgB,EAAMb,IAGxC,IAAK,IAAI2C,KAAQ7C,EAAO,CACpB,IAAIyC,EAAIzC,EAAM6C,GACVA,KAAQzB,EACRhF,EAAW0G,iBAAiB/B,EAAM8B,EAAMJ,EAAG3C,EAAKA,EAAKC,EAAQA,GAIzDwC,EAAKM,GAAQJ,EAGzB1B,EAAKjB,GAAKC,GAAUwC,MAEiB,KAAjCvC,EAAMoC,WAAWW,OAAO,EAAG,IAA8C,SAAjC/C,EAAMoC,WAAWW,OAAO,EAAG,GACnEhC,EAAOzF,EAAkBqH,WAAW7C,EAAKC,EAAQC,GAAO,GAAOe,MAI3D9F,EAAQoH,iBAAiBvC,EAAKC,GAC9B/B,EAAa8B,EAAKC,EAAQgB,EAAMf,IAI5CgD,WAAW,KAEPhI,EAAO8F,mBAAmB,cAAehB,EAAKC,EAAQM,KAAK4C,MAAM7C,GAAWxF,EAAMuF,SAASL,GAAKC,GAASW,IAC1G,GACCE,EAAKsC,OAAStI,EAAM6F,mBAAqBC,EACzCpC,GAAcyC,IACNjB,KACIA,EACAA,GAEJC,QACIA,EACAA,MAMRa,EAAKG,KAAOA,EAGhBJ,GAA8B,mBAAZA,GAClBA,EAAQI,GA0IhB,SAASoC,GAAKC,EAASnD,MACnB,IAAKmD,GAAsB,GAAXA,EACZ,OAAOjI,EAAQoF,KAAK,yCAA0C,IAElE,IAAI8C,EAAgB5F,EAAc7C,EAAM6F,oBACpC6C,oBAACA,GAAsB,EAAKC,YAAEA,GAAc,EAAKC,gBAAEA,GAAkB,EAAKhD,MAAEA,EAAQ6C,EAAaI,KAAEA,EAAO,SAAYxD,GACtHyD,EAAkB9I,EAAMiG,eAAeL,GAAOO,KAC9C4C,KACJ,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAgBxC,OAAQ0C,IAAK,CAC7C,MAAMC,EAASH,EAAgBE,GAC/B,IAAK,IAAIE,EAAI,EAAGA,EAAID,EAAO3C,OAAQ4C,IAAK,CACpC,MAAMvB,EAAOsB,EAAOC,GACpB,GAAKvB,EAQL,GAFAA,EAAKzC,IAAM8D,EACXrB,EAAKxC,OAAS+D,EACVP,EACIC,EACIJ,EAAQhB,YAAcG,EAAKkB,IAC3BE,EAAOI,KAAKxB,GAGZA,EAAKkB,IAASL,EAAQhB,WAAW4B,eAAiBzB,EAAKkB,GAAMO,eAC7DL,EAAOI,KAAKxB,QAGjB,GAAIe,EAAqB,CAC5B,IAAIW,GAEAA,EADAT,EACM,IAAIU,OAAOhJ,EAAaiJ,aAAaf,GAAU,KAE/C,IAAIc,OAAOhJ,EAAaiJ,aAAaf,GAAU,OAEjDgB,KAAK7B,EAAKkB,KACdE,EAAOI,KAAKxB,QAEb,GAAIiB,EAAiB,CACd,IAAIU,OAAOhJ,EAAaiJ,aAAaf,GAAU,KACjDgB,KAAK7B,EAAKkB,KACdE,EAAOI,KAAKxB,OAEb,CACO,IAAI2B,OAAOhJ,EAAaiJ,aAAaf,GAAU,MACjDgB,KAAK7B,EAAKkB,KACdE,EAAOI,KAAKxB,KAK5B,OAAOoB,EA4EX,SAASU,GAAe7D,GAIpB,GAFAjE,EAAkB+H,WAAW,aAAc9D,IAEtCA,GAASA,GAAS/C,EAAc7C,EAAM6F,mBAAoB,CAC3D,IAAI8D,EAAYvD,EAAE,yBAAyBuD,YACvCC,EAASpF,GAAuBxE,EAAM6J,eAAgBF,IAC3C,GAAXC,IACAA,EAAS,GAEb,IAAIE,EAAM9J,EAAM6J,eAAeD,GAAU,EAAID,EAAY3J,EAAM+J,mBAC3DC,GACAhK,EAAM6J,eAAeD,GACrBA,EAAS,EACTD,EACAhI,EAAkBsI,UAAUjK,EAAM6J,eAAgBD,EAAS,GAC3DE,GAEJnI,EAAkBuI,YAAYF,EAAuBF,EAAK,KAAM,MACnB,MAAzCnI,EAAkBwI,sBAClBxI,EAAkByI,wBAClBzI,EAAkB0I,qBAClB5G,MAEJ9B,EAAkB2I,wBAAwBN,EAAuBF,GACjEnI,EAAkB0I,qBAClB5G,MAGR,SAAS8G,GAAkB3E,GAIvB,GAFAjE,EAAkB+H,WAAW,gBAAiB9D,IAEzCA,GAASA,GAAS/C,EAAc7C,EAAM6F,mBAAoB,CAC3D,IAAI2E,EAAapE,EAAE,yBAAyBoE,aACxCC,EAASjG,GAAuBxE,EAAM0K,kBAAmBF,IAC9C,GAAXC,IACAA,EAAS,GAEb,IAAIE,EAAO3K,EAAM0K,kBAAkBD,GAAU,EAAID,EAAaxK,EAAM4K,eAChET,GACAnK,EAAM0K,kBAAkBD,GACxBA,EAAS,EACTD,EACA7I,EAAkBsI,UAAUjK,EAAM0K,kBAAmBD,EAAS,GAC9DE,GAEJhJ,EAAkBuI,YAAY,KAAM,KAAMC,EAAqBQ,GAChB,MAA3ChJ,EAAkBqI,wBAClBrI,EAAkBkJ,0BAClBlJ,EAAkB0I,qBAClB5G,MAEJ9B,EAAkBmJ,sBAAsBX,EAAqBQ,GAC7DhJ,EAAkB0I,qBAClB5G,MAGR,SAASsH,GAAeC,EAAOpF,GAC3B,MAAMqF,EAAgB9K,IAAS+K,QAC/B,GAAKF,IAAUA,EAAMG,eAAe,cAAiB9K,EAAQ+K,WAAWJ,KAiBxE,GATqB,iBAAVA,GAAsB3K,EAAQ+K,WAAWJ,KAEhDA,GACIK,WAFJL,EAAQ3K,EAAQiL,aAAaN,IAER9F,IAAI,GACrBqG,aAAcP,EAAM7F,OAAO,KAInCxD,EAAkB+H,WAAW,kBAAmB9D,EAAOoF,IAClDpF,GAASA,GAAS/C,EAAc7C,EAAM6F,mBAAoB,CAC3D,IAAI8D,EAAYvD,EAAE,yBAAyBuD,YACvCC,EAASpF,GAAuBxE,EAAM6J,eAAgBF,GACtD0B,EAAYL,EAAMK,UAClBA,EAAYzB,IACZA,EAASyB,IAEE,GAAXzB,IACAA,EAAS,GAEb,IAAIE,EAAM9J,EAAM6J,eAAeD,GAAU,EAAID,EAAY3J,EAAM+J,mBAC3DC,GACAhK,EAAM6J,eAAeD,GACrBA,EAAS,EACTD,EACAhI,EAAkBsI,UAAUjK,EAAM6J,eAAgBD,EAAS,GAC3DE,GAEJnI,EAAkBuI,YAAYF,EAAuBF,EAAK,KAAM,MACnB,MAAzCnI,EAAkBwI,sBAClBxI,EAAkByI,wBAClBzI,EAAkB0I,qBAClB5G,MAEJ9B,EAAkB2I,wBAAwBN,EAAuBF,GACjEnI,EAAkB0I,qBAClB5G,WA1CIS,KACAsH,MAAMP,EAAcQ,iBAEpBlL,EAAQoF,KAAKsF,EAAcQ,gBAAiB,IA0CxD,SAASC,GAAkBV,EAAOpF,GAC9B,MAAMqF,EAAgB9K,IAAS+K,QAC/B,IAAIS,EAAiC,iBAAVX,GAAsB3K,EAAQ+K,WAAWJ,GACpE,GAAKA,IAAUA,EAAMG,eAAe,iBAAoBQ,IAiBxD,GATIA,IAEAX,GACIK,WAFJL,EAAQ3K,EAAQiL,aAAaN,IAER9F,IAAI,GACrBqG,aAAcP,EAAM7F,OAAO,KAInCxD,EAAkB+H,WAAW,qBAAsB9D,EAAOoF,IACrDpF,GAASA,GAAS/C,EAAc7C,EAAM6F,mBAAoB,CAC3D,IAAI2E,EAAapE,EAAE,yBAAyBoE,aACxCC,EAASjG,GAAuBxE,EAAM0K,kBAAmBF,GACzDe,EAAeP,EAAMO,aACrBA,EAAed,IACfA,EAASc,IAEE,GAAXd,IACAA,EAAS,GAEb,IAAIE,EAAO3K,EAAM0K,kBAAkBD,GAAU,EAAID,EAAaxK,EAAM4K,eAChET,GACAnK,EAAM0K,kBAAkBD,GACxBA,EAAS,EACTD,EACA7I,EAAkBsI,UAAUjK,EAAM0K,kBAAmBD,EAAS,GAC9DE,GAEJhJ,EAAkBuI,YAAY,KAAM,KAAMC,EAAqBQ,GAChB,MAA3ChJ,EAAkBqI,wBAClBrI,EAAkBkJ,0BAClBlJ,EAAkB0I,qBAClB5G,MAEJ9B,EAAkBmJ,sBAAsBX,EAAqBQ,GAC7DhJ,EAAkB0I,qBAClB5G,WA1CIS,KACAsH,MAAMP,EAAcQ,iBAEpBlL,EAAQoF,KAAKsF,EAAcQ,gBAAiB,IA0CxD,SAASG,GAAahG,GAClBjE,EAAkB+H,WAAW,gBAAiB9D,GAEzCA,GAASA,GAAS/C,EAAc7C,EAAM6F,qBACM,MAAzClE,EAAkBwI,qBAClBxI,EAAkByI,wBAEyB,MAA3CzI,EAAkBqI,uBAClBrI,EAAkBkJ,0BAEtBlJ,EAAkB0I,qBAClB5G,MA6IR,SAASoI,GAAkBhD,EAAMP,EAAQ,EAAGjD,MACxC,IAAKpB,GAAUqE,GACX,OAAO/H,EAAQoF,KAAK,kCAAmC,IAE3D,IAsBImG,EAtBArD,EAAgB5F,EAAc7C,EAAM6F,oBACpCkG,OAACA,EAAS,EAACnG,MAAEA,EAAQ6C,EAAa1C,QAAEA,OAAgBV,GAEpD2G,EADU7L,IACYwF,KACrB1B,GAAU8H,IAQfA,EAASE,SAASF,IACL,GAAKA,EAAS,IACnB7H,KACAsH,MAAMQ,EAAYE,qBAElB3L,EAAQoF,KAAKqG,EAAYE,oBAAqB,KAMlDtG,GACI5F,EAAMiG,eAAeL,KACrBkG,EAAa9L,EAAMiG,eAAeL,GAAO0C,OAGjDzE,GAAsBgF,EAAMP,EAAOyD,EAAQ,UAAWD,GAClD/F,GAA8B,mBAAZA,GAClBA,KAzBI7B,KACAsH,MAAMQ,EAAYG,gBAElB5L,EAAQoF,KAAKqG,EAAYG,eAAgB,IA+BrD,SAASC,GAAkBvD,EAAMwD,EAAYC,EAAUjH,MACnD,IAAKpB,GAAUoI,KAAgBpI,GAAUqI,GACrC,OAAO/L,EAAQoF,KAAK,iEAAkE,IAE1F,IAEImG,EAFArD,EAAgB5F,EAAc7C,EAAM6F,oBACpCD,MAACA,EAAQ6C,EAAa1C,QAAEA,OAAgBV,GAExCO,GACI5F,EAAMiG,eAAeL,KACrBkG,EAAa9L,EAAMiG,eAAeL,GAAO0C,OAGjDxE,GAAsB+E,EAAMwD,EAAYC,EAAUR,GAC9C/F,GAA8B,mBAAZA,GAClBA,IASR,SAASwG,GAAgB1D,EAAMwD,EAAYC,EAAUjH,MACjD,IAAKpB,GAAUoI,KAAgBpI,GAAUqI,GACrC,OAAO/L,EAAQoF,KAAK,iEAAkE,IAE1F,IAAI8C,EAAgB5F,EAAc7C,EAAM6F,oBACpCD,MAACA,EAAQ6C,EAAa1C,QAAEA,OAAgBV,GACxCW,EAAOhG,EAAMiG,eAAeL,GAC5B4G,EAAkB,QAAT3D,EAAiB,YAAc,YACxC4D,EAAMrG,EAAEC,QAAO,KAAUL,EAAK0G,QACf,MAAfD,EAAID,KACJC,EAAID,OAER,IAAK,IAAIxD,EAAIqD,EAAYrD,GAAKsD,EAAUtD,IACpCyD,EAAID,GAAQxD,GAAK,EAGrB,GAAIhJ,EAAM2M,YAAa,CACnB,IAAIC,KACJA,EAAW,KAAa,QAAT/D,EAAiB,cAAgB,cAChD+D,EAAiB,WAAI5G,EAAKsC,MAC1BsE,EAAa,OAAIxG,EAAEC,QAAO,KAAUL,EAAK0G,QACzCE,EAAgB,UAAIH,EACpBzM,EAAM6M,OAAOvG,OAAS,EACtBtG,EAAM8M,OAAO3D,KAAKyD,GAEtB5M,EAAMiG,eAAeL,GAAO8G,OAASD,EACrClL,EAAOwL,UAAU,KAAM/G,EAAKsC,MAAOmE,EAAID,IAAWQ,EAAKR,IAEnD5G,GAAS6C,IAETzI,EAAM0M,OAASD,EACf9I,GAAmB3D,EAAMuF,SAASe,OAAQtG,EAAMuF,SAAS,GAAGe,SAE5DP,GAA8B,mBAAZA,GAClBA,IAGR,SAASkH,GAAgBpE,EAAMwD,EAAYC,EAAUjH,MACjD,IAAKpB,GAAUoI,KAAgBpI,GAAUqI,GACrC,OAAO/L,EAAQoF,KAAK,iEAAkE,IAE1F,IAAI8C,EAAgB5F,EAAc7C,EAAM6F,oBACpCD,MAACA,EAAQ6C,EAAa1C,QAAEA,OAAgBV,GACxCW,EAAOhG,EAAMiG,eAAeL,GAC5B4G,EAAkB,QAAT3D,EAAiB,YAAc,YACxC4D,EAAMrG,EAAEC,QAAO,KAAUL,EAAK0G,QAClC,GAAmB,MAAfD,EAAID,GAAR,CAGA,IAAK,IAAIxD,EAAIqD,EAAYrD,GAAKsD,EAAUtD,WAC7ByD,EAAID,GAAQxD,GAGvB,GAAIhJ,EAAM2M,YAAa,CACnB,IAAIC,KACJA,EAAW,KAAa,QAAT/D,EAAiB,cAAgB,cAChD+D,EAAiB,WAAI5G,EAAKsC,MAC1BsE,EAAa,OAAIxG,EAAEC,QAAO,KAAUL,EAAK0G,QACzCE,EAAgB,UAAIH,EACpBzM,EAAM6M,OAAOvG,OAAS,EACtBtG,EAAM8M,OAAO3D,KAAKyD,GAGtB5M,EAAMiG,eAAeL,GAAO8G,OAAS1M,EAAM0M,OAC3CnL,EAAOwL,UAAU,KAAM/G,EAAKsC,MAAOmE,EAAID,IAAWQ,EAAKR,IAEnD5G,IAAU6C,IACVzI,EAAM0M,OAASD,EACf9I,GAAmB3D,EAAMuF,SAASe,OAAQtG,EAAMuF,SAAS,GAAGe,SAE5DP,GAA8B,mBAAZA,GAClBA,KAiJR,SAASmH,KACL,IAAIC,EAAWnN,EAAMoN,uBACjBrE,KACJ,IAAK,IAAIC,EAAI,EAAGA,EAAImE,EAAS7G,OAAQ0C,IAAK,CACtC,IAAIqE,EAAYF,EAASnE,GACrBsE,GACApI,IAAKmI,EAAUnI,IACfC,OAAQkI,EAAUlI,QAEtB4D,EAAOI,KAAKmE,GAEhB,OAAOvE,EAEX,SAASwE,GAAoBvC,GAEzB,IAAIjC,KAeJ,OAhBAiC,EAAQA,GAASkC,MAEXM,QAAQC,IAEV,IAAIC,EAAKD,EAAIvI,IACTyI,EAAKF,EAAItI,OACb,IAAK,IAAIyI,EAAIF,EAAG,GAAIE,GAAKF,EAAG,GAAIE,IAC5B,IAAK,IAAIC,EAAIF,EAAG,GAAIE,GAAKF,EAAG,GAAIE,IAE5B9E,EAAOI,MACHyE,EAAAA,EACAC,EAAAA,MAKT9E,EA80BX,SAAS+E,GAAqB7F,EAAM7C,EAAOC,MACvC,IAAIoD,EAAgB5F,EAAc7C,EAAM6F,mBACpCkI,EAAW/N,EAAMoN,uBAAuBpN,EAAMoN,uBAAuB9G,OAAS,IAC9E0E,MAACA,EAAQ+C,EAAQnI,MAAEA,EAAQ6C,OAAsBpD,GACrD,IAAK4C,EAED,OADA1H,EAAQoF,KAAK,8CAA+C,IACrD,QAEX,GAAIqF,aAAiBgD,MAEjB,OADAzN,EAAQoF,KAAK,kDAAmD,IACzD,QAEX,GAAyB,UAArBjD,EAAWsI,GAAoB,CAC/B,IAAK3K,EAAQ+K,WAAWJ,GAEpB,OADAzK,EAAQoF,KAAK,kCAAmC,IACzC,QAEXqF,EAAQ3K,EAAQiL,aAAaN,GAEjC,GAAyB,UAArBtI,EAAWsI,IAAmC,MAAbA,EAAM9F,KAA+B,MAAhB8F,EAAM7F,OAE5D,OADA5E,EAAQoF,KAAK,kCAAmC,IACzC,QAEX,IAAK,IAAIiI,EAAI5C,EAAM9F,IAAI,GAAI0I,GAAK5C,EAAM9F,IAAI,GAAI0I,IAC1C,IAAK,IAAIC,EAAI7C,EAAM7F,OAAO,GAAI0I,GAAK7C,EAAM7F,OAAO,GAAI0I,IAChDI,QAAQC,IAAI,IAAKN,GACjBK,QAAQC,IAAI,IAAKL,GACjB5I,GAAa2I,EAAGC,GAAKM,CAAClG,GAAO7C,IACzBQ,MAAOA,EACPE,WAAW,IAiT3B,SAASsI,GAAiB/I,MACtB,IAAI0I,EAAW/N,EAAMoN,uBAAwB3E,EAAgB5F,EAAc7C,EAAM6F,oBAC7EmF,MAACA,EAAQ+C,EAAQnI,MAAEA,EAAQ6C,EAAa1C,QAAEA,OAAgBV,GAC1DW,EAAOhG,EAAMiG,eAAeL,GAAQ6G,EAAMrG,EAAEC,QAAO,KAAUL,EAAK0G,QAASvG,EAAOC,EAAEC,QAAO,KAAUL,EAAKG,MAI9G,GAHmB,GAAfA,EAAKG,SACLH,EAAOC,EAAEC,QAAO,KAAUxE,EAAY0E,cAAcP,KAE/B,UAArBtD,EAAWsI,GAAoB,CAC/B,IAAK3K,EAAQ+K,WAAWJ,GACpB,OAAOzK,EAAQoF,KAAK,6BAA8B,IAEtD,IAAI0I,EAAYhO,EAAQiL,aAAaN,GACrCA,IACQ9F,IAAOmJ,EAAUnJ,IACjBC,OAAUkJ,EAAUlJ,cAEzB,GAAyB,UAArBzC,EAAWsI,GAAoB,CACtC,IAAKA,EAAMG,eAAe,SAAWH,EAAMG,eAAe,UACtD,OAAO5K,EAAQoF,KAAK,6BAA8B,IAEtDqF,IACQ9F,IAAO8F,EAAM9F,IACbC,OAAU6F,EAAM7F,SAI5B,GAAIT,GAAgBsG,GAChB,OAAOzK,EAAQoF,KAAK,iCAAkC,IAG1D,GAAoB,MAAhB8G,EAAW,MAAW,CACtB,IAAI6B,GAAa,EACjB,IAAK,IAAIC,EAAI,EAAGA,EAAIvD,EAAM1E,OAAQiI,IAAK,CACnC,IAAIC,EAAKxD,EAAMuD,GAAGrJ,IAAI,GAAIuJ,EAAKzD,EAAMuD,GAAGrJ,IAAI,GACxCwJ,EAAK1D,EAAMuD,GAAGpJ,OAAO,GAAIwJ,EAAK3D,EAAMuD,GAAGpJ,OAAO,GAElD,GADAmJ,EAAanK,GAAUsI,EAAK+B,EAAIC,EAAIC,EAAIC,GAEpC,MAGR,GAAIL,EACA,OAAO/N,EAAQoF,KAAK,0DAA2D,IAGvF,IAAK,IAAIqD,EAAI,EAAGA,EAAIgC,EAAM1E,OAAQ0C,IAAK,CACnC,IAAIwF,EAAKxD,EAAMhC,GAAG9D,IAAI,GAAIuJ,EAAKzD,EAAMhC,GAAG9D,IAAI,GACxCwJ,EAAK1D,EAAMhC,GAAG7D,OAAO,GAAIwJ,EAAK3D,EAAMhC,GAAG7D,OAAO,GAClD,GAAIqJ,GAAMC,GAAMC,GAAMC,EAClB,SAEJ,IAAIC,KACJ,IAAK,IAAIhB,EAAIY,EAAIZ,GAAKa,EAAIb,IACtB,IAAK,IAAIC,EAAIa,EAAIb,GAAKc,EAAId,IAAK,CAC3B,IAAIlG,EAAOxB,EAAKyH,GAAGC,GACnB,GAAY,MAARlG,GAA2B,MAAXA,EAAKR,GAAY,CACjC,IAAI0H,EAAOlH,EAAKR,GAAGyG,EAAGkB,EAAOnH,EAAKR,GAAG0G,EACrC,GAAI,OAAQlG,EAAKR,UACNQ,EAAKR,UACLsF,EAAW,MAAEoC,EAAO,IAAMC,GACjCF,EAAGC,EAAO,IAAMC,GAAQ1I,EAAEC,QAAO,KAAUsB,OACxC,CAEH,IAAIoH,EAAatJ,KAAK4C,MAAM5C,KAAKC,UAAUkJ,EAAGC,EAAO,IAAMC,YACpDC,EAAWlH,SACXkH,EAAW/G,SACX+G,EAAWjH,UACXiH,EAAWnH,SACXmH,EAAWC,IAClB7I,EAAKyH,GAAGC,GAAKkB,KAM7BnJ,GAAS6C,GACLzI,EAAM2M,cACN3M,EAAM6M,OAAOvG,OAAS,EACtBtG,EAAM8M,OAAO3D,MACTN,KAAQ,cACRiD,WAAc9F,EAAKsC,MACnBnC,KAAQC,EAAEC,QAAO,KAAUL,EAAKG,MAChC8I,QAAW9I,EACX6E,MAASA,EACT0B,OAAUtG,EAAEC,QAAO,KAAUL,EAAK0G,QAClCwC,UAAazC,KAGrBzM,EAAM2M,aAAc,EACpBjJ,GAAcyC,EAAM6E,GAASyB,IAAOA,IACpCzM,EAAM2M,aAAc,IAEpB3G,EAAKG,KAAOA,EACZH,EAAK0G,OAASD,GAurDtB,SAAS0C,KACL,IAAIhJ,EAAOC,EAAEC,QAAO,KAAUrG,EAAMiG,gBAQpC,OAPAE,EAAKqH,QAAQ,CAAC4B,EAAM9G,EAAO+G,KACN,MAAbD,EAAKjJ,MAAgBiJ,EAAKjJ,KAAKG,OAAS,IACxC8I,EAAKE,SAAWzN,EAAY0N,YAAYH,EAAKjJ,cAE1CiJ,EAAKI,YACLJ,EAAKlE,UAET/E,EAqfX,SAASsJ,KACL,MAAMC,EAAgB1P,EAAM0P,cAY5B,OAVAA,EAAcC,MAAQvJ,EAAE,iCAAiCwJ,MACzDF,EAAcvJ,KAAOgJ,KAErBpM,IAAoByK,QAAQ,CAACxH,EAAMsC,UACduH,GAAb7J,EAAKG,OAGTuJ,EAAcvJ,KAAKmC,GAAOpD,IAAgC,UAA1BxC,EAAWsD,EAAKG,MAAoBH,EAAKG,KAAKG,OAAS,EACvFoJ,EAAcvJ,KAAKmC,GAAOnD,OAAsC,UAA7BzC,EAAWsD,EAAKG,KAAK,IAAkBH,EAAKG,KAAK,GAAGG,OAAS,KAE7FoJ,EA2FX,OACII,aAjjJJ,SAAsB5K,EAAKC,EAAQE,MAC/B,IAAKpB,GAAUiB,KAASjB,GAAUkB,GAC9B,OAAO5E,EAAQoF,KAAK,uDAAwD,IAEhF,IAIIoK,EAJAtH,EAAgB5F,EAAc7C,EAAM6F,oBACpCgD,KAACA,EAAO,IAAGjD,MAAEA,EAAQ6C,OAAsBpD,GAE3C2K,EADkBhQ,EAAMiG,eAAeL,GAAOO,KACnBjB,GAAKC,GAepC,MAb4B,UAAxBzC,EAAWsN,KACXD,EAAWC,EAASnH,GACR,KAARA,GAA2B,MAAZkH,EACfA,EAAW1P,EAAQ4P,qBAAqBF,GACzB,KAARlH,EACPkH,EAAWC,EAAY,EAChBA,GAAYA,EAASlI,IAAwB,cAAlBkI,EAASlI,GAAGoI,KAC9CH,EAAWC,EAAShI,SAGZ6H,GAAZE,IACAA,EAAW,MAERA,GA4hJP9K,aAAcA,GACdkL,UA34IJ,SAAmBjL,EAAKC,EAAQE,MAC5B,IAAKpB,GAAUiB,KAASjB,GAAUkB,GAC9B,OAAO5E,EAAQoF,KAAK,wDAAyD,IAEjF,IAAI8C,EAAgB5F,EAAc7C,EAAM6F,oBACpCD,MAACA,EAAQ6C,EAAa1C,QAAEA,OAAgBV,GACxCyD,EAAkB1C,EAAEC,QAAO,KAAUrG,EAAMiG,eAAeL,GAAOO,MACjEwB,EAAOmB,EAAgB5D,GAAKC,GACR,UAApBzC,EAAWiF,WACJA,EAAQ,SACRA,EAAQ,EACE,MAAbA,EAAQ,WACDA,EAAQ,EACftH,EAAQoH,iBAAiBvC,EAAKC,EAAQS,UAC/B+B,EAAU,MAGrBA,EAAO,KAGP/B,IAAU6C,EACV/E,GAAcoF,IACN5D,KACIA,EACAA,GAEJC,QACIA,EACAA,MAIZnF,EAAMiG,eAAeL,GAAOO,KAAO2C,EAEnC/C,GAA8B,mBAAZA,GAClBA,EAAQ4B,IAy2IZyI,WAt2IJ,SAAoBC,EAAMnL,EAAKC,EAAQE,MAKnC,IAAKgL,IAHD,OACA,MAEmBC,QAAQD,GAAQ,EACnC,OAAO9P,EAAQoF,KAAK,kFAAmF,IAE3G,IAAK1B,GAAUiB,KAASjB,GAAUkB,GAC9B,OAAO5E,EAAQoF,KAAK,wDAAyD,IAEjF,IAIImG,EAJArD,EAAgB5F,EAAc7C,EAAM6F,oBACpCD,MAACA,EAAQ6C,EAAa1C,QAAEA,OAAgBV,GACxCkL,EAAW,OAASF,EAAKG,QAAQH,EAAK,GAAIA,EAAK,GAAGI,eAGlD7K,GACI5F,EAAMiG,eAAeL,KACrBkG,EAAa9L,EAAMiG,eAAeL,GAAO0C,OAGjD1E,GAAqB2M,EAAUrL,EAAKA,EAAKC,EAAQA,EAAQ2G,GACrD/F,GAA8B,mBAAZA,GAClBA,KAg1IJ2K,cA70IJ,SAAuBxL,EAAKC,EAAQ8C,EAAM7C,EAAOC,MAC7C,IAAKpB,GAAUiB,KAASjB,GAAUkB,GAC9B,OAAO5E,EAAQoF,KAAK,uDAAwD,IAEhF,IAAKsC,EACD,OAAO1H,EAAQoF,KAAK,8CAA+C,IAEvE,IAAI8C,EAAgB5F,EAAc7C,EAAM6F,oBACpCD,MAACA,EAAQ6C,EAAa1C,QAAEA,OAAgBV,GACxCW,EAAOhG,EAAMiG,eAAeL,GAChC,GAAY,MAARI,EACA,OAAOzF,EAAQoF,KAAK,kCAAmC,IAE3D,IAAImD,EAAkB1C,EAAEC,QAAO,KAAUL,EAAKG,MAChB,GAA1B2C,EAAgBxC,SAChBwC,EAAkBjH,EAAY0E,cAAcP,IAEhD,IAAIgK,EAAWlH,EAAgB5D,GAAKC,OAChCsH,EAAMrG,EAAEC,QAAO,KAAUL,EAAK0G,QAElC,KAAY,MAARzE,GAAkB7C,GAAUA,EAAM+F,eAAe,OAAU/F,EAAM+F,eAAe,MAChF,OAAO,IAAIwF,UAAU,+EAEzB,GAAY,MAAR1I,EAAc,CACW,MAArBwE,EAAgB,aAChBA,EAAgB,eAEpB,IAAImE,GACAC,UAAW,QACXC,WAAY,aACZC,MAAO,OACPC,MAAO,IACPhG,QACQ7F,QACIA,EACAA,GAEJD,KACIA,EACAA,QAGTE,GAEPqH,EAAgB,WAAEtD,KAAKyH,QAEvBZ,EAAS/H,GAAQ7C,EAErB0D,EAAgB5D,GAAKC,GAAU6K,EAE3BhK,EAAKsC,OAAStI,EAAM6F,mBACpBG,EAAK0G,OAASD,EACdzM,EAAM0M,OAASD,EACf/I,GAAcoF,IACN5D,KACIA,EACAA,GAEJC,QACIA,EACAA,QAIZa,EAAK0G,OAASD,EACdzG,EAAKG,KAAO2C,GAEZ/C,GAA8B,mBAAZA,GAClBA,EAAQiK,IA0wIZzH,KAAMA,GACNiI,QAjtIJ,SAAiBhI,EAASyI,EAAgB5L,MACtC,IAAI6L,EAAa3I,GAAKC,EAASnD,GAC3BoD,EAAgB5F,EAAc7C,EAAM6F,oBACpCD,MACAA,EAAQ6C,OACHpD,GACLW,EAAOhG,EAAMiG,eAAeL,GAChC,GAAY,MAARI,EACA,OAAOzF,EAAQoF,KAAK,kCAAmC,IAE3D,IAAIwL,EAAY/K,EAAEC,QAAO,KAAUL,EAAKG,MACxC+K,EAAW1D,QAAQ7F,IACfA,EAAKK,EAAIiJ,EACThM,GAAa0C,EAAKzC,IAAKyC,EAAKxC,OAAQ8L,GAChCrL,MAAOA,EACPE,WAAW,MAGnB,IAAIsL,EAAWhL,EAAEC,QAAO,KAAUL,EAAKG,MAUvC,OATAH,EAAKG,KAAKG,OAAS,EACnBN,EAAKG,KAAKgD,QAAQgI,GACdnL,EAAKsC,OAAStI,EAAM6F,mBACpBnC,GAAc0N,OAAUvB,OAAWA,GAAW,GAAM,GAExDpM,KACI4B,EAAQU,SAAsC,mBAApBV,EAAQU,SAClCV,EAAQU,QAAQmL,GAEbA,GAsrIPG,aAprIJ,SAAsBhM,MACd4G,SAAS7F,EAAE,yBAAyBkL,IAAI,QAAU,IAC9ClL,EAAE,gCAAgCmL,GAAG,aAA6C,MAA9BlR,EAAQmR,mBAC5DnR,EAAQoR,oBAAoBrL,EAAE,gCAAgCmC,KAAK,4CAEnElI,EAAQ0H,WAAW/H,EAAM0R,qBAAqB,GAAI1R,EAAM0R,qBAAqB,IAC7E1R,EAAMoN,yBACElI,KACIlF,EAAM0R,qBAAqB,GAC3B1R,EAAM0R,qBAAqB,IAE/BvM,QACInF,EAAM0R,qBAAqB,GAC3B1R,EAAM0R,qBAAqB,IAE/BrG,UAAarL,EAAM0R,qBAAqB,GACxCnG,aAAgBvL,EAAM0R,qBAAqB,MAInDtL,EAAE,mCAAmCmL,GAAG,aACxCnL,EAAE,mCAAmCuL,OAGrCvL,EAAE,0CAA0CmL,GAAG,aAC/CnL,EAAE,0CAA0CuL,QAGhDtM,EAAQU,SAAsC,mBAApBV,EAAQU,SAClCV,EAAQU,WAwpIZ6L,cArpIJ,SAAuBvM,MACnB,IAAIe,EAAE,sCAAsCmL,GAAG,YAA/C,CAEO,GAAInL,EAAE,6BAA6BmL,GAAG,YAAa,CACtD,IAAIM,EAAO7R,EAAMoN,uBAAuBpN,EAAMoN,uBAAuB9G,OAAS,GAC1EwL,EAAYD,EAAgB,UAAGE,EAAYF,EAAmB,aAClE7M,GAAqB8M,EAAWC,EAAW/R,EAAMuF,UAEjDF,EAAQU,SAAsC,mBAApBV,EAAQU,SAClCV,EAAQU,YA6oIZ0D,eAAgBA,GAChBc,kBAAmBA,GACnBQ,eAAgBA,GAChBW,kBAAmBA,GACnBE,aAAcA,GACdoG,oBAt+HJ,SAA6BC,EAAS5M,MAClC,IAAIoD,EAAgB5F,EAAc7C,EAAM6F,oBACpCmF,MAACA,EAAKpF,MAAEA,EAAQ6C,EAAa1C,QAAEA,OAAgBV,GAEnDuG,GAAahG,GACRqM,EAIDlH,GAAeC,EAAOpF,GAHtB6D,GAAe7D,GAKfG,GAA8B,mBAAZA,GAClBA,KA29HJmM,kBAx9HJ,SAA2BD,EAAS5M,MAChC,IAAIoD,EAAgB5F,EAAc7C,EAAM6F,oBACpCmF,MAACA,EAAKpF,MAAEA,EAAQ6C,EAAa1C,QAAEA,OAAgBV,GAEnDuG,GAAahG,GACRqM,EAGDvG,GAAkBV,EAAOpF,GAFzB2E,GAAkB3E,GAIlBG,GAA8B,mBAAZA,GAClBA,KA88HJoM,cA38HJ,SAAuBF,EAAS5M,MAC5B,IAAIoD,EAAgB5F,EAAc7C,EAAM6F,oBACpCmF,MAACA,EAAKpF,MAAEA,EAAQ6C,EAAa1C,QAAEA,OAAgBV,GAC/C+M,GAAkBxM,GAASA,GAAS/C,EAAc7C,EAAM6F,mBAC5D,MAAMoF,EAAgB9K,IAAS+K,QAI/B,GAFAU,GAAahG,GAERqM,EAqCE,CAGHtQ,EAAkB+H,WAAW,iBAAkB9D,EAAOoF,GACtD,IAAIW,EAAiC,iBAAVX,GAAsB3K,EAAQ+K,WAAWJ,GACpE,GAAIoH,EAAgB,CAChB,KAAMpH,GAAWA,EAAMG,eAAe,iBAAmBH,EAAMG,eAAe,cAAmBQ,GAM7F,YALIzH,KACAsH,MAAMP,EAAcQ,iBAEpBlL,EAAQoF,KAAKsF,EAAcQ,gBAAiB,KAIhDE,IAEAX,GACIK,WAFJL,EAAQ3K,EAAQiL,aAAaN,IAER9F,IAAI,GACrBqG,aAAcP,EAAM7F,OAAO,KAGnC,IAAIwE,EAAYvD,EAAE,yBAAyBuD,YACvCC,EAASpF,GAAuBxE,EAAM6J,eAAgBF,GACtD0B,EAAYL,EAAMK,UAClBA,EAAYzB,IACZA,EAASyB,IAEE,GAAXzB,IACAA,EAAS,GAEb,IAAIE,EAAM9J,EAAM6J,eAAeD,GAAU,EAAID,EAAY3J,EAAM+J,mBAC3DC,GACAhK,EAAM6J,eAAeD,GACrBA,EAAS,EACTD,EACAhI,EAAkBsI,UAAUjK,EAAM6J,eAAgBD,EAAS,GAC3DE,GAEJnI,EAAkBuI,YAAYF,EAAuBF,EAAK,KAAM,MAChEnI,EAAkB2I,wBAAwBN,EAAuBF,GACjE,IAAIU,EAAapE,EAAE,yBAAyBoE,aACxCC,EAASjG,GAAuBxE,EAAM0K,kBAAmBF,GACzDe,EAAeP,EAAMO,aACrBA,EAAed,IACfA,EAASc,IAEE,GAAXd,IACAA,EAAS,GAEb,IAAIE,EAAO3K,EAAM0K,kBAAkBD,GAAU,EAAID,EAAaxK,EAAM4K,eAChET,GACAnK,EAAM0K,kBAAkBD,GACxBA,EAAS,EACTD,EACA7I,EAAkBsI,UAAUjK,EAAM0K,kBAAmBD,EAAS,GAC9DE,GAEJhJ,EAAkBuI,YAAY,KAAM,KAAMC,EAAqBQ,GAC/DhJ,EAAkBmJ,sBAAsBX,EAAqBQ,GAC7DhJ,EAAkB0I,qBAClB5G,WA9FJ,GADA9B,EAAkB+H,WAAW,YAAa9D,GACtCwM,EAAgB,CAChB,IAAIzI,EAAYvD,EAAE,yBAAyBuD,YACvCC,EAASpF,GAAuBxE,EAAM6J,eAAgBF,IAC3C,GAAXC,IACAA,EAAS,GAEb,IAAIE,EAAM9J,EAAM6J,eAAeD,GAAU,EAAID,EAAY3J,EAAM+J,mBAC3DC,GACAhK,EAAM6J,eAAeD,GACrBA,EAAS,EACTD,EACAhI,EAAkBsI,UAAUjK,EAAM6J,eAAgBD,EAAS,GAC3DE,GAEJnI,EAAkBuI,YAAYF,EAAuBF,EAAK,KAAM,MAChEnI,EAAkB2I,wBAAwBN,EAAuBF,GACjE,IAAIU,EAAapE,EAAE,yBAAyBoE,aACxCC,EAASjG,GAAuBxE,EAAM0K,kBAAmBF,IAC9C,GAAXC,IACAA,EAAS,GAEb,IAAIE,EAAO3K,EAAM0K,kBAAkBD,GAAU,EAAID,EAAaxK,EAAM4K,eAChET,GACAnK,EAAM0K,kBAAkBD,GACxBA,EAAS,EACTD,EACA7I,EAAkBsI,UAAUjK,EAAM0K,kBAAmBD,EAAS,GAC9DE,GAEJhJ,EAAkBuI,YAAY,KAAM,KAAMC,EAAqBQ,GAC/DhJ,EAAkBmJ,sBAAsBX,EAAqBQ,GAC7DhJ,EAAkB0I,qBAClB5G,OAi6HRoI,kBAAmBA,GACnBwG,UA3zHJ,SAAmBnN,EAAM,EAAGG,MACxBwG,GAAkB,MAAO3G,EAAKG,IA2zH9BiN,aAzzHJ,SAAsBnN,EAAS,EAAGE,MAC9BwG,GAAkB,SAAU1G,EAAQE,IAyzHpC+G,kBAAmBA,GACnBmG,UAvyHJ,SAAmBC,EAAUC,EAAQpN,MACjC+G,GAAkB,MAAOoG,EAAUC,EAAQpN,IAuyH3CqN,aAryHJ,SAAsBC,EAAaC,EAAWvN,MAC1C+G,GAAkB,SAAUuG,EAAaC,EAAWvN,IAqyHpDkH,gBAAiBA,GACjBU,gBAAiBA,GACjB4F,QA3tHJ,SAAiBxG,EAAYC,EAAUjH,MACnCkH,GAAgB,MAAOF,EAAYC,EAAUjH,IA2tH7CyN,QAztHJ,SAAiBzG,EAAYC,EAAUjH,MACnC4H,GAAgB,MAAOZ,EAAYC,EAAUjH,IAytH7C0N,WAvtHJ,SAAoB1G,EAAYC,EAAUjH,MACtCkH,GAAgB,SAAUF,EAAYC,EAAUjH,IAutHhD2N,WArtHJ,SAAoB3G,EAAYC,EAAUjH,MACtC4H,GAAgB,SAAUZ,EAAYC,EAAUjH,IAqtHhD4N,aAntHJ,SAAsBC,EAAS7N,MAC3B,GAA2B,UAAvB3C,EAAWwQ,GACX,OAAO3S,EAAQoF,KAAK,oCAAqC,IAE7D,IAAIC,MAACA,EAAQ/C,EAAc7C,EAAM6F,mBAAkBE,QAAEA,OAAgBV,GACjEW,EAAOhG,EAAMiG,eAAeL,GAChC,GAAY,MAARI,EACA,OAAOzF,EAAQoF,KAAK,kCAAmC,IAE3D,IAAI8G,EAAMrG,EAAEC,QAAO,KAAUL,EAAK0G,QACb,MAAjBD,EAAY,SACZA,EAAY,WAEhB,IAAK,IAAImB,KAAKsF,EACV,GAAIjH,SAAS2B,IAAM,EAAG,CAClB,IAAIuF,EAAMD,EAAQtF,GACdwF,OAAOD,IAAQ,IACf1G,EAAY,OAAER,SAAS2B,IAAMwF,OAAOD,IAIhDnN,EAAK0G,OAASD,EACdlL,EAAOwL,UAAU,KAAM/G,EAAKsC,MAAOmE,EAAY,QAAKO,EAAK,WACrDhH,EAAKsC,OAAStI,EAAM6F,oBACpB7F,EAAM0M,OAASD,EACf9I,GAAmB3D,EAAMuF,SAASe,OAAQtG,EAAMuF,SAAS,GAAGe,SAE5DP,GAA8B,mBAAZA,GAClBA,KAwrHJsN,eArrHJ,SAAwBC,EAAYjO,MAChC,GAA8B,UAA1B3C,EAAW4Q,GACX,OAAO/S,EAAQoF,KAAK,uCAAwC,IAEhE,IAAIC,MAACA,EAAQ/C,EAAc7C,EAAM6F,mBAAkBE,QAAEA,OAAgBV,GACjEW,EAAOhG,EAAMiG,eAAeL,GAChC,GAAY,MAARI,EACA,OAAOzF,EAAQoF,KAAK,kCAAmC,IAE3D,IAAI8G,EAAMrG,EAAEC,QAAO,KAAUL,EAAK0G,QACV,MAApBD,EAAe,YACfA,EAAe,cAEnB,IAAK,IAAIoB,KAAKyF,EACV,GAAIrH,SAAS4B,IAAM,EAAG,CAClB,IAAIsF,EAAMG,EAAWzF,GACjBuF,OAAOD,IAAQ,IACf1G,EAAe,UAAER,SAAS4B,IAAMuF,OAAOD,IAInDnN,EAAK0G,OAASD,EACdlL,EAAOwL,UAAU,KAAM/G,EAAKsC,MAAOmE,EAAe,WAAKO,EAAK,cACxDhH,EAAKsC,OAAStI,EAAM6F,oBACpB7F,EAAM0M,OAASD,EACf9I,GAAmB3D,EAAMuF,SAASe,OAAQtG,EAAMuF,SAAS,GAAGe,SAE5DP,GAA8B,mBAAZA,GAClBA,KA0pHJwN,aAvpHJ,SAAsBL,EAAS7N,MAC3B,GAA2B,SAAvB3C,EAAWwQ,IAAyC,GAAlBA,EAAQ5M,OAC1C,OAAO/F,EAAQoF,KAAK,oCAAqC,IAE7D,IAAIC,MAACA,EAAQ/C,EAAc7C,EAAM6F,mBAAkBE,QAAEA,OAAgBV,GACjEW,EAAOhG,EAAMiG,eAAeL,GAChC,GAAY,MAARI,EACA,OAAOzF,EAAQoF,KAAK,kCAAmC,IAE3D,IACI6N,EADMpN,EAAEC,QAAO,KAAUL,EAAK0G,QACT,WACrB+G,KAYJ,OAXAP,EAAQ1F,QAAQ4B,IACZ,GAAInD,SAASmD,IAAS,EAAG,CACrB,IAAIsE,EAAOF,EAAOvH,SAASmD,KAAUpP,EAAM2T,cAC3CF,EAAUxH,SAASmD,IAASsE,KAGpCtL,WAAW,KACHrC,GAA8B,mBAAZA,GAClBA,KAEL,GACI0N,GAioHPG,eA/nHJ,SAAwBN,EAAYjO,MAChC,GAA8B,SAA1B3C,EAAW4Q,IAA+C,GAArBA,EAAWhN,OAChD,OAAO/F,EAAQoF,KAAK,uCAAwC,IAEhE,IAAIC,MAACA,EAAQ/C,EAAc7C,EAAM6F,mBAAkBE,QAAEA,OAAgBV,GACjEW,EAAOhG,EAAMiG,eAAeL,GAChC,GAAY,MAARI,EACA,OAAOzF,EAAQoF,KAAK,kCAAmC,IAE3D,IACIkO,EADMzN,EAAEC,QAAO,KAAUL,EAAK0G,QACH,cAC3BoH,KAYJ,OAXAR,EAAW9F,QAAQ4B,IACf,GAAInD,SAASmD,IAAS,EAAG,CACrB,IAAIsE,EAAOG,EAAU5H,SAASmD,KAAUpP,EAAM+T,cAC9CD,EAAa7H,SAASmD,IAASsE,KAGvCtL,WAAW,KACHrC,GAA8B,mBAAZA,GAClBA,KAEL,GACI+N,GAymHPE,oBAvmHJ,SAA6B3O,MACzB,IAAIO,MAACA,EAAQ/C,EAAc7C,EAAM6F,mBAAkBE,QAAEA,OAAgBV,GAMrE,OALA+C,WAAW,KACHrC,GAA8B,mBAAZA,GAClBA,KAEL,GACI/F,EAAMiG,eAAeL,GAAOqO,kBAimHnCC,mBA/lHJ,SAA4B7O,MACxB,IAAIO,MAACA,EAAQ/C,EAAc7C,EAAM6F,mBAAkBE,QAAEA,OAAgBV,GAMrE,OALA+C,WAAW,KACHrC,GAA8B,mBAAZA,GAClBA,KAEL,GACI/F,EAAMiG,eAAeL,GAAOuO,iBAylHnCjH,SAAUA,GACVK,oBAAqBA,GACrB6G,yBAzjHJ,SAAkCpJ,GAE9B,IAAIqJ,KAKJ,OANArJ,EAAQA,GAASuC,MAGXC,QAAQ4B,IACViF,EAAOlL,KAAKnJ,EAAMuF,SAAS6J,EAAKxB,GAAGwB,EAAKvB,MAErCwG,GAmjHPC,aAjjHJ,WACI,IAAIvL,KACAoE,EAAWnN,EAAMoN,uBACjBtB,EAAa9L,EAAM6F,kBAQvB,OAPAsH,EAASK,QAAQC,IACb,IAAI8G,EAAWvR,EAAY8I,GACvB3G,OAAQsI,EAAItI,OACZD,IAAKuI,EAAIvI,MAEb6D,EAAOI,KAAKoL,KAETxL,GAuiHPyL,cAriHJ,SAAuBnP,MACnB,IAAIoP,EAAW5R,EAAc7C,EAAM6F,oBAC/BmF,MAACA,EAAKpF,MAAEA,EAAQ6O,OAAiBpP,GACjCW,EAAOhG,EAAMiG,eAAeL,GAChC,IAAKoF,GAA0B,iBAAVA,EACjB,OAAOzH,GAAmByH,EAAOhF,EAAKsC,OACnC,GAAqB,iBAAV0C,EAAoB,CAClC,GAAI3K,EAAQ+K,WAAWJ,GACnB,OAAOzH,GAAmBlD,EAAQiL,aAAaN,GAAQhF,EAAKsC,OAE5D/H,EAAQoF,KAAK,sDAAuD,MA4hH5E+O,aAxhHJ,SAAsBrP,MAClB,IAAI2F,MAACA,EAAQhL,EAAMoN,uBAAsBxH,MAAEA,EAAQ/C,EAAc7C,EAAM6F,mBAAkBE,QAAEA,OAAgBV,GAC3G,GAAyB,UAArB3C,EAAWsI,GAAoB,CAC/B,IAAK3K,EAAQ+K,WAAWJ,GACpB,OAAOzK,EAAQoF,KAAK,kCAAmC,IAE3D,IAAI0I,EAAYhO,EAAQiL,aAAaN,GACrCA,IACQ9F,IAAOmJ,EAAUnJ,IACjBC,OAAUkJ,EAAUlJ,cAEzB,GAAyB,UAArBzC,EAAWsI,GAAoB,CACtC,GAAiB,MAAbA,EAAM9F,KAA+B,MAAhB8F,EAAM7F,OAC3B,OAAO5E,EAAQoF,KAAK,kCAAmC,IAE3DqF,IACQ9F,IAAO8F,EAAM9F,IACbC,OAAU6F,EAAM7F,SAG5B,GAAyB,SAArBzC,EAAWsI,GACX,OAAOzK,EAAQoF,KAAK,kCAAmC,IAE3D,IAAIK,EAAOhG,EAAMiG,eAAeL,GAChC,GAAY,MAARI,EACA,OAAOzF,EAAQoF,KAAK,kCAAmC,IAG3D,IAAI8G,EAAMrG,EAAEC,QAAO,KAAUL,EAAK0G,QAClC,GAAoB,MAAhBD,EAAW,MAAW,CACtB,IAAI6B,GAAa,EACjB,IAAK,IAAIC,EAAI,EAAGA,EAAIvD,EAAM1E,OAAQiI,IAAK,CACnC,IAAIC,EAAKxD,EAAMuD,GAAGrJ,IAAI,GAAIuJ,EAAKzD,EAAMuD,GAAGrJ,IAAI,GACxCwJ,EAAK1D,EAAMuD,GAAGpJ,OAAO,GAAIwJ,EAAK3D,EAAMuD,GAAGpJ,OAAO,GAElD,GADAmJ,EAAanK,GAAUsI,EAAK+B,EAAIC,EAAIC,EAAIC,GAEpC,MAGR,GAAIL,EACA,OAAO/N,EAAQoF,KAAK,0DAA2D,IAIvF,IAAIgP,EAAWvO,EAAEC,QAAO,KAAUL,EAAK4O,iCACvC,GAAI5J,EAAM1E,OAAS,GAAKqO,EAASrO,OAAS,EAAG,CACzC,IAAIuO,GAAQ,EACRC,EAAahT,EAAgBiT,cAAc/O,EAAKsC,OACpD,IAAK,IAAIiG,EAAI,EAAGA,EAAIvD,EAAM1E,OAAQiI,IAAK,CACnC,IAAIC,EAAKxD,EAAMuD,GAAGrJ,IAAI,GAAIuJ,EAAKzD,EAAMuD,GAAGrJ,IAAI,GACxCwJ,EAAK1D,EAAMuD,GAAGpJ,OAAO,GAAIwJ,EAAK3D,EAAMuD,GAAGpJ,OAAO,GAClD,IAAK,IAAIyI,EAAIY,EAAIZ,GAAKa,EAAIb,IAAK,CAC3B,IAAK,IAAIC,EAAIa,EAAIb,GAAKc,EAAId,IACtB,GAAkD,MAA9C/L,EAAgBkT,SAASpH,EAAGC,EAAGiH,GAAqB,CACpDD,GAAQ,EACR,MAGR,GAAIA,EACA,MAGR,GAAIA,EACA,MAGR,GAAIA,EACA,OAAOtU,EAAQoF,KAAK,yFAA0F,IAItH,GAAIqF,EAAM1E,OAAS,EAAG,CAClB,IAAI2O,GAAY,EAAMC,EAAQlK,EAAM,GAAG9F,IAAI,GAAIiQ,EAAQnK,EAAM,GAAG9F,IAAI,GAChEkQ,GAAY,EAAMC,EAAQrK,EAAM,GAAG7F,OAAO,GAAImQ,EAAQtK,EAAM,GAAG7F,OAAO,GAC1E,IAAK,IAAIoJ,EAAI,EAAGA,EAAIvD,EAAM1E,OAAQiI,IAC1BvD,EAAMuD,GAAGrJ,IAAI,IAAMgQ,GAASlK,EAAMuD,GAAGrJ,IAAI,IAAMiQ,IAC/CF,GAAY,GAEZjK,EAAMuD,GAAGpJ,OAAO,IAAMkQ,GAASrK,EAAMuD,GAAGpJ,OAAO,IAAMmQ,IACrDF,GAAY,GAGpB,IAAKH,IAAcG,GAAa1Q,GAAgBsG,GAC5C,OAAOzK,EAAQoF,KAAK,yFAA0F,IAGtH,IAqBI4P,EArBAC,KAAkBC,KACtB,IAAK,IAAIlH,EAAI,EAAGA,EAAIvD,EAAM1E,OAAQiI,IAAK,CACnC,IAAIC,EAAKxD,EAAMuD,GAAGrJ,IAAI,GAAIuJ,EAAKzD,EAAMuD,GAAGrJ,IAAI,GACxCwJ,EAAK1D,EAAMuD,GAAGpJ,OAAO,GAAIwJ,EAAK3D,EAAMuD,GAAGpJ,OAAO,GAClD,IAAK,IAAIyI,EAAIY,EAAIZ,GAAKa,EAAIb,IACtB,GAAwB,MAApBnB,EAAe,WAAoC,MAAvBA,EAAe,UAAEmB,GAAjD,CAGK4H,EAAYE,SAAS9H,IACtB4H,EAAYrM,KAAKyE,GAErB,IAAK,IAAIC,EAAIa,EAAIb,GAAKc,EAAId,IACE,MAApBpB,EAAe,WAAoC,MAAvBA,EAAe,UAAEoB,IAG5C4H,EAAYC,SAAS7H,IACtB4H,EAAYtM,KAAK0E,IAM7BpB,EAAgB,YAAKA,EAAgB,WAAEnG,OAAS,IAEhDiP,EAAoBjR,GAAqB0B,EAAKsC,QAElD,IAAIqN,EAAI3P,EAAKG,KACJ,MAALwP,GAAyB,GAAZA,EAAErP,SACfqP,EAAI9T,EAAY0E,cAAcP,IAElC,IAAI4P,EAAS,GACTC,EAAW,GACfL,EAAcA,EAAYM,OAC1BL,EAAcA,EAAYK,OAC1B,IAAK,IAAI9M,EAAI,EAAGA,EAAIwM,EAAYlP,OAAQ0C,IAAK,CACzC,IAAI4E,EAAI4H,EAAYxM,GACpB,GAAwB,MAApByD,EAAe,WAAoC,MAAvBA,EAAe,UAAEmB,GAAjD,CAGAgI,GAAU,OACV,IAAK,IAAI1M,EAAI,EAAGA,EAAIuM,EAAYnP,OAAQ4C,IAAK,CACzC,IAAI2E,EAAI4H,EAAYvM,GACpB,GAAwB,MAApBuD,EAAe,WAAoC,MAAvBA,EAAe,UAAEoB,GAC7C,SAEJ,IAAI1I,EAAS,gCACb,GAAY,MAARwQ,EAAE/H,IAAyB,MAAX+H,EAAE/H,GAAGC,GAAY,CACjC,IAAImD,EAAQ,GAAI+E,EAAO,GACnBnI,GAAK4H,EAAY,KACO,MAApB/I,EAAe,WAA+C,MAAlCA,EAAe,UAAEoB,EAAErG,YAC/CqO,GAAY,qCAEZA,GAAY,oBAAsBpJ,EAAe,UAAEoB,EAAErG,YAAc,mBAGvEqG,GAAK4H,EAAY,KACI,MAAjBhJ,EAAY,QAA4C,MAA/BA,EAAY,OAAEmB,EAAEpG,YACzCwJ,GAAS,eAETA,GAAS,UAAYvE,EAAY,OAAEmB,EAAEpG,YAAc,OAG3D,IACIwO,EADA3M,EAAM,wBAQV,GALI2M,EADc,MAAdL,EAAE/H,GAAGC,GAAG/F,IAA+B,MAAjB6N,EAAE/H,GAAGC,GAAG/F,GAAGoI,IAAcyF,EAAE/H,GAAGC,GAAG/F,GAAGoI,GAAG+F,MAAM5M,GACzD7F,GAAaoK,EAAGC,EAAG8H,GAEnBnS,GAAaoK,EAAGC,EAAG8H,EAAG,KAEpC3E,GAASxP,EAAW0U,eAAeP,EAAG/H,EAAGC,GACd,UAAvBnL,EAAWiT,EAAE/H,GAAGC,KAAmB,OAAQ8H,EAAE/H,GAAGC,GAAI,CACpD,KAAI,OAAQ8H,EAAE/H,GAAGC,GAAO,IAgJpB,SA7IA,GAFAkI,EAAO,YAAcJ,EAAE/H,GAAGC,GAAO,GAAEH,GAAK,cAAgBiI,EAAE/H,GAAGC,GAAO,GAAEF,GAAK,IAEvE4H,GAAqBA,EAAkB3H,EAAI,IAAMC,GAAI,CACrD,IAAIsI,GACIpF,SACAC,UACDoF,GACCrF,SACAC,UACDqF,GACCtF,SACAC,UACDsF,GACCvF,SACAC,UAER,IAAK,IAAIuF,EAAO3I,EAAG2I,EAAO3I,EAAI+H,EAAE/H,GAAGC,GAAO,GAAEH,GAAI6I,IAC5C,IAAK,IAAIC,EAAO3I,EAAG2I,EAAO3I,EAAI8H,EAAE/H,GAAGC,GAAO,GAAEF,GAAI6I,IAAQ,CACpD,GAAID,GAAQ3I,GAAK2H,EAAkBgB,EAAO,IAAMC,IAASjB,EAAkBgB,EAAO,IAAMC,GAAMC,EAAG,CAC7F,IAAIC,EAAWnB,EAAkBgB,EAAO,IAAMC,GAAMC,EAAEzF,MAClD2F,EAASpB,EAAkBgB,EAAO,IAAMC,GAAMC,EAAE1F,MACnB,MAA7BsF,EAAc,MAAEK,GAChBL,EAAc,MAAEK,GAAY,EAE5BL,EAAc,MAAEK,GAAYL,EAAc,MAAEK,GAAY,EAE7B,MAA3BL,EAAc,MAAEM,GAChBN,EAAc,MAAEM,GAAU,EAE1BN,EAAc,MAAEM,GAAUN,EAAc,MAAEM,GAAU,EAG5D,GAAIJ,GAAQ3I,EAAI+H,EAAE/H,GAAGC,GAAO,GAAEH,GAAK,GAAK6H,EAAkBgB,EAAO,IAAMC,IAASjB,EAAkBgB,EAAO,IAAMC,GAAMI,EAAG,CACpH,IAAIF,EAAWnB,EAAkBgB,EAAO,IAAMC,GAAMI,EAAE5F,MAClD2F,EAASpB,EAAkBgB,EAAO,IAAMC,GAAMI,EAAE7F,MACnB,MAA7BuF,EAAc,MAAEI,GAChBJ,EAAc,MAAEI,GAAY,EAE5BJ,EAAc,MAAEI,GAAYJ,EAAc,MAAEI,GAAY,EAE7B,MAA3BJ,EAAc,MAAEK,GAChBL,EAAc,MAAEK,GAAU,EAE1BL,EAAc,MAAEK,GAAUL,EAAc,MAAEK,GAAU,EAG5D,GAAIH,GAAQ3I,GAAK0H,EAAkBgB,EAAO,IAAMC,IAASjB,EAAkBgB,EAAO,IAAMC,GAAMK,EAAG,CAC7F,IAAIH,EAAWnB,EAAkB3H,EAAI,IAAMC,GAAGgJ,EAAE7F,MAC5C2F,EAASpB,EAAkBgB,EAAO,IAAMC,GAAMK,EAAE9F,MACnB,MAA7BoF,EAAc,MAAEO,GAChBP,EAAc,MAAEO,GAAY,EAE5BP,EAAc,MAAEO,GAAYP,EAAc,MAAEO,GAAY,EAE7B,MAA3BP,EAAc,MAAEQ,GAChBR,EAAc,MAAEQ,GAAU,EAE1BR,EAAc,MAAEQ,GAAUR,EAAc,MAAEQ,GAAU,EAG5D,GAAIH,GAAQ3I,EAAI8H,EAAE/H,GAAGC,GAAO,GAAEF,GAAK,GAAK4H,EAAkBgB,EAAO,IAAMC,IAASjB,EAAkBgB,EAAO,IAAMC,GAAM5I,EAAG,CACpH,IAAI8I,EAAWnB,EAAkBgB,EAAO,IAAMC,GAAM5I,EAAEoD,MAClD2F,EAASpB,EAAkBgB,EAAO,IAAMC,GAAM5I,EAAEmD,MACnB,MAA7BqF,EAAc,MAAEM,GAChBN,EAAc,MAAEM,GAAY,EAE5BN,EAAc,MAAEM,GAAYN,EAAc,MAAEM,GAAY,EAE7B,MAA3BN,EAAc,MAAEO,GAChBP,EAAc,MAAEO,GAAU,EAE1BP,EAAc,MAAEO,GAAUP,EAAc,MAAEO,GAAU,GAKpE,IAAInD,EAASmC,EAAE/H,GAAGC,GAAO,GAAEH,GAAIoJ,EAASnB,EAAE/H,GAAGC,GAAO,GAAEF,GACtD,GAAIlI,KAAKC,UAAUyQ,GAAQ7P,OAAS,GAAI,CACpC,IAAIyQ,EAAW,KAAMC,EAAW,KAChC,IAAK,IAAIC,KAAKd,EAAOpF,MACboF,EAAOpF,MAAMkG,IAAMzD,EAAS,IAC5BuD,EAAWE,GAGnB,IAAK,IAAIA,KAAKd,EAAOnF,MACbmF,EAAOnF,MAAMiG,IAAMzD,EAAS,IAC5BwD,EAAWC,GAGH,MAAZF,GAAgC,MAAZC,IACpBhG,GAAS,eAAiBvP,EAAUyV,mBAAmBF,EAAUD,IAGzE,GAAItR,KAAKC,UAAU0Q,GAAQ9P,OAAS,GAAI,CACpC,IAAI6Q,EAAW,KAAMC,EAAW,KAChC,IAAK,IAAIH,KAAKb,EAAOrF,MACbqF,EAAOrF,MAAMkG,IAAMzD,EAAS,IAC5B2D,EAAWF,GAGnB,IAAK,IAAIA,KAAKb,EAAOpF,MACboF,EAAOpF,MAAMiG,IAAMzD,EAAS,IAC5B4D,EAAWH,GAGH,MAAZE,GAAgC,MAAZC,IACpBpG,GAAS,gBAAkBvP,EAAUyV,mBAAmBE,EAAUD,IAG1E,GAAI1R,KAAKC,UAAU2Q,GAAQ/P,OAAS,GAAI,CACpC,IAAI+Q,EAAW,KAAMC,EAAW,KAChC,IAAK,IAAIL,KAAKZ,EAAOtF,MACbsF,EAAOtF,MAAMkG,IAAMH,EAAS,IAC5BO,EAAWJ,GAGnB,IAAK,IAAIA,KAAKZ,EAAOrF,MACbqF,EAAOrF,MAAMiG,IAAMH,EAAS,IAC5BQ,EAAWL,GAGH,MAAZI,GAAgC,MAAZC,IACpBtG,GAAS,cAAgBvP,EAAUyV,mBAAmBI,EAAUD,IAGxE,GAAI5R,KAAKC,UAAU4Q,GAAQhQ,OAAS,GAAI,CACpC,IAAIiR,EAAW,KAAMC,EAAW,KAChC,IAAK,IAAIP,KAAKX,EAAOvF,MACbuF,EAAOvF,MAAMkG,IAAMH,EAAS,IAC5BS,EAAWN,GAGnB,IAAK,IAAIA,KAAKX,EAAOtF,MACbsF,EAAOtF,MAAMiG,IAAMH,EAAS,IAC5BU,EAAWP,GAGH,MAAZM,GAAgC,MAAZC,IACpBxG,GAAS,iBAAmBvP,EAAUyV,mBAAmBM,EAAUD,WASnF,GAAIhC,GAAqBA,EAAkB3H,EAAI,IAAMC,GAAI,CAErD,GAAI0H,EAAkB3H,EAAI,IAAMC,GAAGgJ,EAAG,CAClC,IAAIH,EAAWnB,EAAkB3H,EAAI,IAAMC,GAAGgJ,EAAE7F,MAC5C2F,EAASpB,EAAkB3H,EAAI,IAAMC,GAAGgJ,EAAE9F,MAC9CC,GAAS,eAAiBvP,EAAUyV,mBAAmBR,EAAUC,GAGrE,GAAIpB,EAAkB3H,EAAI,IAAMC,GAAGD,EAAG,CAClC,IAAI8I,EAAWnB,EAAkB3H,EAAI,IAAMC,GAAGD,EAAEoD,MAC5C2F,EAASpB,EAAkB3H,EAAI,IAAMC,GAAGD,EAAEmD,MAC9CC,GAAS,gBAAkBvP,EAAUyV,mBAAmBR,EAAUC,GAGtE,GAAIpB,EAAkB3H,EAAI,IAAMC,GAAG+I,EAAG,CAClC,IAAIF,EAAWnB,EAAkB3H,EAAI,IAAMC,GAAG+I,EAAE5F,MAC5C2F,EAASpB,EAAkB3H,EAAI,IAAMC,GAAG+I,EAAE7F,MAC9CC,GAAS,iBAAmBvP,EAAUyV,mBAAmBR,EAAUC,GAGvE,GAAIpB,EAAkB3H,EAAI,IAAMC,GAAG4I,EAAG,CAClC,IAAIC,EAAWnB,EAAkB3H,EAAI,IAAMC,GAAG4I,EAAEzF,MAC5C2F,EAASpB,EAAkB3H,EAAI,IAAMC,GAAG4I,EAAE1F,MAC9CC,GAAS,cAAgBvP,EAAUyV,mBAAmBR,EAAUC,IAI5ExR,EAAS1C,EAAY0C,GACjB6L,MAASA,EACT+E,KAAQA,IAEG,MAAXC,IACAA,EAAUxS,GAAaoK,EAAGC,EAAG8H,IAElB,MAAXK,IACAA,EAAU,KAEd7Q,GAAU6Q,MACP,CACH,IAAIhF,EAAQ,GAEZ,GAAIuE,GAAqBA,EAAkB3H,EAAI,IAAMC,GAAI,CAErD,GAAI0H,EAAkB3H,EAAI,IAAMC,GAAGgJ,EAAG,CAClC,IAAIH,EAAWnB,EAAkB3H,EAAI,IAAMC,GAAGgJ,EAAE7F,MAC5C2F,EAASpB,EAAkB3H,EAAI,IAAMC,GAAGgJ,EAAE9F,MAC9CC,GAAS,eAAiBvP,EAAUyV,mBAAmBR,EAAUC,GAGrE,GAAIpB,EAAkB3H,EAAI,IAAMC,GAAGD,EAAG,CAClC,IAAI8I,EAAWnB,EAAkB3H,EAAI,IAAMC,GAAGD,EAAEoD,MAC5C2F,EAASpB,EAAkB3H,EAAI,IAAMC,GAAGD,EAAEmD,MAC9CC,GAAS,gBAAkBvP,EAAUyV,mBAAmBR,EAAUC,GAGtE,GAAIpB,EAAkB3H,EAAI,IAAMC,GAAG+I,EAAG,CAClC,IAAIF,EAAWnB,EAAkB3H,EAAI,IAAMC,GAAG+I,EAAE5F,MAC5C2F,EAASpB,EAAkB3H,EAAI,IAAMC,GAAG+I,EAAE7F,MAC9CC,GAAS,iBAAmBvP,EAAUyV,mBAAmBR,EAAUC,GAGvE,GAAIpB,EAAkB3H,EAAI,IAAMC,GAAG4I,EAAG,CAClC,IAAIC,EAAWnB,EAAkB3H,EAAI,IAAMC,GAAG4I,EAAEzF,MAC5C2F,EAASpB,EAAkB3H,EAAI,IAAMC,GAAG4I,EAAE1F,MAC9CC,GAAS,cAAgBvP,EAAUyV,mBAAmBR,EAAUC,IAGxExR,GAAU,GACNyI,GAAK4H,EAAY,KACO,MAApB/I,EAAe,WAA+C,MAAlCA,EAAe,UAAEoB,EAAErG,YAC/CqO,GAAY,qCAEZA,GAAY,oBAAsBpJ,EAAe,UAAEoB,EAAErG,YAAc,mBAGvEqG,GAAK4H,EAAY,KACI,MAAjBhJ,EAAY,QAA4C,MAA/BA,EAAY,OAAEmB,EAAEpG,YACzCwJ,GAAS,eAETA,GAAS,UAAYvE,EAAY,OAAEmB,EAAEpG,YAAc,OAG3DrC,EAAS1C,EAAY0C,GACjB6L,MAASA,EACT+E,KAAQ,KAEZ5Q,GAAU,IAGdyQ,GADAzQ,GAAU,QAGdyQ,GAAU,SAGd,OADAA,EAAS,mDAAqDC,EAAWD,EAAS,YA2oGlF6B,cAxoGJ,SAAuBC,EAAarS,MAKhC,KAHI,iBACA,kBAEmBqQ,SAASgC,GAC5B,OAAOnX,EAAQoF,KAAK,wCAAyC,IAEjE,IAAIqF,MAACA,EAAQhL,EAAMoN,uBAAuBpN,EAAMoN,uBAAuB9G,OAAS,GAAEV,MAAEA,EAAQ/C,EAAc7C,EAAM6F,wBAA2BR,GACvIW,EAAOhG,EAAMiG,eAAeL,GAChC,GAAY,MAARI,EACA,OAAOzF,EAAQoF,KAAK,kCAAmC,IAE3D,GAAyB,UAArBjD,EAAWsI,GAAoB,CAC/B,IAAK3K,EAAQ+K,WAAWJ,GACpB,OAAOzK,EAAQoF,KAAK,kCAAmC,IAE3DqF,EAAQ3K,EAAQiL,aAAaN,GAEjC,GAAyB,UAArBtI,EAAWsI,IAAmC,MAAbA,EAAM9F,KAA+B,MAAhB8F,EAAM7F,OAC5D,OAAO5E,EAAQoF,KAAK,kCAAmC,IAE3D,IAAI6I,EAAKxD,EAAM9F,IAAI,GAAIuJ,EAAKzD,EAAM9F,IAAI,GAClCwJ,EAAK1D,EAAM7F,OAAO,GAAIwJ,EAAK3D,EAAM7F,OAAO,GAExCsH,EAAMrG,EAAEC,QAAO,KAAUL,EAAK0G,QAClC,GAAoB,MAAhBD,EAAW,OACMtI,GAAUsI,EAAK+B,EAAIC,EAAIC,EAAIC,GAExC,OAAOpO,EAAQoF,KAAK,0DAA2D,IAGvF,IAAIQ,EAAOH,EAAKG,KACJ,MAARA,GAA+B,GAAfA,EAAKG,SACrBH,EAAOtE,EAAY0E,cAAcP,IAErC,IAAI2R,KACJ,GAAmB,kBAAfD,EAEA,IAAK,IAAI9J,EAAIY,EAAIZ,GAAKa,EAAIb,IACtB,IAAK,IAAIC,EAAIa,EAAIb,GAAKc,EAAId,IAAK,CAC3B,IAAIlG,EAAOxB,EAAKyH,GAAGC,GACP,MAARlG,GAA0B,MAAVA,EAAKE,EACrB8P,EAAQxO,KAAK,MAEbwO,EAAQxO,KAAKxB,EAAKE,QAI3B,GAAmB,kBAAf6P,EACP,IAAK,IAAI9J,EAAIY,EAAIZ,GAAKa,EAAIb,IAAK,CAC3B,IAAI1I,KACJ,IAAK,IAAI2I,EAAIa,EAAIb,GAAKc,EAAId,IAAK,CAC3B,IAAIlG,EAAOxB,EAAKyH,GAAGC,GACP,MAARlG,GAA0B,MAAVA,EAAKE,EACrB3C,EAAIiE,KAAK,MAETjE,EAAIiE,KAAKxB,EAAKE,GAGtB8P,EAAQxO,KAAKjE,GAGrB,OAAOyS,GA0kGPC,aAxkGJ,SAAsBC,EAAiBxS,MACnC,IAAI0I,EAAW/N,EAAMoN,uBAAuB,GACxC3E,EAAgB5F,EAAc7C,EAAM6F,oBACpCmF,MAACA,EAAQ+C,EAAQnI,MAAEA,EAAQ6C,OAAsBpD,GACjDW,EAAOhG,EAAMiG,eAAeL,GAC5B8G,EAAS1G,EAAK0G,OAIlB,GAHI1B,GAA0B,iBAAVA,GAAsB3K,EAAQ+K,WAAWJ,KACzDA,EAAQ3K,EAAQiL,aAAaN,KAE5BA,GAASA,EAAM1E,OAAS,EAMzB,YALIpC,KACAsH,MAAMsM,YAAYC,SAElBxX,EAAQoF,KAAKmS,YAAYC,QAAS,KAK1C,GAAuB,MAAnBrL,EAAc,MAAW,CACzB,IAAI4B,GAAa,EACbE,EAAKxD,EAAM9F,IAAI,GAAIuJ,EAAKzD,EAAM9F,IAAI,GAAIwJ,EAAK1D,EAAM7F,OAAO,GAAIwJ,EAAK3D,EAAM7F,OAAO,GAElF,GADAmJ,EAAanK,GAAUuI,EAAQ8B,EAAIC,EAAIC,EAAIC,GAOvC,YALIzK,KACAsH,MAAMrL,IAAS6X,KAAKC,aAEpB1X,EAAQoF,KAAKxF,IAAS6X,KAAKC,YAAa,KAKpD,IAAIC,EAAU3U,GAAmByH,EAAOhF,EAAKsC,OACzC+G,KACJ,GAAuB,IAAnB6I,EAAQ5R,OAAZ,CAGA,GAAIuR,EACA,GAAuB,IAAnBK,EAAQ5R,OAAc,CACtB,IAAI6R,KACJ,IAAK,IAAInP,EAAI,EAAGA,EAAIkP,EAAQ,GAAG5R,OAAQ0C,IACnCmP,EAAI3U,GAAa,EAAGwF,EAAGkP,IAAY,GAEvC7I,EAAIlG,KAAKgP,QAET,IAAK,IAAIvK,EAAI,EAAGA,EAAIsK,EAAQ5R,OAAQsH,IAAK,CACrC,IAAIuK,KACJ,IAAK,IAAItK,EAAI,EAAGA,EAAIqK,EAAQ,GAAG5R,OAAQuH,SACAgC,GAA/BrM,GAAa,EAAGqK,EAAGqK,GACnBC,EAAI,IAAM3U,GAAaoK,EAAGC,EAAGqK,GAE7BC,EAAI3U,GAAa,EAAGqK,EAAGqK,IAAY1U,GAAaoK,EAAGC,EAAGqK,GAG9D7I,EAAIlG,KAAKgP,OAGd,CACH,IAAIC,EAAKpN,EAAc,OAAE,GACzB,IAAK,IAAI4C,EAAI,EAAGA,EAAIsK,EAAQ5R,OAAQsH,IAAK,CACrC,IAAIuK,KACJ,IAAK,IAAItK,EAAI,EAAGA,EAAIqK,EAAQ,GAAG5R,OAAQuH,IACnCsK,EAAIxV,EAAUkL,EAAIuK,IAAO5U,GAAaoK,EAAGC,EAAGqK,GAEhD7I,EAAIlG,KAAKgP,IAIjB,OAAO9I,IAsgGPgJ,iBApgGJ,SAA0BxP,EAAMxD,MAM5B,IAJI,SACA,OACA,UAEWiL,QAAQzH,GAAQ,EAC3B,OAAOtI,EAAQoF,KAAK,sEAAuE,IAE/F,IAAI8C,EAAgB5F,EAAc7C,EAAM6F,mBACpCkI,EAAW/N,EAAMoN,wBACjBjI,OAACA,EAAS,EAAC6F,MAAEA,EAAQ+C,EAAQnI,MAAEA,EAAQ6C,OAAsBpD,GAE7DqH,EADO1M,EAAMiG,eAAeL,GACd8G,OAIlB,GAHI1B,GAA0B,iBAAVA,GAAsB3K,EAAQ+K,WAAWJ,KACzDA,EAAQ3K,EAAQiL,aAAaN,KAE5BA,GAASA,EAAM1E,OAAS,EAMzB,YALIpC,KACAsH,MAAMrL,IAAS6X,KAAKD,SAEpBxX,EAAQoF,KAAKxF,IAAS6X,KAAKD,QAAS,KAK5C,GAAuB,MAAnBrL,EAAc,MAAW,CACzB,IAAI4B,GAAa,EACbE,EAAKxD,EAAM,GAAG9F,IAAI,GAAIuJ,EAAKzD,EAAM,GAAG9F,IAAI,GAAIwJ,EAAK1D,EAAM,GAAG7F,OAAO,GAAIwJ,EAAK3D,EAAM,GAAG7F,OAAO,GAE9F,GADAmJ,EAAanK,GAAUuI,EAAQ8B,EAAIC,EAAIC,EAAIC,GAOvC,YALIzK,KACAsH,MAAMrL,IAAS6X,KAAKC,aAEpB1X,EAAQoF,KAAKxF,IAAS6X,KAAKC,YAAa,KAKpD,IAAIC,EAAU3U,GAAmByH,EAAOpF,GACpCyJ,KACJ,GAAuB,IAAnB6I,EAAQ5R,OACR,OAEJ,IAAIgS,EAAOJ,EAAQ,GAAG5R,OACtB,OAAQuC,GACR,IAAK,SACD,IAAK,IAAI+E,EAAI,EAAGA,EAAIsK,EAAQ5R,UACpBsH,GAAK0K,GADuB1K,IAIhCyB,EAAIlG,KAAK+O,EAAQtK,GAAGA,IAExB,MACJ,IAAK,OACD,IAAK,IAAIA,EAAI,EAAGA,EAAIsK,EAAQ5R,UACpBsH,GAAK0K,GADuB1K,IAIhCyB,EAAIlG,KAAK+O,EAAQtK,GAAG0K,EAAO1K,EAAI,IAEnC,MACJ,IAAK,SACD,GAAyB,OAArBzI,EAAOqC,WAMP,YALItD,KACAsH,MAAMrL,IAAS6X,KAAKO,cAEpBhY,EAAQoF,KAAKxF,IAAS6X,KAAKO,aAAc,KAIjD,GAAIpT,EAAS,EAMT,YALIjB,KACAsH,MAAMrL,IAAS6X,KAAKQ,sBAEpBjY,EAAQoF,KAAKxF,IAAS6X,KAAKQ,qBAAsB,KAIzD,IAAK,IAAI5K,EAAI,EAAGA,EAAIsK,EAAQ5R,UACpBsH,EAAIzI,GAAUmT,GADc1K,IAIhCyB,EAAIlG,KAAK+O,EAAQtK,GAAGA,EAAIzI,IAIhC1D,EAAUgX,aAAa,IAAIC,MAASjT,KAAKC,UAAU2J,KA86FnDsJ,gBA56FJ,SAAyBtT,MACrB,IAAIoD,EAAgB5F,EAAc7C,EAAM6F,mBACpCkI,EAAW/N,EAAMoN,wBACjBpC,MAACA,EAAQ+C,EAAQnI,MAAEA,EAAQ6C,OAAsBpD,GAEjDqH,EADO1M,EAAMiG,eAAeL,GACd8G,OAIlB,GAHI1B,GAA0B,iBAAVA,GAAsB3K,EAAQ+K,WAAWJ,KACzDA,EAAQ3K,EAAQiL,aAAaN,KAE5BA,GAASA,EAAM1E,OAAS,EAMzB,YALIpC,KACAsH,MAAMrL,IAAS6X,KAAKD,SAEpBxX,EAAQoF,KAAKxF,IAAS6X,KAAKD,QAAS,KAK5C,GAAuB,MAAnBrL,EAAc,MAAW,CACzB,IAAI4B,GAAa,EACbE,EAAKxD,EAAM,GAAG9F,IAAI,GAAIuJ,EAAKzD,EAAM,GAAG9F,IAAI,GAAIwJ,EAAK1D,EAAM,GAAG7F,OAAO,GAAIwJ,EAAK3D,EAAM,GAAG7F,OAAO,GAE9F,GADAmJ,EAAanK,GAAUuI,EAAQ8B,EAAIC,EAAIC,EAAIC,GAOvC,YALIzK,KACAsH,MAAMrL,IAAS6X,KAAKC,aAEpB1X,EAAQoF,KAAKxF,IAAS6X,KAAKC,YAAa,KAKpD,IAAIC,EAAU3U,GAAmByH,EAAOpF,GACpCyJ,KACJ,GAAuB,IAAnB6I,EAAQ5R,OAAZ,CAGA,IAAK,IAAIsH,EAAI,EAAGA,EAAIsK,EAAQ5R,OAAQsH,IAAK,CACrC,IAAIgL,KACJ,IAAK,IAAI/K,EAAI,EAAGA,EAAIqK,EAAQ,GAAG5R,OAAQuH,IAAK,CACxC,IACIhG,EADAgR,GAAO,EAQPA,EADK,OAJLhR,EAD6B,UAA7BnF,EAAWwV,EAAQtK,GAAGC,IAClBqK,EAAQtK,GAAGC,GAAGhG,EAEdqQ,EAAQtK,GAAGC,KAEG,IAALhG,IAIJ,OADTA,EAAIoE,SAASpE,KACIA,EAAI,GAMzB+Q,EAAEzP,KAAK0P,GAEXxJ,EAAIlG,KAAKyP,GAEbnX,EAAUgX,aAAaK,MAAOrT,KAAKC,UAAU2J,MAi3F7C0J,aA/2FJ,SAAsB/N,EAAO3F,MACzB,GAAyB,UAArB3C,EAAWsI,GAAoB,CAC/B,IAAK3K,EAAQ+K,WAAWJ,GACpB,OAAOzK,EAAQoF,KAAK,kCAAmC,IAE3D,IAAI0I,EAAYhO,EAAQiL,aAAaN,GACrCA,IACQ9F,IAAOmJ,EAAUnJ,IACjBC,OAAUkJ,EAAUlJ,cAEzB,GAAyB,UAArBzC,EAAWsI,GAAoB,CACtC,GAAiB,MAAbA,EAAM9F,KAA+B,MAAhB8F,EAAM7F,OAC3B,OAAO5E,EAAQoF,KAAK,kCAAmC,IAE3DqF,IACQ9F,IAAO8F,EAAM9F,IACbC,OAAU6F,EAAM7F,SAG5B,GAAyB,SAArBzC,EAAWsI,GACX,IAAK,IAAIhC,EAAI,EAAGA,EAAIgC,EAAM1E,OAAQ0C,IAC9B,GAA6B,WAAzBtG,EAAWsI,EAAMhC,IAAkB,CACnC,IAAK3I,EAAQ+K,WAAWJ,EAAMhC,IAC1B,OAAOzI,EAAQoF,KAAK,kCAAmC,IAE3D,IAAI0I,EAAYhO,EAAQiL,aAAaN,EAAMhC,IAC3CgC,EAAMhC,IACF9D,IAAOmJ,EAAUnJ,IACjBC,OAAUkJ,EAAUlJ,aAErB,GAAyB,UAArBzC,EAAWsI,GAAoB,CACtC,GAAiB,MAAbA,EAAM9F,KAA+B,MAAhB8F,EAAM7F,OAC3B,OAAO5E,EAAQoF,KAAK,kCAAmC,IAE3DqF,GACI9F,IAAO8F,EAAM9F,IACbC,OAAU6F,EAAM7F,QAKhC,GAAyB,SAArBzC,EAAWsI,GACX,OAAOzK,EAAQoF,KAAK,kCAAmC,IAE3D,IAAIqT,KAACA,GAAO,EAAIpT,MAAEA,EAAQ/C,EAAc7C,EAAM6F,mBAAkBE,QAAEA,OAAgBV,GAC9EW,EAAOhG,EAAMiG,eAAeL,GAChC,GAAY,MAARI,EACA,OAAOzF,EAAQoF,KAAK,kCAAmC,IAE3D,IAAK,IAAIqD,EAAI,EAAGA,EAAIgC,EAAM1E,OAAQ0C,IAAK,CACnC,IAAIiQ,EAAczX,EAAW0X,cAAclO,EAAMhC,GAAG7D,OAAQ6F,EAAMhC,GAAG9D,IAAK8F,EAAMhC,IAC5EiQ,IACAjO,EAAMhC,IACF9D,IAAO+T,EAAY,GACnB9T,OAAU8T,EAAY,KAIlCjT,EAAKoH,uBAAyBpC,EAC1BhF,EAAKsC,OAAStI,EAAM6F,oBACpB7F,EAAMoN,uBAAyBpC,EAC/BvG,KACKuU,IACD5S,EAAE,kCAAkCuL,OACpCvL,EAAE,mCAAmCuL,OACrCvL,EAAE,8BAA8BuL,OAChCvL,EAAE,iCAAiCuL,OACnCvL,EAAE,+BAA+B+S,QACjC/S,EAAE,+BAA+B+S,UAGrCpT,GAA8B,mBAAZA,GAClBA,KAwyFJqT,cAryFJ,SAAuBjT,EAAMd,MACzB,IAAIoD,EAAgB5F,EAAc7C,EAAM6F,mBACpCkI,EAAW/N,EAAMoN,uBAAuBpN,EAAMoN,uBAAuB9G,OAAS,IAC9E0E,MAACA,EAAQ+C,EAAQjI,UAAEA,GAAY,EAAIF,MAAEA,EAAQ6C,EAAa1C,QAAEA,OAAgBV,GAChF,GAAY,MAARc,EACA,OAAO5F,EAAQoF,KAAK,sDAAuD,IAE/E,GAAIqF,aAAiBgD,MACjB,OAAOzN,EAAQoF,KAAK,kDAAmD,IAEtD,iBAAVqF,GAAsB3K,EAAQ+K,WAAWJ,KAChDA,EAAQ3K,EAAQiL,aAAaN,IAEjC,IAAIqO,EAAWrO,EAAM9F,IAAI,GAAK8F,EAAM9F,IAAI,GAAK,EAAGoU,EAActO,EAAM7F,OAAO,GAAK6F,EAAM7F,OAAO,GAAK,EAClG,GAAIgB,EAAKG,SAAW+S,GAAYlT,EAAK,GAAGG,SAAWgT,EAC/C,OAAO/Y,EAAQoF,KAAK,mDAAoD,IAE5E,IAAIK,EAAOhG,EAAMiG,eAAeL,GAChC,GAAY,MAARI,EACA,OAAOzF,EAAQoF,KAAK,kCAAmC,IAE3D,IAAIwL,EAAY/K,EAAEC,QAAO,KAAUL,EAAKG,MACxC,IAAK,IAAI6C,EAAI,EAAGA,EAAIqQ,EAAUrQ,IAC1B,IAAK,IAAIE,EAAI,EAAGA,EAAIoQ,EAAapQ,IAE7BjE,GADU+F,EAAM9F,IAAI,GAAK8D,EAAYgC,EAAM7F,OAAO,GAAK+D,EAC7B/C,EAAK6C,GAAGE,IAC9BtD,MAAOA,EACPE,WAAW,IAIvB,IAAIsL,EAAWhL,EAAEC,QAAO,KAAUL,EAAKG,MACvCH,EAAKG,KAAKG,OAAS,EACnBN,EAAKG,KAAKgD,QAAQgI,GACdnL,EAAKsC,OAAStI,EAAM6F,mBACpBnC,GAAc0N,IACNlM,IAAK8F,EAAM9F,IACXC,OAAQ6F,EAAM7F,cACd0K,GAAW,GAAM,GAEzB/J,GACArC,KAEAsC,GAA8B,mBAAZA,GAClBA,KA0vFJ+H,qBAAsBA,GACtByL,eAttFJ,SAAwBtR,EAAM7C,EAAOC,MACjC,IAAIoD,EAAgB5F,EAAc7C,EAAM6F,mBACpCkI,EAAW/N,EAAMoN,wBACjBpC,MAACA,EAAQ+C,EAAQnI,MAAEA,EAAQ6C,EAAa1C,QAAEA,OAAgBV,GAC9D,GAAyB,UAArB3C,EAAWsI,GAAoB,CAC/B,IAAK3K,EAAQ+K,WAAWJ,GACpB,OAAOzK,EAAQoF,KAAK,kCAAmC,IAE3D,IAAI0I,EAAYhO,EAAQiL,aAAaN,GACrCA,IACQ9F,IAAOmJ,EAAUnJ,IACjBC,OAAUkJ,EAAUlJ,cAEzB,GAAyB,UAArBzC,EAAWsI,GAAoB,CACtC,GAAiB,MAAbA,EAAM9F,KAA+B,MAAhB8F,EAAM7F,OAC3B,OAAO5E,EAAQoF,KAAK,kCAAmC,IAE3DqF,IACQ9F,IAAO8F,EAAM9F,IACbC,OAAU6F,EAAM7F,SAG5B,GAAyB,SAArBzC,EAAWsI,GACX,OAAOzK,EAAQoF,KAAK,kCAAmC,IAE3D,IAAIK,EAAOhG,EAAMiG,eAAeL,GAChC,GAAY,MAARI,EACA,OAAOzF,EAAQoF,KAAK,kCAAmC,IAE3D,IAAIwL,EAAY/K,EAAEC,QAAO,KAAUL,EAAKG,MACpC4C,KACJ,IAAK,IAAIC,EAAI,EAAGA,EAAIgC,EAAM1E,OAAQ0C,IAC9BD,EAAOI,KAAK2E,GAAqB7F,EAAM7C,GACnC4F,MAAOA,EAAMhC,GACbpD,MAAOA,KAGf,GAAImD,EAAOyQ,KAAKxQ,GAAW,UAANA,GAGjB,OAFAhD,EAAKG,KAAKG,OAAS,EACnBN,EAAKG,KAAKgD,QAAQgI,IACX,EAEX,IAAIC,EAAWhL,EAAEC,QAAO,KAAUL,EAAKG,MACvCH,EAAKG,KAAKG,OAAS,EACnBN,EAAKG,KAAKgD,QAAQgI,GACdnL,EAAKsC,OAAStI,EAAM6F,mBACpBnC,GAAc0N,OAAUvB,OAAWA,GAAW,GAAM,GAExDpM,KACIsC,GAA8B,mBAAZA,GAClBA,KAqqFJ0T,eAlqFJ,SAAwB5Q,EAAMxD,MAK1B,KAHI,OACA,SAEYqQ,SAAS7M,GACrB,OAAOtI,EAAQoF,KAAK,iCAAkC,IAE1D,IAAIqF,MAACA,EAAQhL,EAAMoN,uBAAuBpN,EAAMoN,uBAAuB9G,OAAS,GAAEV,MAAEA,EAAQ/C,EAAc7C,EAAM6F,mBAAkBE,QAAEA,OAAgBV,GAChJW,EAAOhG,EAAMiG,eAAeL,GAChC,GAAY,MAARI,EACA,OAAOzF,EAAQoF,KAAK,kCAAmC,IAE3D,GAAyB,UAArBjD,EAAWsI,GAAoB,CAC/B,IAAK3K,EAAQ+K,WAAWJ,GACpB,OAAOzK,EAAQoF,KAAK,kCAAmC,IAE3DqF,EAAQ3K,EAAQiL,aAAaN,GAEjC,GAAyB,UAArBtI,EAAWsI,IAAmC,MAAbA,EAAM9F,KAA+B,MAAhB8F,EAAM7F,OAC5D,OAAO5E,EAAQoF,KAAK,kCAAmC,IAO3D,GALAyC,WAAW,KACHrC,GAA8B,mBAAZA,GAClBA,KAEL,GACS,QAAR8C,EAKA,OAJA7C,EAAK0T,cAAgB1O,EACjBhF,EAAKsC,OAAStI,EAAM6F,mBACpBhB,GAAoBmG,EAAOhF,EAAK2T,SAGhCzU,IAAO8F,EAAM9F,IACbC,OAAU6F,EAAM7F,QAEjB,GAAY,SAAR0D,EAAiB,CACxB,IAAI+Q,EAAyBxT,EAAEC,QAAO,KAAUL,EAAK0T,eAIrD,OAHA1T,EAAK0T,cAAgB,KACrBtT,EAAE,oCAAsCJ,EAAKsC,OAAOuR,SACpDzT,EAAE,mCAAqCJ,EAAKsC,OAAOuR,UAE/C3U,IAAO0U,EAAuB1U,IAC9BC,OAAUyU,EAAuBzU,UAwnFzC2U,cApnFJ,SAAuBjR,EAAMxD,MAMzB,IAJI,MACA,aACA,YAEWiL,QAAQzH,GAAQ,EAC3B,OAAOtI,EAAQoF,KAAK,2EAA4E,IAEpG,IAAI8C,EAAgB5F,EAAc7C,EAAM6F,mBAAoBkI,EAAW/N,EAAMoN,wBACzEpC,MAACA,EAAQ+C,EAAQnI,MAAEA,EAAQ6C,EAAa1C,QAAEA,OAAgBV,GAC1DW,EAAOhG,EAAMiG,eAAeL,GAAQ6G,EAAMrG,EAAEC,QAAO,KAAUL,EAAK0G,QAASvG,EAAOC,EAAEC,QAAO,KAAUL,EAAKG,MAI9G,GAHmB,GAAfA,EAAKG,SACLH,EAAOC,EAAEC,QAAO,KAAUxE,EAAY0E,cAAcP,KAE/B,UAArBtD,EAAWsI,GAAoB,CAC/B,IAAK3K,EAAQ+K,WAAWJ,GACpB,OAAOzK,EAAQoF,KAAK,6BAA8B,IAEtD,IAAI0I,EAAYhO,EAAQiL,aAAaN,GACrCA,IACQ9F,IAAOmJ,EAAUnJ,IACjBC,OAAUkJ,EAAUlJ,cAEzB,GAAyB,UAArBzC,EAAWsI,GAAoB,CACtC,IAAKA,EAAMG,eAAe,SAAWH,EAAMG,eAAe,UACtD,OAAO5K,EAAQoF,KAAK,6BAA8B,IAEtDqF,IACQ9F,IAAO8F,EAAM9F,IACbC,OAAU6F,EAAM7F,SAI5B,GAAIT,GAAgBsG,GAChB,OAAOzK,EAAQoF,KAAK,iCAAkC,IAG1D,GAAoB,MAAhB8G,EAAW,MAAW,CACtB,IAAI6B,GAAa,EACjB,IAAK,IAAIC,EAAI,EAAGA,EAAIvD,EAAM1E,OAAQiI,IAAK,CACnC,IAAIC,EAAKxD,EAAMuD,GAAGrJ,IAAI,GAAIuJ,EAAKzD,EAAMuD,GAAGrJ,IAAI,GACxCwJ,EAAK1D,EAAMuD,GAAGpJ,OAAO,GAAIwJ,EAAK3D,EAAMuD,GAAGpJ,OAAO,GAElD,GADAmJ,EAAanK,GAAUsI,EAAK+B,EAAIC,EAAIC,EAAIC,GAEpC,MAGR,GAAIL,EACA,OAAO/N,EAAQoF,KAAK,0DAA2D,IAIvF,IAAIoU,GAAU,EACd,IAAK,IAAI/Q,EAAI,EAAGA,EAAIgC,EAAM1E,OAAQ0C,IAAK,CACnC,IAAIwF,EAAKxD,EAAMhC,GAAG9D,IAAI,GAAIuJ,EAAKzD,EAAMhC,GAAG9D,IAAI,GACxCwJ,EAAK1D,EAAMhC,GAAG7D,OAAO,GAAIwJ,EAAK3D,EAAMhC,GAAG7D,OAAO,GAClD,IAAK,IAAIyI,EAAIY,EAAIZ,GAAKa,EAAIb,IAAK,CAC3B,IAAK,IAAIC,EAAIa,EAAIb,GAAKc,EAAId,IAAK,CAC3B,IAAIlG,EAAOxB,EAAKyH,GAAGC,GACnB,GAAwB,UAApBnL,EAAWiF,IAAqB,OAAQA,EAAM,CAC9CoS,GAAU,EACV,OAGR,GAAIA,EACA,OAIZ,GAAIA,EAEA3L,IACIpD,MAAOA,EACPpF,MAAOA,QAER,CACH,IAAK,IAAIoD,EAAI,EAAGA,EAAIgC,EAAM1E,OAAQ0C,IAAK,CACnC,IAAIwF,EAAKxD,EAAMhC,GAAG9D,IAAI,GAAIuJ,EAAKzD,EAAMhC,GAAG9D,IAAI,GACxCwJ,EAAK1D,EAAMhC,GAAG7D,OAAO,GAAIwJ,EAAK3D,EAAMhC,GAAG7D,OAAO,GAClD,GAAIqJ,GAAMC,GAAMC,GAAMC,EAGtB,GAAY,OAAR9F,EAAe,CACf,IAAI+F,KAASoL,GAAU,EACvB,IAAK,IAAIpM,EAAIY,EAAIZ,GAAKa,EAAIb,IACtB,IAAK,IAAIC,EAAIa,EAAIb,GAAKc,EAAId,IAAK,CAC3B,IAAIlG,EAAOxB,EAAKyH,GAAGC,GACP,MAARlG,GAAkB5D,GAAW4D,EAAKE,IAAgB,MAAVF,EAAKC,GAAeoS,IAC5DpL,EAAKxI,EAAEC,QAAO,KAAUsB,GACxBqS,GAAU,GAEd7T,EAAKyH,GAAGC,IACJ1G,IACIyG,EAAKY,EACLX,EAAKa,IAKrBvI,EAAKqI,GAAIE,GAAME,EACfzI,EAAKqI,GAAIE,GAAIvH,IACTyG,EAAKY,EACLX,EAAKa,EACLhB,GAAMe,EAAKD,EAAK,EAChBb,GAAMgB,EAAKD,EAAK,GAEpBjC,EAAW,MAAE+B,EAAK,IAAME,IACpBd,EAAKY,EACLX,EAAKa,EACLhB,GAAMe,EAAKD,EAAK,EAChBb,GAAMgB,EAAKD,EAAK,QAEjB,GAAY,YAAR7F,EACP,IAAK,IAAIgF,EAAIa,EAAIb,GAAKc,EAAId,IAAK,CAC3B,IAAIe,KAASoL,GAAU,EACvB,IAAK,IAAIpM,EAAIY,EAAIZ,GAAKa,EAAIb,IAAK,CAC3B,IAAIjG,EAAOxB,EAAKyH,GAAGC,GACP,MAARlG,GAAkB5D,GAAW4D,EAAKE,IAAgB,MAAVF,EAAKC,GAAeoS,IAC5DpL,EAAKxI,EAAEC,QAAO,KAAUsB,GACxBqS,GAAU,GAEd7T,EAAKyH,GAAGC,IACJ1G,IACIyG,EAAKY,EACLX,EAAKA,IAIjB1H,EAAKqI,GAAIX,GAAKe,EACdzI,EAAKqI,GAAIX,GAAG1G,IACRyG,EAAKY,EACLX,EAAKA,EACLH,GAAMe,EAAKD,EAAK,EAChBb,GAAM,GAEVlB,EAAW,MAAE+B,EAAK,IAAMX,IACpBD,EAAKY,EACLX,EAAKA,EACLH,GAAMe,EAAKD,EAAK,EAChBb,GAAM,QAGX,GAAY,cAAR9E,EACP,IAAK,IAAI+E,EAAIY,EAAIZ,GAAKa,EAAIb,IAAK,CAC3B,IAAIgB,KAASoL,GAAU,EACvB,IAAK,IAAInM,EAAIa,EAAIb,GAAKc,EAAId,IAAK,CAC3B,IAAIlG,EAAOxB,EAAKyH,GAAGC,GACP,MAARlG,GAAkB5D,GAAW4D,EAAKE,IAAgB,MAAVF,EAAKC,GAAeoS,IAC5DpL,EAAKxI,EAAEC,QAAO,KAAUsB,GACxBqS,GAAU,GAEd7T,EAAKyH,GAAGC,IACJ1G,IACIyG,EAAKA,EACLC,EAAKa,IAIjBvI,EAAKyH,GAAGc,GAAME,EACdzI,EAAKyH,GAAGc,GAAIvH,IACRyG,EAAKA,EACLC,EAAKa,EACLhB,GAAM,EACNC,GAAMgB,EAAKD,EAAK,GAEpBjC,EAAW,MAAEmB,EAAI,IAAMc,IACnBd,EAAKA,EACLC,EAAKa,EACLhB,GAAM,EACNC,GAAMgB,EAAKD,EAAK,IAK5B9I,GAAS6C,GACLzI,EAAM2M,cACN3M,EAAM6M,OAAOvG,OAAS,EACtBtG,EAAM8M,OAAO3D,MACTN,KAAQ,cACRiD,WAAc9F,EAAKsC,MACnBnC,KAAQC,EAAEC,QAAO,KAAUL,EAAKG,MAChC8I,QAAW9I,EACX6E,MAASA,EACT0B,OAAUtG,EAAEC,QAAO,KAAUL,EAAK0G,QAClCwC,UAAazC,KAGrBzM,EAAM2M,aAAc,EACpBjJ,GAAcyC,EAAM6E,GAASyB,IAAOA,IACpCzM,EAAM2M,aAAc,IAEpB3G,EAAKG,KAAOA,EACZH,EAAK0G,OAASD,GAGlB1G,GAA8B,mBAAZA,GAClBA,KAg7EJqI,iBAAkBA,GAClB6L,aA/0EJ,SAAsBpR,EAAMxD,MAKxB,IAHI,MACA,QAEWiL,QAAQzH,GAAQ,EAC3B,OAAOtI,EAAQoF,KAAK,wDAAyD,IAEjF,IAAI8C,EAAgB5F,EAAc7C,EAAM6F,mBAAoBkI,EAAW/N,EAAMoN,uBAAuB,IAChGpC,MAACA,EAAQ+C,EAAQnI,MAAEA,EAAQ6C,EAAa1C,QAAEA,OAAgBV,GAC1DW,EAAOhG,EAAMiG,eAAeL,GAAQ6G,EAAMrG,EAAEC,QAAO,KAAUL,EAAK0G,QAAS0E,EAAWhL,EAAEC,QAAO,KAAUL,EAAKG,MAIlH,GAHuB,GAAnBiL,EAAS9K,SACT8K,EAAWhL,EAAEC,QAAO,KAAUxE,EAAY0E,cAAcP,KAExDgF,aAAiBgD,OAAShD,EAAM1E,OAAS,EAEzC,YADA/F,EAAQoF,KAAKxF,IAAS2V,KAAKoE,aAAc,IAGzClP,GAA0B,iBAAVA,GAAsB3K,EAAQ+K,WAAWJ,KACzDA,EAAQ3K,EAAQiL,aAAaN,IAEjC,IAAIwD,EAAKxD,EAAM9F,IAAI,GAAIuJ,EAAKzD,EAAM9F,IAAI,GAAIwJ,EAAK1D,EAAM7F,OAAO,GAAIwJ,EAAK3D,EAAM7F,OAAO,GAC9EgV,GAAQ,EAERhU,KACJ,IAAK,IAAIyH,EAAIY,EAAIZ,GAAKa,EAAIb,IAAK,CAC3B,IAAIwM,KACJ,IAAK,IAAIvM,EAAIa,EAAIb,GAAKc,EAAId,IAAK,CAC3B,GAAsB,MAAlBuD,EAASxD,GAAGC,IAAmC,MAArBuD,EAASxD,GAAGC,GAAG1G,GAAY,CACrDgT,GAAQ,EACR,MAEJC,EAASjR,KAAKiI,EAASxD,GAAGC,IAE9B1H,EAAKgD,KAAKiR,GAEd,GAAID,EAEA,YADA5Z,EAAQoF,KAAKxF,IAAS2V,KAAKuE,WAAY,IAG3ClU,EAAO9C,MAAeiX,OAAOnU,GAAO,EAAY,QAAT0C,GACvC,IAAK,IAAI+E,EAAIY,EAAIZ,GAAKa,EAAIb,IACtB,IAAK,IAAIC,EAAIa,EAAIb,GAAKc,EAAId,IACtBuD,EAASxD,GAAGC,GAAK1H,EAAKyH,EAAIY,GAAIX,EAAIa,GAG1C,IAAI6L,KACiB,MAAjB9N,EAAY,SAEZ8N,GACI9N,IAFJA,EAAMnJ,GAAc8N,EAAU5C,EAAIC,EAAIhC,GAGlC+N,YAAc,IAGlBxU,EAAKsC,OAAStI,EAAM6F,kBACpBnC,GAAc0N,IACNlM,KACIsJ,EACAC,GAEJtJ,QACIuJ,EACAC,KAEJ4L,IAERvU,EAAKG,KAAOiL,EACZpL,EAAK0G,OAASD,GAEd1G,GAA8B,mBAAZA,GAClBA,KA0wEJ0U,kBAvwEJ,SAA2BC,EAAU5E,EAAMzQ,MACvC,KAAKyQ,GAAUA,aAAgB9H,OAC3B,OAAOzN,EAAQoF,KAAK,iCAAkC,IAE1D,IAAI8C,EAAgB5F,EAAc7C,EAAM6F,mBAAoBkI,EAAW/N,EAAMoN,uBAAuB,IAChGpC,MAACA,EAAQ+C,EAAQnI,MAAEA,EAAQ6C,EAAa1C,QAAEA,OAAgBV,GAC1DW,EAAOhG,EAAMiG,eAAeL,GAAQ6G,EAAMrG,EAAEC,QAAO,KAAUL,EAAK0G,QAAS0E,EAAWhL,EAAEC,QAAO,KAAUL,EAAKG,MAIlH,GAHuB,GAAnBiL,EAAS9K,SACT8K,EAAWhL,EAAEC,QAAO,KAAUxE,EAAY0E,cAAcP,KAExDgF,aAAiBgD,OAAShD,EAAM1E,OAAS,EAEzC,YADA/F,EAAQoF,KAAKxF,IAAS2V,KAAKoE,aAAc,IAGzClP,GAA0B,iBAAVA,GAAsB3K,EAAQ+K,WAAWJ,KACzDA,EAAQ3K,EAAQiL,aAAaN,IAEjC,IACI2P,EADAnM,EAAKxD,EAAM9F,IAAI,GAAIuJ,EAAKzD,EAAM9F,IAAI,GAAIwJ,EAAK1D,EAAM7F,OAAO,GAAIwJ,EAAK3D,EAAM7F,OAAO,GAO9EgV,GAAQ,EAERhU,KACJ,IAAK,IAAIyH,EAPL+M,EADAD,EACMlM,EAAK,EAELA,EAKQZ,GAAKa,EAAIb,IAAK,CAC5B,IAAIwM,KACJ,IAAK,IAAIvM,EAAIa,EAAIb,GAAKc,EAAId,IAAK,CAC3B,GAAsB,MAAlBuD,EAASxD,GAAGC,IAAmC,MAArBuD,EAASxD,GAAGC,GAAG1G,GAAY,CACrDgT,GAAQ,EACR,MAEJC,EAASjR,KAAKiI,EAASxD,GAAGC,IAE9B1H,EAAKgD,KAAKiR,GAEd,GAAID,EAEA,YADA5Z,EAAQoF,KAAKxF,IAAS2V,KAAKuE,WAAY,IAG3CvE,EAAKtI,QAAQoN,IACT,IAAI5R,EAAI4R,EAAS5R,EACjBA,GAAK0F,EACLvI,EAAO9C,MAAeiX,OAAOnU,GAAO6C,EAAqB,QAAlB4R,EAAS9E,QAEpD,IAAK,IAAIlI,EAAI+M,EAAK/M,GAAKa,EAAIb,IACvB,IAAK,IAAIC,EAAIa,EAAIb,GAAKc,EAAId,IACtBuD,EAASxD,GAAGC,GAAK1H,EAAKyH,EAAI+M,GAAK9M,EAAIa,GAG3C,IAAI6L,KACiB,MAAjB9N,EAAY,SAEZ8N,GACI9N,IAFJA,EAAMnJ,GAAc8N,EAAUuJ,EAAKlM,EAAIhC,GAGnC+N,YAAc,IAGlBxU,EAAKsC,QAAUtI,EAAM6F,kBACrBnC,GAAc0N,IACNlM,KACIyV,EACAlM,GAEJtJ,QACIuJ,EACAC,KAEJ4L,IAERvU,EAAKG,KAAOiL,EACZpL,EAAK0G,OAASD,GAEd1G,GAA8B,mBAAZA,GAClBA,KA4rEJ8U,iCAzrEJ,SAA0CC,EAAeC,EAAgB1V,MAgBrE,IAAKyV,KAdD,cACA,WACA,cACA,QACA,eACA,iBACA,iBACA,QACA,SACA,SACA,UACA,eACA,cAEuCpF,SAASoF,GAChD,OAAOva,EAAQoF,KAAK,0CAA2C,IAEnE,GAAkC,SAA9BjD,EAAWqY,IAAuD,GAAzBA,EAAezU,OACxD,OAAO/F,EAAQoF,KAAK,2CAA4C,IAEpE,IAAIqV,OAACA,GACGC,UAAa,UACbC,UAAa,WAChB7M,UAAEA,EAAYrO,EAAMoN,uBAAsBxH,MAAEA,EAAQ/C,EAAc7C,EAAM6F,mBAAkBE,QAAEA,OAAgBV,GAC7GW,EAAOhG,EAAMiG,eAAeL,GAC5BO,EAAOH,EAAKG,KAIhB,GAHY,MAARA,GAA+B,GAAfA,EAAKG,SACrBH,EAAOtE,EAAY0E,cAAcP,IAEzB,MAARA,EACA,OAAOzF,EAAQoF,KAAK,4BAA6B,IAErD,MAAMwV,EAAuBhb,IAAS2B,gBACtC,IAAIsZ,KAAqBC,KACzB,GAAqB,eAAjBP,EAAgC,CAChC,IAAIQ,EAAKP,EAAe,GACpBQ,EAAKR,EAAe,GAEpBS,EAAY1Z,EAAgB2Z,cAAcH,GAC9C,GAAIE,EAAUlV,OAAS,EAEnB,YADAxE,EAAgB4Z,WAAWP,EAAqBQ,eAAgB,IAE7D,GAAwB,GAApBH,EAAUlV,OAAa,CAC9B,IAAIkI,EAAKgN,EAAU,GAAGtW,IAAI,GAAIuJ,EAAK+M,EAAU,GAAGtW,IAAI,GAChDwJ,EAAK8M,EAAU,GAAGrW,OAAO,GAAIwJ,EAAK6M,EAAU,GAAGrW,OAAO,GAC1D,GAAIqJ,GAAMC,GAAMC,GAAMC,EASlB,YADA7M,EAAgB4Z,WAAWP,EAAqBQ,eAAgB,IAPhEL,EAAK9X,GAAagL,EAAIE,EAAIvI,GAC1BiV,EAAejS,MACXjE,IAAOsW,EAAU,GAAGtW,IACpBC,OAAUqW,EAAU,GAAGrW,SAE3BkW,EAAgBlS,KAAKmS,QAKtB,GAAwB,GAApBE,EAAUlV,OAAa,CAC9B,GAAIsV,MAAMN,IAAa,IAANA,EAEb,YADAxZ,EAAgB4Z,WAAWP,EAAqBU,sBAAuB,IAGvER,EAAgBlS,KAAKmS,GAG7B,IAAIQ,EAAYha,EAAgB2Z,cAAcF,GAC9C,GAAIO,EAAUxV,OAAS,EAEnB,YADAxE,EAAgB4Z,WAAWP,EAAqBQ,eAAgB,IAE7D,GAAwB,GAApBG,EAAUxV,OAAa,CAC9B,IAAIkI,EAAKsN,EAAU,GAAG5W,IAAI,GAAIuJ,EAAKqN,EAAU,GAAG5W,IAAI,GAChDwJ,EAAKoN,EAAU,GAAG3W,OAAO,GAAIwJ,EAAKmN,EAAU,GAAG3W,OAAO,GAC1D,GAAIqJ,GAAMC,GAAMC,GAAMC,EASlB,YADA7M,EAAgB4Z,WAAWP,EAAqBQ,eAAgB,IAPhEJ,EAAK/X,GAAagL,EAAIE,EAAIvI,GAC1BiV,EAAejS,MACXjE,IAAO4W,EAAU,GAAG5W,IACpBC,OAAU2W,EAAU,GAAG3W,SAE3BkW,EAAgBlS,KAAKoS,QAKtB,GAAwB,GAApBO,EAAUxV,OAAa,CAC9B,GAAIsV,MAAML,IAAa,IAANA,EAEb,YADAzZ,EAAgB4Z,WAAWP,EAAqBU,sBAAuB,IAGvER,EAAgBlS,KAAKoS,SAG1B,GAAqB,eAAjBT,GAAmD,YAAjBA,GAAgD,SAAjBA,EAA0B,CAClG,IAAIjT,EAAIkT,EAAe,GAEnB5N,EAAWrL,EAAgB2Z,cAAc5T,GAC7C,GAAIsF,EAAS7G,OAAS,EAElB,YADAxE,EAAgB4Z,WAAWP,EAAqBQ,eAAgB,IAE7D,GAAuB,GAAnBxO,EAAS7G,OAAa,CAC7B,IAAIkI,EAAKrB,EAAS,GAAGjI,IAAI,GAAIuJ,EAAKtB,EAAS,GAAGjI,IAAI,GAC9CwJ,EAAKvB,EAAS,GAAGhI,OAAO,GAAIwJ,EAAKxB,EAAS,GAAGhI,OAAO,GACxD,GAAIqJ,GAAMC,GAAMC,GAAMC,EASlB,YADA7M,EAAgB4Z,WAAWP,EAAqBQ,eAAgB,IAPhE9T,EAAIrE,GAAagL,EAAIE,EAAIvI,GACzBiV,EAAejS,MACXjE,IAAOiI,EAAS,GAAGjI,IACnBC,OAAUgI,EAAS,GAAGhI,SAE1BkW,EAAgBlS,KAAKtB,QAKtB,GAAuB,GAAnBsF,EAAS7G,OAAa,CAC7B,GAAIsV,MAAM/T,IAAW,IAALA,EAEZ,YADA/F,EAAgB4Z,WAAWP,EAAqBU,sBAAuB,IAGvER,EAAgBlS,KAAKtB,SAG1B,GAAqB,gBAAjBiT,EAAiC,CACxC,IAAIjT,EAAIkT,EAAe,GAEnB5N,EAAWrL,EAAgB2Z,cAAc5T,GAC7C,GAAIsF,EAAS7G,OAAS,EAElB,YADAxE,EAAgB4Z,WAAWP,EAAqBQ,eAAgB,IAE7D,GAAuB,GAAnBxO,EAAS7G,OAAa,CAC7B,IAAIkI,EAAKrB,EAAS,GAAGjI,IAAI,GAAIuJ,EAAKtB,EAAS,GAAGjI,IAAI,GAC9CwJ,EAAKvB,EAAS,GAAGhI,OAAO,GAAIwJ,EAAKxB,EAAS,GAAGhI,OAAO,GACxD,GAAIqJ,GAAMC,GAAMC,GAAMC,EASlB,YADA7M,EAAgB4Z,WAAWP,EAAqBQ,eAAgB,IAPhE9T,EAAIrE,GAAagL,EAAIE,EAAIvI,GACzBiV,EAAejS,MACXjE,IAAOiI,EAAS,GAAGjI,IACnBC,OAAUgI,EAAS,GAAGhI,SAE1BkW,EAAgBlS,KAAKtB,QAKtB,GAAuB,GAAnBsF,EAAS7G,OAAa,CAC7B,GAAS,IAALuB,EAEA,YADA/F,EAAgB4Z,WAAWP,EAAqBU,sBAAuB,IAGvER,EAAgBlS,KAAKtB,SAG1B,GAAqB,kBAAjBiT,EAAmC,CAC1C,IAKIjT,EALAyT,EAAKP,EAAe,GACpBQ,EAAKR,EAAe,GACxB,IAAK3W,GAAWkX,KAAQlX,GAAWmX,GAC/B,OAAOhb,EAAQoF,KAAK,2CAA4C,IAIhEkC,EADAxD,GAAKiX,EAAIC,GAAM,EACXhZ,EAAMgZ,GAAIP,OAAO,cAAgB,IAAMzY,EAAM+Y,GAAIN,OAAO,cAExDzY,EAAM+Y,GAAIN,OAAO,cAAgB,IAAMzY,EAAMgZ,GAAIP,OAAO,cAEhEK,EAAgBlS,KAAKtB,QAClB,GAAqB,kBAAjBiT,EAAmC,CAC1C,IAAIjT,EAAIkT,EAAe,GACvB,GAAS,KAALlT,GAAiB,KAALA,EACZ,OAAOtH,EAAQoF,KAAK,2CAA4C,IAEpE0V,EAAgBlS,KAAKtB,QAClB,GAAqB,SAAjBiT,GAA6C,UAAjBA,GAA8C,UAAjBA,GAA8C,WAAjBA,EAA4B,CACzH,IAAIjT,EAAIkT,EAAe,GACvB,GAAI9O,SAASpE,IAAMA,GAAKoE,SAASpE,GAAK,GAAKoE,SAASpE,GAAK,IAErD,YADA/F,EAAgB4Z,WAAWP,EAAqBY,mBAAoB,IAGxEV,EAAgBlS,KAAK8C,SAASpE,QACN,gBAAjBiT,GAAoD,cAAjBA,GAC1CO,EAAgBlS,KAAK2R,GAEzB,IAAKE,EAAO7P,eAAe,eAAiB6P,EAAO7P,eAAe,aAC9D,OAAO5K,EAAQoF,KAAK,mCAAoC,IAO5D,GAL6B,UAAzBjD,EAAW2L,GACXA,EAAYvM,EAAgB2Z,cAAcpN,GACV,UAAzB3L,EAAW2L,KAClBA,GAAaA,IAEY,SAAzB3L,EAAW2L,GACX,OAAO9N,EAAQoF,KAAK,sCAAuC,IAE/D,IAAIqW,GACAnT,KAAQ,UACRwF,UAAaA,EACb2M,OAAUA,EACVF,cAAiBA,EACjBM,eAAkBA,EAClBL,eAAkBM,GAGlBY,EAAQ7V,EAAEC,QAAO,KAAUrG,EAAMiG,gBACjCiW,EAAepa,EAAgBqa,gBAAgBF,GAE/CG,EAAUpW,EAAsC,oCACpDoW,EAAQjT,KAAK6S,GACbhW,EAAsC,gCAAIoW,EAC1C,IAAIC,EAAQjW,EAAEC,QAAO,KAAUrG,EAAMiG,gBACjCqW,EAAexa,EAAgBya,gBAAgBF,GAEnDva,EAAgB0a,IAAIN,EAAcI,GAE9B/a,EAAOkb,aACPlb,EAAOwL,UAAU,MAAO/G,EAAKsC,MAAO8T,GAAWpP,EAAK,oCAEpDjH,GAA8B,mBAAZA,GAClBA,KAo+DJ2W,0BAj+DJ,SAAmC7T,EAAMxD,MAMrC,IAAKwD,KAJD,UACA,iBACA,SAEqB6M,SAAS7M,GAC9B,OAAOtI,EAAQoF,KAAK,iCAAkC,IAE1D,IAAIqV,OAACA,EAAM3M,UAAEA,EAAYrO,EAAMoN,uBAAsBxH,MAAEA,EAAQ/C,EAAc7C,EAAM6F,mBAAkBE,QAAEA,OAAgBV,GACnHW,EAAOhG,EAAMiG,eAAeL,GAChC,GAAY,MAARI,EACA,OAAOzF,EAAQoF,KAAK,4BAA6B,IAErD,GAAY,WAARkD,GAOA,GANc,MAAVmS,IACAA,GACI,UACA,YAGkB,SAAtBtY,EAAWsY,IAAsBA,EAAO1U,OAAS,GAAK0U,EAAO1U,OAAS,EACtE,OAAO/F,EAAQoF,KAAK,mCAAoC,SAEzD,GAAY,kBAARkD,GAQP,GAPc,MAAVmS,IACAA,GACI,oBACA,qBACA,uBAGkB,SAAtBtY,EAAWsY,IAAsBA,EAAO1U,OAAS,GAAK0U,EAAO1U,OAAS,EACtE,OAAO/F,EAAQoF,KAAK,mCAAoC,SAEzD,GAAY,SAARkD,EAAiB,CACV,MAAVmS,IACAA,EAAS,2BAEb,IAAI2B,GACA,0BACA,iBACA,yBACA,yBACA,yBACA,wBACA,wBACA,gCACA,aACA,wBACA,iCACA,wBACA,sBACA,eACA,uBACA,aACA,sBACA,YACA,SACA,UAEJ,GAA0B,UAAtBja,EAAWsY,KAAwB2B,EAAajH,SAASsF,GACzD,OAAOza,EAAQoF,KAAK,mCAAoC,IAE5D,OAAQqV,GACR,IAAK,0BACDA,GACI7H,IAAO,EACPyJ,QAAW,EACX9S,IAAO,GAEX,MACJ,IAAK,iBACDkR,GACI7H,IAAO,EACPyJ,QAAW,EACX9S,IAAO,GAEX,MACJ,IAAK,yBACDkR,GACI7H,IAAO,EACPyJ,QAAW,EACX9S,IAAO,GAEX,MACJ,IAAK,yBACDkR,GACI7H,IAAO,EACPyJ,QAAW,EACX9S,IAAO,GAEX,MACJ,IAAK,yBACDkR,GACI7H,IAAO,EACPyJ,QAAW,EACX9S,IAAO,GAEX,MACJ,IAAK,wBACDkR,GACI7H,IAAO,EACPyJ,QAAW,EACX9S,IAAO,GAEX,MACJ,IAAK,wBACDkR,GACI7H,IAAO,EACPyJ,QAAW,EACX9S,IAAO,GAEX,MACJ,IAAK,gCACDkR,GACI7H,IAAO,EACPyJ,QAAW,EACX9S,IAAO,GAEX,MACJ,IAAK,aACDkR,GACI7H,IAAO,EACPyJ,QAAW,EACX9S,IAAO,GAEX,MACJ,IAAK,wBACDkR,GACI7H,IAAO,EACPyJ,QAAW,EACX9S,IAAO,GAEX,MACJ,IAAK,iCACDkR,GACI7H,IAAO,EACPyJ,QAAW,EACX9S,IAAO,GAEX,MACJ,IAAK,wBACDkR,GACI7H,IAAO,EACPyJ,QAAW,EACX9S,IAAO,GAEX,MACJ,IAAK,sBACDkR,GACI7H,IAAO,EACPyJ,QAAW,EACX9S,IAAO,GAEX,MACJ,IAAK,eACDkR,GACI7H,IAAO,EACPyJ,QAAW,EACX9S,IAAO,GAEX,MACJ,IAAK,uBACDkR,GACI7H,IAAO,EACPyJ,QAAW,EACX9S,IAAO,GAEX,MACJ,IAAK,aACDkR,GACI7H,IAAO,EACPyJ,QAAW,EACX9S,IAAO,GAEX,MACJ,IAAK,sBACDkR,GACI7H,IAAO,EACPyJ,QAAW,EACX9S,IAAO,IAEX,MACJ,IAAK,YACDkR,GACI7H,IAAO,EACPyJ,QAAW,EACX9S,IAAO,IAEX,MACJ,IAAK,SACDkR,GACI7H,IAAO,EACPyJ,QAAW,EACX9S,IAAO,GAEX,MACJ,IAAK,SACDkR,GACI7H,IAAO,EACPyJ,QAAW,EACX9S,IAAO,KAUnB,GAL6B,UAAzBpH,EAAW2L,GACXA,EAAYvM,EAAgB2Z,cAAcpN,GACV,UAAzB3L,EAAW2L,KAClBA,GAAaA,IAEY,SAAzB3L,EAAW2L,GACX,OAAO9N,EAAQoF,KAAK,sCAAuC,IAE/D,IAAIqW,GACAnT,KAAQA,EACRwF,UAAaA,EACb2M,OAAUA,GAGViB,EAAQ7V,EAAEC,QAAO,KAAUrG,EAAMiG,gBACjCiW,EAAepa,EAAgBqa,gBAAgBF,GAE/CG,EAAUpW,EAAsC,oCACpDoW,EAAQjT,KAAK6S,GACbhW,EAAsC,gCAAIoW,EAC1C,IAAIC,EAAQjW,EAAEC,QAAO,KAAUrG,EAAMiG,gBACjCqW,EAAexa,EAAgBya,gBAAgBF,GAEnDva,EAAgB0a,IAAIN,EAAcI,GAE9B/a,EAAOkb,aACPlb,EAAOwL,UAAU,MAAO/G,EAAKsC,MAAO8T,GAAWpP,EAAK,oCAEpDjH,GAA8B,mBAAZA,GAClBA,KAsvDJ8W,6BAnvDJ,SAAsCC,EAAWzX,MAC7C,IAAKpB,GAAU6Y,GACX,OAAOvc,EAAQoF,KAAK,sCAAuC,IAE/DmX,EAAY1J,OAAO0J,GACnB,IAAIlX,MAACA,EAAQ/C,EAAc7C,EAAM6F,mBAAkBE,QAAEA,OAAgBV,GACjEW,EAAOhG,EAAMiG,eAAeL,GAChC,GAAY,MAARI,EACA,OAAOzF,EAAQoF,KAAK,kCAAmC,IAE3D,IAAIgP,EAAWvO,EAAEC,QAAO,KAAUL,EAAK4O,iCACvC,GAAuB,GAAnBD,EAASrO,OACT,OAAO/F,EAAQoF,KAAK,qDAAsD,IACvE,GAA2B,MAAvBgP,EAASmI,GAChB,OAAOvc,EAAQoF,KAAK,sDAAuD,IAE/E,IAAIoX,EAAepI,EAASqI,OAAOF,EAAW,GAE1Cb,EAAQ7V,EAAEC,QAAO,KAAUrG,EAAMiG,gBACjCiW,EAAepa,EAAgBqa,gBAAgBF,GAEnDjW,EAAsC,gCAAI2O,EAC1C,IAAI0H,EAAQjW,EAAEC,QAAO,KAAUrG,EAAMiG,gBACjCqW,EAAexa,EAAgBya,gBAAgBF,GAYnD,OAVAva,EAAgB0a,IAAIN,EAAcI,GAE9B/a,EAAOkb,aACPlb,EAAOwL,UAAU,MAAO/G,EAAKsC,MAAO8T,SAAWpP,EAAK,oCAExD5E,WAAW,KACHrC,GAA8B,mBAAZA,GAClBA,KAEL,GACIgX,GAitDPE,WA/sDJ,SAAoB5X,MAChB,IAAI2F,MAACA,EAAQhL,EAAMoN,uBAAsBxH,MAAEA,EAAQ/C,EAAc7C,EAAM6F,mBAAkBE,QAAEA,OAAgBV,GAC3G,GAAyB,UAArB3C,EAAWsI,GAAoB,CAC/B,IAAK3K,EAAQ+K,WAAWJ,GACpB,OAAOzK,EAAQoF,KAAK,kCAAmC,IAE3D,IAAI0I,EAAYhO,EAAQiL,aAAaN,GACrCA,IACQ9F,IAAOmJ,EAAUnJ,IACjBC,OAAUkJ,EAAUlJ,cAEzB,GAAyB,UAArBzC,EAAWsI,GAAoB,CACtC,GAAiB,MAAbA,EAAM9F,KAA+B,MAAhB8F,EAAM7F,OAC3B,OAAO5E,EAAQoF,KAAK,kCAAmC,IAE3DqF,IACQ9F,IAAO8F,EAAM9F,IACbC,OAAU6F,EAAM7F,SAG5B,GAAyB,SAArBzC,EAAWsI,GACX,OAAOzK,EAAQoF,KAAK,kCAAmC,IAE3D,IAAIK,EAAOhG,EAAMiG,eAAeL,GAChC,GAAY,MAARI,EACA,OAAOzF,EAAQoF,KAAK,kCAAmC,IAE3D,IAAI8G,EAAMrG,EAAEC,QAAO,KAAUL,EAAK0G,QAC9B4B,GAAa,EACjB,IAAK,IAAIC,EAAI,EAAGA,EAAIvD,EAAM1E,OAAQiI,IAAK,CACnC,IAAIC,EAAKxD,EAAMuD,GAAGrJ,IAAI,GAAIuJ,EAAKzD,EAAMuD,GAAGrJ,IAAI,GACxCwJ,EAAK1D,EAAMuD,GAAGpJ,OAAO,GAAIwJ,EAAK3D,EAAMuD,GAAGpJ,OAAO,GAElD,GADAmJ,EAAanK,GAAUsI,EAAK+B,EAAIC,EAAIC,EAAIC,GAEpC,MAGR,GAAIL,EACA,OAAO/N,EAAQoF,KAAK,0DAA2D,IAEnF,IAAIgQ,EAAIvP,EAAEC,QAAO,KAAUL,EAAKG,MAChB,GAAZwP,EAAErP,SACFqP,EAAIvP,EAAEC,QAAO,KAAUxE,EAAY0E,cAAcP,KAErD,IAAK,IAAIuI,EAAI,EAAGA,EAAIvD,EAAM1E,OAAQiI,IAAK,CACnC,IAAIC,EAAKxD,EAAMuD,GAAGrJ,IAAI,GAAIuJ,EAAKzD,EAAMuD,GAAGrJ,IAAI,GACxCwJ,EAAK1D,EAAMuD,GAAGpJ,OAAO,GAAIwJ,EAAK3D,EAAMuD,GAAGpJ,OAAO,GAClD,IAAK,IAAIyI,EAAIY,EAAIZ,GAAKa,EAAIb,IACtB,IAAK,IAAIC,EAAIa,EAAIb,GAAKc,EAAId,IAAK,CAC3B,IAAIlG,EAAOgO,EAAE/H,GAAGC,GACQ,UAApBnL,EAAWiF,WACJA,EAAQ,SACRA,EAAQ,EACE,MAAbA,EAAQ,WACDA,EAAQ,EACftH,EAAQoH,iBAAiBmG,EAAGC,EAAG7H,EAAKsC,cAC7BX,EAAU,KAEH,MAAdA,EAAS,IAA6B,aAAhBA,EAAS,GAAE8O,UAC1B9O,EAAS,IAGpBgO,EAAE/H,GAAGC,GAAK,MAKtB7H,EAAKsC,OAAStI,EAAM6F,kBACpBnC,GAAciS,EAAG3K,GAEjBhF,EAAKG,KAAOwP,EAEZ5P,GAA8B,mBAAZA,GAClBA,KAuoDJmX,YApoDJ,SAAqB7M,EAAMhL,MAKvB,KAHI,OACA,MAEUqQ,SAASrF,GACnB,OAAO9P,EAAQoF,KAAK,iCAAkC,IAE1D,IAAIqF,MAACA,EAAQhL,EAAMoN,uBAAuBpN,EAAMoN,uBAAuB9G,OAAS,GAAEV,MAAEA,EAAQ/C,EAAc7C,EAAM6F,mBAAkBE,QAAEA,OAAgBV,GACpJ,GAAyB,UAArB3C,EAAWsI,GAAoB,CAC/B,IAAK3K,EAAQ+K,WAAWJ,GACpB,OAAOzK,EAAQoF,KAAK,kCAAmC,IAE3D,IAAI0I,EAAYhO,EAAQiL,aAAaN,GACrCA,GACI9F,IAAOmJ,EAAUnJ,IACjBC,OAAUkJ,EAAUlJ,QAG5B,GAAyB,UAArBzC,EAAWsI,IAAmC,MAAbA,EAAM9F,KAA+B,MAAhB8F,EAAM7F,OAC5D,OAAO5E,EAAQoF,KAAK,kCAAmC,IAG3D,GAAY,MADD3F,EAAMiG,eAAeL,GAE5B,OAAOrF,EAAQoF,KAAK,kCAAmC,IAE3D,IAAIgV,EAAM3P,EAAM9F,IAAI,GAAIiY,EAAMnS,EAAM9F,IAAI,GAAIkY,EAAMpS,EAAM7F,OAAO,GAAIkY,EAAMrS,EAAM7F,OAAO,GAC1E,QAARkL,EACAzM,GAAqB,WAAY+W,EAAKwC,EAAKC,EAAKC,EAAKzX,GACtC,MAARyK,GACPzM,GAAqB,SAAU+W,EAAKwC,EAAKC,EAAKC,EAAKzX,GAEnDG,GAA8B,mBAAZA,GAClBA,KAomDJuX,gBAjmDJ,SAAyBzU,EAAMxD,MAuB3B,IAAKwD,IArBD,aAEA,gBAEA,gBAEA,uBAEA,YAEA,kBAEA,qBAEA,uBAEA,0BAEA,aAGoByH,QAAQzH,GAAQ,EACpC,OAAOtI,EAAQoF,KAAK,iCAAkC,IAE1D,IAAIoI,EAAW/N,EAAMoN,uBAAuB,IACxCpC,MAACA,EAAQ+C,EAAQhI,QAAEA,OAAgBV,GACvC,GAAI2F,aAAiBgD,OAAShD,EAAM1E,OAAS,EAEzC,YADA/F,EAAQoF,KAAKxF,IAAS6X,KAAKD,QAAS,IAGpC/M,GAA0B,iBAAVA,GAAsB3K,EAAQ+K,WAAWJ,KACzDA,EAAQ3K,EAAQiL,aAAaN,IAEjC,IAKIuS,EAAYzG,EAAQ0G,EALpBtF,EAAU3U,GAAmByH,GAC7BqE,KACJ,GAAuB,IAAnB6I,EAAQ5R,OAAZ,CAIA,OAAQuC,GACR,IAAK,aACD,IAAK,IAAI+E,EAAIsK,EAAQ5R,OAAS,EAAGsH,GAAK,EAAGA,IAAK,CAC1C,IAAIgL,KACJ,IAAK,IAAI/K,EAAI,EAAGA,EAAIqK,EAAQ,GAAG5R,OAAQuH,IAAK,CACxC,IAAIzI,EAAQ,GACM,MAAd8S,EAAQtK,IAA+B,MAAjBsK,EAAQtK,GAAGC,KACjCzI,EAAQ8S,EAAQtK,GAAGC,IAEvB+K,EAAEzP,KAAK/D,GAEXiK,EAAIlG,KAAKyP,GAEb,MACJ,IAAK,gBACD,IAAK,IAAIhL,EAAI,EAAGA,EAAIsK,EAAQ5R,OAAQsH,IAAK,CACrC,IAAIgL,KACJ,IAAK,IAAI/K,EAAIqK,EAAQ,GAAG5R,OAAS,EAAGuH,GAAK,EAAGA,IAAK,CAC7C,IAAIzI,EAAQ,GACM,MAAd8S,EAAQtK,IAA+B,MAAjBsK,EAAQtK,GAAGC,KACjCzI,EAAQ8S,EAAQtK,GAAGC,IAEvB+K,EAAEzP,KAAK/D,GAEXiK,EAAIlG,KAAKyP,GAEb,MACJ,IAAK,gBACD,IAAK,IAAI/K,EAAI,EAAGA,EAAIqK,EAAQ,GAAG5R,OAAQuH,IAAK,CACxC,IAAI+K,KACJ,IAAK,IAAIhL,EAAIsK,EAAQ5R,OAAS,EAAGsH,GAAK,EAAGA,IAAK,CAC1C,IAAIxI,EAAQ,GACM,MAAd8S,EAAQtK,IAA+B,MAAjBsK,EAAQtK,GAAGC,KACjCzI,EAAQ8S,EAAQtK,GAAGC,IAEvB+K,EAAEzP,KAAK/D,GAEXiK,EAAIlG,KAAKyP,GAEb,MACJ,IAAK,uBACD,IAAK,IAAI/K,EAAIqK,EAAQ,GAAG5R,OAAS,EAAGuH,GAAK,EAAGA,IAAK,CAC7C,IAAI+K,KACJ,IAAK,IAAIhL,EAAI,EAAGA,EAAIsK,EAAQ5R,OAAQsH,IAAK,CACrC,IAAIxI,EAAQ,GACM,MAAd8S,EAAQtK,IAA+B,MAAjBsK,EAAQtK,GAAGC,KACjCzI,EAAQ8S,EAAQtK,GAAGC,IAEvB+K,EAAEzP,KAAK/D,GAEXiK,EAAIlG,KAAKyP,GAEb,MACJ,IAAK,YACD,IAAK,IAAI/K,EAAI,EAAGA,EAAIqK,EAAQ,GAAG5R,OAAQuH,IAAK,CACxC,IAAI+K,KACJ,IAAK,IAAIhL,EAAI,EAAGA,EAAIsK,EAAQ5R,OAAQsH,IAAK,CACrC,IAAIxI,EAAQ,GACM,MAAd8S,EAAQtK,IAA+B,MAAjBsK,EAAQtK,GAAGC,KACjCzI,EAAQ8S,EAAQtK,GAAGC,IAEvB+K,EAAEzP,KAAK/D,GAEXiK,EAAIlG,KAAKyP,GAEb,MACJ,IAAK,kBACD2E,EAAarF,EAAQ,GAAG5R,OACxB,IAAK,IAAIsH,EAAI,EAAGA,EAAIsK,EAAQ5R,OAAQsH,IAAK,CACrC,IAAIgL,KAAQ6E,GAAQ,EAAMC,GAAQ,EAClC,IAAK,IAAI7P,EAAI,EAAGA,EAAI0P,EAAY1P,IAAK,CACjC,IAAIzI,EAAQ,GACZ,GAAkB,MAAd8S,EAAQtK,IAA+B,MAAjBsK,EAAQtK,GAAGC,GAAY,CAE7C,IAAgB,MADhBzI,EAAQ8S,EAAQtK,GAAGC,IACRhG,GAAuB,GAAXzC,EAAMyC,IAAW4V,EACpC,SAEAA,GAAQ,EAGhB7E,EAAEzP,KAAK/D,GAEX,IAAIuY,KACJ,GAAI/E,EAAEtS,QAAUiX,EACZI,EAAK/E,MACF,CACH,IAAK,IAAI/K,EAAI+K,EAAEtS,OAAS,EAAGuH,GAAK,EAAGA,IAAK,CACpC,IAAIzI,EAAQ,GACZ,GAAY,MAARwT,EAAE/K,GAAY,CAEd,IAAgB,MADhBzI,EAAQwT,EAAE/K,IACChG,GAAuB,GAAXzC,EAAMyC,IAAW6V,EACpC,SAEAA,GAAQ,EAGhBC,EAAGC,QAAQxY,GAEf,IAAIyR,EAAI0G,EAAaI,EAAGrX,OACxB,IAAK,IAAIoI,EAAK,EAAGA,EAAKmI,EAAGnI,IACrBiP,EAAGxU,KAAK,IAGhBkG,EAAIlG,KAAKwU,GAEb,MACJ,IAAK,qBACDJ,EAAarF,EAAQ5R,OACrBwQ,EAASoB,EAAQ,GAAG5R,OACpB,IAAK,IAAIuH,EAAI,EAAGA,EAAIiJ,EAAQjJ,IAAK,CAC7B,IAAI+K,KAAQ6E,GAAQ,EAAMC,GAAQ,EAClC,IAAK,IAAI9P,EAAI,EAAGA,EAAI2P,EAAY3P,IAAK,CACjC,IAAIxI,EAAQ,GACZ,GAAkB,MAAd8S,EAAQtK,IAA+B,MAAjBsK,EAAQtK,GAAGC,GAAY,CAE7C,IAAgB,MADhBzI,EAAQ8S,EAAQtK,GAAGC,IACRhG,GAAuB,GAAXzC,EAAMyC,IAAW4V,EACpC,SAEAA,GAAQ,EAGhB7E,EAAEzP,KAAK/D,GAEX,IAAIuY,KACJ,GAAI/E,EAAEtS,QAAUiX,EACZI,EAAK/E,MACF,CACH,IAAK,IAAIhL,EAAIgL,EAAEtS,OAAS,EAAGsH,GAAK,EAAGA,IAAK,CACpC,IAAIxI,EAAQ,GACZ,GAAY,MAARwT,EAAEhL,GAAY,CAEd,IAAgB,MADhBxI,EAAQwT,EAAEhL,IACC/F,GAAuB,GAAXzC,EAAMyC,IAAW6V,EACpC,SAEAA,GAAQ,EAGhBC,EAAGC,QAAQxY,GAEf,IAAIyR,EAAI0G,EAAaI,EAAGrX,OACxB,IAAK,IAAIkI,EAAK,EAAGA,EAAKqI,EAAGrI,IACrBmP,EAAGxU,KAAK,IAGhBkG,EAAIlG,KAAKwU,GAEbH,KACA,IAAK,IAAI3P,EAAI,EAAGA,EAAIwB,EAAI,GAAG/I,OAAQuH,IAAK,CACpC,IAAI+K,KACJ,IAAK,IAAIhL,EAAI,EAAGA,EAAIyB,EAAI/I,OAAQsH,IAAK,CACjC,IAAIxI,EAAQ,GACE,MAAViK,EAAIzB,IAA2B,MAAbyB,EAAIzB,GAAGC,KACzBzI,EAAQiK,EAAIzB,GAAGC,IAEnB+K,EAAEzP,KAAK/D,GAEXoY,EAAKrU,KAAKyP,GAEd,MACJ,IAAK,uBACD2E,EAAarF,EAAQ,GAAG5R,OACxB,IAAK,IAAIsH,EAAI,EAAGA,EAAIsK,EAAQ5R,OAAQsH,IAAK,CACrC,IAAIgL,KAAQiF,KACZ,IAAK,IAAIhQ,EAAI,EAAGA,EAAI0P,EAAY1P,IAAK,CACjC,IAAIzI,EAAQ,KACM,MAAd8S,EAAQtK,IAA+B,MAAjBsK,EAAQtK,GAAGC,MACjCzI,EAAQ8S,EAAQtK,GAAGC,IACThG,KAAKgW,EACXA,EAAOzY,EAAMyC,GAAGsB,KAAK/D,IAErByY,EAAOzY,EAAMyC,MACbgW,EAAOzY,EAAMyC,GAAGsB,KAAK/D,KAIjC,IAAK,IAAIyI,EAAI,EAAGA,EAAI0P,EAAY1P,IAAK,CACjC,IAAIzI,EAAQ,KACM,MAAd8S,EAAQtK,IAA+B,MAAjBsK,EAAQtK,GAAGC,IAEH,GAA1BgQ,GADJzY,EAAQ8S,EAAQtK,GAAGC,IACFhG,GAAGvB,QAChBsS,EAAEzP,KAAK/D,GAInB,IAAIyR,EAAI0G,EAAa3E,EAAEtS,OACvB,IAAK,IAAIoI,EAAK,EAAGA,EAAKmI,EAAGnI,IACrBkK,EAAEzP,KAAK,MAEXkG,EAAIlG,KAAKyP,GAEb,MACJ,IAAK,0BACD9B,EAASoB,EAAQ,GAAG5R,OACpBiX,EAAarF,EAAQ5R,OACrB,IAAK,IAAIuH,EAAI,EAAGA,EAAIiJ,EAAQjJ,IAAK,CAC7B,IAAI+K,KAAQiF,KACZ,IAAK,IAAIjQ,EAAI,EAAGA,EAAI2P,EAAY3P,IAAK,CACjC,IAAIxI,EAAQ,KACM,MAAd8S,EAAQtK,IAA+B,MAAjBsK,EAAQtK,GAAGC,MACjCzI,EAAQ8S,EAAQtK,GAAGC,IACThG,KAAKgW,EACXA,EAAOzY,EAAMyC,GAAGsB,KAAK/D,IAErByY,EAAOzY,EAAMyC,MACbgW,EAAOzY,EAAMyC,GAAGsB,KAAK/D,KAIjC,IAAK,IAAIwI,EAAI,EAAGA,EAAI2P,EAAY3P,IAAK,CACjC,IAAIxI,EAAQ,KACM,MAAd8S,EAAQtK,IAA+B,MAAjBsK,EAAQtK,GAAGC,IAEH,GAA1BgQ,GADJzY,EAAQ8S,EAAQtK,GAAGC,IACFhG,GAAGvB,QAChBsS,EAAEzP,KAAK/D,GAInBuY,GAAK/E,EACL,IAAI/B,EAAI0G,EAAaI,GAAGrX,OACxB,IAAK,IAAIkI,EAAK,EAAGA,EAAKqI,EAAGrI,IACrBmP,GAAGxU,KAAK,MAEZkG,EAAIlG,KAAKwU,IAEbH,KACA,IAAK,IAAI3P,EAAI,EAAGA,EAAIwB,EAAI,GAAG/I,OAAQuH,IAAK,CACpC,IAAI+K,KACJ,IAAK,IAAIhL,EAAI,EAAGA,EAAIyB,EAAI/I,OAAQsH,IAAK,CACjC,IAAIxI,EAAQ,KACE,MAAViK,EAAIzB,IAA2B,MAAbyB,EAAIzB,GAAGC,KACzBzI,EAAQiK,EAAIzB,GAAGC,IAEnB+K,EAAEzP,KAAK/D,GAEXoY,EAAKrU,KAAKyP,GAEd,MACJ,IAAK,YAED3K,QAAQC,IAAI,QAGhBzN,EAAOqd,eAAezO,EAAKrE,GACvBjF,GAA8B,mBAAZA,GAClBA,MAq0CJgY,kBAl0CJ,SAA2BlV,EAAMkD,EAAQ1G,MAiBrC,IAAKwD,IAfD,OAEA,QAEA,WAEA,UAEA,QAEA,OAEA,OAGoByH,QAAQzH,GAAQ,EACpC,OAAOtI,EAAQoF,KAAK,iCAAkC,IAE1D,IAAK1B,GAAU8H,GACX,OAAOxL,EAAQoF,KAAK,mCAAoC,IAE5D,IAAIoI,EAAW/N,EAAMoN,uBAAuB,IACxCpC,MAACA,EAAQ+C,EAAQhI,QAAEA,OAAgBV,GACvC,GAAI2F,aAAiBgD,OAAShD,EAAM1E,OAAS,EAEzC,YADA/F,EAAQoF,KAAKxF,IAAS6X,KAAKD,QAAS,IAGpC/M,GAA0B,iBAAVA,GAAsB3K,EAAQ+K,WAAWJ,KACzDA,EAAQ3K,EAAQiL,aAAaN,IAEjC,IAAIkN,EAAU3U,GAAmByH,GACjC,GAAsB,GAAlBkN,EAAQ5R,OACR,OAEJ,IAAI+I,KACJ,IAAK,IAAIzB,EAAI,EAAGA,EAAIsK,EAAQ5R,OAAQsH,IAAK,CACrC,IAAIgL,KACJ,IAAK,IAAI/K,EAAI,EAAGA,EAAIqK,EAAQ,GAAG5R,OAAQuH,IAAK,CACxC,IAAIzI,EAAQ,GACM,MAAd8S,EAAQtK,IAA+B,MAAjBsK,EAAQtK,GAAGC,KACjCzI,EAAQ8S,EAAQtK,GAAGC,GACI,MAAnB5B,SAAS7G,SAAsCyK,GAApBqI,EAAQtK,GAAGC,GAAG/F,IAAyC,KAAtBoQ,EAAQtK,GAAGC,GAAG/F,GAAG2O,IACjE,SAAR5N,EACAzD,EAAMyC,EAAIzC,EAAMyC,EAAIkE,EACL,YAARlD,EACPzD,EAAMyC,EAAIzC,EAAMyC,EAAIkE,EACL,WAARlD,EACPzD,EAAMyC,EAAImW,UAAU5Y,EAAMyC,EAAIkE,EAAQ,GACvB,SAARlD,EACPzD,EAAMyC,EAAIoW,KAAKC,IAAI9Y,EAAMyC,EAAGkE,GACb,QAARlD,EACO,GAAVkD,EACA3G,EAAMyC,EAAImW,UAAUC,KAAKE,KAAK/Y,EAAMyC,GAAI,GACvB,GAAVkE,GAAekS,KAAKG,KAC3BhZ,EAAMyC,EAAImW,UAAUC,KAAKG,KAAKhZ,EAAMyC,GAAI,GAExCzC,EAAMyC,EAAImW,UAAUK,OAAOjZ,EAAMyC,EAAGkE,GAAS,GAGjD3G,EAAMyC,EADS,OAARgB,EACGmV,UAA8B,IAApBC,KAAK/P,IAAI9I,EAAMyC,GAAaoW,KAAK/P,IAAI+P,KAAKK,IAAIvS,IAAU,GAElE3G,EAAMyC,EAAIkE,EAET,MAAX3G,EAAMyC,EACNzC,EAAM4C,EAAI,GAEV5C,EAAM4C,EAAI5C,EAAMyC,EAAEL,aAI9BoR,EAAEzP,KAAK/D,GAEXiK,EAAIlG,KAAKyP,GAEbnY,EAAOqd,eAAezO,EAAKrE,GACvBjF,GAA8B,mBAAZA,GAClBA,KAqvCJwY,YAlvCJ,SAAqBlZ,MACjB,IAAImZ,EAAYxe,EAAMiG,eAAeK,OAAS,GAC1CmY,YAACA,KAAgB7Y,MAAEA,EAAQ4Y,EAASzY,QAAEA,OAAgBV,GAC1D,IAAKpB,GAAU2B,GACX,OAAOrF,EAAQoF,KAAK,iCAAkC,IAE1DC,EAAQwN,OAAOxN,GACf,IAAI0C,EAAQzG,EAAY6c,2BAEpBD,EAAYE,WAAaF,EAAYE,UAAUrY,OAAS,GACxDmY,EAAYE,UAAUnR,QAAQ4B,IAC1BA,EAAK9G,MAAQA,IAGrB,IAAIsW,EAAY/c,EAAYgd,wBAAwB7e,EAAMiG,gBAAgB,GAC1E,GAAMwY,EAAYK,KAAM,CACpB,IAAIC,GAAW,EACf,IAAK,IAAI/V,EAAI,EAAGA,EAAIhJ,EAAMiG,eAAeK,OAAQ0C,IAC7C,GAAIhJ,EAAMiG,eAAe+C,GAAG8V,MAAQL,EAAYK,KAAM,CAClDC,GAAW,EACX,MAGHA,IACDH,EAAYH,EAAYK,MAGhC1Y,EAAE,iCAAiC4Y,OAAOvc,EAAYkC,IAClD2D,MAASA,EACT2W,OAAU,GACVH,KAAQF,EACR5N,MAAS,GACTkO,SAAY,MAEhB,IAAIC,GACAL,KAAQ,GACR/N,MAAS,GACTqO,OAAU,IACVxZ,MAAS,GACT0C,MAAS,GACTgH,YACApK,IAAOlF,EAAMqf,cACbla,OAAUnF,EAAMsf,iBAChB5S,UACA6S,WAAc,KACdC,cAAgB,GAMpB,IAJAL,EAAc/Y,EAAEC,QAAO,EAAM8Y,EAAaV,IAC9BnW,MAAQA,EACpB6W,EAAYL,KAAOF,EACnBO,EAAYvZ,MAAQA,EAChBA,GAAS,EAAG,CACZ,IAAI6Z,EAAczf,EAAMiG,eAAe,GAAGqC,MACtCoX,EAAYtZ,EAAE,0BAA4BqZ,GAC9CrZ,EAAE,0BAA4BkC,GAAOqX,aAAaD,GAClD1f,EAAMiG,eAAe+W,OAAO,EAAG,EAAGmC,OAC/B,CACCvZ,EAAQ5F,EAAMiG,eAAeK,SAC7BV,EAAQ5F,EAAMiG,eAAeK,QAEjC,IAAIsZ,EAAa5f,EAAMiG,eAAeL,EAAQ,GAAG0C,MAC7CuX,EAAWzZ,EAAE,0BAA4BwZ,GAC7CxZ,EAAE,0BAA4BkC,GAAOwX,YAAYD,GACjD7f,EAAMiG,eAAe+W,OAAOpX,EAAO,EAAGuZ,GAE1C,IAAIY,KAWJ,GAVA/f,EAAMiG,eAAeuH,QAAQ,CAAC4B,EAAMpG,EAAGqG,KACnCA,EAAIrG,GAAGpD,MAAQoD,EACf+W,EAAO3Q,EAAK9G,MAAMd,YAAcwB,IAEpC5C,EAAE,qDAAqD4Z,YAAY,iCACnE5Z,EAAE,0BAA4BkC,GAAO2X,SAAS,iCAC9C7Z,EAAE,yBAAyB4Y,OAAO,gDAAkD1W,EAAQ,wDAC5F3H,GAAiB,GACjBY,EAAOwL,UAAU,MAAO,KAAM3G,EAAEC,QAAO,KAAU8Y,IACjD5d,EAAOwL,UAAU,MAAO,KAAMgT,GAC1B/f,EAAM2M,YAAa,CACnB3M,EAAM6M,OAAOvG,OAAS,EACtB,IAAIsG,GACJ/D,KAAe,YACf+D,EAAkB,YAAIxG,EAAEC,QAAO,KAAU8Y,GACzCvS,EAAY,MAAItE,EAChBsE,EAAwB,kBAAI5M,EAAM6F,kBAClC7F,EAAM8M,OAAO3D,KAAKyD,GAEtB/K,EAAYqe,gBAAgB5X,GAAO,GAAO,GACtCvC,GAA8B,mBAAZA,GAClBA,KA4pCJoa,eAzpCJ,SAAwB9a,MACpB,IAAIO,MAACA,EAAQ/C,EAAc7C,EAAM6F,mBAAkBE,QAAEA,OAAgBV,GACjEW,EAAOhG,EAAMiG,eAAeL,GAChC,OAAY,MAARI,EACOzF,EAAQoF,KAAK,kCAAmC,IAEvB,IAAhC3F,EAAMiG,eAAeK,OACd/F,EAAQoF,KAAKxF,IAASgf,YAAYiB,YAAa,KAE1Dve,EAAYwe,YAAYra,EAAKsC,OAC7BF,WAAW,KACHrC,GAA8B,mBAAZA,GAClBA,KAEL,GACIC,IA2oCPsa,aAzoCJ,SAAsBjb,MAClB,IAAIkb,YAACA,EAAW3a,MAAEA,EAAQ/C,EAAc7C,EAAM6F,mBAAkBE,QAAEA,OAAgBV,GAC9EW,EAAOhG,EAAMiG,eAAeL,GAChC,GAAY,MAARI,EACA,OAAOzF,EAAQoF,KAAK,kCAAmC,IAK3D,GAHmB,MAAf4a,IACAA,EAAc3a,EAAQ,IAErB3B,GAAUsc,GACX,OAAOhgB,EAAQoF,KAAK,wCAAyC,IAEjE,IAAI6a,EAAYxa,EAAKsC,MACjBA,EAAQzG,EAAY6c,2BACpB+B,EAAWra,EAAEC,QAAO,KAAUL,GAClCya,EAAS7a,MAAQ5F,EAAMiG,eAAeK,OACtCma,EAASnY,MAAQA,EACjBmY,EAAS3B,KAAOjd,EAAY6e,sBAAsB1gB,EAAMiG,eAAgBwa,EAAS3B,MACjF,IAAII,EAAW,GACO,MAAlBuB,EAAS1P,QACTmO,EAAW,6IAA+IuB,EAAS1P,MAAQ,aAE/K,IAAI8O,EAAWzZ,EAAE,0BAA4Boa,GAwB7C,GAvBIvc,GAAUsc,KACVV,EAAWzZ,EAAE,0BAA4BpG,EAAMiG,eAAesa,EAAc,GAAGjY,QAEnFlC,EAAE,iCAAiC4Y,OAAOvc,EAAYkC,IAClD2D,MAASmY,EAASnY,MAClB2W,OAAU,GACVH,KAAQ2B,EAAS3B,KACjBlZ,MAAS6a,EAAS7a,MAClBoL,MAAS,GACTkO,SAAYA,KAEhB9Y,EAAE,0BAA4Bqa,EAASnY,OAAOwX,YAAYD,GAC1D7f,EAAMiG,eAAe+W,OAAOuD,EAAa,EAAGE,GAC5Cra,EAAE,qDAAqD4Z,YAAY,iCACnE5Z,EAAE,0BAA4BkC,GAAO2X,SAAS,iCAC9C7Z,EAAE,yBAAyB4Y,OAAO,gDAAkD1W,EAAQ,wDAC5F3H,GAAiB,GACjBY,EAAOwL,UAAU,MAAOzE,GACpBkY,UAAaA,EACb1B,KAAQ2B,EAAS3B,OAErBjd,EAAYqe,gBAAgB5X,GAC5BzG,EAAY8e,kBACR3gB,EAAM2M,YACN3M,EAAM8M,OAAO3D,MACTN,KAAQ,YACR2X,UAAaA,EACblY,MAASmY,EAASnY,MAClBwD,WAAc2U,EAASnY,aAExB,GAAItI,EAAM8M,OAAOxG,OAAS,EAAG,CAChC,IAAIsa,EAAY5gB,EAAM8M,OAAO9M,EAAM8M,OAAOxG,OAAS,GAC7B,aAAlBsa,EAAU/X,OACV+X,EAAUtY,MAAQmY,EAASnY,MAC3BsY,EAAU9U,WAAa2U,EAASnY,OAQxC,OALAF,WAAW,KACHrC,GAA8B,mBAAZA,GAClBA,KAEL,GACI0a,GAykCPI,aAvkCJ,SAAsBxb,MAClB,IAAIO,MAACA,EAAQ/C,EAAc7C,EAAM6F,mBAAkBE,QAAEA,OAAgBV,GACjEW,EAAOhG,EAAMiG,eAAeL,GAChC,OAAY,MAARI,EACOzF,EAAQoF,KAAK,kCAAmC,KAE3D9D,EAAYgf,aAAa7a,EAAKsC,OAC9BF,WAAW,KACHrC,GAA8B,mBAAZA,GAClBA,KAEL,GACIC,IA4jCP8a,aA1jCJ,SAAsBzb,MAClB,IAAIO,MAACA,EAAQ/C,EAAc7C,EAAM6F,mBAAkBE,QAAEA,OAAgBV,GACjEW,EAAOhG,EAAMiG,eAAeL,GAChC,OAAY,MAARI,EACOzF,EAAQoF,KAAK,kCAAmC,KAE3D9D,EAAYif,aAAa9a,EAAKsC,OAC9BF,WAAW,KACHrC,GAA8B,mBAAZA,GAClBA,KAEL,GACIC,IA+iCP+a,eA7iCJ,SAAwBnb,EAAOP,MAC3B,GAAa,MAATO,IAAkB3B,GAAU2B,IAAyC,MAA/B5F,EAAMiG,eAAeL,GAC3D,OAAOrF,EAAQoF,KAAK,kCAAmC,IAE3D,IAAIK,EAAOhG,EAAMiG,eAAeL,IAC5BG,QAACA,OAAgBV,GAUrB,OATAe,EAAE,qDAAqD4Z,YAAY,iCACnE5Z,EAAE,0BAA4BJ,EAAKsC,OAAO2X,SAAS,iCACnDpe,EAAYmf,YAAYhb,EAAKsC,OAC7BF,WAAW,KACHrC,GAA8B,mBAAZA,GAClBA,KAEL,GACHxE,EAAO0f,oBACAjb,GA+hCPkb,aA7hCJ,SAAsBpC,EAAMzZ,MACxB,GAAwB,UAApB3C,EAAWoc,IAA+C,GAA1BA,EAAKtX,WAAWlB,OAChD,OAAO/F,EAAQoF,KAAK,iCAAkC,IAE1D,IAAIC,MAACA,EAAQ/C,EAAc7C,EAAM6F,mBAAkBE,QAAEA,OAAgBV,GACjEW,EAAOhG,EAAMiG,eAAeL,GAChC,GAAY,MAARI,EACA,OAAOzF,EAAQoF,KAAK,kCAAmC,IAE3D,IAAIwb,EAASnb,EAAK8Y,KAIlB,GAHA9Y,EAAK8Y,KAAOA,EACZ1Y,EAAE,0BAA4BJ,EAAKsC,MAAQ,iCAAiC8Y,KAAKtC,GACjFvd,EAAOwL,UAAU,MAAO/G,EAAKsC,MAAOwW,GAAQ9R,EAAK,SAC7ChN,EAAM2M,YAAa,CACnB,IAAIC,GACJ/D,KAAe,aACf+D,EAAiB,WAAI5G,EAAKsC,MAC1BsE,EAAa,OAAIuU,EACjBvU,EAAU,IAAIkS,EACd9e,EAAM6M,OAAOvG,OAAS,EACtBtG,EAAM8M,OAAO3D,KAAKyD,GAElB7G,GAA8B,mBAAZA,GAClBA,KAugCJsb,cApgCJ,SAAuBtQ,EAAO1L,MAC1B,GAAyB,UAArB3C,EAAWqO,IAAiD,GAA3BA,EAAMvJ,WAAWlB,OAClD,OAAO/F,EAAQoF,KAAK,kCAAmC,IAE3D,IAAIC,MAACA,EAAQ/C,EAAc7C,EAAM6F,mBAAkBE,QAAEA,OAAgBV,GACjEW,EAAOhG,EAAMiG,eAAeL,GAChC,GAAY,MAARI,EACA,OAAOzF,EAAQoF,KAAK,kCAAmC,IAE3D,IAAI2b,EAAWtb,EAAK+K,MAKpB,GAJA/K,EAAK+K,MAAQA,EACb3K,EAAE,0BAA4BJ,EAAKsC,OAAOC,KAAK,iCAAiCsR,SAChFzT,EAAE,0BAA4BJ,EAAKsC,OAAO0W,OAAO,6IAA+IjO,EAAQ,aACxMxP,EAAOwL,UAAU,MAAO/G,EAAKsC,MAAOyI,GAAS/D,EAAK,UAC9ChN,EAAM2M,YAAa,CACnB,IAAIC,GACJ/D,KAAe,cACf+D,EAAiB,WAAI5G,EAAKsC,MAC1BsE,EAAe,SAAI0U,EACnB1U,EAAY,MAAImE,EAChB/Q,EAAM6M,OAAOvG,OAAS,EACtBtG,EAAM8M,OAAO3D,KAAKyD,GAElB7G,GAA8B,mBAAZA,GAClBA,KA6+BJwb,aA1+BJ,SAAsB1Y,EAAMxD,MACxB,GAAY,QAARwD,GAA0B,SAARA,IAAoB5E,GAAU4E,GAChD,OAAOtI,EAAQoF,KAAK,+BAAgC,IAEpD1B,GAAU4E,KACVA,EAAOoD,SAASpD,IAEpB,IAAI4L,EAAW5R,EAAc7C,EAAM6F,oBAC/BD,MAACA,EAAQ6O,EAAQ1O,QAAEA,OAAgBV,GACnCW,EAAOhG,EAAMiG,eAAeL,GAChC,GAAY,MAARI,EACA,OAAOzF,EAAQoF,KAAK,2BAA4B,IAEpD,IAAImG,EAAa9F,EAAKsC,MACtB,GAAY,QAARO,EAAgB,CAChB,GAAa,GAATjD,EACA,OAEJ,IAAI4b,EAAYxhB,EAAMiG,eAAeL,EAAQ,GAAG0C,MAChDlC,EAAE,0BAA4B0F,GAAY6T,aAAavZ,EAAE,0BAA4Bob,IACrFxhB,EAAMiG,eAAe+W,OAAOpX,EAAO,GACnC5F,EAAMiG,eAAe+W,OAAOpX,EAAQ,EAAG,EAAGI,QACvC,GAAY,SAAR6C,EAAiB,CACxB,GAAIjD,GAAS5F,EAAMiG,eAAeK,OAAS,EACvC,OAEJ,IAAImb,EAAYzhB,EAAMiG,eAAeL,EAAQ,GAAG0C,MAChDlC,EAAE,0BAA4B0F,GAAYgU,YAAY1Z,EAAE,0BAA4Bqb,IACpFzhB,EAAMiG,eAAe+W,OAAOpX,EAAO,GACnC5F,EAAMiG,eAAe+W,OAAOpX,EAAQ,EAAG,EAAGI,OACvC,CAOH,GANI6C,EAAO,IACPA,EAAO,GAEPA,EAAO7I,EAAMiG,eAAeK,OAAS,IACrCuC,EAAO7I,EAAMiG,eAAeK,OAAS,GAErCuC,GAAQjD,EACR,OAEJ,GAAIiD,EAAOjD,EAAO,CACd,IAAI4b,EAAYxhB,EAAMiG,eAAe4C,GAAMP,MAC3ClC,EAAE,0BAA4B0F,GAAY6T,aAAavZ,EAAE,0BAA4Bob,QAClF,CACH,IAAIC,EAAYzhB,EAAMiG,eAAe4C,GAAMP,MAC3ClC,EAAE,0BAA4B0F,GAAYgU,YAAY1Z,EAAE,0BAA4Bqb,IAExFzhB,EAAMiG,eAAe+W,OAAOpX,EAAO,GACnC5F,EAAMiG,eAAe+W,OAAOnU,EAAM,EAAG7C,GAEzC,IAAI+Z,KACJ/f,EAAMiG,eAAeuH,QAAQ,CAAC4B,EAAMpG,EAAGqG,KACnCA,EAAIrG,GAAGpD,MAAQoD,EACf+W,EAAO3Q,EAAK9G,MAAMd,YAAcwB,IAEpCzH,EAAOwL,UAAU,MAAO,KAAMgT,GAC1Bha,GAA8B,mBAAZA,GAClBA,KAk7BJ2b,cA/6BJ,SAAuBC,EAAWtc,MAC9B,GAAiB,MAAbsc,GAAyC,GAApBA,EAAUrb,OAC/B,OAAO/F,EAAQoF,KAAK,+BAAgC,IAExD,IAAIic,KACJD,EAAUnU,QAAQ4B,IACdwS,EAAaxS,EAAK9G,MAAMd,YAAc4H,EAAKxJ,QAE/C5F,EAAMiG,eAAe6P,KAAK,CAACmB,EAAG4K,KAC1B,IAAIC,EAAUF,EAAa3K,EAAE3O,MAAMd,YAC/Bua,EAAUH,EAAaC,EAAEvZ,MAAMd,YACnC,OAAe,MAAXsa,GAA8B,MAAXC,EACZD,EAAUC,EACC,MAAXD,GACC,EAED,IAKf,IAAI/B,KACJ/f,EAAMiG,eAAeuH,QAAQ,CAAC4B,EAAMpG,EAAGqG,KAGnC,GAFAA,EAAIrG,GAAGpD,MAAQoD,EACf+W,EAAO3Q,EAAK9G,MAAMd,YAAcwB,EAC5BA,EAAI,EAAG,CACP,IAAIgZ,EAAW3S,EAAIrG,EAAI,GAAGV,MAC1BlC,EAAE,0BAA4BgJ,EAAK9G,OAAOwX,YAAY1Z,EAAE,0BAA4B4b,OAG5FzgB,EAAOwL,UAAU,MAAO,KAAMgT,GAC9B,IAAIha,QAACA,OAAgBV,GACjBU,GAA8B,mBAAZA,GAClBA,KA+4BJkc,aA54BJ,SAAsBC,EAAM7c,MACxB,IAAKpB,GAAUie,IAASA,EAAO,IAAOA,EAAO,EACzC,OAAO3hB,EAAQoF,KAAK,iCAAkC,IAE1D,IAAIC,MAACA,EAAQ/C,EAAc7C,EAAM6F,mBAAkBE,QAAEA,OAAgBV,GACjEW,EAAOhG,EAAMiG,eAAeL,GAChC,GAAY,MAARI,EACA,OAAOzF,EAAQoF,KAAK,kCAAmC,IAE3DK,EAAgB,UAAIkc,EACpB3gB,EAAOwL,UAAU,MAAO/G,EAAKsC,MAAO4Z,GAAQlV,EAAK,cAC7ChH,EAAKsC,OAAStI,EAAM6F,oBACpB7F,EAAMmiB,UAAYD,EAClBnd,KACAD,MAEAiB,GAA8B,mBAAZA,GAClBA,KA43BJqc,cAz3BJ,SAAuB/c,MACnB,IAAIO,MAACA,EAAQ/C,EAAc7C,EAAM6F,mBAAkBE,QAAEA,OAAgBV,GACjEW,EAAOhG,EAAMiG,eAAeL,GAChC,OAAY,MAARI,EACOzF,EAAQoF,KAAK,kCAAmC,KAE3DK,EAAKoc,eAAgB,EACjBpc,EAAKsC,OAAStI,EAAM6F,oBACpB7F,EAAMoiB,eAAgB,EACtBha,WAAW,WACP3E,MACD,IAEP2E,WAAW,KACHrC,GAA8B,mBAAZA,GAClBA,KAEL,GACIC,IAw2BPqc,cAt2BJ,SAAuBhd,MACnB,IAAIO,MAACA,EAAQ/C,EAAc7C,EAAM6F,mBAAkBE,QAAEA,OAAgBV,GACjEW,EAAOhG,EAAMiG,eAAeL,GAChC,OAAY,MAARI,EACOzF,EAAQoF,KAAK,kCAAmC,KAE3DK,EAAKoc,eAAgB,EACjBpc,EAAKsC,OAAStI,EAAM6F,oBACpB7F,EAAMoiB,eAAgB,EACtBha,WAAW,WACP3E,MACD,IAEP2E,WAAW,KACHrC,GAA8B,mBAAZA,GAClBA,KAEL,GACIC,IAq1BPsc,QAn1BJ,SAAiBjd,MAEb3B,KACA,IAAIqC,QAACA,OAAgBV,GACjBU,GAA8B,mBAAZA,GAClBA,KA+0BJwc,OA50BJ,SAAgBld,MACZ,IAAImF,WAACA,EAAUb,UAAEA,EAAS6Y,UAAEA,EAASC,aAAEA,EAAY1c,QAAEA,OAAgBV,GACrE,GAAkB,MAAdmF,EAAoB,CACpB,IAAKvG,GAAUuG,GACX,OAAOjK,EAAQoF,KAAK,uCAAwC,IAEhES,EAAE,2BAA2BoE,WAAWA,QACrC,GAAoB,MAAhBiY,EAAsB,CAC7B,IAAKxe,GAAUwe,GACX,OAAOliB,EAAQoF,KAAK,yCAA0C,IAExD3F,EAAM0K,kBAAkB+X,GAAlC,IAAiDC,EAAUD,GAAgB,EAAI,EAAIziB,EAAM0K,kBAAkB+X,EAAe,GAC1Hrc,EAAE,2BAA2BoE,WAAWkY,GAE5C,GAAiB,MAAb/Y,EAAmB,CACnB,IAAK1F,GAAU0F,GACX,OAAOpJ,EAAQoF,KAAK,sCAAuC,IAE/DS,EAAE,2BAA2BuD,UAAUA,QACpC,GAAiB,MAAb6Y,EAAmB,CAC1B,IAAKve,GAAUue,GACX,OAAOjiB,EAAQoF,KAAK,sCAAuC,IAErD3F,EAAM6J,eAAe2Y,GAA/B,IAA2CG,EAAUH,GAAa,EAAI,EAAIxiB,EAAM6J,eAAe2Y,EAAY,GAC3Gpc,EAAE,2BAA2BuD,UAAUgZ,GAEvC5c,GAA8B,mBAAZA,GAClBA,KAkzBJ6c,OA/yBJ,SAAgBvd,MACZzD,IACA,IAAImE,QAACA,OAAgBV,GACjBU,GAA8B,mBAAZA,GAClBA,KA4yBJ8c,cAzyBJ,SAAuBxd,MACnB,IAAI2F,MACAA,EAAQhL,EAAMoN,uBAAuBpN,EAAMoN,uBAAuB9G,OAAS,QACtEjB,GACT,GAAyB,UAArB3C,EAAWsI,GAAoB,CAC/B,IAAK3K,EAAQ+K,WAAWJ,GACpB,OAAOzK,EAAQoF,KAAK,kCAAmC,IAE3D,IAAI0I,EAAYhO,EAAQiL,aAAaN,GACrCA,GACI9F,IAAOmJ,EAAUnJ,IACjBC,OAAUkJ,EAAUlJ,QAG5B,GAAyB,UAArBzC,EAAWsI,IAAmC,MAAbA,EAAM9F,KAA+B,MAAhB8F,EAAM7F,OAC5D,OAAO5E,EAAQoF,KAAK,kCAAmC,IAE3D,IAAIgV,EAAM3P,EAAM9F,IAAI,GAAIiY,EAAMnS,EAAM9F,IAAI,GAAIkY,EAAMpS,EAAM7F,OAAO,GAAIkY,EAAMrS,EAAM7F,OAAO,GAEtF,GADiBhB,GAAUnE,EAAM0M,OAAQiO,EAAKwC,EAAKC,EAAKC,GAEpD,OAAO9c,EAAQoF,KAAK,0DAA2D,IAEnF,IAEImd,EAAcC,EAQdC,EAAaC,EAVbpZ,EAAiB7J,EAAM6J,eACvBa,EAAoB1K,EAAM0K,kBAE1BiQ,EAAM,EAAI,GACVmI,EAAe,EACfC,EAAYlZ,EAAesT,KAE3B2F,EAAejZ,EAAe8Q,EAAM,GACpCoI,EAAYlZ,EAAesT,GAAOtT,EAAe8Q,EAAM,IAGvDyC,EAAM,EAAI,GACV4F,EAAc,EACdC,EAAWvY,EAAkB2S,KAE7B2F,EAActY,EAAkB0S,EAAM,GACtC6F,EAAWvY,EAAkB2S,GAAO3S,EAAkB0S,EAAM,IAEhE,IAAI8F,EAAY9c,EAAE,YAAY6B,MAC1Bkb,MAAOlF,KAAKmF,KAAKH,EAAWjjB,EAAMqjB,kBAClCC,OAAQrF,KAAKmF,KAAKL,EAAY/iB,EAAMqjB,oBACrC/R,KACC6R,MAAOF,EACPK,OAAQP,IAEZxe,GAAmBye,EAAaF,EAAcG,EAAUF,EAAW,EAAG,EAAG,KAAM,KAAMG,GACrF,IAAIK,EAAgBL,EAAUM,IAAI,GAAGC,WAAW,MAiBhD,OAfAF,EAAcG,YACdH,EAAcI,OAAO,EAAG,GACxBJ,EAAcK,OAAO,EAAG5jB,EAAMqjB,iBAAmBN,GACjDQ,EAAcM,UAAqC,EAAzB7jB,EAAMqjB,iBAChCE,EAAcO,YAAclf,GAAuBkf,YACnDP,EAAcQ,SACdR,EAAcS,YACdT,EAAcG,YACdH,EAAcI,OAAO,EAAG,GACxBJ,EAAcK,OAAO5jB,EAAMqjB,iBAAmBJ,EAAU,GACxDM,EAAcM,UAAqC,EAAzB7jB,EAAMqjB,iBAChCE,EAAcO,YAAclf,GAAuBkf,YACnDP,EAAcQ,SACdR,EAAcS,YACJd,EAAUM,IAAI,GAAGS,UAAU,cA0uBrCC,gBAvuBJ,SAAyBpF,EAAMzZ,MAC3B,GAAY,MAARyZ,GAA0C,GAA1BA,EAAKtX,WAAWlB,OAChC,OAAO/F,EAAQoF,KAAK,iCAAkC,IAE1DS,EAAE,iCAAiCwJ,IAAIkP,GACvC,IAAI/Y,QAACA,OAAgBV,GACjBU,GAA8B,mBAAZA,GAClBA,KAiuBJoe,gBA9tBJ,SAAyB9e,MACrB,IAAIyZ,EAAO,GACPsF,EAAUhe,EAAE,iCAChB,GAAsB,GAAlBge,EAAQ9d,OAER,OADA/F,EAAQoF,KAAK,sDACNmZ,EAEXA,EAAO1Y,EAAEie,KAAKD,EAAQxU,OACtB,IAAI7J,QAACA,OAAgBV,GAMrB,OALA+C,WAAW,KACHrC,GAA8B,mBAAZA,GAClBA,KAEL,GACI+Y,GAitBPwF,KA/sBJ,SAAcjf,MACV,IAAIkf,EAAMne,EAAEC,QAAO,KAAUrG,EAAM8M,OAAO9M,EAAM8M,OAAOxG,OAAS,IAChEnE,EAAeyK,KAAK,IAAI8L,MAAM,WAC9B9V,IACA,IAAImD,QAACA,OAAgBV,GAMrB,OALA+C,WAAW,KACHrC,GAA8B,mBAAZA,GAClBA,KAEL,GACIwe,GAssBP3X,KApsBJ,SAAcvH,MACV,IAAIkf,EAAMne,EAAEC,QAAO,KAAUrG,EAAM6M,OAAO7M,EAAM6M,OAAOvG,OAAS,IAChEnE,EAAemiB,KAAK,IAAI5L,MAAM,WAC9B9V,IACA,IAAImD,QAACA,OAAgBV,GAMrB,OALA+C,WAAW,KACHrC,GAA8B,mBAAZA,GAClBA,KAEL,GACIwe,GA2rBPpV,aAAcA,GACdqV,SA/qBJ,SAAkBnf,MACd,IAAIiD,MAACA,EAAK1C,MAAEA,EAAKkZ,KAAEA,OAAazZ,GAChC,OAAa,MAATiD,EACOzG,EAAY4iB,gBAAgBnc,GACnB,MAAT1C,EACA5F,EAAMiG,eAAeL,GACb,MAARkZ,EACAjd,EAAY6iB,eAAe5F,GAE/Bjd,EAAY4iB,mBAuqBnBE,aArqBJ,SAAsBtf,MAClB,IAAIO,MACAA,EAAQ/C,EAAc7C,EAAM6F,wBACvBR,GACLW,EAAOhG,EAAMiG,eAAeL,GAChC,GAAY,MAARI,EACA,OAAOzF,EAAQoF,KAAK,kCAAmC,IAE3D,IAAIQ,EAAOC,EAAEC,QAAO,KAAUL,EAAKG,MAInC,OAHY,MAARA,GAA+B,GAAfA,EAAKG,SACrBH,EAAOC,EAAEC,QAAO,KAAUxE,EAAY0E,cAAcP,KAEjDG,GA0pBPye,UAxpBJ,SAAmBvf,MACf,IAAIO,MACAA,EAAQ/C,EAAc7C,EAAM6F,wBACvBR,GACLW,EAAOhG,EAAMiG,eAAeL,GAChC,OAAY,MAARI,EACOzF,EAAQoF,KAAK,kCAAmC,IAE9CS,EAAEC,QAAO,KAAUL,EAAK0G,SAipBrCmY,UA9oBJ,SAAmBpY,EAAKpH,MACpB,GAAuB,UAAnB3C,EAAW+J,GACX,OAAOlM,EAAQoF,KAAK,gCAAiC,IAEzD,IAAIC,MAACA,EAAQ/C,EAAc7C,EAAM6F,mBAAkBE,QAAEA,OAAgBV,GACjEW,EAAOhG,EAAMiG,eAAeL,GAChC,GAAY,MAARI,EACA,OAAOzF,EAAQoF,KAAK,kCAAmC,IAE3DK,EAAK0G,OAASD,EACVzG,EAAKsC,OAAStI,EAAM6F,oBACpB7F,EAAM0M,OAASD,GACX,cAAeA,GAAO,cAAeA,GAAO,WAAYA,GAAO,cAAeA,IAC9E9I,GAAmB3D,EAAMuF,SAASe,OAAQtG,EAAMuF,SAAS,GAAGe,QAEhE8B,WAAW,WACP3E,MACD,IAEHsC,GAA8B,mBAAZA,GAClBA,KA2nBJ+e,kBAxnBJ,WACI,OAAO/hB,KAwnBPgiB,oBAtnBJ,SAA6BC,EAAY3f,MACrC,GAA8B,UAA1B3C,EAAWsiB,GACX,OAAOzkB,EAAQoF,KAAK,uCAAwC,IAEhE,IAAIkD,KAACA,EAAIoc,MAAEA,EAAQ,KAAIC,OAAEA,EAAS,GAAEC,OAAEA,EAAS,GAAEC,OAAEA,GAAS,EAAKC,cAAEA,GAAgB,EAAKC,SAAEA,GAAW,EAAKC,SAAEA,EAAW,GAAEC,QAAEA,GAAU,OAAcR,GAY/IS,GACA,KACA,KACA,KACA,KACA,KACA,KACA,MACA,OAEAC,GACA,UACA,UACA,SAEAC,GACA,KACA,KACA,KACA,KACA,KACA,MACA,KACA,OAEAC,GACA,OACA,SAEJ,KAvCI,WACA,WACA,SACA,iBACA,iBACA,eACA,cACA,OACA,YA+BYlQ,SAAS7M,GACrB,OAAOtI,EAAQoF,KAAK,4CAA6C,IAErE,IAAIkgB,EAAS1lB,IAAS2lB,iBACtB,GAAY,YAARjd,GACA,GAAqB,GAAjBqc,EAAO5e,OAEP,YADA/F,EAAQoF,KAAK,6CAA8CkgB,EAAOE,mBAGnE,GAAY,YAARld,GACP,GAAqB,GAAjBqc,EAAO5e,QAAgC,GAAjB6e,EAAO7e,OAE7B,YADA/F,EAAQoF,KAAK,6CAA8CkgB,EAAOG,mBAGnE,GAAY,UAARnd,GAA4B,kBAARA,GAAoC,kBAARA,EAA0B,CACjF,IAAK4c,EAAc/P,SAASuP,GACxB,OAAO1kB,EAAQoF,KAAK,6CAA8C,IAEtE,IAAK1B,GAAUihB,GAEX,YADA3kB,EAAQoF,KAAK,6CAA8CkgB,EAAOI,cAGtE,GAAa,MAAThB,GAA0B,MAATA,EAAe,CAChC,IAAKhhB,GAAUkhB,GAEX,YADA5kB,EAAQoF,KAAK,6CAA8CkgB,EAAOI,cAGtE,GAAI7S,OAAO+R,GAAU/R,OAAO8R,GAExB,YADA3kB,EAAQoF,KAAK,6CAA8CkgB,EAAOK,oBAIvE,GAAY,gBAARrd,EAAwB,CAC/B,IAAK6c,EAAchQ,SAASuP,GACxB,OAAO1kB,EAAQoF,KAAK,6CAA8C,IAEtE,GAAqB,GAAjBuf,EAAO5e,OAEP,YADA/F,EAAQoF,KAAK,6CAA8CkgB,EAAOM,mBAGnE,GAAY,eAARtd,EAAuB,CAC9B,IAAK4c,EAAc/P,SAASuP,GACxB,OAAO1kB,EAAQoF,KAAK,6CAA8C,IAEtE,IAAK1B,GAAUihB,GAEX,YADA3kB,EAAQoF,KAAK,6CAA8CkgB,EAAOI,cAGtE,GAAa,MAAThB,GAA0B,MAATA,EAAe,CAChC,IAAKhhB,GAAUkhB,GAEX,YADA5kB,EAAQoF,KAAK,6CAA8CkgB,EAAOI,cAGtE,GAAI7S,OAAO+R,GAAU/R,OAAO8R,GAExB,YADA3kB,EAAQoF,KAAK,6CAA8CkgB,EAAOK,oBAIvE,GAAY,QAARrd,EAAgB,CACvB,IAAK8c,EAAcjQ,SAASuP,GACxB,OAAO1kB,EAAQoF,KAAK,6CAA8C,IAEtE,IAAKvB,GAAW8gB,GAEZ,YADA3kB,EAAQoF,KAAK,6CAA8CkgB,EAAOO,cAGtE,GAAa,MAATnB,GAA0B,MAATA,EAAe,CAChC,IAAK7gB,GAAW+gB,GAEZ,YADA5kB,EAAQoF,KAAK,6CAA8CkgB,EAAOO,cAGtE,GAAI/hB,GAAK6gB,EAAQC,GAAU,EAEvB,YADA5kB,EAAQoF,KAAK,6CAA8CkgB,EAAOQ,oBAIvE,GAAY,YAARxd,IACF+c,EAAclQ,SAASuP,GACxB,OAAO1kB,EAAQoF,KAAK,6CAA8C,IAG1E,GAA0B,WAAtBjD,EAAW0iB,GACX,OAAO7kB,EAAQoF,KAAK,8CAA+C,IAEvE,GAAiC,WAA7BjD,EAAW2iB,GACX,OAAO9kB,EAAQoF,KAAK,qDAAsD,IAE9E,GAA4B,WAAxBjD,EAAW4iB,GACX,OAAO/kB,EAAQoF,KAAK,gDAAiD,IAEzE,IAAIqF,MAACA,EAAQhL,EAAMoN,uBAAuBpN,EAAMoN,uBAAuB9G,OAAS,GAAEV,MAAEA,EAAQ/C,EAAc7C,EAAM6F,mBAAkBE,QAAEA,OAAgBV,GACpJ,GAAyB,UAArB3C,EAAWsI,GAAoB,CAC/B,IAAK3K,EAAQ+K,WAAWJ,GACpB,OAAOzK,EAAQoF,KAAK,kCAAmC,IAE3D,IAAI0I,EAAYhO,EAAQiL,aAAaN,GACrCA,GACI9F,IAAOmJ,EAAUnJ,IACjBC,OAAUkJ,EAAUlJ,QAG5B,GAAyB,UAArBzC,EAAWsI,IAAmC,MAAbA,EAAM9F,KAA+B,MAAhB8F,EAAM7F,OAC5D,OAAO5E,EAAQoF,KAAK,kCAAmC,IAE3D,IAAIK,EAAOhG,EAAMiG,eAAeL,GAChC,GAAY,MAARI,EACA,OAAOzF,EAAQoF,KAAK,kCAAmC,IAE3D,IAAIyJ,GACAvG,KAAMA,EACNoc,MAAOA,EACPC,OAAQA,EACRC,OAAQA,EACRK,QAASA,EACTJ,OAAQA,EACRC,cAAeA,EACfC,SAAUA,EACVC,SAAUA,GAEVe,EAA0BlgB,EAAEC,QAAO,KAAUL,EAAK8f,kBAClD3f,EAAOC,EAAEC,QAAO,KAAUL,EAAKG,MAChB,GAAfA,EAAKG,SACLH,EAAOtE,EAAY0E,cAAcP,IAErC,IAAI2U,EAAM3P,EAAM9F,IAAI,GAAIiY,EAAMnS,EAAM9F,IAAI,GAAIkY,EAAMpS,EAAM7F,OAAO,GAAIkY,EAAMrS,EAAM7F,OAAO,GACtF,IAAK,IAAIyI,EAAI+M,EAAK/M,GAAKuP,EAAKvP,IACxB,IAAK,IAAIC,EAAIuP,EAAKvP,GAAKwP,EAAKxP,IACxByY,EAAwB1Y,EAAI,IAAMC,GAAKuB,EAC3B,YAARvG,GACezF,EAAawK,EAAGC,EAAG1H,EAAlCiJ,EAAKoW,QAAmCpW,EAAK8V,OAAmC9V,EAAK+V,QAIjG,GAAInf,EAAKsC,OAAStI,EAAM6F,kBAAmB,CACvC,IAAI0gB,EAA0BngB,EAAEC,QAAO,KAAUL,EAAK8f,kBAC1C,YAARjd,EACAxG,EAAqBmkB,cAAcD,EAAyBD,EAAyBtmB,EAAM6F,kBAAmBM,EAAM6E,GAEpH3I,EAAqBma,IAAI+J,EAAyBD,EAAyBtmB,EAAM6F,wBAGrFG,EAAK8f,iBAAmBQ,EACxBtgB,EAAKG,KAAOA,EAEZJ,GAA8B,mBAAZA,GAClBA,KAybJ0gB,uBAtbJ,SAAgCphB,MAC5B,IAAI2F,MAACA,EAAQhL,EAAMoN,uBAAuBpN,EAAMoN,uBAAuB9G,OAAS,GAAEV,MAAEA,EAAQ/C,EAAc7C,EAAM6F,mBAAkBE,QAAEA,OAAgBV,GACpJ,GAAyB,UAArB3C,EAAWsI,GAAoB,CAC/B,IAAK3K,EAAQ+K,WAAWJ,GACpB,OAAOzK,EAAQoF,KAAK,kCAAmC,IAE3D,IAAI0I,EAAYhO,EAAQiL,aAAaN,GACrCA,GACI9F,IAAOmJ,EAAUnJ,IACjBC,OAAUkJ,EAAUlJ,QAG5B,GAAyB,UAArBzC,EAAWsI,IAAmC,MAAbA,EAAM9F,KAA+B,MAAhB8F,EAAM7F,OAC5D,OAAO5E,EAAQoF,KAAK,kCAAmC,IAE3D,IAAIK,EAAOhG,EAAMiG,eAAeL,GAChC,GAAY,MAARI,EACA,OAAOzF,EAAQoF,KAAK,kCAAmC,IAE3D,IAAI2gB,EAA0BlgB,EAAEC,QAAO,KAAUL,EAAK8f,kBAClDnL,EAAM3P,EAAM9F,IAAI,GAAIiY,EAAMnS,EAAM9F,IAAI,GAAIkY,EAAMpS,EAAM7F,OAAO,GAAIkY,EAAMrS,EAAM7F,OAAO,GACtF,IAAK,IAAIyI,EAAI+M,EAAK/M,GAAKuP,EAAKvP,IACxB,IAAK,IAAIC,EAAIuP,EAAKvP,GAAKwP,EAAKxP,WACjByY,EAAwB1Y,EAAI,IAAMC,GAGjD,GAAI7H,EAAKsC,OAAStI,EAAM6F,kBAAmB,CACvC,IAAI0gB,EAA0BngB,EAAEC,QAAO,KAAUL,EAAK8f,kBACtDzjB,EAAqBma,IAAI+J,EAAyBD,EAAyBtmB,EAAM6F,wBAEjFG,EAAK8f,iBAAmBQ,EAExBvgB,GAA8B,mBAAZA,GAClBA,KAsZJ2gB,YAnZJ,SAAqBC,EAAKthB,MACtB,IAAIO,MAACA,EAAQ/C,EAAc7C,EAAM6F,mBAAkB+gB,SAAEA,EAAQC,SAAEA,EAAQ9gB,QAAEA,OAAgBV,GACrFW,EAAOhG,EAAMiG,eAAeL,GAChC,GAAY,MAARI,EACA,OAAOzF,EAAQoF,KAAK,kCAAmC,IAE3D,GAAIK,EAAKsC,OAAStI,EAAM6F,kBAAmB,CACvC,IAAIgM,EAAO7R,EAAMoN,uBAAuBpN,EAAMoN,uBAAuB9G,OAAS,GAC9D,MAAZsgB,IACAA,EAAW/U,EAAKxG,WAAa,GAE7Bub,EAAW,IACXA,EAAW,GAEXA,EAAW5mB,EAAM6J,eAAevD,SAChCsgB,EAAW5mB,EAAM6J,eAAevD,QAEpB,MAAZugB,IACAA,EAAWhV,EAAKtG,cAAgB,GAEhCsb,EAAW,IACXA,EAAW,GAEXA,EAAW7mB,EAAM0K,kBAAkBpE,SACnCugB,EAAW7mB,EAAM0K,kBAAkBpE,QAEvC,IAAIqE,EAAmB,GAAZkc,EAAgB,EAAI7mB,EAAM0K,kBAAkBmc,EAAW,GAC9D/c,EAAkB,GAAZ8c,EAAgB,EAAI5mB,EAAM6J,eAAe+c,EAAW,GAC1DE,EAAQ,IAAIC,MAChBD,EAAME,OAAS,WACX,IAAI7D,EAAQ2D,EAAM3D,MAAOG,EAASwD,EAAMxD,OACpC2D,GACAN,IAAKA,EACLhc,KAAMA,EACNb,IAAKA,EACLod,YAAa/D,EACbgE,aAAc7D,GAElBhhB,EAAU8kB,WAAWH,GACjBlhB,GAA8B,mBAAZA,GAClBA,KAGR+gB,EAAMH,IAAMA,MACT,CACH,IAAIU,EAASrhB,EAAKqhB,WACd3a,EAAS1G,EAAK0G,OACdyV,EAAYnc,EAAKmc,WAAa,EAC9BmF,EAAYthB,EAAKd,IACjB2E,EAAiB7D,EAAK6D,mBAC1B,GAA8B,IAA1BA,EAAevD,OAAc,CAC7B,IAAIyc,EAAY,EAChB,IAAK,IAAInV,EAAI,EAAGA,EAAI0Z,EAAW1Z,IAAK,CAChC,IAAI4F,EAASxT,EAAM2T,cACK,MAApBjH,EAAe,QAAoC,MAAvBA,EAAe,OAAEkB,KAC7C4F,EAAS9G,EAAe,OAAEkB,IAEH,MAAvBlB,EAAkB,WAAuC,MAA1BA,EAAkB,UAAEkB,IAIvDmV,GAAa9E,KAAKsJ,OAAO/T,EAAS,GAAK2O,GACvCtY,EAAeV,KAAK4Z,IAJhBlZ,EAAeV,KAAK4Z,IAQhC,IAAIyE,EAAWxhB,EAAKb,OAChBuF,EAAoB1E,EAAK0E,sBAC7B,GAAiC,IAA7BA,EAAkBpE,OAAc,CAChC,IAAI2c,EAAW,EACf,IAAK,IAAIpV,EAAI,EAAGA,EAAI2Z,EAAU3Z,IAAK,CAC/B,IAAI4Z,EAAiBznB,EAAM+T,cACA,MAAvBrH,EAAkB,WAAuC,MAA1BA,EAAkB,UAAEmB,KACnD4Z,EAAiB/a,EAAkB,UAAEmB,IAEd,MAAvBnB,EAAkB,WAAuC,MAA1BA,EAAkB,UAAEmB,IAIvDoV,GAAYhF,KAAKsJ,OAAOE,EAAiB,GAAKtF,GAC9CzX,EAAkBvB,KAAK8Z,IAJnBvY,EAAkBvB,KAAK8Z,IAQnB,MAAZ2D,IACAA,EAAW,GAEXA,EAAW,IACXA,EAAW,GAEXA,EAAW/c,EAAevD,SAC1BsgB,EAAW/c,EAAevD,QAEd,MAAZugB,IACAA,EAAW,GAEXA,EAAW,IACXA,EAAW,GAEXA,EAAWnc,EAAkBpE,SAC7BugB,EAAWnc,EAAkBpE,QAEjC,IAAIqE,EAAmB,GAAZkc,EAAgB,EAAInc,EAAkBmc,EAAW,GACxD/c,EAAkB,GAAZ8c,EAAgB,EAAI/c,EAAe+c,EAAW,GACpDE,EAAQ,IAAIC,MAChBD,EAAME,OAAS,WACX,IAOI7D,EAAOG,EAPP2D,GACAN,IAAKA,EACLhc,KAAMA,EACNb,IAAKA,EACLod,YAAaJ,EAAM3D,MACnBgE,aAAcL,EAAMxD,QAIpB2D,EAAIE,aAAeF,EAAIC,aACvB5D,EAASrF,KAAKsJ,MAAMN,EAAIE,cAFlB,IAEwCF,EAAIC,cAClD/D,EAHM,MAKNA,EAAQlF,KAAKsJ,MAAMN,EAAIC,aALjB,IAKsCD,EAAIE,eAChD7D,EANM,KAQV,IAAIoE,EAAUthB,EAAEC,QAAO,KAAU/D,EAAUolB,SAC3CA,EAAQf,IAAMM,EAAIN,IAClBe,EAAQR,YAAcD,EAAIC,YAC1BQ,EAAQP,aAAeF,EAAIE,aAC3BO,EAAQC,QAAQxE,MAAQA,EACxBuE,EAAQC,QAAQrE,OAASA,EACzBoE,EAAQC,QAAQhd,KAAOsc,EAAItc,KAC3B+c,EAAQC,QAAQ7d,IAAMmd,EAAInd,IAC1B4d,EAAQE,KAAKzE,MAAQA,EACrBuE,EAAQE,KAAKtE,OAASA,EACtB,IAAIuE,EAAKvlB,EAAUwlB,mBACnBT,EAAOQ,GAAMH,EACb1hB,EAAKqhB,OAASA,EACVthB,GAA8B,mBAAZA,GAClBA,KAGR+gB,EAAMH,IAAMA,IAyQhBoB,YAtQJ,SAAqB1iB,MACjB,IAAIO,MAACA,EAAQ/C,EAAc7C,EAAM6F,mBAAkBmiB,OAAEA,EAAS,MAAKjiB,QAAEA,OAAgBV,GACjFW,EAAOhG,EAAMiG,eAAeL,GAChC,GAAY,MAARI,EACA,OAAOzF,EAAQoF,KAAK,kCAAmC,IAE3D,IAAI0hB,EAASrhB,EAAKqhB,OAClB,OAAc,MAAVA,EACO9mB,EAAQoF,KAAK,2CAA4C,IAEtD,OAAVqiB,GAAyC,SAAtBtlB,EAAWslB,GACvBznB,EAAQoF,KAAK,mCAAoC,KAElC,SAAtBjD,EAAWslB,GACXA,EAAOxa,QAAQ4B,WACJiY,EAAOjY,KAGlBiY,EAAS,KAEbrhB,EAAKqhB,OAASA,EACVrhB,EAAKsC,OAAStI,EAAM6F,oBACU,MAA1BvD,EAAU2lB,cAAmC,OAAVD,IAAmBA,EAAOtS,SAASpT,EAAU2lB,gBAChF7hB,EAAE,wCAAwCuL,OAC1CvL,EAAE,qCAAqCuL,OACvCvL,EAAE,6CAA6CuL,QAEnDrP,EAAU+kB,OAASA,EACnB/kB,EAAU4lB,gBACV5lB,EAAU6lB,aAEVpiB,GAA8B,mBAAZA,GAClBA,OAuOJqiB,eApOJ,SAAwB/iB,MACpB,IAAIO,MAACA,EAAQ/C,EAAc7C,EAAM6F,mBAAkBE,QAAEA,OAAgBV,GACjEW,EAAOhG,EAAMiG,eAAeL,GAChC,OAAY,MAARI,EACOzF,EAAQoF,KAAK,kCAAmC,KAE3DyC,WAAW,WACHrC,GAA8B,mBAAZA,GAClBA,KAEL,GACIC,EAAKqhB,SA0NZgB,gBAxNJ,SAAyBliB,EAAMd,MAC3B,IAAIU,QAACA,OAAgBV,GAMrB,OALA+C,WAAW,KACHrC,GAA8B,mBAAZA,GAClBA,KAEL,GACIlE,EAAY0N,YAAYpJ,IAkN/BmiB,YAhNJ,SAAqBhZ,EAAUjK,MAC3B,IAAIU,QAACA,OAAgBV,GAMrB,OALA+C,WAAW,KACHrC,GAA8B,mBAAZA,GAClBA,KAEL,GACIlE,EAAY0E,eAAgB+I,SAAUA,KA0M7CG,OAAQA,GACR8Y,UA1LJ,SAAmBC,EAAO,MACtB,KACQ,KACA,KACA,MACF9S,SAAS8S,GACX,OAAOjoB,EAAQoF,KAAK,iCAAkC,IAE1D,IAAIN,EAAUoK,KACdpK,EAAQmjB,KAAOA,EACfC,WAAWC,OAAOrjB,IAiLlBsjB,eA/KJ,WAC4B,MAApBpnB,EAAOqnB,WAGXrnB,EAAOqnB,UAAUC,MAAM,MA4KvBpN,cA1KJ,SAAuBqN,GAEnB,GAAW,MAAPA,EACA,OACI3jB,OAAQnF,EAAMoN,uBAAuBpN,EAAMoN,uBAAuB9G,OAAS,GAAGnB,OAC9ED,IAAKlF,EAAMoN,uBAAuBpN,EAAMoN,uBAAuB9G,OAAS,GAAGpB,KAGnF,MAAM8F,EAAQlJ,EAAgB2Z,cAAcqN,GAC5C,OACI3jB,OAAQ6F,EAAM,GAAG7F,OACjBD,IAAK8F,EAAM,GAAG9F,MAgKlB6jB,cA7JJ,SAAuB/d,EAAQhL,EAAMoN,wBAKjC,MAH0B,WAAtB1K,EAAWsI,KACXA,GAASA,IAENlJ,EAAgBinB,cAAc/d,IAyJrCge,UAvJJ,SAAmBtc,GACftG,EAAE,4BAA4ByT,SAC9BzT,EAAE,0BAA0B4Y,OAAO,+GACnC5Y,EAAE,4BAA4B6iB,OAC1BC,KAAMxc,EAAOyc,UAEbC,MAAO1c,EAAO0c,MAEdC,aAAc3c,EAAO2c,aAErBC,SAAU5c,EAAO4c,SAEjBC,WAAW,EAEXC,SAAU9c,EAAO8c,WAAY,EAE7BC,OAAQ/c,EAAO+c,SAAU,EAEzBC,QAAS,SAAUR,GACfA,EAAKC,UAAYD,EAAKA,KACjB9oB,EAAO8F,mBAAmB,gBAAiBgjB,OAoIxDS,eA9HJ,SAAwB5jB,GACpB1F,EAAQupB,wBAAuB,GAC/BnmB,KACA2E,WAAW,KACHrC,GAA8B,mBAAZA,GAClBA,OA0HR8jB,uBAtHJ,SAAgC1jB,EAAMyH,EAAGC,EAAG9H,GAExC,GADAI,EAAOA,GAAQnG,EAAMuF,SACZ,MAALqI,GAAkB,MAALC,EAAW,CAExB,IAAIgE,EAAO7R,EAAMoN,uBAAuBpN,EAAMoN,uBAAuB9G,OAAS,GAC9EsH,EAAIiE,EAAKxG,WAAawG,EAAK3M,IAAI,GAC/B2I,EAAIgE,EAAKtG,cAAgBsG,EAAK1M,OAAO,GAEzC3D,EAAWsoB,gBAAgB3jB,EAAMyH,EAAGC,GACpCzF,WAAW,KACHrC,GAA8B,mBAAZA,GAClBA","file":"../../global/api.js","sourcesContent":["define([\n    '../store',\n    '../utils/util',\n    '../methods/get',\n    '../locale/locale',\n    './method',\n    './formula',\n    './func_methods',\n    './tooltip',\n    './json',\n    './editor',\n    './formula',\n    './cleargridelement',\n    './format',\n    './setdata',\n    './sort',\n    './getRowlen',\n    './getdata',\n    './refresh',\n    './extend',\n    './validate',\n    './datecontroll',\n    './border',\n    './draw',\n    '../controllers/server',\n    '../controllers/menuButton',\n    '../controllers/selection',\n    '../controllers/luckysheetConfigsetting',\n    '../controllers/freezen',\n    '../controllers/resize',\n    '../controllers/sheetmanage',\n    '../controllers/conditionformat',\n    '../controllers/sheetSearch',\n    '../controllers/select',\n    '../controllers/constant',\n    '../controllers/filter',\n    '../controllers/controlHistory',\n    '../controllers/zoom',\n    '../controllers/dataVerificationCtrl',\n    '../controllers/imageCtrl',\n    'skylark-moment',\n    '../controllers/updateCell'\n], function (Store, m_util, m_get, locale, method, formula, func_methods, tooltip, json, editor, luckysheetformula, cleargridelement, m_format, m_setdata, m_sort, m_getRowlen, m_getdata, m_refresh, m_extend, m_validate, m_datecontroll, m_border, m_draw, server, menuButton, selection, luckysheetConfigsetting, luckysheetFreezen, luckysheetsizeauto, sheetmanage, conditionformat, m_sheetSearch, m_select, m_constant, m_filter, controlHistory, m_zoom, dataVerificationCtrl, imageCtrl, dayjs, m_updateCell) {\n    'use strict';\n    const {replaceHtml, getObjType, chatatABC, luckysheetactiveCell} = m_util;\n    const {getSheetIndex, getluckysheet_select_save, getluckysheetfile, getRangetxt} = m_get;\n    const {genarate, update} = m_format;\n    const {setAccuracy, setcellvalue} = m_setdata;\n    const {orderbydata} = m_sort;\n    const {rowlenByRange} = m_getRowlen;\n    const {getdatabyselection, getcellvalue} = m_getdata;\n    const {luckysheetrefreshgrid, jfrefreshgrid, jfrefreshgrid_rhcw} = m_refresh;\n    const {luckysheetDeleteCell, luckysheetextendtable, luckysheetdeletetable} = m_extend;\n    const {isRealNull, valueIsError, isRealNum, isEditMode, hasPartMC} = m_validate;\n    const {isdatetime, diff} = m_datecontroll;\n    const {getBorderInfoCompute} = m_border;\n    const {luckysheetDrawMain} = m_draw;\n    const {luckysheet_searcharray} = m_sheetSearch;\n    const {selectHightlightShow, selectIsOverlap} = m_select;\n    const {sheetHTML, luckysheetdefaultstyle} = m_constant;\n    const {createFilterOptions} = m_filter;\n    const {zoomRefreshView, zoomNumberDomBind} = m_zoom;\n    const {luckysheetupdateCell} = m_updateCell;\n    const IDCardReg = /^\\d{6}(18|19|20)?\\d{2}(0[1-9]|1[12])(0[1-9]|[12]\\d|3[01])\\d{3}(\\d|X)$/i;    /**\n * 获取单元格的值\n * @param {Number} row 单元格所在行数；从0开始的整数，0表示第一行\n * @param {Number} column 单元格所在列数；从0开始的整数，0表示第一列\n * @param {Object} options 可选参数\n * @param {String} options.type 单元格的值类型，可以设置为原始值\"v\"或者显示值\"m\"；默认值为'v',表示获取单元格的实际值\n * @param {Number} options.order 工作表索引；默认值为当前工作表索引\n */\n    function getCellValue(row, column, options = {}) {\n        if (!isRealNum(row) || !isRealNum(column)) {\n            return tooltip.info('Arguments row or column cannot be null or undefined.', '');\n        }\n        let curSheetOrder = getSheetIndex(Store.currentSheetIndex);\n        let {type = 'v', order = curSheetOrder} = { ...options };\n        let targetSheetData = Store.luckysheetfile[order].data;\n        let cellData = targetSheetData[row][column];\n        let return_v;\n        if (getObjType(cellData) == 'object') {\n            return_v = cellData[type];\n            if (type == 'f' && return_v != null) {\n                return_v = formula.functionHTMLGenerate(return_v);\n            } else if (type == 'f') {\n                return_v = cellData['v'];\n            } else if (cellData && cellData.ct && cellData.ct.fa == 'yyyy-MM-dd') {\n                return_v = cellData.m;\n            }\n        }\n        if (return_v == undefined) {\n            return_v = null;\n        }\n        return return_v;\n    }\n    function setCellValue(row, column, value, options = {}) {\n        let curv = Store.flowdata[row][column];    // Store old value for hook function\n        // Store old value for hook function\n        const oldValue = JSON.stringify(curv);\n        if (!isRealNum(row) || !isRealNum(column)) {\n            return tooltip.info('The row or column parameter is invalid.', '');\n        }\n        let {order = getSheetIndex(Store.currentSheetIndex), isRefresh = true, success} = { ...options };\n        let file = Store.luckysheetfile[order];\n        if (file == null) {\n            return tooltip.info('The order parameter is invalid.', '');\n        }    /* cell更新前触发  */\n        /* cell更新前触发  */\n        if (!method.createHookFunction('cellUpdateBefore', row, column, value, isRefresh)) {\n            /* 如果cellUpdateBefore函数返回false 则不执行后续的更新 */\n            return;\n        }\n        let data = file.data;\n        if (isRefresh) {\n            data = $.extend(true, [], file.data);\n        }\n        if (data.length == 0) {\n            data = sheetmanage.buildGridData(file);\n        }    // luckysheetformula.updatecell(row, column, value);\n        // luckysheetformula.updatecell(row, column, value);\n        let formatList = {\n            //ct:1, //celltype,Cell value format: text, time, etc.\n            bg: 1,\n            //background,#fff000\n            ff: 1,\n            //fontfamily,\n            fc: 1,\n            //fontcolor\n            bl: 1,\n            //Bold\n            it: 1,\n            //italic\n            fs: 1,\n            //font size\n            cl: 1,\n            //Cancelline, 0 Regular, 1 Cancelline\n            un: 1,\n            //underline, 0 Regular, 1 underlines, fonts\n            vt: 1,\n            //Vertical alignment, 0 middle, 1 up, 2 down\n            ht: 1,\n            //Horizontal alignment,0 center, 1 left, 2 right\n            mc: 1,\n            //Merge Cells\n            tr: 1,\n            //Text rotation,0: 0、1: 45 、2: -45、3 Vertical text、4: 90 、5: -90\n            tb: 1,\n            //Text wrap,0 truncation, 1 overflow, 2 word wrap\n            //v: 1, //Original value\n            //m: 1, //Display value\n            rt: 1,\n            //text rotation angle 0-180 alignment\n            //f: 1, //formula\n            qp: 1    //quotePrefix, show number as string\n        };\n        //quotePrefix, show number as string\n        if (value == null || value.toString().length == 0) {\n            formula.delFunctionGroup(row, column);\n            setcellvalue(row, column, data, value);\n        } else if (value instanceof Object) {\n            let curv = {};\n            let cell = data[row][column];\n            if (isRealNull(cell)) {\n                cell = {};\n            }\n            if (value.f != null && value.v == null) {\n                curv.f = value.f;\n                if (value.ct != null) {\n                    curv.ct = value.ct;\n                }\n                data = luckysheetformula.updatecell(row, column, curv, false).data;    //update formula value\n            } else\n                //update formula value\n                {\n                    if (value.ct != null) {\n                        curv.ct = value.ct;\n                    }\n                    if (value.f != null) {\n                        curv.f = value.f;\n                    }\n                    if (value.v != null) {\n                        curv.v = value.v;\n                    } else {\n                        curv.v = cell.v;\n                    }\n                    if (value.m != null) {\n                        curv.m = value.m;\n                    }\n                    formula.delFunctionGroup(row, column);\n                    setcellvalue(row, column, data, curv);    //update text value\n                }\n            //update text value\n            for (let attr in value) {\n                let v = value[attr];\n                if (attr in formatList) {\n                    menuButton.updateFormatCell(data, attr, v, row, row, column, column);    //change range format\n                } else\n                    //change range format\n                    {\n                        cell[attr] = v;\n                    }\n            }\n            data[row][column] = cell;\n        } else {\n            if (value.toString().substr(0, 1) == '=' || value.toString().substr(0, 5) == '<span') {\n                data = luckysheetformula.updatecell(row, column, value, false).data;    //update formula value or convert inline string html to object\n            } else\n                //update formula value or convert inline string html to object\n                {\n                    formula.delFunctionGroup(row, column);\n                    setcellvalue(row, column, data, value);\n                }\n        }    /* cell更新后触发  */\n        /* cell更新后触发  */\n        setTimeout(() => {\n            // Hook function\n            method.createHookFunction('cellUpdated', row, column, JSON.parse(oldValue), Store.flowdata[row][column], isRefresh);\n        }, 0);\n        if (file.index == Store.currentSheetIndex && isRefresh) {\n            jfrefreshgrid(data, [{\n                    'row': [\n                        row,\n                        row\n                    ],\n                    'column': [\n                        column,\n                        column\n                    ]\n                }]);    //update data, meanwhile refresh canvas and store data to history\n        } else\n            //update data, meanwhile refresh canvas and store data to history\n            {\n                file.data = data;    //only update data\n            }\n        //only update data\n        if (success && typeof success === 'function') {\n            success(data);\n        }\n    }\n    function clearCell(row, column, options = {}) {\n        if (!isRealNum(row) || !isRealNum(column)) {\n            return tooltip.info('Arguments row and column cannot be null or undefined.', '');\n        }\n        let curSheetOrder = getSheetIndex(Store.currentSheetIndex);\n        let {order = curSheetOrder, success} = { ...options };\n        let targetSheetData = $.extend(true, [], Store.luckysheetfile[order].data);\n        let cell = targetSheetData[row][column];\n        if (getObjType(cell) == 'object') {\n            delete cell['m'];\n            delete cell['v'];\n            if (cell['f'] != null) {\n                delete cell['f'];\n                formula.delFunctionGroup(row, column, order);\n                delete cell['spl'];\n            }\n        } else {\n            cell = null;\n        }    // 若操作为当前sheet页，则刷新当前sheet页\n        // 若操作为当前sheet页，则刷新当前sheet页\n        if (order === curSheetOrder) {\n            jfrefreshgrid(targetSheetData, [{\n                    row: [\n                        row,\n                        row\n                    ],\n                    column: [\n                        column,\n                        column\n                    ]\n                }]);\n        } else {\n            Store.luckysheetfile[order].data = targetSheetData;\n        }\n        if (success && typeof success === 'function') {\n            success(cell);\n        }\n    }\n    function deleteCell(move, row, column, options = {}) {\n        let moveTypes = [\n            'left',\n            'up'\n        ];\n        if (!move || moveTypes.indexOf(move) < 0) {\n            return tooltip.info(\"Arguments move cannot be null or undefined and its value must be 'left' or 'up'\", '');\n        }\n        if (!isRealNum(row) || !isRealNum(column)) {\n            return tooltip.info('Arguments row and column cannot be null or undefined.', '');\n        }\n        let curSheetOrder = getSheetIndex(Store.currentSheetIndex);\n        let {order = curSheetOrder, success} = { ...options };\n        let moveType = 'move' + move.replace(move[0], move[0].toUpperCase());    // left-moveLeft;  up-moveUp\n        // left-moveLeft;  up-moveUp\n        let sheetIndex;\n        if (order) {\n            if (Store.luckysheetfile[order]) {\n                sheetIndex = Store.luckysheetfile[order].index;\n            }\n        }\n        luckysheetDeleteCell(moveType, row, row, column, column, sheetIndex);\n        if (success && typeof success === 'function') {\n            success();\n        }\n    }\n    function setCellFormat(row, column, attr, value, options = {}) {\n        if (!isRealNum(row) || !isRealNum(column)) {\n            return tooltip.info('Arguments row or column cannot be null or undefined.', '');\n        }\n        if (!attr) {\n            return tooltip.info('Arguments attr cannot be null or undefined.', '');\n        }\n        let curSheetOrder = getSheetIndex(Store.currentSheetIndex);\n        let {order = curSheetOrder, success} = { ...options };\n        let file = Store.luckysheetfile[order];\n        if (file == null) {\n            return tooltip.info('The order parameter is invalid.', '');\n        }\n        let targetSheetData = $.extend(true, [], file.data);\n        if (targetSheetData.length == 0) {\n            targetSheetData = sheetmanage.buildGridData(file);\n        }\n        let cellData = targetSheetData[row][column] || {};\n        let cfg = $.extend(true, {}, file.config);    // 特殊格式\n        // 特殊格式\n        if (attr == 'ct' && (!value || !value.hasOwnProperty('fa') || !value.hasOwnProperty('t'))) {\n            return new TypeError(\"While set attribute 'ct' to cell, the value must have property 'fa' and 't'\");\n        }\n        if (attr == 'bd') {\n            if (cfg['borderInfo'] == null) {\n                cfg['borderInfo'] = [];\n            }\n            let borderInfo = {\n                rangeType: 'range',\n                borderType: 'border-all',\n                color: '#000',\n                style: '1',\n                range: [{\n                        column: [\n                            column,\n                            column\n                        ],\n                        row: [\n                            row,\n                            row\n                        ]\n                    }],\n                ...value\n            };\n            cfg['borderInfo'].push(borderInfo);\n        } else {\n            cellData[attr] = value;\n        }\n        targetSheetData[row][column] = cellData;    // refresh\n        // refresh\n        if (file.index == Store.currentSheetIndex) {\n            file.config = cfg;\n            Store.config = cfg;\n            jfrefreshgrid(targetSheetData, [{\n                    'row': [\n                        row,\n                        row\n                    ],\n                    'column': [\n                        column,\n                        column\n                    ]\n                }]);\n        } else {\n            file.config = cfg;\n            file.data = targetSheetData;\n        }\n        if (success && typeof success === 'function') {\n            success(cellData);\n        }\n    }\n    function find(content, options = {}) {\n        if (!content && content != 0) {\n            return tooltip.info('Search content cannot be null or empty', '');\n        }\n        let curSheetOrder = getSheetIndex(Store.currentSheetIndex);\n        let {isRegularExpression = false, isWholeWord = false, isCaseSensitive = false, order = curSheetOrder, type = 'm'} = { ...options };\n        let targetSheetData = Store.luckysheetfile[order].data;\n        let result = [];\n        for (let i = 0; i < targetSheetData.length; i++) {\n            const rowArr = targetSheetData[i];\n            for (let j = 0; j < rowArr.length; j++) {\n                const cell = rowArr[j];\n                if (!cell) {\n                    continue;\n                }    // 添加cell的row, column属性\n                     // replace方法中的setCellValue中需要使用该属性\n                // 添加cell的row, column属性\n                // replace方法中的setCellValue中需要使用该属性\n                cell.row = i;\n                cell.column = j;\n                if (isWholeWord) {\n                    if (isCaseSensitive) {\n                        if (content.toString() == cell[type]) {\n                            result.push(cell);\n                        }\n                    } else {\n                        if (cell[type] && content.toString().toLowerCase() == cell[type].toLowerCase()) {\n                            result.push(cell);\n                        }\n                    }\n                } else if (isRegularExpression) {\n                    let reg;\n                    if (isCaseSensitive) {\n                        reg = new RegExp(func_methods.getRegExpStr(content), 'g');\n                    } else {\n                        reg = new RegExp(func_methods.getRegExpStr(content), 'ig');\n                    }\n                    if (reg.test(cell[type])) {\n                        result.push(cell);\n                    }\n                } else if (isCaseSensitive) {\n                    let reg = new RegExp(func_methods.getRegExpStr(content), 'g');\n                    if (reg.test(cell[type])) {\n                        result.push(cell);\n                    }\n                } else {\n                    let reg = new RegExp(func_methods.getRegExpStr(content), 'ig');\n                    if (reg.test(cell[type])) {\n                        result.push(cell);\n                    }\n                }\n            }\n        }\n        return result;\n    }\n    function replace(content, replaceContent, options = {}) {\n        let matchCells = find(content, options);\n        let curSheetOrder = getSheetIndex(Store.currentSheetIndex);\n        let {\n            order = curSheetOrder\n        } = { ...options };\n        let file = Store.luckysheetfile[order];\n        if (file == null) {\n            return tooltip.info('The order parameter is invalid.', '');\n        }\n        let sheetData = $.extend(true, [], file.data);\n        matchCells.forEach(cell => {\n            cell.m = replaceContent;\n            setCellValue(cell.row, cell.column, replaceContent, {\n                order: order,\n                isRefresh: false\n            });\n        });\n        let fileData = $.extend(true, [], file.data);\n        file.data.length = 0;\n        file.data.push(...sheetData);\n        if (file.index == Store.currentSheetIndex) {\n            jfrefreshgrid(fileData, undefined, undefined, true, false);\n        }\n        luckysheetrefreshgrid();\n        if (options.success && typeof options.success === 'function') {\n            options.success(matchCells);\n        }\n        return matchCells;\n    }\n    function exitEditMode(options = {}) {\n        if (parseInt($('#luckysheet-input-box').css('top')) > 0) {\n            if ($('#luckysheet-formula-search-c').is(':visible') && formula.searchFunctionCell != null) {\n                formula.searchFunctionEnter($('#luckysheet-formula-search-c').find('.luckysheet-formula-search-item-active'));\n            } else {\n                formula.updatecell(Store.luckysheetCellUpdate[0], Store.luckysheetCellUpdate[1]);\n                Store.luckysheet_select_save = [{\n                        'row': [\n                            Store.luckysheetCellUpdate[0],\n                            Store.luckysheetCellUpdate[0]\n                        ],\n                        'column': [\n                            Store.luckysheetCellUpdate[1],\n                            Store.luckysheetCellUpdate[1]\n                        ],\n                        'row_focus': Store.luckysheetCellUpdate[0],\n                        'column_focus': Store.luckysheetCellUpdate[1]\n                    }];\n            }    //若有参数弹出框，隐藏\n            //若有参数弹出框，隐藏\n            if ($('#luckysheet-search-formula-parm').is(':visible')) {\n                $('#luckysheet-search-formula-parm').hide();\n            }    //若有参数选取范围弹出框，隐藏\n            //若有参数选取范围弹出框，隐藏\n            if ($('#luckysheet-search-formula-parm-select').is(':visible')) {\n                $('#luckysheet-search-formula-parm-select').hide();\n            }\n        }\n        if (options.success && typeof options.success === 'function') {\n            options.success();\n        }\n    }\n    function enterEditMode(options = {}) {\n        if ($('#luckysheet-conditionformat-dialog').is(':visible')) {\n            return;\n        } else if ($('#luckysheet-cell-selected').is(':visible')) {\n            let last = Store.luckysheet_select_save[Store.luckysheet_select_save.length - 1];\n            let row_index = last['row_focus'], col_index = last['column_focus'];\n            luckysheetupdateCell(row_index, col_index, Store.flowdata);\n        }\n        if (options.success && typeof options.success === 'function') {\n            options.success();\n        }\n    }\n    function frozenFirstRow(order) {\n        // store frozen\n        luckysheetFreezen.saveFrozen('freezenRow', order);    // 冻结为当前sheet页\n        // 冻结为当前sheet页\n        if (!order || order == getSheetIndex(Store.currentSheetIndex)) {\n            let scrollTop = $('#luckysheet-cell-main').scrollTop();\n            let row_st = luckysheet_searcharray(Store.visibledatarow, scrollTop);\n            if (row_st == -1) {\n                row_st = 0;\n            }\n            let top = Store.visibledatarow[row_st] - 2 - scrollTop + Store.columnHeaderHeight;\n            let freezenhorizontaldata = [\n                Store.visibledatarow[row_st],\n                row_st + 1,\n                scrollTop,\n                luckysheetFreezen.cutVolumn(Store.visibledatarow, row_st + 1),\n                top\n            ];\n            luckysheetFreezen.saveFreezen(freezenhorizontaldata, top, null, null);\n            if (luckysheetFreezen.freezenverticaldata != null) {\n                luckysheetFreezen.cancelFreezenVertical();\n                luckysheetFreezen.createAssistCanvas();\n                luckysheetrefreshgrid();\n            }\n            luckysheetFreezen.createFreezenHorizontal(freezenhorizontaldata, top);\n            luckysheetFreezen.createAssistCanvas();\n            luckysheetrefreshgrid();\n        }\n    }\n    function frozenFirstColumn(order) {\n        // store frozen\n        luckysheetFreezen.saveFrozen('freezenColumn', order);    // 冻结为当前sheet页\n        // 冻结为当前sheet页\n        if (!order || order == getSheetIndex(Store.currentSheetIndex)) {\n            let scrollLeft = $('#luckysheet-cell-main').scrollLeft();\n            let col_st = luckysheet_searcharray(Store.visibledatacolumn, scrollLeft);\n            if (col_st == -1) {\n                col_st = 0;\n            }\n            let left = Store.visibledatacolumn[col_st] - 2 - scrollLeft + Store.rowHeaderWidth;\n            let freezenverticaldata = [\n                Store.visibledatacolumn[col_st],\n                col_st + 1,\n                scrollLeft,\n                luckysheetFreezen.cutVolumn(Store.visibledatacolumn, col_st + 1),\n                left\n            ];\n            luckysheetFreezen.saveFreezen(null, null, freezenverticaldata, left);\n            if (luckysheetFreezen.freezenhorizontaldata != null) {\n                luckysheetFreezen.cancelFreezenHorizontal();\n                luckysheetFreezen.createAssistCanvas();\n                luckysheetrefreshgrid();\n            }\n            luckysheetFreezen.createFreezenVertical(freezenverticaldata, left);\n            luckysheetFreezen.createAssistCanvas();\n            luckysheetrefreshgrid();\n        }\n    }\n    function frozenRowRange(range, order) {\n        const locale_frozen = locale().freezen;\n        if (!range || !range.hasOwnProperty('row_focus') && !formula.iscelldata(range)) {\n            if (isEditMode()) {\n                alert(locale_frozen.noSeletionError);\n            } else {\n                tooltip.info(locale_frozen.noSeletionError, '');\n            }\n            return;\n        }\n        if (typeof range === 'string' && formula.iscelldata(range)) {\n            range = formula.getcellrange(range);\n            range = {\n                row_focus: range.row[0],\n                column_focus: range.column[0]\n            };\n        }    // store frozen\n        // store frozen\n        luckysheetFreezen.saveFrozen('freezenRowRange', order, range);\n        if (!order || order == getSheetIndex(Store.currentSheetIndex)) {\n            let scrollTop = $('#luckysheet-cell-main').scrollTop();\n            let row_st = luckysheet_searcharray(Store.visibledatarow, scrollTop);\n            let row_focus = range.row_focus;\n            if (row_focus > row_st) {\n                row_st = row_focus;\n            }\n            if (row_st == -1) {\n                row_st = 0;\n            }\n            let top = Store.visibledatarow[row_st] - 2 - scrollTop + Store.columnHeaderHeight;\n            let freezenhorizontaldata = [\n                Store.visibledatarow[row_st],\n                row_st + 1,\n                scrollTop,\n                luckysheetFreezen.cutVolumn(Store.visibledatarow, row_st + 1),\n                top\n            ];\n            luckysheetFreezen.saveFreezen(freezenhorizontaldata, top, null, null);\n            if (luckysheetFreezen.freezenverticaldata != null) {\n                luckysheetFreezen.cancelFreezenVertical();\n                luckysheetFreezen.createAssistCanvas();\n                luckysheetrefreshgrid();\n            }\n            luckysheetFreezen.createFreezenHorizontal(freezenhorizontaldata, top);\n            luckysheetFreezen.createAssistCanvas();\n            luckysheetrefreshgrid();\n        }\n    }\n    function frozenColumnRange(range, order) {\n        const locale_frozen = locale().freezen;\n        let isStringRange = typeof range === 'string' && formula.iscelldata(range);\n        if (!range || !range.hasOwnProperty('column_focus') && !isStringRange) {\n            if (isEditMode()) {\n                alert(locale_frozen.noSeletionError);\n            } else {\n                tooltip.info(locale_frozen.noSeletionError, '');\n            }\n            return;\n        }\n        if (isStringRange) {\n            range = formula.getcellrange(range);\n            range = {\n                row_focus: range.row[0],\n                column_focus: range.column[0]\n            };\n        }    // store frozen\n        // store frozen\n        luckysheetFreezen.saveFrozen('freezenColumnRange', order, range);\n        if (!order || order == getSheetIndex(Store.currentSheetIndex)) {\n            let scrollLeft = $('#luckysheet-cell-main').scrollLeft();\n            let col_st = luckysheet_searcharray(Store.visibledatacolumn, scrollLeft);\n            let column_focus = range.column_focus;\n            if (column_focus > col_st) {\n                col_st = column_focus;\n            }\n            if (col_st == -1) {\n                col_st = 0;\n            }\n            let left = Store.visibledatacolumn[col_st] - 2 - scrollLeft + Store.rowHeaderWidth;\n            let freezenverticaldata = [\n                Store.visibledatacolumn[col_st],\n                col_st + 1,\n                scrollLeft,\n                luckysheetFreezen.cutVolumn(Store.visibledatacolumn, col_st + 1),\n                left\n            ];\n            luckysheetFreezen.saveFreezen(null, null, freezenverticaldata, left);\n            if (luckysheetFreezen.freezenhorizontaldata != null) {\n                luckysheetFreezen.cancelFreezenHorizontal();\n                luckysheetFreezen.createAssistCanvas();\n                luckysheetrefreshgrid();\n            }\n            luckysheetFreezen.createFreezenVertical(freezenverticaldata, left);\n            luckysheetFreezen.createAssistCanvas();\n            luckysheetrefreshgrid();\n        }\n    }\n    function cancelFrozen(order) {\n        luckysheetFreezen.saveFrozen('freezenCancel', order);    // 取消当前sheet冻结时，刷新canvas\n        // 取消当前sheet冻结时，刷新canvas\n        if (!order || order == getSheetIndex(Store.currentSheetIndex)) {\n            if (luckysheetFreezen.freezenverticaldata != null) {\n                luckysheetFreezen.cancelFreezenVertical();\n            }\n            if (luckysheetFreezen.freezenhorizontaldata != null) {\n                luckysheetFreezen.cancelFreezenHorizontal();\n            }\n            luckysheetFreezen.createAssistCanvas();\n            luckysheetrefreshgrid();\n        }\n    }\n    function setHorizontalFrozen(isRange, options = {}) {\n        let curSheetOrder = getSheetIndex(Store.currentSheetIndex);\n        let {range, order = curSheetOrder, success} = { ...options };    // 若已存在冻结，取消之前的冻结效果\n        // 若已存在冻结，取消之前的冻结效果\n        cancelFrozen(order);\n        if (!isRange) {\n            frozenFirstRow(order);\n        } else {\n            // 选区行冻结\n            frozenRowRange(range, order);\n        }\n        if (success && typeof success === 'function') {\n            success();\n        }\n    }\n    function setVerticalFrozen(isRange, options = {}) {\n        let curSheetOrder = getSheetIndex(Store.currentSheetIndex);\n        let {range, order = curSheetOrder, success} = { ...options };    // 若已存在冻结，取消之前的冻结效果\n        // 若已存在冻结，取消之前的冻结效果\n        cancelFrozen(order);\n        if (!isRange) {\n            frozenFirstColumn(order);\n        } else {\n            frozenColumnRange(range, order);\n        }\n        if (success && typeof success === 'function') {\n            success();\n        }\n    }\n    function setBothFrozen(isRange, options = {}) {\n        let curSheetOrder = getSheetIndex(Store.currentSheetIndex);\n        let {range, order = curSheetOrder, success} = { ...options };\n        let isCurrentSheet = !order || order == getSheetIndex(Store.currentSheetIndex);\n        const locale_frozen = locale().freezen;    // 若已存在冻结，取消之前的冻结效果\n        // 若已存在冻结，取消之前的冻结效果\n        cancelFrozen(order);    // 冻结首行列\n        // 冻结首行列\n        if (!isRange) {\n            // store frozen\n            luckysheetFreezen.saveFrozen('freezenRC', order);\n            if (isCurrentSheet) {\n                let scrollTop = $('#luckysheet-cell-main').scrollTop();\n                let row_st = luckysheet_searcharray(Store.visibledatarow, scrollTop);\n                if (row_st == -1) {\n                    row_st = 0;\n                }\n                let top = Store.visibledatarow[row_st] - 2 - scrollTop + Store.columnHeaderHeight;\n                let freezenhorizontaldata = [\n                    Store.visibledatarow[row_st],\n                    row_st + 1,\n                    scrollTop,\n                    luckysheetFreezen.cutVolumn(Store.visibledatarow, row_st + 1),\n                    top\n                ];\n                luckysheetFreezen.saveFreezen(freezenhorizontaldata, top, null, null);\n                luckysheetFreezen.createFreezenHorizontal(freezenhorizontaldata, top);\n                let scrollLeft = $('#luckysheet-cell-main').scrollLeft();\n                let col_st = luckysheet_searcharray(Store.visibledatacolumn, scrollLeft);\n                if (col_st == -1) {\n                    col_st = 0;\n                }\n                let left = Store.visibledatacolumn[col_st] - 2 - scrollLeft + Store.rowHeaderWidth;\n                let freezenverticaldata = [\n                    Store.visibledatacolumn[col_st],\n                    col_st + 1,\n                    scrollLeft,\n                    luckysheetFreezen.cutVolumn(Store.visibledatacolumn, col_st + 1),\n                    left\n                ];\n                luckysheetFreezen.saveFreezen(null, null, freezenverticaldata, left);\n                luckysheetFreezen.createFreezenVertical(freezenverticaldata, left);\n                luckysheetFreezen.createAssistCanvas();\n                luckysheetrefreshgrid();\n            }\n        } else {\n            // 冻结行列到选区\n            // store frozen\n            luckysheetFreezen.saveFrozen('freezenRCRange', order, range);\n            let isStringRange = typeof range === 'string' && formula.iscelldata(range);\n            if (isCurrentSheet) {\n                if ((!range || !(range.hasOwnProperty('column_focus') && range.hasOwnProperty('row_focus'))) && !isStringRange) {\n                    if (isEditMode()) {\n                        alert(locale_frozen.noSeletionError);\n                    } else {\n                        tooltip.info(locale_frozen.noSeletionError, '');\n                    }\n                    return;\n                }\n                if (isStringRange) {\n                    range = formula.getcellrange(range);\n                    range = {\n                        row_focus: range.row[0],\n                        column_focus: range.column[0]\n                    };\n                }\n                let scrollTop = $('#luckysheet-cell-main').scrollTop();\n                let row_st = luckysheet_searcharray(Store.visibledatarow, scrollTop);\n                let row_focus = range.row_focus;\n                if (row_focus > row_st) {\n                    row_st = row_focus;\n                }\n                if (row_st == -1) {\n                    row_st = 0;\n                }\n                let top = Store.visibledatarow[row_st] - 2 - scrollTop + Store.columnHeaderHeight;\n                let freezenhorizontaldata = [\n                    Store.visibledatarow[row_st],\n                    row_st + 1,\n                    scrollTop,\n                    luckysheetFreezen.cutVolumn(Store.visibledatarow, row_st + 1),\n                    top\n                ];\n                luckysheetFreezen.saveFreezen(freezenhorizontaldata, top, null, null);\n                luckysheetFreezen.createFreezenHorizontal(freezenhorizontaldata, top);\n                let scrollLeft = $('#luckysheet-cell-main').scrollLeft();\n                let col_st = luckysheet_searcharray(Store.visibledatacolumn, scrollLeft);\n                let column_focus = range.column_focus;\n                if (column_focus > col_st) {\n                    col_st = column_focus;\n                }\n                if (col_st == -1) {\n                    col_st = 0;\n                }\n                let left = Store.visibledatacolumn[col_st] - 2 - scrollLeft + Store.rowHeaderWidth;\n                let freezenverticaldata = [\n                    Store.visibledatacolumn[col_st],\n                    col_st + 1,\n                    scrollLeft,\n                    luckysheetFreezen.cutVolumn(Store.visibledatacolumn, col_st + 1),\n                    left\n                ];\n                luckysheetFreezen.saveFreezen(null, null, freezenverticaldata, left);\n                luckysheetFreezen.createFreezenVertical(freezenverticaldata, left);\n                luckysheetFreezen.createAssistCanvas();\n                luckysheetrefreshgrid();\n            }\n        }\n    }\n    function insertRowOrColumn(type, index = 0, options = {}) {\n        if (!isRealNum(index)) {\n            return tooltip.info('The index parameter is invalid.', '');\n        }\n        let curSheetOrder = getSheetIndex(Store.currentSheetIndex);\n        let {number = 1, order = curSheetOrder, success} = { ...options };\n        let _locale = locale();\n        let locale_info = _locale.info;\n        if (!isRealNum(number)) {\n            if (isEditMode()) {\n                alert(locale_info.tipInputNumber);\n            } else {\n                tooltip.info(locale_info.tipInputNumber, '');\n            }\n            return;\n        }\n        number = parseInt(number);\n        if (number < 1 || number > 100) {\n            if (isEditMode()) {\n                alert(locale_info.tipInputNumberLimit);\n            } else {\n                tooltip.info(locale_info.tipInputNumberLimit, '');\n            }\n            return;\n        }    // 默认在行上方增加行，列左侧增加列\n        // 默认在行上方增加行，列左侧增加列\n        let sheetIndex;\n        if (order) {\n            if (Store.luckysheetfile[order]) {\n                sheetIndex = Store.luckysheetfile[order].index;\n            }\n        }\n        luckysheetextendtable(type, index, number, 'lefttop', sheetIndex);\n        if (success && typeof success === 'function') {\n            success();\n        }\n    }\n    function insertRow(row = 0, options = {}) {\n        insertRowOrColumn('row', row, options);\n    }\n    function insertColumn(column = 0, options = {}) {\n        insertRowOrColumn('column', column, options);\n    }\n    function deleteRowOrColumn(type, startIndex, endIndex, options = {}) {\n        if (!isRealNum(startIndex) || !isRealNum(endIndex)) {\n            return tooltip.info('Please enter the index for deleting rows or columns correctly.', '');\n        }\n        let curSheetOrder = getSheetIndex(Store.currentSheetIndex);\n        let {order = curSheetOrder, success} = { ...options };\n        let sheetIndex;\n        if (order) {\n            if (Store.luckysheetfile[order]) {\n                sheetIndex = Store.luckysheetfile[order].index;\n            }\n        }\n        luckysheetdeletetable(type, startIndex, endIndex, sheetIndex);\n        if (success && typeof success === 'function') {\n            success();\n        }\n    }\n    function deleteRow(rowStart, rowEnd, options = {}) {\n        deleteRowOrColumn('row', rowStart, rowEnd, options);\n    }\n    function deleteColumn(columnStart, columnEnd, options = {}) {\n        deleteRowOrColumn('column', columnStart, columnEnd, options);\n    }\n    function hideRowOrColumn(type, startIndex, endIndex, options = {}) {\n        if (!isRealNum(startIndex) || !isRealNum(endIndex)) {\n            return tooltip.info('Please enter the index for deleting rows or columns correctly.', '');\n        }\n        let curSheetOrder = getSheetIndex(Store.currentSheetIndex);\n        let {order = curSheetOrder, success} = { ...options };\n        let file = Store.luckysheetfile[order];\n        let cfgKey = type === 'row' ? 'rowhidden' : 'colhidden';\n        let cfg = $.extend(true, {}, file.config);\n        if (cfg[cfgKey] == null) {\n            cfg[cfgKey] = {};\n        }\n        for (let i = startIndex; i <= endIndex; i++) {\n            cfg[cfgKey][i] = 0;\n        }    //保存撤销\n        //保存撤销\n        if (Store.clearjfundo) {\n            let redo = {};\n            redo['type'] = type === 'row' ? 'showHidRows' : 'showHidCols';\n            redo['sheetIndex'] = file.index;\n            redo['config'] = $.extend(true, {}, file.config);\n            redo['curconfig'] = cfg;\n            Store.jfundo.length = 0;\n            Store.jfredo.push(redo);\n        }\n        Store.luckysheetfile[order].config = cfg;\n        server.saveParam('cg', file.index, cfg[cfgKey], { 'k': cfgKey });    // 若操作sheet为当前sheet页，行高、列宽 刷新\n        // 若操作sheet为当前sheet页，行高、列宽 刷新\n        if (order == curSheetOrder) {\n            //config\n            Store.config = cfg;\n            jfrefreshgrid_rhcw(Store.flowdata.length, Store.flowdata[0].length);\n        }\n        if (success && typeof success === 'function') {\n            success();\n        }\n    }\n    function showRowOrColumn(type, startIndex, endIndex, options = {}) {\n        if (!isRealNum(startIndex) || !isRealNum(endIndex)) {\n            return tooltip.info('Please enter the index for deleting rows or columns correctly.', '');\n        }\n        let curSheetOrder = getSheetIndex(Store.currentSheetIndex);\n        let {order = curSheetOrder, success} = { ...options };\n        let file = Store.luckysheetfile[order];\n        let cfgKey = type === 'row' ? 'rowhidden' : 'colhidden';\n        let cfg = $.extend(true, {}, file.config);\n        if (cfg[cfgKey] == null) {\n            return;\n        }\n        for (let i = startIndex; i <= endIndex; i++) {\n            delete cfg[cfgKey][i];\n        }    //保存撤销\n        //保存撤销\n        if (Store.clearjfundo) {\n            let redo = {};\n            redo['type'] = type === 'row' ? 'showHidRows' : 'showHidCols';\n            redo['sheetIndex'] = file.index;\n            redo['config'] = $.extend(true, {}, file.config);\n            redo['curconfig'] = cfg;\n            Store.jfundo.length = 0;\n            Store.jfredo.push(redo);\n        }    //config\n        //config\n        Store.luckysheetfile[order].config = Store.config;\n        server.saveParam('cg', file.index, cfg[cfgKey], { 'k': cfgKey });    // 若操作sheet为当前sheet页，行高、列宽 刷新\n        // 若操作sheet为当前sheet页，行高、列宽 刷新\n        if (order === curSheetOrder) {\n            Store.config = cfg;\n            jfrefreshgrid_rhcw(Store.flowdata.length, Store.flowdata[0].length);\n        }\n        if (success && typeof success === 'function') {\n            success();\n        }\n    }\n    function hideRow(startIndex, endIndex, options = {}) {\n        hideRowOrColumn('row', startIndex, endIndex, options);\n    }\n    function showRow(startIndex, endIndex, options = {}) {\n        showRowOrColumn('row', startIndex, endIndex, options);\n    }\n    function hideColumn(startIndex, endIndex, options = {}) {\n        hideRowOrColumn('column', startIndex, endIndex, options);\n    }\n    function showColumn(startIndex, endIndex, options = {}) {\n        showRowOrColumn('column', startIndex, endIndex, options);\n    }\n    function setRowHeight(rowInfo, options = {}) {\n        if (getObjType(rowInfo) != 'object') {\n            return tooltip.info('The rowInfo parameter is invalid.', '');\n        }\n        let {order = getSheetIndex(Store.currentSheetIndex), success} = { ...options };\n        let file = Store.luckysheetfile[order];\n        if (file == null) {\n            return tooltip.info('The order parameter is invalid.', '');\n        }\n        let cfg = $.extend(true, {}, file.config);\n        if (cfg['rowlen'] == null) {\n            cfg['rowlen'] = {};\n        }\n        for (let r in rowInfo) {\n            if (parseInt(r) >= 0) {\n                let len = rowInfo[r];\n                if (Number(len) >= 0) {\n                    cfg['rowlen'][parseInt(r)] = Number(len);\n                }\n            }\n        }\n        file.config = cfg;\n        server.saveParam('cg', file.index, cfg['rowlen'], { 'k': 'rowlen' });\n        if (file.index == Store.currentSheetIndex) {\n            Store.config = cfg;\n            jfrefreshgrid_rhcw(Store.flowdata.length, Store.flowdata[0].length);\n        }\n        if (success && typeof success === 'function') {\n            success();\n        }\n    }\n    function setColumnWidth(columnInfo, options = {}) {\n        if (getObjType(columnInfo) != 'object') {\n            return tooltip.info('The columnInfo parameter is invalid.', '');\n        }\n        let {order = getSheetIndex(Store.currentSheetIndex), success} = { ...options };\n        let file = Store.luckysheetfile[order];\n        if (file == null) {\n            return tooltip.info('The order parameter is invalid.', '');\n        }\n        let cfg = $.extend(true, {}, file.config);\n        if (cfg['columnlen'] == null) {\n            cfg['columnlen'] = {};\n        }\n        for (let c in columnInfo) {\n            if (parseInt(c) >= 0) {\n                let len = columnInfo[c];\n                if (Number(len) >= 0) {\n                    cfg['columnlen'][parseInt(c)] = Number(len);\n                }\n            }\n        }\n        file.config = cfg;\n        server.saveParam('cg', file.index, cfg['columnlen'], { 'k': 'columnlen' });\n        if (file.index == Store.currentSheetIndex) {\n            Store.config = cfg;\n            jfrefreshgrid_rhcw(Store.flowdata.length, Store.flowdata[0].length);\n        }\n        if (success && typeof success === 'function') {\n            success();\n        }\n    }\n    function getRowHeight(rowInfo, options = {}) {\n        if (getObjType(rowInfo) != 'array' || rowInfo.length == 0) {\n            return tooltip.info('The rowInfo parameter is invalid.', '');\n        }\n        let {order = getSheetIndex(Store.currentSheetIndex), success} = { ...options };\n        let file = Store.luckysheetfile[order];\n        if (file == null) {\n            return tooltip.info('The order parameter is invalid.', '');\n        }\n        let cfg = $.extend(true, {}, file.config);\n        let rowlen = cfg['rowlen'] || {};\n        let rowlenObj = {};\n        rowInfo.forEach(item => {\n            if (parseInt(item) >= 0) {\n                let size = rowlen[parseInt(item)] || Store.defaultrowlen;\n                rowlenObj[parseInt(item)] = size;\n            }\n        });\n        setTimeout(() => {\n            if (success && typeof success === 'function') {\n                success();\n            }\n        }, 1);\n        return rowlenObj;\n    }\n    function getColumnWidth(columnInfo, options = {}) {\n        if (getObjType(columnInfo) != 'array' || columnInfo.length == 0) {\n            return tooltip.info('The columnInfo parameter is invalid.', '');\n        }\n        let {order = getSheetIndex(Store.currentSheetIndex), success} = { ...options };\n        let file = Store.luckysheetfile[order];\n        if (file == null) {\n            return tooltip.info('The order parameter is invalid.', '');\n        }\n        let cfg = $.extend(true, {}, file.config);\n        let columnlen = cfg['columnlen'] || {};\n        let columnlenObj = {};\n        columnInfo.forEach(item => {\n            if (parseInt(item) >= 0) {\n                let size = columnlen[parseInt(item)] || Store.defaultcollen;\n                columnlenObj[parseInt(item)] = size;\n            }\n        });\n        setTimeout(() => {\n            if (success && typeof success === 'function') {\n                success();\n            }\n        }, 1);\n        return columnlenObj;\n    }\n    function getDefaultRowHeight(options = {}) {\n        let {order = getSheetIndex(Store.currentSheetIndex), success} = { ...options };\n        setTimeout(() => {\n            if (success && typeof success === 'function') {\n                success();\n            }\n        }, 1);\n        return Store.luckysheetfile[order].defaultRowHeight;\n    }\n    function getDefaultColWidth(options = {}) {\n        let {order = getSheetIndex(Store.currentSheetIndex), success} = { ...options };\n        setTimeout(() => {\n            if (success && typeof success === 'function') {\n                success();\n            }\n        }, 1);\n        return Store.luckysheetfile[order].defaultColWidth;\n    }\n    function getRange() {\n        let rangeArr = Store.luckysheet_select_save;\n        let result = [];\n        for (let i = 0; i < rangeArr.length; i++) {\n            let rangeItem = rangeArr[i];\n            let temp = {\n                row: rangeItem.row,\n                column: rangeItem.column\n            };\n            result.push(temp);\n        }\n        return result;\n    }\n    function getRangeWithFlatten(range) {\n        range = range || getRange();\n        let result = [];\n        range.forEach(ele => {\n            // 这个data可能是个范围或者是单个cell\n            let rs = ele.row;\n            let cs = ele.column;\n            for (let r = rs[0]; r <= rs[1]; r++) {\n                for (let c = cs[0]; c <= cs[1]; c++) {\n                    // r c 当前的r和当前的c\n                    result.push({\n                        r,\n                        c\n                    });\n                }\n            }\n        });\n        return result;\n    }\n    function getRangeValuesWithFlatte(range) {\n        range = range || getRangeWithFlatten();\n        let values = [];    // 获取到的这个数据不是最新的数据\n        // 获取到的这个数据不是最新的数据\n        range.forEach(item => {\n            values.push(Store.flowdata[item.r][item.c]);\n        });\n        return values;\n    }\n    function getRangeAxis() {\n        let result = [];\n        let rangeArr = Store.luckysheet_select_save;\n        let sheetIndex = Store.currentSheetIndex;\n        rangeArr.forEach(ele => {\n            let axisText = getRangetxt(sheetIndex, {\n                column: ele.column,\n                row: ele.row\n            });\n            result.push(axisText);\n        });\n        return result;\n    }\n    function getRangeValue(options = {}) {\n        let curOrder = getSheetIndex(Store.currentSheetIndex);\n        let {range, order = curOrder} = { ...options };\n        let file = Store.luckysheetfile[order];\n        if (!range || typeof range === 'object') {\n            return getdatabyselection(range, file.index);\n        } else if (typeof range === 'string') {\n            if (formula.iscelldata(range)) {\n                return getdatabyselection(formula.getcellrange(range), file.index);\n            } else {\n                tooltip.info('The range is invalid, please check range parameter.', '');\n            }\n        }\n    }\n    function getRangeHtml(options = {}) {\n        let {range = Store.luckysheet_select_save, order = getSheetIndex(Store.currentSheetIndex), success} = { ...options };\n        if (getObjType(range) == 'string') {\n            if (!formula.iscelldata(range)) {\n                return tooltip.info('The range parameter is invalid.', '');\n            }\n            let cellrange = formula.getcellrange(range);\n            range = [{\n                    'row': cellrange.row,\n                    'column': cellrange.column\n                }];\n        } else if (getObjType(range) == 'object') {\n            if (range.row == null || range.column == null) {\n                return tooltip.info('The range parameter is invalid.', '');\n            }\n            range = [{\n                    'row': range.row,\n                    'column': range.column\n                }];\n        }\n        if (getObjType(range) != 'array') {\n            return tooltip.info('The range parameter is invalid.', '');\n        }\n        let file = Store.luckysheetfile[order];\n        if (file == null) {\n            return tooltip.info('The order parameter is invalid.', '');\n        }    //复制范围内包含部分合并单元格，提示\n        //复制范围内包含部分合并单元格，提示\n        let cfg = $.extend(true, {}, file.config);\n        if (cfg['merge'] != null) {\n            let has_PartMC = false;\n            for (let s = 0; s < range.length; s++) {\n                let r1 = range[s].row[0], r2 = range[s].row[1];\n                let c1 = range[s].column[0], c2 = range[s].column[1];\n                has_PartMC = hasPartMC(cfg, r1, r2, c1, c2);\n                if (has_PartMC) {\n                    break;\n                }\n            }\n            if (has_PartMC) {\n                return tooltip.info('Cannot perform this operation on partially merged cells', '');\n            }\n        }    //多重选区 有条件格式时 提示\n        //多重选区 有条件格式时 提示\n        let cdformat = $.extend(true, [], file.luckysheet_conditionformat_save);\n        if (range.length > 1 && cdformat.length > 0) {\n            let hasCF = false;\n            let cf_compute = conditionformat.getComputeMap(file.index);\n            for (let s = 0; s < range.length; s++) {\n                let r1 = range[s].row[0], r2 = range[s].row[1];\n                let c1 = range[s].column[0], c2 = range[s].column[1];\n                for (let r = r1; r <= r2; r++) {\n                    for (let c = c1; c <= c2; c++) {\n                        if (conditionformat.checksCF(r, c, cf_compute) != null) {\n                            hasCF = true;\n                            break;\n                        }\n                    }\n                    if (hasCF) {\n                        break;\n                    }\n                }\n                if (hasCF) {\n                    break;\n                }\n            }\n            if (hasCF) {\n                return tooltip.info('Cannot perform this operation on multiple selection areas, please select a single area', '');\n            }\n        }    //多重选区 行不一样且列不一样时 提示\n        //多重选区 行不一样且列不一样时 提示\n        if (range.length > 1) {\n            let isSameRow = true, str_r = range[0].row[0], end_r = range[0].row[1];\n            let isSameCol = true, str_c = range[0].column[0], end_c = range[0].column[1];\n            for (let s = 1; s < range.length; s++) {\n                if (range[s].row[0] != str_r || range[s].row[1] != end_r) {\n                    isSameRow = false;\n                }\n                if (range[s].column[0] != str_c || range[s].column[1] != end_c) {\n                    isSameCol = false;\n                }\n            }\n            if (!isSameRow && !isSameCol || selectIsOverlap(range)) {\n                return tooltip.info('Cannot perform this operation on multiple selection areas, please select a single area', '');\n            }\n        }\n        let rowIndexArr = [], colIndexArr = [];\n        for (let s = 0; s < range.length; s++) {\n            let r1 = range[s].row[0], r2 = range[s].row[1];\n            let c1 = range[s].column[0], c2 = range[s].column[1];\n            for (let r = r1; r <= r2; r++) {\n                if (cfg['rowhidden'] != null && cfg['rowhidden'][r] != null) {\n                    continue;\n                }\n                if (!rowIndexArr.includes(r)) {\n                    rowIndexArr.push(r);\n                }\n                for (let c = c1; c <= c2; c++) {\n                    if (cfg['colhidden'] != null && cfg['colhidden'][c] != null) {\n                        continue;\n                    }\n                    if (!colIndexArr.includes(c)) {\n                        colIndexArr.push(c);\n                    }\n                }\n            }\n        }\n        let borderInfoCompute;\n        if (cfg['borderInfo'] && cfg['borderInfo'].length > 0) {\n            //边框\n            borderInfoCompute = getBorderInfoCompute(file.index);\n        }\n        let d = file.data;\n        if (d == null || d.length == 0) {\n            d = sheetmanage.buildGridData(file);\n        }\n        let cpdata = '';\n        let colgroup = '';\n        rowIndexArr = rowIndexArr.sort();\n        colIndexArr = colIndexArr.sort();\n        for (let i = 0; i < rowIndexArr.length; i++) {\n            let r = rowIndexArr[i];\n            if (cfg['rowhidden'] != null && cfg['rowhidden'][r] != null) {\n                continue;\n            }\n            cpdata += '<tr>';\n            for (let j = 0; j < colIndexArr.length; j++) {\n                let c = colIndexArr[j];\n                if (cfg['colhidden'] != null && cfg['colhidden'][c] != null) {\n                    continue;\n                }\n                let column = '<td ${span} style=\"${style}\">';\n                if (d[r] != null && d[r][c] != null) {\n                    let style = '', span = '';\n                    if (r == rowIndexArr[0]) {\n                        if (cfg['columnlen'] == null || cfg['columnlen'][c.toString()] == null) {\n                            colgroup += '<colgroup width=\"72px\"></colgroup>';\n                        } else {\n                            colgroup += '<colgroup width=\"' + cfg['columnlen'][c.toString()] + 'px\"></colgroup>';\n                        }\n                    }\n                    if (c == colIndexArr[0]) {\n                        if (cfg['rowlen'] == null || cfg['rowlen'][r.toString()] == null) {\n                            style += 'height:19px;';\n                        } else {\n                            style += 'height:' + cfg['rowlen'][r.toString()] + 'px;';\n                        }\n                    }\n                    let reg = /^(w|W)((0?)|(0\\.0+))$/;\n                    let c_value;\n                    if (d[r][c].ct != null && d[r][c].ct.fa != null && d[r][c].ct.fa.match(reg)) {\n                        c_value = getcellvalue(r, c, d);\n                    } else {\n                        c_value = getcellvalue(r, c, d, 'm');\n                    }\n                    style += menuButton.getStyleByCell(d, r, c);\n                    if (getObjType(d[r][c]) == 'object' && 'mc' in d[r][c]) {\n                        if ('rs' in d[r][c]['mc']) {\n                            span = 'rowspan=\"' + d[r][c]['mc'].rs + '\" colspan=\"' + d[r][c]['mc'].cs + '\"';    //边框\n                            //边框\n                            if (borderInfoCompute && borderInfoCompute[r + '_' + c]) {\n                                let bl_obj = {\n                                        'color': {},\n                                        'style': {}\n                                    }, br_obj = {\n                                        'color': {},\n                                        'style': {}\n                                    }, bt_obj = {\n                                        'color': {},\n                                        'style': {}\n                                    }, bb_obj = {\n                                        'color': {},\n                                        'style': {}\n                                    };\n                                for (let bd_r = r; bd_r < r + d[r][c]['mc'].rs; bd_r++) {\n                                    for (let bd_c = c; bd_c < c + d[r][c]['mc'].cs; bd_c++) {\n                                        if (bd_r == r && borderInfoCompute[bd_r + '_' + bd_c] && borderInfoCompute[bd_r + '_' + bd_c].t) {\n                                            let linetype = borderInfoCompute[bd_r + '_' + bd_c].t.style;\n                                            let bcolor = borderInfoCompute[bd_r + '_' + bd_c].t.color;\n                                            if (bt_obj['style'][linetype] == null) {\n                                                bt_obj['style'][linetype] = 1;\n                                            } else {\n                                                bt_obj['style'][linetype] = bt_obj['style'][linetype] + 1;\n                                            }\n                                            if (bt_obj['color'][bcolor] == null) {\n                                                bt_obj['color'][bcolor] = 1;\n                                            } else {\n                                                bt_obj['color'][bcolor] = bt_obj['color'][bcolor] + 1;\n                                            }\n                                        }\n                                        if (bd_r == r + d[r][c]['mc'].rs - 1 && borderInfoCompute[bd_r + '_' + bd_c] && borderInfoCompute[bd_r + '_' + bd_c].b) {\n                                            let linetype = borderInfoCompute[bd_r + '_' + bd_c].b.style;\n                                            let bcolor = borderInfoCompute[bd_r + '_' + bd_c].b.color;\n                                            if (bb_obj['style'][linetype] == null) {\n                                                bb_obj['style'][linetype] = 1;\n                                            } else {\n                                                bb_obj['style'][linetype] = bb_obj['style'][linetype] + 1;\n                                            }\n                                            if (bb_obj['color'][bcolor] == null) {\n                                                bb_obj['color'][bcolor] = 1;\n                                            } else {\n                                                bb_obj['color'][bcolor] = bb_obj['color'][bcolor] + 1;\n                                            }\n                                        }\n                                        if (bd_c == c && borderInfoCompute[bd_r + '_' + bd_c] && borderInfoCompute[bd_r + '_' + bd_c].l) {\n                                            let linetype = borderInfoCompute[r + '_' + c].l.style;\n                                            let bcolor = borderInfoCompute[bd_r + '_' + bd_c].l.color;\n                                            if (bl_obj['style'][linetype] == null) {\n                                                bl_obj['style'][linetype] = 1;\n                                            } else {\n                                                bl_obj['style'][linetype] = bl_obj['style'][linetype] + 1;\n                                            }\n                                            if (bl_obj['color'][bcolor] == null) {\n                                                bl_obj['color'][bcolor] = 1;\n                                            } else {\n                                                bl_obj['color'][bcolor] = bl_obj['color'][bcolor] + 1;\n                                            }\n                                        }\n                                        if (bd_c == c + d[r][c]['mc'].cs - 1 && borderInfoCompute[bd_r + '_' + bd_c] && borderInfoCompute[bd_r + '_' + bd_c].r) {\n                                            let linetype = borderInfoCompute[bd_r + '_' + bd_c].r.style;\n                                            let bcolor = borderInfoCompute[bd_r + '_' + bd_c].r.color;\n                                            if (br_obj['style'][linetype] == null) {\n                                                br_obj['style'][linetype] = 1;\n                                            } else {\n                                                br_obj['style'][linetype] = br_obj['style'][linetype] + 1;\n                                            }\n                                            if (br_obj['color'][bcolor] == null) {\n                                                br_obj['color'][bcolor] = 1;\n                                            } else {\n                                                br_obj['color'][bcolor] = br_obj['color'][bcolor] + 1;\n                                            }\n                                        }\n                                    }\n                                }\n                                let rowlen = d[r][c]['mc'].rs, collen = d[r][c]['mc'].cs;\n                                if (JSON.stringify(bl_obj).length > 23) {\n                                    let bl_color = null, bl_style = null;\n                                    for (let x in bl_obj.color) {\n                                        if (bl_obj.color[x] >= rowlen / 2) {\n                                            bl_color = x;\n                                        }\n                                    }\n                                    for (let x in bl_obj.style) {\n                                        if (bl_obj.style[x] >= rowlen / 2) {\n                                            bl_style = x;\n                                        }\n                                    }\n                                    if (bl_color != null && bl_style != null) {\n                                        style += 'border-left:' + selection.getHtmlBorderStyle(bl_style, bl_color);\n                                    }\n                                }\n                                if (JSON.stringify(br_obj).length > 23) {\n                                    let br_color = null, br_style = null;\n                                    for (let x in br_obj.color) {\n                                        if (br_obj.color[x] >= rowlen / 2) {\n                                            br_color = x;\n                                        }\n                                    }\n                                    for (let x in br_obj.style) {\n                                        if (br_obj.style[x] >= rowlen / 2) {\n                                            br_style = x;\n                                        }\n                                    }\n                                    if (br_color != null && br_style != null) {\n                                        style += 'border-right:' + selection.getHtmlBorderStyle(br_style, br_color);\n                                    }\n                                }\n                                if (JSON.stringify(bt_obj).length > 23) {\n                                    let bt_color = null, bt_style = null;\n                                    for (let x in bt_obj.color) {\n                                        if (bt_obj.color[x] >= collen / 2) {\n                                            bt_color = x;\n                                        }\n                                    }\n                                    for (let x in bt_obj.style) {\n                                        if (bt_obj.style[x] >= collen / 2) {\n                                            bt_style = x;\n                                        }\n                                    }\n                                    if (bt_color != null && bt_style != null) {\n                                        style += 'border-top:' + selection.getHtmlBorderStyle(bt_style, bt_color);\n                                    }\n                                }\n                                if (JSON.stringify(bb_obj).length > 23) {\n                                    let bb_color = null, bb_style = null;\n                                    for (let x in bb_obj.color) {\n                                        if (bb_obj.color[x] >= collen / 2) {\n                                            bb_color = x;\n                                        }\n                                    }\n                                    for (let x in bb_obj.style) {\n                                        if (bb_obj.style[x] >= collen / 2) {\n                                            bb_style = x;\n                                        }\n                                    }\n                                    if (bb_color != null && bb_style != null) {\n                                        style += 'border-bottom:' + selection.getHtmlBorderStyle(bb_style, bb_color);\n                                    }\n                                }\n                            }\n                        } else {\n                            continue;\n                        }\n                    } else {\n                        //边框\n                        if (borderInfoCompute && borderInfoCompute[r + '_' + c]) {\n                            //左边框\n                            if (borderInfoCompute[r + '_' + c].l) {\n                                let linetype = borderInfoCompute[r + '_' + c].l.style;\n                                let bcolor = borderInfoCompute[r + '_' + c].l.color;\n                                style += 'border-left:' + selection.getHtmlBorderStyle(linetype, bcolor);\n                            }    //右边框\n                            //右边框\n                            if (borderInfoCompute[r + '_' + c].r) {\n                                let linetype = borderInfoCompute[r + '_' + c].r.style;\n                                let bcolor = borderInfoCompute[r + '_' + c].r.color;\n                                style += 'border-right:' + selection.getHtmlBorderStyle(linetype, bcolor);\n                            }    //下边框\n                            //下边框\n                            if (borderInfoCompute[r + '_' + c].b) {\n                                let linetype = borderInfoCompute[r + '_' + c].b.style;\n                                let bcolor = borderInfoCompute[r + '_' + c].b.color;\n                                style += 'border-bottom:' + selection.getHtmlBorderStyle(linetype, bcolor);\n                            }    //上边框\n                            //上边框\n                            if (borderInfoCompute[r + '_' + c].t) {\n                                let linetype = borderInfoCompute[r + '_' + c].t.style;\n                                let bcolor = borderInfoCompute[r + '_' + c].t.color;\n                                style += 'border-top:' + selection.getHtmlBorderStyle(linetype, bcolor);\n                            }\n                        }\n                    }\n                    column = replaceHtml(column, {\n                        'style': style,\n                        'span': span\n                    });\n                    if (c_value == null) {\n                        c_value = getcellvalue(r, c, d);\n                    }\n                    if (c_value == null) {\n                        c_value = ' ';\n                    }\n                    column += c_value;\n                } else {\n                    let style = '';    //边框\n                    //边框\n                    if (borderInfoCompute && borderInfoCompute[r + '_' + c]) {\n                        //左边框\n                        if (borderInfoCompute[r + '_' + c].l) {\n                            let linetype = borderInfoCompute[r + '_' + c].l.style;\n                            let bcolor = borderInfoCompute[r + '_' + c].l.color;\n                            style += 'border-left:' + selection.getHtmlBorderStyle(linetype, bcolor);\n                        }    //右边框\n                        //右边框\n                        if (borderInfoCompute[r + '_' + c].r) {\n                            let linetype = borderInfoCompute[r + '_' + c].r.style;\n                            let bcolor = borderInfoCompute[r + '_' + c].r.color;\n                            style += 'border-right:' + selection.getHtmlBorderStyle(linetype, bcolor);\n                        }    //下边框\n                        //下边框\n                        if (borderInfoCompute[r + '_' + c].b) {\n                            let linetype = borderInfoCompute[r + '_' + c].b.style;\n                            let bcolor = borderInfoCompute[r + '_' + c].b.color;\n                            style += 'border-bottom:' + selection.getHtmlBorderStyle(linetype, bcolor);\n                        }    //上边框\n                        //上边框\n                        if (borderInfoCompute[r + '_' + c].t) {\n                            let linetype = borderInfoCompute[r + '_' + c].t.style;\n                            let bcolor = borderInfoCompute[r + '_' + c].t.color;\n                            style += 'border-top:' + selection.getHtmlBorderStyle(linetype, bcolor);\n                        }\n                    }\n                    column += '';\n                    if (r == rowIndexArr[0]) {\n                        if (cfg['columnlen'] == null || cfg['columnlen'][c.toString()] == null) {\n                            colgroup += '<colgroup width=\"72px\"></colgroup>';\n                        } else {\n                            colgroup += '<colgroup width=\"' + cfg['columnlen'][c.toString()] + 'px\"></colgroup>';\n                        }\n                    }\n                    if (c == colIndexArr[0]) {\n                        if (cfg['rowlen'] == null || cfg['rowlen'][r.toString()] == null) {\n                            style += 'height:19px;';\n                        } else {\n                            style += 'height:' + cfg['rowlen'][r.toString()] + 'px;';\n                        }\n                    }\n                    column = replaceHtml(column, {\n                        'style': style,\n                        'span': ''\n                    });\n                    column += ' ';\n                }\n                column += '</td>';\n                cpdata += column;\n            }\n            cpdata += '</tr>';\n        }\n        cpdata = '<table data-type=\"luckysheet_copy_action_table\">' + colgroup + cpdata + '</table>';\n        return cpdata;\n    }\n    function getRangeArray(dimensional, options = {}) {\n        let dimensionalValues = [\n            'oneDimensional',\n            'twoDimensional'\n        ];\n        if (!dimensionalValues.includes(dimensional)) {\n            return tooltip.info('The dimensional parameter is invalid.', '');\n        }\n        let {range = Store.luckysheet_select_save[Store.luckysheet_select_save.length - 1], order = getSheetIndex(Store.currentSheetIndex)} = { ...options };\n        let file = Store.luckysheetfile[order];\n        if (file == null) {\n            return tooltip.info('The order parameter is invalid.', '');\n        }\n        if (getObjType(range) == 'string') {\n            if (!formula.iscelldata(range)) {\n                return tooltip.info('The range parameter is invalid.', '');\n            }\n            range = formula.getcellrange(range);\n        }\n        if (getObjType(range) != 'object' || range.row == null || range.column == null) {\n            return tooltip.info('The range parameter is invalid.', '');\n        }\n        let r1 = range.row[0], r2 = range.row[1];\n        let c1 = range.column[0], c2 = range.column[1];    //复制范围内包含部分合并单元格，提示\n        //复制范围内包含部分合并单元格，提示\n        let cfg = $.extend(true, {}, file.config);\n        if (cfg['merge'] != null) {\n            let has_PartMC = hasPartMC(cfg, r1, r2, c1, c2);\n            if (has_PartMC) {\n                return tooltip.info('Cannot perform this operation on partially merged cells', '');\n            }\n        }\n        let data = file.data;\n        if (data == null || data.length == 0) {\n            data = sheetmanage.buildGridData(file);\n        }\n        let dataArr = [];\n        if (dimensional == 'oneDimensional') {\n            //一维数组\n            for (let r = r1; r <= r2; r++) {\n                for (let c = c1; c <= c2; c++) {\n                    let cell = data[r][c];\n                    if (cell == null || cell.v == null) {\n                        dataArr.push(null);\n                    } else {\n                        dataArr.push(cell.v);\n                    }\n                }\n            }\n        } else if (dimensional == 'twoDimensional') {\n            for (let r = r1; r <= r2; r++) {\n                let row = [];\n                for (let c = c1; c <= c2; c++) {\n                    let cell = data[r][c];\n                    if (cell == null || cell.v == null) {\n                        row.push(null);\n                    } else {\n                        row.push(cell.v);\n                    }\n                }\n                dataArr.push(row);\n            }\n        }\n        return dataArr;\n    }\n    function getRangeJson(isFirstRowTitle, options = {}) {\n        let curRange = Store.luckysheet_select_save[0];\n        let curSheetOrder = getSheetIndex(Store.currentSheetIndex);\n        let {range = curRange, order = curSheetOrder} = { ...options };\n        let file = Store.luckysheetfile[order];\n        let config = file.config;\n        if (range && typeof range === 'string' && formula.iscelldata(range)) {\n            range = formula.getcellrange(range);\n        }\n        if (!range || range.length > 1) {\n            if (isEditMode()) {\n                alert(locale_drag.noMulti);\n            } else {\n                tooltip.info(locale_drag.noMulti, '');\n            }\n            return;\n        }    //复制范围内包含部分合并单元格，提示\n        //复制范围内包含部分合并单元格，提示\n        if (config['merge'] != null) {\n            let has_PartMC = false;\n            let r1 = range.row[0], r2 = range.row[1], c1 = range.column[0], c2 = range.column[1];\n            has_PartMC = hasPartMC(config, r1, r2, c1, c2);\n            if (has_PartMC) {\n                if (isEditMode()) {\n                    alert(locale().drag.noPartMerge);\n                } else {\n                    tooltip.info(locale().drag.noPartMerge, '');\n                }\n                return;\n            }\n        }\n        let getdata = getdatabyselection(range, file.index);\n        let arr = [];\n        if (getdata.length === 0) {\n            return;\n        }\n        if (isFirstRowTitle) {\n            if (getdata.length === 1) {\n                let obj = {};\n                for (let i = 0; i < getdata[0].length; i++) {\n                    obj[getcellvalue(0, i, getdata)] = '';\n                }\n                arr.push(obj);\n            } else {\n                for (let r = 1; r < getdata.length; r++) {\n                    let obj = {};\n                    for (let c = 0; c < getdata[0].length; c++) {\n                        if (getcellvalue(0, c, getdata) == undefined) {\n                            obj[''] = getcellvalue(r, c, getdata);\n                        } else {\n                            obj[getcellvalue(0, c, getdata)] = getcellvalue(r, c, getdata);\n                        }\n                    }\n                    arr.push(obj);\n                }\n            }\n        } else {\n            let st = range['column'][0];\n            for (let r = 0; r < getdata.length; r++) {\n                let obj = {};\n                for (let c = 0; c < getdata[0].length; c++) {\n                    obj[chatatABC(c + st)] = getcellvalue(r, c, getdata);\n                }\n                arr.push(obj);\n            }\n        }    // selection.copybyformat(new Event('click'), JSON.stringify(arr));\n        // selection.copybyformat(new Event('click'), JSON.stringify(arr));\n        return arr;\n    }\n    function getRangeDiagonal(type, options = {}) {\n        let typeValues = [\n            'normal',\n            'anti',\n            'offset'\n        ];\n        if (typeValues.indexOf(type) < 0) {\n            return tooltip.info(\"The type parameter must be included in ['normal', 'anti', 'offset']\", '');\n        }\n        let curSheetOrder = getSheetIndex(Store.currentSheetIndex);\n        let curRange = Store.luckysheet_select_save;\n        let {column = 1, range = curRange, order = curSheetOrder} = { ...options };\n        let file = Store.luckysheetfile[order];\n        let config = file.config;\n        if (range && typeof range === 'string' && formula.iscelldata(range)) {\n            range = formula.getcellrange(range);\n        }\n        if (!range || range.length > 1) {\n            if (isEditMode()) {\n                alert(locale().drag.noMulti);\n            } else {\n                tooltip.info(locale().drag.noMulti, '');\n            }\n            return;\n        }    //复制范围内包含部分合并单元格，提示\n        //复制范围内包含部分合并单元格，提示\n        if (config['merge'] != null) {\n            let has_PartMC = false;\n            let r1 = range[0].row[0], r2 = range[0].row[1], c1 = range[0].column[0], c2 = range[0].column[1];\n            has_PartMC = hasPartMC(config, r1, r2, c1, c2);\n            if (has_PartMC) {\n                if (isEditMode()) {\n                    alert(locale().drag.noPartMerge);\n                } else {\n                    tooltip.info(locale().drag.noPartMerge, '');\n                }\n                return;\n            }\n        }\n        let getdata = getdatabyselection(range, order);\n        let arr = [];\n        if (getdata.length === 0) {\n            return;\n        }\n        let clen = getdata[0].length;\n        switch (type) {\n        case 'normal':\n            for (let r = 0; r < getdata.length; r++) {\n                if (r >= clen) {\n                    break;\n                }\n                arr.push(getdata[r][r]);\n            }\n            break;\n        case 'anti':\n            for (let r = 0; r < getdata.length; r++) {\n                if (r >= clen) {\n                    break;\n                }\n                arr.push(getdata[r][clen - r - 1]);\n            }\n            break;\n        case 'offset':\n            if (column.toString() == 'NaN') {\n                if (isEditMode()) {\n                    alert(locale().drag.inputCorrect);\n                } else {\n                    tooltip.info(locale().drag.inputCorrect, '');\n                }\n                return;\n            }\n            if (column < 0) {\n                if (isEditMode()) {\n                    alert(locale().drag.offsetColumnLessZero);\n                } else {\n                    tooltip.info(locale().drag.offsetColumnLessZero, '');\n                }\n                return;\n            }\n            for (let r = 0; r < getdata.length; r++) {\n                if (r + column >= clen) {\n                    break;\n                }\n                arr.push(getdata[r][r + column]);\n            }\n            break;\n        }\n        selection.copybyformat(new Event(), JSON.stringify(arr));\n    }\n    function getRangeBoolean(options = {}) {\n        let curSheetOrder = getSheetIndex(Store.currentSheetIndex);\n        let curRange = Store.luckysheet_select_save;\n        let {range = curRange, order = curSheetOrder} = { ...options };\n        let file = Store.luckysheetfile[order];\n        let config = file.config;\n        if (range && typeof range === 'string' && formula.iscelldata(range)) {\n            range = formula.getcellrange(range);\n        }\n        if (!range || range.length > 1) {\n            if (isEditMode()) {\n                alert(locale().drag.noMulti);\n            } else {\n                tooltip.info(locale().drag.noMulti, '');\n            }\n            return;\n        }    //复制范围内包含部分合并单元格，提示\n        //复制范围内包含部分合并单元格，提示\n        if (config['merge'] != null) {\n            let has_PartMC = false;\n            let r1 = range[0].row[0], r2 = range[0].row[1], c1 = range[0].column[0], c2 = range[0].column[1];\n            has_PartMC = hasPartMC(config, r1, r2, c1, c2);\n            if (has_PartMC) {\n                if (isEditMode()) {\n                    alert(locale().drag.noPartMerge);\n                } else {\n                    tooltip.info(locale().drag.noPartMerge, '');\n                }\n                return;\n            }\n        }\n        let getdata = getdatabyselection(range, order);\n        let arr = [];\n        if (getdata.length === 0) {\n            return;\n        }\n        for (let r = 0; r < getdata.length; r++) {\n            let a = [];\n            for (let c = 0; c < getdata[0].length; c++) {\n                let bool = false;\n                let v;\n                if (getObjType(getdata[r][c]) == 'object') {\n                    v = getdata[r][c].v;\n                } else {\n                    v = getdata[r][c];\n                }\n                if (v == null || v == '') {\n                    bool = false;\n                } else {\n                    v = parseInt(v);\n                    if (v == null || v > 0) {\n                        bool = true;\n                    } else {\n                        bool = false;\n                    }\n                }\n                a.push(bool);\n            }\n            arr.push(a);\n        }\n        selection.copybyformat(event, JSON.stringify(arr));\n    }\n    function setRangeShow(range, options = {}) {\n        if (getObjType(range) == 'string') {\n            if (!formula.iscelldata(range)) {\n                return tooltip.info('The range parameter is invalid.', '');\n            }\n            let cellrange = formula.getcellrange(range);\n            range = [{\n                    'row': cellrange.row,\n                    'column': cellrange.column\n                }];\n        } else if (getObjType(range) == 'object') {\n            if (range.row == null || range.column == null) {\n                return tooltip.info('The range parameter is invalid.', '');\n            }\n            range = [{\n                    'row': range.row,\n                    'column': range.column\n                }];\n        }\n        if (getObjType(range) == 'array') {\n            for (let i = 0; i < range.length; i++) {\n                if (getObjType(range[i]) === 'string') {\n                    if (!formula.iscelldata(range[i])) {\n                        return tooltip.info('The range parameter is invalid.', '');\n                    }\n                    let cellrange = formula.getcellrange(range[i]);\n                    range[i] = {\n                        'row': cellrange.row,\n                        'column': cellrange.column\n                    };\n                } else if (getObjType(range) == 'object') {\n                    if (range.row == null || range.column == null) {\n                        return tooltip.info('The range parameter is invalid.', '');\n                    }\n                    range = {\n                        'row': range.row,\n                        'column': range.column\n                    };\n                }\n            }\n        }\n        if (getObjType(range) != 'array') {\n            return tooltip.info('The range parameter is invalid.', '');\n        }\n        let {show = true, order = getSheetIndex(Store.currentSheetIndex), success} = { ...options };\n        let file = Store.luckysheetfile[order];\n        if (file == null) {\n            return tooltip.info('The order parameter is invalid.', '');\n        }\n        for (let i = 0; i < range.length; i++) {\n            let changeparam = menuButton.mergeMoveMain(range[i].column, range[i].row, range[i]);\n            if (changeparam) {\n                range[i] = {\n                    'row': changeparam[1],\n                    'column': changeparam[0]\n                };\n            }\n        }\n        file.luckysheet_select_save = range;\n        if (file.index == Store.currentSheetIndex) {\n            Store.luckysheet_select_save = range;\n            selectHightlightShow();\n            if (!show) {\n                $('#luckysheet-cell-selected-boxs').hide();\n                $('#luckysheet-cell-selected-focus').hide();\n                $('#luckysheet-row-count-show').hide();\n                $('#luckysheet-column-count-show').hide();\n                $('#luckysheet-rows-h-selected').empty();\n                $('#luckysheet-cols-h-selected').empty();\n            }\n        }\n        if (success && typeof success === 'function') {\n            success();\n        }\n    }\n    function setRangeValue(data, options = {}) {\n        let curSheetOrder = getSheetIndex(Store.currentSheetIndex);\n        let curRange = Store.luckysheet_select_save[Store.luckysheet_select_save.length - 1];\n        let {range = curRange, isRefresh = true, order = curSheetOrder, success} = { ...options };\n        if (data == null) {\n            return tooltip.info('The data which will be set to range cannot be null.', '');\n        }\n        if (range instanceof Array) {\n            return tooltip.info('setRangeValue only supports a single selection.', '');\n        }\n        if (typeof range === 'string' && formula.iscelldata(range)) {\n            range = formula.getcellrange(range);\n        }\n        let rowCount = range.row[1] - range.row[0] + 1, columnCount = range.column[1] - range.column[0] + 1;\n        if (data.length !== rowCount || data[0].length !== columnCount) {\n            return tooltip.info('The data to be set does not match the selection.', '');\n        }\n        let file = Store.luckysheetfile[order];\n        if (file == null) {\n            return tooltip.info('The order parameter is invalid.', '');\n        }\n        let sheetData = $.extend(true, [], file.data);\n        for (let i = 0; i < rowCount; i++) {\n            for (let j = 0; j < columnCount; j++) {\n                let row = range.row[0] + i, column = range.column[0] + j;\n                setCellValue(row, column, data[i][j], {\n                    order: order,\n                    isRefresh: false\n                });\n            }\n        }\n        let fileData = $.extend(true, [], file.data);\n        file.data.length = 0;\n        file.data.push(...sheetData);\n        if (file.index == Store.currentSheetIndex) {\n            jfrefreshgrid(fileData, [{\n                    row: range.row,\n                    column: range.column\n                }], undefined, true, false);\n        }\n        if (isRefresh) {\n            luckysheetrefreshgrid();\n        }\n        if (success && typeof success === 'function') {\n            success();\n        }\n    }\n    function setSingleRangeFormat(attr, value, options = {}) {\n        let curSheetOrder = getSheetIndex(Store.currentSheetIndex);\n        let curRange = Store.luckysheet_select_save[Store.luckysheet_select_save.length - 1];\n        let {range = curRange, order = curSheetOrder} = { ...options };\n        if (!attr) {\n            tooltip.info('Arguments attr cannot be null or undefined.', '');\n            return 'error';\n        }\n        if (range instanceof Array) {\n            tooltip.info('setRangeValue only supports a single selection.', '');\n            return 'error';\n        }\n        if (getObjType(range) == 'string') {\n            if (!formula.iscelldata(range)) {\n                tooltip.info('The range parameter is invalid.', '');\n                return 'error';\n            }\n            range = formula.getcellrange(range);\n        }\n        if (getObjType(range) != 'object' || range.row == null || range.column == null) {\n            tooltip.info('The range parameter is invalid.', '');\n            return 'error';\n        }\n        for (let r = range.row[0]; r <= range.row[1]; r++) {\n            for (let c = range.column[0]; c <= range.column[1]; c++) {\n                console.log('r', r);\n                console.log('c', c);\n                setCellValue(r, c, { [attr]: value }, {\n                    order: order,\n                    isRefresh: false\n                });\n            }\n        }\n    }\n    function setRangeFormat(attr, value, options = {}) {\n        let curSheetOrder = getSheetIndex(Store.currentSheetIndex);\n        let curRange = Store.luckysheet_select_save;\n        let {range = curRange, order = curSheetOrder, success} = { ...options };\n        if (getObjType(range) == 'string') {\n            if (!formula.iscelldata(range)) {\n                return tooltip.info('The range parameter is invalid.', '');\n            }\n            let cellrange = formula.getcellrange(range);\n            range = [{\n                    'row': cellrange.row,\n                    'column': cellrange.column\n                }];\n        } else if (getObjType(range) == 'object') {\n            if (range.row == null || range.column == null) {\n                return tooltip.info('The range parameter is invalid.', '');\n            }\n            range = [{\n                    'row': range.row,\n                    'column': range.column\n                }];\n        }\n        if (getObjType(range) != 'array') {\n            return tooltip.info('The range parameter is invalid.', '');\n        }\n        let file = Store.luckysheetfile[order];\n        if (file == null) {\n            return tooltip.info('The order parameter is invalid.', '');\n        }\n        let sheetData = $.extend(true, [], file.data);\n        let result = [];\n        for (let i = 0; i < range.length; i++) {\n            result.push(setSingleRangeFormat(attr, value, {\n                range: range[i],\n                order: order\n            }));\n        }\n        if (result.some(i => i === 'error')) {\n            file.data.length = 0;\n            file.data.push(...sheetData);\n            return false;\n        }\n        let fileData = $.extend(true, [], file.data);\n        file.data.length = 0;\n        file.data.push(...sheetData);\n        if (file.index == Store.currentSheetIndex) {\n            jfrefreshgrid(fileData, undefined, undefined, true, false);\n        }\n        luckysheetrefreshgrid();\n        if (success && typeof success === 'function') {\n            success();\n        }\n    }\n    function setRangeFilter(type, options = {}) {\n        let typeValues = [\n            'open',\n            'close'\n        ];\n        if (!typeValues.includes(type)) {\n            return tooltip.info('The type parameter is invalid.', '');\n        }\n        let {range = Store.luckysheet_select_save[Store.luckysheet_select_save.length - 1], order = getSheetIndex(Store.currentSheetIndex), success} = { ...options };\n        let file = Store.luckysheetfile[order];\n        if (file == null) {\n            return tooltip.info('The order parameter is invalid.', '');\n        }\n        if (getObjType(range) == 'string') {\n            if (!formula.iscelldata(range)) {\n                return tooltip.info('The range parameter is invalid.', '');\n            }\n            range = formula.getcellrange(range);\n        }\n        if (getObjType(range) != 'object' || range.row == null || range.column == null) {\n            return tooltip.info('The range parameter is invalid.', '');\n        }\n        setTimeout(() => {\n            if (success && typeof success === 'function') {\n                success();\n            }\n        }, 1);\n        if (type == 'open') {\n            file.filter_select = range;\n            if (file.index == Store.currentSheetIndex) {\n                createFilterOptions(range, file.filter);\n            }\n            return {\n                'row': range.row,\n                'column': range.column\n            };\n        } else if (type == 'close') {\n            let luckysheet_filter_save = $.extend(true, {}, file.filter_select);\n            file.filter_select = null;\n            $('#luckysheet-filter-selected-sheet' + file.index).remove();\n            $('#luckysheet-filter-options-sheet' + file.index).remove();\n            return {\n                'row': luckysheet_filter_save.row,\n                'column': luckysheet_filter_save.column\n            };\n        }\n    }\n    function setRangeMerge(type, options = {}) {\n        let typeValues = [\n            'all',\n            'horizontal',\n            'vertical'\n        ];\n        if (typeValues.indexOf(type) < 0) {\n            return tooltip.info(\"The type parameter must be included in ['all', 'horizontal', 'vertical']\", '');\n        }\n        let curSheetOrder = getSheetIndex(Store.currentSheetIndex), curRange = Store.luckysheet_select_save;\n        let {range = curRange, order = curSheetOrder, success} = { ...options };\n        let file = Store.luckysheetfile[order], cfg = $.extend(true, {}, file.config), data = $.extend(true, [], file.data);\n        if (data.length == 0) {\n            data = $.extend(true, [], sheetmanage.buildGridData(file));\n        }\n        if (getObjType(range) == 'string') {\n            if (!formula.iscelldata(range)) {\n                return tooltip.info('Incorrect selection format', '');\n            }\n            let cellrange = formula.getcellrange(range);\n            range = [{\n                    'row': cellrange.row,\n                    'column': cellrange.column\n                }];\n        } else if (getObjType(range) == 'object') {\n            if (!range.hasOwnProperty('row') || !range.hasOwnProperty('column')) {\n                return tooltip.info('Incorrect selection format', '');\n            }\n            range = [{\n                    'row': range.row,\n                    'column': range.column\n                }];\n        }    //不能合并重叠区域\n        //不能合并重叠区域\n        if (selectIsOverlap(range)) {\n            return tooltip.info('Cannot merge overlapping range', '');\n        }    //选区是否含有 部分合并单元格\n        //选区是否含有 部分合并单元格\n        if (cfg['merge'] != null) {\n            let has_PartMC = false;\n            for (let s = 0; s < range.length; s++) {\n                let r1 = range[s].row[0], r2 = range[s].row[1];\n                let c1 = range[s].column[0], c2 = range[s].column[1];\n                has_PartMC = hasPartMC(cfg, r1, r2, c1, c2);\n                if (has_PartMC) {\n                    break;\n                }\n            }\n            if (has_PartMC) {\n                return tooltip.info('Cannot perform this operation on partially merged cells', '');\n            }\n        }    //选区是否含有 合并的单元格\n        //选区是否含有 合并的单元格\n        let isHasMc = false;\n        for (let i = 0; i < range.length; i++) {\n            let r1 = range[i].row[0], r2 = range[i].row[1];\n            let c1 = range[i].column[0], c2 = range[i].column[1];\n            for (let r = r1; r <= r2; r++) {\n                for (let c = c1; c <= c2; c++) {\n                    let cell = data[r][c];\n                    if (getObjType(cell) == 'object' && 'mc' in cell) {\n                        isHasMc = true;\n                        break;\n                    }\n                }\n                if (isHasMc) {\n                    break;\n                }\n            }\n        }\n        if (isHasMc) {\n            //选区有合并单元格（选区都执行 取消合并）\n            cancelRangeMerge({\n                range: range,\n                order: order\n            });\n        } else {\n            for (let i = 0; i < range.length; i++) {\n                let r1 = range[i].row[0], r2 = range[i].row[1];\n                let c1 = range[i].column[0], c2 = range[i].column[1];\n                if (r1 == r2 && c1 == c2) {\n                    continue;\n                }\n                if (type == 'all') {\n                    let fv = {}, isfirst = false;\n                    for (let r = r1; r <= r2; r++) {\n                        for (let c = c1; c <= c2; c++) {\n                            let cell = data[r][c];\n                            if (cell != null && (!isRealNull(cell.v) || cell.f != null) && !isfirst) {\n                                fv = $.extend(true, {}, cell);\n                                isfirst = true;\n                            }\n                            data[r][c] = {\n                                'mc': {\n                                    'r': r1,\n                                    'c': c1\n                                }\n                            };\n                        }\n                    }\n                    data[r1][c1] = fv;\n                    data[r1][c1].mc = {\n                        'r': r1,\n                        'c': c1,\n                        'rs': r2 - r1 + 1,\n                        'cs': c2 - c1 + 1\n                    };\n                    cfg['merge'][r1 + '_' + c1] = {\n                        'r': r1,\n                        'c': c1,\n                        'rs': r2 - r1 + 1,\n                        'cs': c2 - c1 + 1\n                    };\n                } else if (type == 'vertical') {\n                    for (let c = c1; c <= c2; c++) {\n                        let fv = {}, isfirst = false;\n                        for (let r = r1; r <= r2; r++) {\n                            let cell = data[r][c];\n                            if (cell != null && (!isRealNull(cell.v) || cell.f != null) && !isfirst) {\n                                fv = $.extend(true, {}, cell);\n                                isfirst = true;\n                            }\n                            data[r][c] = {\n                                'mc': {\n                                    'r': r1,\n                                    'c': c\n                                }\n                            };\n                        }\n                        data[r1][c] = fv;\n                        data[r1][c].mc = {\n                            'r': r1,\n                            'c': c,\n                            'rs': r2 - r1 + 1,\n                            'cs': 1\n                        };\n                        cfg['merge'][r1 + '_' + c] = {\n                            'r': r1,\n                            'c': c,\n                            'rs': r2 - r1 + 1,\n                            'cs': 1\n                        };\n                    }\n                } else if (type == 'horizontal') {\n                    for (let r = r1; r <= r2; r++) {\n                        let fv = {}, isfirst = false;\n                        for (let c = c1; c <= c2; c++) {\n                            let cell = data[r][c];\n                            if (cell != null && (!isRealNull(cell.v) || cell.f != null) && !isfirst) {\n                                fv = $.extend(true, {}, cell);\n                                isfirst = true;\n                            }\n                            data[r][c] = {\n                                'mc': {\n                                    'r': r,\n                                    'c': c1\n                                }\n                            };\n                        }\n                        data[r][c1] = fv;\n                        data[r][c1].mc = {\n                            'r': r,\n                            'c': c1,\n                            'rs': 1,\n                            'cs': c2 - c1 + 1\n                        };\n                        cfg['merge'][r + '_' + c1] = {\n                            'r': r,\n                            'c': c1,\n                            'rs': 1,\n                            'cs': c2 - c1 + 1\n                        };\n                    }\n                }\n            }\n            if (order == curSheetOrder) {\n                if (Store.clearjfundo) {\n                    Store.jfundo.length = 0;\n                    Store.jfredo.push({\n                        'type': 'mergeChange',\n                        'sheetIndex': file.index,\n                        'data': $.extend(true, [], file.data),\n                        'curData': data,\n                        'range': range,\n                        'config': $.extend(true, {}, file.config),\n                        'curConfig': cfg\n                    });\n                }\n                Store.clearjfundo = false;\n                jfrefreshgrid(data, range, { 'cfg': cfg });\n                Store.clearjfundo = true;\n            } else {\n                file.data = data;\n                file.config = cfg;\n            }\n        }\n        if (success && typeof success === 'function') {\n            success();\n        }\n    }\n    function cancelRangeMerge(options = {}) {\n        let curRange = Store.luckysheet_select_save, curSheetOrder = getSheetIndex(Store.currentSheetIndex);\n        let {range = curRange, order = curSheetOrder, success} = { ...options };\n        let file = Store.luckysheetfile[order], cfg = $.extend(true, {}, file.config), data = $.extend(true, [], file.data);\n        if (data.length == 0) {\n            data = $.extend(true, [], sheetmanage.buildGridData(file));\n        }\n        if (getObjType(range) == 'string') {\n            if (!formula.iscelldata(range)) {\n                return tooltip.info('Incorrect selection format', '');\n            }\n            let cellrange = formula.getcellrange(range);\n            range = [{\n                    'row': cellrange.row,\n                    'column': cellrange.column\n                }];\n        } else if (getObjType(range) == 'object') {\n            if (!range.hasOwnProperty('row') || !range.hasOwnProperty('column')) {\n                return tooltip.info('Incorrect selection format', '');\n            }\n            range = [{\n                    'row': range.row,\n                    'column': range.column\n                }];\n        }    //不能合并重叠区域\n        //不能合并重叠区域\n        if (selectIsOverlap(range)) {\n            return tooltip.info('Cannot merge overlapping range', '');\n        }    //选区是否含有 部分合并单元格\n        //选区是否含有 部分合并单元格\n        if (cfg['merge'] != null) {\n            let has_PartMC = false;\n            for (let s = 0; s < range.length; s++) {\n                let r1 = range[s].row[0], r2 = range[s].row[1];\n                let c1 = range[s].column[0], c2 = range[s].column[1];\n                has_PartMC = hasPartMC(cfg, r1, r2, c1, c2);\n                if (has_PartMC) {\n                    break;\n                }\n            }\n            if (has_PartMC) {\n                return tooltip.info('Cannot perform this operation on partially merged cells', '');\n            }\n        }\n        for (let i = 0; i < range.length; i++) {\n            let r1 = range[i].row[0], r2 = range[i].row[1];\n            let c1 = range[i].column[0], c2 = range[i].column[1];\n            if (r1 == r2 && c1 == c2) {\n                continue;\n            }\n            let fv = {};\n            for (let r = r1; r <= r2; r++) {\n                for (let c = c1; c <= c2; c++) {\n                    let cell = data[r][c];\n                    if (cell != null && cell.mc != null) {\n                        let mc_r = cell.mc.r, mc_c = cell.mc.c;\n                        if ('rs' in cell.mc) {\n                            delete cell.mc;\n                            delete cfg['merge'][mc_r + '_' + mc_c];\n                            fv[mc_r + '_' + mc_c] = $.extend(true, {}, cell);\n                        } else {\n                            // let cell_clone = fv[mc_r + \"_\" + mc_c];\n                            let cell_clone = JSON.parse(JSON.stringify(fv[mc_r + '_' + mc_c]));\n                            delete cell_clone.v;\n                            delete cell_clone.m;\n                            delete cell_clone.ct;\n                            delete cell_clone.f;\n                            delete cell_clone.spl;\n                            data[r][c] = cell_clone;\n                        }\n                    }\n                }\n            }\n        }\n        if (order == curSheetOrder) {\n            if (Store.clearjfundo) {\n                Store.jfundo.length = 0;\n                Store.jfredo.push({\n                    'type': 'mergeChange',\n                    'sheetIndex': file.index,\n                    'data': $.extend(true, [], file.data),\n                    'curData': data,\n                    'range': range,\n                    'config': $.extend(true, {}, file.config),\n                    'curConfig': cfg\n                });\n            }\n            Store.clearjfundo = false;\n            jfrefreshgrid(data, range, { 'cfg': cfg });\n            Store.clearjfundo = true;\n        } else {\n            file.data = data;\n            file.config = cfg;\n        }\n    }\n    function setRangeSort(type, options = {}) {\n        let typeValues = [\n            'asc',\n            'desc'\n        ];\n        if (typeValues.indexOf(type) < 0) {\n            return tooltip.info(\"The type parameter must be included in ['asc', 'desc'\", '');\n        }\n        let curSheetOrder = getSheetIndex(Store.currentSheetIndex), curRange = Store.luckysheet_select_save[0];\n        let {range = curRange, order = curSheetOrder, success} = { ...options };\n        let file = Store.luckysheetfile[order], cfg = $.extend(true, {}, file.config), fileData = $.extend(true, [], file.data);\n        if (fileData.length == 0) {\n            fileData = $.extend(true, [], sheetmanage.buildGridData(file));\n        }\n        if (range instanceof Array && range.length > 1) {\n            tooltip.info(locale().sort.noRangeError, '');\n            return;\n        }\n        if (range && typeof range === 'string' && formula.iscelldata(range)) {\n            range = formula.getcellrange(range);\n        }\n        let r1 = range.row[0], r2 = range.row[1], c1 = range.column[0], c2 = range.column[1];\n        let hasMc = false;    //Whether the sort selection has merged cells\n        //Whether the sort selection has merged cells\n        let data = [];\n        for (let r = r1; r <= r2; r++) {\n            let data_row = [];\n            for (let c = c1; c <= c2; c++) {\n                if (fileData[r][c] != null && fileData[r][c].mc != null) {\n                    hasMc = true;\n                    break;\n                }\n                data_row.push(fileData[r][c]);\n            }\n            data.push(data_row);\n        }\n        if (hasMc) {\n            tooltip.info(locale().sort.mergeError, '');\n            return;\n        }\n        data = orderbydata([].concat(data), 0, type === 'asc');\n        for (let r = r1; r <= r2; r++) {\n            for (let c = c1; c <= c2; c++) {\n                fileData[r][c] = data[r - r1][c - c1];\n            }\n        }\n        let allParam = {};\n        if (cfg['rowlen'] != null) {\n            cfg = rowlenByRange(fileData, r1, r2, cfg);\n            allParam = {\n                'cfg': cfg,\n                'RowlChange': true\n            };\n        }\n        if (file.index == Store.currentSheetIndex) {\n            jfrefreshgrid(fileData, [{\n                    'row': [\n                        r1,\n                        r2\n                    ],\n                    'column': [\n                        c1,\n                        c2\n                    ]\n                }], allParam);\n        } else {\n            file.data = fileData;\n            file.config = cfg;\n        }\n        if (success && typeof success === 'function') {\n            success();\n        }\n    }\n    function setRangeSortMulti(hasTitle, sort, options = {}) {\n        if (!sort || !(sort instanceof Array)) {\n            return tooltip.info('The sort parameter is invalid.', '');\n        }\n        let curSheetOrder = getSheetIndex(Store.currentSheetIndex), curRange = Store.luckysheet_select_save[0];\n        let {range = curRange, order = curSheetOrder, success} = { ...options };\n        let file = Store.luckysheetfile[order], cfg = $.extend(true, {}, file.config), fileData = $.extend(true, [], file.data);\n        if (fileData.length == 0) {\n            fileData = $.extend(true, [], sheetmanage.buildGridData(file));\n        }\n        if (range instanceof Array && range.length > 1) {\n            tooltip.info(locale().sort.noRangeError, '');\n            return;\n        }\n        if (range && typeof range === 'string' && formula.iscelldata(range)) {\n            range = formula.getcellrange(range);\n        }\n        let r1 = range.row[0], r2 = range.row[1], c1 = range.column[0], c2 = range.column[1];\n        let str;\n        if (hasTitle) {\n            str = r1 + 1;\n        } else {\n            str = r1;\n        }\n        let hasMc = false;    //Whether the sort selection has merged cells\n        //Whether the sort selection has merged cells\n        let data = [];\n        for (let r = str; r <= r2; r++) {\n            let data_row = [];\n            for (let c = c1; c <= c2; c++) {\n                if (fileData[r][c] != null && fileData[r][c].mc != null) {\n                    hasMc = true;\n                    break;\n                }\n                data_row.push(fileData[r][c]);\n            }\n            data.push(data_row);\n        }\n        if (hasMc) {\n            tooltip.info(locale().sort.mergeError, '');\n            return;\n        }\n        sort.forEach(sortItem => {\n            let i = sortItem.i;\n            i -= c1;\n            data = orderbydata([].concat(data), i, sortItem.sort === 'asc');\n        });\n        for (let r = str; r <= r2; r++) {\n            for (let c = c1; c <= c2; c++) {\n                fileData[r][c] = data[r - str][c - c1];\n            }\n        }\n        let allParam = {};\n        if (cfg['rowlen'] != null) {\n            cfg = rowlenByRange(fileData, str, r2, cfg);\n            allParam = {\n                'cfg': cfg,\n                'RowlChange': true\n            };\n        }\n        if (file.index === Store.currentSheetIndex) {\n            jfrefreshgrid(fileData, [{\n                    'row': [\n                        str,\n                        r2\n                    ],\n                    'column': [\n                        c1,\n                        c2\n                    ]\n                }], allParam);\n        } else {\n            file.data = fileData;\n            file.config = cfg;\n        }\n        if (success && typeof success === 'function') {\n            success();\n        }\n    }\n    function setRangeConditionalFormatDefault(conditionName, conditionValue, options = {}) {\n        let conditionNameValues = [\n            'greaterThan',\n            'lessThan',\n            'betweenness',\n            'equal',\n            'textContains',\n            'occurrenceDate',\n            'duplicateValue',\n            'top10',\n            'top10%',\n            'last10',\n            'last10%',\n            'AboveAverage',\n            'SubAverage'\n        ];\n        if (!conditionName || !conditionNameValues.includes(conditionName)) {\n            return tooltip.info('The conditionName parameter is invalid.', '');\n        }\n        if (getObjType(conditionValue) != 'array' || conditionValue.length == 0) {\n            return tooltip.info('The conditionValue parameter is invalid.', '');\n        }\n        let {format = {\n                'textColor': '#000000',\n                'cellColor': '#ff0000'\n            }, cellrange = Store.luckysheet_select_save, order = getSheetIndex(Store.currentSheetIndex), success} = { ...options };\n        let file = Store.luckysheetfile[order];\n        let data = file.data;\n        if (data == null || data.length == 0) {\n            data = sheetmanage.buildGridData(file);\n        }\n        if (file == null) {\n            return tooltip.info('Incorrect worksheet index', '');\n        }\n        const conditionformat_Text = locale().conditionformat;\n        let conditionRange = [], conditionValue2 = [];\n        if (conditionName == 'betweenness') {\n            let v1 = conditionValue[0];\n            let v2 = conditionValue[1];    //条件值是否是选区\n            //条件值是否是选区\n            let rangeArr1 = conditionformat.getRangeByTxt(v1);\n            if (rangeArr1.length > 1) {\n                conditionformat.infoDialog(conditionformat_Text.onlySingleCell, '');\n                return;\n            } else if (rangeArr1.length == 1) {\n                let r1 = rangeArr1[0].row[0], r2 = rangeArr1[0].row[1];\n                let c1 = rangeArr1[0].column[0], c2 = rangeArr1[0].column[1];\n                if (r1 == r2 && c1 == c2) {\n                    v1 = getcellvalue(r1, c1, data);\n                    conditionRange.push({\n                        'row': rangeArr1[0].row,\n                        'column': rangeArr1[0].column\n                    });\n                    conditionValue2.push(v1);\n                } else {\n                    conditionformat.infoDialog(conditionformat_Text.onlySingleCell, '');\n                    return;\n                }\n            } else if (rangeArr1.length == 0) {\n                if (isNaN(v1) || v1 == '') {\n                    conditionformat.infoDialog(conditionformat_Text.conditionValueCanOnly, '');\n                    return;\n                } else {\n                    conditionValue2.push(v1);\n                }\n            }\n            let rangeArr2 = conditionformat.getRangeByTxt(v2);\n            if (rangeArr2.length > 1) {\n                conditionformat.infoDialog(conditionformat_Text.onlySingleCell, '');\n                return;\n            } else if (rangeArr2.length == 1) {\n                let r1 = rangeArr2[0].row[0], r2 = rangeArr2[0].row[1];\n                let c1 = rangeArr2[0].column[0], c2 = rangeArr2[0].column[1];\n                if (r1 == r2 && c1 == c2) {\n                    v2 = getcellvalue(r1, c1, data);\n                    conditionRange.push({\n                        'row': rangeArr2[0].row,\n                        'column': rangeArr2[0].column\n                    });\n                    conditionValue2.push(v2);\n                } else {\n                    conditionformat.infoDialog(conditionformat_Text.onlySingleCell, '');\n                    return;\n                }\n            } else if (rangeArr2.length == 0) {\n                if (isNaN(v2) || v2 == '') {\n                    conditionformat.infoDialog(conditionformat_Text.conditionValueCanOnly, '');\n                    return;\n                } else {\n                    conditionValue2.push(v2);\n                }\n            }\n        } else if (conditionName == 'greaterThan' || conditionName == 'lessThan' || conditionName == 'equal') {\n            let v = conditionValue[0];    //条件值是否是选区\n            //条件值是否是选区\n            let rangeArr = conditionformat.getRangeByTxt(v);\n            if (rangeArr.length > 1) {\n                conditionformat.infoDialog(conditionformat_Text.onlySingleCell, '');\n                return;\n            } else if (rangeArr.length == 1) {\n                let r1 = rangeArr[0].row[0], r2 = rangeArr[0].row[1];\n                let c1 = rangeArr[0].column[0], c2 = rangeArr[0].column[1];\n                if (r1 == r2 && c1 == c2) {\n                    v = getcellvalue(r1, c1, data);\n                    conditionRange.push({\n                        'row': rangeArr[0].row,\n                        'column': rangeArr[0].column\n                    });\n                    conditionValue2.push(v);\n                } else {\n                    conditionformat.infoDialog(conditionformat_Text.onlySingleCell, '');\n                    return;\n                }\n            } else if (rangeArr.length == 0) {\n                if (isNaN(v) || v == '') {\n                    conditionformat.infoDialog(conditionformat_Text.conditionValueCanOnly, '');\n                    return;\n                } else {\n                    conditionValue2.push(v);\n                }\n            }\n        } else if (conditionName == 'textContains') {\n            let v = conditionValue[0];    //条件值是否是选区\n            //条件值是否是选区\n            let rangeArr = conditionformat.getRangeByTxt(v);\n            if (rangeArr.length > 1) {\n                conditionformat.infoDialog(conditionformat_Text.onlySingleCell, '');\n                return;\n            } else if (rangeArr.length == 1) {\n                let r1 = rangeArr[0].row[0], r2 = rangeArr[0].row[1];\n                let c1 = rangeArr[0].column[0], c2 = rangeArr[0].column[1];\n                if (r1 == r2 && c1 == c2) {\n                    v = getcellvalue(r1, c1, data);\n                    conditionRange.push({\n                        'row': rangeArr[0].row,\n                        'column': rangeArr[0].column\n                    });\n                    conditionValue2.push(v);\n                } else {\n                    conditionformat.infoDialog(conditionformat_Text.onlySingleCell, '');\n                    return;\n                }\n            } else if (rangeArr.length == 0) {\n                if (v == '') {\n                    conditionformat.infoDialog(conditionformat_Text.conditionValueCanOnly, '');\n                    return;\n                } else {\n                    conditionValue2.push(v);\n                }\n            }\n        } else if (conditionName == 'occurrenceDate') {\n            let v1 = conditionValue[0];\n            let v2 = conditionValue[1];\n            if (!isdatetime(v1) || !isdatetime(v2)) {\n                return tooltip.info('The conditionValue parameter is invalid.', '');\n            }\n            let v;\n            if (diff(v1, v2) > 0) {\n                v = dayjs(v2).format('YYYY/MM/DD') + '-' + dayjs(v1).format('YYYY/MM/DD');\n            } else {\n                v = dayjs(v1).format('YYYY/MM/DD') + '-' + dayjs(v2).format('YYYY/MM/DD');\n            }\n            conditionValue2.push(v);\n        } else if (conditionName == 'duplicateValue') {\n            let v = conditionValue[0];\n            if (v != '0' || v != '1') {\n                return tooltip.info('The conditionValue parameter is invalid.', '');\n            }\n            conditionValue2.push(v);\n        } else if (conditionName == 'top10' || conditionName == 'top10%' || conditionName == 'last10' || conditionName == 'last10%') {\n            let v = conditionValue[0];\n            if (parseInt(v) != v || parseInt(v) < 1 || parseInt(v) > 1000) {\n                conditionformat.infoDialog(conditionformat_Text.pleaseEnterInteger, '');\n                return;\n            }\n            conditionValue2.push(parseInt(v));\n        } else if (conditionName == 'AboveAverage' || conditionName == 'SubAverage') {\n            conditionValue2.push(conditionName);\n        }\n        if (!format.hasOwnProperty('textColor') || !format.hasOwnProperty('cellColor')) {\n            return tooltip.info('The format parameter is invalid.', '');\n        }\n        if (getObjType(cellrange) == 'string') {\n            cellrange = conditionformat.getRangeByTxt(cellrange);\n        } else if (getObjType(cellrange) == 'object') {\n            cellrange = [cellrange];\n        }\n        if (getObjType(cellrange) != 'array') {\n            return tooltip.info('The cellrange parameter is invalid.', '');\n        }\n        let rule = {\n            'type': 'default',\n            'cellrange': cellrange,\n            'format': format,\n            'conditionName': conditionName,\n            'conditionRange': conditionRange,\n            'conditionValue': conditionValue2\n        };    //保存之前的规则\n        //保存之前的规则\n        let fileH = $.extend(true, [], Store.luckysheetfile);\n        let historyRules = conditionformat.getHistoryRules(fileH);    //保存当前的规则\n        //保存当前的规则\n        let ruleArr = file['luckysheet_conditionformat_save'] || [];\n        ruleArr.push(rule);\n        file['luckysheet_conditionformat_save'] = ruleArr;\n        let fileC = $.extend(true, [], Store.luckysheetfile);\n        let currentRules = conditionformat.getCurrentRules(fileC);    //刷新一次表格\n        //刷新一次表格\n        conditionformat.ref(historyRules, currentRules);    //发送给后台\n        //发送给后台\n        if (server.allowUpdate) {\n            server.saveParam('all', file.index, ruleArr, { 'k': 'luckysheet_conditionformat_save' });\n        }\n        if (success && typeof success === 'function') {\n            success();\n        }\n    }\n    function setRangeConditionalFormat(type, options = {}) {\n        let typeValues = [\n            'dataBar',\n            'colorGradation',\n            'icons'\n        ];\n        if (!type || !typeValues.includes(type)) {\n            return tooltip.info('The type parameter is invalid.', '');\n        }\n        let {format, cellrange = Store.luckysheet_select_save, order = getSheetIndex(Store.currentSheetIndex), success} = { ...options };\n        let file = Store.luckysheetfile[order];\n        if (file == null) {\n            return tooltip.info('Incorrect worksheet index', '');\n        }\n        if (type == 'dataBar') {\n            if (format == null) {\n                format = [\n                    '#638ec6',\n                    '#ffffff'\n                ];\n            }\n            if (getObjType(format) != 'array' || format.length < 1 || format.length > 2) {\n                return tooltip.info('The format parameter is invalid.', '');\n            }\n        } else if (type == 'colorGradation') {\n            if (format == null) {\n                format = [\n                    'rgb(99, 190, 123)',\n                    'rgb(255, 235, 132)',\n                    'rgb(248, 105, 107)'\n                ];\n            }\n            if (getObjType(format) != 'array' || format.length < 2 || format.length > 3) {\n                return tooltip.info('The format parameter is invalid.', '');\n            }\n        } else if (type == 'icons') {\n            if (format == null) {\n                format = 'threeWayArrowMultiColor';\n            }\n            let formatValues = [\n                'threeWayArrowMultiColor',\n                'threeTriangles',\n                'fourWayArrowMultiColor',\n                'fiveWayArrowMultiColor',\n                'threeWayArrowGrayColor',\n                'fourWayArrowGrayColor',\n                'fiveWayArrowGrayColor',\n                'threeColorTrafficLightRimless',\n                'threeSigns',\n                'greenRedBlackGradient',\n                'threeColorTrafficLightBordered',\n                'fourColorTrafficLight',\n                'threeSymbolsCircled',\n                'tricolorFlag',\n                'threeSymbolsnoCircle',\n                'threeStars',\n                'fiveQuadrantDiagram',\n                'fiveBoxes',\n                'grade4',\n                'grade5'\n            ];\n            if (getObjType(format) != 'string' || !formatValues.includes(format)) {\n                return tooltip.info('The format parameter is invalid.', '');\n            }\n            switch (format) {\n            case 'threeWayArrowMultiColor':\n                format = {\n                    'len': 3,\n                    'leftMin': 0,\n                    'top': 0\n                };\n                break;\n            case 'threeTriangles':\n                format = {\n                    'len': 3,\n                    'leftMin': 0,\n                    'top': 1\n                };\n                break;\n            case 'fourWayArrowMultiColor':\n                format = {\n                    'len': 4,\n                    'leftMin': 0,\n                    'top': 2\n                };\n                break;\n            case 'fiveWayArrowMultiColor':\n                format = {\n                    'len': 5,\n                    'leftMin': 0,\n                    'top': 3\n                };\n                break;\n            case 'threeWayArrowGrayColor':\n                format = {\n                    'len': 3,\n                    'leftMin': 5,\n                    'top': 0\n                };\n                break;\n            case 'fourWayArrowGrayColor':\n                format = {\n                    'len': 4,\n                    'leftMin': 5,\n                    'top': 1\n                };\n                break;\n            case 'fiveWayArrowGrayColor':\n                format = {\n                    'len': 5,\n                    'leftMin': 5,\n                    'top': 2\n                };\n                break;\n            case 'threeColorTrafficLightRimless':\n                format = {\n                    'len': 3,\n                    'leftMin': 0,\n                    'top': 4\n                };\n                break;\n            case 'threeSigns':\n                format = {\n                    'len': 3,\n                    'leftMin': 0,\n                    'top': 5\n                };\n                break;\n            case 'greenRedBlackGradient':\n                format = {\n                    'len': 4,\n                    'leftMin': 0,\n                    'top': 6\n                };\n                break;\n            case 'threeColorTrafficLightBordered':\n                format = {\n                    'len': 3,\n                    'leftMin': 5,\n                    'top': 4\n                };\n                break;\n            case 'fourColorTrafficLight':\n                format = {\n                    'len': 4,\n                    'leftMin': 5,\n                    'top': 5\n                };\n                break;\n            case 'threeSymbolsCircled':\n                format = {\n                    'len': 3,\n                    'leftMin': 0,\n                    'top': 7\n                };\n                break;\n            case 'tricolorFlag':\n                format = {\n                    'len': 3,\n                    'leftMin': 0,\n                    'top': 8\n                };\n                break;\n            case 'threeSymbolsnoCircle':\n                format = {\n                    'len': 3,\n                    'leftMin': 5,\n                    'top': 7\n                };\n                break;\n            case 'threeStars':\n                format = {\n                    'len': 3,\n                    'leftMin': 0,\n                    'top': 9\n                };\n                break;\n            case 'fiveQuadrantDiagram':\n                format = {\n                    'len': 5,\n                    'leftMin': 0,\n                    'top': 10\n                };\n                break;\n            case 'fiveBoxes':\n                format = {\n                    'len': 5,\n                    'leftMin': 0,\n                    'top': 11\n                };\n                break;\n            case 'grade4':\n                format = {\n                    'len': 4,\n                    'leftMin': 5,\n                    'top': 9\n                };\n                break;\n            case 'grade5':\n                format = {\n                    'len': 5,\n                    'leftMin': 5,\n                    'top': 10\n                };\n                break;\n            }\n        }\n        if (getObjType(cellrange) == 'string') {\n            cellrange = conditionformat.getRangeByTxt(cellrange);\n        } else if (getObjType(cellrange) == 'object') {\n            cellrange = [cellrange];\n        }\n        if (getObjType(cellrange) != 'array') {\n            return tooltip.info('The cellrange parameter is invalid.', '');\n        }\n        let rule = {\n            'type': type,\n            'cellrange': cellrange,\n            'format': format\n        };    //保存之前的规则\n        //保存之前的规则\n        let fileH = $.extend(true, [], Store.luckysheetfile);\n        let historyRules = conditionformat.getHistoryRules(fileH);    //保存当前的规则\n        //保存当前的规则\n        let ruleArr = file['luckysheet_conditionformat_save'] || [];\n        ruleArr.push(rule);\n        file['luckysheet_conditionformat_save'] = ruleArr;\n        let fileC = $.extend(true, [], Store.luckysheetfile);\n        let currentRules = conditionformat.getCurrentRules(fileC);    //刷新一次表格\n        //刷新一次表格\n        conditionformat.ref(historyRules, currentRules);    //发送给后台\n        //发送给后台\n        if (server.allowUpdate) {\n            server.saveParam('all', file.index, ruleArr, { 'k': 'luckysheet_conditionformat_save' });\n        }\n        if (success && typeof success === 'function') {\n            success();\n        }\n    }\n    function deleteRangeConditionalFormat(itemIndex, options = {}) {\n        if (!isRealNum(itemIndex)) {\n            return tooltip.info('The itemIndex parameter is invalid.', '');\n        }\n        itemIndex = Number(itemIndex);\n        let {order = getSheetIndex(Store.currentSheetIndex), success} = { ...options };\n        let file = Store.luckysheetfile[order];\n        if (file == null) {\n            return tooltip.info('The order parameter is invalid.', '');\n        }\n        let cdformat = $.extend(true, [], file.luckysheet_conditionformat_save);\n        if (cdformat.length == 0) {\n            return tooltip.info('This worksheet has no conditional format to delete', '');\n        } else if (cdformat[itemIndex] == null) {\n            return tooltip.info('The conditional format of the index cannot be found', '');\n        }\n        let cdformatItem = cdformat.splice(itemIndex, 1);    //保存之前的规则\n        //保存之前的规则\n        let fileH = $.extend(true, [], Store.luckysheetfile);\n        let historyRules = conditionformat.getHistoryRules(fileH);    //保存当前的规则\n        //保存当前的规则\n        file['luckysheet_conditionformat_save'] = cdformat;\n        let fileC = $.extend(true, [], Store.luckysheetfile);\n        let currentRules = conditionformat.getCurrentRules(fileC);    //刷新一次表格\n        //刷新一次表格\n        conditionformat.ref(historyRules, currentRules);    //发送给后台\n        //发送给后台\n        if (server.allowUpdate) {\n            server.saveParam('all', file.index, ruleArr, { 'k': 'luckysheet_conditionformat_save' });\n        }\n        setTimeout(() => {\n            if (success && typeof success === 'function') {\n                success();\n            }\n        }, 1);\n        return cdformatItem;\n    }\n    function clearRange(options = {}) {\n        let {range = Store.luckysheet_select_save, order = getSheetIndex(Store.currentSheetIndex), success} = { ...options };\n        if (getObjType(range) == 'string') {\n            if (!formula.iscelldata(range)) {\n                return tooltip.info('The range parameter is invalid.', '');\n            }\n            let cellrange = formula.getcellrange(range);\n            range = [{\n                    'row': cellrange.row,\n                    'column': cellrange.column\n                }];\n        } else if (getObjType(range) == 'object') {\n            if (range.row == null || range.column == null) {\n                return tooltip.info('The range parameter is invalid.', '');\n            }\n            range = [{\n                    'row': range.row,\n                    'column': range.column\n                }];\n        }\n        if (getObjType(range) != 'array') {\n            return tooltip.info('The range parameter is invalid.', '');\n        }\n        let file = Store.luckysheetfile[order];\n        if (file == null) {\n            return tooltip.info('The order parameter is invalid.', '');\n        }\n        let cfg = $.extend(true, {}, file.config);\n        let has_PartMC = false;\n        for (let s = 0; s < range.length; s++) {\n            let r1 = range[s].row[0], r2 = range[s].row[1];\n            let c1 = range[s].column[0], c2 = range[s].column[1];\n            has_PartMC = hasPartMC(cfg, r1, r2, c1, c2);\n            if (has_PartMC) {\n                break;\n            }\n        }\n        if (has_PartMC) {\n            return tooltip.info('Cannot perform this operation on partially merged cells', '');\n        }\n        let d = $.extend(true, [], file.data);\n        if (d.length == 0) {\n            d = $.extend(true, [], sheetmanage.buildGridData(file));\n        }\n        for (let s = 0; s < range.length; s++) {\n            let r1 = range[s].row[0], r2 = range[s].row[1];\n            let c1 = range[s].column[0], c2 = range[s].column[1];\n            for (let r = r1; r <= r2; r++) {\n                for (let c = c1; c <= c2; c++) {\n                    let cell = d[r][c];\n                    if (getObjType(cell) == 'object') {\n                        delete cell['m'];\n                        delete cell['v'];\n                        if (cell['f'] != null) {\n                            delete cell['f'];\n                            formula.delFunctionGroup(r, c, file.index);\n                            delete cell['spl'];\n                        }\n                        if (cell['ct'] != null && cell['ct'].t == 'inlineStr') {\n                            delete cell['ct'];\n                        }\n                    } else {\n                        d[r][c] = null;\n                    }\n                }\n            }\n        }\n        if (file.index == Store.currentSheetIndex) {\n            jfrefreshgrid(d, range);\n        } else {\n            file.data = d;\n        }\n        if (success && typeof success === 'function') {\n            success();\n        }\n    }\n    function deleteRange(move, options = {}) {\n        let moveList = [\n            'left',\n            'up'\n        ];\n        if (!moveList.includes(move)) {\n            return tooltip.info('The move parameter is invalid.', '');\n        }\n        let {range = Store.luckysheet_select_save[Store.luckysheet_select_save.length - 1], order = getSheetIndex(Store.currentSheetIndex), success} = { ...options };\n        if (getObjType(range) == 'string') {\n            if (!formula.iscelldata(range)) {\n                return tooltip.info('The range parameter is invalid.', '');\n            }\n            let cellrange = formula.getcellrange(range);\n            range = {\n                'row': cellrange.row,\n                'column': cellrange.column\n            };\n        }\n        if (getObjType(range) != 'object' || range.row == null || range.column == null) {\n            return tooltip.info('The range parameter is invalid.', '');\n        }\n        let file = Store.luckysheetfile[order];\n        if (file == null) {\n            return tooltip.info('The order parameter is invalid.', '');\n        }\n        let str = range.row[0], edr = range.row[1], stc = range.column[0], edc = range.column[1];\n        if (move == 'left') {\n            luckysheetDeleteCell('moveLeft', str, edr, stc, edc, order);\n        } else if (move == 'up') {\n            luckysheetDeleteCell('moveUp', str, edr, stc, edc, order);\n        }\n        if (success && typeof success === 'function') {\n            success();\n        }\n    }\n    function matrixOperation(type, options = {}) {\n        let typeValues = [\n            'flipUpDown',\n            // 上下翻转\n            'flipLeftRight',\n            // 左右翻转\n            'flipClockwise',\n            // 顺时针旋转\n            'flipCounterClockwise',\n            // 逆时针旋转\n            'transpose',\n            // 转置\n            'deleteZeroByRow',\n            // 按行删除两端0值\n            'deleteZeroByColumn',\n            // 按列删除两端0值\n            'removeDuplicateByRow',\n            // 按行删除重复值\n            'removeDuplicateByColumn',\n            // 按列删除重复值\n            'newMatrix'    // 生产新矩阵\n        ];\n        // 生产新矩阵\n        if (!type || typeValues.indexOf(type) < 0) {\n            return tooltip.info('The type parameter is invalid.', '');\n        }\n        let curRange = Store.luckysheet_select_save[0];\n        let {range = curRange, success} = { ...options };\n        if (range instanceof Array && range.length > 1) {\n            tooltip.info(locale().drag.noMulti, '');\n            return;\n        }\n        if (range && typeof range === 'string' && formula.iscelldata(range)) {\n            range = formula.getcellrange(range);\n        }\n        let getdata = getdatabyselection(range);\n        let arr = [];\n        if (getdata.length === 0) {\n            return;\n        }\n        let getdatalen, collen, arr1;\n        switch (type) {\n        case 'flipUpDown':\n            for (let r = getdata.length - 1; r >= 0; r--) {\n                let a = [];\n                for (let c = 0; c < getdata[0].length; c++) {\n                    let value = '';\n                    if (getdata[r] != null && getdata[r][c] != null) {\n                        value = getdata[r][c];\n                    }\n                    a.push(value);\n                }\n                arr.push(a);\n            }\n            break;\n        case 'flipLeftRight':\n            for (let r = 0; r < getdata.length; r++) {\n                let a = [];\n                for (let c = getdata[0].length - 1; c >= 0; c--) {\n                    let value = '';\n                    if (getdata[r] != null && getdata[r][c] != null) {\n                        value = getdata[r][c];\n                    }\n                    a.push(value);\n                }\n                arr.push(a);\n            }\n            break;\n        case 'flipClockwise':\n            for (let c = 0; c < getdata[0].length; c++) {\n                let a = [];\n                for (let r = getdata.length - 1; r >= 0; r--) {\n                    let value = '';\n                    if (getdata[r] != null && getdata[r][c] != null) {\n                        value = getdata[r][c];\n                    }\n                    a.push(value);\n                }\n                arr.push(a);\n            }\n            break;\n        case 'flipCounterClockwise':\n            for (let c = getdata[0].length - 1; c >= 0; c--) {\n                let a = [];\n                for (let r = 0; r < getdata.length; r++) {\n                    let value = '';\n                    if (getdata[r] != null && getdata[r][c] != null) {\n                        value = getdata[r][c];\n                    }\n                    a.push(value);\n                }\n                arr.push(a);\n            }\n            break;\n        case 'transpose':\n            for (let c = 0; c < getdata[0].length; c++) {\n                let a = [];\n                for (let r = 0; r < getdata.length; r++) {\n                    let value = '';\n                    if (getdata[r] != null && getdata[r][c] != null) {\n                        value = getdata[r][c];\n                    }\n                    a.push(value);\n                }\n                arr.push(a);\n            }\n            break;\n        case 'deleteZeroByRow':\n            getdatalen = getdata[0].length;\n            for (let r = 0; r < getdata.length; r++) {\n                let a = [], stdel = true, eddel = true;\n                for (let c = 0; c < getdatalen; c++) {\n                    let value = '';\n                    if (getdata[r] != null && getdata[r][c] != null) {\n                        value = getdata[r][c];\n                        if ((value.v == '0' || value.v == 0) && stdel) {\n                            continue;\n                        } else {\n                            stdel = false;\n                        }\n                    }\n                    a.push(value);\n                }\n                let a1 = [];\n                if (a.length == getdatalen) {\n                    a1 = a;\n                } else {\n                    for (let c = a.length - 1; c >= 0; c--) {\n                        let value = '';\n                        if (a[c] != null) {\n                            value = a[c];\n                            if ((value.v == '0' || value.v == 0) && eddel) {\n                                continue;\n                            } else {\n                                eddel = false;\n                            }\n                        }\n                        a1.unshift(value);\n                    }\n                    let l = getdatalen - a1.length;\n                    for (let c1 = 0; c1 < l; c1++) {\n                        a1.push('');\n                    }\n                }\n                arr.push(a1);\n            }\n            break;\n        case 'deleteZeroByColumn':\n            getdatalen = getdata.length;\n            collen = getdata[0].length;\n            for (let c = 0; c < collen; c++) {\n                let a = [], stdel = true, eddel = true;\n                for (let r = 0; r < getdatalen; r++) {\n                    let value = '';\n                    if (getdata[r] != null && getdata[r][c] != null) {\n                        value = getdata[r][c];\n                        if ((value.v == '0' || value.v == 0) && stdel) {\n                            continue;\n                        } else {\n                            stdel = false;\n                        }\n                    }\n                    a.push(value);\n                }\n                let a1 = [];\n                if (a.length == getdatalen) {\n                    a1 = a;\n                } else {\n                    for (let r = a.length - 1; r >= 0; r--) {\n                        let value = '';\n                        if (a[r] != null) {\n                            value = a[r];\n                            if ((value.v == '0' || value.v == 0) && eddel) {\n                                continue;\n                            } else {\n                                eddel = false;\n                            }\n                        }\n                        a1.unshift(value);\n                    }\n                    let l = getdatalen - a1.length;\n                    for (let r1 = 0; r1 < l; r1++) {\n                        a1.push('');\n                    }\n                }\n                arr.push(a1);\n            }\n            arr1 = [];\n            for (let c = 0; c < arr[0].length; c++) {\n                let a = [];\n                for (let r = 0; r < arr.length; r++) {\n                    let value = '';\n                    if (arr[r] != null && arr[r][c] != null) {\n                        value = arr[r][c];\n                    }\n                    a.push(value);\n                }\n                arr1.push(a);\n            }\n            break;\n        case 'removeDuplicateByRow':\n            getdatalen = getdata[0].length;\n            for (let r = 0; r < getdata.length; r++) {\n                let a = [], repeat = {};\n                for (let c = 0; c < getdatalen; c++) {\n                    let value = null;\n                    if (getdata[r] != null && getdata[r][c] != null) {\n                        value = getdata[r][c];\n                        if (value.v in repeat) {\n                            repeat[value.v].push(value);\n                        } else {\n                            repeat[value.v] = [];\n                            repeat[value.v].push(value);\n                        }\n                    }\n                }\n                for (let c = 0; c < getdatalen; c++) {\n                    let value = null;\n                    if (getdata[r] != null && getdata[r][c] != null) {\n                        value = getdata[r][c];\n                        if (repeat[value.v].length == 1) {\n                            a.push(value);\n                        }\n                    }\n                }\n                let l = getdatalen - a.length;\n                for (let c1 = 0; c1 < l; c1++) {\n                    a.push(null);\n                }\n                arr.push(a);\n            }\n            break;\n        case 'removeDuplicateByColumn':\n            collen = getdata[0].length;\n            getdatalen = getdata.length;\n            for (let c = 0; c < collen; c++) {\n                let a = [], repeat = {};\n                for (let r = 0; r < getdatalen; r++) {\n                    let value = null;\n                    if (getdata[r] != null && getdata[r][c] != null) {\n                        value = getdata[r][c];\n                        if (value.v in repeat) {\n                            repeat[value.v].push(value);\n                        } else {\n                            repeat[value.v] = [];\n                            repeat[value.v].push(value);\n                        }\n                    }\n                }\n                for (let r = 0; r < getdatalen; r++) {\n                    let value = null;\n                    if (getdata[r] != null && getdata[r][c] != null) {\n                        value = getdata[r][c];\n                        if (repeat[value.v].length == 1) {\n                            a.push(value);\n                        }\n                    }\n                }\n                a1 = a;\n                let l = getdatalen - a1.length;\n                for (let r1 = 0; r1 < l; r1++) {\n                    a1.push(null);\n                }\n                arr.push(a1);\n            }\n            arr1 = [];\n            for (let c = 0; c < arr[0].length; c++) {\n                let a = [];\n                for (let r = 0; r < arr.length; r++) {\n                    let value = null;\n                    if (arr[r] != null && arr[r][c] != null) {\n                        value = arr[r][c];\n                    }\n                    a.push(value);\n                }\n                arr1.push(a);\n            }\n            break;\n        case 'newMatrix':\n            // TODO\n            console.log('TODO');\n            break;\n        }\n        editor.controlHandler(arr, range);\n        if (success && typeof success === 'function') {\n            success();\n        }\n    }\n    function matrixCalculation(type, number, options = {}) {\n        let typeValues = [\n            'plus',\n            // 加\n            'minus',\n            // 减\n            'multiply',\n            // 乘\n            'divided',\n            // 除\n            'power',\n            // 幂\n            'root',\n            // 次方根\n            'log'    // 对数log\n        ];\n        // 对数log\n        if (!type || typeValues.indexOf(type) < 0) {\n            return tooltip.info('The type parameter is invalid.', '');\n        }\n        if (!isRealNum(number)) {\n            return tooltip.info('The number parameter is invalid.', '');\n        }\n        let curRange = Store.luckysheet_select_save[0];\n        let {range = curRange, success} = { ...options };\n        if (range instanceof Array && range.length > 1) {\n            tooltip.info(locale().drag.noMulti, '');\n            return;\n        }\n        if (range && typeof range === 'string' && formula.iscelldata(range)) {\n            range = formula.getcellrange(range);\n        }\n        let getdata = getdatabyselection(range);\n        if (getdata.length == 0) {\n            return;\n        }\n        let arr = [];\n        for (let r = 0; r < getdata.length; r++) {\n            let a = [];\n            for (let c = 0; c < getdata[0].length; c++) {\n                let value = '';\n                if (getdata[r] != null && getdata[r][c] != null) {\n                    value = getdata[r][c];\n                    if (parseInt(value) != null && getdata[r][c].ct != undefined && getdata[r][c].ct.t == 'n') {\n                        if (type == 'minus') {\n                            value.v = value.v - number;\n                        } else if (type == 'multiply') {\n                            value.v = value.v * number;\n                        } else if (type == 'divided') {\n                            value.v = numFormat(value.v / number, 4);\n                        } else if (type == 'power') {\n                            value.v = Math.pow(value.v, number);\n                        } else if (type == 'root') {\n                            if (number == 2) {\n                                value.v = numFormat(Math.sqrt(value.v), 4);\n                            } else if (number == 3 && Math.cbrt) {\n                                value.v = numFormat(Math.cbrt(value.v), 4);\n                            } else {\n                                value.v = numFormat(jfnqrt(value.v, number), 4);\n                            }\n                        } else if (type == 'log') {\n                            value.v = numFormat(Math.log(value.v) * 10000 / Math.log(Math.abs(number)), 4);\n                        } else {\n                            value.v = value.v + number;\n                        }\n                        if (value.v == null) {\n                            value.m = '';\n                        } else {\n                            value.m = value.v.toString();\n                        }\n                    }\n                }\n                a.push(value);\n            }\n            arr.push(a);\n        }\n        editor.controlHandler(arr, range);\n        if (success && typeof success === 'function') {\n            success();\n        }\n    }\n    function setSheetAdd(options = {}) {\n        let lastOrder = Store.luckysheetfile.length - 1;\n        let {sheetObject = {}, order = lastOrder, success} = { ...options };\n        if (!isRealNum(order)) {\n            return tooltip.info('Parameter is not a table index', '');\n        }\n        order = Number(order);\n        let index = sheetmanage.generateRandomSheetIndex();    // calcChain公式链里的index也要跟着变化\n        // calcChain公式链里的index也要跟着变化\n        if (sheetObject.calcChain && sheetObject.calcChain.length > 0) {\n            sheetObject.calcChain.forEach(item => {\n                item.index = index;\n            });\n        }\n        let sheetname = sheetmanage.generateRandomSheetName(Store.luckysheetfile, false);\n        if (!!sheetObject.name) {\n            let sameName = false;\n            for (let i = 0; i < Store.luckysheetfile.length; i++) {\n                if (Store.luckysheetfile[i].name == sheetObject.name) {\n                    sameName = true;\n                    break;\n                }\n            }\n            if (!sameName) {\n                sheetname = sheetObject.name;\n            }\n        }\n        $('#luckysheet-sheet-container-c').append(replaceHtml(sheetHTML, {\n            'index': index,\n            'active': '',\n            'name': sheetname,\n            'style': '',\n            'colorset': ''\n        }));\n        let sheetconfig = {\n            'name': '',\n            'color': '',\n            'status': '0',\n            'order': '',\n            'index': '',\n            'celldata': [],\n            'row': Store.defaultrowNum,\n            'column': Store.defaultcolumnNum,\n            'config': {},\n            'pivotTable': null,\n            'isPivotTable': false\n        };\n        sheetconfig = $.extend(true, sheetconfig, sheetObject);\n        sheetconfig.index = index;\n        sheetconfig.name = sheetname;\n        sheetconfig.order = order;\n        if (order <= 0) {\n            let beforeIndex = Store.luckysheetfile[0].index;\n            let beforeObj = $('#luckysheet-sheets-item' + beforeIndex);\n            $('#luckysheet-sheets-item' + index).insertBefore(beforeObj);\n            Store.luckysheetfile.splice(0, 0, sheetconfig);\n        } else {\n            if (order > Store.luckysheetfile.length) {\n                order = Store.luckysheetfile.length;\n            }\n            let afterIndex = Store.luckysheetfile[order - 1].index;\n            let afterObj = $('#luckysheet-sheets-item' + afterIndex);\n            $('#luckysheet-sheets-item' + index).insertAfter(afterObj);\n            Store.luckysheetfile.splice(order, 0, sheetconfig);\n        }\n        let orders = {};\n        Store.luckysheetfile.forEach((item, i, arr) => {\n            arr[i].order = i;\n            orders[item.index.toString()] = i;\n        });\n        $('#luckysheet-sheet-area div.luckysheet-sheets-item').removeClass('luckysheet-sheets-item-active');\n        $('#luckysheet-sheets-item' + index).addClass('luckysheet-sheets-item-active');\n        $('#luckysheet-cell-main').append('<div id=\"luckysheet-datavisual-selection-set-' + index + '\" class=\"luckysheet-datavisual-selection-set\"></div>');\n        cleargridelement(true);\n        server.saveParam('sha', null, $.extend(true, {}, sheetconfig));\n        server.saveParam('shr', null, orders);\n        if (Store.clearjfundo) {\n            Store.jfundo.length = 0;\n            let redo = {};\n            redo['type'] = 'addSheet';\n            redo['sheetconfig'] = $.extend(true, {}, sheetconfig);\n            redo['index'] = index;\n            redo['currentSheetIndex'] = Store.currentSheetIndex;\n            Store.jfredo.push(redo);\n        }\n        sheetmanage.changeSheetExec(index, false, true);\n        if (success && typeof success === 'function') {\n            success();\n        }\n    }\n    function setSheetDelete(options = {}) {\n        let {order = getSheetIndex(Store.currentSheetIndex), success} = { ...options };\n        let file = Store.luckysheetfile[order];\n        if (file == null) {\n            return tooltip.info('The order parameter is invalid.', '');\n        }\n        if (Store.luckysheetfile.length === 1) {\n            return tooltip.info(locale().sheetconfig.noMoreSheet, '');\n        }\n        sheetmanage.deleteSheet(file.index);\n        setTimeout(() => {\n            if (success && typeof success === 'function') {\n                success();\n            }\n        }, 1);\n        return file;\n    }\n    function setSheetCopy(options = {}) {\n        let {targetOrder, order = getSheetIndex(Store.currentSheetIndex), success} = { ...options };\n        let file = Store.luckysheetfile[order];\n        if (file == null) {\n            return tooltip.info('The order parameter is invalid.', '');\n        }\n        if (targetOrder == null) {\n            targetOrder = order + 1;\n        }\n        if (!isRealNum(targetOrder)) {\n            return tooltip.info('The targetOrder parameter is invalid.', '');\n        }\n        let copyindex = file.index;\n        let index = sheetmanage.generateRandomSheetIndex();\n        let copyjson = $.extend(true, {}, file);\n        copyjson.order = Store.luckysheetfile.length;\n        copyjson.index = index;\n        copyjson.name = sheetmanage.generateCopySheetName(Store.luckysheetfile, copyjson.name);\n        let colorset = '';\n        if (copyjson.color != null) {\n            colorset = '<div class=\"luckysheet-sheets-item-color\" style=\" position: absolute; width: 100%; height: 3px; bottom: 0px; left: 0px; background-color: ' + copyjson.color + ';\"></div>';\n        }\n        let afterObj = $('#luckysheet-sheets-item' + copyindex);\n        if (isRealNum(targetOrder)) {\n            afterObj = $('#luckysheet-sheets-item' + Store.luckysheetfile[targetOrder - 1].index);\n        }\n        $('#luckysheet-sheet-container-c').append(replaceHtml(sheetHTML, {\n            'index': copyjson.index,\n            'active': '',\n            'name': copyjson.name,\n            'order': copyjson.order,\n            'style': '',\n            'colorset': colorset\n        }));\n        $('#luckysheet-sheets-item' + copyjson.index).insertAfter(afterObj);\n        Store.luckysheetfile.splice(targetOrder, 0, copyjson);\n        $('#luckysheet-sheet-area div.luckysheet-sheets-item').removeClass('luckysheet-sheets-item-active');\n        $('#luckysheet-sheets-item' + index).addClass('luckysheet-sheets-item-active');\n        $('#luckysheet-cell-main').append('<div id=\"luckysheet-datavisual-selection-set-' + index + '\" class=\"luckysheet-datavisual-selection-set\"></div>');\n        cleargridelement(true);\n        server.saveParam('shc', index, {\n            'copyindex': copyindex,\n            'name': copyjson.name\n        });\n        sheetmanage.changeSheetExec(index);\n        sheetmanage.reOrderAllSheet();\n        if (Store.clearjfundo) {\n            Store.jfredo.push({\n                'type': 'copySheet',\n                'copyindex': copyindex,\n                'index': copyjson.index,\n                'sheetIndex': copyjson.index\n            });\n        } else if (Store.jfredo.length > 0) {\n            let jfredostr = Store.jfredo[Store.jfredo.length - 1];\n            if (jfredostr.type == 'copySheet') {\n                jfredostr.index = copyjson.index;\n                jfredostr.sheetIndex = copyjson.index;\n            }\n        }\n        setTimeout(() => {\n            if (success && typeof success === 'function') {\n                success();\n            }\n        }, 1);\n        return copyjson;\n    }\n    function setSheetHide(options = {}) {\n        let {order = getSheetIndex(Store.currentSheetIndex), success} = { ...options };\n        let file = Store.luckysheetfile[order];\n        if (file == null) {\n            return tooltip.info('The order parameter is invalid.', '');\n        }\n        sheetmanage.setSheetHide(file.index);\n        setTimeout(() => {\n            if (success && typeof success === 'function') {\n                success();\n            }\n        }, 1);\n        return file;\n    }\n    function setSheetShow(options = {}) {\n        let {order = getSheetIndex(Store.currentSheetIndex), success} = { ...options };\n        let file = Store.luckysheetfile[order];\n        if (file == null) {\n            return tooltip.info('The order parameter is invalid.', '');\n        }\n        sheetmanage.setSheetShow(file.index);\n        setTimeout(() => {\n            if (success && typeof success === 'function') {\n                success();\n            }\n        }, 1);\n        return file;\n    }\n    function setSheetActive(order, options = {}) {\n        if (order == null || !isRealNum(order) || Store.luckysheetfile[order] == null) {\n            return tooltip.info('The order parameter is invalid.', '');\n        }\n        let file = Store.luckysheetfile[order];\n        let {success} = { ...options };\n        $('#luckysheet-sheet-area div.luckysheet-sheets-item').removeClass('luckysheet-sheets-item-active');\n        $('#luckysheet-sheets-item' + file.index).addClass('luckysheet-sheets-item-active');\n        sheetmanage.changeSheet(file.index);\n        setTimeout(() => {\n            if (success && typeof success === 'function') {\n                success();\n            }\n        }, 1);\n        server.multipleRangeShow();\n        return file;\n    }\n    function setSheetName(name, options = {}) {\n        if (getObjType(name) != 'string' || name.toString().length == 0) {\n            return tooltip.info('The name parameter is invalid.', '');\n        }\n        let {order = getSheetIndex(Store.currentSheetIndex), success} = { ...options };\n        let file = Store.luckysheetfile[order];\n        if (file == null) {\n            return tooltip.info('The order parameter is invalid.', '');\n        }\n        let oldtxt = file.name;\n        file.name = name;\n        $('#luckysheet-sheets-item' + file.index + ' .luckysheet-sheets-item-name').text(name);\n        server.saveParam('all', file.index, name, { 'k': 'name' });\n        if (Store.clearjfundo) {\n            let redo = {};\n            redo['type'] = 'sheetName';\n            redo['sheetIndex'] = file.index;\n            redo['oldtxt'] = oldtxt;\n            redo['txt'] = name;\n            Store.jfundo.length = 0;\n            Store.jfredo.push(redo);\n        }\n        if (success && typeof success === 'function') {\n            success();\n        }\n    }\n    function setSheetColor(color, options = {}) {\n        if (getObjType(color) != 'string' || color.toString().length == 0) {\n            return tooltip.info('The color parameter is invalid.', '');\n        }\n        let {order = getSheetIndex(Store.currentSheetIndex), success} = { ...options };\n        let file = Store.luckysheetfile[order];\n        if (file == null) {\n            return tooltip.info('The order parameter is invalid.', '');\n        }\n        let oldcolor = file.color;\n        file.color = color;\n        $('#luckysheet-sheets-item' + file.index).find('.luckysheet-sheets-item-color').remove();\n        $('#luckysheet-sheets-item' + file.index).append('<div class=\"luckysheet-sheets-item-color\" style=\" position: absolute; width: 100%; height: 3px; bottom: 0px; left: 0px; background-color: ' + color + ';\"></div>');\n        server.saveParam('all', file.index, color, { 'k': 'color' });\n        if (Store.clearjfundo) {\n            let redo = {};\n            redo['type'] = 'sheetColor';\n            redo['sheetIndex'] = file.index;\n            redo['oldcolor'] = oldcolor;\n            redo['color'] = color;\n            Store.jfundo.length = 0;\n            Store.jfredo.push(redo);\n        }\n        if (success && typeof success === 'function') {\n            success();\n        }\n    }\n    function setSheetMove(type, options = {}) {\n        if (type != 'left' && type != 'right' && !isRealNum(type)) {\n            return tooltip.info('Type parameter not available', '');\n        }\n        if (isRealNum(type)) {\n            type = parseInt(type);\n        }\n        let curOrder = getSheetIndex(Store.currentSheetIndex);\n        let {order = curOrder, success} = { ...options };\n        let file = Store.luckysheetfile[order];\n        if (file == null) {\n            return tooltip.info('ncorrect worksheet index', '');\n        }\n        let sheetIndex = file.index;\n        if (type == 'left') {\n            if (order == 0) {\n                return;\n            }\n            let prevIndex = Store.luckysheetfile[order - 1].index;\n            $('#luckysheet-sheets-item' + sheetIndex).insertBefore($('#luckysheet-sheets-item' + prevIndex));\n            Store.luckysheetfile.splice(order, 1);\n            Store.luckysheetfile.splice(order - 1, 0, file);\n        } else if (type == 'right') {\n            if (order == Store.luckysheetfile.length - 1) {\n                return;\n            }\n            let nextIndex = Store.luckysheetfile[order + 1].index;\n            $('#luckysheet-sheets-item' + sheetIndex).insertAfter($('#luckysheet-sheets-item' + nextIndex));\n            Store.luckysheetfile.splice(order, 1);\n            Store.luckysheetfile.splice(order + 1, 0, file);\n        } else {\n            if (type < 0) {\n                type = 0;\n            }\n            if (type > Store.luckysheetfile.length - 1) {\n                type = Store.luckysheetfile.length - 1;\n            }\n            if (type == order) {\n                return;\n            }\n            if (type < order) {\n                let prevIndex = Store.luckysheetfile[type].index;\n                $('#luckysheet-sheets-item' + sheetIndex).insertBefore($('#luckysheet-sheets-item' + prevIndex));\n            } else {\n                let nextIndex = Store.luckysheetfile[type].index;\n                $('#luckysheet-sheets-item' + sheetIndex).insertAfter($('#luckysheet-sheets-item' + nextIndex));\n            }\n            Store.luckysheetfile.splice(order, 1);\n            Store.luckysheetfile.splice(type, 0, file);\n        }\n        let orders = {};\n        Store.luckysheetfile.forEach((item, i, arr) => {\n            arr[i].order = i;\n            orders[item.index.toString()] = i;\n        });\n        server.saveParam('shr', null, orders);\n        if (success && typeof success === 'function') {\n            success();\n        }\n    }\n    function setSheetOrder(orderList, options = {}) {\n        if (orderList == null || orderList.length == 0) {\n            return tooltip.info('Type orderList not available', '');\n        }\n        let orderListMap = {};\n        orderList.forEach(item => {\n            orderListMap[item.index.toString()] = item.order;\n        });\n        Store.luckysheetfile.sort((x, y) => {\n            let order_x = orderListMap[x.index.toString()];\n            let order_y = orderListMap[y.index.toString()];\n            if (order_x != null && order_y != null) {\n                return order_x - order_y;\n            } else if (order_x != null) {\n                return -1;\n            } else if (order_y != null) {\n                return 1;\n            } else {\n                return 1;\n            }\n        });\n        let orders = {};\n        Store.luckysheetfile.forEach((item, i, arr) => {\n            arr[i].order = i;\n            orders[item.index.toString()] = i;\n            if (i > 0) {\n                let preIndex = arr[i - 1].index;\n                $('#luckysheet-sheets-item' + item.index).insertAfter($('#luckysheet-sheets-item' + preIndex));\n            }\n        });\n        server.saveParam('shr', null, orders);\n        let {success} = { ...options };\n        if (success && typeof success === 'function') {\n            success();\n        }\n    }\n    function setSheetZoom(zoom, options = {}) {\n        if (!isRealNum(zoom) || zoom < 0.1 || zoom > 4) {\n            return tooltip.info('The zoom parameter is invalid.', '');\n        }\n        let {order = getSheetIndex(Store.currentSheetIndex), success} = { ...options };\n        let file = Store.luckysheetfile[order];\n        if (file == null) {\n            return tooltip.info('The order parameter is invalid.', '');\n        }\n        file['zoomRatio'] = zoom;\n        server.saveParam('all', file.index, zoom, { 'k': 'zoomRatio' });\n        if (file.index == Store.currentSheetIndex) {\n            Store.zoomRatio = zoom;\n            zoomNumberDomBind();\n            zoomRefreshView();\n        }\n        if (success && typeof success === 'function') {\n            success();\n        }\n    }\n    function showGridLines(options = {}) {\n        let {order = getSheetIndex(Store.currentSheetIndex), success} = { ...options };\n        let file = Store.luckysheetfile[order];\n        if (file == null) {\n            return tooltip.info('The order parameter is invalid.', '');\n        }\n        file.showGridLines = true;\n        if (file.index == Store.currentSheetIndex) {\n            Store.showGridLines = true;\n            setTimeout(function () {\n                luckysheetrefreshgrid();\n            }, 1);\n        }\n        setTimeout(() => {\n            if (success && typeof success === 'function') {\n                success();\n            }\n        }, 1);\n        return file;\n    }\n    function hideGridLines(options = {}) {\n        let {order = getSheetIndex(Store.currentSheetIndex), success} = { ...options };\n        let file = Store.luckysheetfile[order];\n        if (file == null) {\n            return tooltip.info('The order parameter is invalid.', '');\n        }\n        file.showGridLines = false;\n        if (file.index == Store.currentSheetIndex) {\n            Store.showGridLines = false;\n            setTimeout(function () {\n                luckysheetrefreshgrid();\n            }, 1);\n        }\n        setTimeout(() => {\n            if (success && typeof success === 'function') {\n                success();\n            }\n        }, 1);\n        return file;\n    }\n    function refresh(options = {}) {\n        // luckysheetrefreshgrid();\n        jfrefreshgrid();\n        let {success} = { ...options };\n        if (success && typeof success === 'function') {\n            success();\n        }\n    }\n    function scroll(options = {}) {\n        let {scrollLeft, scrollTop, targetRow, targetColumn, success} = { ...options };\n        if (scrollLeft != null) {\n            if (!isRealNum(scrollLeft)) {\n                return tooltip.info('The scrollLeft parameter is invalid.', '');\n            }\n            $('#luckysheet-scrollbar-x').scrollLeft(scrollLeft);\n        } else if (targetColumn != null) {\n            if (!isRealNum(targetColumn)) {\n                return tooltip.info('The targetColumn parameter is invalid.', '');\n            }\n            let col = Store.visibledatacolumn[targetColumn], col_pre = targetColumn <= 0 ? 0 : Store.visibledatacolumn[targetColumn - 1];\n            $('#luckysheet-scrollbar-x').scrollLeft(col_pre);\n        }\n        if (scrollTop != null) {\n            if (!isRealNum(scrollTop)) {\n                return tooltip.info('The scrollTop parameter is invalid.', '');\n            }\n            $('#luckysheet-scrollbar-y').scrollTop(scrollTop);\n        } else if (targetRow != null) {\n            if (!isRealNum(targetRow)) {\n                return tooltip.info('The targetRow parameter is invalid.', '');\n            }\n            let row = Store.visibledatarow[targetRow], row_pre = targetRow <= 0 ? 0 : Store.visibledatarow[targetRow - 1];\n            $('#luckysheet-scrollbar-y').scrollTop(row_pre);\n        }\n        if (success && typeof success === 'function') {\n            success();\n        }\n    }\n    function resize(options = {}) {\n        luckysheetsizeauto();\n        let {success} = { ...options };\n        if (success && typeof success === 'function') {\n            success();\n        }\n    }\n    function getScreenshot(options = {}) {\n        let {\n            range = Store.luckysheet_select_save[Store.luckysheet_select_save.length - 1]\n        } = { ...options };\n        if (getObjType(range) == 'string') {\n            if (!formula.iscelldata(range)) {\n                return tooltip.info('The range parameter is invalid.', '');\n            }\n            let cellrange = formula.getcellrange(range);\n            range = {\n                'row': cellrange.row,\n                'column': cellrange.column\n            };\n        }\n        if (getObjType(range) != 'object' || range.row == null || range.column == null) {\n            return tooltip.info('The range parameter is invalid.', '');\n        }\n        let str = range.row[0], edr = range.row[1], stc = range.column[0], edc = range.column[1];\n        let has_PartMC = hasPartMC(Store.config, str, edr, stc, edc);\n        if (has_PartMC) {\n            return tooltip.info('Cannot perform this operation on partially merged cells', '');\n        }\n        let visibledatarow = Store.visibledatarow;\n        let visibledatacolumn = Store.visibledatacolumn;\n        let scrollHeight, rh_height;\n        if (str - 1 < 0) {\n            scrollHeight = 0;\n            rh_height = visibledatarow[edr];\n        } else {\n            scrollHeight = visibledatarow[str - 1];\n            rh_height = visibledatarow[edr] - visibledatarow[str - 1];\n        }\n        let scrollWidth, ch_width;\n        if (stc - 1 < 0) {\n            scrollWidth = 0;\n            ch_width = visibledatacolumn[edc];\n        } else {\n            scrollWidth = visibledatacolumn[stc - 1];\n            ch_width = visibledatacolumn[edc] - visibledatacolumn[stc - 1];\n        }\n        let newCanvas = $('<canvas>').attr({\n            width: Math.ceil(ch_width * Store.devicePixelRatio),\n            height: Math.ceil(rh_height * Store.devicePixelRatio)\n        }).css({\n            width: ch_width,\n            height: rh_height\n        });\n        luckysheetDrawMain(scrollWidth, scrollHeight, ch_width, rh_height, 1, 1, null, null, newCanvas);\n        let ctx_newCanvas = newCanvas.get(0).getContext('2d');    //补上 左边框和上边框\n        //补上 左边框和上边框\n        ctx_newCanvas.beginPath();\n        ctx_newCanvas.moveTo(0, 0);\n        ctx_newCanvas.lineTo(0, Store.devicePixelRatio * rh_height);\n        ctx_newCanvas.lineWidth = Store.devicePixelRatio * 2;\n        ctx_newCanvas.strokeStyle = luckysheetdefaultstyle.strokeStyle;\n        ctx_newCanvas.stroke();\n        ctx_newCanvas.closePath();\n        ctx_newCanvas.beginPath();\n        ctx_newCanvas.moveTo(0, 0);\n        ctx_newCanvas.lineTo(Store.devicePixelRatio * ch_width, 0);\n        ctx_newCanvas.lineWidth = Store.devicePixelRatio * 2;\n        ctx_newCanvas.strokeStyle = luckysheetdefaultstyle.strokeStyle;\n        ctx_newCanvas.stroke();\n        ctx_newCanvas.closePath();\n        let url = newCanvas.get(0).toDataURL('image/png');\n        return url;\n    }\n    function setWorkbookName(name, options = {}) {\n        if (name == null || name.toString().length == 0) {\n            return tooltip.info('The name parameter is invalid.', '');\n        }\n        $('#luckysheet_info_detail_input').val(name);\n        let {success} = { ...options };\n        if (success && typeof success === 'function') {\n            success();\n        }\n    }\n    function getWorkbookName(options = {}) {\n        let name = '';\n        let element = $('#luckysheet_info_detail_input');\n        if (element.length == 0) {\n            tooltip.info('Failed to get workbook name, label loading failed!');\n            return name;\n        }\n        name = $.trim(element.val());\n        let {success} = { ...options };\n        setTimeout(() => {\n            if (success && typeof success === 'function') {\n                success();\n            }\n        }, 1);\n        return name;\n    }\n    function undo(options = {}) {\n        let ctr = $.extend(true, {}, Store.jfredo[Store.jfredo.length - 1]);\n        controlHistory.redo(new Event('custom'));\n        luckysheetactiveCell();\n        let {success} = { ...options };\n        setTimeout(() => {\n            if (success && typeof success === 'function') {\n                success();\n            }\n        }, 1);\n        return ctr;\n    }\n    function redo(options = {}) {\n        let ctr = $.extend(true, {}, Store.jfundo[Store.jfundo.length - 1]);\n        controlHistory.undo(new Event('custom'));\n        luckysheetactiveCell();\n        let {success} = { ...options };\n        setTimeout(() => {\n            if (success && typeof success === 'function') {\n                success();\n            }\n        }, 1);\n        return ctr;\n    }\n    function getAllSheets() {\n        let data = $.extend(true, [], Store.luckysheetfile);\n        data.forEach((item, index, arr) => {\n            if (item.data != null && item.data.length > 0) {\n                item.celldata = sheetmanage.getGridData(item.data);\n            }\n            delete item.load;\n            delete item.freezen;\n        });\n        return data;\n    }\n    function getSheet(options = {}) {\n        let {index, order, name} = { ...options };\n        if (index != null) {\n            return sheetmanage.getSheetByIndex(index);\n        } else if (order != null) {\n            return Store.luckysheetfile[order];\n        } else if (name != null) {\n            return sheetmanage.getSheetByName(name);\n        }\n        return sheetmanage.getSheetByIndex();\n    }\n    function getSheetData(options = {}) {\n        let {\n            order = getSheetIndex(Store.currentSheetIndex)\n        } = { ...options };\n        let file = Store.luckysheetfile[order];\n        if (file == null) {\n            return tooltip.info('The order parameter is invalid.', '');\n        }\n        let data = $.extend(true, [], file.data);\n        if (data == null || data.length == 0) {\n            data = $.extend(true, [], sheetmanage.buildGridData(file));\n        }\n        return data;\n    }\n    function getConfig(options = {}) {\n        let {\n            order = getSheetIndex(Store.currentSheetIndex)\n        } = { ...options };\n        let file = Store.luckysheetfile[order];\n        if (file == null) {\n            return tooltip.info('The order parameter is invalid.', '');\n        }\n        let config = $.extend(true, {}, file.config);\n        return config;\n    }\n    function setConfig(cfg, options = {}) {\n        if (getObjType(cfg) != 'object') {\n            return tooltip.info('The cfg parameter is invalid.', '');\n        }\n        let {order = getSheetIndex(Store.currentSheetIndex), success} = { ...options };\n        let file = Store.luckysheetfile[order];\n        if (file == null) {\n            return tooltip.info('The order parameter is invalid.', '');\n        }\n        file.config = cfg;\n        if (file.index == Store.currentSheetIndex) {\n            Store.config = cfg;\n            if ('rowhidden' in cfg || 'colhidden' in cfg || 'rowlen' in cfg || 'columnlen' in cfg) {\n                jfrefreshgrid_rhcw(Store.flowdata.length, Store.flowdata[0].length);\n            }\n            setTimeout(function () {\n                luckysheetrefreshgrid();\n            }, 1);\n        }\n        if (success && typeof success === 'function') {\n            success();\n        }\n    }\n    function getLuckysheetfile() {\n        return getluckysheetfile();\n    }\n    function setDataVerification(optionItem, options = {}) {\n        if (getObjType(optionItem) != 'object') {\n            return tooltip.info('The optionItem parameter is invalid.', '');\n        }\n        let {type, type2 = null, value1 = '', value2 = '', remote = false, prohibitInput = false, hintShow = false, hintText = '', checked = false} = { ...optionItem };\n        let typeValues = [\n            'dropdown',\n            'checkbox',\n            'number',\n            'number_integer',\n            'number_decimal',\n            'text_content',\n            'text_length',\n            'date',\n            'validity'\n        ];\n        let type2Values_1 = [\n            'bw',\n            'nb',\n            'eq',\n            'ne',\n            'gt',\n            'lt',\n            'gte',\n            'lte'\n        ];\n        let type2Values_2 = [\n            'include',\n            'exclude',\n            'equal'\n        ];\n        let type2Values_3 = [\n            'bw',\n            'nb',\n            'eq',\n            'ne',\n            'bf',\n            'nbf',\n            'af',\n            'naf'\n        ];\n        let type2Values_4 = [\n            'card',\n            'phone'\n        ];\n        if (!typeValues.includes(type)) {\n            return tooltip.info('The optionItem.type parameter is invalid.', '');\n        }\n        let dvText = locale().dataVerification;\n        if (type == 'dropdown') {\n            if (value1.length == 0) {\n                tooltip.info('<i class=\"fa fa-exclamation-triangle\"></i>', dvText.tooltipInfo1);\n                return;\n            }\n        } else if (type == 'checkbox') {\n            if (value1.length == 0 || value2.length == 0) {\n                tooltip.info('<i class=\"fa fa-exclamation-triangle\"></i>', dvText.tooltipInfo2);\n                return;\n            }\n        } else if (type == 'number' || type == 'number_integer' || type == 'number_decimal') {\n            if (!type2Values_1.includes(type2)) {\n                return tooltip.info('The optionItem.type2 parameter is invalid.', '');\n            }\n            if (!isRealNum(value1)) {\n                tooltip.info('<i class=\"fa fa-exclamation-triangle\"></i>', dvText.tooltipInfo3);\n                return;\n            }\n            if (type2 == 'bw' || type2 == 'nb') {\n                if (!isRealNum(value2)) {\n                    tooltip.info('<i class=\"fa fa-exclamation-triangle\"></i>', dvText.tooltipInfo3);\n                    return;\n                }\n                if (Number(value2) < Number(value1)) {\n                    tooltip.info('<i class=\"fa fa-exclamation-triangle\"></i>', dvText.tooltipInfo4);\n                    return;\n                }\n            }\n        } else if (type == 'text_content') {\n            if (!type2Values_2.includes(type2)) {\n                return tooltip.info('The optionItem.type2 parameter is invalid.', '');\n            }\n            if (value1.length == 0) {\n                tooltip.info('<i class=\"fa fa-exclamation-triangle\"></i>', dvText.tooltipInfo5);\n                return;\n            }\n        } else if (type == 'text_length') {\n            if (!type2Values_1.includes(type2)) {\n                return tooltip.info('The optionItem.type2 parameter is invalid.', '');\n            }\n            if (!isRealNum(value1)) {\n                tooltip.info('<i class=\"fa fa-exclamation-triangle\"></i>', dvText.tooltipInfo3);\n                return;\n            }\n            if (type2 == 'bw' || type2 == 'nb') {\n                if (!isRealNum(value2)) {\n                    tooltip.info('<i class=\"fa fa-exclamation-triangle\"></i>', dvText.tooltipInfo3);\n                    return;\n                }\n                if (Number(value2) < Number(value1)) {\n                    tooltip.info('<i class=\"fa fa-exclamation-triangle\"></i>', dvText.tooltipInfo4);\n                    return;\n                }\n            }\n        } else if (type == 'date') {\n            if (!type2Values_3.includes(type2)) {\n                return tooltip.info('The optionItem.type2 parameter is invalid.', '');\n            }\n            if (!isdatetime(value1)) {\n                tooltip.info('<i class=\"fa fa-exclamation-triangle\"></i>', dvText.tooltipInfo6);\n                return;\n            }\n            if (type2 == 'bw' || type2 == 'nb') {\n                if (!isdatetime(value2)) {\n                    tooltip.info('<i class=\"fa fa-exclamation-triangle\"></i>', dvText.tooltipInfo6);\n                    return;\n                }\n                if (diff(value1, value2) > 0) {\n                    tooltip.info('<i class=\"fa fa-exclamation-triangle\"></i>', dvText.tooltipInfo7);\n                    return;\n                }\n            }\n        } else if (type == 'validity') {\n            if (!type2Values_4.includes(type2)) {\n                return tooltip.info('The optionItem.type2 parameter is invalid.', '');\n            }\n        }\n        if (getObjType(remote) != 'boolean') {\n            return tooltip.info('The optionItem.remote parameter is invalid.', '');\n        }\n        if (getObjType(prohibitInput) != 'boolean') {\n            return tooltip.info('The optionItem.prohibitInput parameter is invalid.', '');\n        }\n        if (getObjType(hintShow) != 'boolean') {\n            return tooltip.info('The optionItem.hintShow parameter is invalid.', '');\n        }\n        let {range = Store.luckysheet_select_save[Store.luckysheet_select_save.length - 1], order = getSheetIndex(Store.currentSheetIndex), success} = { ...options };\n        if (getObjType(range) == 'string') {\n            if (!formula.iscelldata(range)) {\n                return tooltip.info('The range parameter is invalid.', '');\n            }\n            let cellrange = formula.getcellrange(range);\n            range = {\n                'row': cellrange.row,\n                'column': cellrange.column\n            };\n        }\n        if (getObjType(range) != 'object' || range.row == null || range.column == null) {\n            return tooltip.info('The range parameter is invalid.', '');\n        }\n        let file = Store.luckysheetfile[order];\n        if (file == null) {\n            return tooltip.info('The order parameter is invalid.', '');\n        }\n        let item = {\n            type: type,\n            type2: type2,\n            value1: value1,\n            value2: value2,\n            checked: checked,\n            remote: remote,\n            prohibitInput: prohibitInput,\n            hintShow: hintShow,\n            hintText: hintText\n        };\n        let currentDataVerification = $.extend(true, {}, file.dataVerification);\n        let data = $.extend(true, [], file.data);\n        if (data.length == 0) {\n            data = sheetmanage.buildGridData(file);\n        }\n        let str = range.row[0], edr = range.row[1], stc = range.column[0], edc = range.column[1];\n        for (let r = str; r <= edr; r++) {\n            for (let c = stc; c <= edc; c++) {\n                currentDataVerification[r + '_' + c] = item;\n                if (type == 'checkbox') {\n                    item.checked ? setcellvalue(r, c, data, item.value1) : setcellvalue(r, c, data, item.value2);\n                }\n            }\n        }\n        if (file.index == Store.currentSheetIndex) {\n            let historyDataVerification = $.extend(true, {}, file.dataVerification);\n            if (type == 'checkbox') {\n                dataVerificationCtrl.refOfCheckbox(historyDataVerification, currentDataVerification, Store.currentSheetIndex, data, range);\n            } else {\n                dataVerificationCtrl.ref(historyDataVerification, currentDataVerification, Store.currentSheetIndex);\n            }\n        } else {\n            file.dataVerification = currentDataVerification;\n            file.data = data;\n        }\n        if (success && typeof success === 'function') {\n            success();\n        }\n    }\n    function deleteDataVerification(options = {}) {\n        let {range = Store.luckysheet_select_save[Store.luckysheet_select_save.length - 1], order = getSheetIndex(Store.currentSheetIndex), success} = { ...options };\n        if (getObjType(range) == 'string') {\n            if (!formula.iscelldata(range)) {\n                return tooltip.info('The range parameter is invalid.', '');\n            }\n            let cellrange = formula.getcellrange(range);\n            range = {\n                'row': cellrange.row,\n                'column': cellrange.column\n            };\n        }\n        if (getObjType(range) != 'object' || range.row == null || range.column == null) {\n            return tooltip.info('The range parameter is invalid.', '');\n        }\n        let file = Store.luckysheetfile[order];\n        if (file == null) {\n            return tooltip.info('The order parameter is invalid.', '');\n        }\n        let currentDataVerification = $.extend(true, {}, file.dataVerification);\n        let str = range.row[0], edr = range.row[1], stc = range.column[0], edc = range.column[1];\n        for (let r = str; r <= edr; r++) {\n            for (let c = stc; c <= edc; c++) {\n                delete currentDataVerification[r + '_' + c];\n            }\n        }\n        if (file.index == Store.currentSheetIndex) {\n            let historyDataVerification = $.extend(true, {}, file.dataVerification);\n            dataVerificationCtrl.ref(historyDataVerification, currentDataVerification, Store.currentSheetIndex);\n        } else {\n            file.dataVerification = currentDataVerification;\n        }\n        if (success && typeof success === 'function') {\n            success();\n        }\n    }\n    function insertImage(src, options = {}) {\n        let {order = getSheetIndex(Store.currentSheetIndex), rowIndex, colIndex, success} = { ...options };\n        let file = Store.luckysheetfile[order];\n        if (file == null) {\n            return tooltip.info('The order parameter is invalid.', '');\n        }\n        if (file.index == Store.currentSheetIndex) {\n            let last = Store.luckysheet_select_save[Store.luckysheet_select_save.length - 1];\n            if (rowIndex == null) {\n                rowIndex = last.row_focus || 0;\n            }\n            if (rowIndex < 0) {\n                rowIndex = 0;\n            }\n            if (rowIndex > Store.visibledatarow.length) {\n                rowIndex = Store.visibledatarow.length;\n            }\n            if (colIndex == null) {\n                colIndex = last.column_focus || 0;\n            }\n            if (colIndex < 0) {\n                colIndex = 0;\n            }\n            if (colIndex > Store.visibledatacolumn.length) {\n                colIndex = Store.visibledatacolumn.length;\n            }\n            let left = colIndex == 0 ? 0 : Store.visibledatacolumn[colIndex - 1];\n            let top = rowIndex == 0 ? 0 : Store.visibledatarow[rowIndex - 1];\n            let image = new Image();\n            image.onload = function () {\n                let width = image.width, height = image.height;\n                let img = {\n                    src: src,\n                    left: left,\n                    top: top,\n                    originWidth: width,\n                    originHeight: height\n                };\n                imageCtrl.addImgItem(img);\n                if (success && typeof success === 'function') {\n                    success();\n                }\n            };\n            image.src = src;\n        } else {\n            let images = file.images || {};\n            let config = file.config;\n            let zoomRatio = file.zoomRatio || 1;\n            let rowheight = file.row;\n            let visibledatarow = file.visibledatarow || [];\n            if (visibledatarow.length === 0) {\n                let rh_height = 0;\n                for (let r = 0; r < rowheight; r++) {\n                    let rowlen = Store.defaultrowlen;\n                    if (config['rowlen'] != null && config['rowlen'][r] != null) {\n                        rowlen = config['rowlen'][r];\n                    }\n                    if (config['rowhidden'] != null && config['rowhidden'][r] != null) {\n                        visibledatarow.push(rh_height);\n                        continue;\n                    }\n                    rh_height += Math.round((rowlen + 1) * zoomRatio);\n                    visibledatarow.push(rh_height);    //行的临时长度分布\n                }\n            }\n            //行的临时长度分布\n            let colwidth = file.column;\n            let visibledatacolumn = file.visibledatacolumn || [];\n            if (visibledatacolumn.length === 0) {\n                let ch_width = 0;\n                for (let c = 0; c < colwidth; c++) {\n                    let firstcolumnlen = Store.defaultcollen;\n                    if (config['columnlen'] != null && config['columnlen'][c] != null) {\n                        firstcolumnlen = config['columnlen'][c];\n                    }\n                    if (config['colhidden'] != null && config['colhidden'][c] != null) {\n                        visibledatacolumn.push(ch_width);\n                        continue;\n                    }\n                    ch_width += Math.round((firstcolumnlen + 1) * zoomRatio);\n                    visibledatacolumn.push(ch_width);    //列的临时长度分布\n                }\n            }\n            //列的临时长度分布\n            if (rowIndex == null) {\n                rowIndex = 0;\n            }\n            if (rowIndex < 0) {\n                rowIndex = 0;\n            }\n            if (rowIndex > visibledatarow.length) {\n                rowIndex = visibledatarow.length;\n            }\n            if (colIndex == null) {\n                colIndex = 0;\n            }\n            if (colIndex < 0) {\n                colIndex = 0;\n            }\n            if (colIndex > visibledatacolumn.length) {\n                colIndex = visibledatacolumn.length;\n            }\n            let left = colIndex == 0 ? 0 : visibledatacolumn[colIndex - 1];\n            let top = rowIndex == 0 ? 0 : visibledatarow[rowIndex - 1];\n            let image = new Image();\n            image.onload = function () {\n                let img = {\n                    src: src,\n                    left: left,\n                    top: top,\n                    originWidth: image.width,\n                    originHeight: image.height\n                };\n                let width, height;\n                let max = 400;\n                if (img.originHeight < img.originWidth) {\n                    height = Math.round(img.originHeight * (max / img.originWidth));\n                    width = max;\n                } else {\n                    width = Math.round(img.originWidth * (max / img.originHeight));\n                    height = max;\n                }\n                let imgItem = $.extend(true, {}, imageCtrl.imgItem);\n                imgItem.src = img.src;\n                imgItem.originWidth = img.originWidth;\n                imgItem.originHeight = img.originHeight;\n                imgItem.default.width = width;\n                imgItem.default.height = height;\n                imgItem.default.left = img.left;\n                imgItem.default.top = img.top;\n                imgItem.crop.width = width;\n                imgItem.crop.height = height;\n                let id = imageCtrl.generateRandomId();\n                images[id] = imgItem;\n                file.images = images;\n                if (success && typeof success === 'function') {\n                    success();\n                }\n            };\n            image.src = src;\n        }\n    }\n    function deleteImage(options = {}) {\n        let {order = getSheetIndex(Store.currentSheetIndex), idList = 'all', success} = { ...options };\n        let file = Store.luckysheetfile[order];\n        if (file == null) {\n            return tooltip.info('The order parameter is invalid.', '');\n        }\n        let images = file.images;\n        if (images == null) {\n            return tooltip.info('The worksheet has no pictures to delete.', '');\n        }\n        if (idList != 'all' && getObjType(idList) != 'array') {\n            return tooltip.info('The idList parameter is invalid.', '');\n        }\n        if (getObjType(idList) == 'array') {\n            idList.forEach(item => {\n                delete images[item];\n            });\n        } else {\n            images = null;\n        }\n        file.images = images;\n        if (file.index == Store.currentSheetIndex) {\n            if (imageCtrl.currentImgId != null && (idList == 'all' || idList.includes(imageCtrl.currentImgId))) {\n                $('#luckysheet-modal-dialog-activeImage').hide();\n                $('#luckysheet-modal-dialog-cropping').hide();\n                $('#luckysheet-modal-dialog-slider-imageCtrl').hide();\n            }\n            imageCtrl.images = images;\n            imageCtrl.allImagesShow();\n            imageCtrl.init();\n        }\n        if (success && typeof success === 'function') {\n            success();\n        }\n    }\n    function getImageOption(options = {}) {\n        let {order = getSheetIndex(Store.currentSheetIndex), success} = { ...options };\n        let file = Store.luckysheetfile[order];\n        if (file == null) {\n            return tooltip.info('The order parameter is invalid.', '');\n        }\n        setTimeout(function () {\n            if (success && typeof success === 'function') {\n                success();\n            }\n        }, 1);\n        return file.images;\n    }\n    function transToCellData(data, options = {}) {\n        let {success} = { ...options };\n        setTimeout(() => {\n            if (success && typeof success === 'function') {\n                success();\n            }\n        }, 0);\n        return sheetmanage.getGridData(data);\n    }\n    function transToData(celldata, options = {}) {\n        let {success} = { ...options };\n        setTimeout(() => {\n            if (success && typeof success === 'function') {\n                success();\n            }\n        }, 0);\n        return sheetmanage.buildGridData({ celldata: celldata });\n    }\n    function toJson() {\n        const toJsonOptions = Store.toJsonOptions;    // Workbook name\n        // Workbook name\n        toJsonOptions.title = $('#luckysheet_info_detail_input').val();\n        toJsonOptions.data = getAllSheets();    // row and column\n        // row and column\n        getluckysheetfile().forEach((file, index) => {\n            if (file.data == undefined) {\n                return;\n            }\n            toJsonOptions.data[index].row = getObjType(file.data) === 'array' ? file.data.length : 0;\n            toJsonOptions.data[index].column = getObjType(file.data[0]) === 'array' ? file.data[0].length : 0;\n        });\n        return toJsonOptions;\n    }\n    function changLang(lang = 'zh') {\n        if (![\n                'zh',\n                'en',\n                'es'\n            ].includes(lang)) {\n            return tooltip.info('The lang parameter is invalid.', '');\n        }\n        let options = toJson();\n        options.lang = lang;\n        luckysheet.create(options);\n    }\n    function closeWebsocket() {\n        if (server.websocket == null) {\n            return;\n        }\n        server.websocket.close(1000);\n    }\n    function getRangeByTxt(txt) {\n        // 默认取当前第一个范围\n        if (txt == null) {\n            return {\n                column: Store.luckysheet_select_save[Store.luckysheet_select_save.length - 1].column,\n                row: Store.luckysheet_select_save[Store.luckysheet_select_save.length - 1].row\n            };\n        }\n        const range = conditionformat.getRangeByTxt(txt);\n        return {\n            column: range[0].column,\n            row: range[0].row\n        };\n    }\n    function getTxtByRange(range = Store.luckysheet_select_save) {\n        // 单个范围\n        if (getObjType(range) === 'object') {\n            range = [range];\n        }\n        return conditionformat.getTxtByRange(range);\n    }\n    function pagerInit(config) {\n        $('#luckysheet-bottom-pager').remove();\n        $('#luckysheet-sheet-area').append('<div id=\"luckysheet-bottom-pager\" style=\"font-size: 14px; margin-left: 10px; display: inline-block;\"></div>');\n        $('#luckysheet-bottom-pager').sPage({\n            page: config.pageIndex,\n            //当前页码，必填\n            total: config.total,\n            //数据总条数，必填\n            selectOption: config.selectOption,\n            // 选择每页的行数，\n            pageSize: config.pageSize,\n            //每页显示多少条数据，默认10条\n            showTotal: true,\n            // 是否显示总数\n            showSkip: config.showSkip || true,\n            //是否显示跳页，默认关闭：false\n            showPN: config.showPN || true,\n            //是否显示上下翻页，默认开启：true\n            backFun: function (page) {\n                page.pageIndex = page.page;\n                if (!method.createHookFunction('onTogglePager', page)) {\n                    return;\n                }\n            }\n        });\n    }\n    function refreshFormula(success) {\n        formula.execFunctionGroupForce(true);\n        luckysheetrefreshgrid();\n        setTimeout(() => {\n            if (success && typeof success === 'function') {\n                success();\n            }\n        });\n    }\n    function refreshMenuButtonFocus(data, r, c, success) {\n        data = data || Store.flowdata;\n        if (r == null && c == null) {\n            /* 获取选取范围 */\n            let last = Store.luckysheet_select_save[Store.luckysheet_select_save.length - 1];\n            r = last.row_focus || last.row[0];\n            c = last.column_focus || last.column[0];\n        }\n        menuButton.menuButtonFocus(data, r, c);\n        setTimeout(() => {\n            if (success && typeof success === 'function') {\n                success();\n            }\n        });\n    }\n    return {\n        getCellValue: getCellValue,\n        setCellValue: setCellValue,\n        clearCell: clearCell,\n        deleteCell: deleteCell,\n        setCellFormat: setCellFormat,\n        find: find,\n        replace: replace,\n        exitEditMode: exitEditMode,\n        enterEditMode: enterEditMode,\n        frozenFirstRow: frozenFirstRow,\n        frozenFirstColumn: frozenFirstColumn,\n        frozenRowRange: frozenRowRange,\n        frozenColumnRange: frozenColumnRange,\n        cancelFrozen: cancelFrozen,\n        setHorizontalFrozen: setHorizontalFrozen,\n        setVerticalFrozen: setVerticalFrozen,\n        setBothFrozen: setBothFrozen,\n        insertRowOrColumn: insertRowOrColumn,\n        insertRow: insertRow,\n        insertColumn: insertColumn,\n        deleteRowOrColumn: deleteRowOrColumn,\n        deleteRow: deleteRow,\n        deleteColumn: deleteColumn,\n        hideRowOrColumn: hideRowOrColumn,\n        showRowOrColumn: showRowOrColumn,\n        hideRow: hideRow,\n        showRow: showRow,\n        hideColumn: hideColumn,\n        showColumn: showColumn,\n        setRowHeight: setRowHeight,\n        setColumnWidth: setColumnWidth,\n        getRowHeight: getRowHeight,\n        getColumnWidth: getColumnWidth,\n        getDefaultRowHeight: getDefaultRowHeight,\n        getDefaultColWidth: getDefaultColWidth,\n        getRange: getRange,\n        getRangeWithFlatten: getRangeWithFlatten,\n        getRangeValuesWithFlatte: getRangeValuesWithFlatte,\n        getRangeAxis: getRangeAxis,\n        getRangeValue: getRangeValue,\n        getRangeHtml: getRangeHtml,\n        getRangeArray: getRangeArray,\n        getRangeJson: getRangeJson,\n        getRangeDiagonal: getRangeDiagonal,\n        getRangeBoolean: getRangeBoolean,\n        setRangeShow: setRangeShow,\n        setRangeValue: setRangeValue,\n        setSingleRangeFormat: setSingleRangeFormat,\n        setRangeFormat: setRangeFormat,\n        setRangeFilter: setRangeFilter,\n        setRangeMerge: setRangeMerge,\n        cancelRangeMerge: cancelRangeMerge,\n        setRangeSort: setRangeSort,\n        setRangeSortMulti: setRangeSortMulti,\n        setRangeConditionalFormatDefault: setRangeConditionalFormatDefault,\n        setRangeConditionalFormat: setRangeConditionalFormat,\n        deleteRangeConditionalFormat: deleteRangeConditionalFormat,\n        clearRange: clearRange,\n        deleteRange: deleteRange,\n        matrixOperation: matrixOperation,\n        matrixCalculation: matrixCalculation,\n        setSheetAdd: setSheetAdd,\n        setSheetDelete: setSheetDelete,\n        setSheetCopy: setSheetCopy,\n        setSheetHide: setSheetHide,\n        setSheetShow: setSheetShow,\n        setSheetActive: setSheetActive,\n        setSheetName: setSheetName,\n        setSheetColor: setSheetColor,\n        setSheetMove: setSheetMove,\n        setSheetOrder: setSheetOrder,\n        setSheetZoom: setSheetZoom,\n        showGridLines: showGridLines,\n        hideGridLines: hideGridLines,\n        refresh: refresh,\n        scroll: scroll,\n        resize: resize,\n        getScreenshot: getScreenshot,\n        setWorkbookName: setWorkbookName,\n        getWorkbookName: getWorkbookName,\n        undo: undo,\n        redo: redo,\n        getAllSheets: getAllSheets,\n        getSheet: getSheet,\n        getSheetData: getSheetData,\n        getConfig: getConfig,\n        setConfig: setConfig,\n        getLuckysheetfile: getLuckysheetfile,\n        setDataVerification: setDataVerification,\n        deleteDataVerification: deleteDataVerification,\n        insertImage: insertImage,\n        deleteImage: deleteImage,\n        getImageOption: getImageOption,\n        transToCellData: transToCellData,\n        transToData: transToData,\n        toJson: toJson,\n        changLang: changLang,\n        closeWebsocket: closeWebsocket,\n        getRangeByTxt: getRangeByTxt,\n        getTxtByRange: getTxtByRange,\n        pagerInit: pagerInit,\n        refreshFormula: refreshFormula,\n        refreshMenuButtonFocus: refreshMenuButtonFocus\n    };\n});"]}