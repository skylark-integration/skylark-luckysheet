{"version":3,"sources":["global/format.js"],"names":["define","m_validate","m_datecontroll","m_getdata","numeral","isRealNum","valueIsError","isdatetime","getcellvalue","SSF","_strrev","x","o","i","length","charAt","fill","c","l","pad0","v","d","t","pad_","rpad_","version","p2_32","Math","pow","pad0r","round","pad0r1","pad0r2","isgeneral","s","charCodeAt","days","months","init_table","table_fmt","default_map","defi","default_str","frac","D","mixed","sgn","B","P_2","P_1","P","Q_2","Q_1","Q","A","floor","q","parse_date_code","opts","b2","date","time","dow","dout","out","T","u","y","m","H","M","S","abs","date1904","Date","setDate","getDate","getFullYear","getMonth","getDay","fix_hijri","basedate","dnthresh","getTime","base1904","datenum_local","epoch","getTimezoneOffset","_general_int","toString","general_fmt_num","trailing_zeroes_and_decimal","strip_decimal","indexOf","replace","mantissa_zeroes_and_decimal","exp_with_single_digit","V","log","LOG10E","normalize_exp","toPrecision","w","toFixed","toExponential","small_exp","substr","large_exp","toUpperCase","general_fmt","format","Error","_general_num","_general","split","write_date","type","fmt","val","ss0","ss","tt","outl","commaify","j","write_num","pct1","frac1","dec1","closeparen","phone","hashq","str","cc","String","fromCharCode","rnd","dd","dec","_frac","write_num_flt","match","ffmt","idx","write_num_cm","sfmt","mul","write_num_pct","write_num_exp","period","ee","fakee","$$","$1","$2","$3","r","ri","ff","aval","sign","den","parseInt","rr","base","myn","myd","write_num_f1","carry","oa","min","max","lres","rres","flr","write_num_int","write_num_cm2","write_num_pct2","write_num_exp2","write_num_f2","slice","lastIndexOf","split_fmt","in_str","_split","abstime","fmt_is_date","eval_fmt","flen","dt","lst","hr","toLowerCase","ssm","bt","jj","nstr","myv","ostr","vv","decpt","lasti","retval","is_date","_eval","cfregex","cfregex2","chkcond","thresh","parseFloat","dateNF","table","isNaN","acc","isNegative","Number","vlength","subtract","afterYi","substring","afterWan","f","lat","join","m1","m2","choose_fmt","load_entry","undefined","load","_table","get_table","load_table","tbl","make_ssf","encregex","coderegex","UTC","getHours","getMinutes","getSeconds","dnthresh_utc","good_pd_date","good_pd","genarate","value","ct","fa","test","strlen","Array","index","value3","value2","value4","len","isThousands","ThousandsArr","value1","fixdate","setTime","setFullYear","n","parseDate","update","valueShowEs","wt","fuzzynum"],"mappings":";;;;;;;AAAAA,QACI,aACA,iBACA,YACA,sBACD,SAAUC,EAAYC,EAAgBC,EAAWC,GAChD,aACA,MAAMC,UAACA,EAASC,aAAEA,GAAgBL,GAC5BM,WAACA,GAAcL,GACfM,aAACA,GAAgBL,EACvB,IAAIM,MACW,SAAkBA,GAE7B,SAASC,EAAQC,GAEb,IADA,IAAIC,EAAI,GAAIC,EAAIF,EAAEG,OAAS,EACpBD,GAAK,GACRD,GAAKD,EAAEI,OAAOF,KAClB,OAAOD,EAEX,SAASI,EAAKC,EAAGC,GAEb,IADA,IAAIN,EAAI,GACDA,EAAEE,OAASI,GACdN,GAAKK,EACT,OAAOL,EAEX,SAASO,EAAKC,EAAGC,GACb,IAAIC,EAAI,GAAKF,EACb,OAAOE,EAAER,QAAUO,EAAIC,EAAIN,EAAK,IAAKK,EAAIC,EAAER,QAAUQ,EAEzD,SAASC,EAAKH,EAAGC,GACb,IAAIC,EAAI,GAAKF,EACb,OAAOE,EAAER,QAAUO,EAAIC,EAAIN,EAAK,IAAKK,EAAIC,EAAER,QAAUQ,EAEzD,SAASE,EAAMJ,EAAGC,GACd,IAAIC,EAAI,GAAKF,EACb,OAAOE,EAAER,QAAUO,EAAIC,EAAIA,EAAIN,EAAK,IAAKK,EAAIC,EAAER,QAvBnDL,EAAIgB,QAAU,SAiCd,IAAIC,EAAQC,KAAKC,IAAI,EAAG,IACxB,SAASC,EAAMT,EAAGC,GACd,OAAID,EAAIM,GAASN,GAAKM,EAV1B,SAAgBN,EAAGC,GACf,IAAIC,EAAI,GAAKK,KAAKG,MAAMV,GACxB,OAAOE,EAAER,QAAUO,EAAIC,EAAIN,EAAK,IAAKK,EAAIC,EAAER,QAAUQ,EAS1CS,CAAOX,EAAGC,GAPzB,SAAgBD,EAAGC,GACf,IAAIC,EAAI,GAAKF,EACb,OAAOE,EAAER,QAAUO,EAAIC,EAAIN,EAAK,IAAKK,EAAIC,EAAER,QAAUQ,EAO9CU,CADCL,KAAKG,MAAMV,GACFC,GAErB,SAASY,EAAUC,EAAGrB,GAElB,OADAA,EAAIA,GAAK,EACFqB,EAAEpB,QAAU,EAAID,GAAgC,MAAR,GAAlBqB,EAAEC,WAAWtB,KAAmD,MAAR,GAAtBqB,EAAEC,WAAWtB,EAAI,KAAmD,MAAR,GAAtBqB,EAAEC,WAAWtB,EAAI,KAAmD,MAAR,GAAtBqB,EAAEC,WAAWtB,EAAI,KAAmD,MAAR,GAAtBqB,EAAEC,WAAWtB,EAAI,KAAmD,KAAR,GAAtBqB,EAAEC,WAAWtB,EAAI,KAAkD,MAAR,GAAtBqB,EAAEC,WAAWtB,EAAI,IAEjR,IAAIuB,IAEI,MACA,WAGA,MACA,WAGA,MACA,YAGA,MACA,cAGA,MACA,aAGA,MACA,WAGA,MACA,aAGJC,IAEI,IACA,MACA,YAGA,IACA,MACA,aAGA,IACA,MACA,UAGA,IACA,MACA,UAGA,IACA,MACA,QAGA,IACA,MACA,SAGA,IACA,MACA,SAGA,IACA,MACA,WAGA,IACA,MACA,cAGA,IACA,MACA,YAGA,IACA,MACA,aAGA,IACA,MACA,aAGR,SAASC,EAAWhB,GAChBA,EAAE,GAAK,UACPA,EAAE,GAAK,IACPA,EAAE,GAAK,OACPA,EAAE,GAAK,QACPA,EAAE,GAAK,WACPA,EAAE,GAAK,KACPA,EAAE,IAAM,QACRA,EAAE,IAAM,WACRA,EAAE,IAAM,QACRA,EAAE,IAAM,UACRA,EAAE,IAAM,SACRA,EAAE,IAAM,WACRA,EAAE,IAAM,QACRA,EAAE,IAAM,SACRA,EAAE,IAAM,aACRA,EAAE,IAAM,gBACRA,EAAE,IAAM,OACRA,EAAE,IAAM,UACRA,EAAE,IAAM,cACRA,EAAE,IAAM,iBACRA,EAAE,IAAM,sBACRA,EAAE,IAAM,sBACRA,EAAE,IAAM,2BACRA,EAAE,IAAM,QACRA,EAAE,IAAM,YACRA,EAAE,IAAM,SACRA,EAAE,IAAM,WACRA,EAAE,IAAM,IACRA,EAAE,IAAM,2BACRA,EAAE,OAAS,UAEf,IAAIiB,KACJD,EAAWC,GAIX,IAAIC,KACAC,EAAO,EAEX,IAAKA,EAAO,EAAGA,GAAQ,IAAKA,EACxBD,EAAYC,GAAQ,GAAKA,EAE7B,IAAKA,EAAO,GAAIA,GAAQ,KAAMA,EAC1BD,EAAYC,GAAQ,EAExB,IAAKA,EAAO,GAAIA,GAAQ,KAAMA,EAC1BD,EAAYC,GAAQ,GAExB,IAAKA,EAAO,GAAIA,GAAQ,KAAMA,EAC1BD,EAAYC,GAAQ,GAExB,IAAKA,EAAO,GAAIA,GAAQ,KAAMA,EAC1BD,EAAYC,GAAQA,EAAO,GAE/B,IAAKA,EAAO,GAAIA,GAAQ,KAAMA,EAC1BD,EAAYC,GAAQA,EAAO,GAE/B,IAAKA,EAAO,GAAIA,GAAQ,KAAMA,EAC1BD,EAAYC,GAAQA,EAAO,GAE/B,IAAKA,EAAO,GAAIA,GAAQ,KAAMA,EAC1BD,EAAYC,GAAQA,EAAO,GAE/B,IAAKA,EAAO,GAAIA,GAAQ,KAAMA,EAC1BD,EAAYC,GAAQA,EAAO,GAE/B,IAAKA,EAAO,GAAIA,GAAQ,KAAMA,EAC1BD,EAAYC,GAAQA,EAAO,GAI/B,IAAIC,KAiBJ,SAASC,EAAKhC,EAAGiC,EAAGC,GAMhB,IALA,IAAIC,EAAMnC,EAAI,GAAK,EAAI,EACnBoC,EAAIpC,EAAImC,EACRE,EAAM,EAAGC,EAAM,EAAGC,EAAI,EACtBC,EAAM,EAAGC,EAAM,EAAGC,EAAI,EACtBC,EAAI3B,KAAK4B,MAAMR,GACZK,EAAMR,IAETM,GADAI,EAAI3B,KAAK4B,MAAMR,IACPE,EAAMD,EACdK,EAAIC,EAAIF,EAAMD,IACVJ,EAAIO,EAAI,QAEZP,EAAI,GAAKA,EAAIO,GACbN,EAAMC,EACNA,EAAMC,EACNC,EAAMC,EACNA,EAAMC,EAWV,GATIA,EAAIT,IACAQ,EAAMR,GACNS,EAAIF,EACJD,EAAIF,IAEJK,EAAID,EACJF,EAAID,KAGPJ,EACD,OACI,EACAC,EAAMI,EACNG,GAER,IAAIG,EAAI7B,KAAK4B,MAAMT,EAAMI,EAAIG,GAC7B,OACIG,EACAV,EAAMI,EAAIM,EAAIH,EACdA,GAGR,SAASI,EAAgBrC,EAAGsC,EAAMC,GAC9B,GAAIvC,EAAI,SAAWA,EAAI,EACnB,OAAO,KACX,IAAIwC,EAAW,EAAJxC,EAAOyC,EAAOlC,KAAK4B,MAAM,OAASnC,EAAIwC,IAAQE,EAAM,EAC3DC,KACAC,GACApB,EAAGgB,EACHK,EAAGJ,EACHK,EAAG,OAAS9C,EAAIwC,GAAQC,EACxBM,EAAG,EACHC,EAAG,EACH/C,EAAG,EACHgD,EAAG,EACHC,EAAG,EACHC,EAAG,EACHf,EAAG,GAcP,GAZI7B,KAAK6C,IAAIR,EAAIE,GAAK,OAClBF,EAAIE,EAAI,GACRR,GAAQA,EAAKe,WACbb,GAAQ,MACRI,EAAIE,EAAI,QACRF,EAAIE,EAAI,EACM,SAARL,IACFG,EAAIC,EAAIJ,EAAO,IACbD,IACAI,EAAIpB,IAGD,KAATgB,EACAG,EAAOJ,GACH,KACA,GACA,KAEA,KACA,EACA,IAEJG,EAAM,OACH,GAAa,IAATF,EACPG,EAAOJ,GACH,KACA,EACA,KAEA,KACA,EACA,GAEJG,EAAM,MACH,CACCF,EAAO,MACLA,EAEN,IAAIvC,EAAI,IAAIqD,KAAK,KAAM,EAAG,GAC1BrD,EAAEsD,QAAQtD,EAAEuD,UAAYhB,EAAO,GAC/BG,GACI1C,EAAEwD,cACFxD,EAAEyD,WAAa,EACfzD,EAAEuD,WAENd,EAAMzC,EAAE0D,SACJnB,EAAO,KACPE,GAAOA,EAAM,GAAK,GAClBH,IACAG,EA+GZ,SAAmBF,EAAMhD,GAErBA,EAAE,IAAM,IACR,IAAIkD,EAAMF,EAAKmB,SAGf,OAFInB,EAAO,KACPE,GAAOA,EAAM,GAAK,GACfA,EArHOkB,CAAU3D,EAAG0C,IAW3B,OATAC,EAAIG,EAAIJ,EAAK,GACbC,EAAII,EAAIL,EAAK,GACbC,EAAI3C,EAAI0C,EAAK,GACbC,EAAIO,EAAIV,EAAO,GACfA,EAAOlC,KAAK4B,MAAMM,EAAO,IACzBG,EAAIM,EAAIT,EAAO,GACfA,EAAOlC,KAAK4B,MAAMM,EAAO,IACzBG,EAAIK,EAAIR,EACRG,EAAIR,EAAIM,EACDE,EApIXtB,EAAY,GAAKA,EAAY,IAAM,4BAEnCA,EAAY,GAAKA,EAAY,IAAM,iCAEnCA,EAAY,GAAKA,EAAY,IAAM,kCAEnCA,EAAY,GAAKA,EAAY,IAAM,uCAEnCA,EAAY,IAAM,8CAElBA,EAAY,IAAM,uDAElBA,EAAY,IAAM,sDAElBA,EAAY,IAAM,+DAwHlBjC,EAAIgD,gBAAkBA,EACtB,IAAIwB,EAAW,IAAIP,KAAK,KAAM,GAAI,GAAI,EAAG,EAAG,GACxCQ,EAAWD,EAASE,UACpBC,EAAW,IAAIV,KAAK,KAAM,EAAG,EAAG,EAAG,EAAG,GAC1C,SAASW,EAAcjE,EAAGqD,GACtB,IAAIa,EAAQlE,EAAE+D,UAKd,OAJIV,EACAa,GAAS,UACJlE,GAAKgE,IACVE,GAAS,QACLA,GAASJ,EAAoE,KAAxD9D,EAAEmE,oBAAsBN,EAASM,uBAAiC,MAMnG9E,EAAI+E,aAHJ,SAAyBpE,GACrB,OAAOA,EAAEqE,SAAS,KAMtB,IAAIC,EAAkB,WAClB,IAAIC,EAA8B,2BAClC,SAASC,EAAchF,GACnB,OAA0B,GAAnBA,EAAEiF,QAAQ,KAAajF,EAAIA,EAAEkF,QAAQH,EAA6B,MAG7E,IAAII,EAA8B,8BAC9BC,EAAwB,eAkC5B,OAZA,SAA8B5E,GAC1B,IAAI6E,EAAItE,KAAK4B,MAAM5B,KAAKuE,IAAIvE,KAAK6C,IAAIpD,IAAMO,KAAKwE,QAShD,OAAOP,EA/BX,SAAuBhF,GACnB,OAAuB,GAAnBA,EAAEiF,QAAQ,KACHjF,EACJA,EAAEkF,QAAQC,EAA6B,OAAOD,QAAQE,EAAuB,SA4B/DI,EARjBH,IAAM,GAAKA,IAAM,EACb7E,EAAEiF,YAAY,GAAKJ,GAClBtE,KAAK6C,IAAIyB,IAAM,EAnB5B,SAAmB7E,GACf,IAAIkF,EAAIlF,EAAI,EAAI,GAAK,GACjBR,EAAIgF,EAAcxE,EAAEmF,QAAQ,KAChC,OAAI3F,EAAEE,QAAUwF,EACL1F,GACXA,EAAIQ,EAAEiF,YAAY,KACZvF,QAAUwF,EACL1F,EACJQ,EAAEoF,cAAc,GAYfC,CAAUrF,GACH,KAAN6E,EACD7E,EAAEmF,QAAQ,IAAIG,OAAO,EAAG,IAXpC,SAAmBtF,GACf,IAAIR,EAAIgF,EAAcxE,EAAEmF,QAAQ,KAChC,OAAO3F,EAAEE,QAAUM,EAAI,EAAI,GAAK,KAAa,MAANR,GAAmB,OAANA,EAAaQ,EAAEiF,YAAY,GAAKzF,EAW5E+F,CAAUvF,IACmBwF,iBAvCvB,GA2DtB,SAASC,EAAYzF,EAAGsC,GACpB,cAAetC,GACf,IAAK,SACD,OAAOA,EACX,IAAK,UACD,OAAOA,EAAI,OAAS,QACxB,IAAK,SACD,OAAY,EAAJA,KAAWA,EAAIA,EAAEqE,SAAS,IAAMC,EAAgBtE,GAC5D,IAAK,YACD,MAAO,GACX,IAAK,SACD,GAAS,MAALA,EACA,MAAO,GACX,GAAIA,aAAasD,KACb,OAAOoC,EAAO,GAAIzB,EAAcjE,EAAGsC,GAAQA,EAAKe,UAAWf,GAEnE,MAAM,IAAIqD,MAAM,wCAA0C3F,GAhC9DX,EAAIuG,aAAetB,EAkCnBjF,EAAIwG,SAAWJ,EASG,aAAaK,MAAM,IAErC,SAASC,EAAWC,EAAMC,EAAKC,EAAKC,GAChC,IAAuCvD,EAAnCpD,EAAI,GAAI4G,EAAK,EAAGC,EAAK,EAAGtD,EAAImD,EAAInD,EAAQuD,EAAO,EACnD,OAAQN,GACR,KAAK,GAEDjD,EAAImD,EAAInD,EAAI,IAEhB,KAAK,IAED,OAAQkD,EAAIvG,QACZ,KAAK,EACL,KAAK,EACDkD,EAAMG,EAAI,IACVuD,EAAO,EACP,MACJ,QACI1D,EAAMG,EAAI,IACVuD,EAAO,EAGX,MACJ,KAAK,IAED,OAAQL,EAAIvG,QACZ,KAAK,EACL,KAAK,EACDkD,EAAMsD,EAAIlD,EACVsD,EAAOL,EAAIvG,OACX,MACJ,KAAK,EACD,OAAOuB,EAAOiF,EAAIlD,EAAI,GAAG,GAC7B,KAAK,EACD,OAAO/B,EAAOiF,EAAIlD,EAAI,GAAG,GAC7B,QACI,OAAO/B,EAAOiF,EAAIlD,EAAI,GAAG,GAE7B,MACJ,KAAK,IAED,OAAQiD,EAAIvG,QACZ,KAAK,EACL,KAAK,EACDkD,EAAMsD,EAAIjG,EACVqG,EAAOL,EAAIvG,OACX,MACJ,KAAK,EACD,OAAOsB,EAAKkF,EAAI9D,GAAG,GACvB,QACI,OAAOpB,EAAKkF,EAAI9D,GAAG,GAEvB,MACJ,KAAK,IAED,OAAQ6D,EAAIvG,QACZ,KAAK,EACL,KAAK,EACDkD,EAAM,GAAKsD,EAAIjD,EAAI,IAAM,GACzBqD,EAAOL,EAAIvG,OACX,MACJ,QACI,KAAM,oBAAsBuG,EAEhC,MACJ,KAAK,GAED,OAAQA,EAAIvG,QACZ,KAAK,EACL,KAAK,EACDkD,EAAMsD,EAAIjD,EACVqD,EAAOL,EAAIvG,OACX,MACJ,QACI,KAAM,oBAAsBuG,EAEhC,MACJ,KAAK,GAED,OAAQA,EAAIvG,QACZ,KAAK,EACL,KAAK,EACDkD,EAAMsD,EAAIhD,EACVoD,EAAOL,EAAIvG,OACX,MACJ,QACI,KAAM,sBAAwBuG,EAElC,MACJ,KAAK,IAED,GAAW,KAAPA,GAAqB,MAAPA,GAAsB,MAAPA,GAAsB,OAAPA,GAAuB,QAAPA,EAC5D,KAAM,sBAAwBA,EAClC,OAAc,IAAVC,EAAIpD,GAAmB,KAAPmD,GAAqB,MAAPA,GAG9BI,EADAF,GAAO,EACM,IAARA,EAAY,IAAO,IAEX,IAARA,EAAY,GAAK,GAC1BC,EAAK7F,KAAKG,MAAM2F,GAAMH,EAAI/C,EAAI+C,EAAIpD,MACxB,GAAKuD,IACXD,EAAK,GACG,MAARH,EACc,IAAPG,EAAW,IAAM,GAAKA,EAAKC,GACtC7G,EAAIO,EAAKqG,EAAI,EAAID,GACL,OAARF,EACOzG,EAAE8F,OAAO,EAAG,GAChB,IAAM9F,EAAE8F,OAAO,EAAGW,EAAIvG,OAAS,KAb3BK,EAAKmG,EAAI/C,EAAG8C,EAAIvG,QAc/B,KAAK,GAED,OAAQuG,GACR,IAAK,MACL,IAAK,OACDrD,EAAc,GAARsD,EAAI1E,EAAS0E,EAAIjD,EACvB,MACJ,IAAK,MACL,IAAK,OACDL,EAA6B,IAAd,GAARsD,EAAI1E,EAAS0E,EAAIjD,GAAUiD,EAAIhD,EACtC,MACJ,IAAK,MACL,IAAK,OACDN,EAA4C,IAAd,IAAd,GAARsD,EAAI1E,EAAS0E,EAAIjD,GAAUiD,EAAIhD,GAAU3C,KAAKG,MAAMwF,EAAI/C,EAAI+C,EAAIpD,GACxE,MACJ,QACI,KAAM,uBAAyBmD,EAEnCK,EAAsB,IAAfL,EAAIvG,OAAe,EAAI,EAC9B,MACJ,KAAK,IAEDkD,EAAMG,EACNuD,EAAO,EAIX,OADaA,EAAO,EAAIvG,EAAK6C,EAAK0D,GAAQ,GAI9C,SAASC,EAASzF,GAEd,GAAIA,EAAEpB,QADE,EAEJ,OAAOoB,EAEX,IADA,IAAI0F,EAAI1F,EAAEpB,OAHF,EAGcF,EAAIsB,EAAEwE,OAAO,EAAGkB,GAC/BA,GAAK1F,EAAEpB,OAAQ8G,GAJd,EAKJhH,IAAMA,EAAEE,OAAS,EAAI,IAAM,IAAMoB,EAAEwE,OAAOkB,EALtC,GAMR,OAAOhH,EAEX,IAAIiH,EAAY,WACZ,IAAIC,EAAO,KAiDPC,EAAQ,yBASRC,EAAO,iBACPC,EAAa,WACbC,EAAQ,sBACZ,SAASC,EAAMC,GAEX,IADA,IAAYC,EAARzH,EAAI,GACCC,EAAI,EAAGA,GAAKuH,EAAItH,SAAUD,EAC/B,OAAQwH,EAAKD,EAAIjG,WAAWtB,IAC5B,KAAK,GACD,MACJ,KAAK,GACDD,GAAK,IACL,MACJ,KAAK,GACDA,GAAK,IACL,MACJ,QACIA,GAAK0H,OAAOC,aAAaF,GAEjC,OAAOzH,EAEX,SAAS4H,EAAIlB,EAAKjG,GACd,IAAIoH,EAAK9G,KAAKC,IAAI,GAAIP,GACtB,MAAO,GAAKM,KAAKG,MAAMwF,EAAMmB,GAAMA,EAEvC,SAASC,EAAIpB,EAAKjG,GACd,IAAIsH,EAAQrB,EAAM3F,KAAK4B,MAAM+D,GAAMmB,EAAK9G,KAAKC,IAAI,GAAIP,GACrD,OAAIA,GAAK,GAAKM,KAAKG,MAAM6G,EAAQF,IAAK3H,OAC3B,EACJa,KAAKG,MAAM6G,EAAQF,GAa9B,SAASG,EAAcxB,EAAMC,EAAKC,GAC9B,GAA2B,KAAvBF,EAAKjF,WAAW,KAAckF,EAAIwB,MAAMZ,GAAa,CACrD,IAAIa,EAAOzB,EAAIvB,QAAQ,OAAQ,IAAIA,QAAQ,MAAO,IAAIA,QAAQ,KAAM,IACpE,OAAIwB,GAAO,EACAsB,EAAc,IAAKE,EAAMxB,GAC7B,IAAMsB,EAAc,IAAKE,GAAOxB,GAAO,IAElD,GAAuC,KAAnCD,EAAIlF,WAAWkF,EAAIvG,OAAS,GAC5B,OAtGR,SAAsBsG,EAAMC,EAAKC,GAE7B,IADA,IAAIyB,EAAM1B,EAAIvG,OAAS,EACY,KAA5BuG,EAAIlF,WAAW4G,EAAM,MACtBA,EACN,OAAOlB,EAAUT,EAAMC,EAAIX,OAAO,EAAGqC,GAAMzB,EAAM3F,KAAKC,IAAI,GAAI,GAAKyF,EAAIvG,OAASiI,KAkGrEC,CAAa5B,EAAMC,EAAKC,GACnC,IAA0B,IAAtBD,EAAIxB,QAAQ,KACZ,OA5GR,SAAuBuB,EAAMC,EAAKC,GAC9B,IAAI2B,EAAO5B,EAAIvB,QAAQgC,EAAM,IAAKoB,EAAM7B,EAAIvG,OAASmI,EAAKnI,OAC1D,OAAO+G,EAAUT,EAAM6B,EAAM3B,EAAM3F,KAAKC,IAAI,GAAI,EAAIsH,IAAQlI,EAAK,IAAKkI,GA0G3DC,CAAc/B,EAAMC,EAAKC,GACpC,IAA0B,IAAtBD,EAAIxB,QAAQ,KACZ,OApGR,SAASuD,EAAc/B,EAAKC,GACxB,IAAI1G,EACAmI,EAAM1B,EAAIxB,QAAQ,KAAOwB,EAAIxB,QAAQ,KAAO,EAChD,GAAIwB,EAAIwB,MAAM,eAAgB,CAC1B,GAAW,GAAPvB,EACA,MAAO,SACN,GAAIA,EAAM,EACX,MAAO,IAAM8B,EAAc/B,GAAMC,GACrC,IAAI+B,EAAShC,EAAIxB,QAAQ,MACT,IAAZwD,IACAA,EAAShC,EAAIxB,QAAQ,MACzB,IAAIyD,EAAK3H,KAAK4B,MAAM5B,KAAKuE,IAAIoB,GAAO3F,KAAKwE,QAAUkD,EAInD,GAHIC,EAAK,IACLA,GAAMD,IAEc,KADxBzI,GAAK0G,EAAM3F,KAAKC,IAAI,GAAI0H,IAAKjD,YAAY0C,EAAM,GAAKM,EAASC,GAAMD,IAC7DxD,QAAQ,KAAa,CACvB,IAAI0D,EAAQ5H,KAAK4B,MAAM5B,KAAKuE,IAAIoB,GAAO3F,KAAKwE,QAK5C,KAJwB,IAApBvF,EAAEiF,QAAQ,KACVjF,EAAIA,EAAEG,OAAO,GAAK,IAAMH,EAAE8F,OAAO,GAAK,MAAQ6C,EAAQ3I,EAAEE,OAASwI,GAEjE1I,GAAK,MAAQ2I,EAAQD,GACC,OAAnB1I,EAAE8F,OAAO,EAAG,IAEf9F,GADAA,EAAIA,EAAEG,OAAO,GAAKH,EAAE8F,OAAO,EAAG2C,GAAU,IAAMzI,EAAE8F,OAAO,EAAI2C,IACrDvD,QAAQ,aAAc,MAAMA,QAAQ,QAAS,MAEvDlF,EAAIA,EAAEkF,QAAQ,MAAO,KAEzBlF,EAAIA,EAAEkF,QAAQ,2BAA4B,SAAU0D,EAAIC,EAAIC,EAAIC,GAC5D,OAAOF,EAAKC,EAAKC,EAAGjD,OAAO,GAAI2C,EAASC,GAAMD,GAAU,IAAMM,EAAGjD,OAAO4C,GAAM,WAGlF1I,EAAI0G,EAAId,cAAcuC,GAK1B,OAJI1B,EAAIwB,MAAM,WAAajI,EAAEiI,MAAM,cAC/BjI,EAAIA,EAAE8F,OAAO,EAAG9F,EAAEE,OAAS,GAAK,IAAMF,EAAEG,OAAOH,EAAEE,OAAS,IAC1DuG,EAAIwB,MAAM,QAAUjI,EAAEiI,MAAM,SAC5BjI,EAAIA,EAAEkF,QAAQ,MAAO,MAClBlF,EAAEkF,QAAQ,IAAK,KAgEXsD,CAAc/B,EAAKC,GAC9B,GAA0B,KAAtBD,EAAIlF,WAAW,GACf,MAAO,IAAMyG,EAAcxB,EAAMC,EAAIX,OAAwB,KAAjBW,EAAItG,OAAO,GAAY,EAAI,GAAIuG,GAC/E,IAAI1G,EACAgJ,EAAGC,EAAIC,EAAIC,EAAOpI,KAAK6C,IAAI8C,GAAM0C,EAAO1C,EAAM,EAAI,IAAM,GAC5D,GAAID,EAAIwB,MAAM,SACV,OAAOmB,EAAOnI,EAAMkI,EAAM1C,EAAIvG,QAClC,GAAIuG,EAAIwB,MAAM,WAIV,MAFU,OADVjI,EAAIiB,EAAMyF,EAAK,MAEX1G,EAAI,IACDA,EAAEE,OAASuG,EAAIvG,OAASF,EAAIuH,EAAMd,EAAIX,OAAO,EAAGW,EAAIvG,OAASF,EAAEE,SAAWF,EAErF,GAAIgJ,EAAIvC,EAAIwB,MAAMd,GACd,OA3ER,SAAsB6B,EAAGG,EAAMC,GAC3B,IAAIC,EAAMC,SAASN,EAAE,GAAI,IAAKO,EAAKxI,KAAKG,MAAMiI,EAAOE,GAAMG,EAAOzI,KAAK4B,MAAM4G,EAAKF,GAC9EI,EAAMF,EAAKC,EAAOH,EAAKK,EAAML,EACjC,OAAOD,GAAiB,IAATI,EAAa,GAAK,GAAKA,GAAQ,KAAe,IAARC,EAAYrJ,EAAK,IAAK4I,EAAE,GAAG9I,OAAS,EAAI8I,EAAE,GAAG9I,QAAUS,EAAK8I,EAAKT,EAAE,GAAG9I,QAAU8I,EAAE,GAAK,IAAMA,EAAE,GAAKzI,EAAKmJ,EAAKV,EAAE,GAAG9I,SAwE7JyJ,CAAaX,EAAGG,EAAMC,GACjC,GAAI3C,EAAIwB,MAAM,UACV,OAAOmB,EAAOnI,EAAMkI,EAAM1C,EAAIvG,OAASuG,EAAIxB,QAAQ,MACvD,GAAI+D,EAAIvC,EAAIwB,MAAMb,GAId,OAHApH,EAAI4H,EAAIlB,EAAKsC,EAAE,GAAG9I,QAAQgF,QAAQ,aAAc,MAAQqC,EAAMyB,EAAE,KAAK9D,QAAQ,MAAO,IAAMqC,EAAMyB,EAAE,KAAK9D,QAAQ,WAAY,SAAU0D,EAAIC,GACrI,MAAO,IAAMA,EAAKzI,EAAK,IAAKmH,EAAMyB,EAAE,IAAI9I,OAAS2I,EAAG3I,WAE1B,IAAvBuG,EAAIxB,QAAQ,MAAejF,EAAIA,EAAEkF,QAAQ,OAAQ,KAG5D,GADAuB,EAAMA,EAAIvB,QAAQ,YAAa,MAC3B8D,EAAIvC,EAAIwB,MAAM,gBACd,OAAOmB,EAAOxB,EAAIuB,EAAMH,EAAE,GAAG9I,QAAQgF,QAAQ,kBAAmB,OAAOA,QAAQ,YAAa,OAAOA,QAAQ,OAAQ8D,EAAE,GAAG9I,OAAS,KAAO,KAE5I,GAAI8I,EAAIvC,EAAIwB,MAAM,qBACd,OAAOmB,EAAOrC,EAAS9F,EAAMkI,EAAM,IACvC,GAAIH,EAAIvC,EAAIwB,MAAM,qBACd,OAAOvB,EAAM,EAAI,IAAMsB,EAAcxB,EAAMC,GAAMC,GAAOK,EAAS,IAAMhG,KAAK4B,MAAM+D,GArD1F,SAAeA,EAAKjG,GAChB,OAAIA,GAAK,GAAKM,KAAKG,OAAOwF,EAAM3F,KAAK4B,MAAM+D,IAAQ3F,KAAKC,IAAI,GAAIP,KAAKP,OAC1D,EAEJ,EAiDsF0J,CAAMlD,EAAKsC,EAAE,GAAG9I,UAAY,IAAMK,EAAKuH,EAAIpB,EAAKsC,EAAE,GAAG9I,QAAS8I,EAAE,GAAG9I,QAEhK,GAAI8I,EAAIvC,EAAIwB,MAAM,YACd,OAAOD,EAAcxB,EAAMC,EAAIvB,QAAQ,SAAU,IAAKwB,GAC1D,GAAIsC,EAAIvC,EAAIwB,MAAM,2BAGd,OAFAjI,EAAIF,EAAQkI,EAAcxB,EAAMC,EAAIvB,QAAQ,SAAU,IAAKwB,IAC3DuC,EAAK,EACEnJ,EAAQA,EAAQ2G,EAAIvB,QAAQ,MAAO,KAAKA,QAAQ,QAAS,SAAUnF,GACtE,OAAOkJ,EAAKjJ,EAAEE,OAASF,EAAEG,OAAO8I,KAAc,MAANlJ,EAAY,IAAM,MAGlE,GAAI0G,EAAIwB,MAAMX,GAEV,MAAO,KADPtH,EAAIgI,EAAcxB,EAAM,aAAcE,IACvBZ,OAAO,EAAG,GAAK,KAAO9F,EAAE8F,OAAO,EAAG,GAAK,IAAM9F,EAAE8F,OAAO,GAEzE,IAAI+D,EAAK,GACT,GAAIb,EAAIvC,EAAIwB,MAAM,+BAYd,OAXAgB,EAAKlI,KAAK+I,IAAId,EAAE,GAAG9I,OAAQ,GAC3BgJ,EAAKnH,EAAKoH,EAAMpI,KAAKC,IAAI,GAAIiI,GAAM,GAAG,GACtCjJ,EAAI,GAAKoJ,EAEuB,MADhCS,EAAK5C,EAAU,IAAK+B,EAAE,GAAIE,EAAG,KACtB/I,OAAO0J,EAAG3J,OAAS,KACtB2J,EAAKA,EAAG/D,OAAO,EAAG+D,EAAG3J,OAAS,GAAK,KACvCF,GAAK6J,EAAKb,EAAE,GAAK,IAAMA,EAAE,IACzBa,EAAKjJ,EAAMsI,EAAG,GAAID,IACX/I,OAAS8I,EAAE,GAAG9I,SACjB2J,EAAKtC,EAAMyB,EAAE,GAAGlD,OAAOkD,EAAE,GAAG9I,OAAS2J,EAAG3J,SAAW2J,GACvD7J,GAAK6J,EAGT,GAAIb,EAAIvC,EAAIwB,MAAM,iCAGd,OAFAgB,EAAKlI,KAAK+I,IAAI/I,KAAKgJ,IAAIf,EAAE,GAAG9I,OAAQ8I,EAAE,GAAG9I,QAAS,GAE3CkJ,IADPF,EAAKnH,EAAKoH,EAAMpI,KAAKC,IAAI,GAAIiI,GAAM,GAAG,IACpB,KAAOC,EAAG,GAAK,GAAK,MAAQ,KAAOA,EAAG,GAAKvI,EAAKuI,EAAG,GAAID,GAAMD,EAAE,GAAK,IAAMA,EAAE,GAAKpI,EAAMsI,EAAG,GAAID,GAAM7I,EAAK,IAAK,EAAI6I,EAAK,EAAID,EAAE,GAAG9I,OAAS8I,EAAE,GAAG9I,SAEpK,GAAI8I,EAAIvC,EAAIwB,MAAM,YAEd,OADAjI,EAAIiB,EAAMyF,EAAK,GACXD,EAAIvG,QAAUF,EAAEE,OACTF,EACJuH,EAAMd,EAAIX,OAAO,EAAGW,EAAIvG,OAASF,EAAEE,SAAWF,EAEzD,GAAIgJ,EAAIvC,EAAIwB,MAAM,uBAAwB,CACtCjI,EAAI,GAAK0G,EAAIf,QAAQ5E,KAAK+I,IAAId,EAAE,GAAG9I,OAAQ,KAAKgF,QAAQ,YAAa,MACrE+D,EAAKjJ,EAAEiF,QAAQ,KACf,IAAI+E,EAAOvD,EAAIxB,QAAQ,KAAOgE,EAAIgB,EAAOxD,EAAIvG,OAASF,EAAEE,OAAS8J,EACjE,OAAOzC,EAAMd,EAAIX,OAAO,EAAGkE,GAAQhK,EAAIyG,EAAIX,OAAOW,EAAIvG,OAAS+J,IAEnE,GAAIjB,EAAIvC,EAAIwB,MAAM,sBAEd,OADAgB,EAAKnB,EAAIpB,EAAKsC,EAAE,GAAG9I,QACZwG,EAAM,EAAI,IAAMsB,EAAcxB,EAAMC,GAAMC,GAAOK,EAhGhE,SAAaL,GACT,OAAIA,EAAM,YAAcA,GAAO,WACpB,IAAMA,GAAO,EAAU,EAANA,EAAUA,EAAM,EAAI,GACzC,GAAK3F,KAAK4B,MAAM+D,GA6F8CwD,CAAIxD,IAAMxB,QAAQ,aAAc,OAAOA,QAAQ,QAAS,SAAU0D,GAC/H,MAAO,OAASA,EAAG1I,OAAS,EAAIK,EAAK,EAAG,EAAIqI,EAAG1I,QAAU,IAAM0I,IAC9D,IAAMrI,EAAK0I,EAAID,EAAE,GAAG9I,QAE7B,OAAQuG,GACR,IAAK,aACD,OAAOuB,EAAcxB,EAAM,WAAYE,GAC3C,IAAK,UACL,IAAK,SACL,IAAK,QACD,IAAI3G,EAAIgH,EAAS9F,EAAMkI,EAAM,IAC7B,MAAa,MAANpJ,EAAYqJ,EAAOrJ,EAAI,GAClC,IAAK,aACD,OAAOiI,EAAcxB,EAAM,aAAcE,GAAKxB,QAAQ,OAAQ,KAClE,IAAK,WACD,OAAO8C,EAAcxB,EAAM,WAAYE,GAAKxB,QAAQ,OAAQ,KAGhE,MAAM,IAAIiB,MAAM,uBAAyBM,EAAM,KA8CnD,SAAS0D,EAAc3D,EAAMC,EAAKC,GAC9B,GAA2B,KAAvBF,EAAKjF,WAAW,KAAckF,EAAIwB,MAAMZ,GAAa,CACrD,IAAIa,EAAOzB,EAAIvB,QAAQ,OAAQ,IAAIA,QAAQ,MAAO,IAAIA,QAAQ,KAAM,IACpE,OAAIwB,GAAO,EACAyD,EAAc,IAAKjC,EAAMxB,GAC7B,IAAMyD,EAAc,IAAKjC,GAAOxB,GAAO,IAElD,GAAuC,KAAnCD,EAAIlF,WAAWkF,EAAIvG,OAAS,GAC5B,OApDR,SAAuBsG,EAAMC,EAAKC,GAE9B,IADA,IAAIyB,EAAM1B,EAAIvG,OAAS,EACY,KAA5BuG,EAAIlF,WAAW4G,EAAM,MACtBA,EACN,OAAOlB,EAAUT,EAAMC,EAAIX,OAAO,EAAGqC,GAAMzB,EAAM3F,KAAKC,IAAI,GAAI,GAAKyF,EAAIvG,OAASiI,KAgDrEiC,CAAc5D,EAAMC,EAAKC,GACpC,IAA0B,IAAtBD,EAAIxB,QAAQ,KACZ,OAhDR,SAAwBuB,EAAMC,EAAKC,GAC/B,IAAI2B,EAAO5B,EAAIvB,QAAQgC,EAAM,IAAKoB,EAAM7B,EAAIvG,OAASmI,EAAKnI,OAC1D,OAAO+G,EAAUT,EAAM6B,EAAM3B,EAAM3F,KAAKC,IAAI,GAAI,EAAIsH,IAAQlI,EAAK,IAAKkI,GA8C3D+B,CAAe7D,EAAMC,EAAKC,GACrC,IAA0B,IAAtBD,EAAIxB,QAAQ,KACZ,OA9CR,SAASqF,EAAe7D,EAAKC,GACzB,IAAI1G,EACAmI,EAAM1B,EAAIxB,QAAQ,KAAOwB,EAAIxB,QAAQ,KAAO,EAChD,GAAIwB,EAAIwB,MAAM,eAAgB,CAC1B,GAAW,GAAPvB,EACA,MAAO,SACN,GAAIA,EAAM,EACX,MAAO,IAAM4D,EAAe7D,GAAMC,GACtC,IAAI+B,EAAShC,EAAIxB,QAAQ,MACT,IAAZwD,IACAA,EAAShC,EAAIxB,QAAQ,MACzB,IAAIyD,EAAK3H,KAAK4B,MAAM5B,KAAKuE,IAAIoB,GAAO3F,KAAKwE,QAAUkD,EAInD,GAHIC,EAAK,IACLA,GAAMD,KACVzI,GAAK0G,EAAM3F,KAAKC,IAAI,GAAI0H,IAAKjD,YAAY0C,EAAM,GAAKM,EAASC,GAAMD,IAC5DR,MAAM,QAAS,CAClB,IAAIU,EAAQ5H,KAAK4B,MAAM5B,KAAKuE,IAAIoB,GAAO3F,KAAKwE,SACpB,IAApBvF,EAAEiF,QAAQ,KACVjF,EAAIA,EAAEG,OAAO,GAAK,IAAMH,EAAE8F,OAAO,GAAK,MAAQ6C,EAAQ3I,EAAEE,OAASwI,GAEjE1I,GAAK,MAAQ2I,EAAQD,GACzB1I,EAAIA,EAAEkF,QAAQ,MAAO,KAEzBlF,EAAIA,EAAEkF,QAAQ,2BAA4B,SAAU0D,EAAIC,EAAIC,EAAIC,GAC5D,OAAOF,EAAKC,EAAKC,EAAGjD,OAAO,GAAI2C,EAASC,GAAMD,GAAU,IAAMM,EAAGjD,OAAO4C,GAAM,WAGlF1I,EAAI0G,EAAId,cAAcuC,GAK1B,OAJI1B,EAAIwB,MAAM,WAAajI,EAAEiI,MAAM,cAC/BjI,EAAIA,EAAE8F,OAAO,EAAG9F,EAAEE,OAAS,GAAK,IAAMF,EAAEG,OAAOH,EAAEE,OAAS,IAC1DuG,EAAIwB,MAAM,QAAUjI,EAAEiI,MAAM,SAC5BjI,EAAIA,EAAEkF,QAAQ,MAAO,MAClBlF,EAAEkF,QAAQ,IAAK,KAcXoF,CAAe7D,EAAKC,GAC/B,GAA0B,KAAtBD,EAAIlF,WAAW,GACf,MAAO,IAAM4I,EAAc3D,EAAMC,EAAIX,OAAwB,KAAjBW,EAAItG,OAAO,GAAY,EAAI,GAAIuG,GAC/E,IAAI1G,EACAgJ,EAAGC,EAAIC,EAAIC,EAAOpI,KAAK6C,IAAI8C,GAAM0C,EAAO1C,EAAM,EAAI,IAAM,GAC5D,GAAID,EAAIwB,MAAM,SACV,OAAOmB,EAAO7I,EAAK4I,EAAM1C,EAAIvG,QACjC,GAAIuG,EAAIwB,MAAM,WAIV,OAHAjI,EAAI,GAAK0G,EACG,IAARA,IACA1G,EAAI,IACDA,EAAEE,OAASuG,EAAIvG,OAASF,EAAIuH,EAAMd,EAAIX,OAAO,EAAGW,EAAIvG,OAASF,EAAEE,SAAWF,EAErF,GAAIgJ,EAAIvC,EAAIwB,MAAMd,GACd,OAjOR,SAAsB6B,EAAGG,EAAMC,GAC3B,OAAOA,GAAiB,IAATD,EAAa,GAAK,GAAKA,GAAQ/I,EAAK,IAAK4I,EAAE,GAAG9I,OAAS,EAAI8I,EAAE,GAAG9I,QAgOpEqK,CAAavB,EAAGG,EAAMC,GACjC,GAAI3C,EAAIwB,MAAM,UACV,OAAOmB,EAAO7I,EAAK4I,EAAM1C,EAAIvG,OAASuG,EAAIxB,QAAQ,MACtD,GAAI+D,EAAIvC,EAAIwB,MAAMb,GAKd,OAHApH,GADAA,GAAK,GAAK0G,GAAKxB,QAAQ,aAAc,MAAQqC,EAAMyB,EAAE,KAAK9D,QAAQ,MAAO,IAAMqC,EAAMyB,EAAE,MACjF9D,QAAQ,WAAY,SAAU0D,EAAIC,GACpC,MAAO,IAAMA,EAAKzI,EAAK,IAAKmH,EAAMyB,EAAE,IAAI9I,OAAS2I,EAAG3I,WAE1B,IAAvBuG,EAAIxB,QAAQ,MAAejF,EAAIA,EAAEkF,QAAQ,OAAQ,KAG5D,GADAuB,EAAMA,EAAIvB,QAAQ,YAAa,MAC3B8D,EAAIvC,EAAIwB,MAAM,gBACd,OAAOmB,GAAQ,GAAKD,GAAMjE,QAAQ,kBAAmB,OAAOA,QAAQ,YAAa,OAAOA,QAAQ,OAAQ8D,EAAE,GAAG9I,OAAS,KAAO,KAEjI,GAAI8I,EAAIvC,EAAIwB,MAAM,qBACd,OAAOmB,EAAOrC,EAAS,GAAKoC,GAChC,GAAIH,EAAIvC,EAAIwB,MAAM,qBACd,OAAOvB,EAAM,EAAI,IAAMyD,EAAc3D,EAAMC,GAAMC,GAAOK,EAAS,GAAKL,GAAO,IAAMtG,EAAK,IAAK4I,EAAE,GAAG9I,QAEtG,GAAI8I,EAAIvC,EAAIwB,MAAM,YACd,OAAOkC,EAAc3D,EAAMC,EAAIvB,QAAQ,SAAU,IAAKwB,GAC1D,GAAIsC,EAAIvC,EAAIwB,MAAM,2BAGd,OAFAjI,EAAIF,EAAQqK,EAAc3D,EAAMC,EAAIvB,QAAQ,SAAU,IAAKwB,IAC3DuC,EAAK,EACEnJ,EAAQA,EAAQ2G,EAAIvB,QAAQ,MAAO,KAAKA,QAAQ,QAAS,SAAUnF,GACtE,OAAOkJ,EAAKjJ,EAAEE,OAASF,EAAEG,OAAO8I,KAAc,MAANlJ,EAAY,IAAM,MAGlE,GAAI0G,EAAIwB,MAAMX,GAEV,MAAO,KADPtH,EAAImK,EAAc3D,EAAM,aAAcE,IACvBZ,OAAO,EAAG,GAAK,KAAO9F,EAAE8F,OAAO,EAAG,GAAK,IAAM9F,EAAE8F,OAAO,GAEzE,IAAI+D,EAAK,GACT,GAAIb,EAAIvC,EAAIwB,MAAM,+BAYd,OAXAgB,EAAKlI,KAAK+I,IAAId,EAAE,GAAG9I,OAAQ,GAC3BgJ,EAAKnH,EAAKoH,EAAMpI,KAAKC,IAAI,GAAIiI,GAAM,GAAG,GACtCjJ,EAAI,GAAKoJ,EAEuB,MADhCS,EAAK5C,EAAU,IAAK+B,EAAE,GAAIE,EAAG,KACtB/I,OAAO0J,EAAG3J,OAAS,KACtB2J,EAAKA,EAAG/D,OAAO,EAAG+D,EAAG3J,OAAS,GAAK,KACvCF,GAAK6J,EAAKb,EAAE,GAAK,IAAMA,EAAE,IACzBa,EAAKjJ,EAAMsI,EAAG,GAAID,IACX/I,OAAS8I,EAAE,GAAG9I,SACjB2J,EAAKtC,EAAMyB,EAAE,GAAGlD,OAAOkD,EAAE,GAAG9I,OAAS2J,EAAG3J,SAAW2J,GACvD7J,GAAK6J,EAGT,GAAIb,EAAIvC,EAAIwB,MAAM,iCAGd,OAFAgB,EAAKlI,KAAK+I,IAAI/I,KAAKgJ,IAAIf,EAAE,GAAG9I,OAAQ8I,EAAE,GAAG9I,QAAS,GAE3CkJ,IADPF,EAAKnH,EAAKoH,EAAMpI,KAAKC,IAAI,GAAIiI,GAAM,GAAG,IACpB,KAAOC,EAAG,GAAK,GAAK,MAAQ,KAAOA,EAAG,GAAKvI,EAAKuI,EAAG,GAAID,GAAMD,EAAE,GAAK,IAAMA,EAAE,GAAKpI,EAAMsI,EAAG,GAAID,GAAM7I,EAAK,IAAK,EAAI6I,EAAK,EAAID,EAAE,GAAG9I,OAAS8I,EAAE,GAAG9I,SAEpK,GAAI8I,EAAIvC,EAAIwB,MAAM,YAEd,OADAjI,EAAI,GAAK0G,EACLD,EAAIvG,QAAUF,EAAEE,OACTF,EACJuH,EAAMd,EAAIX,OAAO,EAAGW,EAAIvG,OAASF,EAAEE,SAAWF,EAEzD,GAAIgJ,EAAIvC,EAAIwB,MAAM,sBAAuB,CACrCjI,EAAI,GAAK0G,EAAIf,QAAQ5E,KAAK+I,IAAId,EAAE,GAAG9I,OAAQ,KAAKgF,QAAQ,YAAa,MACrE+D,EAAKjJ,EAAEiF,QAAQ,KACf,IAAI+E,EAAOvD,EAAIxB,QAAQ,KAAOgE,EAAIgB,EAAOxD,EAAIvG,OAASF,EAAEE,OAAS8J,EACjE,OAAOzC,EAAMd,EAAIX,OAAO,EAAGkE,GAAQhK,EAAIyG,EAAIX,OAAOW,EAAIvG,OAAS+J,IAEnE,GAAIjB,EAAIvC,EAAIwB,MAAM,sBACd,OAAOvB,EAAM,EAAI,IAAMyD,EAAc3D,EAAMC,GAAMC,GAAOK,EAAS,GAAKL,GAAKxB,QAAQ,aAAc,OAAOA,QAAQ,QAAS,SAAU0D,GAC/H,MAAO,OAASA,EAAG1I,OAAS,EAAIK,EAAK,EAAG,EAAIqI,EAAG1I,QAAU,IAAM0I,IAC9D,IAAMrI,EAAK,EAAGyI,EAAE,GAAG9I,QAE5B,OAAQuG,GACR,IAAK,UACL,IAAK,SACL,IAAK,QACD,IAAI1G,EAAIgH,EAAS,GAAKoC,GACtB,MAAa,MAANpJ,EAAYqJ,EAAOrJ,EAAI,GAClC,QACI,GAAI0G,EAAIwB,MAAM,aACV,OAAOkC,EAAc3D,EAAMC,EAAI+D,MAAM,EAAG/D,EAAIgE,YAAY,MAAO/D,GAAOa,EAAMd,EAAI+D,MAAM/D,EAAIgE,YAAY,OAE9G,MAAM,IAAItE,MAAM,uBAAyBM,EAAM,KAEnD,OAAO,SAAmBD,EAAMC,EAAKC,GACjC,OAAc,EAANA,KAAaA,EAAMyD,EAAc3D,EAAMC,EAAKC,GAAOsB,EAAcxB,EAAMC,EAAKC,IA3W5E,GA8WhB,SAASgE,EAAUjE,GAIf,IAHA,IAAIrD,KACAuH,GAAS,EAEJ1K,EAAI,EAAG+G,EAAI,EAAG/G,EAAIwG,EAAIvG,SAAUD,EACrC,OACIwG,EAAIlF,WAAWtB,IACnB,KAAK,GAED0K,GAAUA,EACV,MACJ,KAAK,GACL,KAAK,GACL,KAAK,KAEC1K,EACF,MACJ,KAAK,GAEDmD,EAAIA,EAAIlD,QAAUuG,EAAIX,OAAOkB,EAAG/G,EAAI+G,GACpCA,EAAI/G,EAAI,EAGhB,GADAmD,EAAIA,EAAIlD,QAAUuG,EAAIX,OAAOkB,IACd,IAAX2D,EACA,MAAM,IAAIxE,MAAM,WAAaM,EAAM,0BACvC,OAAOrD,EAEXvD,EAAI+K,OAASF,EACb,IAAIG,EAAU,kCACd,SAASC,EAAYrE,GAIjB,IAHA,IAAIxG,EAAI,EAEJI,EAAI,GAAIL,EAAI,GACTC,EAAIwG,EAAIvG,QACX,OAAQG,EAAIoG,EAAItG,OAAOF,IACvB,IAAK,IACGoB,EAAUoF,EAAKxG,KACfA,GAAK,GACTA,IACA,MACJ,IAAK,IACD,KAC4B,KAAxBwG,EAAIlF,aAAatB,IAAaA,EAAIwG,EAAIvG,WAExCD,EACF,MACJ,IAAK,KAGL,IAAK,IACDA,GAAK,EACL,MACJ,IAAK,MACCA,EACF,MACJ,IAAK,IACL,IAAK,IACD,GAA0B,MAAtBwG,EAAItG,OAAOF,EAAI,IAAoC,MAAtBwG,EAAItG,OAAOF,EAAI,GAC5C,OAAO,EAEf,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IAEL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACD,OAAO,EACX,IAAK,IACL,IAAK,IACL,IAAK,IACD,GAAuC,QAAnCwG,EAAIX,OAAO7F,EAAG,GAAG+F,cACjB,OAAO,EACX,GAAuC,UAAnCS,EAAIX,OAAO7F,EAAG,GAAG+F,cACjB,OAAO,EACX,GAAuC,UAAnCS,EAAIX,OAAO7F,EAAG,GAAG+F,cACjB,OAAO,IACT/F,EACF,MACJ,IAAK,IAED,IADAD,EAAIK,EACuB,MAApBoG,EAAItG,OAAOF,MAAgBA,EAAIwG,EAAIvG,QACtCF,GAAKyG,EAAItG,OAAOF,GACpB,GAAID,EAAEiI,MAAM4C,GACR,OAAO,EACX,MACJ,IAAK,IAEL,IAAK,IACL,IAAK,IACD,KAAO5K,EAAIwG,EAAIvG,SAAW,YAAY+E,QAAQ5E,EAAIoG,EAAItG,SAASF,KAAO,GAAU,MAALI,GAAkC,KAArBoG,EAAItG,OAAOF,EAAI,IAAa,KAAKgF,QAAQwB,EAAItG,OAAOF,EAAI,KAAO,KAEvJ,MACJ,IAAK,IACD,KAAOwG,EAAItG,SAASF,KAAOI,IAE3B,MACJ,IAAK,MACCJ,EACmB,KAAjBwG,EAAItG,OAAOF,IAA8B,KAAjBwG,EAAItG,OAAOF,MACjCA,EACN,MACJ,IAAK,IACL,IAAK,MACCA,EACF,MACJ,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACD,KAAOA,EAAIwG,EAAIvG,QAAU,aAAa+E,QAAQwB,EAAItG,SAASF,KAAO,IAElE,MACJ,IAAK,IAGL,UACMA,EAIV,OAAO,EAGX,SAAS8K,EAAStE,EAAKjG,EAAGsC,EAAMkI,GAI5B,IAHA,IAAgDC,EAAIjE,EAAGS,EAAnDrE,KAAUpD,EAAI,GAAIC,EAAI,EAAGI,EAAI,GAAI6K,EAAM,IACvCC,EAAK,IAEFlL,EAAIwG,EAAIvG,QACX,OAAQG,EAAIoG,EAAItG,OAAOF,IACvB,IAAK,IAED,IAAKoB,EAAUoF,EAAKxG,GAChB,MAAM,IAAIkG,MAAM,0BAA4B9F,EAAI,OAASoG,GAC7DrD,EAAIA,EAAIlD,SACJQ,EAAG,IACHF,EAAG,WAEPP,GAAK,EACL,MACJ,IAAK,IAED,IAAKD,EAAI,GAAmC,MAA9ByH,EAAKhB,EAAIlF,aAAatB,KAAcA,EAAIwG,EAAIvG,QACtDF,GAAK0H,OAAOC,aAAaF,GAC7BrE,EAAIA,EAAIlD,SACJQ,EAAG,IACHF,EAAGR,KAELC,EACF,MACJ,IAAK,KACD,IAAIyF,EAAIe,EAAItG,SAASF,GAAIS,EAAU,MAANgF,GAAmB,MAANA,EAAYA,EAAI,IAC1DtC,EAAIA,EAAIlD,SACJQ,EAAGA,EACHF,EAAGkF,KAELzF,EACF,MACJ,IAAK,IACDmD,EAAIA,EAAIlD,SACJQ,EAAG,IACHF,EAAG,KAEPP,GAAK,EACL,MACJ,IAAK,IAEDmD,EAAIA,EAAIlD,SACJQ,EAAG,IACHF,EAAGA,KAELP,EACF,MACJ,IAAK,IACL,IAAK,IACD,GAA0B,MAAtBwG,EAAItG,OAAOF,EAAI,IAAoC,MAAtBwG,EAAItG,OAAOF,EAAI,GAAY,CACxD,GAAU,MAANgL,GAEU,OADVA,EAAKpI,EAAgBrC,EAAGsC,EAA4B,MAAtB2D,EAAItG,OAAOF,EAAI,KAEzC,MAAO,GAEfmD,EAAIA,EAAIlD,SACJQ,EAAG,IACHF,EAAGiG,EAAIX,OAAO7F,EAAG,IAErBiL,EAAM7K,EACNJ,GAAK,EACL,MAGR,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACDI,EAAIA,EAAE+K,cAEV,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACD,GAAI5K,EAAI,EACJ,MAAO,GACX,GAAU,MAANyK,GAEU,OADVA,EAAKpI,EAAgBrC,EAAGsC,IAEpB,MAAO,QAGf,IADA9C,EAAIK,IACKJ,EAAIwG,EAAIvG,QAAUuG,EAAItG,OAAOF,GAAGmL,gBAAkB/K,GACvDL,GAAKK,EACC,MAANA,GAAmC,MAAtB6K,EAAIE,gBACjB/K,EAAI,KACE,MAANA,IACAA,EAAI8K,GACR/H,EAAIA,EAAIlD,SACJQ,EAAGL,EACHG,EAAGR,GAEPkL,EAAM7K,EACN,MACJ,IAAK,IACL,IAAK,IACL,IAAK,IACD,IAAIuC,GACAlC,EAAGL,EACHG,EAAGH,GA0BP,GAxBU,MAAN4K,IACAA,EAAKpI,EAAgBrC,EAAGsC,IACW,QAAnC2D,EAAIX,OAAO7F,EAAG,GAAG+F,eACP,MAANiF,IACArI,EAAEpC,EAAIyK,EAAGxH,GAAK,GAAK,IAAM,KAC7Bb,EAAElC,EAAI,IACNyK,EAAK,IACLlL,GAAK,GACqC,UAAnCwG,EAAIX,OAAO7F,EAAG,GAAG+F,eACd,MAANiF,IACArI,EAAEpC,EAAIyK,EAAGxH,GAAK,GAAK,KAAO,MAC9Bb,EAAElC,EAAI,IACNT,GAAK,EACLkL,EAAK,KACqC,UAAnC1E,EAAIX,OAAO7F,EAAG,GAAG+F,eACd,MAANiF,IACArI,EAAEpC,EAAIyK,EAAGxH,GAAK,GAAK,KAAO,MAC9Bb,EAAElC,EAAI,IACNT,GAAK,EACLkL,EAAK,MAELvI,EAAElC,EAAI,MACJT,GAEI,MAANgL,GAAsB,MAARrI,EAAElC,EAChB,MAAO,GACX0C,EAAIA,EAAIlD,QAAU0C,EAClBsI,EAAM7K,EACN,MACJ,IAAK,IAED,IADAL,EAAIK,EACuB,MAApBoG,EAAItG,OAAOF,MAAgBA,EAAIwG,EAAIvG,QACtCF,GAAKyG,EAAItG,OAAOF,GACpB,GAAoB,MAAhBD,EAAEwK,OAAO,GACT,KAAM,4BAA8BxK,EAAI,IAC5C,GAAIA,EAAEiI,MAAM4C,GAAU,CAClB,GAAU,MAANI,GAEU,OADVA,EAAKpI,EAAgBrC,EAAGsC,IAEpB,MAAO,GAEfM,EAAIA,EAAIlD,SACJQ,EAAG,IACHF,EAAGR,EAAEoL,eAETF,EAAMlL,EAAEG,OAAO,QACRH,EAAEiF,QAAQ,MAAQ,IACzBjF,GAAKA,EAAEiI,MAAM,sBAAwB,IAAM,IACtC6C,EAAYrE,KACbrD,EAAIA,EAAIlD,SACJQ,EAAG,IACHF,EAAGR,KAGf,MAEJ,IAAK,IACD,GAAU,MAANiL,EAAY,CAEZ,IADAjL,EAAIK,IACKJ,EAAIwG,EAAIvG,QAAkC,OAAvBG,EAAIoG,EAAItG,OAAOF,KACvCD,GAAKK,EACT+C,EAAIA,EAAIlD,SACJQ,EAAG,IACHF,EAAGR,GAEP,MAGR,IAAK,IACL,IAAK,IAED,IADAA,EAAIK,IACKJ,EAAIwG,EAAIvG,QAAU,YAAY+E,QAAQ5E,EAAIoG,EAAItG,OAAOF,KAAO,GACjED,GAAKK,EACT+C,EAAIA,EAAIlD,SACJQ,EAAG,IACHF,EAAGR,GAEP,MACJ,IAAK,IAED,IADAA,EAAIK,EACGoG,EAAItG,SAASF,KAAOI,GACvBL,GAAKK,EACT+C,EAAIA,EAAIlD,SACJQ,EAAGL,EACHG,EAAGR,GAEPkL,EAAM7K,EACN,MACJ,IAAK,MACCJ,EACmB,KAAjBwG,EAAItG,OAAOF,IAA8B,KAAjBwG,EAAItG,OAAOF,MACjCA,EACN,MAEJ,IAAK,IACL,IAAK,IACDmD,EAAIA,EAAIlD,SACJQ,EAAY,IAATsK,EAAa,IAAM3K,EACtBG,EAAGH,KAELJ,EACF,MACJ,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IAED,IADAD,EAAIK,EACGJ,EAAIwG,EAAIvG,QAAU,aAAa+E,QAAQwB,EAAItG,SAASF,KAAO,GAC9DD,GAAKyG,EAAItG,OAAOF,GACpBmD,EAAIA,EAAIlD,SACJQ,EAAG,IACHF,EAAGR,GAEP,MACJ,IAAK,IACDoD,EAAIA,EAAIlD,SACJQ,EAAGL,EACHG,EAAGH,KAELJ,EACF,MACJ,IAAK,IACDmD,EAAIA,EAAIlD,SACJQ,EAAG,IACHF,EAAG,OAELP,EACF,MACJ,QAEI,IAA4d,IAAxd,kUAAwcgF,QAAQ5E,GAChd,MAAM,IAAI8F,MAAM,0BAA4B9F,EAAI,OAASoG,GAC7DrD,EAAIA,EAAIlD,SACJQ,EAAG,IACHF,EAAGH,KAELJ,EAKV,IAAqBoL,EAAjBC,EAAK,EAAG3E,EAAM,EAClB,IAAK1G,EAAImD,EAAIlD,OAAS,EAAGgL,EAAM,IAAKjL,GAAK,IAAKA,EAC1C,OAAQmD,EAAInD,GAAGS,GACf,IAAK,IACL,IAAK,IACD0C,EAAInD,GAAGS,EAAIyK,EACXD,EAAM,IACFI,EAAK,IACLA,EAAK,GACT,MACJ,IAAK,KACGD,EAAMjI,EAAInD,GAAGO,EAAEyH,MAAM,YACrBtB,EAAM5F,KAAKgJ,IAAIpD,EAAK0E,EAAI,GAAGnL,OAAS,IACpCoL,EAAK,IACLA,EAAK,GAEb,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACDJ,EAAM9H,EAAInD,GAAGS,EACb,MACJ,IAAK,IACW,MAARwK,IACA9H,EAAInD,GAAGS,EAAI,IACP4K,EAAK,IACLA,EAAK,IAEb,MACJ,IAAK,IAED,MACJ,IAAK,IACGA,EAAK,GAAKlI,EAAInD,GAAGO,EAAEyH,MAAM,UACzBqD,EAAK,GACLA,EAAK,GAAKlI,EAAInD,GAAGO,EAAEyH,MAAM,UACzBqD,EAAK,GACLA,EAAK,GAAKlI,EAAInD,GAAGO,EAAEyH,MAAM,UACzBqD,EAAK,GAIjB,OAAQA,GACR,KAAK,EACD,MACJ,KAAK,EACGL,EAAG3H,GAAK,KACR2H,EAAG3H,EAAI,IACL2H,EAAGtH,GAELsH,EAAGtH,GAAK,KACRsH,EAAGtH,EAAI,IACLsH,EAAGvH,GAELuH,EAAGvH,GAAK,KACRuH,EAAGvH,EAAI,IACLuH,EAAGxH,GAET,MACJ,KAAK,EACGwH,EAAG3H,GAAK,KACR2H,EAAG3H,EAAI,IACL2H,EAAGtH,GAELsH,EAAGtH,GAAK,KACRsH,EAAGtH,EAAI,IACLsH,EAAGvH,GAKb,IAAe6H,EAAXC,EAAO,GACX,IAAKvL,EAAI,EAAGA,EAAImD,EAAIlD,SAAUD,EAC1B,OAAQmD,EAAInD,GAAGS,GACf,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACD,MACJ,IAAK,IACD0C,EAAInD,GAAGO,EAAI,GACX4C,EAAInD,GAAGS,EAAI,IACX,MACJ,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACD0C,EAAInD,GAAGO,EAAI+F,EAAWnD,EAAInD,GAAGS,EAAEa,WAAW,GAAI6B,EAAInD,GAAGO,EAAGyK,EAAItE,GAC5DvD,EAAInD,GAAGS,EAAI,IACX,MACJ,IAAK,IACL,IAAK,IAED,IADA6K,EAAKtL,EAAI,EACS,MAAXmD,EAAImI,KAAoC,OAAnBlL,EAAI+C,EAAImI,GAAI7K,IAAoB,MAANL,IAAoB,MAANA,GAAmB,MAANA,IAA6B,MAAf+C,EAAImI,EAAK,KAAiC,MAAlBnI,EAAImI,EAAK,GAAG7K,GAA+B,MAAlB0C,EAAImI,EAAK,GAAG7K,GAA+B,MAAlB0C,EAAImI,EAAK,GAAG/K,IAA2B,MAAb4C,EAAInD,GAAGS,IAAoB,MAANL,GAAmB,MAANA,GAAmB,MAANA,IAAoB,MAANA,IAA4B,MAAd+C,EAAImI,GAAI/K,GAA2B,MAAd4C,EAAImI,GAAI/K,GAA4B,MAAf4C,EAAImI,EAAK,IAA+B,KAAjBnI,EAAImI,EAAK,GAAG7K,KACvV0C,EAAInD,GAAGO,GAAK4C,EAAImI,GAAI/K,EACpB4C,EAAImI,IACA/K,EAAG,GACHE,EAAG,OAEL6K,EAENC,GAAQpI,EAAInD,GAAGO,EACfP,EAAIsL,EAAK,EACT,MACJ,IAAK,IACDnI,EAAInD,GAAGS,EAAI,IACX0C,EAAInD,GAAGO,EAAIyF,EAAYzF,EAAGsC,GAIlC,IAAa2I,EAAKC,EAAdC,EAAK,GACT,GAAIH,EAAKtL,OAAS,EAAG,CACS,IAAtBsL,EAAKjK,WAAW,IAGZkK,EAAMjL,EAAI,GAA4B,KAAvBgL,EAAKjK,WAAW,IAAaf,EAAIA,EAChDkL,EAAOzE,EAAU,IAAKuE,EAAMC,KAIhCC,EAAOzE,EAAU,IAAKuE,EADtBC,EAAMjL,EAAI,GAAKwK,EAAO,GAAKxK,EAAIA,GAE3BiL,EAAM,GAAKrI,EAAI,IAAkB,KAAZA,EAAI,GAAG1C,IAC5BgL,EAAOA,EAAK5F,OAAO,GACnB1C,EAAI,GAAG5C,EAAI,IAAM4C,EAAI,GAAG5C,IAGhC+K,EAAKG,EAAKxL,OAAS,EACnB,IAAI0L,EAAQxI,EAAIlD,OAChB,IAAKD,EAAI,EAAGA,EAAImD,EAAIlD,SAAUD,EAC1B,GAAc,MAAVmD,EAAInD,IAA0B,KAAZmD,EAAInD,GAAGS,GAAY0C,EAAInD,GAAGO,EAAEyE,QAAQ,MAAQ,EAAG,CACjE2G,EAAQ3L,EACR,MAER,IAAI4L,EAAQzI,EAAIlD,OAChB,GAAI0L,IAAUxI,EAAIlD,SAAiC,IAAvBwL,EAAKzG,QAAQ,KAAa,CAClD,IAAKhF,EAAImD,EAAIlD,OAAS,EAAGD,GAAK,IAAKA,EACjB,MAAVmD,EAAInD,KAA0C,IAA5B,KAAKgF,QAAQ7B,EAAInD,GAAGS,KAEtC6K,GAAMnI,EAAInD,GAAGO,EAAEN,OAAS,GACxBqL,GAAMnI,EAAInD,GAAGO,EAAEN,OACfkD,EAAInD,GAAGO,EAAIkL,EAAK5F,OAAOyF,EAAK,EAAGnI,EAAInD,GAAGO,EAAEN,SACjCqL,EAAK,EACZnI,EAAInD,GAAGO,EAAI,IAEX4C,EAAInD,GAAGO,EAAIkL,EAAK5F,OAAO,EAAGyF,EAAK,GAC/BA,GAAM,GAEVnI,EAAInD,GAAGS,EAAI,IACXmL,EAAQ5L,GAERsL,GAAM,GAAKM,EAAQzI,EAAIlD,SACvBkD,EAAIyI,GAAOrL,EAAIkL,EAAK5F,OAAO,EAAGyF,EAAK,GAAKnI,EAAIyI,GAAOrL,QACpD,GAAIoL,IAAUxI,EAAIlD,SAAiC,IAAvBwL,EAAKzG,QAAQ,KAAa,CAEzD,IADAsG,EAAKG,EAAKzG,QAAQ,KAAO,EACpBhF,EAAI2L,EAAO3L,GAAK,IAAKA,EACtB,GAAc,MAAVmD,EAAInD,KAA0C,IAA5B,KAAKgF,QAAQ7B,EAAInD,GAAGS,GAA1C,CAIA,IAFAsG,EAAI5D,EAAInD,GAAGO,EAAEyE,QAAQ,MAAQ,GAAKhF,IAAM2L,EAAQxI,EAAInD,GAAGO,EAAEyE,QAAQ,KAAO,EAAI7B,EAAInD,GAAGO,EAAEN,OAAS,EAC9FyL,EAAKvI,EAAInD,GAAGO,EAAEsF,OAAOkB,EAAI,GAClBA,GAAK,IAAKA,EACTuE,GAAM,IAA6B,MAAvBnI,EAAInD,GAAGO,EAAEL,OAAO6G,IAAqC,MAAvB5D,EAAInD,GAAGO,EAAEL,OAAO6G,MAC1D2E,EAAKD,EAAKvL,OAAOoL,KAAQI,GAEjCvI,EAAInD,GAAGO,EAAImL,EACXvI,EAAInD,GAAGS,EAAI,IACXmL,EAAQ5L,EAKZ,IAHIsL,GAAM,GAAKM,EAAQzI,EAAIlD,SACvBkD,EAAIyI,GAAOrL,EAAIkL,EAAK5F,OAAO,EAAGyF,EAAK,GAAKnI,EAAIyI,GAAOrL,GACvD+K,EAAKG,EAAKzG,QAAQ,KAAO,EACpBhF,EAAI2L,EAAO3L,EAAImD,EAAIlD,SAAUD,EAC9B,GAAc,MAAVmD,EAAInD,MAA2C,IAA7B,MAAMgF,QAAQ7B,EAAInD,GAAGS,IAAaT,IAAM2L,GAA9D,CAIA,IAFA5E,EAAI5D,EAAInD,GAAGO,EAAEyE,QAAQ,MAAQ,GAAKhF,IAAM2L,EAAQxI,EAAInD,GAAGO,EAAEyE,QAAQ,KAAO,EAAI,EAC5E0G,EAAKvI,EAAInD,GAAGO,EAAEsF,OAAO,EAAGkB,GACjBA,EAAI5D,EAAInD,GAAGO,EAAEN,SAAU8G,EACtBuE,EAAKG,EAAKxL,SACVyL,GAAMD,EAAKvL,OAAOoL,MAE1BnI,EAAInD,GAAGO,EAAImL,EACXvI,EAAInD,GAAGS,EAAI,IACXmL,EAAQ5L,IAIpB,IAAKA,EAAI,EAAGA,EAAImD,EAAIlD,SAAUD,EACZ,MAAVmD,EAAInD,IAAc,KAAKgF,QAAQ7B,EAAInD,GAAGS,IAAM,IAC5C+K,EAAMT,EAAO,GAAKxK,EAAI,GAAKP,EAAI,GAAsB,MAAjBmD,EAAInD,EAAI,GAAGO,GAAaA,EAAIA,EAChE4C,EAAInD,GAAGO,EAAIyG,EAAU7D,EAAInD,GAAGS,EAAG0C,EAAInD,GAAGO,EAAGiL,GACzCrI,EAAInD,GAAGS,EAAI,KAEnB,IAAIoL,EAAS,GACb,IAAK7L,EAAI,EAAGA,IAAMmD,EAAIlD,SAAUD,EACd,MAAVmD,EAAInD,KACJ6L,GAAU1I,EAAInD,GAAGO,GACzB,OAAOsL,EAxcXjM,EAAIkM,QAAUjB,EA0cdjL,EAAImM,MAAQjB,EACZ,IAAIkB,EAAU,UACVC,EAAW,wCACf,SAASC,EAAQ3L,EAAG+I,GAChB,GAAU,MAANA,EACA,OAAO,EACX,IAAI6C,EAASC,WAAW9C,EAAG,IAC3B,OAAQA,EAAG,IACX,IAAK,IACD,GAAI/I,GAAK4L,EACL,OAAO,EACX,MACJ,IAAK,IACD,GAAI5L,EAAI4L,EACJ,OAAO,EACX,MACJ,IAAK,IACD,GAAI5L,EAAI4L,EACJ,OAAO,EACX,MACJ,IAAK,KACD,GAAI5L,GAAK4L,EACL,OAAO,EACX,MACJ,IAAK,KACD,GAAI5L,GAAK4L,EACL,OAAO,EACX,MACJ,IAAK,KACD,GAAI5L,GAAK4L,EACL,OAAO,EAGf,OAAO,EAkFX,SAASlG,EAAOO,EAAKjG,EAAGR,GACX,MAALA,IACAA,MACJ,IAAIqI,EAAO,GACX,cAAe5B,GACf,IAAK,SAEG4B,EADO,UAAP5B,GAAmBzG,EAAEsM,OACdtM,EAAEsM,OAEF7F,EACX,MACJ,IAAK,SAKW,OAHR4B,EADO,IAAP5B,GAAazG,EAAEsM,OACRtM,EAAEsM,QAEU,MAAXtM,EAAEuM,MAAgBvM,EAAEuM,MAAQ5K,GAAW8E,MAE/C4B,EAAOrI,EAAEuM,OAASvM,EAAEuM,MAAM3K,EAAY6E,KAAS9E,EAAUC,EAAY6E,KAC7D,MAAR4B,IACAA,EAAOvG,EAAY2E,IAAQ,WAOnC,GAAM4B,EAAKJ,MADD,yBACa,CACnB,GAAIuE,MAAMhM,GACN,OAAOA,EAGX,IAAIiM,EAAMpE,EAAKmC,MAAM,GAEjBkC,GAAa,GACZF,MAAMhM,IAAMmM,OAAOnM,GAAK,IACzBkM,GAAa,EACblM,EAAIO,KAAK6C,IAAIpD,IAEjB,IACIoM,EADOtD,SAAS9I,GACDqE,WAAW3E,OAC9B,GAAI0M,EAAU,EAAG,CACb,GAAIA,EAAU,EAAG,CACb,IAAIrJ,EAAI+F,SAAS9I,EAAI,KAEjBkF,EAAI4D,SAAS+C,WAAW7L,GAAGqM,SAAa,IAAJtJ,GAAiB,KAErDX,EAAIyJ,WAAW7L,GAAGqM,SAAa,IAAJtJ,EAAoB,IAAJmC,GAEpC,IAAP+G,IACA7J,EAAIpD,EAAQoD,GAAGsD,OAAOuG,IAG1BjM,EAAI+C,EAAI,IAAMmC,EAAI,IAAM9C,OAEpB8C,EAAI4D,SAAS9I,EAAI,KAEjBoC,EAAIyJ,WAAW7L,GAAGqM,SAAa,IAAJnH,GAEpB,IAAP+G,IACA7J,EAAIpD,EAAQoD,GAAGsD,OAAOuG,IAG1BjM,EAAIkF,EAAI,IAAM9C,EAUlB,IAR0B,GAAtBpC,EAAEyE,QAAQ,QACVzE,EAAIA,EAAE0E,QAAQ,MAAO,KACO,GAArB1E,EAAEyE,QAAQ,OACjBzE,EAAIA,EAAE0E,QAAQ,KAAM,KACO,GAApB1E,EAAEyE,QAAQ,QACjBzE,EAAIA,EAAE0E,QAAQ,KAAM,OAGD,GAAnB1E,EAAEyE,QAAQ,OAAiC,GAAnBzE,EAAEyE,QAAQ,MAGlC,GAAgC,OAD5B6H,EAAUtM,EAAEuM,UAAUvM,EAAEyE,QAAQ,KAAO,IAC/B8H,UAAU,EAAG,IAAyB,IAAXD,EAAe,CAClD,QAASxD,SAASwD,GAAW,IAAI5M,QACjC,KAAK,EACD4M,EAAU,MAAQA,EAClB,MACJ,KAAK,EACDA,EAAU,KAAOA,EACjB,MACJ,KAAK,EACDA,EAAU,IAAMA,EAGpBtM,EAAIA,EAAEuM,UAAU,EAAGvM,EAAEyE,QAAQ,KAAO,GAAK6H,QAE1C,IAAuB,GAAnBtM,EAAEyE,QAAQ,OAAiC,GAAnBzE,EAAEyE,QAAQ,MAGzC,GAAiC,OAD7B+H,EAAWxM,EAAEuM,UAAUvM,EAAEyE,QAAQ,KAAO,IAC/B8H,UAAU,EAAG,IAA0B,IAAZC,EAAgB,CACpD,QAAS1D,SAAS0D,GAAY,IAAI9M,QAClC,KAAK,EACD8M,EAAW,MAAQA,EACnB,MACJ,KAAK,EACDA,EAAW,KAAOA,EAClB,MACJ,KAAK,EACDA,EAAW,IAAMA,EAGrBxM,EAAIA,EAAEuM,UAAU,EAAGvM,EAAEyE,QAAQ,KAAO,GAAK+H,QAE1C,IAAuB,GAAnBxM,EAAEyE,QAAQ,OAAiC,GAAnBzE,EAAEyE,QAAQ,KAAY,CAErD,IAAI6H,EAAUtM,EAAEuM,UAAUvM,EAAEyE,QAAQ,KAAO,EAAGzE,EAAEyE,QAAQ,MAAO+H,EAAWxM,EAAEuM,UAAUvM,EAAEyE,QAAQ,KAAO,GACvG,QAASqE,SAASwD,GAAW,IAAI5M,QACjC,KAAK,EACD4M,EAAU,MAAQA,EAClB,MACJ,KAAK,EACDA,EAAU,KAAOA,EACjB,MACJ,KAAK,EACDA,EAAU,IAAMA,EAIpB,GADAtM,EAAIA,EAAEuM,UAAU,EAAGvM,EAAEyE,QAAQ,KAAO,GAAK6H,EAAUtM,EAAEuM,UAAUvM,EAAEyE,QAAQ,MACxC,MAA7B+H,EAASD,UAAU,EAAG,IAA0B,IAAZC,EAAgB,CACpD,QAAS1D,SAAS0D,GAAY,IAAI9M,QAClC,KAAK,EACD8M,EAAW,MAAQA,EACnB,MACJ,KAAK,EACDA,EAAW,KAAOA,EAClB,MACJ,KAAK,EACDA,EAAW,IAAMA,EAGrBxM,EAAIA,EAAEuM,UAAU,EAAGvM,EAAEyE,QAAQ,KAAO,GAAK+H,QAItC,IAAPP,IACAjM,EAAIhB,EAAQgB,GAAG0F,OAAOuG,IAI9B,OAAIC,EACO,IAAMlM,EAENA,EAGf,GAAIa,EAAUgH,EAAM,GAChB,OAAOpC,EAAYzF,EAAGR,GACtBQ,aAAasD,OACbtD,EAAIiE,EAAcjE,EAAGR,EAAE6D,WAC3B,IAAIoJ,EAxOR,SAAoBA,EAAGzM,GACnB,IAAIiG,EAAMiE,EAAUuC,GAChB3M,EAAImG,EAAIvG,OAAQgN,EAAMzG,EAAInG,EAAI,GAAG2E,QAAQ,KAG7C,GAFI3E,EAAI,GAAK4M,GAAO,KACd5M,EACFmG,EAAIvG,OAAS,EACb,MAAM,IAAIiG,MAAM,iCAAmCM,EAAI0G,KAAK,KAAO,KACvE,GAAiB,iBAAN3M,EACP,OACI,EACe,IAAfiG,EAAIvG,QAAgBgN,GAAO,EAAIzG,EAAIA,EAAIvG,OAAS,GAAK,KAE7D,OAAQuG,EAAIvG,QACZ,KAAK,EACDuG,EAAMyG,GAAO,GACT,UACA,UACA,UACAzG,EAAI,KAEJA,EAAI,GACJA,EAAI,GACJA,EAAI,GACJ,KAEJ,MACJ,KAAK,EACDA,EAAMyG,GAAO,GACTzG,EAAI,GACJA,EAAI,GACJA,EAAI,GACJA,EAAI,KAEJA,EAAI,GACJA,EAAI,GACJA,EAAI,GACJ,KAEJ,MACJ,KAAK,EACDA,EAAMyG,GAAO,GACTzG,EAAI,GACJA,EAAI,GACJA,EAAI,GACJA,EAAI,KAEJA,EAAI,GACJA,EAAI,GACJA,EAAI,GACJ,KAMR,IAAIyC,EAAK1I,EAAI,EAAIiG,EAAI,GAAKjG,EAAI,EAAIiG,EAAI,GAAKA,EAAI,GAC/C,IAA6B,IAAzBA,EAAI,GAAGxB,QAAQ,OAAwC,IAAzBwB,EAAI,GAAGxB,QAAQ,KAC7C,OACI3E,EACA4I,GAER,GAA6B,MAAzBzC,EAAI,GAAGwB,MAAMgE,IAA6C,MAAzBxF,EAAI,GAAGwB,MAAMgE,GAAkB,CAChE,IAAImB,EAAK3G,EAAI,GAAGwB,MAAMiE,GAClBmB,EAAK5G,EAAI,GAAGwB,MAAMiE,GACtB,OAAOC,EAAQ3L,EAAG4M,IACd9M,EACAmG,EAAI,IACJ0F,EAAQ3L,EAAG6M,IACX/M,EACAmG,EAAI,KAEJnG,EACAmG,EAAU,MAAN2G,GAAoB,MAANC,EAAa,EAAI,IAG3C,OACI/M,EACA4I,GA2JIoE,CAAWjF,EAAM7H,GACzB,GAAIa,EAAU4L,EAAE,IACZ,OAAOhH,EAAYzF,EAAGR,GAC1B,IAAU,IAANQ,EACAA,EAAI,YACH,IAAU,IAANA,EACLA,EAAI,aACH,GAAU,KAANA,GAAiB,MAALA,EACjB,MAAO,GACX,OAAOuK,EAASkC,EAAE,GAAIzM,EAAGR,EAAGiN,EAAE,IAElC,SAASM,EAAW9G,EAAK0B,GACrB,GAAkB,iBAAPA,EAAiB,CACxBA,GAAOA,IAAQ,EACf,IAAK,IAAIlI,EAAI,EAAGA,EAAI,MAAOA,EACvB,QAAoBuN,GAAhB7L,EAAU1B,IAKd,GAAI0B,EAAU1B,IAAMwG,EAAK,CACrB0B,EAAMlI,EACN,YANIkI,EAAM,IACNA,EAAMlI,GAQdkI,EAAM,IACNA,EAAM,KAGd,OADAxG,EAAUwG,GAAO1B,EACV0B,EAEXtI,EAAI4N,KAAOF,EACX1N,EAAI6N,OAAS/L,EACb9B,EAAI8N,UAAY,WACZ,OAAOhM,GAEX9B,EAAI+N,WAAa,SAAoBC,GACjC,IAAK,IAAI5N,EAAI,EAAQ,KAALA,IAAYA,OACTuN,IAAXK,EAAI5N,IACJsN,EAAWM,EAAI5N,GAAIA,IAE/BJ,EAAI6B,WAAaA,EACjB7B,EAAIqG,OAASA,EAEjB4H,CAASjO,GACT,IAqBQkO,EAA0DC,EAlB9CnO,EAAI6N,OAAO,IAEZ7N,EAAI6N,OAAO,IACZ7N,EAAI6N,OAAO,IACZ7N,EAAI6N,OAAO,IACT7N,EAAI6N,OAAO,IACZ7N,EAAI6N,OAAO,IAEhB7N,EAAI6N,OAAO,GACR7N,EAAI6N,OAAO,GACZ7N,EAAI6N,OAAO,IACR7N,EAAI6N,OAAO,IAOrBK,EAAW,8CAA+CC,EAAY,sBAmB/D,IAAIlK,KAAK,KAAM,GAAI,GAAI,EAAG,EAAG,GACpBS,UADxB,IAEIC,EAAW,IAAIV,KAAK,KAAM,EAAG,EAAG,EAAG,EAAG,GAO1C,SAASW,EAAcjE,EAAGqD,GACtB,IAAIa,EAAQZ,KAAKmK,IAAIzN,EAAEyD,cAAezD,EAAE0D,WAAY1D,EAAEwD,UAAWxD,EAAE0N,WAAY1N,EAAE2N,aAAc3N,EAAE4N,cAC7FC,EAAevK,KAAKmK,IAAI,KAAM,GAAI,GAAI,EAAG,EAAG,GAKhD,OAJIpK,EACAa,GAAS,UACJlE,GAAKgE,IACVE,GAAS,QACLA,EAAQ2J,GAAgB,MAyCpC,IAAIC,EAAe,IAAIxK,KAAK,4BACxB0I,MAAM8B,EAAarK,iBACnBqK,EAAe,IAAIxK,KAAK,YAC5B,IAAIyK,EAAwC,MAA9BD,EAAarK,cA4U3B,OACIQ,cAAeA,EACf+J,SAtQJ,SAAkBC,GAEd,IACIjL,EAAI,KAAMkL,KAASlO,EAAIiO,EAC3B,GAAa,MAATA,EACA,OAAO,KAEX,GAAsC,MAAlCA,EAAM5J,WAAWiB,OAAO,EAAG,GAC3BtC,EAAIiL,EAAM5J,WAAWiB,OAAO,GAC5B4I,GACIC,GAAM,IACNjO,EAAK,UAEN,GAAuC,SAAnC+N,EAAM5J,WAAWmB,cACxBxC,EAAI,OACJkL,GACIC,GAAM,UACNjO,EAAK,KAETF,GAAI,OACD,GAAuC,UAAnCiO,EAAM5J,WAAWmB,cACxBxC,EAAI,QACJkL,GACIC,GAAM,UACNjO,EAAK,KAETF,GAAI,OACD,GAAId,EAAa+O,GACpBjL,EAAIiL,EAAM5J,WACV6J,GACIC,GAAM,UACNjO,EAAK,UAEN,GAAI,yEAAyEkO,KAAKH,GACrFjL,EAAIiL,EAAM5J,WACV6J,GACIC,GAAM,IACNjO,EAAK,UAEN,GAAIjB,EAAUgP,IAAU1N,KAAK6C,IAAIyI,WAAWoC,IAAU,IAAM1N,KAAK6C,IAAIyI,WAAWoC,KAAW,MAAgB1N,KAAK6C,IAAIyI,WAAWoC,IAAU,MAAO,CAEnJ,IAAIjH,GADJhH,EAAIhB,EAAQiP,GAAOA,SACP7I,gBACZ,GAAI4B,EAAIvC,QAAQ,MAAQ,EAAG,CACvB,IAAI4J,EAASrH,EAAIlB,MAAM,KAAK,GAAGA,MAAM,KAAK,GAAGpG,OACzC2O,EAAS,IACTA,EAAS,GAEbH,GACIC,GAAM,MAAQ,IAAIG,MAAMD,EAAS,GAAG1B,KAAK,KAAO,OAChDzM,EAAK,UAGTgO,GACIC,GAAM,UACNjO,EAAK,KAGb8C,EAAI3D,EAAIqG,OAAOwI,EAAGC,GAAInO,QACnB,GAAIiO,EAAM5J,WAAWI,QAAQ,MAAQ,EAAG,CAC3C,IAAI8J,EAAQN,EAAM5J,WAAWI,QAAQ,KAEjC+J,GADAC,EAASR,EAAM5J,WAAWiB,OAAO,EAAGiJ,IACpB7J,QAAQ,KAAM,IAClC,GAAI6J,GAASN,EAAM5J,WAAW3E,OAAS,GAAKT,EAAUuP,GAClD,GAAIC,EAAOhK,QAAQ,MAAQ,EACvB,GAAIgK,EAAOhK,QAAQ,MAAQgK,EAAOxE,YAAY,KAAM,CAChD,IAAIyE,EAASD,EAAO3I,MAAM,KAAK,GAM/B,IAJI6I,EADSF,EAAO3I,MAAM,KAAK,GACdpG,QACP,IACNiP,EAAM,GAEND,EAAOjK,QAAQ,MAAQ,EAAG,CAG1B,IAFA,IAAImK,GAAc,EACdC,EAAeH,EAAO5I,MAAM,KACvBrG,EAAI,EAAGA,EAAIoP,EAAanP,OAAQD,IACrC,GAAIoP,EAAapP,GAAGC,OAAS,EAAG,CAC5BkP,GAAc,EACd,MAGJA,GACAV,GACIC,GAAM,SAAW,IAAIG,MAAMK,EAAM,GAAGhC,KAAK,KAAO,IAChDzM,EAAK,KAETF,EAAIhB,EAAQiP,GAAOA,QACnBjL,EAAI3D,EAAIqG,OAAOwI,EAAGC,GAAInO,KAEtBgD,EAAIiL,EAAM5J,WACV6J,GACIC,GAAM,IACNjO,EAAK,WAIbgO,GACIC,GAAM,KAAO,IAAIG,MAAMK,EAAM,GAAGhC,KAAK,KAAO,IAC5CzM,EAAK,KAETF,EAAIhB,EAAQiP,GAAOA,QACnBjL,EAAI3D,EAAIqG,OAAOwI,EAAGC,GAAInO,QAG1BgD,EAAIiL,EAAM5J,WACV6J,GACIC,GAAM,IACNjO,EAAK,UAGV,GAAIuO,EAAOhK,QAAQ,MAAQ,EAAG,CAGjC,IAFImK,GAAc,EACdC,EAAeJ,EAAO3I,MAAM,KACvBrG,EAAI,EAAGA,EAAIoP,EAAanP,OAAQD,IACrC,GAAIoP,EAAapP,GAAGC,OAAS,EAAG,CAC5BkP,GAAc,EACd,MAGJA,GACAV,GACIC,GAAM,SACNjO,EAAK,KAETF,EAAIhB,EAAQiP,GAAOA,QACnBjL,EAAI3D,EAAIqG,OAAOwI,EAAGC,GAAInO,KAEtBgD,EAAIiL,EAAM5J,WACV6J,GACIC,GAAM,IACNjO,EAAK,WAIbgO,GACIC,GAAM,KACNjO,EAAK,KAETF,EAAIhB,EAAQiP,GAAOA,QACnBjL,EAAI3D,EAAIqG,OAAOwI,EAAGC,GAAInO,QAG1BgD,EAAIiL,EAAM5J,WACV6J,GACIC,GAAM,IACNjO,EAAK,UAGV,GAAI+N,EAAM5J,WAAWI,QAAQ,MAAQ,EACxC,GAAIwJ,EAAM5J,WAAWI,QAAQ,MAAQwJ,EAAM5J,WAAW4F,YAAY,KAAM,CACpE,IACIwE,EACAE,EAFAG,EAASb,EAAM5J,WAAWyB,MAAM,KAAK,GAMzC,IAJI6I,GADAF,EAASR,EAAM5J,WAAWyB,MAAM,KAAK,IACxBpG,QACP,IACNiP,EAAM,GAENG,EAAOrK,QAAQ,MAAQ,EAAG,CAG1B,IAFImK,GAAc,EACdC,EAAeC,EAAOhJ,MAAM,KACvBrG,EAAI,EAAGA,EAAIoP,EAAanP,OAAQD,IACrC,IAAKR,EAAU4P,EAAapP,KAAOoP,EAAapP,GAAGC,OAAS,EAAG,CAC3DkP,GAAc,EACd,MAGJA,GACAV,GACIC,GAAM,SAAW,IAAIG,MAAMK,EAAM,GAAGhC,KAAK,KACzCzM,EAAK,KAETF,EAAIhB,EAAQiP,GAAOA,QACnBjL,EAAI3D,EAAIqG,OAAOwI,EAAGC,GAAInO,KAEtBgD,EAAIiL,EAAM5J,WACV6J,GACIC,GAAM,IACNjO,EAAK,WAITjB,EAAU6P,IAAW7P,EAAUwP,IAC/BP,GACIC,GAAM,KAAO,IAAIG,MAAMK,EAAM,GAAGhC,KAAK,KACrCzM,EAAK,KAETF,EAAIhB,EAAQiP,GAAOA,QACnBjL,EAAI3D,EAAIqG,OAAOwI,EAAGC,GAAInO,KAEtBgD,EAAIiL,EAAM5J,WACV6J,GACIC,GAAM,IACNjO,EAAK,WAKjB8C,EAAIiL,EAAM5J,WACV6J,GACIC,GAAM,IACNjO,EAAK,UAGNjB,EAAUgP,IACjBjL,EAAIiL,EAAM5J,WACV6J,GACIC,GAAM,UACNjO,EAAK,KAETF,EAAI6L,WAAWoC,IACR9O,EAAW8O,KAAWA,EAAM5J,WAAWI,QAAQ,MAAQ,GAAKwJ,EAAM5J,WAAWI,QAAQ,MAAQ,GAAKwJ,EAAM5J,WAAW3E,OAAS,MACnIM,EAAIiE,EAvRZ,SAAmB+C,EAAK+H,GACpB,IAAI9O,EAAI,IAAIqD,KAAK0D,GAEjB,GAAI+G,EAKA,OAJIgB,EAAU,EACV9O,EAAE+O,QAAQ/O,EAAE8D,UAAoC,GAAxB9D,EAAEkE,oBAA2B,KAChD4K,EAAU,GACf9O,EAAE+O,QAAQ/O,EAAE8D,UAAoC,GAAxB9D,EAAEkE,oBAA2B,KAClDlE,EAEX,GAAI+G,aAAe1D,KACf,OAAO0D,EACX,GAAkC,MAA9B8G,EAAarK,gBAA0BuI,MAAM/L,EAAEwD,eAAgB,CAC/D,IAAI3C,EAAIb,EAAEwD,cACV,OAAIuD,EAAIvC,QAAQ,GAAK3D,IAAM,EAChBb,GACXA,EAAEgP,YAAYhP,EAAEwD,cAAgB,KACzBxD,GAEX,IAAIiP,EAAIlI,EAAIS,MAAM,UACd,OACA,IACA,KACA,IACA,IACA,KAEA7E,EAAM,IAAIU,MAAM4L,EAAE,IAAKA,EAAE,GAAK,GAAIA,EAAE,IAAKA,EAAE,IAAM,GAAIA,EAAE,IAAM,GAAIA,EAAE,IAAM,GAG7E,OAFIlI,EAAIvC,QAAQ,MAAQ,IACpB7B,EAAM,IAAIU,KAAKV,EAAImB,UAAsC,GAA1BnB,EAAIuB,oBAA2B,MAC3DvB,EAyPeuM,CAAUlB,EAAM5J,WAAWK,QAAQ,KAAM,QACrDL,WAAWI,QAAQ,MAAQ,EACzBwJ,EAAM5J,WAAW3E,OAAS,GAC1BwO,EAAGC,GAAK,sBACDF,EAAM5J,WAAW3E,OAAS,GACjCwO,EAAGC,GAAK,mBAERD,EAAGC,GAAK,aAGZD,EAAGC,GAAK,aAEZD,EAAGhO,EAAI,IACP8C,EAAI3D,EAAIqG,OAAOwI,EAAGC,GAAInO,KAEtBgD,EAAIiL,EACJC,EAAGC,GAAK,UACRD,EAAGhO,EAAI,KAEX,OACI8C,EACAkL,EACAlO,IAgCJoP,OA7BJ,SAAgBnJ,EAAKjG,GACjB,OAAOX,EAAIqG,OAAOO,EAAKjG,IA6BvBuL,QA3BJ,SAAiBtF,EAAKjG,GAClB,OAAOX,EAAIkM,QAAQtF,EAAKjG,IA2BxBqP,YAzBJ,SAAqB7G,EAAG3I,EAAGI,GACvB,IAAIgO,EAAQ7O,EAAaoJ,EAAG3I,EAAGI,EAAG,KAiBlC,OAhBa,MAATgO,EACAA,EAAQ7O,EAAaoJ,EAAG3I,EAAGI,EAAG,KAEzB+L,MA1Rb,SAAkBlL,GACd,IAAId,EAAImM,OAAOrL,GACf,GAAgB,iBAALA,EACP,OAAOA,EAEX,IAAKkL,MAAMhM,GACP,OAAOA,EACX,IAAIsP,EAAK,EACLlJ,EAAKtF,EAAE4D,QAAQ,iBAAkB,QAAQA,QAAQ,OAAQ,IAAIA,QAAQ,OAAQ,WAE7E,OADA4K,GAAM,IACC,KAEX,OAAKtD,MAAMhM,EAAImM,OAAO/F,KAEtBA,EAAKA,EAAG1B,QAAQ,aAAc,SAAU0D,EAAIC,GAExC,OADAiH,GAAMA,EACCjH,IAEN2D,MAAMhM,EAAImM,OAAO/F,IAEfpG,EADIA,EAAIsP,GANJtP,EAAIsP,EA6QAC,CAAStB,IAOF,MAAdhO,EAAEuI,GAAG3I,GAAGqO,IAA8B,KAAhBjO,EAAEuI,GAAG3I,GAAGqO,GAAGhO,GACZ,MAAdD,EAAEuI,GAAG3I,GAAGqO,IAA8B,KAAhBjO,EAAEuI,GAAG3I,GAAGqO,GAAGhO,IAExC+N,EAAQ7O,EAAaoJ,EAAG3I,EAAGI,EAAG,MATV,iBAATgO,GAAqBA,EAAMxJ,QAAQ,MAAQ,IAElDwJ,EAAQ7O,EAAaoJ,EAAG3I,EAAGI,EAAG,MAUnCgO","file":"../../global/format.js","sourcesContent":["define([\n    './validate',\n    './datecontroll',\n    './getdata',\n    '../vendors/numeral'\n], function (m_validate, m_datecontroll, m_getdata, numeral) {\n    'use strict';\n    const {isRealNum, valueIsError} = m_validate;\n    const {isdatetime} = m_datecontroll;\n    const {getcellvalue} = m_getdata;\n    var SSF = {};\n    var make_ssf = function make_ssf(SSF) {\n        SSF.version = '0.11.2';\n        function _strrev(x) {\n            var o = '', i = x.length - 1;\n            while (i >= 0)\n                o += x.charAt(i--);\n            return o;\n        }\n        function fill(c, l) {\n            var o = '';\n            while (o.length < l)\n                o += c;\n            return o;\n        }\n        function pad0(v, d) {\n            var t = '' + v;\n            return t.length >= d ? t : fill('0', d - t.length) + t;\n        }\n        function pad_(v, d) {\n            var t = '' + v;\n            return t.length >= d ? t : fill(' ', d - t.length) + t;\n        }\n        function rpad_(v, d) {\n            var t = '' + v;\n            return t.length >= d ? t : t + fill(' ', d - t.length);\n        }\n        function pad0r1(v, d) {\n            var t = '' + Math.round(v);\n            return t.length >= d ? t : fill('0', d - t.length) + t;\n        }\n        function pad0r2(v, d) {\n            var t = '' + v;\n            return t.length >= d ? t : fill('0', d - t.length) + t;\n        }\n        var p2_32 = Math.pow(2, 32);\n        function pad0r(v, d) {\n            if (v > p2_32 || v < -p2_32)\n                return pad0r1(v, d);\n            var i = Math.round(v);\n            return pad0r2(i, d);\n        }\n        function isgeneral(s, i) {\n            i = i || 0;\n            return s.length >= 7 + i && (s.charCodeAt(i) | 32) === 103 && (s.charCodeAt(i + 1) | 32) === 101 && (s.charCodeAt(i + 2) | 32) === 110 && (s.charCodeAt(i + 3) | 32) === 101 && (s.charCodeAt(i + 4) | 32) === 114 && (s.charCodeAt(i + 5) | 32) === 97 && (s.charCodeAt(i + 6) | 32) === 108;\n        }\n        var days = [\n            [\n                'Sun',\n                'Sunday'\n            ],\n            [\n                'Mon',\n                'Monday'\n            ],\n            [\n                'Tue',\n                'Tuesday'\n            ],\n            [\n                'Wed',\n                'Wednesday'\n            ],\n            [\n                'Thu',\n                'Thursday'\n            ],\n            [\n                'Fri',\n                'Friday'\n            ],\n            [\n                'Sat',\n                'Saturday'\n            ]\n        ];\n        var months = [\n            [\n                'J',\n                'Jan',\n                'January'\n            ],\n            [\n                'F',\n                'Feb',\n                'February'\n            ],\n            [\n                'M',\n                'Mar',\n                'March'\n            ],\n            [\n                'A',\n                'Apr',\n                'April'\n            ],\n            [\n                'M',\n                'May',\n                'May'\n            ],\n            [\n                'J',\n                'Jun',\n                'June'\n            ],\n            [\n                'J',\n                'Jul',\n                'July'\n            ],\n            [\n                'A',\n                'Aug',\n                'August'\n            ],\n            [\n                'S',\n                'Sep',\n                'September'\n            ],\n            [\n                'O',\n                'Oct',\n                'October'\n            ],\n            [\n                'N',\n                'Nov',\n                'November'\n            ],\n            [\n                'D',\n                'Dec',\n                'December'\n            ]\n        ];\n        function init_table(t) {\n            t[0] = 'General';\n            t[1] = '0';\n            t[2] = '0.00';\n            t[3] = '#,##0';\n            t[4] = '#,##0.00';\n            t[9] = '0%';\n            t[10] = '0.00%';\n            t[11] = '0.00E+00';\n            t[12] = '# ?/?';\n            t[13] = '# ??/??';\n            t[14] = 'm/d/yy';\n            t[15] = 'd-mmm-yy';\n            t[16] = 'd-mmm';\n            t[17] = 'mmm-yy';\n            t[18] = 'h:mm AM/PM';\n            t[19] = 'h:mm:ss AM/PM';\n            t[20] = 'h:mm';\n            t[21] = 'h:mm:ss';\n            t[22] = 'm/d/yy h:mm';\n            t[37] = '#,##0 ;(#,##0)';\n            t[38] = '#,##0 ;[Red](#,##0)';\n            t[39] = '#,##0.00;(#,##0.00)';\n            t[40] = '#,##0.00;[Red](#,##0.00)';\n            t[45] = 'mm:ss';\n            t[46] = '[h]:mm:ss';\n            t[47] = 'mmss.0';\n            t[48] = '##0.0E+0';\n            t[49] = '@';\n            t[56] = '\"上午/下午 \"hh\"時\"mm\"分\"ss\"秒 \"';\n            t[65535] = 'General';\n        }\n        var table_fmt = {};\n        init_table(table_fmt);    /* Defaults determined by systematically testing in Excel 2019 */\n                                  /* These formats appear to default to other formats in the table */\n        /* Defaults determined by systematically testing in Excel 2019 */\n        /* These formats appear to default to other formats in the table */\n        var default_map = [];\n        var defi = 0;    //  5 -> 37 ...  8 -> 40\n        //  5 -> 37 ...  8 -> 40\n        for (defi = 5; defi <= 8; ++defi)\n            default_map[defi] = 32 + defi;    // 23 ->  0 ... 26 ->  0\n        // 23 ->  0 ... 26 ->  0\n        for (defi = 23; defi <= 26; ++defi)\n            default_map[defi] = 0;    // 27 -> 14 ... 31 -> 14\n        // 27 -> 14 ... 31 -> 14\n        for (defi = 27; defi <= 31; ++defi)\n            default_map[defi] = 14;    // 50 -> 14 ... 58 -> 14\n        // 50 -> 14 ... 58 -> 14\n        for (defi = 50; defi <= 58; ++defi)\n            default_map[defi] = 14;    // 59 ->  1 ... 62 ->  4\n        // 59 ->  1 ... 62 ->  4\n        for (defi = 59; defi <= 62; ++defi)\n            default_map[defi] = defi - 58;    // 67 ->  9 ... 68 -> 10\n        // 67 ->  9 ... 68 -> 10\n        for (defi = 67; defi <= 68; ++defi)\n            default_map[defi] = defi - 58;    // 72 -> 14 ... 75 -> 17\n        // 72 -> 14 ... 75 -> 17\n        for (defi = 72; defi <= 75; ++defi)\n            default_map[defi] = defi - 58;    // 69 -> 12 ... 71 -> 14\n        // 69 -> 12 ... 71 -> 14\n        for (defi = 67; defi <= 68; ++defi)\n            default_map[defi] = defi - 57;    // 76 -> 20 ... 78 -> 22\n        // 76 -> 20 ... 78 -> 22\n        for (defi = 76; defi <= 78; ++defi)\n            default_map[defi] = defi - 56;    // 79 -> 45 ... 81 -> 47\n        // 79 -> 45 ... 81 -> 47\n        for (defi = 79; defi <= 81; ++defi)\n            default_map[defi] = defi - 34;    // 82 ->  0 ... 65536 -> 0 (omitted)\n                                              /* These formats technically refer to Accounting formats with no equivalent */\n        // 82 ->  0 ... 65536 -> 0 (omitted)\n        /* These formats technically refer to Accounting formats with no equivalent */\n        var default_str = [];    //  5 -- Currency,   0 decimal, black negative\n        //  5 -- Currency,   0 decimal, black negative\n        default_str[5] = default_str[63] = '\"$\"#,##0_);\\\\(\"$\"#,##0\\\\)';    //  6 -- Currency,   0 decimal, red   negative\n        //  6 -- Currency,   0 decimal, red   negative\n        default_str[6] = default_str[64] = '\"$\"#,##0_);[Red]\\\\(\"$\"#,##0\\\\)';    //  7 -- Currency,   2 decimal, black negative\n        //  7 -- Currency,   2 decimal, black negative\n        default_str[7] = default_str[65] = '\"$\"#,##0.00_);\\\\(\"$\"#,##0.00\\\\)';    //  8 -- Currency,   2 decimal, red   negative\n        //  8 -- Currency,   2 decimal, red   negative\n        default_str[8] = default_str[66] = '\"$\"#,##0.00_);[Red]\\\\(\"$\"#,##0.00\\\\)';    // 41 -- Accounting, 0 decimal, No Symbol\n        // 41 -- Accounting, 0 decimal, No Symbol\n        default_str[41] = '_(* #,##0_);_(* \\\\(#,##0\\\\);_(* \"-\"_);_(@_)';    // 42 -- Accounting, 0 decimal, $  Symbol\n        // 42 -- Accounting, 0 decimal, $  Symbol\n        default_str[42] = '_(\"$\"* #,##0_);_(\"$\"* \\\\(#,##0\\\\);_(\"$\"* \"-\"_);_(@_)';    // 43 -- Accounting, 2 decimal, No Symbol\n        // 43 -- Accounting, 2 decimal, No Symbol\n        default_str[43] = '_(* #,##0.00_);_(* \\\\(#,##0.00\\\\);_(* \"-\"??_);_(@_)';    // 44 -- Accounting, 2 decimal, $  Symbol\n        // 44 -- Accounting, 2 decimal, $  Symbol\n        default_str[44] = '_(\"$\"* #,##0.00_);_(\"$\"* \\\\(#,##0.00\\\\);_(\"$\"* \"-\"??_);_(@_)';\n        function frac(x, D, mixed) {\n            var sgn = x < 0 ? -1 : 1;\n            var B = x * sgn;\n            var P_2 = 0, P_1 = 1, P = 0;\n            var Q_2 = 1, Q_1 = 0, Q = 0;\n            var A = Math.floor(B);\n            while (Q_1 < D) {\n                A = Math.floor(B);\n                P = A * P_1 + P_2;\n                Q = A * Q_1 + Q_2;\n                if (B - A < 5e-8)\n                    break;\n                B = 1 / (B - A);\n                P_2 = P_1;\n                P_1 = P;\n                Q_2 = Q_1;\n                Q_1 = Q;\n            }\n            if (Q > D) {\n                if (Q_1 > D) {\n                    Q = Q_2;\n                    P = P_2;\n                } else {\n                    Q = Q_1;\n                    P = P_1;\n                }\n            }\n            if (!mixed)\n                return [\n                    0,\n                    sgn * P,\n                    Q\n                ];\n            var q = Math.floor(sgn * P / Q);\n            return [\n                q,\n                sgn * P - q * Q,\n                Q\n            ];\n        }\n        function parse_date_code(v, opts, b2) {\n            if (v > 2958465 || v < 0)\n                return null;\n            var date = v | 0, time = Math.floor(86400 * (v - date)), dow = 0;\n            var dout = [];\n            var out = {\n                D: date,\n                T: time,\n                u: 86400 * (v - date) - time,\n                y: 0,\n                m: 0,\n                d: 0,\n                H: 0,\n                M: 0,\n                S: 0,\n                q: 0\n            };\n            if (Math.abs(out.u) < 0.000001)\n                out.u = 0;\n            if (opts && opts.date1904)\n                date += 1462;\n            if (out.u > 0.9999) {\n                out.u = 0;\n                if (++time == 86400) {\n                    out.T = time = 0;\n                    ++date;\n                    ++out.D;\n                }\n            }\n            if (date === 60) {\n                dout = b2 ? [\n                    1317,\n                    10,\n                    29\n                ] : [\n                    1900,\n                    2,\n                    29\n                ];\n                dow = 3;\n            } else if (date === 0) {\n                dout = b2 ? [\n                    1317,\n                    8,\n                    29\n                ] : [\n                    1900,\n                    1,\n                    0\n                ];\n                dow = 6;\n            } else {\n                if (date > 60)\n                    --date;    /* 1 = Jan 1 1900 in Gregorian */\n                /* 1 = Jan 1 1900 in Gregorian */\n                var d = new Date(1900, 0, 1);\n                d.setDate(d.getDate() + date - 1);\n                dout = [\n                    d.getFullYear(),\n                    d.getMonth() + 1,\n                    d.getDate()\n                ];\n                dow = d.getDay();\n                if (date < 60)\n                    dow = (dow + 6) % 7;\n                if (b2)\n                    dow = fix_hijri(d, dout);\n            }\n            out.y = dout[0];\n            out.m = dout[1];\n            out.d = dout[2];\n            out.S = time % 60;\n            time = Math.floor(time / 60);\n            out.M = time % 60;\n            time = Math.floor(time / 60);\n            out.H = time;\n            out.q = dow;\n            return out;\n        }\n        SSF.parse_date_code = parse_date_code;\n        var basedate = new Date(1899, 11, 31, 0, 0, 0);\n        var dnthresh = basedate.getTime();\n        var base1904 = new Date(1900, 2, 1, 0, 0, 0);\n        function datenum_local(v, date1904) {\n            var epoch = v.getTime();\n            if (date1904)\n                epoch -= 1461 * 24 * 60 * 60 * 1000;\n            else if (v >= base1904)\n                epoch += 24 * 60 * 60 * 1000;\n            return (epoch - (dnthresh + (v.getTimezoneOffset() - basedate.getTimezoneOffset()) * 60000)) / (24 * 60 * 60 * 1000);\n        }    /* The longest 32-bit integer text is \"-4294967296\", exactly 11 chars */\n        /* The longest 32-bit integer text is \"-4294967296\", exactly 11 chars */\n        function general_fmt_int(v) {\n            return v.toString(10);\n        }\n        SSF._general_int = general_fmt_int;    /* ECMA-376 18.8.30 numFmt*/\n                                               /* Note: `toPrecision` uses standard form when prec > E and E >= -6 */\n        /* ECMA-376 18.8.30 numFmt*/\n        /* Note: `toPrecision` uses standard form when prec > E and E >= -6 */\n        var general_fmt_num = function make_general_fmt_num() {\n            var trailing_zeroes_and_decimal = /(?:\\.0*|(\\.\\d*[1-9])0+)$/;\n            function strip_decimal(o) {\n                return o.indexOf('.') == -1 ? o : o.replace(trailing_zeroes_and_decimal, '$1');\n            }    /* General Exponential always shows 2 digits exp and trims the mantissa */\n            /* General Exponential always shows 2 digits exp and trims the mantissa */\n            var mantissa_zeroes_and_decimal = /(?:\\.0*|(\\.\\d*[1-9])0+)[Ee]/;\n            var exp_with_single_digit = /(E[+-])(\\d)$/;\n            function normalize_exp(o) {\n                if (o.indexOf('E') == -1)\n                    return o;\n                return o.replace(mantissa_zeroes_and_decimal, '$1E').replace(exp_with_single_digit, '$10$2');\n            }    /* exponent >= -9 and <= 9 */\n            /* exponent >= -9 and <= 9 */\n            function small_exp(v) {\n                var w = v < 0 ? 12 : 11;\n                var o = strip_decimal(v.toFixed(12));\n                if (o.length <= w)\n                    return o;\n                o = v.toPrecision(10);\n                if (o.length <= w)\n                    return o;\n                return v.toExponential(5);\n            }    /* exponent >= 11 or <= -10 likely exponential */\n            /* exponent >= 11 or <= -10 likely exponential */\n            function large_exp(v) {\n                var o = strip_decimal(v.toFixed(11));\n                return o.length > (v < 0 ? 12 : 11) || o === '0' || o === '-0' ? v.toPrecision(6) : o;\n            }\n            function general_fmt_num_base(v) {\n                var V = Math.floor(Math.log(Math.abs(v)) * Math.LOG10E), o;\n                if (V >= -4 && V <= -1)\n                    o = v.toPrecision(10 + V);\n                else if (Math.abs(V) <= 9)\n                    o = small_exp(v);\n                else if (V === 10)\n                    o = v.toFixed(10).substr(0, 12);\n                else\n                    o = large_exp(v);\n                return strip_decimal(normalize_exp(o.toUpperCase()));\n            }\n            return general_fmt_num_base;\n        }();\n        SSF._general_num = general_fmt_num;    /*\n        \"General\" rules:\n        - text is passed through (\"@\")\n        - booleans are rendered as TRUE/FALSE\n        - \"up to 11 characters\" displayed for numbers\n        - Default date format (code 14) used for Dates\n        TODO: technically the display depends on the width of the cell\n    */\n        /*\n        \"General\" rules:\n        - text is passed through (\"@\")\n        - booleans are rendered as TRUE/FALSE\n        - \"up to 11 characters\" displayed for numbers\n        - Default date format (code 14) used for Dates\n        TODO: technically the display depends on the width of the cell\n    */\n        function general_fmt(v, opts) {\n            switch (typeof v) {\n            case 'string':\n                return v;\n            case 'boolean':\n                return v ? 'TRUE' : 'FALSE';\n            case 'number':\n                return (v | 0) === v ? v.toString(10) : general_fmt_num(v);\n            case 'undefined':\n                return '';\n            case 'object':\n                if (v == null)\n                    return '';\n                if (v instanceof Date)\n                    return format(14, datenum_local(v, opts && opts.date1904), opts);\n            }\n            throw new Error('unsupported value in General format: ' + v);\n        }\n        SSF._general = general_fmt;\n        function fix_hijri(date, o) {\n            /* TODO: properly adjust y/m/d and  */\n            o[0] -= 581;\n            var dow = date.getDay();\n            if (date < 60)\n                dow = (dow + 6) % 7;\n            return dow;\n        }\n        var THAI_DIGITS = '๐๑๒๓๔๕๖๗๘๙'.split('');    /*jshint -W086 */\n        /*jshint -W086 */\n        function write_date(type, fmt, val, ss0) {\n            var o = '', ss = 0, tt = 0, y = val.y, out, outl = 0;\n            switch (type) {\n            case 98:\n                /* 'b' buddhist year */\n                y = val.y + 543;    /* falls through */\n            /* falls through */\n            case 121:\n                /* 'y' year */\n                switch (fmt.length) {\n                case 1:\n                case 2:\n                    out = y % 100;\n                    outl = 2;\n                    break;\n                default:\n                    out = y % 10000;\n                    outl = 4;\n                    break;\n                }\n                break;\n            case 109:\n                /* 'm' month */\n                switch (fmt.length) {\n                case 1:\n                case 2:\n                    out = val.m;\n                    outl = fmt.length;\n                    break;\n                case 3:\n                    return months[val.m - 1][1];\n                case 5:\n                    return months[val.m - 1][0];\n                default:\n                    return months[val.m - 1][2];\n                }\n                break;\n            case 100:\n                /* 'd' day */\n                switch (fmt.length) {\n                case 1:\n                case 2:\n                    out = val.d;\n                    outl = fmt.length;\n                    break;\n                case 3:\n                    return days[val.q][0];\n                default:\n                    return days[val.q][1];\n                }\n                break;\n            case 104:\n                /* 'h' 12-hour */\n                switch (fmt.length) {\n                case 1:\n                case 2:\n                    out = 1 + (val.H + 11) % 12;\n                    outl = fmt.length;\n                    break;\n                default:\n                    throw 'bad hour format: ' + fmt;\n                }\n                break;\n            case 72:\n                /* 'H' 24-hour */\n                switch (fmt.length) {\n                case 1:\n                case 2:\n                    out = val.H;\n                    outl = fmt.length;\n                    break;\n                default:\n                    throw 'bad hour format: ' + fmt;\n                }\n                break;\n            case 77:\n                /* 'M' minutes */\n                switch (fmt.length) {\n                case 1:\n                case 2:\n                    out = val.M;\n                    outl = fmt.length;\n                    break;\n                default:\n                    throw 'bad minute format: ' + fmt;\n                }\n                break;\n            case 115:\n                /* 's' seconds */\n                if (fmt != 's' && fmt != 'ss' && fmt != '.0' && fmt != '.00' && fmt != '.000')\n                    throw 'bad second format: ' + fmt;\n                if (val.u === 0 && (fmt == 's' || fmt == 'ss'))\n                    return pad0(val.S, fmt.length);\n                if (ss0 >= 2)\n                    tt = ss0 === 3 ? 1000 : 100;\n                else\n                    tt = ss0 === 1 ? 10 : 1;\n                ss = Math.round(tt * (val.S + val.u));\n                if (ss >= 60 * tt)\n                    ss = 0;\n                if (fmt === 's')\n                    return ss === 0 ? '0' : '' + ss / tt;\n                o = pad0(ss, 2 + ss0);\n                if (fmt === 'ss')\n                    return o.substr(0, 2);\n                return '.' + o.substr(2, fmt.length - 1);\n            case 90:\n                /* 'Z' absolute time */\n                switch (fmt) {\n                case '[h]':\n                case '[hh]':\n                    out = val.D * 24 + val.H;\n                    break;\n                case '[m]':\n                case '[mm]':\n                    out = (val.D * 24 + val.H) * 60 + val.M;\n                    break;\n                case '[s]':\n                case '[ss]':\n                    out = ((val.D * 24 + val.H) * 60 + val.M) * 60 + Math.round(val.S + val.u);\n                    break;\n                default:\n                    throw 'bad abstime format: ' + fmt;\n                }\n                outl = fmt.length === 3 ? 1 : 2;\n                break;\n            case 101:\n                /* 'e' era */\n                out = y;\n                outl = 1;\n                break;\n            }\n            var outstr = outl > 0 ? pad0(out, outl) : '';\n            return outstr;\n        }    /*jshint +W086 */\n        /*jshint +W086 */\n        function commaify(s) {\n            var w = 3;\n            if (s.length <= w)\n                return s;\n            var j = s.length % w, o = s.substr(0, j);\n            for (; j != s.length; j += w)\n                o += (o.length > 0 ? ',' : '') + s.substr(j, w);\n            return o;\n        }\n        var write_num = function make_write_num() {\n            var pct1 = /%/g;\n            function write_num_pct(type, fmt, val) {\n                var sfmt = fmt.replace(pct1, ''), mul = fmt.length - sfmt.length;\n                return write_num(type, sfmt, val * Math.pow(10, 2 * mul)) + fill('%', mul);\n            }\n            function write_num_cm(type, fmt, val) {\n                var idx = fmt.length - 1;\n                while (fmt.charCodeAt(idx - 1) === 44)\n                    --idx;\n                return write_num(type, fmt.substr(0, idx), val / Math.pow(10, 3 * (fmt.length - idx)));\n            }\n            function write_num_exp(fmt, val) {\n                var o;\n                var idx = fmt.indexOf('E') - fmt.indexOf('.') - 1;\n                if (fmt.match(/^#+0.0E\\+0$/)) {\n                    if (val == 0)\n                        return '0.0E+0';\n                    else if (val < 0)\n                        return '-' + write_num_exp(fmt, -val);\n                    var period = fmt.indexOf('.');\n                    if (period === -1)\n                        period = fmt.indexOf('E');\n                    var ee = Math.floor(Math.log(val) * Math.LOG10E) % period;\n                    if (ee < 0)\n                        ee += period;\n                    o = (val / Math.pow(10, ee)).toPrecision(idx + 1 + (period + ee) % period);\n                    if (o.indexOf('e') === -1) {\n                        var fakee = Math.floor(Math.log(val) * Math.LOG10E);\n                        if (o.indexOf('.') === -1)\n                            o = o.charAt(0) + '.' + o.substr(1) + 'E+' + (fakee - o.length + ee);\n                        else\n                            o += 'E+' + (fakee - ee);\n                        while (o.substr(0, 2) === '0.') {\n                            o = o.charAt(0) + o.substr(2, period) + '.' + o.substr(2 + period);\n                            o = o.replace(/^0+([1-9])/, '$1').replace(/^0+\\./, '0.');\n                        }\n                        o = o.replace(/\\+-/, '-');\n                    }\n                    o = o.replace(/^([+-]?)(\\d*)\\.(\\d*)[Ee]/, function ($$, $1, $2, $3) {\n                        return $1 + $2 + $3.substr(0, (period + ee) % period) + '.' + $3.substr(ee) + 'E';\n                    });\n                } else\n                    o = val.toExponential(idx);\n                if (fmt.match(/E\\+00$/) && o.match(/e[+-]\\d$/))\n                    o = o.substr(0, o.length - 1) + '0' + o.charAt(o.length - 1);\n                if (fmt.match(/E\\-/) && o.match(/e\\+/))\n                    o = o.replace(/e\\+/, 'e');\n                return o.replace('e', 'E');\n            }\n            var frac1 = /# (\\?+)( ?)\\/( ?)(\\d+)/;\n            function write_num_f1(r, aval, sign) {\n                var den = parseInt(r[4], 10), rr = Math.round(aval * den), base = Math.floor(rr / den);\n                var myn = rr - base * den, myd = den;\n                return sign + (base === 0 ? '' : '' + base) + ' ' + (myn === 0 ? fill(' ', r[1].length + 1 + r[4].length) : pad_(myn, r[1].length) + r[2] + '/' + r[3] + pad0(myd, r[4].length));\n            }\n            function write_num_f2(r, aval, sign) {\n                return sign + (aval === 0 ? '' : '' + aval) + fill(' ', r[1].length + 2 + r[4].length);\n            }\n            var dec1 = /^#*0*\\.([0#]+)/;\n            var closeparen = /\\).*[0#]/;\n            var phone = /\\(###\\) ###\\\\?-####/;\n            function hashq(str) {\n                var o = '', cc;\n                for (var i = 0; i != str.length; ++i)\n                    switch (cc = str.charCodeAt(i)) {\n                    case 35:\n                        break;\n                    case 63:\n                        o += ' ';\n                        break;\n                    case 48:\n                        o += '0';\n                        break;\n                    default:\n                        o += String.fromCharCode(cc);\n                    }\n                return o;\n            }\n            function rnd(val, d) {\n                var dd = Math.pow(10, d);\n                return '' + Math.round(val * dd) / dd;\n            }\n            function dec(val, d) {\n                var _frac = val - Math.floor(val), dd = Math.pow(10, d);\n                if (d < ('' + Math.round(_frac * dd)).length)\n                    return 0;\n                return Math.round(_frac * dd);\n            }\n            function carry(val, d) {\n                if (d < ('' + Math.round((val - Math.floor(val)) * Math.pow(10, d))).length) {\n                    return 1;\n                }\n                return 0;\n            }\n            function flr(val) {\n                if (val < 2147483647 && val > -2147483648)\n                    return '' + (val >= 0 ? val | 0 : val - 1 | 0);\n                return '' + Math.floor(val);\n            }\n            function write_num_flt(type, fmt, val) {\n                if (type.charCodeAt(0) === 40 && !fmt.match(closeparen)) {\n                    var ffmt = fmt.replace(/\\( */, '').replace(/ \\)/, '').replace(/\\)/, '');\n                    if (val >= 0)\n                        return write_num_flt('n', ffmt, val);\n                    return '(' + write_num_flt('n', ffmt, -val) + ')';\n                }\n                if (fmt.charCodeAt(fmt.length - 1) === 44)\n                    return write_num_cm(type, fmt, val);\n                if (fmt.indexOf('%') !== -1)\n                    return write_num_pct(type, fmt, val);\n                if (fmt.indexOf('E') !== -1)\n                    return write_num_exp(fmt, val);\n                if (fmt.charCodeAt(0) === 36)\n                    return '$' + write_num_flt(type, fmt.substr(fmt.charAt(1) == ' ' ? 2 : 1), val);\n                var o;\n                var r, ri, ff, aval = Math.abs(val), sign = val < 0 ? '-' : '';\n                if (fmt.match(/^00+$/))\n                    return sign + pad0r(aval, fmt.length);\n                if (fmt.match(/^[#?]+$/)) {\n                    o = pad0r(val, 0);\n                    if (o === '0')\n                        o = '';\n                    return o.length > fmt.length ? o : hashq(fmt.substr(0, fmt.length - o.length)) + o;\n                }\n                if (r = fmt.match(frac1))\n                    return write_num_f1(r, aval, sign);\n                if (fmt.match(/^#+0+$/))\n                    return sign + pad0r(aval, fmt.length - fmt.indexOf('0'));\n                if (r = fmt.match(dec1)) {\n                    o = rnd(val, r[1].length).replace(/^([^\\.]+)$/, '$1.' + hashq(r[1])).replace(/\\.$/, '.' + hashq(r[1])).replace(/\\.(\\d*)$/, function ($$, $1) {\n                        return '.' + $1 + fill('0', hashq(r[1]).length - $1.length);\n                    });\n                    return fmt.indexOf('0.') !== -1 ? o : o.replace(/^0\\./, '.');\n                }\n                fmt = fmt.replace(/^#+([0.])/, '$1');\n                if (r = fmt.match(/^(0*)\\.(#*)$/)) {\n                    return sign + rnd(aval, r[2].length).replace(/\\.(\\d*[1-9])0*$/, '.$1').replace(/^(-?\\d*)$/, '$1.').replace(/^0\\./, r[1].length ? '0.' : '.');\n                }\n                if (r = fmt.match(/^#{1,3},##0(\\.?)$/))\n                    return sign + commaify(pad0r(aval, 0));\n                if (r = fmt.match(/^#,##0\\.([#0]*0)$/)) {\n                    return val < 0 ? '-' + write_num_flt(type, fmt, -val) : commaify('' + (Math.floor(val) + carry(val, r[1].length))) + '.' + pad0(dec(val, r[1].length), r[1].length);\n                }\n                if (r = fmt.match(/^#,#*,#0/))\n                    return write_num_flt(type, fmt.replace(/^#,#*,/, ''), val);\n                if (r = fmt.match(/^([0#]+)(\\\\?-([0#]+))+$/)) {\n                    o = _strrev(write_num_flt(type, fmt.replace(/[\\\\-]/g, ''), val));\n                    ri = 0;\n                    return _strrev(_strrev(fmt.replace(/\\\\/g, '')).replace(/[0#]/g, function (x) {\n                        return ri < o.length ? o.charAt(ri++) : x === '0' ? '0' : '';\n                    }));\n                }\n                if (fmt.match(phone)) {\n                    o = write_num_flt(type, '##########', val);\n                    return '(' + o.substr(0, 3) + ') ' + o.substr(3, 3) + '-' + o.substr(6);\n                }\n                var oa = '';\n                if (r = fmt.match(/^([#0?]+)( ?)\\/( ?)([#0?]+)/)) {\n                    ri = Math.min(r[4].length, 7);\n                    ff = frac(aval, Math.pow(10, ri) - 1, false);\n                    o = '' + sign;\n                    oa = write_num('n', r[1], ff[1]);\n                    if (oa.charAt(oa.length - 1) == ' ')\n                        oa = oa.substr(0, oa.length - 1) + '0';\n                    o += oa + r[2] + '/' + r[3];\n                    oa = rpad_(ff[2], ri);\n                    if (oa.length < r[4].length)\n                        oa = hashq(r[4].substr(r[4].length - oa.length)) + oa;\n                    o += oa;\n                    return o;\n                }\n                if (r = fmt.match(/^# ([#0?]+)( ?)\\/( ?)([#0?]+)/)) {\n                    ri = Math.min(Math.max(r[1].length, r[4].length), 7);\n                    ff = frac(aval, Math.pow(10, ri) - 1, true);\n                    return sign + (ff[0] || (ff[1] ? '' : '0')) + ' ' + (ff[1] ? pad_(ff[1], ri) + r[2] + '/' + r[3] + rpad_(ff[2], ri) : fill(' ', 2 * ri + 1 + r[2].length + r[3].length));\n                }\n                if (r = fmt.match(/^[#0?]+$/)) {\n                    o = pad0r(val, 0);\n                    if (fmt.length <= o.length)\n                        return o;\n                    return hashq(fmt.substr(0, fmt.length - o.length)) + o;\n                }\n                if (r = fmt.match(/^([#0?]+)\\.([#0]+)$/)) {\n                    o = '' + val.toFixed(Math.min(r[2].length, 10)).replace(/([^0])0+$/, '$1');\n                    ri = o.indexOf('.');\n                    var lres = fmt.indexOf('.') - ri, rres = fmt.length - o.length - lres;\n                    return hashq(fmt.substr(0, lres) + o + fmt.substr(fmt.length - rres));\n                }\n                if (r = fmt.match(/^00,000\\.([#0]*0)$/)) {\n                    ri = dec(val, r[1].length);\n                    return val < 0 ? '-' + write_num_flt(type, fmt, -val) : commaify(flr(val)).replace(/^\\d,\\d{3}$/, '0$&').replace(/^\\d*$/, function ($$) {\n                        return '00,' + ($$.length < 3 ? pad0(0, 3 - $$.length) : '') + $$;\n                    }) + '.' + pad0(ri, r[1].length);\n                }\n                switch (fmt) {\n                case '###,##0.00':\n                    return write_num_flt(type, '#,##0.00', val);\n                case '###,###':\n                case '##,###':\n                case '#,###':\n                    var x = commaify(pad0r(aval, 0));\n                    return x !== '0' ? sign + x : '';\n                case '###,###.00':\n                    return write_num_flt(type, '###,##0.00', val).replace(/^0\\./, '.');\n                case '#,###.00':\n                    return write_num_flt(type, '#,##0.00', val).replace(/^0\\./, '.');\n                default:\n                }\n                throw new Error('unsupported format |' + fmt + '|');\n            }\n            function write_num_cm2(type, fmt, val) {\n                var idx = fmt.length - 1;\n                while (fmt.charCodeAt(idx - 1) === 44)\n                    --idx;\n                return write_num(type, fmt.substr(0, idx), val / Math.pow(10, 3 * (fmt.length - idx)));\n            }\n            function write_num_pct2(type, fmt, val) {\n                var sfmt = fmt.replace(pct1, ''), mul = fmt.length - sfmt.length;\n                return write_num(type, sfmt, val * Math.pow(10, 2 * mul)) + fill('%', mul);\n            }\n            function write_num_exp2(fmt, val) {\n                var o;\n                var idx = fmt.indexOf('E') - fmt.indexOf('.') - 1;\n                if (fmt.match(/^#+0.0E\\+0$/)) {\n                    if (val == 0)\n                        return '0.0E+0';\n                    else if (val < 0)\n                        return '-' + write_num_exp2(fmt, -val);\n                    var period = fmt.indexOf('.');\n                    if (period === -1)\n                        period = fmt.indexOf('E');\n                    var ee = Math.floor(Math.log(val) * Math.LOG10E) % period;\n                    if (ee < 0)\n                        ee += period;\n                    o = (val / Math.pow(10, ee)).toPrecision(idx + 1 + (period + ee) % period);\n                    if (!o.match(/[Ee]/)) {\n                        var fakee = Math.floor(Math.log(val) * Math.LOG10E);\n                        if (o.indexOf('.') === -1)\n                            o = o.charAt(0) + '.' + o.substr(1) + 'E+' + (fakee - o.length + ee);\n                        else\n                            o += 'E+' + (fakee - ee);\n                        o = o.replace(/\\+-/, '-');\n                    }\n                    o = o.replace(/^([+-]?)(\\d*)\\.(\\d*)[Ee]/, function ($$, $1, $2, $3) {\n                        return $1 + $2 + $3.substr(0, (period + ee) % period) + '.' + $3.substr(ee) + 'E';\n                    });\n                } else\n                    o = val.toExponential(idx);\n                if (fmt.match(/E\\+00$/) && o.match(/e[+-]\\d$/))\n                    o = o.substr(0, o.length - 1) + '0' + o.charAt(o.length - 1);\n                if (fmt.match(/E\\-/) && o.match(/e\\+/))\n                    o = o.replace(/e\\+/, 'e');\n                return o.replace('e', 'E');\n            }\n            function write_num_int(type, fmt, val) {\n                if (type.charCodeAt(0) === 40 && !fmt.match(closeparen)) {\n                    var ffmt = fmt.replace(/\\( */, '').replace(/ \\)/, '').replace(/\\)/, '');\n                    if (val >= 0)\n                        return write_num_int('n', ffmt, val);\n                    return '(' + write_num_int('n', ffmt, -val) + ')';\n                }\n                if (fmt.charCodeAt(fmt.length - 1) === 44)\n                    return write_num_cm2(type, fmt, val);\n                if (fmt.indexOf('%') !== -1)\n                    return write_num_pct2(type, fmt, val);\n                if (fmt.indexOf('E') !== -1)\n                    return write_num_exp2(fmt, val);\n                if (fmt.charCodeAt(0) === 36)\n                    return '$' + write_num_int(type, fmt.substr(fmt.charAt(1) == ' ' ? 2 : 1), val);\n                var o;\n                var r, ri, ff, aval = Math.abs(val), sign = val < 0 ? '-' : '';\n                if (fmt.match(/^00+$/))\n                    return sign + pad0(aval, fmt.length);\n                if (fmt.match(/^[#?]+$/)) {\n                    o = '' + val;\n                    if (val === 0)\n                        o = '';\n                    return o.length > fmt.length ? o : hashq(fmt.substr(0, fmt.length - o.length)) + o;\n                }\n                if (r = fmt.match(frac1))\n                    return write_num_f2(r, aval, sign);\n                if (fmt.match(/^#+0+$/))\n                    return sign + pad0(aval, fmt.length - fmt.indexOf('0'));\n                if (r = fmt.match(dec1)) {\n                    o = ('' + val).replace(/^([^\\.]+)$/, '$1.' + hashq(r[1])).replace(/\\.$/, '.' + hashq(r[1]));\n                    o = o.replace(/\\.(\\d*)$/, function ($$, $1) {\n                        return '.' + $1 + fill('0', hashq(r[1]).length - $1.length);\n                    });\n                    return fmt.indexOf('0.') !== -1 ? o : o.replace(/^0\\./, '.');\n                }\n                fmt = fmt.replace(/^#+([0.])/, '$1');\n                if (r = fmt.match(/^(0*)\\.(#*)$/)) {\n                    return sign + ('' + aval).replace(/\\.(\\d*[1-9])0*$/, '.$1').replace(/^(-?\\d*)$/, '$1.').replace(/^0\\./, r[1].length ? '0.' : '.');\n                }\n                if (r = fmt.match(/^#{1,3},##0(\\.?)$/))\n                    return sign + commaify('' + aval);\n                if (r = fmt.match(/^#,##0\\.([#0]*0)$/)) {\n                    return val < 0 ? '-' + write_num_int(type, fmt, -val) : commaify('' + val) + '.' + fill('0', r[1].length);\n                }\n                if (r = fmt.match(/^#,#*,#0/))\n                    return write_num_int(type, fmt.replace(/^#,#*,/, ''), val);\n                if (r = fmt.match(/^([0#]+)(\\\\?-([0#]+))+$/)) {\n                    o = _strrev(write_num_int(type, fmt.replace(/[\\\\-]/g, ''), val));\n                    ri = 0;\n                    return _strrev(_strrev(fmt.replace(/\\\\/g, '')).replace(/[0#]/g, function (x) {\n                        return ri < o.length ? o.charAt(ri++) : x === '0' ? '0' : '';\n                    }));\n                }\n                if (fmt.match(phone)) {\n                    o = write_num_int(type, '##########', val);\n                    return '(' + o.substr(0, 3) + ') ' + o.substr(3, 3) + '-' + o.substr(6);\n                }\n                var oa = '';\n                if (r = fmt.match(/^([#0?]+)( ?)\\/( ?)([#0?]+)/)) {\n                    ri = Math.min(r[4].length, 7);\n                    ff = frac(aval, Math.pow(10, ri) - 1, false);\n                    o = '' + sign;\n                    oa = write_num('n', r[1], ff[1]);\n                    if (oa.charAt(oa.length - 1) == ' ')\n                        oa = oa.substr(0, oa.length - 1) + '0';\n                    o += oa + r[2] + '/' + r[3];\n                    oa = rpad_(ff[2], ri);\n                    if (oa.length < r[4].length)\n                        oa = hashq(r[4].substr(r[4].length - oa.length)) + oa;\n                    o += oa;\n                    return o;\n                }\n                if (r = fmt.match(/^# ([#0?]+)( ?)\\/( ?)([#0?]+)/)) {\n                    ri = Math.min(Math.max(r[1].length, r[4].length), 7);\n                    ff = frac(aval, Math.pow(10, ri) - 1, true);\n                    return sign + (ff[0] || (ff[1] ? '' : '0')) + ' ' + (ff[1] ? pad_(ff[1], ri) + r[2] + '/' + r[3] + rpad_(ff[2], ri) : fill(' ', 2 * ri + 1 + r[2].length + r[3].length));\n                }\n                if (r = fmt.match(/^[#0?]+$/)) {\n                    o = '' + val;\n                    if (fmt.length <= o.length)\n                        return o;\n                    return hashq(fmt.substr(0, fmt.length - o.length)) + o;\n                }\n                if (r = fmt.match(/^([#0]+)\\.([#0]+)$/)) {\n                    o = '' + val.toFixed(Math.min(r[2].length, 10)).replace(/([^0])0+$/, '$1');\n                    ri = o.indexOf('.');\n                    var lres = fmt.indexOf('.') - ri, rres = fmt.length - o.length - lres;\n                    return hashq(fmt.substr(0, lres) + o + fmt.substr(fmt.length - rres));\n                }\n                if (r = fmt.match(/^00,000\\.([#0]*0)$/)) {\n                    return val < 0 ? '-' + write_num_int(type, fmt, -val) : commaify('' + val).replace(/^\\d,\\d{3}$/, '0$&').replace(/^\\d*$/, function ($$) {\n                        return '00,' + ($$.length < 3 ? pad0(0, 3 - $$.length) : '') + $$;\n                    }) + '.' + pad0(0, r[1].length);\n                }\n                switch (fmt) {\n                case '###,###':\n                case '##,###':\n                case '#,###':\n                    var x = commaify('' + aval);\n                    return x !== '0' ? sign + x : '';\n                default:\n                    if (fmt.match(/\\.[0#?]*$/))\n                        return write_num_int(type, fmt.slice(0, fmt.lastIndexOf('.')), val) + hashq(fmt.slice(fmt.lastIndexOf('.')));\n                }\n                throw new Error('unsupported format |' + fmt + '|');\n            }\n            return function write_num(type, fmt, val) {\n                return (val | 0) === val ? write_num_int(type, fmt, val) : write_num_flt(type, fmt, val);\n            };\n        }();\n        function split_fmt(fmt) {\n            var out = [];\n            var in_str = false    /*, cc*/;\n            /*, cc*/\n            for (var i = 0, j = 0; i < fmt.length; ++i)\n                switch (/*cc=*/\n                    fmt.charCodeAt(i)) {\n                case 34:\n                    /* '\"' */\n                    in_str = !in_str;\n                    break;\n                case 95:\n                case 42:\n                case 92:\n                    /* '_' '*' '\\\\' */\n                    ++i;\n                    break;\n                case 59:\n                    /* ';' */\n                    out[out.length] = fmt.substr(j, i - j);\n                    j = i + 1;\n                }\n            out[out.length] = fmt.substr(j);\n            if (in_str === true)\n                throw new Error('Format |' + fmt + '| unterminated string ');\n            return out;\n        }\n        SSF._split = split_fmt;\n        var abstime = /\\[[HhMmSs\\u0E0A\\u0E19\\u0E17]*\\]/;\n        function fmt_is_date(fmt) {\n            var i = 0,\n                /*cc = 0,*/\n                c = '', o = '';\n            while (i < fmt.length) {\n                switch (c = fmt.charAt(i)) {\n                case 'G':\n                    if (isgeneral(fmt, i))\n                        i += 6;\n                    i++;\n                    break;\n                case '\"':\n                    for (; /*cc=*/\n                        fmt.charCodeAt(++i) !== 34 && i < fmt.length;) {\n                    }\n                    ++i;\n                    break;\n                case '\\\\':\n                    i += 2;\n                    break;\n                case '_':\n                    i += 2;\n                    break;\n                case '@':\n                    ++i;\n                    break;\n                case 'B':\n                case 'b':\n                    if (fmt.charAt(i + 1) === '1' || fmt.charAt(i + 1) === '2')\n                        return true;    /* falls through */\n                /* falls through */\n                case 'M':\n                case 'D':\n                case 'Y':\n                case 'H':\n                case 'S':\n                case 'E':    /* falls through */\n                /* falls through */\n                case 'm':\n                case 'd':\n                case 'y':\n                case 'h':\n                case 's':\n                case 'e':\n                case 'g':\n                    return true;\n                case 'A':\n                case 'a':\n                case '上':\n                    if (fmt.substr(i, 3).toUpperCase() === 'A/P')\n                        return true;\n                    if (fmt.substr(i, 5).toUpperCase() === 'AM/PM')\n                        return true;\n                    if (fmt.substr(i, 5).toUpperCase() === '上午/下午')\n                        return true;\n                    ++i;\n                    break;\n                case '[':\n                    o = c;\n                    while (fmt.charAt(i++) !== ']' && i < fmt.length)\n                        o += fmt.charAt(i);\n                    if (o.match(abstime))\n                        return true;\n                    break;\n                case '.':    /* falls through */\n                /* falls through */\n                case '0':\n                case '#':\n                    while (i < fmt.length && ('0#?.,E+-%'.indexOf(c = fmt.charAt(++i)) > -1 || c == '\\\\' && fmt.charAt(i + 1) == '-' && '0#'.indexOf(fmt.charAt(i + 2)) > -1)) {\n                    }\n                    break;\n                case '?':\n                    while (fmt.charAt(++i) === c) {\n                    }\n                    break;\n                case '*':\n                    ++i;\n                    if (fmt.charAt(i) == ' ' || fmt.charAt(i) == '*')\n                        ++i;\n                    break;\n                case '(':\n                case ')':\n                    ++i;\n                    break;\n                case '1':\n                case '2':\n                case '3':\n                case '4':\n                case '5':\n                case '6':\n                case '7':\n                case '8':\n                case '9':\n                    while (i < fmt.length && '0123456789'.indexOf(fmt.charAt(++i)) > -1) {\n                    }\n                    break;\n                case ' ':\n                    ++i;\n                    break;\n                default:\n                    ++i;\n                    break;\n                }\n            }\n            return false;\n        }\n        SSF.is_date = fmt_is_date;\n        function eval_fmt(fmt, v, opts, flen) {\n            var out = [], o = '', i = 0, c = '', lst = 't', dt, j, cc;\n            var hr = 'H';    /* Tokenize */\n            /* Tokenize */\n            while (i < fmt.length) {\n                switch (c = fmt.charAt(i)) {\n                case 'G':\n                    /* General */\n                    if (!isgeneral(fmt, i))\n                        throw new Error('unrecognized character ' + c + ' in ' + fmt);\n                    out[out.length] = {\n                        t: 'G',\n                        v: 'General'\n                    };\n                    i += 7;\n                    break;\n                case '\"':\n                    /* Literal text */\n                    for (o = ''; (cc = fmt.charCodeAt(++i)) !== 34 && i < fmt.length;)\n                        o += String.fromCharCode(cc);\n                    out[out.length] = {\n                        t: 't',\n                        v: o\n                    };\n                    ++i;\n                    break;\n                case '\\\\':\n                    var w = fmt.charAt(++i), t = w === '(' || w === ')' ? w : 't';\n                    out[out.length] = {\n                        t: t,\n                        v: w\n                    };\n                    ++i;\n                    break;\n                case '_':\n                    out[out.length] = {\n                        t: 't',\n                        v: ' '\n                    };\n                    i += 2;\n                    break;\n                case '@':\n                    /* Text Placeholder */\n                    out[out.length] = {\n                        t: 'T',\n                        v: v\n                    };\n                    ++i;\n                    break;\n                case 'B':\n                case 'b':\n                    if (fmt.charAt(i + 1) === '1' || fmt.charAt(i + 1) === '2') {\n                        if (dt == null) {\n                            dt = parse_date_code(v, opts, fmt.charAt(i + 1) === '2');\n                            if (dt == null)\n                                return '';\n                        }\n                        out[out.length] = {\n                            t: 'X',\n                            v: fmt.substr(i, 2)\n                        };\n                        lst = c;\n                        i += 2;\n                        break;\n                    }    /* falls through */\n                /* falls through */\n                case 'M':\n                case 'D':\n                case 'Y':\n                case 'H':\n                case 'S':\n                case 'E':\n                    c = c.toLowerCase();    /* falls through */\n                /* falls through */\n                case 'm':\n                case 'd':\n                case 'y':\n                case 'h':\n                case 's':\n                case 'e':\n                case 'g':\n                    if (v < 0)\n                        return '';\n                    if (dt == null) {\n                        dt = parse_date_code(v, opts);\n                        if (dt == null)\n                            return '#####';\n                    }\n                    o = c;\n                    while (++i < fmt.length && fmt.charAt(i).toLowerCase() === c)\n                        o += c;\n                    if (c === 'm' && lst.toLowerCase() === 'h')\n                        c = 'M';\n                    if (c === 'h')\n                        c = hr;\n                    out[out.length] = {\n                        t: c,\n                        v: o\n                    };\n                    lst = c;\n                    break;\n                case 'A':\n                case 'a':\n                case '上':\n                    var q = {\n                        t: c,\n                        v: c\n                    };\n                    if (dt == null)\n                        dt = parse_date_code(v, opts);\n                    if (fmt.substr(i, 3).toUpperCase() === 'A/P') {\n                        if (dt != null)\n                            q.v = dt.H >= 12 ? 'P' : 'A';\n                        q.t = 'T';\n                        hr = 'h';\n                        i += 3;\n                    } else if (fmt.substr(i, 5).toUpperCase() === 'AM/PM') {\n                        if (dt != null)\n                            q.v = dt.H >= 12 ? 'PM' : 'AM';\n                        q.t = 'T';\n                        i += 5;\n                        hr = 'h';\n                    } else if (fmt.substr(i, 5).toUpperCase() === '上午/下午') {\n                        if (dt != null)\n                            q.v = dt.H >= 12 ? '下午' : '上午';\n                        q.t = 'T';\n                        i += 5;\n                        hr = 'h';\n                    } else {\n                        q.t = 't';\n                        ++i;\n                    }\n                    if (dt == null && q.t === 'T')\n                        return '';\n                    out[out.length] = q;\n                    lst = c;\n                    break;\n                case '[':\n                    o = c;\n                    while (fmt.charAt(i++) !== ']' && i < fmt.length)\n                        o += fmt.charAt(i);\n                    if (o.slice(-1) !== ']')\n                        throw 'unterminated \"[\" block: |' + o + '|';\n                    if (o.match(abstime)) {\n                        if (dt == null) {\n                            dt = parse_date_code(v, opts);\n                            if (dt == null)\n                                return '';\n                        }\n                        out[out.length] = {\n                            t: 'Z',\n                            v: o.toLowerCase()\n                        };\n                        lst = o.charAt(1);\n                    } else if (o.indexOf('$') > -1) {\n                        o = (o.match(/\\$([^-\\[\\]]*)/) || [])[1] || '$';\n                        if (!fmt_is_date(fmt))\n                            out[out.length] = {\n                                t: 't',\n                                v: o\n                            };\n                    }\n                    break;    /* Numbers */\n                /* Numbers */\n                case '.':\n                    if (dt != null) {\n                        o = c;\n                        while (++i < fmt.length && (c = fmt.charAt(i)) === '0')\n                            o += c;\n                        out[out.length] = {\n                            t: 's',\n                            v: o\n                        };\n                        break;\n                    }    /* falls through */\n                /* falls through */\n                case '0':\n                case '#':\n                    o = c;\n                    while (++i < fmt.length && '0#?.,E+-%'.indexOf(c = fmt.charAt(i)) > -1)\n                        o += c;\n                    out[out.length] = {\n                        t: 'n',\n                        v: o\n                    };\n                    break;\n                case '?':\n                    o = c;\n                    while (fmt.charAt(++i) === c)\n                        o += c;\n                    out[out.length] = {\n                        t: c,\n                        v: o\n                    };\n                    lst = c;\n                    break;\n                case '*':\n                    ++i;\n                    if (fmt.charAt(i) == ' ' || fmt.charAt(i) == '*')\n                        ++i;\n                    break;    // **\n                // **\n                case '(':\n                case ')':\n                    out[out.length] = {\n                        t: flen === 1 ? 't' : c,\n                        v: c\n                    };\n                    ++i;\n                    break;\n                case '1':\n                case '2':\n                case '3':\n                case '4':\n                case '5':\n                case '6':\n                case '7':\n                case '8':\n                case '9':\n                    o = c;\n                    while (i < fmt.length && '0123456789'.indexOf(fmt.charAt(++i)) > -1)\n                        o += fmt.charAt(i);\n                    out[out.length] = {\n                        t: 'D',\n                        v: o\n                    };\n                    break;\n                case ' ':\n                    out[out.length] = {\n                        t: c,\n                        v: c\n                    };\n                    ++i;\n                    break;\n                case '$':\n                    out[out.length] = {\n                        t: 't',\n                        v: '$'\n                    };\n                    ++i;\n                    break;\n                default:\n                    // if (\"¤฿BsBr₵₡₫ƒFtRs.₭kr£₤Lm₥₦₱PQRSkRp৲৳R$S/.〒₮₩¥NT￥zł₴₪៛руб€＄,$-+/():!^&'~{}<>=€acfijklopqrtuvwxzP\".indexOf(c) === -1) throw new Error('unrecognized character ' + c + ' in ' + fmt);\n                    if (\"\\xA4\\u0E3FBsBr\\u20B5\\u20A1\\u20ABƒFtRs.\\u20ADkr\\xA3\\u20A4Lm\\u20A5\\u20A6\\u20B1PQRSkRp\\u09F2\\u09F3R$S/.\\u3012\\u20AE\\u20A9\\xA5NT\\uFFE5zł\\u20B4\\u20AA\\u17DBруб\\u20AC\\uFF04,$-+/():!^&'~{}<>=\\u20ACacfijklopqrtuvwxzP$\\uFFE5LekdinAf$dhAflRial?\\uFFE1BirrKzMOPPGKRsGsB/R$ррlevkrKMzBsPNuFBuKPkrRD$NfkCFA?CVEGMDFrCDHTGNAfLFdjKGSFGGHSRielKCFknKshLSLL\\uFFE1LtRFRONArRfMWKRMMURsMROS/KMDLMTnRC$kr\\u20ACGELCHFSLLSCRDbSZLSDGSOSSomFCFPTShT$VUVQUGXгрнsomWSTNT$FtDramRpZMWFCFA\".indexOf(c) === -1)\n                        throw new Error('unrecognized character ' + c + ' in ' + fmt);\n                    out[out.length] = {\n                        t: 't',\n                        v: c\n                    };\n                    ++i;\n                    break;\n                }\n            }    /* Scan for date/time parts */\n            /* Scan for date/time parts */\n            var bt = 0, ss0 = 0, ssm;\n            for (i = out.length - 1, lst = 't'; i >= 0; --i) {\n                switch (out[i].t) {\n                case 'h':\n                case 'H':\n                    out[i].t = hr;\n                    lst = 'h';\n                    if (bt < 1)\n                        bt = 1;\n                    break;\n                case 's':\n                    if (ssm = out[i].v.match(/\\.0+$/))\n                        ss0 = Math.max(ss0, ssm[0].length - 1);\n                    if (bt < 3)\n                        bt = 3;    /* falls through */\n                /* falls through */\n                case 'd':\n                case 'y':\n                case 'M':\n                case 'e':\n                    lst = out[i].t;\n                    break;\n                case 'm':\n                    if (lst === 's') {\n                        out[i].t = 'M';\n                        if (bt < 2)\n                            bt = 2;\n                    }\n                    break;\n                case 'X':\n                    /*if(out[i].v === \"B2\");*/\n                    break;\n                case 'Z':\n                    if (bt < 1 && out[i].v.match(/[Hh]/))\n                        bt = 1;\n                    if (bt < 2 && out[i].v.match(/[Mm]/))\n                        bt = 2;\n                    if (bt < 3 && out[i].v.match(/[Ss]/))\n                        bt = 3;\n                }\n            }    /* time rounding depends on presence of minute / second / usec fields */\n            /* time rounding depends on presence of minute / second / usec fields */\n            switch (bt) {\n            case 0:\n                break;\n            case 1:\n                if (dt.u >= 0.5) {\n                    dt.u = 0;\n                    ++dt.S;\n                }\n                if (dt.S >= 60) {\n                    dt.S = 0;\n                    ++dt.M;\n                }\n                if (dt.M >= 60) {\n                    dt.M = 0;\n                    ++dt.H;\n                }\n                break;\n            case 2:\n                if (dt.u >= 0.5) {\n                    dt.u = 0;\n                    ++dt.S;\n                }\n                if (dt.S >= 60) {\n                    dt.S = 0;\n                    ++dt.M;\n                }\n                break;\n            }    /* replace fields */\n            /* replace fields */\n            var nstr = '', jj;\n            for (i = 0; i < out.length; ++i) {\n                switch (out[i].t) {\n                case 't':\n                case 'T':\n                case ' ':\n                case 'D':\n                    break;\n                case 'X':\n                    out[i].v = '';\n                    out[i].t = ';';\n                    break;\n                case 'd':\n                case 'm':\n                case 'y':\n                case 'h':\n                case 'H':\n                case 'M':\n                case 's':\n                case 'e':\n                case 'b':\n                case 'Z':\n                    out[i].v = write_date(out[i].t.charCodeAt(0), out[i].v, dt, ss0);\n                    out[i].t = 't';\n                    break;\n                case 'n':\n                case '?':\n                    jj = i + 1;\n                    while (out[jj] != null && ((c = out[jj].t) === '?' || c === 'D' || (c === ' ' || c === 't') && out[jj + 1] != null && (out[jj + 1].t === '?' || out[jj + 1].t === 't' && out[jj + 1].v === '/') || out[i].t === '(' && (c === ' ' || c === 'n' || c === ')') || c === 't' && (out[jj].v === '/' || out[jj].v === ' ' && out[jj + 1] != null && out[jj + 1].t == '?'))) {\n                        out[i].v += out[jj].v;\n                        out[jj] = {\n                            v: '',\n                            t: ';'\n                        };\n                        ++jj;\n                    }\n                    nstr += out[i].v;\n                    i = jj - 1;\n                    break;\n                case 'G':\n                    out[i].t = 't';\n                    out[i].v = general_fmt(v, opts);\n                    break;\n                }\n            }\n            var vv = '', myv, ostr;\n            if (nstr.length > 0) {\n                if (nstr.charCodeAt(0) == 40)\n                    /* '(' */\n                    {\n                        myv = v < 0 && nstr.charCodeAt(0) === 45 ? -v : v;\n                        ostr = write_num('n', nstr, myv);\n                    }\n                else {\n                    myv = v < 0 && flen > 1 ? -v : v;\n                    ostr = write_num('n', nstr, myv);\n                    if (myv < 0 && out[0] && out[0].t == 't') {\n                        ostr = ostr.substr(1);\n                        out[0].v = '-' + out[0].v;\n                    }\n                }\n                jj = ostr.length - 1;\n                var decpt = out.length;\n                for (i = 0; i < out.length; ++i)\n                    if (out[i] != null && out[i].t != 't' && out[i].v.indexOf('.') > -1) {\n                        decpt = i;\n                        break;\n                    }\n                var lasti = out.length;\n                if (decpt === out.length && ostr.indexOf('E') === -1) {\n                    for (i = out.length - 1; i >= 0; --i) {\n                        if (out[i] == null || 'n?'.indexOf(out[i].t) === -1)\n                            continue;\n                        if (jj >= out[i].v.length - 1) {\n                            jj -= out[i].v.length;\n                            out[i].v = ostr.substr(jj + 1, out[i].v.length);\n                        } else if (jj < 0)\n                            out[i].v = '';\n                        else {\n                            out[i].v = ostr.substr(0, jj + 1);\n                            jj = -1;\n                        }\n                        out[i].t = 't';\n                        lasti = i;\n                    }\n                    if (jj >= 0 && lasti < out.length)\n                        out[lasti].v = ostr.substr(0, jj + 1) + out[lasti].v;\n                } else if (decpt !== out.length && ostr.indexOf('E') === -1) {\n                    jj = ostr.indexOf('.') - 1;\n                    for (i = decpt; i >= 0; --i) {\n                        if (out[i] == null || 'n?'.indexOf(out[i].t) === -1)\n                            continue;\n                        j = out[i].v.indexOf('.') > -1 && i === decpt ? out[i].v.indexOf('.') - 1 : out[i].v.length - 1;\n                        vv = out[i].v.substr(j + 1);\n                        for (; j >= 0; --j) {\n                            if (jj >= 0 && (out[i].v.charAt(j) === '0' || out[i].v.charAt(j) === '#'))\n                                vv = ostr.charAt(jj--) + vv;\n                        }\n                        out[i].v = vv;\n                        out[i].t = 't';\n                        lasti = i;\n                    }\n                    if (jj >= 0 && lasti < out.length)\n                        out[lasti].v = ostr.substr(0, jj + 1) + out[lasti].v;\n                    jj = ostr.indexOf('.') + 1;\n                    for (i = decpt; i < out.length; ++i) {\n                        if (out[i] == null || 'n?('.indexOf(out[i].t) === -1 && i !== decpt)\n                            continue;\n                        j = out[i].v.indexOf('.') > -1 && i === decpt ? out[i].v.indexOf('.') + 1 : 0;\n                        vv = out[i].v.substr(0, j);\n                        for (; j < out[i].v.length; ++j) {\n                            if (jj < ostr.length)\n                                vv += ostr.charAt(jj++);\n                        }\n                        out[i].v = vv;\n                        out[i].t = 't';\n                        lasti = i;\n                    }\n                }\n            }\n            for (i = 0; i < out.length; ++i)\n                if (out[i] != null && 'n?'.indexOf(out[i].t) > -1) {\n                    myv = flen > 1 && v < 0 && i > 0 && out[i - 1].v === '-' ? -v : v;\n                    out[i].v = write_num(out[i].t, out[i].v, myv);\n                    out[i].t = 't';\n                }\n            var retval = '';\n            for (i = 0; i !== out.length; ++i)\n                if (out[i] != null)\n                    retval += out[i].v;\n            return retval;\n        }\n        SSF._eval = eval_fmt;\n        var cfregex = /\\[[=<>]/;\n        var cfregex2 = /\\[(=|>[=]?|<[>=]?)(-?\\d+(?:\\.\\d*)?)\\]/;\n        function chkcond(v, rr) {\n            if (rr == null)\n                return false;\n            var thresh = parseFloat(rr[2]);\n            switch (rr[1]) {\n            case '=':\n                if (v == thresh)\n                    return true;\n                break;\n            case '>':\n                if (v > thresh)\n                    return true;\n                break;\n            case '<':\n                if (v < thresh)\n                    return true;\n                break;\n            case '<>':\n                if (v != thresh)\n                    return true;\n                break;\n            case '>=':\n                if (v >= thresh)\n                    return true;\n                break;\n            case '<=':\n                if (v <= thresh)\n                    return true;\n                break;\n            }\n            return false;\n        }\n        function choose_fmt(f, v) {\n            var fmt = split_fmt(f);\n            var l = fmt.length, lat = fmt[l - 1].indexOf('@');\n            if (l < 4 && lat > -1)\n                --l;\n            if (fmt.length > 4)\n                throw new Error('cannot find right format for |' + fmt.join('|') + '|');\n            if (typeof v !== 'number')\n                return [\n                    4,\n                    fmt.length === 4 || lat > -1 ? fmt[fmt.length - 1] : '@'\n                ];\n            switch (fmt.length) {\n            case 1:\n                fmt = lat > -1 ? [\n                    'General',\n                    'General',\n                    'General',\n                    fmt[0]\n                ] : [\n                    fmt[0],\n                    fmt[0],\n                    fmt[0],\n                    '@'\n                ];\n                break;\n            case 2:\n                fmt = lat > -1 ? [\n                    fmt[0],\n                    fmt[0],\n                    fmt[0],\n                    fmt[1]\n                ] : [\n                    fmt[0],\n                    fmt[1],\n                    fmt[0],\n                    '@'\n                ];\n                break;\n            case 3:\n                fmt = lat > -1 ? [\n                    fmt[0],\n                    fmt[1],\n                    fmt[0],\n                    fmt[2]\n                ] : [\n                    fmt[0],\n                    fmt[1],\n                    fmt[2],\n                    '@'\n                ];\n                break;\n            case 4:\n                break;\n            }\n            var ff = v > 0 ? fmt[0] : v < 0 ? fmt[1] : fmt[2];\n            if (fmt[0].indexOf('[') === -1 && fmt[1].indexOf('[') === -1)\n                return [\n                    l,\n                    ff\n                ];\n            if (fmt[0].match(cfregex) != null || fmt[1].match(cfregex) != null) {\n                var m1 = fmt[0].match(cfregex2);\n                var m2 = fmt[1].match(cfregex2);\n                return chkcond(v, m1) ? [\n                    l,\n                    fmt[0]\n                ] : chkcond(v, m2) ? [\n                    l,\n                    fmt[1]\n                ] : [\n                    l,\n                    fmt[m1 != null && m2 != null ? 2 : 1]\n                ];\n            }\n            return [\n                l,\n                ff\n            ];\n        }\n        function format(fmt, v, o) {\n            if (o == null)\n                o = {};\n            var sfmt = '';\n            switch (typeof fmt) {\n            case 'string':\n                if (fmt == 'm/d/yy' && o.dateNF)\n                    sfmt = o.dateNF;\n                else\n                    sfmt = fmt;\n                break;\n            case 'number':\n                if (fmt == 14 && o.dateNF)\n                    sfmt = o.dateNF;\n                else\n                    sfmt = (o.table != null ? o.table : table_fmt)[fmt];\n                if (sfmt == null)\n                    sfmt = o.table && o.table[default_map[fmt]] || table_fmt[default_map[fmt]];\n                if (sfmt == null)\n                    sfmt = default_str[fmt] || 'General';\n                break;\n            }    //new runze 增加万 亿 格式  \n                 //注：\"w\":2万2500  \"w0\":2万2500  \"w0.0\":2万2500.2  \"w0.00\":2万2500.23......自定义精确度\n            //new runze 增加万 亿 格式  \n            //注：\"w\":2万2500  \"w0\":2万2500  \"w0.0\":2万2500.2  \"w0.00\":2万2500.23......自定义精确度\n            var reg = /^(w|W)((0?)|(0\\.0+))$/;\n            if (!!sfmt.match(reg)) {\n                if (isNaN(v)) {\n                    return v;\n                }    //var v =300101886.436;\n                //var v =300101886.436;\n                var acc = sfmt.slice(1);    //取得0/0.0/0.00\n                //取得0/0.0/0.00\n                var isNegative = false;\n                if (!isNaN(v) && Number(v) < 0) {\n                    isNegative = true;\n                    v = Math.abs(v);\n                }\n                var vInt = parseInt(v);\n                var vlength = vInt.toString().length;\n                if (vlength > 4) {\n                    if (vlength > 8) {\n                        var y = parseInt(v / 100000000);    //亿\n                        //亿\n                        var w = parseInt(parseFloat(v).subtract(y * 100000000) / 10000);    //万\n                        //万\n                        var q = parseFloat(v).subtract(y * 100000000 + w * 10000);    //千以后\n                        //千以后\n                        if (acc != '') {\n                            q = numeral(q).format(acc);    //处理精确度\n                        }\n                        //处理精确度\n                        v = y + '亿' + w + '万' + q;\n                    } else {\n                        var w = parseInt(v / 10000);    //万\n                        //万\n                        var q = parseFloat(v).subtract(w * 10000);    //千以后\n                        //千以后\n                        if (acc != '') {\n                            q = numeral(q).format(acc);    //处理精确度\n                        }\n                        //处理精确度\n                        v = w + '万' + q;\n                    }\n                    if (v.indexOf('亿0万0') != -1) {\n                        v = v.replace('0万0', '');\n                    } else if (v.indexOf('亿0万') != -1) {\n                        v = v.replace('0万', '');\n                    } else if (v.indexOf('万0') != -1) {\n                        v = v.replace('万0', '万');\n                    }    //舍弃正则后顾断言写法，旧浏览器不识别（360 V9）\n                    //舍弃正则后顾断言写法，旧浏览器不识别（360 V9）\n                    if (v.indexOf('亿') != -1 && v.indexOf('万') == -1) {\n                        //1亿/1亿111 => 1亿/1亿0111\n                        var afterYi = v.substring(v.indexOf('亿') + 1);\n                        if (afterYi.substring(0, 1) !== '.' && afterYi != '') {\n                            switch ((parseInt(afterYi) + '').length) {\n                            case 1:\n                                afterYi = '000' + afterYi;\n                                break;\n                            case 2:\n                                afterYi = '00' + afterYi;\n                                break;\n                            case 3:\n                                afterYi = '0' + afterYi;\n                                break;\n                            }\n                            v = v.substring(0, v.indexOf('亿') + 1) + afterYi;\n                        }\n                    } else if (v.indexOf('亿') == -1 && v.indexOf('万') != -1) {\n                        //3万0011\n                        var afterWan = v.substring(v.indexOf('万') + 1);\n                        if (afterWan.substring(0, 1) !== '.' && afterWan != '') {\n                            switch ((parseInt(afterWan) + '').length) {\n                            case 1:\n                                afterWan = '000' + afterWan;\n                                break;\n                            case 2:\n                                afterWan = '00' + afterWan;\n                                break;\n                            case 3:\n                                afterWan = '0' + afterWan;\n                                break;\n                            }\n                            v = v.substring(0, v.indexOf('万') + 1) + afterWan;\n                        }\n                    } else if (v.indexOf('亿') != -1 && v.indexOf('万') != -1) {\n                        //1亿0053万0611\n                        var afterYi = v.substring(v.indexOf('亿') + 1, v.indexOf('万')), afterWan = v.substring(v.indexOf('万') + 1);\n                        switch ((parseInt(afterYi) + '').length) {\n                        case 1:\n                            afterYi = '000' + afterYi;\n                            break;\n                        case 2:\n                            afterYi = '00' + afterYi;\n                            break;\n                        case 3:\n                            afterYi = '0' + afterYi;\n                            break;\n                        }\n                        v = v.substring(0, v.indexOf('亿') + 1) + afterYi + v.substring(v.indexOf('万'));\n                        if (afterWan.substring(0, 1) !== '.' && afterWan != '') {\n                            switch ((parseInt(afterWan) + '').length) {\n                            case 1:\n                                afterWan = '000' + afterWan;\n                                break;\n                            case 2:\n                                afterWan = '00' + afterWan;\n                                break;\n                            case 3:\n                                afterWan = '0' + afterWan;\n                                break;\n                            }\n                            v = v.substring(0, v.indexOf('万') + 1) + afterWan;\n                        }\n                    }\n                } else {\n                    if (acc != '') {\n                        v = numeral(v).format(acc);    //处理精确度\n                    }\n                }\n                //处理精确度\n                if (isNegative) {\n                    return '-' + v;\n                } else {\n                    return v;\n                }\n            }\n            if (isgeneral(sfmt, 0))\n                return general_fmt(v, o);\n            if (v instanceof Date)\n                v = datenum_local(v, o.date1904);\n            var f = choose_fmt(sfmt, v);\n            if (isgeneral(f[1]))\n                return general_fmt(v, o);\n            if (v === true)\n                v = 'TRUE';\n            else if (v === false)\n                v = 'FALSE';\n            else if (v === '' || v == null)\n                return '';\n            return eval_fmt(f[1], v, o, f[0]);\n        }\n        function load_entry(fmt, idx) {\n            if (typeof idx != 'number') {\n                idx = +idx || -1;\n                for (var i = 0; i < 392; ++i) {\n                    if (table_fmt[i] == undefined) {\n                        if (idx < 0)\n                            idx = i;\n                        continue;\n                    }\n                    if (table_fmt[i] == fmt) {\n                        idx = i;\n                        break;\n                    }\n                }\n                if (idx < 0)\n                    idx = 391;\n            }\n            table_fmt[idx] = fmt;\n            return idx;\n        }\n        SSF.load = load_entry;\n        SSF._table = table_fmt;\n        SSF.get_table = function get_table() {\n            return table_fmt;\n        };\n        SSF.load_table = function load_table(tbl) {\n            for (var i = 0; i != 392; ++i)\n                if (tbl[i] !== undefined)\n                    load_entry(tbl[i], i);\n        };\n        SSF.init_table = init_table;\n        SSF.format = format;\n    };\n    make_ssf(SSF);\n    var XLMLFormatMap    /*{[string]:string}*/ = /*{[string]:string}*/\n    {\n        'General Number': 'General',\n        'General Date': SSF._table[22],\n        'Long Date': 'dddd, mmmm dd, yyyy',\n        'Medium Date': SSF._table[15],\n        'Short Date': SSF._table[14],\n        'Long Time': SSF._table[19],\n        'Medium Time': SSF._table[18],\n        'Short Time': SSF._table[20],\n        'Currency': '\"$\"#,##0.00_);[Red]\\\\(\"$\"#,##0.00\\\\)',\n        'Fixed': SSF._table[2],\n        'Standard': SSF._table[4],\n        'Percent': SSF._table[10],\n        'Scientific': SSF._table[11],\n        'Yes/No': '\"Yes\";\"Yes\";\"No\";@',\n        'True/False': '\"True\";\"True\";\"False\";@',\n        'On/Off': '\"Yes\";\"Yes\";\"No\";@'\n    };\n    var unescapexml = function () {\n        /* 22.4.2.4 bstr (Basic String) */\n        var encregex = /&(?:quot|apos|gt|lt|amp|#x?([\\da-fA-F]+));/g, coderegex = /_x([\\da-fA-F]{4})_/g;\n        return function unescapexml(text) {\n            var s = text + '', i = s.indexOf('<![CDATA[');\n            if (i == -1)\n                return s.replace(encregex, function ($$, $1) {\n                    return encodings[$$] || String.fromCharCode(parseInt($1, $$.indexOf('x') > -1 ? 16 : 10)) || $$;\n                }).replace(coderegex, function (m, c) {\n                    return String.fromCharCode(parseInt(c, 16));\n                });\n            var j = s.indexOf(']]>');\n            return unescapexml(s.slice(0, i)) + s.slice(i + 9, j) + unescapexml(s.slice(j + 3));\n        };\n    }();\n    function xlml_format(format, value) {\n        var fmt = XLMLFormatMap[format] || unescapexml(format);\n        if (fmt === 'General')\n            return SSF._general(value);\n        return SSF.format(fmt, value);\n    }\n    var basedate = new Date(1899, 11, 31, 0, 0, 0);\n    var dnthresh = basedate.getTime();\n    var base1904 = new Date(1900, 2, 1, 0, 0, 0);\n    function datenum(v, date1904) {\n        var epoch = v.getTime();\n        if (date1904)\n            epoch -= 1462 * 24 * 60 * 60 * 1000;\n        return (epoch - dnthresh) / (24 * 60 * 60 * 1000);\n    }\n    function datenum_local(v, date1904) {\n        var epoch = Date.UTC(v.getFullYear(), v.getMonth(), v.getDate(), v.getHours(), v.getMinutes(), v.getSeconds());\n        var dnthresh_utc = Date.UTC(1899, 11, 31, 0, 0, 0);\n        if (date1904)\n            epoch -= 1461 * 24 * 60 * 60 * 1000;\n        else if (v >= base1904)\n            epoch += 24 * 60 * 60 * 1000;\n        return (epoch - dnthresh_utc) / (24 * 60 * 60 * 1000);\n    }\n    function numdate(v) {\n        var out = new Date();\n        out.setTime(v * 24 * 60 * 60 * 1000 + dnthresh);\n        return out;\n    }    /* ISO 8601 Duration */\n    /* ISO 8601 Duration */\n    function parse_isodur(s) {\n        var sec = 0, mt = 0, time = false;\n        var m = s.match(/P([0-9\\.]+Y)?([0-9\\.]+M)?([0-9\\.]+D)?T([0-9\\.]+H)?([0-9\\.]+M)?([0-9\\.]+S)?/);\n        if (!m)\n            throw new Error('|' + s + '| is not an ISO8601 Duration');\n        for (var i = 1; i != m.length; ++i) {\n            if (!m[i])\n                continue;\n            mt = 1;\n            if (i > 3)\n                time = true;\n            switch (m[i].slice(m[i].length - 1)) {\n            case 'Y':\n                throw new Error('Unsupported ISO Duration Field: ' + m[i].slice(m[i].length - 1));\n            case 'D':\n                mt *= 24;    /* falls through */\n            /* falls through */\n            case 'H':\n                mt *= 60;    /* falls through */\n            /* falls through */\n            case 'M':\n                if (!time)\n                    throw new Error('Unsupported ISO Duration Field: M');\n                else\n                    mt *= 60;    /* falls through */\n            /* falls through */\n            case 'S':\n                break;\n            }\n            sec += mt * parseInt(m[i], 10);\n        }\n        return sec;\n    }\n    var good_pd_date = new Date('2017-02-19T19:06:09.000Z');\n    if (isNaN(good_pd_date.getFullYear()))\n        good_pd_date = new Date('2/19/17');\n    var good_pd = good_pd_date.getFullYear() == 2017;    /* parses a date as a local date */\n    /* parses a date as a local date */\n    function parseDate(str, fixdate) {\n        var d = new Date(str);    //console.log(d);\n        //console.log(d);\n        if (good_pd) {\n            if (fixdate > 0)\n                d.setTime(d.getTime() + d.getTimezoneOffset() * 60 * 1000);\n            else if (fixdate < 0)\n                d.setTime(d.getTime() - d.getTimezoneOffset() * 60 * 1000);\n            return d;\n        }\n        if (str instanceof Date)\n            return str;\n        if (good_pd_date.getFullYear() == 1917 && !isNaN(d.getFullYear())) {\n            var s = d.getFullYear();\n            if (str.indexOf('' + s) > -1)\n                return d;\n            d.setFullYear(d.getFullYear() + 100);\n            return d;\n        }\n        var n = str.match(/\\d+/g) || [\n            '2017',\n            '2',\n            '19',\n            '0',\n            '0',\n            '0'\n        ];\n        var out = new Date(+n[0], +n[1] - 1, +n[2], +n[3] || 0, +n[4] || 0, +n[5] || 0);\n        if (str.indexOf('Z') > -1)\n            out = new Date(out.getTime() - out.getTimezoneOffset() * 60 * 1000);\n        return out;\n    }    /* TODO: stress test */\n    /* TODO: stress test */\n    function fuzzynum(s) {\n        var v = Number(s);\n        if (typeof s == 'number') {\n            return s;\n        }\n        if (!isNaN(v))\n            return v;\n        var wt = 1;\n        var ss = s.replace(/([\\d]),([\\d])/g, '$1$2').replace(/[$]/g, '').replace(/[%]/g, function () {\n            wt *= 100;\n            return '';\n        });\n        if (!isNaN(v = Number(ss)))\n            return v / wt;\n        ss = ss.replace(/[(](.*)[)]/, function ($$, $1) {\n            wt = -wt;\n            return $1;\n        });\n        if (!isNaN(v = Number(ss)))\n            return v / wt;\n        return v;\n    }\n    function fuzzydate(s) {\n        var o = new Date(s), n = new Date(NaN);\n        var y = o.getYear(), m = o.getMonth(), d = o.getDate();\n        if (isNaN(d))\n            return n;\n        if (y < 0 || y > 8099)\n            return n;\n        if ((m > 0 || d > 1) && y != 101)\n            return o;\n        if (s.toLowerCase().match(/jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec/))\n            return o;\n        if (s.match(/[^-0-9:,\\/\\\\]/))\n            return n;\n        return o;\n    }\n    function genarate(value) {\n        //万 单位格式增加！！！\n        var ret = [];\n        var m = null, ct = {}, v = value;\n        if (value == null) {\n            return null;\n        }\n        if (value.toString().substr(0, 1) === \"'\") {\n            m = value.toString().substr(1);\n            ct = {\n                'fa': '@',\n                't': 's'\n            };\n        } else if (value.toString().toUpperCase() === 'TRUE') {\n            m = 'TRUE';\n            ct = {\n                'fa': 'General',\n                't': 'b'\n            };\n            v = true;\n        } else if (value.toString().toUpperCase() === 'FALSE') {\n            m = 'FALSE';\n            ct = {\n                'fa': 'General',\n                't': 'b'\n            };\n            v = false;\n        } else if (valueIsError(value)) {\n            m = value.toString();\n            ct = {\n                'fa': 'General',\n                't': 'e'\n            };\n        } else if (/^\\d{6}(18|19|20)?\\d{2}(0[1-9]|1[12])(0[1-9]|[12]\\d|3[01])\\d{3}(\\d|X)$/i.test(value)) {\n            m = value.toString();\n            ct = {\n                'fa': '@',\n                't': 's'\n            };\n        } else if (isRealNum(value) && Math.abs(parseFloat(value)) > 0 && (Math.abs(parseFloat(value)) >= 100000000000 || Math.abs(parseFloat(value)) < 1e-9)) {\n            v = numeral(value).value();\n            var str = v.toExponential();\n            if (str.indexOf('.') > -1) {\n                var strlen = str.split('.')[1].split('e')[0].length;\n                if (strlen > 5) {\n                    strlen = 5;\n                }\n                ct = {\n                    'fa': '#0.' + new Array(strlen + 1).join('0') + 'E+00',\n                    't': 'n'\n                };\n            } else {\n                ct = {\n                    'fa': '#0.E+00',\n                    't': 'n'\n                };\n            }\n            m = SSF.format(ct.fa, v);\n        } else if (value.toString().indexOf('%') > -1) {\n            var index = value.toString().indexOf('%');\n            var value2 = value.toString().substr(0, index);\n            var value3 = value2.replace(/,/g, '');\n            if (index == value.toString().length - 1 && isRealNum(value3)) {\n                if (value2.indexOf('.') > -1) {\n                    if (value2.indexOf('.') == value2.lastIndexOf('.')) {\n                        var value4 = value2.split('.')[0];\n                        var value5 = value2.split('.')[1];\n                        var len = value5.length;\n                        if (len > 9) {\n                            len = 9;\n                        }\n                        if (value4.indexOf(',') > -1) {\n                            var isThousands = true;\n                            var ThousandsArr = value4.split(',');\n                            for (var i = 1; i < ThousandsArr.length; i++) {\n                                if (ThousandsArr[i].length < 3) {\n                                    isThousands = false;\n                                    break;\n                                }\n                            }\n                            if (isThousands) {\n                                ct = {\n                                    'fa': '#,##0.' + new Array(len + 1).join('0') + '%',\n                                    't': 'n'\n                                };\n                                v = numeral(value).value();\n                                m = SSF.format(ct.fa, v);\n                            } else {\n                                m = value.toString();\n                                ct = {\n                                    'fa': '@',\n                                    't': 's'\n                                };\n                            }\n                        } else {\n                            ct = {\n                                'fa': '0.' + new Array(len + 1).join('0') + '%',\n                                't': 'n'\n                            };\n                            v = numeral(value).value();\n                            m = SSF.format(ct.fa, v);\n                        }\n                    } else {\n                        m = value.toString();\n                        ct = {\n                            'fa': '@',\n                            't': 's'\n                        };\n                    }\n                } else if (value2.indexOf(',') > -1) {\n                    var isThousands = true;\n                    var ThousandsArr = value2.split(',');\n                    for (var i = 1; i < ThousandsArr.length; i++) {\n                        if (ThousandsArr[i].length < 3) {\n                            isThousands = false;\n                            break;\n                        }\n                    }\n                    if (isThousands) {\n                        ct = {\n                            'fa': '#,##0%',\n                            't': 'n'\n                        };\n                        v = numeral(value).value();\n                        m = SSF.format(ct.fa, v);\n                    } else {\n                        m = value.toString();\n                        ct = {\n                            'fa': '@',\n                            't': 's'\n                        };\n                    }\n                } else {\n                    ct = {\n                        'fa': '0%',\n                        't': 'n'\n                    };\n                    v = numeral(value).value();\n                    m = SSF.format(ct.fa, v);\n                }\n            } else {\n                m = value.toString();\n                ct = {\n                    'fa': '@',\n                    't': 's'\n                };\n            }\n        } else if (value.toString().indexOf('.') > -1) {\n            if (value.toString().indexOf('.') == value.toString().lastIndexOf('.')) {\n                var value1 = value.toString().split('.')[0];\n                var value2 = value.toString().split('.')[1];\n                var len = value2.length;\n                if (len > 9) {\n                    len = 9;\n                }\n                if (value1.indexOf(',') > -1) {\n                    var isThousands = true;\n                    var ThousandsArr = value1.split(',');\n                    for (var i = 1; i < ThousandsArr.length; i++) {\n                        if (!isRealNum(ThousandsArr[i]) || ThousandsArr[i].length < 3) {\n                            isThousands = false;\n                            break;\n                        }\n                    }\n                    if (isThousands) {\n                        ct = {\n                            'fa': '#,##0.' + new Array(len + 1).join('0'),\n                            't': 'n'\n                        };\n                        v = numeral(value).value();\n                        m = SSF.format(ct.fa, v);\n                    } else {\n                        m = value.toString();\n                        ct = {\n                            'fa': '@',\n                            't': 's'\n                        };\n                    }\n                } else {\n                    if (isRealNum(value1) && isRealNum(value2)) {\n                        ct = {\n                            'fa': '0.' + new Array(len + 1).join('0'),\n                            't': 'n'\n                        };\n                        v = numeral(value).value();\n                        m = SSF.format(ct.fa, v);\n                    } else {\n                        m = value.toString();\n                        ct = {\n                            'fa': '@',\n                            't': 's'\n                        };\n                    }\n                }\n            } else {\n                m = value.toString();\n                ct = {\n                    'fa': '@',\n                    't': 's'\n                };\n            }\n        } else if (isRealNum(value)) {\n            m = value.toString();\n            ct = {\n                'fa': 'General',\n                't': 'n'\n            };\n            v = parseFloat(value);\n        } else if (isdatetime(value) && (value.toString().indexOf('.') > -1 || value.toString().indexOf(':') > -1 || value.toString().length < 16)) {\n            v = datenum_local(parseDate(value.toString().replace(/-/g, '/')));\n            if (v.toString().indexOf('.') > -1) {\n                if (value.toString().length > 18) {\n                    ct.fa = 'yyyy-MM-dd hh:mm:ss';\n                } else if (value.toString().length > 11) {\n                    ct.fa = 'yyyy-MM-dd hh:mm';\n                } else {\n                    ct.fa = 'yyyy-MM-dd';\n                }\n            } else {\n                ct.fa = 'yyyy-MM-dd';\n            }\n            ct.t = 'd';\n            m = SSF.format(ct.fa, v);\n        } else {\n            m = value;\n            ct.fa = 'General';\n            ct.t = 'g';\n        }\n        return [\n            m,\n            ct,\n            v\n        ];\n    }\n    function update(fmt, v) {\n        return SSF.format(fmt, v);\n    }\n    function is_date(fmt, v) {\n        return SSF.is_date(fmt, v);\n    }\n    function valueShowEs(r, c, d) {\n        var value = getcellvalue(r, c, d, 'm');\n        if (value == null) {\n            value = getcellvalue(r, c, d, 'v');\n        } else {\n            if (!isNaN(fuzzynum(value))) {\n                if (typeof value == 'string' && value.indexOf('%') > -1) {\n                } else {\n                    value = getcellvalue(r, c, d, 'v');\n                }\n            }    // else if (!isNaN(parseDate(value).getDate())){\n            else // else if (!isNaN(parseDate(value).getDate())){\n            if (d[r][c].ct != null && d[r][c].ct.t == 'd') {\n            } else if (d[r][c].ct != null && d[r][c].ct.t == 'b') {\n            } else {\n                value = getcellvalue(r, c, d, 'v');\n            }\n        }\n        return value;\n    }\n    return {\n        datenum_local: datenum_local,\n        genarate: genarate,\n        update: update,\n        is_date: is_date,\n        valueShowEs: valueShowEs\n    };\n});"]}