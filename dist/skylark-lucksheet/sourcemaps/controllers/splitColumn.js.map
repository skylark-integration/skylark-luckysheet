{"version":3,"sources":["controllers/splitColumn.js"],"names":["define","m_util","m_constant","m_select","tooltip","editor","m_setdata","m_getdata","m_refresh","Store","locale","replaceHtml","modelHTML","selectHightlightShow","setcellvalue","getcellvalue","jfrefreshgrid","createDialog","_locale","locale_splitText","splitText","locale_punctuation","punctuation","locale_button","button","$","show","remove","content","splitDelimiters","tab","semicolon","comma","space","splitOther","splitContinueSymbol","splitDataPreview","append","id","addclass","title","splitTextTitle","botton","confirm","cancel","style","$t","find","css","end","myh","outerHeight","myw","outerWidth","winw","window","width","winh","height","scrollLeft","document","scrollTop","left","top","dataArr","this","getDataArr","dataPreview","init","_this","off","on","regStr","getRegStr","siblings","is","hide","r","luckysheet_select_save","row","c","column","length","dataCover","i","j","cell","flowdata","v","func1","update","splitConfirmToExe","d","deepCopyFlowData","st_r","st_c","range","empty","trHtml","tdHtml","tableHtml","mark","each","e","$id","attr","txt","val","trim","arr","r1","r2","reg","RegExp","value","rowArr","toString","split","push","rlen","clen","getNullData"],"mappings":"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","file":"../../controllers/splitColumn.js","sourcesContent":["define([\n    '../utils/util',\n    './constant',\n    './select',\n    '../global/tooltip',\n    '../global/editor',\n    '../global/setdata',\n    '../global/getdata',\n    '../global/refresh',\n    '../store',\n    '../locale/locale'\n], function (m_util, m_constant, m_select, tooltip, editor, m_setdata, m_getdata, m_refresh, Store, locale) {\n    'use strict';\n    const {replaceHtml} = m_util;\n    const {modelHTML} = m_constant;\n    const {selectHightlightShow} = m_select;\n    const {setcellvalue} = m_setdata;\n    const {getcellvalue} = m_getdata;\n    const {jfrefreshgrid} = m_refresh;\n    //分列\n    const luckysheetSplitColumn = {\n        createDialog: function () {\n            let _this = this;\n            const _locale = locale();\n            const locale_splitText = _locale.splitText;\n            const locale_punctuation = _locale.punctuation;\n            const locale_button = _locale.button;\n            $('#luckysheet-modal-dialog-mask').show();\n            $('#luckysheet-splitColumn-dialog').remove();\n            let content = '<div class=\"box\">' + '<div class=\"boxTitle\">' + locale_splitText.splitDelimiters + '</div>' + '<div class=\"boxMain\">' + '<div style=\"height: 22px;line-height: 22px;\">' + '<input id=\"splitColumn_type_01\" type=\"checkbox\"/>' + '<label for=\"splitColumn_type_01\">' + locale_punctuation.tab + '</label>' + '</div>' + '<div style=\"height: 22px;line-height: 22px;\">' + '<input id=\"splitColumn_type_02\" type=\"checkbox\"/>' + '<label for=\"splitColumn_type_02\">' + locale_punctuation.semicolon + '</label>' + '</div>' + '<div style=\"height: 22px;line-height: 22px;\">' + '<input id=\"splitColumn_type_03\" type=\"checkbox\"/>' + '<label for=\"splitColumn_type_03\">' + locale_punctuation.comma + '</label>' + '</div>' + '<div style=\"height: 22px;line-height: 22px;\">' + '<input id=\"splitColumn_type_04\" type=\"checkbox\"/>' + '<label for=\"splitColumn_type_04\">' + locale_punctuation.space + '</label>' + '</div>' + '<div style=\"height: 22px;line-height: 22px;\">' + '<input id=\"splitColumn_type_05\" type=\"checkbox\"/>' + '<label for=\"splitColumn_type_05\">' + locale_splitText.splitOther + '</label>' + '<input type=\"text\" class=\"formulaInputFocus\" maxlength=\"1\"/>' + '</div>' + '</div>' + '<div style=\"height: 22px;line-height: 22px;\">' + '<input id=\"splitColumn_type_06\" type=\"checkbox\"/>' + '<label for=\"splitColumn_type_06\">' + locale_splitText.splitContinueSymbol + '</label>' + '</div>' + '<div class=\"boxTitle\" style=\"margin-top: 10px;\">' + locale_splitText.splitDataPreview + '</div>' + '<div class=\"boxMain\" id=\"splitColumnData\">' + '</div>' + '</div>';\n            $('body').append(replaceHtml(modelHTML, {\n                'id': 'luckysheet-splitColumn-dialog',\n                'addclass': 'luckysheet-splitColumn-dialog',\n                'title': locale_splitText.splitTextTitle,\n                'content': content,\n                'botton': '<button id=\"luckysheet-splitColumn-dialog-confirm\" class=\"btn btn-primary\">' + locale_button.confirm + '</button><button class=\"btn btn-default luckysheet-model-close-btn\">' + locale_button.cancel + '</button>',\n                'style': 'z-index:100003'\n            }));\n            let $t = $('#luckysheet-splitColumn-dialog').find('.luckysheet-modal-dialog-content').css('min-width', 400).end(), myh = $t.outerHeight(), myw = $t.outerWidth();\n            let winw = $(window).width(), winh = $(window).height();\n            let scrollLeft = $(document).scrollLeft(), scrollTop = $(document).scrollTop();\n            $('#luckysheet-splitColumn-dialog').css({\n                'left': (winw + scrollLeft - myw) / 2,\n                'top': (winh + scrollTop - myh) / 3\n            }).show();\n            let dataArr = _this.getDataArr();\n            _this.dataPreview(dataArr);\n        },\n        init: function () {\n            let _this = this;\n            const _locale = locale();\n            const locale_splitText = _locale.splitText;    //数据预览\n            //数据预览\n            $(document).off('change.SPCinpcheckbox').on('change.SPCcheckbox', \"#luckysheet-splitColumn-dialog .box input[type='checkbox']\", function () {\n                let regStr = _this.getRegStr();\n                let dataArr = _this.getDataArr(regStr);\n                _this.dataPreview(dataArr);\n            });\n            $(document).off('keyup.SPCinptext').on('keyup.SPCinptext', \"#luckysheet-splitColumn-dialog .box input[type='text']\", function () {\n                if ($(this).siblings(\"input[type='checkbox']\").is(':checked')) {\n                    let regStr = _this.getRegStr();\n                    let dataArr = _this.getDataArr(regStr);\n                    _this.dataPreview(dataArr);\n                }\n            });    //确定按钮\n            //确定按钮\n            $(document).off('click.SPCconfirm').on('click.SPCconfirm', '#luckysheet-splitColumn-dialog #luckysheet-splitColumn-dialog-confirm', function () {\n                $('#luckysheet-modal-dialog-mask').hide();\n                $('#luckysheet-splitColumn-dialog').hide();\n                let regStr = _this.getRegStr();\n                let dataArr = _this.getDataArr(regStr);\n                let r = Store.luckysheet_select_save[0].row[0];\n                let c = Store.luckysheet_select_save[0].column[0];\n                if (dataArr[0].length == 1) {\n                    return;\n                }\n                let dataCover = false;\n                for (let i = 0; i < dataArr.length; i++) {\n                    for (let j = 1; j < dataArr[0].length; j++) {\n                        let cell = Store.flowdata[r + i][c + j];\n                        if (cell != null && cell.v != null) {\n                            dataCover = true;\n                            break;\n                        }\n                    }\n                }\n                if (dataCover) {\n                    let func1 = function () {\n                        _this.update(r, c, dataArr);\n                    };\n                    tooltip.confirm('', locale_splitText.splitConfirmToExe, func1);\n                } else {\n                    _this.update(r, c, dataArr);\n                }\n            });\n        },\n        update: function (r, c, dataArr) {\n            let d = editor.deepCopyFlowData(Store.flowdata);\n            for (let i = 0; i < dataArr.length; i++) {\n                for (let j = 0; j < dataArr[0].length; j++) {\n                    let v = dataArr[i][j];\n                    setcellvalue(r + i, c + j, d, v);\n                }\n            }\n            let st_r = Store.luckysheet_select_save[0].row[0], st_c = Store.luckysheet_select_save[0].column[0];\n            let range = [{\n                    'row': [\n                        st_r,\n                        st_r + dataArr.length - 1\n                    ],\n                    'column': [\n                        st_c,\n                        st_c + dataArr[0].length - 1\n                    ]\n                }];\n            jfrefreshgrid(d, range);\n            selectHightlightShow();\n        },\n        dataPreview: function (dataArr) {\n            $('#luckysheet-splitColumn-dialog #splitColumnData').empty();\n            let trHtml = '';\n            for (let i = 0; i < dataArr.length; i++) {\n                let tdHtml = '';\n                for (let j = 0; j < dataArr[0].length; j++) {\n                    tdHtml += '<td>' + dataArr[i][j] + '</td>';\n                }\n                trHtml += '<tr>' + tdHtml + '</tr>';\n            }\n            let tableHtml = '<table>' + trHtml + '</table>';\n            $('#luckysheet-splitColumn-dialog #splitColumnData').append(tableHtml);\n        },\n        getRegStr: function () {\n            let regStr = '', mark = 0;\n            $(\"#luckysheet-splitColumn-dialog .box input[type='checkbox']:checked\").each(function (i, e) {\n                let $id = $(e).attr('id');\n                if ($id == 'splitColumn_type_01') {\n                    //Tab键\n                    regStr += '\\\\t';\n                    mark++;\n                } else if ($id == 'splitColumn_type_02') {\n                    //分号\n                    if (mark > 0) {\n                        regStr += '|';\n                    }\n                    regStr += ';';\n                    mark++;\n                } else if ($id == 'splitColumn_type_03') {\n                    //逗号\n                    if (mark > 0) {\n                        regStr += '|';\n                    }\n                    regStr += ',';\n                    mark++;\n                } else if ($id == 'splitColumn_type_04') {\n                    //空格\n                    if (mark > 0) {\n                        regStr += '|';\n                    }\n                    regStr += '\\\\s';\n                    mark++;\n                } else if ($id == 'splitColumn_type_05') {\n                    //其它\n                    let txt = $(e).siblings(\"input[type='text']\").val().trim();\n                    if (txt != '') {\n                        if (mark > 0) {\n                            regStr += '|';\n                        }\n                        regStr += txt;\n                    }\n                } else if ($id == 'splitColumn_type_06') {\n                    //连续分隔符号视为单个处理\n                    regStr = '[' + regStr + ']+';\n                }\n            });\n            return regStr;\n        },\n        getDataArr: function (regStr) {\n            let _this = this;\n            let arr = [];\n            let r1 = Store.luckysheet_select_save[0].row[0];\n            let r2 = Store.luckysheet_select_save[0].row[1];\n            let c = Store.luckysheet_select_save[0].column[0];\n            if (regStr != null && regStr != '') {\n                let reg = new RegExp(regStr, 'g');\n                let dataArr = [];\n                for (let r = r1; r <= r2; r++) {\n                    let rowArr = [];\n                    let cell = Store.flowdata[r][c];\n                    let value;\n                    if (cell != null && cell['m'] != null) {\n                        value = cell['m'];\n                    } else {\n                        value = getcellvalue(r, c, Store.flowdata);\n                    }\n                    if (value == null) {\n                        value = '';\n                    }\n                    rowArr = value.toString().split(reg);\n                    dataArr.push(rowArr);\n                }\n                let rlen = dataArr.length;\n                let clen = 0;\n                for (let i = 0; i < rlen; i++) {\n                    if (dataArr[i].length > clen) {\n                        clen = dataArr[i].length;\n                    }\n                }\n                arr = _this.getNullData(rlen, clen);\n                for (let i = 0; i < arr.length; i++) {\n                    for (let j = 0; j < arr[0].length; j++) {\n                        if (dataArr[i][j] != null) {\n                            arr[i][j] = dataArr[i][j];\n                        }\n                    }\n                }\n            } else {\n                for (let r = r1; r <= r2; r++) {\n                    let rowArr = [];\n                    let cell = Store.flowdata[r][c];\n                    let value;\n                    if (cell != null && cell['m'] != null) {\n                        value = cell['m'];\n                    } else {\n                        value = getcellvalue(r, c, Store.flowdata);\n                    }\n                    if (value == null) {\n                        value = '';\n                    }\n                    rowArr.push(value);\n                    arr.push(rowArr);\n                }\n            }\n            return arr;\n        },\n        getNullData: function (rlen, clen) {\n            let arr = [];\n            for (let r = 0; r < rlen; r++) {\n                let rowArr = [];\n                for (let c = 0; c < clen; c++) {\n                    rowArr.push('');\n                }\n                arr.push(rowArr);\n            }\n            return arr;\n        }\n    };\n    return luckysheetSplitColumn;\n});"]}