{"version":3,"sources":["controllers/cellFormat.js"],"names":["define","Store","m_util","m_constant","sheetmanage","menuButton","m_protection","m_refresh","locale","m_setdata","replaceHtml","transformRangeToAbsolute","openSelfModel","modelHTML","checkProtectionNotEnable","jfrefreshgrid","setcellvalue","isInitialCellFormatModel","recycleSeletion","cycleFunction","dataIsNullFunction","luckysheet_select_save","length","data","getSheetByIndex","i","selection","row","column","r","c","cell","margeset","mergeborer","row_index","col_index","initialCellFormatModel","_locale","local_cellFormat","cellFormat","locale_button","button","$","append","id","addclass","title","cellFormatTitle","content","protection","protectionTips","locked","hidden","botton","confirm","cancel","style","click","is","d","lo","hi","alert","sheetDataIsNullAlert","undefined","hide","initialCellFormatModelEvent","openCellFormatModel","currentSheetIndex","lockedCount","hiddenCount","count","selectionIsNullAlert","tipsLock","tipshidden","tipsAll","tipsPart","prop","parent","next","html"],"mappings":";;;;;;;AAAAA,QACI,WACA,gBACA,aACA,gBACA,eACA,eACA,oBACA,mBACA,qBACD,SAAUC,EAAOC,EAAQC,EAAYC,EAAaC,EAAYC,EAAcC,EAAWC,EAAQC,GAC9F,aACA,MAAMC,YAACA,EAAWC,yBAAEA,EAAwBC,cAAEA,GAAiBV,GACzDW,UAACA,GAAaV,GACdW,yBAACA,GAA4BR,GAC7BS,cAACA,GAAiBR,GAClBS,aAACA,GAAgBP,EACvB,IAAIQ,GAA2B,EA2B/B,SAASC,EAAgBC,EAAeC,GACpC,GAAoC,MAAhCnB,EAAMoB,wBAAkCpB,EAAMoB,uBAAuBC,OAAS,EAAG,CACjF,IAA+CC,EAA/BnB,EAAYoB,kBAAoCD,KAChE,GAAY,MAARA,EACA,IAAK,IAAIE,EAAI,EAAGA,EAAIxB,EAAMoB,uBAAuBC,OAAQG,IAAK,CAC1D,IAAIC,EAAYzB,EAAMoB,uBAAuBI,GACzCE,EAAMD,EAAUC,IAAKC,EAASF,EAAUE,OAC5C,IAAK,IAAIC,EAAIF,EAAI,GAAIE,GAAKF,EAAI,GAAIE,IAC9B,IAAK,IAAIC,EAAIF,EAAO,GAAIE,GAAKF,EAAO,GAAIE,IAAK,CACzC,IAAIC,EACAC,EAAW3B,EAAW4B,WAAWV,EAAMM,EAAGC,GAC9C,GAAME,EAAU,CAGZ,IAAIE,EAAYF,EAASL,IAAI,GAMzBQ,EAAYH,EAASJ,OAAO,GAEhCG,EAAOR,EAAKW,GAAWC,QAEvBJ,EAAOR,EAAKM,GAAGC,GAmBnBX,EAAcY,EAAMF,EAAGC,EAAGP,SAMtCH,IAEJ,OAAOG,GAGf,SAASa,IACL,GAAInB,EACA,OAEJA,GAA2B,EAC3B,MAAMoB,EAAU7B,IACV8B,EAAmBD,EAAQE,WAC3BC,EAAgBH,EAAQI,OAE9BC,EAAE,QAAQC,OAAOjC,EAAYG,GACzB+B,GAAM,+BACNC,SAAY,+BACZC,MAASR,EAAiBS,gBAC1BC,2NAGWV,EAAiBW,mRAMbX,EAAiBY,0NAEoIZ,EAAiBa,4OAEjBb,EAAiBc,wFAIrLC,6EAAiFb,EAAcc,oGACzBd,EAAce,kBACpFC,MAAS,oBAhHjB,WACI,MACMlB,EADU9B,IACiB+B,WACjCG,EAAE,kCAAkCe,MAAM,WACtC,IAAIN,EAAST,EAAE,uCAAuCgB,GAAG,YACrDN,EAASV,EAAE,uCAAuCgB,GAAG,YACzDP,EAAmB,GAAVA,EAAiB,EAAI,EAC9BC,EAAmB,GAAVA,EAAiB,EAAI,EAC9B,IAAIO,EAAIzC,EAAgB,SAAUa,EAAMF,EAAGC,EAAGP,GAC9B,MAARQ,EACAf,EAAaa,EAAGC,EAAGP,GACfqC,GAAIT,EACJU,GAAIT,KAGRrB,EAAK6B,GAAKT,EACVpB,EAAK8B,GAAKT,IAEf,WACCU,MAAMxB,EAAiByB,wBAE3BhD,EAAc4C,OAAGK,OAAWA,GAAW,GACvCtB,EAAE,iCAAiCuB,OACnCvB,EAAE,iCAAiCuB,SA2FvCC,GA2CJ,OAASC,oBAzCT,WACI/B,IACA,MAAMC,EAAU7B,IACV8B,EAAmBD,EAAQE,WAGjC,GAFsBF,EAAQI,OAC9BC,EAAE,+BAA+BuB,QAC5BnD,EAAyBb,EAAMmE,mBAChC,OAEJ,IAAIjB,GAAS,EAAOC,GAAS,EACzBiB,EAAc,EAAGC,EAAc,EAAGC,EAAQ,EAC9C,KAAoC,MAAhCtE,EAAMoB,wBAAkCpB,EAAMoB,uBAAuBC,OAAS,GAiB9E,YADAwC,MAAMxB,EAAiBkC,sBAfvBtD,EAAgB,SAAUa,GAEV,MAARA,GAA2B,MAAXA,EAAK6B,IAAyB,GAAX7B,EAAK6B,KACxCT,GAAS,EACTkB,KAEQ,MAARtC,GAA2B,GAAXA,EAAK8B,KACrBT,GAAS,EACTkB,KAEJC,KACD,WACCpB,GAAS,IAMjB,IAAIsB,EAAW,GAAIC,EAAa,GAC5BvB,IACAsB,EAAWJ,GAAeE,EAAQjC,EAAiBqC,QAAUrC,EAAiBsC,UAE9ExB,IACAsB,EAAaJ,GAAeC,EAAQjC,EAAiBqC,QAAUrC,EAAiBsC,UAEpFlC,EAAE,uCAAuCmC,KAAK,UAAW1B,GAAQ2B,SAASC,OAAOC,KAAKP,GACtF/B,EAAE,uCAAuCmC,KAAK,UAAWzB,GAAQ0B,SAASC,OAAOC,KAAKN,GACtF9D,EAAc","file":"../../controllers/cellFormat.js","sourcesContent":["define([\n    '../store',\n    '../utils/util',\n    './constant',\n    './sheetmanage',\n    './menuButton',\n    './protection',\n    '../global/refresh',\n    '../locale/locale',\n    '../global/setdata'\n], function (Store, m_util, m_constant, sheetmanage, menuButton, m_protection, m_refresh, locale, m_setdata) {\n    'use strict';\n    const {replaceHtml, transformRangeToAbsolute, openSelfModel} = m_util;\n    const {modelHTML} = m_constant;\n    const {checkProtectionNotEnable} = m_protection;\n    const {jfrefreshgrid} = m_refresh;\n    const {setcellvalue} = m_setdata;\n    let isInitialCellFormatModel = false;\n    function initialCellFormatModelEvent() {\n        const _locale = locale();\n        const local_cellFormat = _locale.cellFormat;\n        $('#luckysheet-cellFormat-confirm').click(function () {\n            let locked = $('#luckysheet-protection-check-locked').is(':checked');\n            let hidden = $('#luckysheet-protection-check-hidden').is(':checked');\n            locked = locked == true ? 1 : 0;\n            hidden = hidden == true ? 1 : 0;\n            let d = recycleSeletion(function (cell, r, c, data) {\n                if (cell == null) {\n                    setcellvalue(r, c, data, {\n                        lo: locked,\n                        hi: hidden\n                    });\n                } else {\n                    cell.lo = locked;\n                    cell.hi = hidden;\n                }\n            }, function () {\n                alert(local_cellFormat.sheetDataIsNullAlert);\n            });\n            jfrefreshgrid(d, undefined, undefined, false);\n            $('#luckysheet-cellFormat-config').hide();\n            $('#luckysheet-modal-dialog-mask').hide();\n        });\n    }\n    function recycleSeletion(cycleFunction, dataIsNullFunction) {\n        if (Store.luckysheet_select_save != null && Store.luckysheet_select_save.length > 0) {\n            let sheetFile = sheetmanage.getSheetByIndex(), data = sheetFile.data;\n            if (data != null) {\n                for (let i = 0; i < Store.luckysheet_select_save.length; i++) {\n                    let selection = Store.luckysheet_select_save[i];\n                    let row = selection.row, column = selection.column;\n                    for (let r = row[0]; r <= row[1]; r++) {\n                        for (let c = column[0]; c <= column[1]; c++) {\n                            let cell;\n                            let margeset = menuButton.mergeborer(data, r, c);\n                            if (!!margeset) {\n                                // row = margeset.row[1];\n                                // row_pre = margeset.row[0];\n                                let row_index = margeset.row[2];    // row_index_ed = margeset.row[3];\n                                                                    // col = margeset.column[1];\n                                                                    // col_pre = margeset.column[0];\n                                // row_index_ed = margeset.row[3];\n                                // col = margeset.column[1];\n                                // col_pre = margeset.column[0];\n                                let col_index = margeset.column[2];    // col_index_ed = margeset.column[3];\n                                // col_index_ed = margeset.column[3];\n                                cell = data[row_index][col_index];\n                            } else {\n                                cell = data[r][c];\n                            }    // if(cell.lo==null || cell.lo==1){\n                                 //     locked = true;\n                                 //     lockedCount++;\n                                 // }\n                                 // if(cell.hi==1){\n                                 //     hidden = true;\n                                 //     hiddenCount++;\n                                 // }\n                                 // count++;\n                            // if(cell.lo==null || cell.lo==1){\n                            //     locked = true;\n                            //     lockedCount++;\n                            // }\n                            // if(cell.hi==1){\n                            //     hidden = true;\n                            //     hiddenCount++;\n                            // }\n                            // count++;\n                            cycleFunction(cell, r, c, data);\n                        }\n                    }\n                }\n            } else {\n                // locked = true;\n                dataIsNullFunction();\n            }\n            return data;\n        }\n    }\n    function initialCellFormatModel() {\n        if (isInitialCellFormatModel) {\n            return;\n        }\n        isInitialCellFormatModel = true;\n        const _locale = locale();\n        const local_cellFormat = _locale.cellFormat;\n        const locale_button = _locale.button;    //Password input initial\n        //Password input initial\n        $('body').append(replaceHtml(modelHTML, {\n            'id': 'luckysheet-cellFormat-config',\n            'addclass': 'luckysheet-cellFormat-config',\n            'title': local_cellFormat.cellFormatTitle,\n            'content': `\n            <div class=\"luckysheet-cellFormat-menu-c\">\n                <div class=\"luckysheet-cellFormat-menu luckysheet-cellFormat-menu-active\" id=\"luckysheet-cellFormat-protection\">\n                    ${ local_cellFormat.protection }\n                </div>\n            </div>\n            <div id=\"luckysheet-cellFormat-protection-content\" class=\"luckysheet-cellFormat-content\">\n                <div class=\"luckysheet-cellFormat-protection\">\n                    <p>\n                        ${ local_cellFormat.protectionTips }\n                    </p>\n                    <label for=\"luckysheet-protection-check-locked\"><input id=\"luckysheet-protection-check-locked\" name=\"luckysheet-protection-check-locked\" type=\"checkbox\">${ local_cellFormat.locked }</label><span>部分选中</span>\n                    <br/>\n                    <label for=\"luckysheet-protection-check-hidden\"><input id=\"luckysheet-protection-check-hidden\" name=\"luckysheet-protection-check-hidden\" type=\"checkbox\">${ local_cellFormat.hidden }</label><span>全部选中</span>\n                </div>\n            </div>\n        `,\n            'botton': `<button id=\"luckysheet-cellFormat-confirm\" class=\"btn btn-primary\">${ locale_button.confirm }</button>\n                    <button class=\"btn btn-default luckysheet-model-close-btn\">${ locale_button.cancel }</button>`,\n            'style': 'z-index:100003'\n        }));\n        initialCellFormatModelEvent();\n    }\n    function openCellFormatModel() {\n        initialCellFormatModel();\n        const _locale = locale();\n        const local_cellFormat = _locale.cellFormat;\n        const locale_button = _locale.button;\n        $('#luckysheet-rightclick-menu').hide();\n        if (!checkProtectionNotEnable(Store.currentSheetIndex)) {\n            return;\n        }\n        let locked = false, hidden = false;\n        let lockedCount = 0, hiddenCount = 0, count = 0;\n        if (Store.luckysheet_select_save != null && Store.luckysheet_select_save.length > 0) {\n            recycleSeletion(function (cell) {\n                // let cell = data[r][c];\n                if (cell == null || cell.lo == null || cell.lo == 1) {\n                    locked = true;\n                    lockedCount++;\n                }\n                if (cell != null && cell.hi == 1) {\n                    hidden = true;\n                    hiddenCount++;\n                }\n                count++;\n            }, function () {\n                locked = true;\n            });\n        } else {\n            alert(local_cellFormat.selectionIsNullAlert);\n            return;\n        }\n        let tipsLock = '', tipshidden = '';\n        if (locked) {\n            tipsLock = lockedCount == count ? local_cellFormat.tipsAll : local_cellFormat.tipsPart;\n        }\n        if (hidden) {\n            tipshidden = hiddenCount == count ? local_cellFormat.tipsAll : local_cellFormat.tipsPart;\n        }\n        $('#luckysheet-protection-check-locked').prop('checked', locked).parent().next().html(tipsLock);\n        $('#luckysheet-protection-check-hidden').prop('checked', hidden).parent().next().html(tipshidden);\n        openSelfModel('luckysheet-cellFormat-config');\n    }\n    return { openCellFormatModel: openCellFormatModel };\n});"]}