{"version":3,"sources":["controllers/dropCell.js"],"names":["define","m_location","m_count","m_border","m_validate","m_format","m_refresh","editor","formula","conditionformat","m_protection","m_select","m_get","m_util","Store","locale","dayjs","rowLocationByIndex","colLocationByIndex","countfunc","getBorderInfoCompute","isRealNum","genarate","update","jfrefreshgrid","checkProtectionLockedRangeList","selectHightlightShow","getSheetIndex","getObjType","replaceHtml","iconHtml","typeListHtml","copyRange","applyRange","applyType","direction","chnNumChar","零","一","二","三","四","五","六","七","八","九","chnNameValue","十","value","secUnit","百","千","万","亿","ChineseToNumber","chnStr","_this","this","rtn","section","number","str","split","i","length","num","unit","chnNumChar2","chnUnitSection","chnUnitChar","SectionToChinese","strIns","unitPos","zero","v","Math","floor","NumberToChinese","needZero","isChnNumber","txt","isExtendNumber","reg","test","match","matchTxt","matchIndex","lastIndexOf","beforeTxt","substr","afterTxt","Number","isChnWeek1","isChnWeek2","isChnWeek3","createIcon","row_index","col_index","copy_r","copy_c","apply_r","apply_c","row","col","$","remove","append","css","left","top","mouseover","mouseleave","mousedown","event","locale_dropCell","dropCell","copyCell","sequence","onlyFormat","noFormat","day","workDay","month","year","chineseNumber","typeItemHide","hide","offset","winH","window","height","winW","width","menuW","menuH","show","type","find","stopPropagation","document","off","on","attr","str_r","end_r","str_c","end_c","hasNumber","hasExtendNumber","hasDate","hasChn","hasChnWeek1","hasChnWeek2","hasChnWeek3","r","c","flowdata","cell","t","currentSheetIndex","allowEdit","csLen","d","deepCopyFlowData","file","luckysheetfile","cfg","extend","config","borderInfoCompute","dataVerification","copy_str_r","copy_end_r","copy_str_c","copy_end_c","copyData","getCopyData","apply_str_r","apply_end_r","apply_str_c","apply_end_c","asLen","copyD","applyData","getApplyData","j","f","functionCopy","execfunction","execFunctionGroup","undefined","spl","data","Infinity","m","toString","indexOf","len","toExponential","mask","round","ct","fa","bd_r","bd_c","bd_obj","rangeType","l","b","push","cdformat","cdformat_cellrange","cellrange","emptyRange","range","CFSplitRange","column","concat","allParam","luckysheet_select_save","r1","r2","c1","c2","a1","a2","b1","b2","a","obj","arrData","arrIndex","text","extendNumberBeforeStr","extendNumberAfterStr","isSameStr","index","rsd","copyD_number","applyD_number","s","getLenS","getDataByType","getDataIndex","copyD_extendNumber","applyD_extendNumber","copyD_date","applyD_date","copyD_chnNumber","applyD_chnNumber","copyD_chnWeek2","applyD_chnWeek2","copyD_chnWeek3","applyD_chnWeek3","copyD_other","applyD_other","x","y","indexArr","sum","dataType","reverse","FillCopy","FillSeries","step","FillExtendNumber","dataNumArr","isEqualDiff","FillDays","judgeDate","diff","FillMonths","FillChnWeek","FillChnNumber","hasweek","weekIndex","FillChnWeek2","lastTxt","FillChnWeek3","FillOnlyFormat","dataArr","FillWithoutFormat","newLen","add","date","format","subtract","abs","step_month","ceil","step_day","FillYears","step_year","isEqualRatio","pow","xArr","getXArr","forecast","last","lastIndex","valueTxt","arr","ratio","yArr","getAverage","ax","ay","sum_d","sum_n","isSameDay","isSameMonth","isEqualDiffDays","isEqualDiffMonths","isEqualDiffYears","sameDay","sameMonth","equalDiffDays","equalDiffMonths","equalDiffYears"],"mappings":"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","file":"../../controllers/dropCell.js","sourcesContent":["define([\n    '../global/location',\n    '../global/count',\n    '../global/border',\n    '../global/validate',\n    '../global/format',\n    '../global/refresh',\n    '../global/editor',\n    '../global/formula',\n    './conditionformat',\n    './protection',\n    './select',\n    '../methods/get',\n    '../utils/util',\n    '../store',\n    '../locale/locale',\n    'skylark-moment'\n], function (m_location, m_count, m_border, m_validate, m_format, m_refresh, editor, formula, conditionformat, m_protection, m_select, m_get, m_util, Store, locale, dayjs) {\n    'use strict';\n    const {rowLocationByIndex, colLocationByIndex} = m_location;\n    const {countfunc} = m_count;\n    const {getBorderInfoCompute} = m_border;\n    const {isRealNum} = m_validate;\n    const {genarate, update} = m_format;\n    const {jfrefreshgrid} = m_refresh;\n    const {checkProtectionLockedRangeList} = m_protection;\n    const {selectHightlightShow} = m_select;\n    const {getSheetIndex} = m_get;\n    const {getObjType, replaceHtml} = m_util;\n    //选区下拉\n    const luckysheetDropCell = {\n        iconHtml: '<div id=\"luckysheet-dropCell-icon\" style=\"position: absolute;padding: 2px;background-color: #f1f1f1;z-index: 990;cursor: pointer;\">' + '<div id=\"icon_dropCell\"></div>' + '</div>',\n        typeListHtml: '<div id=\"luckysheet-dropCell-typeList\" class=\"luckysheet-cols-menu luckysheet-rightgclick-menu luckysheet-mousedown-cancel\">' + '<div class=\"luckysheet-cols-menuitem luckysheet-mousedown-cancel\" data-type=\"0\">' + '<div class=\"luckysheet-cols-menuitem-content luckysheet-mousedown-cancel\" style=\"padding: 3px 2px;\">' + '<span style=\"margin-right:5px;width:13px;display:inline-block;\" class=\"icon luckysheet-mousedown-cancel\"></span>${copyCell}' + '</div>' + '</div>' + '<div class=\"luckysheet-cols-menuitem luckysheet-mousedown-cancel\" data-type=\"1\">' + '<div class=\"luckysheet-cols-menuitem-content luckysheet-mousedown-cancel\" style=\"padding: 3px 2px;\">' + '<span style=\"margin-right:5px;width:13px;display:inline-block;\" class=\"icon luckysheet-mousedown-cancel\"></span>${sequence}' + '</div>' + '</div>' + '<div class=\"luckysheet-cols-menuitem luckysheet-mousedown-cancel\" data-type=\"2\">' + '<div class=\"luckysheet-cols-menuitem-content luckysheet-mousedown-cancel\" style=\"padding: 3px 2px;\">' + '<span style=\"margin-right:5px;width:13px;display:inline-block;\" class=\"icon luckysheet-mousedown-cancel\"></span>${onlyFormat}' + '</div>' + '</div>' + '<div class=\"luckysheet-cols-menuitem luckysheet-mousedown-cancel\" data-type=\"3\">' + '<div class=\"luckysheet-cols-menuitem-content luckysheet-mousedown-cancel\" style=\"padding: 3px 2px;\">' + '<span style=\"margin-right:5px;width:13px;display:inline-block;\" class=\"icon luckysheet-mousedown-cancel\"></span>${noFormat}' + '</div>' + '</div>' + '<div class=\"luckysheet-cols-menuitem luckysheet-mousedown-cancel\" data-type=\"4\">' + '<div class=\"luckysheet-cols-menuitem-content luckysheet-mousedown-cancel\" style=\"padding: 3px 2px;\">' + '<span style=\"margin-right:5px;width:13px;display:inline-block;\" class=\"icon luckysheet-mousedown-cancel\"></span>${day}' + '</div>' + '</div>' + '<div class=\"luckysheet-cols-menuitem luckysheet-mousedown-cancel\" data-type=\"5\">' + '<div class=\"luckysheet-cols-menuitem-content luckysheet-mousedown-cancel\" style=\"padding: 3px 2px;\">' + '<span style=\"margin-right:5px;width:13px;display:inline-block;\" class=\"icon luckysheet-mousedown-cancel\"></span>${workDay}' + '</div>' + '</div>' + '<div class=\"luckysheet-cols-menuitem luckysheet-mousedown-cancel\" data-type=\"6\">' + '<div class=\"luckysheet-cols-menuitem-content luckysheet-mousedown-cancel\" style=\"padding: 3px 2px;\">' + '<span style=\"margin-right:5px;width:13px;display:inline-block;\" class=\"icon luckysheet-mousedown-cancel\"></span>${month}' + '</div>' + '</div>' + '<div class=\"luckysheet-cols-menuitem luckysheet-mousedown-cancel\" data-type=\"7\">' + '<div class=\"luckysheet-cols-menuitem-content luckysheet-mousedown-cancel\" style=\"padding: 3px 2px;\">' + '<span style=\"margin-right:5px;width:13px;display:inline-block;\" class=\"icon luckysheet-mousedown-cancel\"></span>${year}' + '</div>' + '</div>' + '<div class=\"luckysheet-cols-menuitem luckysheet-mousedown-cancel\" data-type=\"8\">' + '<div class=\"luckysheet-cols-menuitem-content luckysheet-mousedown-cancel\" style=\"padding: 3px 2px;\">' + '<span style=\"margin-right:5px;width:13px;display:inline-block;\" class=\"icon luckysheet-mousedown-cancel\"></span>${chineseNumber}' + '</div>' + '</div>' + '</div>',\n        copyRange: {},\n        //复制范围\n        applyRange: {},\n        //应用范围\n        applyType: null,\n        //0复制单元格，1填充序列，2仅填充格式，3不带格式填充，4以天数填充，5以工作日填充，6以月填充，7以年填充，8以中文小写数字序列填充\n        direction: null,\n        //down-往下拖拽，right-往右拖拽，up-往上拖拽，left-往左拖拽\n        chnNumChar: {\n            '零': 0,\n            '一': 1,\n            '二': 2,\n            '三': 3,\n            '四': 4,\n            '五': 5,\n            '六': 6,\n            '七': 7,\n            '八': 8,\n            '九': 9\n        },\n        chnNameValue: {\n            '十': {\n                value: 10,\n                secUnit: false\n            },\n            '百': {\n                value: 100,\n                secUnit: false\n            },\n            '千': {\n                value: 1000,\n                secUnit: false\n            },\n            '万': {\n                value: 10000,\n                secUnit: true\n            },\n            '亿': {\n                value: 100000000,\n                secUnit: true\n            }\n        },\n        ChineseToNumber: function (chnStr) {\n            let _this = this;\n            let rtn = 0;\n            let section = 0;\n            let number = 0;\n            let secUnit = false;\n            let str = chnStr.split('');\n            for (let i = 0; i < str.length; i++) {\n                let num = _this.chnNumChar[str[i]];\n                if (typeof num != 'undefined') {\n                    number = num;\n                    if (i == str.length - 1) {\n                        section += number;\n                    }\n                } else {\n                    let unit = _this.chnNameValue[str[i]].value;\n                    secUnit = _this.chnNameValue[str[i]].secUnit;\n                    if (secUnit) {\n                        section = (section + number) * unit;\n                        rtn += section;\n                        section = 0;\n                    } else {\n                        section += number * unit;\n                    }\n                    number = 0;\n                }\n            }\n            return rtn + section;\n        },\n        chnNumChar2: [\n            '零',\n            '一',\n            '二',\n            '三',\n            '四',\n            '五',\n            '六',\n            '七',\n            '八',\n            '九'\n        ],\n        chnUnitSection: [\n            '',\n            '万',\n            '亿',\n            '万亿',\n            '亿亿'\n        ],\n        chnUnitChar: [\n            '',\n            '十',\n            '百',\n            '千'\n        ],\n        SectionToChinese: function (section) {\n            let _this = this;\n            let strIns = '', chnStr = '';\n            let unitPos = 0;\n            let zero = true;\n            while (section > 0) {\n                let v = section % 10;\n                if (v == 0) {\n                    if (!zero) {\n                        zero = true;\n                        chnStr = _this.chnNumChar2[v] + chnStr;\n                    }\n                } else {\n                    zero = false;\n                    strIns = _this.chnNumChar2[v];\n                    strIns += _this.chnUnitChar[unitPos];\n                    chnStr = strIns + chnStr;\n                }\n                unitPos++;\n                section = Math.floor(section / 10);\n            }\n            return chnStr;\n        },\n        NumberToChinese: function (num) {\n            let _this = this;\n            let unitPos = 0;\n            let strIns = '', chnStr = '';\n            let needZero = false;\n            if (num == 0) {\n                return _this.chnNumChar2[0];\n            }\n            while (num > 0) {\n                let section = num % 10000;\n                if (needZero) {\n                    chnStr = _this.chnNumChar2[0] + chnStr;\n                }\n                strIns = _this.SectionToChinese(section);\n                strIns += section != 0 ? _this.chnUnitSection[unitPos] : _this.chnUnitSection[0];\n                chnStr = strIns + chnStr;\n                needZero = section < 1000 && section > 0;\n                num = Math.floor(num / 10000);\n                unitPos++;\n            }\n            return chnStr;\n        },\n        isChnNumber: function (txt) {\n            let _this = this;\n            let isChnNumber = true;\n            if (txt.length == 1) {\n                if (txt == '日' || txt in _this.chnNumChar) {\n                    isChnNumber = true;\n                } else {\n                    isChnNumber = false;\n                }\n            } else {\n                let str = txt.split('');\n                for (let i = 0; i < str.length; i++) {\n                    if (!(str[i] in _this.chnNumChar || str[i] in _this.chnNameValue)) {\n                        isChnNumber = false;\n                        break;\n                    }\n                }\n            }\n            return isChnNumber;\n        },\n        isExtendNumber: function (txt) {\n            let reg = /0|([1-9]+[0-9]*)/g;\n            let isExtendNumber = reg.test(txt);\n            if (isExtendNumber) {\n                let match = txt.match(reg);\n                let matchTxt = match[match.length - 1];\n                let matchIndex = txt.lastIndexOf(matchTxt);\n                let beforeTxt = txt.substr(0, matchIndex);\n                let afterTxt = txt.substr(matchIndex + matchTxt.length);\n                return [\n                    isExtendNumber,\n                    Number(matchTxt),\n                    beforeTxt,\n                    afterTxt\n                ];\n            } else {\n                return [isExtendNumber];\n            }\n        },\n        isChnWeek1: function (txt) {\n            let _this = this;\n            let isChnWeek1;\n            if (txt.length == 1) {\n                if (txt == '日' || _this.ChineseToNumber(txt) < 7) {\n                    isChnWeek1 = true;\n                } else {\n                    isChnWeek1 = false;\n                }\n            } else {\n                isChnWeek1 = false;\n            }\n            return isChnWeek1;\n        },\n        isChnWeek2: function (txt) {\n            let isChnWeek2;\n            if (txt.length == 2) {\n                if (txt == '周一' || txt == '周二' || txt == '周三' || txt == '周四' || txt == '周五' || txt == '周六' || txt == '周日') {\n                    isChnWeek2 = true;\n                } else {\n                    isChnWeek2 = false;\n                }\n            } else {\n                isChnWeek2 = false;\n            }\n            return isChnWeek2;\n        },\n        isChnWeek3: function (txt) {\n            let isChnWeek3;\n            if (txt.length == 3) {\n                if (txt == '星期一' || txt == '星期二' || txt == '星期三' || txt == '星期四' || txt == '星期五' || txt == '星期六' || txt == '星期日') {\n                    isChnWeek3 = true;\n                } else {\n                    isChnWeek3 = false;\n                }\n            } else {\n                isChnWeek3 = false;\n            }\n            return isChnWeek3;\n        },\n        createIcon: function () {\n            let _this = this;\n            let copy_r = _this.copyRange['row'][1], copy_c = _this.copyRange['column'][1];\n            let apply_r = _this.applyRange['row'][1], apply_c = _this.applyRange['column'][1];\n            let row_index, col_index;\n            if (apply_r >= copy_r && apply_c >= copy_c) {\n                row_index = apply_r;\n                col_index = apply_c;\n            } else {\n                row_index = copy_r;\n                col_index = copy_c;\n            }\n            let row = rowLocationByIndex(row_index)[1], row_pre = rowLocationByIndex(row_index)[0];\n            let col = colLocationByIndex(col_index)[1], col_pre = colLocationByIndex(col_index)[0];\n            $('#luckysheet-dropCell-icon').remove();\n            $('#luckysheet-cell-main').append(_this.iconHtml);\n            $('#luckysheet-dropCell-icon').css({\n                'left': col,\n                'top': row\n            });    //点击icon\n            //点击icon\n            $('#luckysheet-dropCell-icon').mouseover(function () {\n                $(this).css('background-color', '#ffe8e8');\n            }).mouseleave(function () {\n                $(this).css('background-color', '#f1f1f1');\n            }).mousedown(function (event) {\n                $('#luckysheet-dropCell-typeList').remove();\n                const _locale = locale();\n                const locale_dropCell = _locale.dropCell;\n                $('body').append(replaceHtml(_this.typeListHtml, {\n                    copyCell: locale_dropCell.copyCell,\n                    sequence: locale_dropCell.sequence,\n                    onlyFormat: locale_dropCell.onlyFormat,\n                    noFormat: locale_dropCell.noFormat,\n                    day: locale_dropCell.day,\n                    workDay: locale_dropCell.workDay,\n                    month: locale_dropCell.month,\n                    year: locale_dropCell.year,\n                    chineseNumber: locale_dropCell.chineseNumber\n                }));\n                let typeItemHide = _this.typeItemHide();\n                if (!typeItemHide[0] && !typeItemHide[1] && !typeItemHide[2] && !typeItemHide[3] && !typeItemHide[4] && !typeItemHide[5] && !typeItemHide[6]) {\n                    $('#luckysheet-dropCell-typeList .luckysheet-cols-menuitem[data-type=1]').hide();\n                    $('#luckysheet-dropCell-typeList .luckysheet-cols-menuitem[data-type=4]').hide();\n                    $('#luckysheet-dropCell-typeList .luckysheet-cols-menuitem[data-type=5]').hide();\n                    $('#luckysheet-dropCell-typeList .luckysheet-cols-menuitem[data-type=6]').hide();\n                    $('#luckysheet-dropCell-typeList .luckysheet-cols-menuitem[data-type=7]').hide();\n                    $('#luckysheet-dropCell-typeList .luckysheet-cols-menuitem[data-type=8]').hide();\n                }\n                if (!typeItemHide[2]) {\n                    $('#luckysheet-dropCell-typeList .luckysheet-cols-menuitem[data-type=4]').hide();\n                    $('#luckysheet-dropCell-typeList .luckysheet-cols-menuitem[data-type=5]').hide();\n                    $('#luckysheet-dropCell-typeList .luckysheet-cols-menuitem[data-type=6]').hide();\n                    $('#luckysheet-dropCell-typeList .luckysheet-cols-menuitem[data-type=7]').hide();\n                }\n                if (!typeItemHide[3]) {\n                    $('#luckysheet-dropCell-typeList .luckysheet-cols-menuitem[data-type=8]').hide();\n                }\n                let left = $(this).offset().left;\n                let top = $(this).offset().top + 25;\n                let winH = $(window).height(), winW = $(window).width();\n                let menuW = $('#luckysheet-dropCell-typeList').width(), menuH = $('#luckysheet-dropCell-typeList').height();\n                if (left + menuW > winW) {\n                    left = left - menuW;\n                }\n                if (top + menuH > winH) {\n                    top = top - menuH - 38;\n                }\n                if (top < 0) {\n                    top = 0;\n                }\n                $('#luckysheet-dropCell-typeList').css({\n                    'left': left,\n                    'top': top\n                }).show();\n                $('#luckysheet-dropCell-icon').mouseleave(function () {\n                    $(this).css('backgroundColor', '#ffe8e8');\n                });\n                let type = _this.applyType;\n                $('#luckysheet-dropCell-typeList .luckysheet-cols-menuitem[data-type=' + type + ']').find('span').append('<i class=\"fa fa-check luckysheet-mousedown-cancel\"></i>');\n                event.stopPropagation();\n            });    //点击数据填充类型\n            //点击数据填充类型\n            $(document).off('click.dCtypeList').on('click.dCtypeList', '#luckysheet-dropCell-typeList .luckysheet-cols-menuitem', function () {\n                $('#luckysheet-dropCell-typeList .fa-check').remove();\n                $(this).find('span').append('<i class=\"fa fa-check luckysheet-mousedown-cancel\"></i>');\n                let type = $(this).attr('data-type');\n                _this.applyType = type;\n                _this.update();\n                $('#luckysheet-dropCell-typeList').hide();\n                $('#luckysheet-dropCell-icon').css('backgroundColor', '#f1f1f1');\n                $('#luckysheet-dropCell-icon').mouseleave(function () {\n                    $(this).css('backgroundColor', '#f1f1f1');\n                });\n                countfunc();\n            });\n        },\n        typeItemHide: function () {\n            let _this = this;\n            let copyRange = _this.copyRange;\n            let str_r = copyRange['row'][0], end_r = copyRange['row'][1];\n            let str_c = copyRange['column'][0], end_c = copyRange['column'][1];\n            let hasNumber = false, hasExtendNumber = false, hasDate = false, hasChn = false, hasChnWeek1 = false, hasChnWeek2 = false, hasChnWeek3 = false;\n            for (let r = str_r; r <= end_r; r++) {\n                for (let c = str_c; c <= end_c; c++) {\n                    if (!!Store.flowdata[r][c]) {\n                        let cell = Store.flowdata[r][c];\n                        if (getObjType(cell) == 'object' && cell['v'] != null && cell['f'] == null) {\n                            if (cell['ct'] != null && cell['ct'].t == 'n') {\n                                hasNumber = true;\n                            } else if (cell['ct'] != null && cell['ct'].t == 'd') {\n                                hasDate = true;\n                            } else if (_this.isExtendNumber(cell['m'])[0]) {\n                                hasExtendNumber = true;\n                            } else if (_this.isChnNumber(cell['m']) && cell['m'] != '日') {\n                                hasChn = true;\n                            } else if (cell['m'] == '日') {\n                                hasChnWeek1 = true;\n                            } else if (_this.isChnWeek2(cell['m'])) {\n                                hasChnWeek2 = true;\n                            } else if (_this.isChnWeek3(cell['m'])) {\n                                hasChnWeek3 = true;\n                            }\n                        }\n                    }\n                }\n            }\n            return [\n                hasNumber,\n                hasExtendNumber,\n                hasDate,\n                hasChn,\n                hasChnWeek1,\n                hasChnWeek2,\n                hasChnWeek3\n            ];\n        },\n        update: function () {\n            let _this = this;\n            if (!checkProtectionLockedRangeList([_this.applyRange], Store.currentSheetIndex)) {\n                return;\n            }\n            if (Store.allowEdit === false) {\n                return;\n            }\n            let d = editor.deepCopyFlowData(Store.flowdata);\n            let file = Store.luckysheetfile[getSheetIndex(Store.currentSheetIndex)];\n            let cfg = $.extend(true, {}, Store.config);\n            let borderInfoCompute = getBorderInfoCompute();\n            let dataVerification = $.extend(true, {}, file['dataVerification']);\n            let direction = _this.direction;\n            let type = _this.applyType;    //复制范围\n            //复制范围\n            let copyRange = _this.copyRange;\n            let copy_str_r = copyRange['row'][0], copy_end_r = copyRange['row'][1];\n            let copy_str_c = copyRange['column'][0], copy_end_c = copyRange['column'][1];\n            let copyData = _this.getCopyData(d, copy_str_r, copy_end_r, copy_str_c, copy_end_c, direction);\n            let csLen;\n            if (direction == 'down' || direction == 'up') {\n                csLen = copy_end_r - copy_str_r + 1;\n            } else if (direction == 'right' || direction == 'left') {\n                csLen = copy_end_c - copy_str_c + 1;\n            }    //应用范围\n            //应用范围\n            let applyRange = _this.applyRange;\n            let apply_str_r = applyRange['row'][0], apply_end_r = applyRange['row'][1];\n            let apply_str_c = applyRange['column'][0], apply_end_c = applyRange['column'][1];\n            if (direction == 'down' || direction == 'up') {\n                let asLen = apply_end_r - apply_str_r + 1;\n                for (let i = apply_str_c; i <= apply_end_c; i++) {\n                    let copyD = copyData[i - apply_str_c];\n                    let applyData = _this.getApplyData(copyD, csLen, asLen);\n                    if (direction == 'down') {\n                        for (let j = apply_str_r; j <= apply_end_r; j++) {\n                            let cell = applyData[j - apply_str_r];\n                            if (cell.f != null) {\n                                let f = '=' + formula.functionCopy(cell.f, 'down', j - apply_str_r + 1);\n                                let v = formula.execfunction(f, j, i);\n                                formula.execFunctionGroup(j, i, v[1], undefined, d);\n                                cell.f = v[2];\n                                cell.v = v[1];\n                                if (cell.spl != null) {\n                                    cell.spl = v[3].data;\n                                } else {\n                                    if (isRealNum(cell.v) && !/^\\d{6}(18|19|20)?\\d{2}(0[1-9]|1[12])(0[1-9]|[12]\\d|3[01])\\d{3}(\\d|X)$/i.test(cell.v)) {\n                                        if (cell.v == Infinity || cell.v == -Infinity) {\n                                            cell.m = cell.v.toString();\n                                        } else {\n                                            if (cell.v.toString().indexOf('e') > -1) {\n                                                let len = cell.v.toString().split('.')[1].split('e')[0].length;\n                                                if (len > 5) {\n                                                    len = 5;\n                                                }\n                                                cell.m = cell.v.toExponential(len).toString();\n                                            } else {\n                                                let mask = genarate(Math.round(cell.v * 1000000000) / 1000000000);\n                                                cell.m = mask[0].toString();\n                                            }\n                                        }\n                                        cell.ct = {\n                                            'fa': 'General',\n                                            't': 'n'\n                                        };\n                                    } else {\n                                        let mask = genarate(cell.v);\n                                        cell.m = mask[0].toString();\n                                        cell.ct = mask[1];\n                                    }\n                                }\n                            }\n                            d[j][i] = cell;    //边框\n                            //边框\n                            let bd_r = copy_str_r + (j - apply_str_r) % csLen;\n                            let bd_c = i;\n                            if (borderInfoCompute[bd_r + '_' + bd_c]) {\n                                let bd_obj = {\n                                    'rangeType': 'cell',\n                                    'value': {\n                                        'row_index': j,\n                                        'col_index': i,\n                                        'l': borderInfoCompute[bd_r + '_' + bd_c].l,\n                                        'r': borderInfoCompute[bd_r + '_' + bd_c].r,\n                                        't': borderInfoCompute[bd_r + '_' + bd_c].t,\n                                        'b': borderInfoCompute[bd_r + '_' + bd_c].b\n                                    }\n                                };\n                                cfg['borderInfo'].push(bd_obj);\n                            } else if (borderInfoCompute[j + '_' + i]) {\n                                let bd_obj = {\n                                    'rangeType': 'cell',\n                                    'value': {\n                                        'row_index': j,\n                                        'col_index': i,\n                                        'l': null,\n                                        'r': null,\n                                        't': null,\n                                        'b': null\n                                    }\n                                };\n                                cfg['borderInfo'].push(bd_obj);\n                            }    //数据验证\n                            //数据验证\n                            if (dataVerification[bd_r + '_' + bd_c]) {\n                                dataVerification[j + '_' + i] = dataVerification[bd_r + '_' + bd_c];\n                            }\n                        }\n                    }\n                    if (direction == 'up') {\n                        for (let j = apply_end_r; j >= apply_str_r; j--) {\n                            let cell = applyData[apply_end_r - j];\n                            if (cell.f != null) {\n                                let f = '=' + formula.functionCopy(cell.f, 'up', apply_end_r - j + 1);\n                                let v = formula.execfunction(f, j, i);\n                                formula.execFunctionGroup(j, i, v[1], undefined, d);\n                                cell.f = v[2];\n                                cell.v = v[1];\n                                if (cell.spl != null) {\n                                    cell.spl = v[3].data;\n                                } else {\n                                    if (isRealNum(cell.v) && !/^\\d{6}(18|19|20)?\\d{2}(0[1-9]|1[12])(0[1-9]|[12]\\d|3[01])\\d{3}(\\d|X)$/i.test(cell.v)) {\n                                        if (cell.v == Infinity || cell.v == -Infinity) {\n                                            cell.m = cell.v.toString();\n                                        } else {\n                                            if (cell.v.toString().indexOf('e') > -1) {\n                                                let len = cell.v.toString().split('.')[1].split('e')[0].length;\n                                                if (len > 5) {\n                                                    len = 5;\n                                                }\n                                                cell.m = cell.v.toExponential(len).toString();\n                                            } else {\n                                                let mask = genarate(Math.round(cell.v * 1000000000) / 1000000000);\n                                                cell.m = mask[0].toString();\n                                            }\n                                        }\n                                        cell.ct = {\n                                            'fa': 'General',\n                                            't': 'n'\n                                        };\n                                    } else {\n                                        let mask = genarate(cell.v);\n                                        cell.m = mask[0].toString();\n                                        cell.ct = mask[1];\n                                    }\n                                }\n                            }\n                            d[j][i] = cell;    //边框\n                            //边框\n                            let bd_r = copy_end_r - (apply_end_r - j) % csLen;\n                            let bd_c = i;\n                            if (borderInfoCompute[bd_r + '_' + bd_c]) {\n                                let bd_obj = {\n                                    'rangeType': 'cell',\n                                    'value': {\n                                        'row_index': j,\n                                        'col_index': i,\n                                        'l': borderInfoCompute[bd_r + '_' + bd_c].l,\n                                        'r': borderInfoCompute[bd_r + '_' + bd_c].r,\n                                        't': borderInfoCompute[bd_r + '_' + bd_c].t,\n                                        'b': borderInfoCompute[bd_r + '_' + bd_c].b\n                                    }\n                                };\n                                cfg['borderInfo'].push(bd_obj);\n                            } else if (borderInfoCompute[j + '_' + i]) {\n                                let bd_obj = {\n                                    'rangeType': 'cell',\n                                    'value': {\n                                        'row_index': j,\n                                        'col_index': i,\n                                        'l': null,\n                                        'r': null,\n                                        't': null,\n                                        'b': null\n                                    }\n                                };\n                                cfg['borderInfo'].push(bd_obj);\n                            }    //数据验证\n                            //数据验证\n                            if (dataVerification[bd_r + '_' + bd_c]) {\n                                dataVerification[j + '_' + i] = dataVerification[bd_r + '_' + bd_c];\n                            }\n                        }\n                    }\n                }\n            } else if (direction == 'right' || direction == 'left') {\n                let asLen = apply_end_c - apply_str_c + 1;\n                for (let i = apply_str_r; i <= apply_end_r; i++) {\n                    let copyD = copyData[i - apply_str_r];\n                    let applyData = _this.getApplyData(copyD, csLen, asLen);\n                    if (direction == 'right') {\n                        for (let j = apply_str_c; j <= apply_end_c; j++) {\n                            let cell = applyData[j - apply_str_c];\n                            if (cell.f != null) {\n                                let f = '=' + formula.functionCopy(cell.f, 'right', j - apply_str_c + 1);\n                                let v = formula.execfunction(f, i, j);\n                                formula.execFunctionGroup(j, i, v[1], undefined, d);\n                                cell.f = v[2];\n                                cell.v = v[1];\n                                if (cell.spl != null) {\n                                    cell.spl = v[3].data;\n                                } else {\n                                    if (isRealNum(cell.v) && !/^\\d{6}(18|19|20)?\\d{2}(0[1-9]|1[12])(0[1-9]|[12]\\d|3[01])\\d{3}(\\d|X)$/i.test(cell.v)) {\n                                        if (cell.v == Infinity || cell.v == -Infinity) {\n                                            cell.m = cell.v.toString();\n                                        } else {\n                                            if (cell.v.toString().indexOf('e') > -1) {\n                                                let len = cell.v.toString().split('.')[1].split('e')[0].length;\n                                                if (len > 5) {\n                                                    len = 5;\n                                                }\n                                                cell.m = cell.v.toExponential(len).toString();\n                                            } else {\n                                                let mask = genarate(Math.round(cell.v * 1000000000) / 1000000000);\n                                                cell.m = mask[0].toString();\n                                            }\n                                        }\n                                        cell.ct = {\n                                            'fa': 'General',\n                                            't': 'n'\n                                        };\n                                    } else {\n                                        let mask = genarate(cell.v);\n                                        cell.m = mask[0].toString();\n                                        cell.ct = mask[1];\n                                    }\n                                }\n                            }\n                            d[i][j] = cell;    //边框\n                            //边框\n                            let bd_r = i;\n                            let bd_c = copy_str_c + (j - apply_str_c) % csLen;\n                            if (borderInfoCompute[bd_r + '_' + bd_c]) {\n                                let bd_obj = {\n                                    'rangeType': 'cell',\n                                    'value': {\n                                        'row_index': i,\n                                        'col_index': j,\n                                        'l': borderInfoCompute[bd_r + '_' + bd_c].l,\n                                        'r': borderInfoCompute[bd_r + '_' + bd_c].r,\n                                        't': borderInfoCompute[bd_r + '_' + bd_c].t,\n                                        'b': borderInfoCompute[bd_r + '_' + bd_c].b\n                                    }\n                                };\n                                cfg['borderInfo'].push(bd_obj);\n                            } else if (borderInfoCompute[i + '_' + j]) {\n                                let bd_obj = {\n                                    'rangeType': 'cell',\n                                    'value': {\n                                        'row_index': i,\n                                        'col_index': j,\n                                        'l': null,\n                                        'r': null,\n                                        't': null,\n                                        'b': null\n                                    }\n                                };\n                                cfg['borderInfo'].push(bd_obj);\n                            }    //数据验证\n                            //数据验证\n                            if (dataVerification[bd_r + '_' + bd_c]) {\n                                dataVerification[i + '_' + j] = dataVerification[bd_r + '_' + bd_c];\n                            }\n                        }\n                    }\n                    if (direction == 'left') {\n                        for (let j = apply_end_c; j >= apply_str_c; j--) {\n                            let cell = applyData[apply_end_c - j];\n                            if (cell.f != null) {\n                                let f = '=' + formula.functionCopy(cell.f, 'left', apply_end_c - j + 1);\n                                let v = formula.execfunction(f, i, j);\n                                formula.execFunctionGroup(j, i, v[1], undefined, d);\n                                cell.f = v[2];\n                                cell.v = v[1];\n                                if (cell.spl != null) {\n                                    cell.spl = v[3].data;\n                                } else {\n                                    if (isRealNum(cell.v) && !/^\\d{6}(18|19|20)?\\d{2}(0[1-9]|1[12])(0[1-9]|[12]\\d|3[01])\\d{3}(\\d|X)$/i.test(cell.v)) {\n                                        if (cell.v == Infinity || cell.v == -Infinity) {\n                                            cell.m = cell.v.toString();\n                                        } else {\n                                            if (cell.v.toString().indexOf('e') > -1) {\n                                                let len = cell.v.toString().split('.')[1].split('e')[0].length;\n                                                if (len > 5) {\n                                                    len = 5;\n                                                }\n                                                cell.m = cell.v.toExponential(len).toString();\n                                            } else {\n                                                let mask = genarate(Math.round(cell.v * 1000000000) / 1000000000);\n                                                cell.m = mask[0].toString();\n                                            }\n                                        }\n                                        cell.ct = {\n                                            'fa': 'General',\n                                            't': 'n'\n                                        };\n                                    } else {\n                                        let mask = genarate(cell.v);\n                                        cell.m = mask[0].toString();\n                                        cell.ct = mask[1];\n                                    }\n                                }\n                            }\n                            d[i][j] = cell;    //边框\n                            //边框\n                            let bd_r = i;\n                            let bd_c = copy_end_c - (apply_end_c - j) % csLen;\n                            if (borderInfoCompute[bd_r + '_' + bd_c]) {\n                                let bd_obj = {\n                                    'rangeType': 'cell',\n                                    'value': {\n                                        'row_index': i,\n                                        'col_index': j,\n                                        'l': borderInfoCompute[bd_r + '_' + bd_c].l,\n                                        'r': borderInfoCompute[bd_r + '_' + bd_c].r,\n                                        't': borderInfoCompute[bd_r + '_' + bd_c].t,\n                                        'b': borderInfoCompute[bd_r + '_' + bd_c].b\n                                    }\n                                };\n                                cfg['borderInfo'].push(bd_obj);\n                            } else if (borderInfoCompute[i + '_' + j]) {\n                                let bd_obj = {\n                                    'rangeType': 'cell',\n                                    'value': {\n                                        'row_index': i,\n                                        'col_index': j,\n                                        'l': null,\n                                        'r': null,\n                                        't': null,\n                                        'b': null\n                                    }\n                                };\n                                cfg['borderInfo'].push(bd_obj);\n                            }    //数据验证\n                            //数据验证\n                            if (dataVerification[bd_r + '_' + bd_c]) {\n                                dataVerification[i + '_' + j] = dataVerification[bd_r + '_' + bd_c];\n                            }\n                        }\n                    }\n                }\n            }    //条件格式\n            //条件格式\n            let cdformat = $.extend(true, [], file['luckysheet_conditionformat_save']);\n            if (cdformat != null && cdformat.length > 0) {\n                for (let i = 0; i < cdformat.length; i++) {\n                    let cdformat_cellrange = cdformat[i].cellrange;\n                    let emptyRange = [];\n                    for (let j = 0; j < cdformat_cellrange.length; j++) {\n                        let range = conditionformat.CFSplitRange(cdformat_cellrange[j], {\n                            'row': copyRange['row'],\n                            'column': copyRange['column']\n                        }, {\n                            'row': applyRange['row'],\n                            'column': applyRange['column']\n                        }, 'operatePart');\n                        if (range.length > 0) {\n                            emptyRange = emptyRange.concat(range);\n                        }\n                    }\n                    if (emptyRange.length > 0) {\n                        cdformat[i].cellrange.push(applyRange);\n                    }\n                }\n            }    //刷新一次表格\n            //刷新一次表格\n            let allParam = {\n                'cfg': cfg,\n                'cdformat': cdformat,\n                'dataVerification': dataVerification\n            };\n            jfrefreshgrid(d, Store.luckysheet_select_save, allParam);\n            selectHightlightShow();\n        },\n        getCopyData: function (d, r1, r2, c1, c2, direction) {\n            let _this = this;\n            let copyData = [];\n            let a1, a2, b1, b2;\n            if (direction == 'down' || direction == 'up') {\n                a1 = c1;\n                a2 = c2;\n                b1 = r1;\n                b2 = r2;\n            } else if (direction == 'right' || direction == 'left') {\n                a1 = r1;\n                a2 = r2;\n                b1 = c1;\n                b2 = c2;\n            }\n            for (let a = a1; a <= a2; a++) {\n                let obj = {};\n                let arrData = [];\n                let arrIndex = [];\n                let text = '';\n                let extendNumberBeforeStr = null;\n                let extendNumberAfterStr = null;\n                let isSameStr = true;\n                for (let b = b1; b <= b2; b++) {\n                    //单元格\n                    let data;\n                    if (direction == 'down' || direction == 'up') {\n                        data = d[b][a];\n                    } else if (direction == 'right' || direction == 'left') {\n                        data = d[a][b];\n                    }    //单元格值类型\n                    //单元格值类型\n                    let str;\n                    if (!!data && !!data['v'] && data['f'] == null) {\n                        if (!!data['ct'] && data['ct']['t'] == 'n') {\n                            str = 'number';\n                            extendNumberBeforeStr = null;\n                            extendNumberAfterStr = null;\n                        } else if (!!data['ct'] && data['ct']['t'] == 'd') {\n                            str = 'date';\n                            extendNumberBeforeStr = null;\n                            extendNumberAfterStr = null;\n                        } else if (_this.isExtendNumber(data['m'])[0]) {\n                            str = 'extendNumber';\n                            let isExtendNumber = _this.isExtendNumber(data['m']);\n                            if (extendNumberBeforeStr == null || extendNumberAfterStr == null) {\n                                isSameStr = true;\n                                extendNumberBeforeStr = isExtendNumber[2];\n                                extendNumberAfterStr = isExtendNumber[3];\n                            } else {\n                                if (isExtendNumber[2] != extendNumberBeforeStr || isExtendNumber[3] != extendNumberAfterStr) {\n                                    isSameStr = false;\n                                    extendNumberBeforeStr = isExtendNumber[2];\n                                    extendNumberAfterStr = isExtendNumber[3];\n                                } else {\n                                    isSameStr = true;\n                                }\n                            }\n                        } else if (_this.isChnNumber(data['m'])) {\n                            str = 'chnNumber';\n                            extendNumberBeforeStr = null;\n                            extendNumberAfterStr = null;\n                        } else if (_this.isChnWeek2(data['m'])) {\n                            str = 'chnWeek2';\n                            extendNumberBeforeStr = null;\n                            extendNumberAfterStr = null;\n                        } else if (_this.isChnWeek3(data['m'])) {\n                            str = 'chnWeek3';\n                            extendNumberBeforeStr = null;\n                            extendNumberAfterStr = null;\n                        } else {\n                            str = 'other';\n                            extendNumberBeforeStr = null;\n                            extendNumberAfterStr = null;\n                        }\n                    } else {\n                        str = 'other';\n                        extendNumberBeforeStr = null;\n                        extendNumberAfterStr = null;\n                    }\n                    if (str == 'extendNumber') {\n                        if (b == b1) {\n                            if (b1 == b2) {\n                                text = str;\n                                arrData.push(data);\n                                arrIndex.push(b - b1 + 1);\n                                obj[text] = [];\n                                obj[text].push({\n                                    'data': arrData,\n                                    'index': arrIndex\n                                });\n                            } else {\n                                text = str;\n                                arrData.push(data);\n                                arrIndex.push(b - b1 + 1);\n                            }\n                        } else if (b == b2) {\n                            if (text == str && isSameStr) {\n                                arrData.push(data);\n                                arrIndex.push(b - b1 + 1);\n                                if (text in obj) {\n                                    obj[text].push({\n                                        'data': arrData,\n                                        'index': arrIndex\n                                    });\n                                } else {\n                                    obj[text] = [];\n                                    obj[text].push({\n                                        'data': arrData,\n                                        'index': arrIndex\n                                    });\n                                }\n                            } else {\n                                if (text in obj) {\n                                    obj[text].push({\n                                        'data': arrData,\n                                        'index': arrIndex\n                                    });\n                                } else {\n                                    obj[text] = [];\n                                    obj[text].push({\n                                        'data': arrData,\n                                        'index': arrIndex\n                                    });\n                                }\n                                text = str;\n                                arrData = [];\n                                arrData.push(data);\n                                arrIndex = [];\n                                arrIndex.push(b - b1 + 1);\n                                if (text in obj) {\n                                    obj[text].push({\n                                        'data': arrData,\n                                        'index': arrIndex\n                                    });\n                                } else {\n                                    obj[text] = [];\n                                    obj[text].push({\n                                        'data': arrData,\n                                        'index': arrIndex\n                                    });\n                                }\n                            }\n                        } else {\n                            if (text == str && isSameStr) {\n                                arrData.push(data);\n                                arrIndex.push(b - b1 + 1);\n                            } else {\n                                if (text in obj) {\n                                    obj[text].push({\n                                        'data': arrData,\n                                        'index': arrIndex\n                                    });\n                                } else {\n                                    obj[text] = [];\n                                    obj[text].push({\n                                        'data': arrData,\n                                        'index': arrIndex\n                                    });\n                                }\n                                text = str;\n                                arrData = [];\n                                arrData.push(data);\n                                arrIndex = [];\n                                arrIndex.push(b - b1 + 1);\n                            }\n                        }\n                    } else {\n                        if (b == b1) {\n                            if (b1 == b2) {\n                                text = str;\n                                arrData.push(data);\n                                arrIndex.push(b - b1 + 1);\n                                obj[text] = [];\n                                obj[text].push({\n                                    'data': arrData,\n                                    'index': arrIndex\n                                });\n                            } else {\n                                text = str;\n                                arrData.push(data);\n                                arrIndex.push(b - b1 + 1);\n                            }\n                        } else if (b == b2) {\n                            if (text == str) {\n                                arrData.push(data);\n                                arrIndex.push(b - b1 + 1);\n                                if (text in obj) {\n                                    obj[text].push({\n                                        'data': arrData,\n                                        'index': arrIndex\n                                    });\n                                } else {\n                                    obj[text] = [];\n                                    obj[text].push({\n                                        'data': arrData,\n                                        'index': arrIndex\n                                    });\n                                }\n                            } else {\n                                if (text in obj) {\n                                    obj[text].push({\n                                        'data': arrData,\n                                        'index': arrIndex\n                                    });\n                                } else {\n                                    obj[text] = [];\n                                    obj[text].push({\n                                        'data': arrData,\n                                        'index': arrIndex\n                                    });\n                                }\n                                text = str;\n                                arrData = [];\n                                arrData.push(data);\n                                arrIndex = [];\n                                arrIndex.push(b - b1 + 1);\n                                if (text in obj) {\n                                    obj[text].push({\n                                        'data': arrData,\n                                        'index': arrIndex\n                                    });\n                                } else {\n                                    obj[text] = [];\n                                    obj[text].push({\n                                        'data': arrData,\n                                        'index': arrIndex\n                                    });\n                                }\n                            }\n                        } else {\n                            if (text == str) {\n                                arrData.push(data);\n                                arrIndex.push(b - b1 + 1);\n                            } else {\n                                if (text in obj) {\n                                    obj[text].push({\n                                        'data': arrData,\n                                        'index': arrIndex\n                                    });\n                                } else {\n                                    obj[text] = [];\n                                    obj[text].push({\n                                        'data': arrData,\n                                        'index': arrIndex\n                                    });\n                                }\n                                text = str;\n                                arrData = [];\n                                arrData.push(data);\n                                arrIndex = [];\n                                arrIndex.push(b - b1 + 1);\n                            }\n                        }\n                    }\n                }\n                copyData.push(obj);\n            }\n            return copyData;\n        },\n        getApplyData: function (copyD, csLen, asLen) {\n            let _this = this;\n            let applyData = [];\n            let direction = _this.direction;\n            let type = _this.applyType;\n            let num = Math.floor(asLen / csLen);\n            let rsd = asLen % csLen;    //纯数字类型\n            //纯数字类型\n            let copyD_number = copyD['number'];\n            let applyD_number = [];\n            if (!!copyD_number) {\n                for (let i = 0; i < copyD_number.length; i++) {\n                    let s = _this.getLenS(copyD_number[i]['index'], rsd);\n                    let len = copyD_number[i]['index'].length * num + s;\n                    let arrData;\n                    if (type == '1' || type == '3') {\n                        arrData = _this.getDataByType(copyD_number[i]['data'], len, direction, type, 'number');\n                    } else if (type == '2') {\n                        arrData = _this.getDataByType(copyD_number[i]['data'], len, direction, type);\n                    } else {\n                        arrData = _this.getDataByType(copyD_number[i]['data'], len, direction, '0');\n                    }\n                    let arrIndex = _this.getDataIndex(csLen, asLen, copyD_number[i]['index']);\n                    applyD_number.push({\n                        'data': arrData,\n                        'index': arrIndex\n                    });\n                }\n            }    //扩展数字型（即一串字符最后面的是数字）\n            //扩展数字型（即一串字符最后面的是数字）\n            let copyD_extendNumber = copyD['extendNumber'];\n            let applyD_extendNumber = [];\n            if (!!copyD_extendNumber) {\n                for (let i = 0; i < copyD_extendNumber.length; i++) {\n                    let s = _this.getLenS(copyD_extendNumber[i]['index'], rsd);\n                    let len = copyD_extendNumber[i]['index'].length * num + s;\n                    let arrData;\n                    if (type == '1' || type == '3') {\n                        arrData = _this.getDataByType(copyD_extendNumber[i]['data'], len, direction, type, 'extendNumber');\n                    } else if (type == '2') {\n                        arrData = _this.getDataByType(copyD_extendNumber[i]['data'], len, direction, type);\n                    } else {\n                        arrData = _this.getDataByType(copyD_extendNumber[i]['data'], len, direction, '0');\n                    }\n                    let arrIndex = _this.getDataIndex(csLen, asLen, copyD_extendNumber[i]['index']);\n                    applyD_extendNumber.push({\n                        'data': arrData,\n                        'index': arrIndex\n                    });\n                }\n            }    //日期类型\n            //日期类型\n            let copyD_date = copyD['date'];\n            let applyD_date = [];\n            if (!!copyD_date) {\n                for (let i = 0; i < copyD_date.length; i++) {\n                    let s = _this.getLenS(copyD_date[i]['index'], rsd);\n                    let len = copyD_date[i]['index'].length * num + s;\n                    let arrData;\n                    if (type == '1' || type == '3') {\n                        arrData = _this.getDataByType(copyD_date[i]['data'], len, direction, type, 'date');\n                    } else if (type == '8') {\n                        arrData = _this.getDataByType(copyD_date[i]['data'], len, direction, '0');\n                    } else {\n                        arrData = _this.getDataByType(copyD_date[i]['data'], len, direction, type);\n                    }\n                    let arrIndex = _this.getDataIndex(csLen, asLen, copyD_date[i]['index']);\n                    applyD_date.push({\n                        'data': arrData,\n                        'index': arrIndex\n                    });\n                }\n            }    //中文小写数字 或 一~日\n            //中文小写数字 或 一~日\n            let copyD_chnNumber = copyD['chnNumber'];\n            let applyD_chnNumber = [];\n            if (!!copyD_chnNumber) {\n                for (let i = 0; i < copyD_chnNumber.length; i++) {\n                    let s = _this.getLenS(copyD_chnNumber[i]['index'], rsd);\n                    let len = copyD_chnNumber[i]['index'].length * num + s;\n                    let arrData;\n                    if (type == '1' || type == '3') {\n                        arrData = _this.getDataByType(copyD_chnNumber[i]['data'], len, direction, type, 'chnNumber');\n                    } else if (type == '2' || type == '8') {\n                        arrData = _this.getDataByType(copyD_chnNumber[i]['data'], len, direction, type);\n                    } else {\n                        arrData = _this.getDataByType(copyD_chnNumber[i]['data'], len, direction, '0');\n                    }\n                    let arrIndex = _this.getDataIndex(csLen, asLen, copyD_chnNumber[i]['index']);\n                    applyD_chnNumber.push({\n                        'data': arrData,\n                        'index': arrIndex\n                    });\n                }\n            }    //周一~周日\n            //周一~周日\n            let copyD_chnWeek2 = copyD['chnWeek2'];\n            let applyD_chnWeek2 = [];\n            if (!!copyD_chnWeek2) {\n                for (let i = 0; i < copyD_chnWeek2.length; i++) {\n                    let s = _this.getLenS(copyD_chnWeek2[i]['index'], rsd);\n                    let len = copyD_chnWeek2[i]['index'].length * num + s;\n                    let arrData;\n                    if (type == '1' || type == '3') {\n                        arrData = _this.getDataByType(copyD_chnWeek2[i]['data'], len, direction, type, 'chnWeek2');\n                    } else if (type == '2') {\n                        arrData = _this.getDataByType(copyD_chnWeek2[i]['data'], len, direction, type);\n                    } else {\n                        arrData = _this.getDataByType(copyD_chnWeek2[i]['data'], len, direction, '0');\n                    }\n                    let arrIndex = _this.getDataIndex(csLen, asLen, copyD_chnWeek2[i]['index']);\n                    applyD_chnWeek2.push({\n                        'data': arrData,\n                        'index': arrIndex\n                    });\n                }\n            }    //星期一~星期日\n            //星期一~星期日\n            let copyD_chnWeek3 = copyD['chnWeek3'];\n            let applyD_chnWeek3 = [];\n            if (!!copyD_chnWeek3) {\n                for (let i = 0; i < copyD_chnWeek3.length; i++) {\n                    let s = _this.getLenS(copyD_chnWeek3[i]['index'], rsd);\n                    let len = copyD_chnWeek3[i]['index'].length * num + s;\n                    let arrData;\n                    if (type == '1' || type == '3') {\n                        arrData = _this.getDataByType(copyD_chnWeek3[i]['data'], len, direction, type, 'chnWeek3');\n                    } else if (type == '2') {\n                        arrData = _this.getDataByType(copyD_chnWeek3[i]['data'], len, direction, type);\n                    } else {\n                        arrData = _this.getDataByType(copyD_chnWeek3[i]['data'], len, direction, '0');\n                    }\n                    let arrIndex = _this.getDataIndex(csLen, asLen, copyD_chnWeek3[i]['index']);\n                    applyD_chnWeek3.push({\n                        'data': arrData,\n                        'index': arrIndex\n                    });\n                }\n            }    //其它\n            //其它\n            let copyD_other = copyD['other'];\n            let applyD_other = [];\n            if (!!copyD_other) {\n                for (let i = 0; i < copyD_other.length; i++) {\n                    let s = _this.getLenS(copyD_other[i]['index'], rsd);\n                    let len = copyD_other[i]['index'].length * num + s;\n                    let arrData;\n                    if (type == '2' || type == '3') {\n                        arrData = _this.getDataByType(copyD_other[i]['data'], len, direction, type);\n                    } else {\n                        arrData = _this.getDataByType(copyD_other[i]['data'], len, direction, '0');\n                    }\n                    let arrIndex = _this.getDataIndex(csLen, asLen, copyD_other[i]['index']);\n                    applyD_other.push({\n                        'data': arrData,\n                        'index': arrIndex\n                    });\n                }\n            }\n            for (let x = 1; x <= asLen; x++) {\n                if (applyD_number.length > 0) {\n                    for (let y = 0; y < applyD_number.length; y++) {\n                        if (x in applyD_number[y]['index']) {\n                            applyData.push(applyD_number[y]['data'][applyD_number[y]['index'][x]]);\n                        }\n                    }\n                }\n                if (applyD_extendNumber.length > 0) {\n                    for (let y = 0; y < applyD_extendNumber.length; y++) {\n                        if (x in applyD_extendNumber[y]['index']) {\n                            applyData.push(applyD_extendNumber[y]['data'][applyD_extendNumber[y]['index'][x]]);\n                        }\n                    }\n                }\n                if (applyD_date.length > 0) {\n                    for (let y = 0; y < applyD_date.length; y++) {\n                        if (x in applyD_date[y]['index']) {\n                            applyData.push(applyD_date[y]['data'][applyD_date[y]['index'][x]]);\n                        }\n                    }\n                }\n                if (applyD_chnNumber.length > 0) {\n                    for (let y = 0; y < applyD_chnNumber.length; y++) {\n                        if (x in applyD_chnNumber[y]['index']) {\n                            applyData.push(applyD_chnNumber[y]['data'][applyD_chnNumber[y]['index'][x]]);\n                        }\n                    }\n                }\n                if (applyD_chnWeek2.length > 0) {\n                    for (let y = 0; y < applyD_chnWeek2.length; y++) {\n                        if (x in applyD_chnWeek2[y]['index']) {\n                            applyData.push(applyD_chnWeek2[y]['data'][applyD_chnWeek2[y]['index'][x]]);\n                        }\n                    }\n                }\n                if (applyD_chnWeek3.length > 0) {\n                    for (let y = 0; y < applyD_chnWeek3.length; y++) {\n                        if (x in applyD_chnWeek3[y]['index']) {\n                            applyData.push(applyD_chnWeek3[y]['data'][applyD_chnWeek3[y]['index'][x]]);\n                        }\n                    }\n                }\n                if (applyD_other.length > 0) {\n                    for (let y = 0; y < applyD_other.length; y++) {\n                        if (x in applyD_other[y]['index']) {\n                            applyData.push(applyD_other[y]['data'][applyD_other[y]['index'][x]]);\n                        }\n                    }\n                }\n            }\n            return applyData;\n        },\n        getLenS: function (indexArr, rsd) {\n            let s = 0;\n            for (let j = 0; j < indexArr.length; j++) {\n                if (indexArr[j] <= rsd) {\n                    s++;\n                } else {\n                    break;\n                }\n            }\n            return s;\n        },\n        getDataIndex: function (csLen, asLen, indexArr) {\n            let obj = {};\n            let num = Math.floor(asLen / csLen);\n            let rsd = asLen % csLen;\n            let sum = 0;\n            if (num > 0) {\n                for (let i = 1; i <= num; i++) {\n                    for (let j = 0; j < indexArr.length; j++) {\n                        obj[indexArr[j] + (i - 1) * csLen] = sum;\n                        sum++;\n                    }\n                }\n                for (let a = 0; a < indexArr.length; a++) {\n                    if (indexArr[a] <= rsd) {\n                        obj[indexArr[a] + csLen * num] = sum;\n                        sum++;\n                    } else {\n                        break;\n                    }\n                }\n            } else {\n                for (let a = 0; a < indexArr.length; a++) {\n                    if (indexArr[a] <= rsd) {\n                        obj[indexArr[a]] = sum;\n                        sum++;\n                    } else {\n                        break;\n                    }\n                }\n            }\n            return obj;\n        },\n        getDataByType: function (data, len, direction, type, dataType) {\n            let _this = this;\n            let applyData = [];\n            if (type == '0') {\n                //复制单元格\n                if (direction == 'up' || direction == 'left') {\n                    data.reverse();\n                }\n                applyData = _this.FillCopy(data, len);\n            } else if (type == '1') {\n                //填充序列\n                if (dataType == 'number') {\n                    //数据类型是 数字\n                    applyData = _this.FillSeries(data, len, direction);\n                } else if (dataType == 'extendNumber') {\n                    //扩展数字\n                    if (data.length == 1) {\n                        let step;\n                        if (direction == 'down' || direction == 'right') {\n                            step = 1;\n                        } else if (direction == 'up' || direction == 'left') {\n                            step = -1;\n                        }\n                        applyData = _this.FillExtendNumber(data, len, step);\n                    } else {\n                        let dataNumArr = [];\n                        for (let i = 0; i < data.length; i++) {\n                            let txt = data[i]['m'];\n                            dataNumArr.push(Number(_this.isExtendNumber(txt)[1]));\n                        }\n                        if (direction == 'up' || direction == 'left') {\n                            data.reverse();\n                            dataNumArr.reverse();\n                        }\n                        if (_this.isEqualDiff(dataNumArr)) {\n                            //等差数列，以等差为step\n                            let step = dataNumArr[1] - dataNumArr[0];\n                            applyData = _this.FillExtendNumber(data, len, step);\n                        } else {\n                            //不是等差数列，复制数据\n                            applyData = _this.FillCopy(data, len);\n                        }\n                    }\n                } else if (dataType == 'date') {\n                    //数据类型是 日期\n                    if (data.length == 1) {\n                        //以一天为step\n                        let step;\n                        if (direction == 'down' || direction == 'right') {\n                            step = 1;\n                        } else if (direction == 'up' || direction == 'left') {\n                            step = -1;\n                        }\n                        applyData = _this.FillDays(data, len, step);\n                    } else {\n                        if (direction == 'up' || direction == 'left') {\n                            data.reverse();\n                        }\n                        let judgeDate = _this.judgeDate(data);\n                        if (judgeDate[0] && judgeDate[3]) {\n                            //日一样，月差为等差数列，以月差为step\n                            let step = dayjs(data[1]['m']).diff(dayjs(data[0]['m']), 'months');\n                            applyData = _this.FillMonths(data, len, step);\n                        } else if (!judgeDate[0] && judgeDate[2]) {\n                            //日不一样，日差为等差数列，以日差为step\n                            let step = dayjs(data[1]['m']).diff(dayjs(data[0]['m']), 'days');\n                            applyData = _this.FillDays(data, len, step);\n                        } else {\n                            //其它，复制数据\n                            applyData = _this.FillCopy(data, len);\n                        }\n                    }\n                } else if (dataType == 'chnNumber') {\n                    //数据类型是 中文小写数字\n                    if (data.length == 1) {\n                        if (data[0]['m'] == '日' || _this.ChineseToNumber(data[0]['m']) < 7) {\n                            //数字小于7，以周一~周日序列填充\n                            let step;\n                            if (direction == 'down' || direction == 'right') {\n                                step = 1;\n                            } else if (direction == 'up' || direction == 'left') {\n                                step = -1;\n                            }\n                            applyData = _this.FillChnWeek(data, len, step);\n                        } else {\n                            //数字大于7，以中文小写数字序列填充\n                            let step;\n                            if (direction == 'down' || direction == 'right') {\n                                step = 1;\n                            } else if (direction == 'up' || direction == 'left') {\n                                step = -1;\n                            }\n                            applyData = _this.FillChnNumber(data, len, step);\n                        }\n                    } else {\n                        let hasweek = false;\n                        for (let i = 0; i < data.length; i++) {\n                            if (data[i]['m'] == '日') {\n                                hasweek = true;\n                                break;\n                            }\n                        }\n                        let dataNumArr = [];\n                        let weekIndex = 0;\n                        for (let i = 0; i < data.length; i++) {\n                            if (data[i]['m'] == '日') {\n                                if (i == 0) {\n                                    dataNumArr.push(0);\n                                } else {\n                                    weekIndex++;\n                                    dataNumArr.push(weekIndex * 7);\n                                }\n                            } else if (hasweek && _this.ChineseToNumber(data[i]['m']) > 0 && _this.ChineseToNumber(data[i]['m']) < 7) {\n                                dataNumArr.push(_this.ChineseToNumber(data[i]['m']) + weekIndex * 7);\n                            } else {\n                                dataNumArr.push(_this.ChineseToNumber(data[i]['m']));\n                            }\n                        }\n                        if (direction == 'up' || direction == 'left') {\n                            data.reverse();\n                            dataNumArr.reverse();\n                        }\n                        if (_this.isEqualDiff(dataNumArr)) {\n                            if (hasweek || dataNumArr[dataNumArr.length - 1] < 6 && dataNumArr[0] > 0 || dataNumArr[0] < 6 && dataNumArr[dataNumArr.length - 1] > 0) {\n                                //以周一~周日序列填充\n                                let step = dataNumArr[1] - dataNumArr[0];\n                                applyData = _this.FillChnWeek(data, len, step);\n                            } else {\n                                //以中文小写数字序列填充\n                                let step = dataNumArr[1] - dataNumArr[0];\n                                applyData = _this.FillChnNumber(data, len, step);\n                            }\n                        } else {\n                            //不是等差数列，复制数据\n                            applyData = _this.FillCopy(data, len);\n                        }\n                    }\n                } else if (dataType == 'chnWeek2') {\n                    //周一~周日\n                    if (data.length == 1) {\n                        let step;\n                        if (direction == 'down' || direction == 'right') {\n                            step = 1;\n                        } else if (direction == 'up' || direction == 'left') {\n                            step = -1;\n                        }\n                        applyData = _this.FillChnWeek2(data, len, step);\n                    } else {\n                        let dataNumArr = [];\n                        let weekIndex = 0;\n                        for (let i = 0; i < data.length; i++) {\n                            let lastTxt = data[i]['m'].substr(data[i]['m'].length - 1, 1);\n                            if (data[i]['m'] == '周日') {\n                                if (i == 0) {\n                                    dataNumArr.push(0);\n                                } else {\n                                    weekIndex++;\n                                    dataNumArr.push(weekIndex * 7);\n                                }\n                            } else {\n                                dataNumArr.push(_this.ChineseToNumber(lastTxt) + weekIndex * 7);\n                            }\n                        }\n                        if (direction == 'up' || direction == 'left') {\n                            data.reverse();\n                            dataNumArr.reverse();\n                        }\n                        if (_this.isEqualDiff(dataNumArr)) {\n                            //等差数列，以等差为step\n                            let step = dataNumArr[1] - dataNumArr[0];\n                            applyData = _this.FillChnWeek2(data, len, step);\n                        } else {\n                            //不是等差数列，复制数据\n                            applyData = _this.FillCopy(data, len);\n                        }\n                    }\n                } else if (dataType == 'chnWeek3') {\n                    //星期一~星期日\n                    if (data.length == 1) {\n                        let step;\n                        if (direction == 'down' || direction == 'right') {\n                            step = 1;\n                        } else if (direction == 'up' || direction == 'left') {\n                            step = -1;\n                        }\n                        applyData = _this.FillChnWeek3(data, len, step);\n                    } else {\n                        let dataNumArr = [];\n                        let weekIndex = 0;\n                        for (let i = 0; i < data.length; i++) {\n                            let lastTxt = data[i]['m'].substr(data[i]['m'].length - 1, 1);\n                            if (data[i]['m'] == '星期日') {\n                                if (i == 0) {\n                                    dataNumArr.push(0);\n                                } else {\n                                    weekIndex++;\n                                    dataNumArr.push(weekIndex * 7);\n                                }\n                            } else {\n                                dataNumArr.push(_this.ChineseToNumber(lastTxt) + weekIndex * 7);\n                            }\n                        }\n                        if (direction == 'up' || direction == 'left') {\n                            data.reverse();\n                            dataNumArr.reverse();\n                        }\n                        if (_this.isEqualDiff(dataNumArr)) {\n                            //等差数列，以等差为step\n                            let step = dataNumArr[1] - dataNumArr[0];\n                            applyData = _this.FillChnWeek3(data, len, step);\n                        } else {\n                            //不是等差数列，复制数据\n                            applyData = _this.FillCopy(data, len);\n                        }\n                    }\n                } else {\n                    //数据类型是 其它\n                    if (direction == 'up' || direction == 'left') {\n                        data.reverse();\n                    }\n                    applyData = _this.FillCopy(data, len);\n                }\n            } else if (type == '2') {\n                //仅填充格式\n                if (direction == 'up' || direction == 'left') {\n                    data.reverse();\n                }\n                applyData = _this.FillOnlyFormat(data, len);\n            } else if (type == '3') {\n                //不带格式填充\n                let dataArr = _this.getDataByType(data, len, direction, '1', dataType);\n                applyData = _this.FillWithoutFormat(dataArr);\n            } else if (type == '4') {\n                //以天数填充\n                if (data.length == 1) {\n                    //以一天为step\n                    let step;\n                    if (direction == 'down' || direction == 'right') {\n                        step = 1;\n                    } else if (direction == 'up' || direction == 'left') {\n                        step = -1;\n                    }\n                    applyData = _this.FillDays(data, len, step);\n                } else if (data.length == 2) {\n                    //以日差为step\n                    if (direction == 'up' || direction == 'left') {\n                        data.reverse();\n                    }\n                    let step = dayjs(data[1]['m']).diff(dayjs(data[0]['m']), 'days');\n                    applyData = _this.FillDays(data, len, step);\n                } else {\n                    if (direction == 'up' || direction == 'left') {\n                        data.reverse();\n                    }\n                    let judgeDate = _this.judgeDate(data);\n                    if (judgeDate[0] && judgeDate[3]) {\n                        //日一样，且月差为等差数列，以月差为step\n                        let step = dayjs(data[1]['m']).diff(dayjs(data[0]['m']), 'months');\n                        applyData = _this.FillMonths(data, len, step);\n                    } else if (!judgeDate[0] && judgeDate[2]) {\n                        //日不一样，且日差为等差数列，以日差为step\n                        let step = dayjs(data[1]['m']).diff(dayjs(data[0]['m']), 'days');\n                        applyData = _this.FillDays(data, len, step);\n                    } else {\n                        //日差不是等差数列，复制数据\n                        applyData = _this.FillCopy(data, len);\n                    }\n                }\n            } else if (type == '5') {\n                //以工作日填充\n                if (data.length == 1) {\n                    //以一天为step（若那天为休息日，则跳过）\n                    let step;\n                    if (direction == 'down' || direction == 'right') {\n                        step = 1;\n                    } else if (direction == 'up' || direction == 'left') {\n                        step = -1;\n                    }\n                    let newLen = Math.round(len * 1.5);\n                    for (let i = 1; i <= newLen; i++) {\n                        let d = $.extend(true, {}, data[0]);\n                        let day = dayjs(d['m']).add(i, 'days').day();\n                        if (day == 0 || day == 6) {\n                            continue;\n                        }\n                        let date = dayjs(d['m']).add(step * i, 'days').format('YYYY-MM-DD');\n                        d['m'] = date;\n                        d['v'] = genarate(date)[2];\n                        applyData.push(d);\n                        if (applyData.length == len) {\n                            break;\n                        }\n                    }\n                } else if (data.length == 2) {\n                    if (dayjs(data[1]['m']).date() == dayjs(data[0]['m']).date() && dayjs(data[1]['m']).diff(dayjs(data[0]['m']), 'months') != 0) {\n                        //日一样，且月差大于一月，以月差为step（若那天为休息日，则向前取最近的工作日）\n                        if (direction == 'up' || direction == 'left') {\n                            data.reverse();\n                        }\n                        let step = dayjs(data[1]['m']).diff(dayjs(data[0]['m']), 'months');\n                        for (let i = 1; i <= len; i++) {\n                            let index = (i - 1) % data.length;\n                            let d = $.extend(true, {}, data[index]);\n                            let day = dayjs(data[data.length - 1]).add(step * i, 'months').day(), date;\n                            if (day == 0) {\n                                date = dayjs(data[data.length - 1]).add(step * i, 'months').subtract(2, 'days').format('YYYY-MM-DD');\n                            } else if (day == 6) {\n                                date = dayjs(data[data.length - 1]).add(step * i, 'months').subtract(1, 'days').format('YYYY-MM-DD');\n                            } else {\n                                date = dayjs(data[data.length - 1]).add(step * i, 'months').format('YYYY-MM-DD');\n                            }\n                            d['m'] = date;\n                            d['v'] = genarate(date)[2];\n                            applyData.push(d);\n                        }\n                    } else {\n                        //日不一样\n                        if (Math.abs(dayjs(data[1]['m']).diff(dayjs(data[0]['m']))) > 7) {\n                            //若日差大于7天，以一月为step（若那天是休息日，则向前取最近的工作日）\n                            let step_month;\n                            if (direction == 'down' || direction == 'right') {\n                                step_month = 1;\n                            } else if (direction == 'up' || direction == 'left') {\n                                step_month = -1;\n                                data.reverse();\n                            }\n                            let step;    //以数组第一个为对比\n                            //以数组第一个为对比\n                            for (let i = 1; i <= len; i++) {\n                                let index = (i - 1) % data.length;\n                                let d = $.extend(true, {}, data[index]);\n                                let num = Math.ceil(i / data.length);\n                                if (index == 0) {\n                                    step = dayjs(d['m']).add(step_month * num, 'months').diff(dayjs(d['m']), 'days');\n                                }\n                                let day = dayjs(d['m']).add(step, 'days').day(), date;\n                                if (day == 0) {\n                                    date = dayjs(d['m']).add(step, 'days').subtract(2, 'days').format('YYYY-MM-DD');\n                                } else if (day == 6) {\n                                    date = dayjs(d['m']).add(step, 'days').subtract(1, 'days').format('YYYY-MM-DD');\n                                } else {\n                                    date = dayjs(d['m']).add(step, 'days').format('YYYY-MM-DD');\n                                }\n                                d['m'] = date;\n                                d['v'] = genarate(date)[2];\n                                applyData.push(d);\n                            }\n                        } else {\n                            //若日差小于等于7天，以7天为step（若那天是休息日，则向前取最近的工作日）\n                            let step_day;\n                            if (direction == 'down' || direction == 'right') {\n                                step_day = 7;\n                            } else if (direction == 'up' || direction == 'left') {\n                                step_day = -7;\n                                data.reverse();\n                            }\n                            let step;    //以数组第一个为对比\n                            //以数组第一个为对比\n                            for (let i = 1; i <= len; i++) {\n                                let index = (i - 1) % data.length;\n                                let d = $.extend(true, {}, data[index]);\n                                let num = Math.ceil(i / data.length);\n                                if (index == 0) {\n                                    step = dayjs(d['m']).add(step_day * num, 'days').diff(dayjs(d['m']), 'days');\n                                }\n                                let day = dayjs(d['m']).add(step, 'days').day(), date;\n                                if (day == 0) {\n                                    date = dayjs(d['m']).add(step, 'days').subtract(2, 'days').format('YYYY-MM-DD');\n                                } else if (day == 6) {\n                                    date = dayjs(d['m']).add(step, 'days').subtract(1, 'days').format('YYYY-MM-DD');\n                                } else {\n                                    date = dayjs(d['m']).add(step, 'days').format('YYYY-MM-DD');\n                                }\n                                d['m'] = date;\n                                d['v'] = genarate(date)[2];\n                                applyData.push(d);\n                            }\n                        }\n                    }\n                } else {\n                    let judgeDate = _this.judgeDate(data);\n                    if (judgeDate[0] && judgeDate[3]) {\n                        //日一样，且月差为等差数列，以月差为step（若那天为休息日，则向前取最近的工作日）\n                        if (direction == 'up' || direction == 'left') {\n                            data.reverse();\n                        }\n                        let step = dayjs(data[1]['m']).diff(dayjs(data[0]['m']), 'months');\n                        for (let i = 1; i <= len; i++) {\n                            let index = (i - 1) % data.length;\n                            let d = $.extend(true, {}, data[index]);\n                            let day = dayjs(data[data.length - 1]['m']).add(step * i, 'months').day(), date;\n                            if (day == 0) {\n                                date = dayjs(data[data.length - 1]['m']).add(step * i, 'months').subtract(2, 'days').format('YYYY-MM-DD');\n                            } else if (day == 6) {\n                                date = dayjs(data[data.length - 1]['m']).add(step * i, 'months').subtract(1, 'days').format('YYYY-MM-DD');\n                            } else {\n                                date = dayjs(data[data.length - 1]['m']).add(step * i, 'months').format('YYYY-MM-DD');\n                            }\n                            d['m'] = date;\n                            d['v'] = genarate(date)[2];\n                            applyData.push(d);\n                        }\n                    } else if (!judgeDate[0] && judgeDate[2]) {\n                        //日不一样，且日差为等差数列\n                        if (Math.abs(dayjs(data[1]['m']).diff(dayjs(data[0]['m']))) > 7) {\n                            //若日差大于7天，以一月为step（若那天是休息日，则向前取最近的工作日）\n                            let step_month;\n                            if (direction == 'down' || direction == 'right') {\n                                step_month = 1;\n                            } else if (direction == 'up' || direction == 'left') {\n                                step_month = -1;\n                                data.reverse();\n                            }\n                            let step;    //以数组第一个为对比\n                            //以数组第一个为对比\n                            for (let i = 1; i <= len; i++) {\n                                let index = (i - 1) % data.length;\n                                let d = $.extend(true, {}, data[index]);\n                                let num = Math.ceil(i / data.length);\n                                if (index == 0) {\n                                    step = dayjs(d['m']).add(step_month * num, 'months').diff(dayjs(d['m']), 'days');\n                                }\n                                let day = dayjs(d['m']).add(step, 'days').day(), date;\n                                if (day == 0) {\n                                    date = dayjs(d['m']).add(step, 'days').subtract(2, 'days').format('YYYY-MM-DD');\n                                } else if (day == 6) {\n                                    date = dayjs(d['m']).add(step, 'days').subtract(1, 'days').format('YYYY-MM-DD');\n                                } else {\n                                    date = dayjs(d['m']).add(step, 'days').format('YYYY-MM-DD');\n                                }\n                                d['m'] = date;\n                                d['v'] = genarate(date)[2];\n                                applyData.push(d);\n                            }\n                        } else {\n                            //若日差小于等于7天，以7天为step（若那天是休息日，则向前取最近的工作日）\n                            let step_day;\n                            if (direction == 'down' || direction == 'right') {\n                                step_day = 7;\n                            } else if (direction == 'up' || direction == 'left') {\n                                step_day = -7;\n                                data.reverse();\n                            }\n                            let step;    //以数组第一个为对比\n                            //以数组第一个为对比\n                            for (let i = 1; i <= len; i++) {\n                                let index = (i - 1) % data.length;\n                                let d = $.extend(true, {}, data[index]);\n                                let num = Math.ceil(i / data.length);\n                                if (index == 0) {\n                                    step = dayjs(d['m']).add(step_day * num, 'days').diff(dayjs(d['m']), 'days');\n                                }\n                                let day = dayjs(d['m']).add(step, 'days').day(), date;\n                                if (day == 0) {\n                                    date = dayjs(d['m']).add(step, 'days').subtract(2, 'days').format('YYYY-MM-DD');\n                                } else if (day == 6) {\n                                    date = dayjs(d['m']).add(step, 'days').subtract(1, 'days').format('YYYY-MM-DD');\n                                } else {\n                                    date = dayjs(d['m']).add(step, 'days').format('YYYY-MM-DD');\n                                }\n                                d['m'] = date;\n                                d['v'] = genarate(date)[2];\n                                applyData.push(d);\n                            }\n                        }\n                    } else {\n                        //日差不是等差数列，复制数据\n                        if (direction == 'up' || direction == 'left') {\n                            data.reverse();\n                        }\n                        applyData = _this.FillCopy(data, len);\n                    }\n                }\n            } else if (type == '6') {\n                //以月填充\n                if (data.length == 1) {\n                    //以一月为step\n                    let step;\n                    if (direction == 'down' || direction == 'right') {\n                        step = 1;\n                    } else if (direction == 'up' || direction == 'left') {\n                        step = -1;\n                    }\n                    applyData = _this.FillMonths(data, len, step);\n                } else if (data.length == 2) {\n                    if (dayjs(data[1]['m']).date() == dayjs(data[0]['m']).date() && dayjs(data[1]['m']).diff(dayjs(data[0]['m']), 'months') != 0) {\n                        //日一样，且月差大于一月，以月差为step\n                        if (direction == 'up' || direction == 'left') {\n                            data.reverse();\n                        }\n                        let step = dayjs(data[1]['m']).diff(dayjs(data[0]['m']), 'months');\n                        applyData = _this.FillMonths(data, len, step);\n                    } else {\n                        //以一月为step\n                        let step_month;\n                        if (direction == 'down' || direction == 'right') {\n                            step_month = 1;\n                        } else if (direction == 'up' || direction == 'left') {\n                            step_month = -1;\n                            data.reverse();\n                        }\n                        let step;    //以数组第一个为对比\n                        //以数组第一个为对比\n                        for (let i = 1; i <= len; i++) {\n                            let index = (i - 1) % data.length;\n                            let d = $.extend(true, {}, data[index]);\n                            let num = Math.ceil(i / data.length);\n                            if (index == 0) {\n                                step = dayjs(d['m']).add(step_month * num, 'months').diff(dayjs(d['m']), 'days');\n                            }\n                            let date = dayjs(d['m']).add(step, 'days').format('YYYY-MM-DD');\n                            d['m'] = date;\n                            d['v'] = genarate(date)[2];\n                            applyData.push(d);\n                        }\n                    }\n                } else {\n                    let judgeDate = _this.judgeDate(data);\n                    if (judgeDate[0] && judgeDate[3]) {\n                        //日一样，且月差为等差数列，以月差为step\n                        if (direction == 'up' || direction == 'left') {\n                            data.reverse();\n                        }\n                        let step = dayjs(data[1]['m']).diff(dayjs(data[0]['m']), 'months');\n                        applyData = _this.FillMonths(data, len, step);\n                    } else if (!judgeDate[0] && judgeDate[2]) {\n                        //日不一样，且日差为等差数列，以一月为step\n                        let step_month;\n                        if (direction == 'down' || direction == 'right') {\n                            step_month = 1;\n                        } else if (direction == 'up' || direction == 'left') {\n                            step_month = -1;\n                            data.reverse();\n                        }\n                        let step;    //以数组第一个为对比\n                        //以数组第一个为对比\n                        for (let i = 1; i <= len; i++) {\n                            let index = (i - 1) % data.length;\n                            let d = $.extend(true, {}, data[index]);\n                            let num = Math.ceil(i / data.length);\n                            if (index == 0) {\n                                step = dayjs(d['m']).add(step_month * num, 'months').diff(dayjs(d['m']), 'days');\n                            }\n                            let date = dayjs(d['m']).add(step, 'days').format('YYYY-MM-DD');\n                            d['m'] = date;\n                            d['v'] = genarate(date)[2];\n                            applyData.push(d);\n                        }\n                    } else {\n                        //日差不是等差数列，复制数据\n                        if (direction == 'up' || direction == 'left') {\n                            data.reverse();\n                        }\n                        applyData = _this.FillCopy(data, len);\n                    }\n                }\n            } else if (type == '7') {\n                //以年填充\n                if (data.length == 1) {\n                    //以一年为step\n                    let step;\n                    if (direction == 'down' || direction == 'right') {\n                        step = 1;\n                    } else if (direction == 'up' || direction == 'left') {\n                        step = -1;\n                    }\n                    applyData = _this.FillYears(data, len, step);\n                } else if (data.length == 2) {\n                    if (dayjs(data[1]['m']).date() == dayjs(data[0]['m']).date() && dayjs(data[1]['m']).month() == dayjs(data[0]['m']).month() && dayjs(data[1]['m']).diff(dayjs(data[0]['m']), 'years') != 0) {\n                        //日月一样，且年差大于一年，以年差为step\n                        if (direction == 'up' || direction == 'left') {\n                            data.reverse();\n                        }\n                        let step = dayjs(data[1]['m']).diff(dayjs(data[0]['m']), 'years');\n                        applyData = _this.FillYears(data, len, step);\n                    } else {\n                        //以一年为step\n                        let step_year;\n                        if (direction == 'down' || direction == 'right') {\n                            step_year = 1;\n                        } else if (direction == 'up' || direction == 'left') {\n                            step_year = -1;\n                            data.reverse();\n                        }\n                        let step;    //以数组第一个为对比\n                        //以数组第一个为对比\n                        for (let i = 1; i <= len; i++) {\n                            let index = (i - 1) % data.length;\n                            let d = $.extend(true, {}, data[index]);\n                            let num = Math.ceil(i / data.length);\n                            if (index == 0) {\n                                step = dayjs(d['m']).add(step_year * num, 'years').diff(dayjs(d['m']), 'days');\n                            }\n                            let date = dayjs(d['m']).add(step, 'days').format('YYYY-MM-DD');\n                            d['m'] = date;\n                            d['v'] = genarate(date)[2];\n                            applyData.push(d);\n                        }\n                    }\n                } else {\n                    let judgeDate = _this.judgeDate(data);\n                    if (judgeDate[0] && judgeDate[1] && judgeDate[4]) {\n                        //日月一样，且年差为等差数列，以年差为step\n                        if (direction == 'up' || direction == 'left') {\n                            data.reverse();\n                        }\n                        let step = dayjs(data[1]['m']).diff(dayjs(data[0]['m']), 'years');\n                        applyData = _this.FillYears(data, len, step);\n                    } else if (judgeDate[0] && judgeDate[3] || judgeDate[2]) {\n                        //日一样且月差为等差数列，或天差为等差数列，以一年为step\n                        let step_year;\n                        if (direction == 'down' || direction == 'right') {\n                            step_year = 1;\n                        } else if (direction == 'up' || direction == 'left') {\n                            step_year = -1;\n                            data.reverse();\n                        }\n                        let step;    //以数组第一个为对比\n                        //以数组第一个为对比\n                        for (let i = 1; i <= len; i++) {\n                            let index = (i - 1) % data.length;\n                            let d = $.extend(true, {}, data[index]);\n                            let num = Math.ceil(i / data.length);\n                            if (index == 0) {\n                                step = dayjs(d['m']).add(step_year * num, 'years').diff(dayjs(d['m']), 'days');\n                            }\n                            let date = dayjs(d['m']).add(step, 'days').format('YYYY-MM-DD');\n                            d['m'] = date;\n                            d['v'] = genarate(date)[2];\n                            applyData.push(d);\n                        }\n                    } else {\n                        //日差不是等差数列，复制数据\n                        if (direction == 'up' || direction == 'left') {\n                            data.reverse();\n                        }\n                        applyData = _this.FillCopy(data, len);\n                    }\n                }\n            } else if (type == '8') {\n                //以中文小写数字序列填充\n                if (data.length == 1) {\n                    let step;\n                    if (direction == 'down' || direction == 'right') {\n                        step = 1;\n                    } else if (direction == 'up' || direction == 'left') {\n                        step = -1;\n                    }\n                    applyData = _this.FillChnNumber(data, len, step);\n                } else {\n                    let dataNumArr = [];\n                    for (let i = 0; i < data.length; i++) {\n                        dataNumArr.push(_this.ChineseToNumber(data[i]['m']));\n                    }\n                    if (direction == 'up' || direction == 'left') {\n                        data.reverse();\n                        dataNumArr.reverse();\n                    }\n                    if (_this.isEqualDiff(dataNumArr)) {\n                        let step = dataNumArr[1] - dataNumArr[0];\n                        applyData = _this.FillChnNumber(data, len, step);\n                    } else {\n                        //不是等差数列，复制数据\n                        applyData = _this.FillCopy(data, len);\n                    }\n                }\n            }\n            return applyData;\n        },\n        FillCopy: function (data, len) {\n            let applyData = [];\n            for (let i = 1; i <= len; i++) {\n                let index = (i - 1) % data.length;\n                let d = $.extend(true, {}, data[index]);\n                applyData.push(d);\n            }\n            return applyData;\n        },\n        FillSeries: function (data, len, direction) {\n            let _this = this;\n            let applyData = [];\n            let dataNumArr = [];\n            for (let j = 0; j < data.length; j++) {\n                dataNumArr.push(Number(data[j]['v']));\n            }\n            if (data.length > 2 && _this.isEqualRatio(dataNumArr)) {\n                //等比数列\n                for (let i = 1; i <= len; i++) {\n                    let index = (i - 1) % data.length;\n                    let d = $.extend(true, {}, data[index]);\n                    let num;\n                    if (direction == 'down' || direction == 'right') {\n                        num = Number(data[data.length - 1]['v']) * Math.pow(Number(data[1]['v']) / Number(data[0]['v']), i);\n                    } else if (direction == 'up' || direction == 'left') {\n                        num = Number(data[0]['v']) / Math.pow(Number(data[1]['v']) / Number(data[0]['v']), i);\n                    }\n                    d['v'] = num;\n                    d['m'] = update(d['ct']['fa'], num);\n                    applyData.push(d);\n                }\n            } else {\n                //线性数列\n                let xArr = _this.getXArr(data.length);\n                for (let i = 1; i <= len; i++) {\n                    let index = (i - 1) % data.length;\n                    let d = $.extend(true, {}, data[index]);\n                    let y;\n                    if (direction == 'down' || direction == 'right') {\n                        y = _this.forecast(data.length + i, dataNumArr, xArr);\n                    } else if (direction == 'up' || direction == 'left') {\n                        y = _this.forecast(1 - i, dataNumArr, xArr);\n                    }\n                    d['v'] = y;\n                    d['m'] = update(d['ct']['fa'], y);\n                    applyData.push(d);\n                }\n            }\n            return applyData;\n        },\n        FillExtendNumber: function (data, len, step) {\n            let _this = this;\n            let applyData = [];\n            let reg = /0|([1-9]+[0-9]*)/g;\n            for (let i = 1; i <= len; i++) {\n                let index = (i - 1) % data.length;\n                let d = $.extend(true, {}, data[index]);\n                let last = data[data.length - 1]['m'];\n                let match = last.match(reg);\n                let lastTxt = match[match.length - 1];\n                let num = Math.abs(Number(lastTxt) + step * i);\n                let lastIndex = last.lastIndexOf(lastTxt);\n                let valueTxt = last.substr(0, lastIndex) + num.toString() + last.substr(lastIndex + lastTxt.length);\n                d['v'] = valueTxt;\n                d['m'] = valueTxt;\n                applyData.push(d);\n            }\n            return applyData;\n        },\n        FillOnlyFormat: function (data, len) {\n            let applyData = [];\n            for (let i = 1; i <= len; i++) {\n                let index = (i - 1) % data.length;\n                let d = $.extend(true, {}, data[index]);\n                delete d['f'];\n                delete d['m'];\n                delete d['v'];\n                applyData.push(d);\n            }\n            return applyData;\n        },\n        FillWithoutFormat: function (dataArr) {\n            let applyData = [];\n            for (let i = 0; i < dataArr.length; i++) {\n                let d = $.extend(true, {}, dataArr[i]);\n                let obj;\n                if (d['f'] == null) {\n                    obj = {\n                        'm': d['v'].toString(),\n                        'v': d['v']\n                    };\n                } else {\n                    obj = {\n                        'f': d['f'],\n                        'm': d['v'].toString(),\n                        'v': d['v']\n                    };\n                }\n                applyData.push(obj);\n            }\n            return applyData;\n        },\n        FillDays: function (data, len, step) {\n            let applyData = [];\n            for (let i = 1; i <= len; i++) {\n                let index = (i - 1) % data.length;\n                let d = $.extend(true, {}, data[index]);\n                let date = update('yyyy-MM-dd', d['v']);\n                date = dayjs(date).add(step * i, 'days').format('YYYY-MM-DD');\n                d['v'] = genarate(date)[2];\n                d['m'] = update(d['ct']['fa'], d['v']);\n                applyData.push(d);\n            }\n            return applyData;\n        },\n        FillMonths: function (data, len, step) {\n            let applyData = [];\n            for (let i = 1; i <= len; i++) {\n                let index = (i - 1) % data.length;\n                let d = $.extend(true, {}, data[index]);\n                let date = update('yyyy-MM-dd', d['v']);\n                date = dayjs(date).add(step * i, 'months').format('YYYY-MM-DD');\n                d['v'] = genarate(date)[2];\n                d['m'] = update(d['ct']['fa'], d['v']);\n                applyData.push(d);\n            }\n            return applyData;\n        },\n        FillYears: function (data, len, step) {\n            let applyData = [];\n            for (let i = 1; i <= len; i++) {\n                let index = (i - 1) % data.length;\n                let d = $.extend(true, {}, data[index]);\n                let date = update('yyyy-MM-dd', d['v']);\n                date = dayjs(date).add(step * i, 'years').format('YYYY-MM-DD');\n                d['v'] = genarate(date)[2];\n                d['m'] = update(d['ct']['fa'], d['v']);\n                applyData.push(d);\n            }\n            return applyData;\n        },\n        FillChnWeek: function (data, len, step) {\n            let _this = this;\n            let applyData = [];\n            for (let i = 1; i <= len; i++) {\n                let index = (i - 1) % data.length;\n                let d = $.extend(true, {}, data[index]);\n                let num;\n                if (data[data.length - 1]['m'] == '日') {\n                    num = 7 + step * i;\n                } else {\n                    num = _this.ChineseToNumber(data[data.length - 1]['m']) + step * i;\n                }\n                if (num < 0) {\n                    num = Math.ceil(Math.abs(num) / 7) * 7 + num;\n                }\n                let rsd = num % 7;\n                if (rsd == 0) {\n                    d['m'] = '日';\n                    d['v'] = '日';\n                } else if (rsd == 1) {\n                    d['m'] = '一';\n                    d['v'] = '一';\n                } else if (rsd == 2) {\n                    d['m'] = '二';\n                    d['v'] = '二';\n                } else if (rsd == 3) {\n                    d['m'] = '三';\n                    d['v'] = '三';\n                } else if (rsd == 4) {\n                    d['m'] = '四';\n                    d['v'] = '四';\n                } else if (rsd == 5) {\n                    d['m'] = '五';\n                    d['v'] = '五';\n                } else if (rsd == 6) {\n                    d['m'] = '六';\n                    d['v'] = '六';\n                }\n                applyData.push(d);\n            }\n            return applyData;\n        },\n        FillChnWeek2: function (data, len, step) {\n            let _this = this;\n            let applyData = [];\n            for (let i = 1; i <= len; i++) {\n                let index = (i - 1) % data.length;\n                let d = $.extend(true, {}, data[index]);\n                let num;\n                if (data[data.length - 1]['m'] == '周日') {\n                    num = 7 + step * i;\n                } else {\n                    let last = data[data.length - 1]['m'];\n                    let txt = last.substr(last.length - 1, 1);\n                    num = _this.ChineseToNumber(txt) + step * i;\n                }\n                if (num < 0) {\n                    num = Math.ceil(Math.abs(num) / 7) * 7 + num;\n                }\n                let rsd = num % 7;\n                if (rsd == 0) {\n                    d['m'] = '周日';\n                    d['v'] = '周日';\n                } else if (rsd == 1) {\n                    d['m'] = '周一';\n                    d['v'] = '周一';\n                } else if (rsd == 2) {\n                    d['m'] = '周二';\n                    d['v'] = '周二';\n                } else if (rsd == 3) {\n                    d['m'] = '周三';\n                    d['v'] = '周三';\n                } else if (rsd == 4) {\n                    d['m'] = '周四';\n                    d['v'] = '周四';\n                } else if (rsd == 5) {\n                    d['m'] = '周五';\n                    d['v'] = '周五';\n                } else if (rsd == 6) {\n                    d['m'] = '周六';\n                    d['v'] = '周六';\n                }\n                applyData.push(d);\n            }\n            return applyData;\n        },\n        FillChnWeek3: function (data, len, step) {\n            let _this = this;\n            let applyData = [];\n            for (let i = 1; i <= len; i++) {\n                let index = (i - 1) % data.length;\n                let d = $.extend(true, {}, data[index]);\n                let num;\n                if (data[data.length - 1]['m'] == '星期日') {\n                    num = 7 + step * i;\n                } else {\n                    let last = data[data.length - 1]['m'];\n                    let txt = last.substr(last.length - 1, 1);\n                    num = _this.ChineseToNumber(txt) + step * i;\n                }\n                if (num < 0) {\n                    num = Math.ceil(Math.abs(num) / 7) * 7 + num;\n                }\n                let rsd = num % 7;\n                if (rsd == 0) {\n                    d['m'] = '星期日';\n                    d['v'] = '星期日';\n                } else if (rsd == 1) {\n                    d['m'] = '星期一';\n                    d['v'] = '星期一';\n                } else if (rsd == 2) {\n                    d['m'] = '星期二';\n                    d['v'] = '星期二';\n                } else if (rsd == 3) {\n                    d['m'] = '星期三';\n                    d['v'] = '星期三';\n                } else if (rsd == 4) {\n                    d['m'] = '星期四';\n                    d['v'] = '星期四';\n                } else if (rsd == 5) {\n                    d['m'] = '星期五';\n                    d['v'] = '星期五';\n                } else if (rsd == 6) {\n                    d['m'] = '星期六';\n                    d['v'] = '星期六';\n                }\n                applyData.push(d);\n            }\n            return applyData;\n        },\n        FillChnNumber: function (data, len, step) {\n            let _this = this;\n            let applyData = [];\n            for (let i = 1; i <= len; i++) {\n                let index = (i - 1) % data.length;\n                let d = $.extend(true, {}, data[index]);\n                let num = _this.ChineseToNumber(data[data.length - 1]['m']) + step * i, txt;\n                if (num <= 0) {\n                    txt = '零';\n                } else {\n                    txt = _this.NumberToChinese(num);\n                }\n                d['v'] = txt;\n                d['m'] = txt.toString();\n                applyData.push(d);\n            }\n            return applyData;\n        },\n        isEqualDiff: function (arr) {\n            let diff = true;\n            let step = arr[1] - arr[0];\n            for (let i = 1; i < arr.length; i++) {\n                if (arr[i] - arr[i - 1] != step) {\n                    diff = false;\n                    break;\n                }\n            }\n            return diff;\n        },\n        isEqualRatio: function (arr) {\n            let ratio = true;\n            let step = arr[1] / arr[0];\n            for (let i = 1; i < arr.length; i++) {\n                if (arr[i] / arr[i - 1] != step) {\n                    ratio = false;\n                    break;\n                }\n            }\n            return ratio;\n        },\n        getXArr: function (len) {\n            let xArr = [];\n            for (let i = 1; i <= len; i++) {\n                xArr.push(i);\n            }\n            return xArr;\n        },\n        forecast: function (x, yArr, xArr) {\n            function getAverage(arr) {\n                let sum = 0;\n                for (let i = 0; i < arr.length; i++) {\n                    sum += arr[i];\n                }\n                return sum / arr.length;\n            }\n            let ax = getAverage(xArr);    //x数组 平均值\n            //x数组 平均值\n            let ay = getAverage(yArr);    //y数组 平均值\n            //y数组 平均值\n            let sum_d = 0, sum_n = 0;\n            for (let j = 0; j < xArr.length; j++) {\n                //分母和\n                sum_d += (xArr[j] - ax) * (yArr[j] - ay);    //分子和\n                //分子和\n                sum_n += (xArr[j] - ax) * (xArr[j] - ax);\n            }\n            let b;\n            if (sum_n == 0) {\n                b = 1;\n            } else {\n                b = sum_d / sum_n;\n            }\n            let a = ay - b * ax;\n            return Math.round((a + b * x) * 100000) / 100000;\n        },\n        judgeDate: function (data) {\n            let isSameDay = true, isSameMonth = true, isEqualDiffDays = true, isEqualDiffMonths = true, isEqualDiffYears = true;\n            let sameDay = dayjs(data[0]['m']).date(), sameMonth = dayjs(data[0]['m']).month();\n            let equalDiffDays = dayjs(data[1]['m']).diff(dayjs(data[0]['m']), 'days');\n            let equalDiffMonths = dayjs(data[1]['m']).diff(dayjs(data[0]['m']), 'months');\n            let equalDiffYears = dayjs(data[1]['m']).diff(dayjs(data[0]['m']), 'years');\n            for (let i = 1; i < data.length; i++) {\n                //日是否一样\n                if (dayjs(data[i]['m']).date() != sameDay) {\n                    isSameDay = false;\n                }    //月是否一样\n                //月是否一样\n                if (dayjs(data[i]['m']).month() != sameMonth) {\n                    isSameMonth = false;\n                }    //日差是否是 等差数列\n                //日差是否是 等差数列\n                if (dayjs(data[i]['m']).diff(dayjs(data[i - 1]['m']), 'days') != equalDiffDays) {\n                    isEqualDiffDays = false;\n                }    //月差是否是 等差数列\n                //月差是否是 等差数列\n                if (dayjs(data[i]['m']).diff(dayjs(data[i - 1]['m']), 'months') != equalDiffMonths) {\n                    isEqualDiffMonths = false;\n                }    //年差是否是 等差数列\n                //年差是否是 等差数列\n                if (dayjs(data[i]['m']).diff(dayjs(data[i - 1]['m']), 'years') != equalDiffYears) {\n                    isEqualDiffYears = false;\n                }\n            }\n            if (equalDiffDays == 0) {\n                isEqualDiffDays = false;\n            }\n            if (equalDiffMonths == 0) {\n                isEqualDiffMonths = false;\n            }\n            if (equalDiffYears == 0) {\n                isEqualDiffYears = false;\n            }\n            return [\n                isSameDay,\n                isSameMonth,\n                isEqualDiffDays,\n                isEqualDiffMonths,\n                isEqualDiffYears\n            ];\n        }\n    };\n    return luckysheetDropCell;\n});"]}