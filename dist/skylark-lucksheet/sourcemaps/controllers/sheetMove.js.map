{"version":3,"sources":["controllers/sheetMove.js"],"names":["define","m_util","formula","m_validate","m_count","cells","m_select","pivotTable","Store","getObjType","isRealNull","countfunc","selectHightlightShow","luckysheetMoveHighlightCell","postion","index","type","isScroll","row","row_pre","row_index","row_index_ed","col","col_pre","col_index","col_index_ed","datarowlen","flowdata","length","datacolumnlen","curR","curC","last","luckysheet_select_save","margeset","mergeborer","str_r","end_r","str_c","column","end_c","moveX","x","moveY","y","margeset2","visibledatarow","visibledatacolumn","pivotclick","fucntionboxshow","func_selectedrange","left","width","top","height","left_move","width_move","top_move","height_move","row_focus","column_focus","moveXY","$","css","show","rangeSetValue","scrollLeft","scrollTop","winH","winW","sleft","stop","clearTimeout","countfuncTimeout","saveParam","currentSheetIndex","luckysheetMoveHighlightRange","endR","endC","rf","cf","rowHasMerge","rfMerge","getRowMerge","rf_str","rf_end","colHasMerge","cfMerge","getColMerge","cf_str","cf_end","rowseleted","columnseleted","changeparam","mergeMoveMain","r","c1","c2","c","cell","r1","r2","rIndex","str","mc","config","end","rs","cIndex","cs","getNextIndex","direction","focusIndex","strIndex","endIndex","stNull","stValue","v","console","log","cellNull","i","push","luckysheetMoveEndCell","terminal","onlyvalue","startR","startC","p_startR","luckysheet_shiftpositon","p_startC","p_endR","p_endC","data","moveP","moveV","stvalue","p","p_pre","Math","abs","luckysheetMoveHighlightCell2","focusIsMerge","luckysheetMoveHighlightRange2"],"mappings":"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","file":"../../controllers/sheetMove.js","sourcesContent":["define([\n    '../utils/util',\n    './formula',\n    '../methods/validate',\n    '../methods/count',\n    \"../methods/cells\",\n    '../widgets/select',\n    './pivotTable',\n    '../store'\n], function (m_util, formula, m_validate, m_count,cells, m_select, pivotTable, Store) {\n    'use strict';\n    const {getObjType} = m_util;\n    const {isRealNull} = m_validate;\n    const {countfunc} = m_count;\n    const {selectHightlightShow} = m_select;\n    function luckysheetMoveEndCell(postion, type, isScroll, terminal, onlyvalue) {\n        if (isScroll == null) {\n            isScroll = true;\n        }\n        if (!postion) {\n            postion = 'down';\n        }\n        if (!type) {\n            type = 'cell';\n        }\n        if (onlyvalue == null) {\n            onlyvalue = false;\n        }\n        let last = Store.luckysheet_select_save[Store.luckysheet_select_save.length - 1];\n        let curR = last['row'] == null ? 0 : last['row'][0];\n        let curC = last['column'] == null ? 0 : last['column'][0];\n        let startR = last['row'] == null ? 0 : last['row'][0];\n        let startC = last['column'] == null ? 0 : last['column'][0];\n        let endR = last['row'] == null ? 0 : last['row'][1];\n        let endC = last['column'] == null ? 0 : last['column'][1];\n        formula.fucntionboxshow(curR, curC);\n        if (type == 'range') {\n            // need var\n            var p_startR = Store.luckysheet_shiftpositon['row'][0];\n            var p_startC = Store.luckysheet_shiftpositon['column'][0];\n            let p_endR = Store.luckysheet_shiftpositon['row'][1];\n            let p_endC = Store.luckysheet_shiftpositon['column'][1];\n            if (postion == 'down' || postion == 'up') {\n                if (p_endR < endR) {\n                    curR = last['row'] == null ? 0 : last['row'][1];\n                } else if (p_startR > startR) {\n                    curR = last['row'] == null ? 0 : last['row'][0];\n                } else if (p_endR == endR && p_startR == startR) {\n                    if (postion == 'down') {\n                        curR = last['row'] == null ? 0 : last['row'][1];\n                    } else {\n                        curR = last['row'] == null ? 0 : last['row'][0];\n                    }\n                }\n            } else if (postion == 'right' || postion == 'left') {\n                if (p_endC < endC) {\n                    curC = last['column'] == null ? 0 : last['column'][1];\n                } else if (p_startC > startC) {\n                    curC = last['column'] == null ? 0 : last['column'][0];\n                } else if (p_endC == endC && p_startC == startC) {\n                    if (postion == 'right') {\n                        curC = last['column'] == null ? 0 : last['column'][1];\n                    } else {\n                        curC = last['column'] == null ? 0 : last['column'][0];\n                    }\n                }\n            }\n        }\n        let datarowlen = Store.flowdata.length, datacolumnlen = Store.flowdata[0].length;\n        let data = Store.flowdata, moveP = '', moveV = 0;\n        if (postion == 'up') {\n            if (curR == 0) {\n                return;\n            } else {\n                let stvalue = [], p = null, i = 0, p_pre = null;\n                for (let c = startC; c <= endC; c++) {\n                    stvalue = [];\n                    i = 0;\n                    for (let r = curR - 1; r >= 0; r--) {\n                        let cell = data[r][c];\n                        if (getObjType(cell) == 'object' && isRealNull(cell.v)) {\n                            stvalue.push(false);\n                        } else if (isRealNull(cell)) {\n                            stvalue.push(false);\n                        } else {\n                            stvalue.push(true);\n                        }\n                        if (stvalue.length > 1) {\n                            if (stvalue[i] == true && stvalue[i - 1] == false) {\n                                p = r;\n                                break;\n                            } else if (stvalue[i] == false && stvalue[i - 1] == true) {\n                                p = r + 1;\n                                break;\n                            }\n                        }\n                        i++;\n                    }\n                    if (p == null) {\n                        p = 0;\n                    }\n                    if (p_pre == null || p < p_pre) {\n                        p_pre = p;\n                    }\n                }\n                moveP = 'down';\n                moveV = p_pre - curR;\n            }\n        } else if (postion == 'down') {\n            if (curR == datarowlen - 1) {\n                return;\n            } else {\n                let stvalue = [], p = null, i = 0, p_pre = null;\n                for (let c = startC; c <= endC; c++) {\n                    stvalue = [];\n                    i = 0;\n                    for (let r = curR + 1; r < data.length; r++) {\n                        let cell = data[r][c];\n                        if (getObjType(cell) == 'object' && isRealNull(cell.v)) {\n                            stvalue.push(false);\n                        } else if (isRealNull(cell)) {\n                            stvalue.push(false);\n                        } else {\n                            stvalue.push(true);\n                        }\n                        if (stvalue.length > 1) {\n                            if (stvalue[i] == true && stvalue[i - 1] == false) {\n                                p = r;\n                                break;\n                            } else if (stvalue[i] == false && stvalue[i - 1] == true) {\n                                p = r - 1;\n                                break;\n                            }\n                        }\n                        i++;\n                    }\n                    if (p == null) {\n                        p = data.length - 1;\n                    }\n                    if (p_pre == null || p > p_pre) {\n                        p_pre = p;\n                    }\n                }\n                moveP = 'down';\n                moveV = p_pre - curR;\n            }\n        } else if (postion == 'left') {\n            if (curC == 0) {\n                return;\n            } else {\n                let stvalue = [], p = null, i = 0, p_pre = null;\n                for (let r = startR; r <= endR; r++) {\n                    stvalue = [];\n                    i = 0;\n                    for (let c = curC - 1; c >= 0; c--) {\n                        let cell = data[r][c];\n                        if (getObjType(cell) == 'object' && isRealNull(cell.v)) {\n                            stvalue.push(false);\n                        } else if (isRealNull(cell)) {\n                            stvalue.push(false);\n                        } else {\n                            stvalue.push(true);\n                        }\n                        if (stvalue.length > 1) {\n                            if (stvalue[i] == true && stvalue[i - 1] == false) {\n                                p = c;\n                                break;\n                            } else if (stvalue[i] == false && stvalue[i - 1] == true) {\n                                p = c + 1;\n                                break;\n                            }\n                        }\n                        i++;\n                    }\n                    if (p == null) {\n                        p = 0;\n                    }\n                    if (p_pre == null || p < p_pre) {\n                        p_pre = p;\n                    }\n                }\n                moveP = 'right';\n                moveV = p_pre - curC;\n            }\n        } else if (postion == 'right') {\n            if (curC == datacolumnlen - 1) {\n                return;\n            } else {\n                let stvalue = [], p = null, i = 0, p_pre = null;\n                for (let r = startR; r <= endR; r++) {\n                    stvalue = [];\n                    i = 0;\n                    for (let c = curC + 1; c < data[0].length; c++) {\n                        let cell = data[r][c];\n                        if (getObjType(cell) == 'object' && isRealNull(cell.v)) {\n                            stvalue.push(false);\n                        } else if (isRealNull(cell)) {\n                            stvalue.push(false);\n                        } else {\n                            stvalue.push(true);\n                        }\n                        if (stvalue.length > 1) {\n                            if (stvalue[i] == true && stvalue[i - 1] == false) {\n                                p = c;\n                                break;\n                            } else if (stvalue[i] == false && stvalue[i - 1] == true) {\n                                p = c - 1;\n                                break;\n                            }\n                        }\n                        i++;\n                    }\n                    if (p == null) {\n                        p = data[0].length - 1;\n                    }\n                    if (p_pre == null || p > p_pre) {\n                        p_pre = p;\n                    }\n                }\n                moveP = 'right';\n                moveV = p_pre - curC;\n            }\n        }\n        if (type == 'range') {\n            if (postion == 'up') {\n                if (p_endR < endR) {\n                    if (moveV + curR < p_endR) {\n                        moveV = p_endR - curR;\n                    }\n                }\n            } else if (postion == 'down') {\n                if (p_startR > startR) {\n                    if (moveV + curR > p_startR) {\n                        moveV = p_startR - curR;\n                    }\n                }\n            } else if (postion == 'left') {\n                if (p_endC < endC) {\n                    if (moveV + curC < p_endC) {\n                        moveV = p_endC - curC;\n                    }\n                }\n            } else if (postion == 'right') {\n                if (p_startC > startC) {\n                    if (moveV + curC > p_startC) {\n                        moveV = p_startC - curC;\n                    }\n                }\n            }\n            if (terminal != null && Math.abs(moveV) > Math.abs(terminal)) {\n                moveV = terminal;\n            }\n        }\n        if (!onlyvalue) {\n            if (type == 'cell') {\n                luckysheetMoveHighlightCell(moveP, moveV, 'rangeOfSelect', isScroll);\n            } else if (type == 'range') {\n                luckysheetMoveHighlightRange(moveP, moveV, 'rangeOfSelect', isScroll);\n            }\n        } else {\n            return moveV;\n        }\n    }  \n    //方向键  调整单元格\n    function luckysheetMoveHighlightCell(postion, index, type, isScroll) {\n        if (isScroll == null) {\n            isScroll = true;\n        }\n        if (!postion) {\n            postion == 'down';\n        }\n        let datarowlen = Store.flowdata.length, datacolumnlen = Store.flowdata[0].length;\n        let row, row_pre, row_index, row_index_ed;\n        let col, col_pre, col_index, col_index_ed;\n        if (type == 'rangeOfSelect') {\n            let last = Store.luckysheet_select_save[Store.luckysheet_select_save.length - 1];\n            let curR;\n            if (last['row_focus'] == null) {\n                curR = last['row'][0];\n            } else {\n                curR = last['row_focus'];\n            }\n            let curC;\n            if (last['column_focus'] == null) {\n                curC = last['column'][0];\n            } else {\n                curC = last['column_focus'];\n            } \n            //focus单元格 是否是合并单元格\n            let margeset = cells.mergeborer(Store.flowdata, curR, curC);\n            if (!!margeset) {\n                let str_r = margeset.row[2];\n                let end_r = margeset.row[3];\n                let str_c = margeset.column[2];\n                let end_c = margeset.column[3];\n                if (index > 0) {\n                    if (postion == 'down') {\n                        curR = end_r;\n                        curC = str_c;\n                    } else if (postion == 'right') {\n                        curR = str_r;\n                        curC = end_c;\n                    }\n                } else {\n                    curR = str_r;\n                    curC = str_c;\n                }\n            }\n            let moveX = last['moveXY'] == null ? curR : last['moveXY'].x;\n            let moveY = last['moveXY'] == null ? curC : last['moveXY'].y;\n            if (postion == 'down') {\n                curR += index;\n                moveX = curR;\n            } else if (postion == 'right') {\n                curC += index;\n                moveY = curC;\n            }\n            if (curR >= datarowlen) {\n                curR = datarowlen - 1;\n                moveX = curR;\n            }\n            if (curR < 0) {\n                curR = 0;\n                moveX = curR;\n            }\n            if (curC >= datacolumnlen) {\n                curC = datacolumnlen - 1;\n                moveY = curC;\n            }\n            if (curC < 0) {\n                curC = 0;\n                moveY = curC;\n            }    //移动的下一个单元格是否是合并的单元格\n            //移动的下一个单元格是否是合并的单元格\n            let margeset2 = cells.mergeborer(Store.flowdata, curR, curC);\n            if (!!margeset2) {\n                row = margeset2.row[1];\n                row_pre = margeset2.row[0];\n                row_index = margeset2.row[2];\n                row_index_ed = margeset2.row[3];\n                col = margeset2.column[1];\n                col_pre = margeset2.column[0];\n                col_index = margeset2.column[2];\n                col_index_ed = margeset2.column[3];\n            } else {\n                row = Store.visibledatarow[moveX];\n                row_pre = moveX - 1 == -1 ? 0 : Store.visibledatarow[moveX - 1];\n                row_index = moveX;\n                row_index_ed = moveX;\n                col = Store.visibledatacolumn[moveY];\n                col_pre = moveY - 1 == -1 ? 0 : Store.visibledatacolumn[moveY - 1];\n                col_index = moveY;\n                col_index_ed = moveY;\n            }\n            last['row'] = [\n                row_index,\n                row_index_ed\n            ];\n            last['column'] = [\n                col_index,\n                col_index_ed\n            ];\n            last['row_focus'] = row_index;\n            last['column_focus'] = col_index;\n            last['moveXY'] = {\n                'x': moveX,\n                'y': moveY\n            };\n            selectHightlightShow();\n            pivotTable.pivotclick(row_index, col_index); //TODO:lwf\n            formula.fucntionboxshow(row_index, col_index); //TODO:lwf\n        } else if (type == 'rangeOfFormula') {\n            let last = formula.func_selectedrange;\n            let curR;\n            if (last['row_focus'] == null) {\n                curR = last['row'][0];\n            } else {\n                curR = last['row_focus'];\n            }\n            let curC;\n            if (last['column_focus'] == null) {\n                curC = last['column'][0];\n            } else {\n                curC = last['column_focus'];\n            }    //focus单元格 是否是合并单元格\n            //focus单元格 是否是合并单元格\n            let margeset = cells.mergeborer(Store.flowdata, curR, curC);\n            if (!!margeset) {\n                let str_r = margeset.row[2];\n                let end_r = margeset.row[3];\n                let str_c = margeset.column[2];\n                let end_c = margeset.column[3];\n                if (index > 0) {\n                    if (postion == 'down') {\n                        curR = end_r;\n                        curC = str_c;\n                    } else if (postion == 'right') {\n                        curR = str_r;\n                        curC = end_c;\n                    }\n                } else {\n                    curR = str_r;\n                    curC = str_c;\n                }\n            }\n            let moveX = last['moveXY'] == null ? curR : last['moveXY'].x;\n            let moveY = last['moveXY'] == null ? curC : last['moveXY'].y;\n            if (postion == 'down') {\n                curR += index;\n                moveX = curR;\n            } else if (postion == 'right') {\n                curC += index;\n                moveY = curC;\n            }\n            if (curR >= datarowlen) {\n                curR = datarowlen - 1;\n                moveX = curR;\n            }\n            if (curR < 0) {\n                curR = 0;\n                moveX = curR;\n            }\n            if (curC >= datacolumnlen) {\n                curC = datacolumnlen - 1;\n                moveY = curC;\n            }\n            if (curC < 0) {\n                curC = 0;\n                moveY = curC;\n            }    //移动的下一个单元格是否是合并的单元格\n            //移动的下一个单元格是否是合并的单元格\n            let margeset2 = cells.mergeborer(Store.flowdata, curR, curC);\n            if (!!margeset2) {\n                row = margeset2.row[1];\n                row_pre = margeset2.row[0];\n                row_index = margeset2.row[2];\n                row_index_ed = margeset2.row[3];\n                col = margeset2.column[1];\n                col_pre = margeset2.column[0];\n                col_index = margeset2.column[2];\n                col_index_ed = margeset2.column[3];\n            } else {\n                row = Store.visibledatarow[moveX];\n                row_pre = moveX - 1 == -1 ? 0 : Store.visibledatarow[moveX - 1];\n                row_index = moveX;\n                row_index_ed = moveX;\n                col = Store.visibledatacolumn[moveY];\n                col_pre = moveY - 1 == -1 ? 0 : Store.visibledatacolumn[moveY - 1];\n                col_index = moveY;\n                col_index_ed = moveY;\n            }\n            formula.func_selectedrange = {\n                'left': col_pre,\n                'width': col - col_pre - 1,\n                'top': row_pre,\n                'height': row - row_pre - 1,\n                'left_move': col_pre,\n                'width_move': col - col_pre - 1,\n                'top_move': row_pre,\n                'height_move': row - row_pre - 1,\n                'row': [\n                    row_index,\n                    row_index_ed\n                ],\n                'column': [\n                    col_index,\n                    col_index_ed\n                ],\n                'row_focus': row_index,\n                'column_focus': col_index,\n                'moveXY': {\n                    'x': moveX,\n                    'y': moveY\n                }\n            };\n            $('#luckysheet-formula-functionrange-select').css({\n                'left': col_pre,\n                'width': col - col_pre - 1,\n                'top': row_pre,\n                'height': row - row_pre - 1\n            }).show();\n            formula.rangeSetValue({\n                'row': [\n                    row_index,\n                    row_index_ed\n                ],\n                'column': [\n                    col_index,\n                    col_index_ed\n                ]\n            });\n        }\n        let scrollLeft = $('#luckysheet-cell-main').scrollLeft();\n        let scrollTop = $('#luckysheet-cell-main').scrollTop();\n        let winH = $('#luckysheet-cell-main').height(), winW = $('#luckysheet-cell-main').width();\n        let sleft = 0, stop = 0;\n        if (col - scrollLeft - winW + 20 > 0) {\n            sleft = col - winW + 20;\n            if (isScroll) {\n                $('#luckysheet-scrollbar-x').scrollLeft(sleft);\n            }\n        } else if (col_pre - scrollLeft - 20 < 0) {\n            sleft = col_pre - 20;\n            if (isScroll) {\n                $('#luckysheet-scrollbar-x').scrollLeft(sleft);\n            }\n        }\n        if (row - scrollTop - winH + 20 > 0) {\n            stop = row - winH + 20;\n            if (isScroll) {\n                $('#luckysheet-scrollbar-y').scrollTop(stop);\n            }\n        } else if (row_pre - scrollTop - 20 < 0) {\n            stop = row_pre - 20;\n            if (isScroll) {\n                $('#luckysheet-scrollbar-y').scrollTop(stop);\n            }\n        }\n        clearTimeout(Store.countfuncTimeout);\n        countfunc();    // 移动单元格通知后台\n        // 移动单元格通知后台\n        Store.saveParam('mv', Store.currentSheetIndex, Store.luckysheet_select_save);\n    }    //ctrl + 方向键  调整单元格\n    //ctrl + 方向键  调整单元格\n    function luckysheetMoveHighlightCell2(postion, type, isScroll) {\n        if (!isScroll) {\n            isScroll = true;\n        }\n        let row, row_pre;\n        let col, col_pre;\n        if (type == 'rangeOfSelect') {\n            let last = Store.luckysheet_select_save[Store.luckysheet_select_save.length - 1];\n            let rf = last['row_focus'], cf = last['column_focus'];\n            let focusIsMerge = false, mc = {};\n            if (Store.config['merge'] != null && rf + '_' + cf in Store.config['merge']) {\n                focusIsMerge = true;\n                mc = Store.config['merge'][rf + '_' + cf];\n            }\n            if (postion == 'down') {\n                if (rf == Store.flowdata.length - 1) {\n                    return;\n                }\n                if (focusIsMerge) {\n                    rf = getNextIndex('down', cf, mc.r + mc.rs - 1, Store.flowdata.length - 1);\n                } else {\n                    rf = getNextIndex('down', cf, rf, Store.flowdata.length - 1);\n                }\n            } else if (postion == 'up') {\n                if (rf == 0) {\n                    return;\n                }\n                if (focusIsMerge) {\n                    rf = getNextIndex('up', cf, 0, mc.r);\n                } else {\n                    rf = getNextIndex('up', cf, 0, rf);\n                }\n            } else if (postion == 'right') {\n                if (cf == Store.flowdata[0].length - 1) {\n                    return;\n                }\n                if (focusIsMerge) {\n                    cf = getNextIndex('right', rf, mc.c + mc.cs - 1, Store.flowdata[0].length - 1);\n                } else {\n                    cf = getNextIndex('right', rf, cf, Store.flowdata[0].length - 1);\n                }\n            } else if (postion == 'left') {\n                if (cf == 0) {\n                    return;\n                }\n                if (focusIsMerge) {\n                    cf = getNextIndex('left', rf, 0, mc.c);\n                } else {\n                    cf = getNextIndex('left', rf, 0, cf);\n                }\n            }\n            let rowseleted = [\n                rf,\n                rf\n            ];\n            let columnseleted = [\n                cf,\n                cf\n            ];\n            row = Store.visibledatarow[rf];\n            row_pre = rf - 1 == -1 ? 0 : Store.visibledatarow[rf - 1];\n            col = Store.visibledatacolumn[cf];\n            col_pre = cf - 1 == -1 ? 0 : Store.visibledatacolumn[cf - 1];\n            let changeparam = cells.mergeMoveMain(columnseleted, rowseleted, last, row_pre, row - row_pre - 1, col_pre, col - col_pre - 1);\n            if (changeparam != null) {\n                columnseleted = changeparam[0];\n                rowseleted = changeparam[1];    // top = changeparam[2];\n                                                // height = changeparam[3];\n                                                // left = changeparam[4];\n                                                // width = changeparam[5];\n            }\n            // top = changeparam[2];\n            // height = changeparam[3];\n            // left = changeparam[4];\n            // width = changeparam[5];\n            Store.luckysheet_select_save = [{\n                    'row': rowseleted,\n                    'column': columnseleted\n                }];\n            selectHightlightShow();\n            pivotTable.pivotclick(rf, cf);\n            formula.fucntionboxshow(rf, cf);\n        } else if (type == 'rangeOfFormula') {\n            let last = formula.func_selectedrange;\n            let rf = last['row_focus'], cf = last['column_focus'];\n            let focusIsMerge = false, mc = {};\n            if (Store.config['merge'] != null && rf + '_' + cf in Store.config['merge']) {\n                focusIsMerge = true;\n                mc = Store.config['merge'][rf + '_' + cf];\n            }\n            if (postion == 'down') {\n                if (rf == Store.flowdata.length - 1) {\n                    return;\n                }\n                if (focusIsMerge) {\n                    rf = getNextIndex('down', cf, mc.r + mc.rs - 1, Store.flowdata.length - 1);\n                } else {\n                    rf = getNextIndex('down', cf, rf, Store.flowdata.length - 1);\n                }\n            } else if (postion == 'up') {\n                if (rf == 0) {\n                    return;\n                }\n                if (focusIsMerge) {\n                    rf = getNextIndex('up', cf, 0, mc.r);\n                } else {\n                    rf = getNextIndex('up', cf, 0, rf);\n                }\n            } else if (postion == 'right') {\n                if (cf == Store.flowdata[0].length - 1) {\n                    return;\n                }\n                if (focusIsMerge) {\n                    cf = getNextIndex('right', rf, mc.c + mc.cs - 1, Store.flowdata[0].length - 1);\n                } else {\n                    cf = getNextIndex('right', rf, cf, Store.flowdata[0].length - 1);\n                }\n            } else if (postion == 'left') {\n                if (cf == 0) {\n                    return;\n                }\n                if (focusIsMerge) {\n                    cf = getNextIndex('left', rf, 0, mc.c);\n                } else {\n                    cf = getNextIndex('left', rf, 0, cf);\n                }\n            }\n            let rowseleted = [\n                rf,\n                rf\n            ];\n            let columnseleted = [\n                cf,\n                cf\n            ];\n            row = Store.visibledatarow[rf];\n            row_pre = rf - 1 == -1 ? 0 : Store.visibledatarow[rf - 1];\n            col = Store.visibledatacolumn[cf];\n            col_pre = cf - 1 == -1 ? 0 : Store.visibledatacolumn[cf - 1];\n            let top = row_pre, height = row - row_pre - 1;\n            let left = col_pre, width = col - col_pre - 1;\n            let changeparam = cells.mergeMoveMain(columnseleted, rowseleted, last, top, height, left, width);\n            if (changeparam != null) {\n                columnseleted = changeparam[0];\n                rowseleted = changeparam[1];\n                top = changeparam[2];\n                height = changeparam[3];\n                left = changeparam[4];\n                width = changeparam[5];\n            }\n            formula.func_selectedrange = {\n                'left': left,\n                'width': width,\n                'top': top,\n                'height': height,\n                'left_move': left,\n                'width_move': width,\n                'top_move': top,\n                'height_move': height,\n                'row': rowseleted,\n                'column': columnseleted,\n                'row_focus': rf,\n                'column_focus': cf\n            };\n            $('#luckysheet-formula-functionrange-select').css({\n                'left': left,\n                'width': width,\n                'top': top,\n                'height': height\n            }).show();\n            formula.rangeSetValue({\n                'row': rowseleted,\n                'column': columnseleted\n            });\n        }\n        let scrollLeft = $('#luckysheet-cell-main').scrollLeft();\n        let scrollTop = $('#luckysheet-cell-main').scrollTop();\n        let winH = $('#luckysheet-cell-main').height(), winW = $('#luckysheet-cell-main').width();\n        let sleft = 0, stop = 0;\n        if (col - scrollLeft - winW + 20 > 0) {\n            sleft = col - winW + 20;\n            if (isScroll) {\n                $('#luckysheet-scrollbar-x').scrollLeft(sleft);\n            }\n        } else if (col_pre - scrollLeft - 20 < 0) {\n            sleft = col_pre - 20;\n            if (isScroll) {\n                $('#luckysheet-scrollbar-x').scrollLeft(sleft);\n            }\n        }\n        if (row - scrollTop - winH + 20 > 0) {\n            stop = row - winH + 20;\n            if (isScroll) {\n                $('#luckysheet-scrollbar-y').scrollTop(stop);\n            }\n        } else if (row_pre - scrollTop - 20 < 0) {\n            stop = row_pre - 20;\n            if (isScroll) {\n                $('#luckysheet-scrollbar-y').scrollTop(stop);\n            }\n        }\n        clearTimeout(Store.countfuncTimeout);\n        countfunc();\n    }    //shift + 方向键  调整选区\n    //shift + 方向键  调整选区\n    function luckysheetMoveHighlightRange(postion, index, type, isScroll) {\n        if (isScroll == null) {\n            isScroll = true;\n        }\n        if (!postion) {\n            postion == 'down';\n        }\n        let row, row_pre;\n        let col, col_pre;\n        if (type == 'rangeOfSelect') {\n            let last = Store.luckysheet_select_save[Store.luckysheet_select_save.length - 1];\n            let curR = last['row'][0], endR = last['row'][1];\n            let curC = last['column'][0], endC = last['column'][1];\n            let rf = last['row_focus'], cf = last['column_focus'];\n            let datarowlen = Store.flowdata.length, datacolumnlen = Store.flowdata[0].length;\n            if (postion == 'down') {\n                //选区上下变动\n                if (rowHasMerge(rf, curC, endC)) {\n                    //focus单元格所在行有合并单元格\n                    let rfMerge = getRowMerge(rf, curC, endC);\n                    let rf_str = rfMerge[0], rf_end = rfMerge[1];\n                    if (rf_str > curR && rf_end == endR) {\n                        if (index > 0 && rowHasMerge(curR, curC, endC)) {\n                            curR = getRowMerge(curR, curC, endC)[1];\n                        }\n                        curR += index;\n                    } else if (rf_end < endR && rf_str == curR) {\n                        if (index < 0 && rowHasMerge(endR, curC, endC)) {\n                            endR = getRowMerge(endR, curC, endC)[0];\n                        }\n                        endR += index;\n                    } else {\n                        if (index > 0) {\n                            endR += index;\n                        } else {\n                            curR += index;\n                        }\n                    }\n                } else {\n                    if (rf > curR && rf == endR) {\n                        if (index > 0 && rowHasMerge(curR, curC, endC)) {\n                            curR = getRowMerge(curR, curC, endC)[1];\n                        }\n                        curR += index;\n                    } else if (rf < endR && rf == curR) {\n                        if (index < 0 && rowHasMerge(endR, curC, endC)) {\n                            endR = getRowMerge(endR, curC, endC)[0];\n                        }\n                        endR += index;\n                    } else if (rf == curR && rf == endR) {\n                        if (index > 0) {\n                            endR += index;\n                        } else {\n                            curR += index;\n                        }\n                    }\n                }\n                if (endR >= datarowlen) {\n                    endR = datarowlen - 1;\n                }\n                if (endR < 0) {\n                    endR = 0;\n                }\n                if (curR >= datarowlen) {\n                    curR = datarowlen - 1;\n                }\n                if (curR < 0) {\n                    curR = 0;\n                }\n            } else {\n                if (colHasMerge(cf, curR, endR)) {\n                    //focus单元格所在列有合并单元格\n                    let cfMerge = getColMerge(cf, curR, endR);\n                    let cf_str = cfMerge[0], cf_end = cfMerge[1];\n                    if (cf_str > curC && cf_end == endC) {\n                        if (index > 0 && colHasMerge(curC, curR, endR)) {\n                            curC = getColMerge(curC, curR, endR)[1];\n                        }\n                        curC += index;\n                    } else if (cf_end < endC && cf_str == curC) {\n                        if (index < 0 && colHasMerge(endC, curR, endR)) {\n                            endC = getColMerge(endC, curR, endR)[0];\n                        }\n                        endC += index;\n                    } else {\n                        if (index > 0) {\n                            endC += index;\n                        } else {\n                            curC += index;\n                        }\n                    }\n                } else {\n                    if (cf > curC && cf == endC) {\n                        if (index > 0 && colHasMerge(curC, curR, endR)) {\n                            curC = getColMerge(curC, curR, endR)[1];\n                        }\n                        curC += index;\n                    } else if (cf < endC && cf == curC) {\n                        if (index < 0 && colHasMerge(endC, curR, endR)) {\n                            endC = getColMerge(endC, curR, endR)[0];\n                        }\n                        endC += index;\n                    } else if (cf == curC && cf == endC) {\n                        if (index > 0) {\n                            endC += index;\n                        } else {\n                            curC += index;\n                        }\n                    }\n                }\n                if (endC >= datacolumnlen) {\n                    endC = datacolumnlen - 1;\n                }\n                if (endC < 0) {\n                    endC = 0;\n                }\n                if (curC >= datacolumnlen) {\n                    curC = datacolumnlen - 1;\n                }\n                if (curC < 0) {\n                    curC = 0;\n                }\n            }\n            let rowseleted = [\n                curR,\n                endR\n            ];\n            let columnseleted = [\n                curC,\n                endC\n            ];\n            row = Store.visibledatarow[endR];\n            row_pre = curR - 1 == -1 ? 0 : Store.visibledatarow[curR - 1];\n            col = Store.visibledatacolumn[endC];\n            col_pre = curC - 1 == -1 ? 0 : Store.visibledatacolumn[curC - 1];\n            let changeparam = cells.mergeMoveMain(columnseleted, rowseleted, last, row_pre, row - row_pre - 1, col_pre, col - col_pre - 1);\n            if (changeparam != null) {\n                columnseleted = changeparam[0];\n                rowseleted = changeparam[1];    // top = changeparam[2];\n                                                // height = changeparam[3];\n                                                // left = changeparam[4];\n                                                // width = changeparam[5];\n            }\n            // top = changeparam[2];\n            // height = changeparam[3];\n            // left = changeparam[4];\n            // width = changeparam[5];\n            last['row'] = rowseleted;\n            last['column'] = columnseleted;\n            selectHightlightShow();\n        } else if (type == 'rangeOfFormula') {\n            let last = formula.func_selectedrange;\n            let curR = last['row'][0], endR = last['row'][1];\n            let curC = last['column'][0], endC = last['column'][1];\n            let rf = last['row_focus'], cf = last['column_focus'];\n            let datarowlen = Store.flowdata.length, datacolumnlen = Store.flowdata[0].length;\n            if (postion == 'down') {\n                //选区上下变动\n                if (rowHasMerge(rf, curC, endC)) {\n                    //focus单元格所在行有合并单元格\n                    let rfMerge = getRowMerge(rf, curC, endC);\n                    let rf_str = rfMerge[0], rf_end = rfMerge[1];\n                    if (rf_str > curR && rf_end == endR) {\n                        if (index > 0 && rowHasMerge(curR, curC, endC)) {\n                            curR = getRowMerge(curR, curC, endC)[1];\n                        }\n                        curR += index;\n                    } else if (rf_end < endR && rf_str == curR) {\n                        if (index < 0 && rowHasMerge(endR, curC, endC)) {\n                            endR = getRowMerge(endR, curC, endC)[0];\n                        }\n                        endR += index;\n                    } else {\n                        if (index > 0) {\n                            endR += index;\n                        } else {\n                            curR += index;\n                        }\n                    }\n                } else {\n                    if (rf > curR && rf == endR) {\n                        if (index > 0 && rowHasMerge(curR, curC, endC)) {\n                            curR = getRowMerge(curR, curC, endC)[1];\n                        }\n                        curR += index;\n                    } else if (rf < endR && rf == curR) {\n                        if (index < 0 && rowHasMerge(endR, curC, endC)) {\n                            endR = getRowMerge(endR, curC, endC)[0];\n                        }\n                        endR += index;\n                    } else if (rf == curR && rf == endR) {\n                        if (index > 0) {\n                            endR += index;\n                        } else {\n                            curR += index;\n                        }\n                    }\n                }\n                if (endR >= datarowlen) {\n                    endR = datarowlen - 1;\n                }\n                if (endR < 0) {\n                    endR = 0;\n                }\n                if (curR >= datarowlen) {\n                    curR = datarowlen - 1;\n                }\n                if (curR < 0) {\n                    curR = 0;\n                }\n            } else {\n                if (colHasMerge(cf, curR, endR)) {\n                    //focus单元格所在列有合并单元格\n                    let cfMerge = getColMerge(cf, curR, endR);\n                    let cf_str = cfMerge[0], cf_end = cfMerge[1];\n                    if (cf_str > curC && cf_end == endC) {\n                        if (index > 0 && colHasMerge(curC, curR, endR)) {\n                            curC = getColMerge(curC, curR, endR)[1];\n                        }\n                        curC += index;\n                    } else if (cf_end < endC && cf_str == curC) {\n                        if (index < 0 && colHasMerge(endC, curR, endR)) {\n                            endC = getColMerge(endC, curR, endR)[0];\n                        }\n                        endC += index;\n                    } else {\n                        if (index > 0) {\n                            endC += index;\n                        } else {\n                            curC += index;\n                        }\n                    }\n                } else {\n                    if (cf > curC && cf == endC) {\n                        if (index > 0 && colHasMerge(curC, curR, endR)) {\n                            curC = getColMerge(curC, curR, endR)[1];\n                        }\n                        curC += index;\n                    } else if (cf < endC && cf == curC) {\n                        if (index < 0 && colHasMerge(endC, curR, endR)) {\n                            endC = getColMerge(endC, curR, endR)[0];\n                        }\n                        endC += index;\n                    } else if (cf == curC && cf == endC) {\n                        if (index > 0) {\n                            endC += index;\n                        } else {\n                            curC += index;\n                        }\n                    }\n                }\n                if (endC >= datacolumnlen) {\n                    endC = datacolumnlen - 1;\n                }\n                if (endC < 0) {\n                    endC = 0;\n                }\n                if (curC >= datacolumnlen) {\n                    curC = datacolumnlen - 1;\n                }\n                if (curC < 0) {\n                    curC = 0;\n                }\n            }\n            let rowseleted = [\n                curR,\n                endR\n            ];\n            let columnseleted = [\n                curC,\n                endC\n            ];\n            row = Store.visibledatarow[endR];\n            row_pre = curR - 1 == -1 ? 0 : Store.visibledatarow[curR - 1];\n            col = Store.visibledatacolumn[endC];\n            col_pre = curC - 1 == -1 ? 0 : Store.visibledatacolumn[curC - 1];\n            let top = row_pre, height = row - row_pre - 1;\n            let left = col_pre, width = col - col_pre - 1;\n            let changeparam = cells.mergeMoveMain(columnseleted, rowseleted, last, top, height, left, width);\n            if (changeparam != null) {\n                columnseleted = changeparam[0];\n                rowseleted = changeparam[1];\n                top = changeparam[2];\n                height = changeparam[3];\n                left = changeparam[4];\n                width = changeparam[5];\n            }\n            formula.func_selectedrange = {\n                'left': left,\n                'width': width,\n                'top': top,\n                'height': height,\n                'left_move': left,\n                'width_move': width,\n                'top_move': top,\n                'height_move': height,\n                'row': rowseleted,\n                'column': columnseleted,\n                'row_focus': rf,\n                'column_focus': cf\n            };\n            $('#luckysheet-formula-functionrange-select').css({\n                'left': left,\n                'width': width,\n                'top': top,\n                'height': height\n            }).show();\n            formula.rangeSetValue({\n                'row': rowseleted,\n                'column': columnseleted\n            });\n        }\n        let scrollLeft = $('#luckysheet-cell-main').scrollLeft();\n        let scrollTop = $('#luckysheet-cell-main').scrollTop();\n        let winH = $('#luckysheet-cell-main').height(), winW = $('#luckysheet-cell-main').width();\n        let sleft = 0, stop = 0;\n        if (col - scrollLeft - winW + 20 > 0) {\n            sleft = col - winW + 20;\n            if (isScroll) {\n                $('#luckysheet-scrollbar-x').scrollLeft(sleft);\n            }\n        } else if (col_pre - scrollLeft - 20 < 0) {\n            sleft = col_pre - 20;\n            if (isScroll) {\n                $('#luckysheet-scrollbar-x').scrollLeft(sleft);\n            }\n        }\n        if (row - scrollTop - winH + 20 > 0) {\n            stop = row - winH + 20;\n            if (isScroll) {\n                $('#luckysheet-scrollbar-y').scrollTop(stop);\n            }\n        } else if (row_pre - scrollTop - 20 < 0) {\n            stop = row_pre - 20;\n            if (isScroll) {\n                $('#luckysheet-scrollbar-y').scrollTop(stop);\n            }\n        }\n        clearTimeout(Store.countfuncTimeout);\n        countfunc();\n    }    //ctrl + shift + 方向键  调整选区\n    //ctrl + shift + 方向键  调整选区\n    function luckysheetMoveHighlightRange2(postion, type, isScroll) {\n        if (!isScroll) {\n            isScroll = true;\n        }\n        let row, row_pre;\n        let col, col_pre;\n        if (type == 'rangeOfSelect') {\n            let last = Store.luckysheet_select_save[Store.luckysheet_select_save.length - 1];\n            let rf = last['row_focus'], cf = last['column_focus'];\n            let r1 = last['row'][0], r2 = last['row'][1];\n            let c1 = last['column'][0], c2 = last['column'][1];\n            if (postion == 'down') {\n                if (r2 == Store.flowdata.length - 1) {\n                    return;\n                }\n                if (rowHasMerge(rf, c1, c2)) {\n                    //focus所在行有合并单元格\n                    let rfMerge = getRowMerge(rf, c1, c2);\n                    let rf_str = rfMerge[0], rf_end = rfMerge[1];\n                    if (rf_str > r1 && rf_end == r2) {\n                        r1 = getNextIndex('down', cf, r1, r2);\n                    } else {\n                        r2 = getNextIndex('down', cf, r2, Store.flowdata.length - 1);\n                    }\n                } else {\n                    if (rf > r1 && rf == r2) {\n                        r1 = getNextIndex('down', cf, r1, r2);\n                    } else {\n                        r2 = getNextIndex('down', cf, r2, Store.flowdata.length - 1);\n                    }\n                }\n            } else if (postion == 'up') {\n                if (r1 == 0) {\n                    return;\n                }\n                if (rowHasMerge(rf, c1, c2)) {\n                    //focus所在行有合并单元格\n                    let rfMerge = getRowMerge(rf, c1, c2);\n                    let rf_str = rfMerge[0], rf_end = rfMerge[1];\n                    if (rf_end < r2 && rf_str == r1) {\n                        r2 = getNextIndex('up', cf, r1, r2);\n                    } else {\n                        r1 = getNextIndex('up', cf, 0, r1);\n                    }\n                } else {\n                    if (rf < r2 && rf == r1) {\n                        r2 = getNextIndex('up', cf, r1, r2);\n                    } else {\n                        r1 = getNextIndex('up', cf, 0, r1);\n                    }\n                }\n            } else if (postion == 'right') {\n                if (c2 == Store.flowdata[0].length - 1) {\n                    return;\n                }\n                if (colHasMerge(cf, r1, r2)) {\n                    //focus所在行有合并单元格\n                    let cfMerge = getColMerge(cf, r1, r2);\n                    let cf_str = cfMerge[0], cf_end = cfMerge[1];\n                    if (cf_str > c1 && cf_end == c2) {\n                        c1 = getNextIndex('right', rf, c1, c2);\n                    } else {\n                        c2 = getNextIndex('right', rf, c2, Store.flowdata[0].length - 1);\n                    }\n                } else {\n                    if (cf > c1 && cf == c2) {\n                        c1 = getNextIndex('right', rf, c1, c2);\n                    } else {\n                        c2 = getNextIndex('right', rf, c2, Store.flowdata[0].length - 1);\n                    }\n                }\n            } else if (postion == 'left') {\n                if (c1 == 0) {\n                    return;\n                }\n                if (colHasMerge(cf, r1, r2)) {\n                    //focus所在行有合并单元格\n                    let cfMerge = getColMerge(cf, r1, r2);\n                    let cf_str = cfMerge[0], cf_end = cfMerge[1];\n                    if (cf_end < c2 && cf_str == c1) {\n                        c2 = getNextIndex('left', rf, c1, c2);\n                    } else {\n                        c1 = getNextIndex('left', rf, 0, c1);\n                    }\n                } else {\n                    if (cf < c2 && cf == c1) {\n                        c2 = getNextIndex('left', rf, c1, c2);\n                    } else {\n                        c1 = getNextIndex('left', rf, 0, c1);\n                    }\n                }\n            }\n            let rowseleted = [\n                r1,\n                r2\n            ];\n            let columnseleted = [\n                c1,\n                c2\n            ];\n            row = Store.visibledatarow[r2];\n            row_pre = r1 - 1 == -1 ? 0 : Store.visibledatarow[r1 - 1];\n            col = Store.visibledatacolumn[c2];\n            col_pre = c1 - 1 == -1 ? 0 : Store.visibledatacolumn[c1 - 1];\n            let changeparam = cells.mergeMoveMain(columnseleted, rowseleted, last, row_pre, row - row_pre - 1, col_pre, col - col_pre - 1);\n            if (changeparam != null) {\n                columnseleted = changeparam[0];\n                rowseleted = changeparam[1];    // top = changeparam[2];\n                                                // height = changeparam[3];\n                                                // left = changeparam[4];\n                                                // width = changeparam[5];\n            }\n            // top = changeparam[2];\n            // height = changeparam[3];\n            // left = changeparam[4];\n            // width = changeparam[5];\n            last['row'] = rowseleted;\n            last['column'] = columnseleted;\n            selectHightlightShow();\n        } else if (type == 'rangeOfFormula') {\n            let last = formula.func_selectedrange;\n            let rf = last['row_focus'], cf = last['column_focus'];\n            let r1 = last['row'][0], r2 = last['row'][1];\n            let c1 = last['column'][0], c2 = last['column'][1];\n            if (postion == 'down') {\n                if (r2 == Store.flowdata.length - 1) {\n                    return;\n                }\n                if (rowHasMerge(rf, c1, c2)) {\n                    //focus所在行有合并单元格\n                    let rfMerge = getRowMerge(rf, c1, c2);\n                    let rf_str = rfMerge[0], rf_end = rfMerge[1];\n                    if (rf_str > r1 && rf_end == r2) {\n                        r1 = getNextIndex('down', cf, r1, r2);\n                    } else {\n                        r2 = getNextIndex('down', cf, r2, Store.flowdata.length - 1);\n                    }\n                } else {\n                    if (rf > r1 && rf == r2) {\n                        r1 = getNextIndex('down', cf, r1, r2);\n                    } else {\n                        r2 = getNextIndex('down', cf, r2, Store.flowdata.length - 1);\n                    }\n                }\n            } else if (postion == 'up') {\n                if (r1 == 0) {\n                    return;\n                }\n                if (rowHasMerge(rf, c1, c2)) {\n                    //focus所在行有合并单元格\n                    let rfMerge = getRowMerge(rf, c1, c2);\n                    let rf_str = rfMerge[0], rf_end = rfMerge[1];\n                    if (rf_end < r2 && rf_str == r1) {\n                        r2 = getNextIndex('up', cf, r1, r2);\n                    } else {\n                        r1 = getNextIndex('up', cf, 0, r1);\n                    }\n                } else {\n                    if (rf < r2 && rf == r1) {\n                        r2 = getNextIndex('up', cf, r1, r2);\n                    } else {\n                        r1 = getNextIndex('up', cf, 0, r1);\n                    }\n                }\n            } else if (postion == 'right') {\n                if (c2 == Store.flowdata[0].length - 1) {\n                    return;\n                }\n                if (colHasMerge(cf, r1, r2)) {\n                    //focus所在行有合并单元格\n                    let cfMerge = getColMerge(cf, r1, r2);\n                    let cf_str = cfMerge[0], cf_end = cfMerge[1];\n                    if (cf_str > c1 && cf_end == c2) {\n                        c1 = getNextIndex('right', rf, c1, c2);\n                    } else {\n                        c2 = getNextIndex('right', rf, c2, Store.flowdata[0].length - 1);\n                    }\n                } else {\n                    if (cf > c1 && cf == c2) {\n                        c1 = getNextIndex('right', rf, c1, c2);\n                    } else {\n                        c2 = getNextIndex('right', rf, c2, Store.flowdata[0].length - 1);\n                    }\n                }\n            } else if (postion == 'left') {\n                if (c1 == 0) {\n                    return;\n                }\n                if (colHasMerge(cf, r1, r2)) {\n                    //focus所在行有合并单元格\n                    let cfMerge = getColMerge(cf, r1, r2);\n                    let cf_str = cfMerge[0], cf_end = cfMerge[1];\n                    if (cf_end < c2 && cf_str == c1) {\n                        c2 = getNextIndex('left', rf, c1, c2);\n                    } else {\n                        c1 = getNextIndex('left', rf, 0, c1);\n                    }\n                } else {\n                    if (cf < c2 && cf == c1) {\n                        c2 = getNextIndex('left', rf, c1, c2);\n                    } else {\n                        c1 = getNextIndex('left', rf, 0, c1);\n                    }\n                }\n            }\n            let rowseleted = [\n                r1,\n                r2\n            ];\n            let columnseleted = [\n                c1,\n                c2\n            ];\n            row = Store.visibledatarow[r2];\n            row_pre = r1 - 1 == -1 ? 0 : Store.visibledatarow[r1 - 1];\n            col = Store.visibledatacolumn[c2];\n            col_pre = c1 - 1 == -1 ? 0 : Store.visibledatacolumn[c1 - 1];\n            let top = row_pre, height = row - row_pre - 1;\n            let left = col_pre, width = col - col_pre - 1;\n            let changeparam = cells.mergeMoveMain(columnseleted, rowseleted, last, top, height, left, width);\n            if (changeparam != null) {\n                columnseleted = changeparam[0];\n                rowseleted = changeparam[1];\n                top = changeparam[2];\n                height = changeparam[3];\n                left = changeparam[4];\n                width = changeparam[5];\n            }\n            formula.func_selectedrange = {\n                'left': left,\n                'width': width,\n                'top': top,\n                'height': height,\n                'left_move': left,\n                'width_move': width,\n                'top_move': top,\n                'height_move': height,\n                'row': rowseleted,\n                'column': columnseleted,\n                'row_focus': rf,\n                'column_focus': cf\n            };\n            $('#luckysheet-formula-functionrange-select').css({\n                'left': left,\n                'width': width,\n                'top': top,\n                'height': height\n            }).show();\n            formula.rangeSetValue({\n                'row': rowseleted,\n                'column': columnseleted\n            });\n        }\n        let scrollLeft = $('#luckysheet-cell-main').scrollLeft();\n        let scrollTop = $('#luckysheet-cell-main').scrollTop();\n        let winH = $('#luckysheet-cell-main').height(), winW = $('#luckysheet-cell-main').width();\n        let sleft = 0, stop = 0;\n        if (col - scrollLeft - winW + 20 > 0) {\n            sleft = col - winW + 20;\n            if (isScroll) {\n                $('#luckysheet-scrollbar-x').scrollLeft(sleft);\n            }\n        } else if (col_pre - scrollLeft - 20 < 0) {\n            sleft = col_pre - 20;\n            if (isScroll) {\n                $('#luckysheet-scrollbar-x').scrollLeft(sleft);\n            }\n        }\n        if (row - scrollTop - winH + 20 > 0) {\n            stop = row - winH + 20;\n            if (isScroll) {\n                $('#luckysheet-scrollbar-y').scrollTop(stop);\n            }\n        } else if (row_pre - scrollTop - 20 < 0) {\n            stop = row_pre - 20;\n            if (isScroll) {\n                $('#luckysheet-scrollbar-y').scrollTop(stop);\n            }\n        }\n        clearTimeout(Store.countfuncTimeout);\n        countfunc();\n    }    //shift + 方向键 / ctrl + shift + 方向键 功能\n    //shift + 方向键 / ctrl + shift + 方向键 功能\n    function rowHasMerge(r, c1, c2) {\n        let rowHasMerge = false;\n        for (let c = c1; c <= c2; c++) {\n            let cell = Store.flowdata[r][c];\n            if (getObjType(cell) == 'object' && 'mc' in cell) {\n                rowHasMerge = true;\n                break;\n            }\n        }\n        return rowHasMerge;\n    }\n    function colHasMerge(c, r1, r2) {\n        let colHasMerge = false;\n        for (let r = r1; r <= r2; r++) {\n            let cell = Store.flowdata[r][c];\n            if (getObjType(cell) == 'object' && 'mc' in cell) {\n                colHasMerge = true;\n                break;\n            }\n        }\n        return colHasMerge;\n    }\n    function getRowMerge(rIndex, c1, c2) {\n        let r1 = 0, r2 = Store.flowdata.length - 1;\n        let str = null;\n        if (rIndex > r1) {\n            for (let r = rIndex; r >= r1; r--) {\n                for (let c = c1; c <= c2; c++) {\n                    let cell = Store.flowdata[r][c];\n                    if (getObjType(cell) == 'object' && 'mc' in cell) {\n                        let mc = Store.config['merge'][cell['mc'].r + '_' + cell['mc'].c];\n                        if (str == null || mc.r < str) {\n                            str = mc.r;\n                        }\n                    }\n                }\n                if (rowHasMerge(str - 1, c1, c2) && str > r1) {\n                    r = str - 1;\n                } else {\n                    break;\n                }\n            }\n        } else {\n            str = r1;\n        }\n        let end = null;\n        if (rIndex < r2) {\n            for (let r = rIndex; r <= r2; r++) {\n                for (let c = c1; c <= c2; c++) {\n                    let cell = Store.flowdata[r][c];\n                    if (getObjType(cell) == 'object' && 'mc' in cell) {\n                        let mc = Store.config['merge'][cell['mc'].r + '_' + cell['mc'].c];\n                        if (end == null || mc.r + mc.rs - 1 > end) {\n                            end = mc.r + mc.rs - 1;\n                        }\n                    }\n                }\n                if (rowHasMerge(end + 1, c1, c2) && end < r2) {\n                    r = end + 1;\n                } else {\n                    break;\n                }\n            }\n        } else {\n            end = r2;\n        }\n        return [\n            str,\n            end\n        ];\n    }\n    function getColMerge(cIndex, r1, r2) {\n        let c1 = 0, c2 = Store.flowdata[0].length - 1;\n        let str = null;\n        if (cIndex > c1) {\n            for (let c = cIndex; c >= c1; c--) {\n                for (let r = r1; r <= r2; r++) {\n                    let cell = Store.flowdata[r][c];\n                    if (getObjType(cell) == 'object' && 'mc' in cell) {\n                        let mc = Store.config['merge'][cell['mc'].r + '_' + cell['mc'].c];\n                        if (str == null || mc.c < str) {\n                            str = mc.c;\n                        }\n                    }\n                }\n                if (colHasMerge(str - 1, r1, r2) && str > c1) {\n                    c = str - 1;\n                } else {\n                    break;\n                }\n            }\n        } else {\n            str = c1;\n        }\n        let end = null;\n        if (cIndex < c2) {\n            for (let c = cIndex; c <= c2; c++) {\n                for (let r = r1; r <= r2; r++) {\n                    let cell = Store.flowdata[r][c];\n                    if (getObjType(cell) == 'object' && 'mc' in cell) {\n                        let mc = Store.config['merge'][cell['mc'].r + '_' + cell['mc'].c];\n                        if (end == null || mc.c + mc.cs - 1 > end) {\n                            end = mc.c + mc.cs - 1;\n                        }\n                    }\n                }\n                if (colHasMerge(end + 1, r1, r2) && end < c2) {\n                    c = end + 1;\n                } else {\n                    break;\n                }\n            }\n        } else {\n            end = c2;\n        }\n        return [\n            str,\n            end\n        ];\n    }\n    function getNextIndex(direction, focusIndex, strIndex, endIndex) {\n        let index = null;\n        let stNull;\n        if (direction == 'down') {\n            let stValue = Store.flowdata[strIndex][focusIndex];\n            if (getObjType(stValue) == 'object' && isRealNull(stValue.v)) {\n                stNull = true;\n            } else if (isRealNull(stValue)) {\n                stNull = true;\n            } else {\n                stNull = false;\n            }\n            console.log(stNull, 'stNull');\n            let cellNull = [], i = 0;\n            for (let r = strIndex + 1; r <= endIndex; r++) {\n                let cell = Store.flowdata[r][focusIndex];\n                if (getObjType(cell) == 'object' && isRealNull(cell.v)) {\n                    cellNull.push(true);\n                } else if (isRealNull(cell)) {\n                    cellNull.push(true);\n                } else {\n                    cellNull.push(false);\n                }\n                if (cellNull.length == 1 && stNull == true && cellNull[i] == false) {\n                    index = strIndex + i + 1;\n                    break;\n                } else if (cellNull.length > 1) {\n                    if (stNull && cellNull[i] == false) {\n                        //起始是空，找第一个有值的位置\n                        index = strIndex + i + 1;\n                        break;\n                    } else if (!stNull) {\n                        //起始有值，找一个有值的位置\n                        if (cellNull[i] == false && cellNull[i - 1] == true) {\n                            //前面为空\n                            index = strIndex + i + 1;\n                            break;\n                        } else if (cellNull[i] == true && cellNull[i - 1] == false) {\n                            //后面为空\n                            index = strIndex + i;\n                            break;\n                        }\n                    }\n                }\n                if (r == endIndex) {\n                    index = endIndex;\n                }\n                i++;\n            }\n        } else if (direction == 'up') {\n            let stValue = Store.flowdata[endIndex][focusIndex];\n            if (getObjType(stValue) == 'object' && isRealNull(stValue.v)) {\n                stNull = true;\n            } else if (isRealNull(stValue)) {\n                stNull = true;\n            } else {\n                stNull = false;\n            }\n            let cellNull = [], i = 0;\n            for (let r = endIndex - 1; r >= strIndex; r--) {\n                let cell = Store.flowdata[r][focusIndex];\n                if (getObjType(cell) == 'object' && isRealNull(cell.v)) {\n                    cellNull.push(true);\n                } else if (isRealNull(cell)) {\n                    cellNull.push(true);\n                } else {\n                    cellNull.push(false);\n                }\n                if (cellNull.length == 1 && stNull && cellNull[i] == false) {\n                    index = endIndex - (i + 1);\n                    break;\n                } else if (cellNull.length > 1) {\n                    if (stNull && cellNull[i] == false) {\n                        //起始是空，找第一个有值的位置\n                        index = endIndex - (i + 1);\n                        break;\n                    } else if (!stNull) {\n                        //起始有值，找一个有值的位置\n                        if (cellNull[i] == false && cellNull[i - 1] == true) {\n                            //前面为空\n                            index = endIndex - (i + 1);\n                            break;\n                        } else if (cellNull[i] == true && cellNull[i - 1] == false) {\n                            //后面为空\n                            index = endIndex - i;\n                            break;\n                        }\n                    }\n                }\n                if (r == strIndex) {\n                    index = strIndex;\n                }\n                i++;\n            }\n        } else if (direction == 'right') {\n            let stValue = Store.flowdata[focusIndex][strIndex];\n            if (getObjType(stValue) == 'object' && isRealNull(stValue.v)) {\n                stNull = true;\n            } else if (isRealNull(stValue)) {\n                stNull = true;\n            } else {\n                stNull = false;\n            }\n            let cellNull = [], i = 0;\n            for (let c = strIndex + 1; c <= endIndex; c++) {\n                let cell = Store.flowdata[focusIndex][c];\n                if (getObjType(cell) == 'object' && isRealNull(cell.v)) {\n                    cellNull.push(true);\n                } else if (isRealNull(cell)) {\n                    cellNull.push(true);\n                } else {\n                    cellNull.push(false);\n                }\n                if (cellNull.length == 1 && stNull && cellNull[i] == false) {\n                    index = strIndex + i + 1;\n                    break;\n                } else if (cellNull.length > 1) {\n                    if (stNull && cellNull[i] == false) {\n                        //起始是空，找第一个有值的位置\n                        index = strIndex + i + 1;\n                        break;\n                    } else if (!stNull) {\n                        //起始有值，找一个有值的位置\n                        if (cellNull[i] == false && cellNull[i - 1] == true) {\n                            //前面为空\n                            index = strIndex + i + 1;\n                            break;\n                        } else if (cellNull[i] == true && cellNull[i - 1] == false) {\n                            //后面为空\n                            index = strIndex + i;\n                            break;\n                        }\n                    }\n                }\n                if (c == endIndex) {\n                    index = endIndex;\n                }\n                i++;\n            }\n        } else if (direction == 'left') {\n            let stValue = Store.flowdata[focusIndex][endIndex];\n            if (getObjType(stValue) == 'object' && isRealNull(stValue.v)) {\n                stNull = true;\n            } else if (isRealNull(stValue)) {\n                stNull = true;\n            } else {\n                stNull = false;\n            }\n            let cellNull = [], i = 0;\n            for (let c = endIndex - 1; c >= strIndex; c--) {\n                let cell = Store.flowdata[focusIndex][c];\n                if (getObjType(cell) == 'object' && isRealNull(cell.v)) {\n                    cellNull.push(true);\n                } else if (isRealNull(cell)) {\n                    cellNull.push(true);\n                } else {\n                    cellNull.push(false);\n                }\n                if (cellNull.length == 1 && stNull && cellNull[i] == false) {\n                    index = endIndex - (i + 1);\n                    break;\n                } else if (cellNull.length > 1) {\n                    if (stNull && cellNull[i] == false) {\n                        //起始是空，找第一个有值的位置\n                        index = endIndex - (i + 1);\n                        break;\n                    } else if (!stNull) {\n                        //起始有值，找一个有值的位置\n                        if (cellNull[i] == false && cellNull[i - 1] == true) {\n                            //前面为空\n                            index = endIndex - (i + 1);\n                            break;\n                        } else if (cellNull[i] == true && cellNull[i - 1] == false) {\n                            //后面为空\n                            index = endIndex - i;\n                            break;\n                        }\n                    }\n                }\n                if (c == strIndex) {\n                    index = strIndex;\n                }\n                i++;\n            }\n        }\n        return index;\n    }\n    return {\n        luckysheetMoveEndCell,\n        luckysheetMoveHighlightCell,\n        luckysheetMoveHighlightCell2,\n        luckysheetMoveHighlightRange,\n        luckysheetMoveHighlightRange2\n    };\n});"]}