{"version":3,"sources":["controllers/selection.js"],"names":["define","m_select","conditionformat","m_protection","luckysheetConfigsetting","tooltip","formula","m_border","m_getdata","cells","m_getRowlen","m_validate","m_format","m_get","m_util","Store","locale","selectHightlightShow","selectionCopyShow","checkProtectionLockedRangeList","getBorderInfoCompute","getdatabyselection","getcellvalue","datagridgrowth","rowlenByRange","hasPartMC","isRealNum","isEditMode","genarate","update","getSheetIndex","replaceHtml","getObjType","luckysheetfontformat","clearcopy","e","clipboardData","window","originalEvent","luckysheet_selection_range","setData","textarea","$","css","val","focus","select","setTimeout","blur","getHtmlBorderStyle","type","color","style","0","1","2","3","4","5","6","7","8","9","10","11","12","13","toString","indexOf","copy","rowIndexArr","colIndexArr","copyRange","RowlChange","HasMC","s","luckysheet_select_save","length","range","r1","row","r2","c1","column","c2","copyR","config","includes","push","copyC","cell","flowdata","mc","rs","luckysheet_copy_save","dataSheetIndex","currentSheetIndex","borderInfoCompute","_this","this","cpdata","d","deepCopyFlowData","colgroup","i","r","j","c","span","c_value","reg","ct","fa","match","getStyleByCell","cs","bl_obj","br_obj","bt_obj","bb_obj","bd_r","bd_c","t","linetype","bcolor","b","l","rowlen","collen","JSON","stringify","bl_color","bl_style","x","br_color","br_style","bt_color","bt_style","bb_color","bb_style","iscopyself","oInput","document","createElement","setAttribute","value","body","appendChild","execCommand","display","removeChild","copybyformat","txt","text","isPasteAction","paste","triggerType","allowEdit","local_drag","drag","data","html","luckysheet_paste_iscut","pasteHandlerOfCutPaste","pasteHandlerOfCopyPaste","pasteHandler","alert","pasteMustKeybordAlert","info","pasteMustKeybordAlertHTMLTitle","pasteMustKeybordAlertHTML","borderInfo","cfg","extend","copyh","copyc","minh","maxh","minc","maxc","has_PartMC","addr","addc","concat","offsetMC","h","currentRowLen","defaultrowlen","bd_obj","rangeType","row_index","col_index","fontset","oneLineTextHeight","getTextSize","allParam","refreshRange","dataChe","che","replace","split","colchelen","last","curR","curC","rlen","clen","originCell","String","parseFloat","Object","v","m","f","delFunctionGroup","mask","copyHasMC","copyRowlChange","copySheetIndex","c_r1","c_r2","c_c1","c_c2","copyData","c_dataVerification","luckysheetfile","dataVerification","source_borderInfo","bd_rangeType","bd_range","bd_emptyRange","CFSplitRange","source","target","sourceData","sourceConfig","sourceCurData","sourceCurConfig","source_r","source_c","source_cdformat","source_curCdformat","ruleArr","source_curCdformat_cellrange","cellrange","emptyRange","emptyRange2","range2","ruleObj","target_cdformat","target_curCdformat","sheetIndex","curData","curConfig","cdformat","curCdformat","curDataVerification","refreshGrid_pastcut","arr","isSameRow","arrData","map","col","a","spl","timesH","timesC","mth","mtc","maxcellCahe","maxrowCache","th","tc","offsetRow","offsetCol","func","functionCopy","Math","abs","funcV","execfunction","undefined","c_file","a_file","ruleArr_cf","cf_range","pasteHandlerOfPaintModel","ceil","cellMaxLength","rowMaxLength","cdformat_cellrange","matchcopy","data1","data2","data1len","data2len","data1cache","data2cache"],"mappings":";;;;;;;AAAAA,QACI,oBACA,oBACA,gCACA,qCACA,qBACA,6BACA,oBACA,qBACA,uBACA,sBACA,oBACA,iBACA,mBACA,gBACA,WACA,oBACD,SAAUC,EAAUC,EAAiBC,EAAcC,EAAwBC,EAASC,EAASC,EAAUC,EAAUC,EAAOC,EAAaC,EAAYC,EAAUC,EAAOC,EAAQC,EAAOC,GAChL,aACA,MAAMC,qBAACA,EAAoBC,kBAAEA,GAAqBjB,GAC5CkB,+BAACA,GAAkChB,GACnCiB,qBAACA,GAAwBb,GACzBc,mBAACA,EAAkBC,aAAEA,EAAYC,eAAEA,GAAkBf,GACrDgB,cAACA,GAAiBd,GAClBe,UAACA,EAASC,UAAEA,GAAaf,EACzBgB,EAAavB,EAAwBuB,YACrCC,SAACA,EAAQC,OAAEA,GAAUjB,GACrBkB,cAACA,GAAiBjB,GAClBkB,YAACA,EAAWC,WAAEA,EAAUC,qBAAEA,GAAwBnB,EA+vDxD,OA7vDIoB,UAAW,SAAUC,GACjB,IAAIC,EAAgBC,OAAOD,cAEtBA,GAEKD,IACFC,EAAgBD,EAAEG,cAAcF,eAOxC,GAHArB,EAAMwB,8BACNrB,IAEKkB,EAWD,OADAA,EAAcI,QAAQ,OAdb,MAeF,EAXS,CAChB,IAAIC,EAAWC,EAAE,4BAA4BC,IAAI,aAAc,UAC/DF,EAASG,IANA,KAOTH,EAASI,QACTJ,EAASK,SAETC,WAAW,WACPN,EAASO,OAAOL,IAAI,aAAc,YACnC,MAOXM,mBAAoB,SAAUC,EAAMC,GAChC,IAAIC,EAAQ,GAsCZ,OArBAF,GAfIG,EAAK,OACLC,EAAK,OACLC,EAAK,OACLC,EAAK,SACLC,EAAK,SACLC,EAAK,UACLC,EAAK,aACLC,EAAK,SACLC,EAAK,SACLC,EAAK,eACLC,GAAM,gBACNC,GAAM,mBACNC,GAAM,iBACNC,GAAM,SAEQhB,EAAKiB,aACdC,QAAQ,WAAa,EAC1BhB,GAAS,OAETA,GADe,SAARF,EACE,SAEA,SAED,QAARA,EACAE,GAAS,UACFF,EAAKkB,QAAQ,eAAiB,EACrChB,GAAS,UACFF,EAAKkB,QAAQ,YAAc,EAClChB,GAAS,UACFF,EAAKkB,QAAQ,WAAa,EACjChB,GAAS,UACFF,EAAKkB,QAAQ,WAAa,EACjChB,GAAS,UAETA,GAAS,SAENA,EAAQD,EAAQ,KAE3BkB,KAAM,SAAUlC,GAEZ,IAAIC,EAAgBC,OAAOD,cAEtBA,IAEDA,EAAgBD,EAAEG,cAAcF,eAEpCrB,EAAMwB,8BAEN,IAAI+B,KAAkBC,KAClBC,KAAgBC,GAAa,EAAOC,GAAQ,EAChD,IAAK,IAAIC,EAAI,EAAGA,EAAI5D,EAAM6D,uBAAuBC,OAAQF,IAAK,CAC1D,IAAIG,EAAQ/D,EAAM6D,uBAAuBD,GACrCI,EAAKD,EAAME,IAAI,GAAIC,EAAKH,EAAME,IAAI,GAClCE,EAAKJ,EAAMK,OAAO,GAAIC,EAAKN,EAAMK,OAAO,GAC5C,IAAK,IAAIE,EAAQN,EAAIM,GAASJ,EAAII,IAC9B,GAAiC,MAA7BtE,EAAMuE,OAAkB,WAAiD,MAApCvE,EAAMuE,OAAkB,UAAED,GAAnE,CAGKf,EAAYiB,SAASF,IACtBf,EAAYkB,KAAKH,GAES,MAA1BtE,EAAMuE,OAAe,QAAaD,KAAStE,EAAMuE,OAAe,SAChEb,GAAa,GAEjB,IAAK,IAAIgB,EAAQP,EAAIO,GAASL,EAAIK,IAAS,CACvC,GAAiC,MAA7B1E,EAAMuE,OAAkB,WAAiD,MAApCvE,EAAMuE,OAAkB,UAAEG,GAC/D,SAEClB,EAAYgB,SAASE,IACtBlB,EAAYiB,KAAKC,GAErB,IAAIC,EAAO3E,EAAM4E,SAASN,GAAOI,GACT,UAApBzD,EAAW0D,IAAqB,OAAQA,GAAsB,MAAdA,EAAKE,GAAGC,KACxDnB,GAAQ,IAIpB3D,EAAMwB,2BAA2BiD,MAC7BR,IAAOF,EAAME,IACbG,OAAUL,EAAMK,SAEpBX,EAAUgB,MACNR,IAAOF,EAAME,IACbG,OAAUL,EAAMK,SAGxBjE,IAEAH,EAAM+E,sBACFC,eAAkBhF,EAAMiF,kBACxBxB,UAAaA,EACbC,WAAcA,EACdC,MAASA,GAGb,IACIuB,EADAC,EAAQC,KAERpF,EAAMuE,OAAmB,YAAKvE,EAAMuE,OAAmB,WAAET,OAAS,IAElEoB,EAAoB7E,KAExB,IAAIgF,EAAS,GAAIC,EAAItF,EAAMuF,iBAAiBvF,EAAM4E,UAC9CY,EAAW,GAIf,IAAK,IAAIC,EAAI,EAAGA,EAAIlC,EAAYO,OAAQ2B,IAAK,CACzC,IAAIC,EAAInC,EAAYkC,GACpB,GAAiC,MAA7BzF,EAAMuE,OAAkB,WAA6C,MAAhCvE,EAAMuE,OAAkB,UAAEmB,GAAnE,CAGAL,GAAU,OACV,IAAK,IAAIM,EAAI,EAAGA,EAAInC,EAAYM,OAAQ6B,IAAK,CACzC,IAAIC,EAAIpC,EAAYmC,GACpB,GAAiC,MAA7B3F,EAAMuE,OAAkB,WAA6C,MAAhCvE,EAAMuE,OAAkB,UAAEqB,GAC/D,SAEJ,IAAIxB,EAAS,gCACb,GAAY,MAARkB,EAAEI,IAAyB,MAAXJ,EAAEI,GAAGE,GAAY,CACjC,IAAIvD,EAAQ,GAAIwD,EAAO,GACnBH,GAAKnC,EAAY,KACG,MAAhBvD,EAAMuE,QAA+C,MAA7BvE,EAAMuE,OAAkB,WAAwD,MAA3CvE,EAAMuE,OAAkB,UAAEqB,EAAExC,YACzFoC,GAAY,qCAEZA,GAAY,oBAAsBxF,EAAMuE,OAAkB,UAAEqB,EAAExC,YAAc,mBAGhFwC,GAAKpC,EAAY,KACG,MAAhBxD,EAAMuE,QAA4C,MAA1BvE,EAAMuE,OAAe,QAAqD,MAAxCvE,EAAMuE,OAAe,OAAEmB,EAAEtC,YACnFf,GAAS,eAETA,GAAS,UAAYrC,EAAMuE,OAAe,OAAEmB,EAAEtC,YAAc,OAGpE,IACI0C,EADAC,EAAM,wBAQV,GALID,EADc,MAAdR,EAAEI,GAAGE,GAAGI,IAA+B,MAAjBV,EAAEI,GAAGE,GAAGI,GAAGC,IAAcX,EAAEI,GAAGE,GAAGI,GAAGC,GAAGC,MAAMH,GACzDxF,EAAamF,EAAGE,EAAGN,GAEnB/E,EAAamF,EAAGE,EAAGN,EAAG,KAEpCjD,GAAS3C,EAAMyG,eAAeb,EAAGI,EAAGE,GACT,UAAvB3E,EAAWqE,EAAEI,GAAGE,KAAmB,OAAQN,EAAEI,GAAGE,GAAI,CACpD,KAAI,OAAQN,EAAEI,GAAGE,GAAO,IAgJpB,SA7IA,GAFAC,EAAO,YAAcP,EAAEI,GAAGE,GAAO,GAAEd,GAAK,cAAgBQ,EAAEI,GAAGE,GAAO,GAAEQ,GAAK,IAEvElB,GAAqBA,EAAkBQ,EAAI,IAAME,GAAI,CACrD,IAAIS,GACIjE,SACAC,UACDiE,GACClE,SACAC,UACDkE,GACCnE,SACAC,UACDmE,GACCpE,SACAC,UAER,IAAK,IAAIoE,EAAOf,EAAGe,EAAOf,EAAIJ,EAAEI,GAAGE,GAAO,GAAEd,GAAI2B,IAC5C,IAAK,IAAIC,EAAOd,EAAGc,EAAOd,EAAIN,EAAEI,GAAGE,GAAO,GAAEQ,GAAIM,IAAQ,CACpD,GAAID,GAAQf,GAAKR,EAAkBuB,EAAO,IAAMC,IAASxB,EAAkBuB,EAAO,IAAMC,GAAMC,EAAG,CAC7F,IAAIC,EAAW1B,EAAkBuB,EAAO,IAAMC,GAAMC,EAAEtE,MAClDwE,EAAS3B,EAAkBuB,EAAO,IAAMC,GAAMC,EAAEvE,MACnB,MAA7BmE,EAAc,MAAEK,GAChBL,EAAc,MAAEK,GAAY,EAE5BL,EAAc,MAAEK,GAAYL,EAAc,MAAEK,GAAY,EAE7B,MAA3BL,EAAc,MAAEM,GAChBN,EAAc,MAAEM,GAAU,EAE1BN,EAAc,MAAEM,GAAUN,EAAc,MAAEM,GAAU,EAG5D,GAAIJ,GAAQf,EAAIJ,EAAEI,GAAGE,GAAO,GAAEd,GAAK,GAAKI,EAAkBuB,EAAO,IAAMC,IAASxB,EAAkBuB,EAAO,IAAMC,GAAMI,EAAG,CACpH,IAAIF,EAAW1B,EAAkBuB,EAAO,IAAMC,GAAMI,EAAEzE,MAClDwE,EAAS3B,EAAkBuB,EAAO,IAAMC,GAAMI,EAAE1E,MACnB,MAA7BoE,EAAc,MAAEI,GAChBJ,EAAc,MAAEI,GAAY,EAE5BJ,EAAc,MAAEI,GAAYJ,EAAc,MAAEI,GAAY,EAE7B,MAA3BJ,EAAc,MAAEK,GAChBL,EAAc,MAAEK,GAAU,EAE1BL,EAAc,MAAEK,GAAUL,EAAc,MAAEK,GAAU,EAG5D,GAAIH,GAAQd,GAAKV,EAAkBuB,EAAO,IAAMC,IAASxB,EAAkBuB,EAAO,IAAMC,GAAMK,EAAG,CAC7F,IAAIH,EAAW1B,EAAkBQ,EAAI,IAAME,GAAGmB,EAAE1E,MAC5CwE,EAAS3B,EAAkBuB,EAAO,IAAMC,GAAMK,EAAE3E,MACnB,MAA7BiE,EAAc,MAAEO,GAChBP,EAAc,MAAEO,GAAY,EAE5BP,EAAc,MAAEO,GAAYP,EAAc,MAAEO,GAAY,EAE7B,MAA3BP,EAAc,MAAEQ,GAChBR,EAAc,MAAEQ,GAAU,EAE1BR,EAAc,MAAEQ,GAAUR,EAAc,MAAEQ,GAAU,EAG5D,GAAIH,GAAQd,EAAIN,EAAEI,GAAGE,GAAO,GAAEQ,GAAK,GAAKlB,EAAkBuB,EAAO,IAAMC,IAASxB,EAAkBuB,EAAO,IAAMC,GAAMhB,EAAG,CACpH,IAAIkB,EAAW1B,EAAkBuB,EAAO,IAAMC,GAAMhB,EAAErD,MAClDwE,EAAS3B,EAAkBuB,EAAO,IAAMC,GAAMhB,EAAEtD,MACnB,MAA7BkE,EAAc,MAAEM,GAChBN,EAAc,MAAEM,GAAY,EAE5BN,EAAc,MAAEM,GAAYN,EAAc,MAAEM,GAAY,EAE7B,MAA3BN,EAAc,MAAEO,GAChBP,EAAc,MAAEO,GAAU,EAE1BP,EAAc,MAAEO,GAAUP,EAAc,MAAEO,GAAU,GAKpE,IAAIG,EAAS1B,EAAEI,GAAGE,GAAO,GAAEd,GAAImC,EAAS3B,EAAEI,GAAGE,GAAO,GAAEQ,GACtD,GAAIc,KAAKC,UAAUd,GAAQvC,OAAS,GAAI,CACpC,IAAIsD,EAAW,KAAMC,EAAW,KAChC,IAAK,IAAIC,KAAKjB,EAAOjE,MACbiE,EAAOjE,MAAMkF,IAAMN,EAAS,IAC5BI,EAAWE,GAGnB,IAAK,IAAIA,KAAKjB,EAAOhE,MACbgE,EAAOhE,MAAMiF,IAAMN,EAAS,IAC5BK,EAAWC,GAGH,MAAZF,GAAgC,MAAZC,IACpBhF,GAAS,eAAiB8C,EAAMjD,mBAAmBmF,EAAUD,IAGrE,GAAIF,KAAKC,UAAUb,GAAQxC,OAAS,GAAI,CACpC,IAAIyD,EAAW,KAAMC,EAAW,KAChC,IAAK,IAAIF,KAAKhB,EAAOlE,MACbkE,EAAOlE,MAAMkF,IAAMN,EAAS,IAC5BO,EAAWD,GAGnB,IAAK,IAAIA,KAAKhB,EAAOjE,MACbiE,EAAOjE,MAAMiF,IAAMN,EAAS,IAC5BQ,EAAWF,GAGH,MAAZC,GAAgC,MAAZC,IACpBnF,GAAS,gBAAkB8C,EAAMjD,mBAAmBsF,EAAUD,IAGtE,GAAIL,KAAKC,UAAUZ,GAAQzC,OAAS,GAAI,CACpC,IAAI2D,EAAW,KAAMC,EAAW,KAChC,IAAK,IAAIJ,KAAKf,EAAOnE,MACbmE,EAAOnE,MAAMkF,IAAML,EAAS,IAC5BQ,EAAWH,GAGnB,IAAK,IAAIA,KAAKf,EAAOlE,MACbkE,EAAOlE,MAAMiF,IAAML,EAAS,IAC5BS,EAAWJ,GAGH,MAAZG,GAAgC,MAAZC,IACpBrF,GAAS,cAAgB8C,EAAMjD,mBAAmBwF,EAAUD,IAGpE,GAAIP,KAAKC,UAAUX,GAAQ1C,OAAS,GAAI,CACpC,IAAI6D,EAAW,KAAMC,EAAW,KAChC,IAAK,IAAIN,KAAKd,EAAOpE,MACboE,EAAOpE,MAAMkF,IAAML,EAAS,IAC5BU,EAAWL,GAGnB,IAAK,IAAIA,KAAKd,EAAOnE,MACbmE,EAAOnE,MAAMiF,IAAML,EAAS,IAC5BW,EAAWN,GAGH,MAAZK,GAAgC,MAAZC,IACpBvF,GAAS,iBAAmB8C,EAAMjD,mBAAmB0F,EAAUD,WAS/E,GAAIzC,GAAqBA,EAAkBQ,EAAI,IAAME,GAAI,CAErD,GAAIV,EAAkBQ,EAAI,IAAME,GAAGmB,EAAG,CAClC,IAAIH,EAAW1B,EAAkBQ,EAAI,IAAME,GAAGmB,EAAE1E,MAC5CwE,EAAS3B,EAAkBQ,EAAI,IAAME,GAAGmB,EAAE3E,MAC9CC,GAAS,eAAiB8C,EAAMjD,mBAAmB0E,EAAUC,GAGjE,GAAI3B,EAAkBQ,EAAI,IAAME,GAAGF,EAAG,CAClC,IAAIkB,EAAW1B,EAAkBQ,EAAI,IAAME,GAAGF,EAAErD,MAC5CwE,EAAS3B,EAAkBQ,EAAI,IAAME,GAAGF,EAAEtD,MAC9CC,GAAS,gBAAkB8C,EAAMjD,mBAAmB0E,EAAUC,GAGlE,GAAI3B,EAAkBQ,EAAI,IAAME,GAAGkB,EAAG,CAClC,IAAIF,EAAW1B,EAAkBQ,EAAI,IAAME,GAAGkB,EAAEzE,MAC5CwE,EAAS3B,EAAkBQ,EAAI,IAAME,GAAGkB,EAAE1E,MAC9CC,GAAS,iBAAmB8C,EAAMjD,mBAAmB0E,EAAUC,GAGnE,GAAI3B,EAAkBQ,EAAI,IAAME,GAAGe,EAAG,CAClC,IAAIC,EAAW1B,EAAkBQ,EAAI,IAAME,GAAGe,EAAEtE,MAC5CwE,EAAS3B,EAAkBQ,EAAI,IAAME,GAAGe,EAAEvE,MAC9CC,GAAS,cAAgB8C,EAAMjD,mBAAmB0E,EAAUC,IAIxEzC,EAASpD,EAAYoD,GACjB/B,MAASA,EACTwD,KAAQA,IAEG,MAAXC,IACAA,EAAUvF,EAAamF,EAAGE,EAAGN,IAElB,MAAXQ,IACAA,EAAU,IAEd1B,GAAU0B,MACP,CACH,IAAIzD,EAAQ,GAEZ,GAAI6C,GAAqBA,EAAkBQ,EAAI,IAAME,GAAI,CAErD,GAAIV,EAAkBQ,EAAI,IAAME,GAAGmB,EAAG,CAClC,IAAIH,EAAW1B,EAAkBQ,EAAI,IAAME,GAAGmB,EAAE1E,MAC5CwE,EAAS3B,EAAkBQ,EAAI,IAAME,GAAGmB,EAAE3E,MAC9CC,GAAS,eAAiB8C,EAAMjD,mBAAmB0E,EAAUC,GAGjE,GAAI3B,EAAkBQ,EAAI,IAAME,GAAGF,EAAG,CAClC,IAAIkB,EAAW1B,EAAkBQ,EAAI,IAAME,GAAGF,EAAErD,MAC5CwE,EAAS3B,EAAkBQ,EAAI,IAAME,GAAGF,EAAEtD,MAC9CC,GAAS,gBAAkB8C,EAAMjD,mBAAmB0E,EAAUC,GAGlE,GAAI3B,EAAkBQ,EAAI,IAAME,GAAGkB,EAAG,CAClC,IAAIF,EAAW1B,EAAkBQ,EAAI,IAAME,GAAGkB,EAAEzE,MAC5CwE,EAAS3B,EAAkBQ,EAAI,IAAME,GAAGkB,EAAE1E,MAC9CC,GAAS,iBAAmB8C,EAAMjD,mBAAmB0E,EAAUC,GAGnE,GAAI3B,EAAkBQ,EAAI,IAAME,GAAGe,EAAG,CAClC,IAAIC,EAAW1B,EAAkBQ,EAAI,IAAME,GAAGe,EAAEtE,MAC5CwE,EAAS3B,EAAkBQ,EAAI,IAAME,GAAGe,EAAEvE,MAC9CC,GAAS,cAAgB8C,EAAMjD,mBAAmB0E,EAAUC,IAGpEzC,GAAU,GACNsB,GAAKnC,EAAY,KACG,MAAhBvD,EAAMuE,QAA+C,MAA7BvE,EAAMuE,OAAkB,WAAwD,MAA3CvE,EAAMuE,OAAkB,UAAEqB,EAAExC,YACzFoC,GAAY,qCAEZA,GAAY,oBAAsBxF,EAAMuE,OAAkB,UAAEqB,EAAExC,YAAc,mBAGhFwC,GAAKpC,EAAY,KACG,MAAhBxD,EAAMuE,QAA4C,MAA1BvE,EAAMuE,OAAe,QAAqD,MAAxCvE,EAAMuE,OAAe,OAAEmB,EAAEtC,YACnFf,GAAS,eAETA,GAAS,UAAYrC,EAAMuE,OAAe,OAAEmB,EAAEtC,YAAc,OAGpEgB,EAASpD,EAAYoD,GACjB/B,MAASA,EACTwD,KAAQ,KAEZzB,GAAU,GAGdiB,GADAjB,GAAU,QAGdiB,GAAU,SAId,GAFAA,EAAS,mDAAqDG,EAAWH,EAAS,WAClFrF,EAAM6H,YAAa,EACdxG,EAsBD,OADAA,EAAcI,QAAQ,OAAQ4D,IACvB,EAXP,IAAIyC,EAASC,SAASC,cAAc,SACpCF,EAAOG,aAAa,WAAY,YAChCH,EAAOI,MAAQ7C,EACf0C,SAASI,KAAKC,YAAYN,GAC1BA,EAAO/F,SAEPgG,SAASM,YAAY,QACrBP,EAAOzF,MAAMiG,QAAU,OACvBP,SAASI,KAAKI,YAAYT,IAOlCU,aAAc,SAAUpH,EAAGqH,GAEvB,IAAIpH,EAAgBC,OAAOD,cAEtBA,IAEDA,EAAgBD,EAAEG,eAAiBH,EAAEG,cAAcF,eAEvDrB,EAAMwB,6BACEyC,IAAOjE,EAAM6D,uBAAuB,GAAGI,IACvCG,OAAUpE,EAAM6D,uBAAuB,GAAGO,SAElDjE,IACA,IAAIkF,EAASoD,EAEb,GADAzI,EAAM6H,YAAa,EACdxG,EAaD,OADAA,EAAcI,QAAQ,OAAQ4D,IACvB,EAbS,CAChB,IAAI3D,EAAWC,EAAE,4BACjBD,EAASgH,KAAKrD,GACd3D,EAASI,QACTJ,EAASK,SACTgG,SAASM,YAAY,aACrBN,SAASM,YAAY,QAErBrG,WAAW,WACPN,EAASO,QACV,MAOX0G,eAAe,EACfC,MAAO,SAAUxH,EAAGyH,GAEhB,IAAI1D,EAAQC,KACZ,IAAwB,IAApBpF,EAAM8I,UACN,OAEJ,MACMC,EADU9I,IACW+I,KAC3B,IAAItH,EAAWC,EAAE,4BACjBD,EAASI,QACTJ,EAASK,SAETC,WAAW,WACP,IAAIiH,EAAOvH,EAASwH,OAChBD,EAAK5F,QAAQ,iCAAmC,GAAgD,MAA3CrD,EAAM+E,qBAAgC,WAAa/E,EAAM+E,qBAAgC,UAAEjB,OAAS,EACrJ9D,EAAMmJ,wBACNnJ,EAAMmJ,wBAAyB,EAC/BhE,EAAMiE,uBAAuBpJ,EAAM+E,sBACnCI,EAAMhE,UAAUC,IAEhB+D,EAAMkE,wBAAwBrJ,EAAM+E,sBAElB,OAAf8D,EACP1D,EAAMmE,aAAaL,GAEfrI,IACA2I,MAAMR,EAAWS,uBAEjBlK,EAAQmK,KAAKV,EAAWW,+BAAgCX,EAAWY,4BAG5E,KAEPL,aAAc,SAAUL,EAAMW,GAC1B,GAAKxJ,EAA+BJ,EAAM6D,uBAAwB7D,EAAMiF,qBAGhD,IAApBjF,EAAM8I,UAUV,GAPI9I,EAAM6D,uBAAuBC,OAAS,IAClClD,IACA2I,MAAM,+BAENjK,EAAQmK,KAAK,+CAAgD,gCAGlD,iBAARR,EAAkB,CACzB,GAAmB,GAAfA,EAAKnF,OACL,OAGJ,IAAI+F,EAAMlI,EAAEmI,QAAO,KAAU9J,EAAMuE,QACf,MAAhBsF,EAAW,QACXA,EAAW,UAEX3C,KAAKC,UAAUyC,GAAY9F,OAAS,GAA0B,MAArB+F,EAAgB,aACzDA,EAAgB,eAEpB,IAAIE,EAAQd,EAAKnF,OAAQkG,EAAQf,EAAK,GAAGnF,OACrCmG,EAAOjK,EAAM6D,uBAAuB,GAAGI,IAAI,GAE3CiG,EAAOD,EAAOF,EAAQ,EACtBI,EAAOnK,EAAM6D,uBAAuB,GAAGO,OAAO,GAE9CgG,EAAOD,EAAOH,EAAQ,EAEtBK,GAAa,EAIjB,GAHoB,MAAhBR,EAAW,QACXQ,EAAa3J,EAAUmJ,EAAKI,EAAMC,EAAMC,EAAMC,IAE9CC,EAMA,YALIzJ,IACA2I,MAAM,iBAENjK,EAAQmK,KAAK,+CAAgD,kBAIrE,IAAInE,EAAItF,EAAMuF,iBAAiBvF,EAAM4E,UAKjC0F,EAAOJ,EAHQ5E,EAAExB,OAGY,EAAGyG,EAAOH,EAFvB9E,EAAE,GAAGxB,OAEyC,GAC9DwG,EAAO,GAAKC,EAAO,KACnBjF,EAAI9E,KAAkBgK,OAAOlF,GAAIgF,EAAMC,GAAM,IAE5B,MAAjBV,EAAY,SACZA,EAAY,WAEhB,IAAInG,GAAa,EACb+G,KACJ,IAAK,IAAIC,EAAIT,EAAMS,GAAKR,EAAMQ,IAAK,CAC/B,IAAIpD,KAAOkD,OAAOlF,EAAEoF,IAChBC,EAAgB3K,EAAM4K,cACF,MAApBf,EAAY,OAAEa,KACdC,EAAgBd,EAAY,OAAEa,IAElC,IAAK,IAAI9E,EAAIuE,EAAMvE,GAAKwE,EAAMxE,IAAK,CACP,UAApB3E,EAAWqG,EAAE1B,KAAmB,OAAQ0B,EAAE1B,KACtC,OAAQ0B,EAAE1B,GAAGf,WACNgF,EAAW,MAAEvC,EAAE1B,GAAO,GAAEF,EAAI,IAAM4B,EAAE1B,GAAO,GAAEA,UAEjD0B,EAAE1B,GAAGf,IAEhB,IAAIqD,EAAQ,KAuBZ,GAtBsB,MAAlBe,EAAKyB,EAAIT,IAA6C,MAA5BhB,EAAKyB,EAAIT,GAAMrE,EAAIuE,KAC7CjC,EAAQe,EAAKyB,EAAIT,GAAMrE,EAAIuE,IAE/B7C,EAAE1B,GAAKjE,EAAEmI,QAAO,KAAU5B,GACb,MAATA,GAAiB,OAAQZ,EAAE1B,KACN,MAAjB0B,EAAE1B,GAAO,GAAEd,IACXwC,EAAE1B,GAAO,GAAEF,EAAIgF,EACfpD,EAAE1B,GAAO,GAAEA,EAAIA,EACfiE,EAAW,MAAEvC,EAAE1B,GAAO,GAAEF,EAAI,IAAM4B,EAAE1B,GAAO,GAAEA,GAAK0B,EAAE1B,GAAO,GAC3D6E,EAASvC,EAAU,GAAExC,EAAI,IAAMwC,EAAU,GAAEtC,IACvC0B,EAAE1B,GAAO,GAAEF,EACX4B,EAAE1B,GAAO,GAAEA,IAGf0B,EAAE1B,IACEf,IACIa,EAAG+E,EAASvC,EAAU,GAAExC,EAAI,IAAMwC,EAAU,GAAEtC,GAAG,GACjDA,EAAG6E,EAASvC,EAAU,GAAExC,EAAI,IAAMwC,EAAU,GAAEtC,GAAG,MAK7DgE,EAAWc,EAAIT,EAAO,KAAOrE,EAAIuE,IAAQ,CACzC,IAAIU,GACAC,UAAa,OACb5C,OACI6C,UAAaL,EACbM,UAAapF,EACbmB,EAAK6C,EAAWc,EAAIT,EAAO,KAAOrE,EAAIuE,IAAOpD,EAC7CrB,EAAKkE,EAAWc,EAAIT,EAAO,KAAOrE,EAAIuE,IAAOzE,EAC7CiB,EAAKiD,EAAWc,EAAIT,EAAO,KAAOrE,EAAIuE,IAAOxD,EAC7CG,EAAK8C,EAAWc,EAAIT,EAAO,KAAOrE,EAAIuE,IAAOrD,IAGrD+C,EAAgB,WAAEpF,KAAKoG,GAE3B,IAAII,EAAU/J,EAAqBoG,EAAE1B,IACjCsF,EAAoBxL,EAAMyL,YAAY,IAAKF,GAAS,GAEpDC,EAAoBP,IACpBA,EAAgBO,EAChBxH,GAAa,GAGrB4B,EAAEoF,GAAKpD,EACHqD,GAAiB3K,EAAM4K,gBACvBf,EAAY,OAAEa,GAAKC,GAa3B,GAVA3K,EAAM6D,yBACEI,KACIgG,EACAC,GAEJ9F,QACI+F,EACAC,KAGRE,EAAO,GAAKC,EAAO,GAAK7G,EAAY,CACpC,IAAI0H,GACAvB,IAAOA,EACPnG,YAAc,GAElB1D,EAAMqL,aAAa/F,EAAGtF,EAAM6D,uBAAwBuH,OACjD,CACH,IAAIA,GAAavB,IAAOA,GACxB7J,EAAMqL,aAAa/F,EAAGtF,EAAM6D,uBAAwBuH,GACpDlL,SAED,CAEH,IAAIoL,KACAC,GAFJtC,EAAOA,EAAKuC,QAAQ,MAAO,KAEZC,MAAM,MAAOC,EAAYH,EAAI,GAAGE,MAAM,MAAM3H,OAC3D,IAAK,IAAI2B,EAAI,EAAGA,EAAI8F,EAAIzH,OAAQ2B,IACxB8F,EAAI9F,GAAGgG,MAAM,MAAM3H,OAAS4H,GAGhCJ,EAAQ7G,KAAK8G,EAAI9F,GAAGgG,MAAM,OAE9B,IAAInG,EAAItF,EAAMuF,iBAAiBvF,EAAM4E,UAEjC+G,EAAO3L,EAAM6D,uBAAuB7D,EAAM6D,uBAAuBC,OAAS,GAC1E8H,EAAsB,MAAfD,EAAU,IAAY,EAAIA,EAAU,IAAE,GAC7CE,EAAyB,MAAlBF,EAAa,OAAY,EAAIA,EAAa,OAAE,GACnDG,EAAOR,EAAQxH,OAAQiI,EAAOT,EAAQ,GAAGxH,OAEzCuG,GAAa,EAIjB,GAH6B,MAAzBrK,EAAMuE,OAAc,QACpB8F,EAAa3J,EAAUV,EAAMuE,OAAQqH,EAAMA,EAAOE,EAAO,EAAGD,EAAMA,EAAOE,EAAO,IAEhF1B,EAMA,YALIzJ,IACA2I,MAAM,iBAENjK,EAAQmK,KAAK,+CAAgD,kBAIrE,IAAIa,EAAOsB,EAAOE,EAAOxG,EAAExB,OAAQyG,EAAOsB,EAAOE,EAAOzG,EAAE,GAAGxB,QACzDwG,EAAO,GAAKC,EAAO,KACnBjF,EAAI9E,KAAkBgK,OAAOlF,GAAIgF,EAAMC,GAAM,IAEjD,IAAK,IAAI7E,EAAI,EAAGA,EAAIoG,EAAMpG,IAAK,CAC3B,IAAI4B,KAAOkD,OAAOlF,EAAEI,EAAIkG,IACxB,IAAK,IAAIhG,EAAI,EAAGA,EAAImG,EAAMnG,IAAK,CAC3B,IAAIoG,EAAa1E,EAAE1B,EAAIiG,GACnB3D,EAAQoD,EAAQ5F,GAAGE,GASvB,GARIjF,EAAUuH,KAGNA,EADA8D,GAAcA,EAAWhG,IAA2B,MAArBgG,EAAWhG,GAAGC,GACrCgG,OAAO/D,GAEPgE,WAAWhE,IAGvB8D,aAAsBG,OACtBH,EAAWI,EAAIlE,EACM,MAAjB8D,EAAWhG,IAAkC,MAApBgG,EAAWhG,GAAGC,GACvC+F,EAAWK,EAAIvL,EAAOkL,EAAe,GAAM,GAAG9D,GAE9C8D,EAAWK,EAAInE,EAEC,MAAhB8D,EAAWM,GAAaN,EAAWM,EAAExI,OAAS,IAC9CkI,EAAWM,EAAI,GACf/M,EAAQgN,iBAAiB7G,EAAIkG,EAAMhG,EAAIiG,EAAM7L,EAAMiF,wBAEpD,CACH,IAAIN,KACA6H,EAAO3L,EAASqH,GACpBvD,EAAKyH,EAAII,EAAK,GACd7H,EAAKqB,GAAKwG,EAAK,GACf7H,EAAK0H,EAAIG,EAAK,GACdlF,EAAE1B,EAAIiG,GAAQlH,GAGtBW,EAAEI,EAAIkG,GAAQtE,EAUlB,GARAqE,EAAU,KACNC,EACAA,EAAOE,EAAO,GAElBH,EAAa,QACTE,EACAA,EAAOE,EAAO,GAEdzB,EAAO,GAAKC,EAAO,EAAG,CACtB,IAAIa,GAAa1H,YAAc,GAC/B1D,EAAMqL,aAAa/F,EAAGtF,EAAM6D,uBAAwBuH,QAEpDpL,EAAMqL,aAAa/F,EAAGtF,EAAM6D,wBAC5B3D,MAIZkJ,uBAAwB,SAAU3F,GAC9B,IAAKrD,EAA+BJ,EAAM6D,uBAAwB7D,EAAMiF,mBACpE,OAEJ,IAAwB,IAApBjF,EAAM8I,UACN,OAEJ,IAAIe,EAAMlI,EAAEmI,QAAO,KAAU9J,EAAMuE,QACf,MAAhBsF,EAAW,QACXA,EAAW,UAGf,IAAI4C,EAAYhJ,EAAiB,MAC7BiJ,EAAiBjJ,EAAsB,WACvCkJ,EAAiBlJ,EAA0B,eAC3CmJ,EAAOnJ,EAAqB,UAAE,GAAGQ,IAAI,GAAI4I,EAAOpJ,EAAqB,UAAE,GAAGQ,IAAI,GAAI6I,EAAOrJ,EAAqB,UAAE,GAAGW,OAAO,GAAI2I,EAAOtJ,EAAqB,UAAE,GAAGW,OAAO,GACtK4I,EAAWrL,EAAEmI,QAAO,KAAUxJ,GAC9B2D,KACI2I,EACAC,GAEJzI,QACI0I,EACAC,IAELJ,IACC5C,EAAQiD,EAASlJ,OAAQkG,EAAQgD,EAAS,GAAGlJ,OAE7C6H,EAAO3L,EAAM6D,uBAAuB7D,EAAM6D,uBAAuBC,OAAS,GAC1EmG,EAAO0B,EAAgB,UAAGzB,EAAOD,EAAOF,EAAQ,EAEhDI,EAAOwB,EAAmB,aAAGvB,EAAOD,EAAOH,EAAQ,EAInDK,GAAa,EAIjB,GAHoB,MAAhBR,EAAW,QACXQ,EAAa3J,EAAUmJ,EAAKI,EAAMC,EAAMC,EAAMC,IAE9CC,EAMA,YALIzJ,IACA2I,MAAM,iBAENjK,EAAQmK,KAAK,+CAAgD,kBAIrE,IAAInE,EAAItF,EAAMuF,iBAAiBvF,EAAM4E,UAIjC0F,EAAOP,EAAQE,EAFA3E,EAAExB,OAEmByG,EAAOP,EAAQG,EADnC7E,EAAE,GAAGxB,QAErBwG,EAAO,GAAKC,EAAO,KACnBjF,EAAI9E,KAAkBgK,OAAOlF,GAAIgF,EAAMC,GAAM,IAEjD,IAAIrF,EAAoB7E,EAAqBsM,GACzCM,EAAqBtL,EAAEmI,QAAO,KAAU9J,EAAMkN,eAAenM,EAAc4L,IAAmC,kBAC9GQ,EAAmBxL,EAAEmI,QAAO,KAAU9J,EAAMkN,eAAenM,EAAcf,EAAMiF,oBAAsC,kBAEzH,GAAIjF,EAAMiF,mBAAqB0H,EAAgB,CAC3C,IAAK,IAAIlH,EAAImH,EAAMnH,GAAKoH,EAAMpH,IAC1B,IAAK,IAAIE,EAAImH,EAAMnH,GAAKoH,EAAMpH,IAAK,CAC/B,IAAIhB,EAAOW,EAAEG,GAAGE,GACQ,UAApB1E,EAAW0D,IAAqB,OAAQA,IACpC,OAAQA,EAAS,WACVkF,EAAW,MAAElF,EAAS,GAAEe,EAAI,IAAMf,EAAS,GAAEiB,UAEjDjB,EAAS,IAEpBW,EAAEG,GAAGE,GAAK,YACHwH,EAAiB1H,EAAI,IAAME,GAI1C,GAAIkE,EAAgB,YAAKA,EAAgB,WAAE/F,OAAS,EAAG,CACnD,IAAIsJ,KACJ,IAAK,IAAI3H,EAAI,EAAGA,EAAIoE,EAAgB,WAAE/F,OAAQ2B,IAAK,CAC/C,IAAI4H,EAAexD,EAAgB,WAAEpE,GAAGqF,UACxC,GAAoB,SAAhBuC,EAAyB,CACzB,IAAIC,EAAWzD,EAAgB,WAAEpE,GAAG1B,MAChCwJ,KACJ,IAAK,IAAI5H,EAAI,EAAGA,EAAI2H,EAASxJ,OAAQ6B,IACjC4H,EAAgBA,EAAc/C,OAAOrL,EAAgBqO,aAAaF,EAAS3H,IACvE1B,KACI2I,EACAC,GAEJzI,QACI0I,EACAC,KAGJ9I,KACIgG,EACAC,GAEJ9F,QACI+F,EACAC,IAEL,aAEPP,EAAgB,WAAEpE,GAAG1B,MAAQwJ,EAC7BH,EAAkB3I,KAAKoF,EAAgB,WAAEpE,SACtC,GAAoB,QAAhB4H,EAAwB,CAC/B,IAAI5G,EAAOoD,EAAgB,WAAEpE,GAAGyC,MAAM6C,UAClCrE,EAAOmD,EAAgB,WAAEpE,GAAGyC,MAAM8C,UAChCvE,GAAQmG,GAAQnG,GAAQoG,GAAQnG,GAAQoG,GAAQpG,GAAQqG,GAC1DK,EAAkB3I,KAAKoF,EAAgB,WAAEpE,KAIrDoE,EAAgB,WAAIuD,GAG5B,IA0FIK,EAAQC,EA1FRjD,KACJ,IAAK,IAAIC,EAAIT,EAAMS,GAAKR,EAAMQ,IAAK,CAC/B,IAAIpD,KAAOkD,OAAOlF,EAAEoF,IACpB,IAAK,IAAI9E,EAAIuE,EAAMvE,GAAKwE,EAAMxE,IAAK,CAC/B,GAAIV,EAAkB0H,EAAOlC,EAAIT,EAAO,KAAO6C,EAAOlH,EAAIuE,IAAQ,CAC9D,IAAIU,GACAC,UAAa,OACb5C,OACI6C,UAAaL,EACbM,UAAapF,EACbmB,EAAK7B,EAAkB0H,EAAOlC,EAAIT,EAAO,KAAO6C,EAAOlH,EAAIuE,IAAOpD,EAClErB,EAAKR,EAAkB0H,EAAOlC,EAAIT,EAAO,KAAO6C,EAAOlH,EAAIuE,IAAOzE,EAClEiB,EAAKzB,EAAkB0H,EAAOlC,EAAIT,EAAO,KAAO6C,EAAOlH,EAAIuE,IAAOxD,EAClEG,EAAK5B,EAAkB0H,EAAOlC,EAAIT,EAAO,KAAO6C,EAAOlH,EAAIuE,IAAOrD,IAGjD,MAArB+C,EAAgB,aAChBA,EAAgB,eAEpBA,EAAgB,WAAEpF,KAAKoG,QACpB,GAAI3F,EAAkBwF,EAAI,IAAM9E,GAAI,CACvC,IAAIiF,GACAC,UAAa,OACb5C,OACI6C,UAAaL,EACbM,UAAapF,EACbmB,EAAK,KACLrB,EAAK,KACLiB,EAAK,KACLG,EAAK,OAGY,MAArB+C,EAAgB,aAChBA,EAAgB,eAEpBA,EAAgB,WAAEpF,KAAKoG,GAGvBoC,EAAmBL,EAAOlC,EAAIT,EAAO,KAAO6C,EAAOlH,EAAIuE,MACvDgD,EAAiBzC,EAAI,IAAM9E,GAAKqH,EAAmBL,EAAOlC,EAAIT,EAAO,KAAO6C,EAAOlH,EAAIuE,KAEnE,UAApBlJ,EAAWqG,EAAE1B,KAAmB,OAAQ0B,EAAE1B,KACtC,OAAQ0B,EAAE1B,GAAGf,WACNgF,EAAW,MAAEvC,EAAE1B,GAAO,GAAEF,EAAI,IAAM4B,EAAE1B,GAAO,GAAEA,UAEjD0B,EAAE1B,GAAGf,IAEhB,IAAIqD,EAAQ,KACc,MAAtB8E,EAAStC,EAAIT,IAAiD,MAAhC+C,EAAStC,EAAIT,GAAMrE,EAAIuE,KACrDjC,EAAQ8E,EAAStC,EAAIT,GAAMrE,EAAIuE,IAEnC7C,EAAE1B,GAAKjE,EAAEmI,QAAO,KAAU5B,GACb,MAATA,GAAiBuE,GAAa,OAAQnF,EAAE1B,KACnB,MAAjB0B,EAAE1B,GAAO,GAAEd,IACXwC,EAAE1B,GAAO,GAAEF,EAAIgF,EACfpD,EAAE1B,GAAO,GAAEA,EAAIA,EACfiE,EAAW,MAAEvC,EAAE1B,GAAO,GAAEF,EAAI,IAAM4B,EAAE1B,GAAO,GAAEA,GAAK0B,EAAE1B,GAAO,GAC3D6E,EAASvC,EAAU,GAAExC,EAAI,IAAMwC,EAAU,GAAEtC,IACvC0B,EAAE1B,GAAO,GAAEF,EACX4B,EAAE1B,GAAO,GAAEA,IAGf0B,EAAE1B,IACEf,IACIa,EAAG+E,EAASvC,EAAU,GAAExC,EAAI,IAAMwC,EAAU,GAAEtC,GAAG,GACjDA,EAAG6E,EAASvC,EAAU,GAAExC,EAAI,IAAMwC,EAAU,GAAEtC,GAAG,MAMrEN,EAAEoF,GAAKpD,EAoBX,GAlBAqE,EAAU,KACN1B,EACAC,GAEJyB,EAAa,QACTxB,EACAC,GAGAsC,IACI1M,EAAMiF,mBAAqB0H,EAC3B9C,EAAMpJ,EAAc6E,EAAG2E,EAAMC,EAAML,IAEnCA,EAAMpJ,EAAc6E,EAAGsH,EAAMC,EAAMhD,GACnCA,EAAMpJ,EAAc6E,EAAG2E,EAAMC,EAAML,KAIvC7J,EAAMiF,mBAAqB0H,EAAgB,CAE3C,IAAIgB,EAAahM,EAAEmI,QAAO,KAAU9J,EAAMkN,eAAenM,EAAc4L,IAAuB,MAC1FiB,EAAejM,EAAEmI,QAAO,KAAU9J,EAAMkN,eAAenM,EAAc4L,IAAyB,QAC9FkB,EAAgBlM,EAAEmI,QAAO,KAAU6D,GACnCG,EAAkBnM,EAAEmI,QAAO,KAAU8D,GACT,MAA5BE,EAAuB,QACvBA,EAAuB,UAE3B,IAAK,IAAIC,EAAWnB,EAAMmB,GAAYlB,EAAMkB,IACxC,IAAK,IAAIC,EAAWlB,EAAMkB,GAAYjB,EAAMiB,IAAY,CACpD,IAAIrJ,EAAOkJ,EAAcE,GAAUC,GACX,UAApB/M,EAAW0D,IAAqB,OAAQA,IACpC,OAAQA,EAAS,WACVmJ,EAAuB,MAAEnJ,EAAS,GAAEe,EAAI,IAAMf,EAAS,GAAEiB,UAE7DjB,EAAS,IAEpBkJ,EAAcE,GAAUC,GAAY,KAO5C,GAJItB,IACAoB,EAAkBrN,EAAcoN,EAAejB,EAAMC,EAAMiB,IAG3DA,EAA4B,YAAKA,EAA4B,WAAEhK,OAAS,EAAG,CAC3E,IAAIsJ,KACJ,IAAK,IAAI3H,EAAI,EAAGA,EAAIqI,EAA4B,WAAEhK,OAAQ2B,IAAK,CAC3D,IAAI4H,EAAeS,EAA4B,WAAErI,GAAGqF,UACpD,GAAoB,SAAhBuC,EAAyB,CACzB,IAAIC,EAAWQ,EAA4B,WAAErI,GAAG1B,MAC5CwJ,KACJ,IAAK,IAAI5H,EAAI,EAAGA,EAAI2H,EAASxJ,OAAQ6B,IACjC4H,EAAgBA,EAAc/C,OAAOrL,EAAgBqO,aAAaF,EAAS3H,IACvE1B,KACI2I,EACAC,GAEJzI,QACI0I,EACAC,KAGJ9I,KACIgG,EACAC,GAEJ9F,QACI+F,EACAC,IAEL,aAEP0D,EAA4B,WAAErI,GAAG1B,MAAQwJ,EACzCH,EAAkB3I,KAAKqJ,EAA4B,WAAErI,SAClD,GAAoB,QAAhB4H,EAAwB,CAC/B,IAAI5G,EAAOqH,EAA4B,WAAErI,GAAGyC,MAAM6C,UAC9CrE,EAAOoH,EAA4B,WAAErI,GAAGyC,MAAM8C,UAC5CvE,GAAQmG,GAAQnG,GAAQoG,GAAQnG,GAAQoG,GAAQpG,GAAQqG,GAC1DK,EAAkB3I,KAAKqJ,EAA4B,WAAErI,KAIjEqI,EAA4B,WAAIV,EAGpC,IAAIa,EAAkBtM,EAAEmI,QAAO,KAAU9J,EAAMkN,eAAenM,EAAc4L,IAAkD,iCAC1HuB,EAAqBvM,EAAEmI,QAAO,KAAUmE,GACxCE,KACJ,GAA0B,MAAtBD,GAA8BA,EAAmBpK,OAAS,EAC1D,IAAK,IAAI2B,EAAI,EAAGA,EAAIyI,EAAmBpK,OAAQ2B,IAAK,CAChD,IAAI2I,EAA+BF,EAAmBzI,GAAG4I,UACrDC,KACAC,KACJ,IAAK,IAAI5I,EAAI,EAAGA,EAAIyI,EAA6BtK,OAAQ6B,IAAK,CAC1D,IAAI5B,EAAQ5E,EAAgBqO,aAAaY,EAA6BzI,IAClE1B,KACI2I,EACAC,GAEJzI,QACI0I,EACAC,KAGJ9I,KACIgG,EACAC,GAEJ9F,QACI+F,EACAC,IAEL,YACHkE,EAAaA,EAAW9D,OAAOzG,GAC/B,IAAIyK,EAASrP,EAAgBqO,aAAaY,EAA6BzI,IACnE1B,KACI2I,EACAC,GAEJzI,QACI0I,EACAC,KAGJ9I,KACIgG,EACAC,GAEJ9F,QACI+F,EACAC,IAEL,eACCoE,EAAO1K,OAAS,IAChByK,EAAcA,EAAY/D,OAAOgE,IAIzC,GADAN,EAAmBzI,GAAG4I,UAAYC,EAC9BC,EAAYzK,OAAS,EAAG,CACxB,IAAI2K,EAAU9M,EAAEmI,QAAO,KAAUoE,EAAmBzI,IACpDgJ,EAAQJ,UAAYE,EACpBJ,EAAQ1J,KAAKgK,IAIzB,IAAIC,EAAkB/M,EAAEmI,QAAO,KAAU9J,EAAMkN,eAAenM,EAAcf,EAAMiF,oBAAqD,iCACnI0J,EAAqBhN,EAAEmI,QAAO,KAAU4E,GACxCP,EAAQrK,OAAS,IACjB6K,EAAqBA,EAAmBnE,OAAO2D,IAGnD,IAAK,IAAI1I,EAAImH,EAAMnH,GAAKoH,EAAMpH,IAC1B,IAAK,IAAIE,EAAImH,EAAMnH,GAAKoH,EAAMpH,WACnBsH,EAAmBxH,EAAI,IAAME,GAG5C8H,GACImB,WAAcjC,EACd1D,KAAQ0E,EACRkB,QAAWhB,EACXtJ,OAAUqJ,EACVkB,UAAahB,EACbiB,SAAYd,EACZe,YAAed,EACff,iBAAoBxL,EAAEmI,QAAO,KAAU9J,EAAMkN,eAAenM,EAAc4L,IAAmC,kBAC7GsC,oBAAuBhC,EACvBlJ,OACIE,KACI2I,EACAC,GAEJzI,QACI0I,EACAC,KAIZW,GACIkB,WAAc5O,EAAMiF,kBACpBgE,KAAQjJ,EAAM4E,SACdiK,QAAWvJ,EACXf,OAAU5C,EAAEmI,QAAO,KAAU9J,EAAMuE,QACnCuK,UAAajF,EACbkF,SAAYL,EACZM,YAAeL,EACfxB,iBAAoBxL,EAAEmI,QAAO,KAAU9J,EAAMkN,eAAenM,EAAcf,EAAMiF,oBAAsC,kBACtHgK,oBAAuB9B,EACvBpJ,OACIE,KACIgG,EACAC,GAEJ9F,QACI+F,EACAC,SAIT,CAEH,IAAI2E,EAAWpN,EAAEmI,QAAO,KAAU9J,EAAMkN,eAAenM,EAAcf,EAAMiF,oBAAqD,iCAC5H+J,EAAcrN,EAAEmI,QAAO,KAAUiF,GACrC,GAAmB,MAAfC,GAAuBA,EAAYlL,OAAS,EAC5C,IAAK,IAAI2B,EAAI,EAAGA,EAAIuJ,EAAYlL,OAAQ2B,IAAK,CACzC,IAAI4I,EAAYW,EAAYvJ,GAAG4I,UAC3BC,KACJ,IAAK,IAAI3I,EAAI,EAAGA,EAAI0I,EAAUvK,OAAQ6B,IAAK,CACvC,IAAI5B,EAAQ5E,EAAgBqO,aAAaa,EAAU1I,IAC/C1B,KACI2I,EACAC,GAEJzI,QACI0I,EACAC,KAGJ9I,KACIgG,EACAC,GAEJ9F,QACI+F,EACAC,IAEL,WACHkE,EAAaA,EAAW9D,OAAOzG,GAEnCiL,EAAYvJ,GAAG4I,UAAYC,EAInCb,GACImB,WAAc5O,EAAMiF,kBACpBgE,KAAQjJ,EAAM4E,SACdiK,QAAWvJ,EACXf,OAAU5C,EAAEmI,QAAO,KAAU9J,EAAMuE,QACnCuK,UAAajF,EACbkF,SAAYA,EACZC,YAAeA,EACf7B,iBAAoBxL,EAAEmI,QAAO,KAAU9J,EAAMkN,eAAenM,EAAcf,EAAMiF,oBAAsC,kBACtHgK,oBAAuB9B,EACvBpJ,OACIE,KACI2I,EACAC,GAEJzI,QACI0I,EACAC,KAIZW,GACIkB,WAAc5O,EAAMiF,kBACpBgE,KAAQjJ,EAAM4E,SACdiK,QAAWvJ,EACXf,OAAU5C,EAAEmI,QAAO,KAAU9J,EAAMuE,QACnCuK,UAAajF,EACbkF,SAAYA,EACZC,YAAeA,EACf7B,iBAAoBxL,EAAEmI,QAAO,KAAU9J,EAAMkN,eAAenM,EAAcf,EAAMiF,oBAAsC,kBACtHgK,oBAAuB9B,EACvBpJ,OACIE,KACIgG,EACAC,GAEJ9F,QACI+F,EACAC,KAKZE,EAAO,GAAKC,EAAO,EAEnBvK,EAAMkP,oBAAoBzB,EAAOC,GAAO,GAGxC1N,EAAMkP,oBAAoBzB,EAAOC,EAAOhB,IAGhDrD,wBAAyB,SAAU5F,GAC/B,IAAKrD,EAA+BJ,EAAM6D,uBAAwB7D,EAAMiF,mBACpE,OAEJ,IAAI4E,EAAMlI,EAAEmI,QAAO,KAAU9J,EAAMuE,QACf,MAAhBsF,EAAW,QACXA,EAAW,UAGf,IAAI4C,EAAYhJ,EAAiB,MAC7BiJ,EAAiBjJ,EAAsB,WACvCkJ,EAAiBlJ,EAA0B,eAC3CmJ,EAAOnJ,EAAqB,UAAE,GAAGQ,IAAI,GAAI4I,EAAOpJ,EAAqB,UAAE,GAAGQ,IAAI,GAAI6I,EAAOrJ,EAAqB,UAAE,GAAGW,OAAO,GAAI2I,EAAOtJ,EAAqB,UAAE,GAAGW,OAAO,GACtK+K,KAAUC,GAAY,EAC1B,IAAK,IAAI3J,EAAI,EAAGA,EAAIhC,EAAqB,UAAEK,OAAQ2B,IAAK,CACpD,IAAI4J,EAAU/O,GACV2D,IAAOR,EAAqB,UAAEgC,GAAGxB,IACjCG,OAAUX,EAAqB,UAAEgC,GAAGrB,QACrCuI,GACClJ,EAAqB,UAAEK,OAAS,EAC5B8I,GAAQnJ,EAAqB,UAAE,GAAGQ,IAAI,IAAM4I,GAAQpJ,EAAqB,UAAE,GAAGQ,IAAI,IAClFoL,EAAUA,EAAQ,GAAGC,IAAI,SAAUC,EAAKC,GACpC,OAAOH,EAAQC,IAAI,SAAUrL,GACzB,OAAOA,EAAIuL,OAGnBL,EAAMA,EAAI3E,OAAO6E,GACjBD,GAAY,GACLtC,GAAQrJ,EAAqB,UAAE,GAAGW,OAAO,IAAM2I,GAAQtJ,EAAqB,UAAE,GAAGW,OAAO,KAC/F+K,EAAMA,EAAI3E,OAAO6E,IAGrBF,EAAME,EAGVD,IACAD,EAAMA,EAAI,GAAGG,IAAI,SAAUC,EAAKzI,GAC5B,OAAOqI,EAAIG,IAAI,SAAUrL,GACrB,OAAOA,EAAI6C,QAIvB,IAAIkG,EAAWrL,EAAEmI,QAAO,KAAUqF,GAElC,GAAI1L,EAAqB,UAAEK,OAAS,EAChC,IAAK,IAAI2B,EAAI,EAAGA,EAAIuH,EAASlJ,OAAQ2B,IACjC,IAAK,IAAIE,EAAI,EAAGA,EAAIqH,EAASvH,GAAG3B,OAAQ6B,IACd,MAAlBqH,EAASvH,GAAGE,IAAkC,MAApBqH,EAASvH,GAAGE,GAAG2G,WAClCU,EAASvH,GAAGE,GAAG2G,SACfU,EAASvH,GAAGE,GAAG8J,KAKtC,IAAI1F,EAAQiD,EAASlJ,OAAQkG,EAAQgD,EAAS,GAAGlJ,OAE7C6H,EAAO3L,EAAM6D,uBAAuB7D,EAAM6D,uBAAuBC,OAAS,GAC1EmG,EAAO0B,EAAU,IAAE,GAAIzB,EAAOyB,EAAU,IAAE,GAE1CxB,EAAOwB,EAAa,OAAE,GAAIvB,EAAOuB,EAAa,OAAE,GAI1C,IAFAzB,EAAOD,EAAO,GAAKF,GAER,IADXK,EAAOD,EAAO,GAAKH,IAGzBE,EAAOD,EAAOF,EAAQ,EACtBK,EAAOD,EAAOH,EAAQ,GAG1B,IAAIK,GAAa,EAIjB,GAHoB,MAAhBR,EAAW,QACXQ,EAAa3J,EAAUmJ,EAAKI,EAAMC,EAAMC,EAAMC,IAE9CC,EAMA,YALIzJ,IACA2I,MAAM,iBAENjK,EAAQmK,KAAK,+CAAgD,kBAIrE,IAAIiG,GAAUxF,EAAOD,EAAO,GAAKF,EAC7B4F,GAAUvF,EAAOD,EAAO,GAAKH,EAC7B1E,EAAItF,EAAMuF,iBAAiBvF,EAAM4E,UAKjC0F,EAAOP,EAAQE,EAHA3E,EAAExB,OAGmByG,EAAOP,EAAQG,EAFnC7E,EAAE,GAAGxB,QAGrBwG,EAAO,GAAKC,EAAO,KACnBjF,EAAI9E,KAAkBgK,OAAOlF,GAAIgF,EAAMC,GAAM,IAEjD,IAAIrF,EAAoB7E,EAAqBsM,GACzCM,EAAqBtL,EAAEmI,QAAO,KAAU9J,EAAMkN,eAAenM,EAAc4L,IAAiBQ,kBAC5FA,EAAmB,KACnByC,EAAM,EAAGC,EAAM,EAAGC,EAAc,EAAGC,EAAc,EACrD,IAAK,IAAIC,EAAK,EAAGA,GAAMN,EAAQM,IAC3B,IAAK,IAAIC,EAAK,EAAGA,GAAMN,EAAQM,IAAM,CAGjCF,EAAc9F,EAAO+F,EAAKjG,EAC1B+F,EAAc3F,EAAO8F,EAAKjG,EAE1B,IAAIkG,GALJN,EAAM3F,GAAQ+F,EAAK,GAAKjG,GAKF6C,EAClBuD,GALJN,EAAM1F,GAAQ8F,EAAK,GAAKjG,GAKF8C,EAClBrC,KACJ,IAAK,IAAIC,EAAIkF,EAAKlF,EAAIqF,EAAarF,IAAK,CACpC,IAAIpD,KAAOkD,OAAOlF,EAAEoF,IACpB,IAAK,IAAI9E,EAAIiK,EAAKjK,EAAIkK,EAAalK,IAAK,CACpC,GAAIV,EAAkB0H,EAAOlC,EAAIkF,EAAM,KAAO9C,EAAOlH,EAAIiK,IAAO,CAC5D,IAAIhF,GACAC,UAAa,OACb5C,OACI6C,UAAaL,EACbM,UAAapF,EACbmB,EAAK7B,EAAkB0H,EAAOlC,EAAIkF,EAAM,KAAO9C,EAAOlH,EAAIiK,IAAM9I,EAChErB,EAAKR,EAAkB0H,EAAOlC,EAAIkF,EAAM,KAAO9C,EAAOlH,EAAIiK,IAAMnK,EAChEiB,EAAKzB,EAAkB0H,EAAOlC,EAAIkF,EAAM,KAAO9C,EAAOlH,EAAIiK,IAAMlJ,EAChEG,EAAK5B,EAAkB0H,EAAOlC,EAAIkF,EAAM,KAAO9C,EAAOlH,EAAIiK,IAAM/I,IAG/C,MAArB+C,EAAgB,aAChBA,EAAgB,eAEpBA,EAAgB,WAAEpF,KAAKoG,QACpB,GAAI3F,EAAkBwF,EAAI,IAAM9E,GAAI,CACvC,IAAIiF,GACAC,UAAa,OACb5C,OACI6C,UAAaL,EACbM,UAAapF,EACbmB,EAAK,KACLrB,EAAK,KACLiB,EAAK,KACLG,EAAK,OAGY,MAArB+C,EAAgB,aAChBA,EAAgB,eAEpBA,EAAgB,WAAEpF,KAAKoG,GAGvBoC,EAAmBL,EAAOlC,EAAIkF,EAAM,KAAO9C,EAAOlH,EAAIiK,MAC9B,MAApB1C,IACAA,EAAmBxL,EAAEmI,QAAO,KAAU9J,EAAMkN,eAAenM,EAAcf,EAAMiF,oBAAoBkI,mBAEvGA,EAAiBzC,EAAI,IAAM9E,GAAKqH,EAAmBL,EAAOlC,EAAIkF,EAAM,KAAO9C,EAAOlH,EAAIiK,KAElE,UAApB5O,EAAWqG,EAAE1B,KAAmB,OAAQ0B,EAAE1B,KACtC,OAAQ0B,EAAE1B,GAAGf,WACNgF,EAAW,MAAEvC,EAAE1B,GAAO,GAAEF,EAAI,IAAM4B,EAAE1B,GAAO,GAAEA,UAEjD0B,EAAE1B,GAAGf,IAEhB,IAAIqD,EAAQ,KAIZ,GAHyB,MAArB8E,EAAStC,EAAIkF,IAA8C,MAA9B5C,EAAStC,EAAIkF,GAAKhK,EAAIiK,KACnD3H,EAAQvG,EAAEmI,QAAO,KAAUkD,EAAStC,EAAIkF,GAAKhK,EAAIiK,KAExC,MAAT3H,GAA4B,MAAXA,EAAMoE,EAAW,CAClC,IAAI8D,EAAOlI,EAAMoE,EACb4D,EAAY,IACZE,EAAO,IAAM7Q,EAAQ8Q,aAAaD,EAAM,OAAQF,IAEhDA,EAAY,IACZE,EAAO,IAAM7Q,EAAQ8Q,aAAaD,EAAM,KAAME,KAAKC,IAAIL,KAEvDC,EAAY,IACZC,EAAO,IAAM7Q,EAAQ8Q,aAAaD,EAAM,QAASD,IAEjDA,EAAY,IACZC,EAAO,IAAM7Q,EAAQ8Q,aAAaD,EAAM,OAAQE,KAAKC,IAAIJ,KAE7D,IAAIK,EAAQjR,EAAQkR,aAAaL,EAAM1F,EAAG9E,OAAG8K,GAAW,GACvC,MAAbxI,EAAMuH,KACNvH,EAAMoE,EAAIkE,EAAM,GAChBtI,EAAMkE,EAAIoE,EAAM,GAChBtI,EAAMuH,IAAMe,EAAM,GAAGvH,OAErBf,EAAMoE,EAAIkE,EAAM,GAChBtI,EAAMkE,EAAIoE,EAAM,GACA,MAAZtI,EAAMlC,IAAgC,MAAlBkC,EAAMlC,GAAO,KACjCkC,EAAMmE,EAAIvL,EAAOoH,EAAMlC,GAAO,GAAGwK,EAAM,MAInDlJ,EAAE1B,GAAKjE,EAAEmI,QAAO,KAAU5B,GACb,MAATA,GAAiBuE,GAAa,OAAQnF,EAAE1B,KACnB,MAAjB0B,EAAE1B,GAAO,GAAEd,IACXwC,EAAE1B,GAAO,GAAEF,EAAIgF,EACfpD,EAAE1B,GAAO,GAAEA,EAAIA,EACfiE,EAAW,MAAEvC,EAAE1B,GAAO,GAAEF,EAAI,IAAM4B,EAAE1B,GAAO,GAAEA,GAAK0B,EAAE1B,GAAO,GAC3D6E,EAASvC,EAAU,GAAExC,EAAI,IAAMwC,EAAU,GAAEtC,IACvC0B,EAAE1B,GAAO,GAAEF,EACX4B,EAAE1B,GAAO,GAAEA,IAGf0B,EAAE1B,IACEf,IACIa,EAAG+E,EAASvC,EAAU,GAAExC,EAAI,IAAMwC,EAAU,GAAEtC,GAAG,GACjDA,EAAG6E,EAASvC,EAAU,GAAExC,EAAI,IAAMwC,EAAU,GAAEtC,GAAG,MAMrEN,EAAEoF,GAAKpD,GAKnB,IAAIyH,EAAW,KACf,GAAqC,GAAjCtL,EAAqB,UAAEK,OAAa,CACpC,IAAI6M,EAAS3Q,EAAMkN,eAAenM,EAAc4L,IAC5CiE,EAAS5Q,EAAMkN,eAAenM,EAAcf,EAAMiF,oBAClD4L,EAAalP,EAAEmI,QAAO,KAAU6G,EAAwC,iCAC5E,GAAkB,MAAdE,GAAsBA,EAAW/M,OAAS,EAAG,CAC7CiL,EAAWpN,EAAEmI,QAAO,KAAU8G,EAAwC,iCACtE,IAAK,IAAInL,EAAI,EAAGA,EAAIoL,EAAW/M,OAAQ2B,IAAK,CACxC,IAAIqL,EAAWD,EAAWpL,GAAG4I,UACzBC,KACJ,IAAK,IAAI0B,EAAK,EAAGA,GAAMN,EAAQM,IAC3B,IAAK,IAAIC,EAAK,EAAGA,GAAMN,EAAQM,IAAM,CACjCL,EAAM3F,GAAQ+F,EAAK,GAAKjG,EACxB8F,EAAM1F,GAAQ8F,EAAK,GAAKjG,EACxB+F,EAAc9F,EAAO+F,EAAKjG,EAC1B+F,EAAc3F,EAAO8F,EAAKjG,EAC1B,IAAK,IAAIrE,EAAI,EAAGA,EAAImL,EAAShN,OAAQ6B,IAAK,CACtC,IAAI5B,EAAQ5E,EAAgBqO,aAAasD,EAASnL,IAC9C1B,KACI2I,EACAC,GAEJzI,QACI0I,EACAC,KAGJ9I,KACI2L,EACAG,EAAc,GAElB3L,QACIyL,EACAC,EAAc,IAEnB,eACC/L,EAAMD,OAAS,IACfwK,EAAaA,EAAW9D,OAAOzG,KAK3CuK,EAAWxK,OAAS,IACpB+M,EAAWpL,GAAG4I,UAAYC,EAC1BS,EAAStK,KAAKoM,EAAWpL,OAazC,GARAkG,EAAU,KACN1B,EACAC,GAEJyB,EAAa,QACTxB,EACAC,GAEAsC,GAAkBpC,EAAO,GAAKC,EAAO,EAAG,CAExC,IAAIa,GACAvB,IAFJA,EAAMpJ,EAAc6E,EAAG2E,EAAMC,EAAML,GAG/BnG,YAAc,EACdqL,SAAYA,EACZ5B,iBAAoBA,GAExBnN,EAAMqL,aAAa/F,EAAGtF,EAAM6D,uBAAwBuH,OACjD,CACH,IAAIA,GACAvB,IAAOA,EACPkF,SAAYA,EACZ5B,iBAAoBA,GAExBnN,EAAMqL,aAAa/F,EAAGtF,EAAM6D,uBAAwBuH,GACpDlL,MAGR6Q,yBAA0B,SAAUtN,GAChC,IAAKrD,EAA+BJ,EAAM6D,uBAAwB7D,EAAMiF,mBACpE,OAEJ,IAAI4E,EAAMlI,EAAEmI,QAAO,KAAU9J,EAAMuE,QACf,MAAhBsF,EAAW,QACXA,EAAW,UAGf,IAAI4C,EAAYhJ,EAAiB,MAC7BiJ,EAAiBjJ,EAAsB,WACvCkJ,EAAiBlJ,EAA0B,eAC3CmJ,EAAOnJ,EAAqB,UAAE,GAAGQ,IAAI,GAAI4I,EAAOpJ,EAAqB,UAAE,GAAGQ,IAAI,GAAI6I,EAAOrJ,EAAqB,UAAE,GAAGW,OAAO,GAAI2I,EAAOtJ,EAAqB,UAAE,GAAGW,OAAO,GACtK4I,EAAWrL,EAAEmI,QAAO,KAAUxJ,GAC9B2D,KACI2I,EACAC,GAEJzI,QACI0I,EACAC,IAELJ,IAEChB,EAAO3L,EAAM6D,uBAAuB7D,EAAM6D,uBAAuBC,OAAS,GAC1EmG,EAAO0B,EAAU,IAAE,GAAIzB,EAAOyB,EAAU,IAAE,GAE1CxB,EAAOwB,EAAa,OAAE,GAAIvB,EAAOuB,EAAa,OAAE,GAEhD5B,EAAQiD,EAASlJ,OAAQkG,EAAQgD,EAAS,GAAGlJ,OACjD,GAAImG,GAAQC,GAAQC,GAAQC,EAAM,CAE9B,IAAIC,GAAa,EAIjB,GAHoB,MAAhBR,EAAW,QACXQ,EAAa3J,EAAUmJ,EAAKI,EAAMA,EAAOF,EAAQ,EAAGI,EAAMA,EAAOH,EAAQ,IAEzEK,EAMA,YALIzJ,IACA2I,MAAM,iBAENjK,EAAQmK,KAAK,+CAAgD,kBAIrES,EAAOD,EAAOF,EAAQ,EACtBK,EAAOD,EAAOH,EAAQ,EAE1B,IAAI0F,EAASY,KAAKU,MAAM9G,EAAOD,EAAO,GAAKF,GAEvC4F,EAASW,KAAKU,MAAM5G,EAAOD,EAAO,GAAKH,GAEvC1E,EAAItF,EAAMuF,iBAAiBvF,EAAM4E,UAEjCqM,EAAgB3L,EAAE,GAAGxB,OACrBoN,EAAe5L,EAAExB,OACjBoB,EAAoB7E,EAAqBsM,GACzCM,EAAqBtL,EAAEmI,QAAO,KAAU9J,EAAMkN,eAAenM,EAAc4L,IAAiBQ,kBAC5FA,EAAmB,KACnByC,EAAM,EAAGC,EAAM,EAAGC,EAAc,EAAGC,EAAc,EACrD,IAAK,IAAIC,EAAK,EAAGA,GAAMN,EAAQM,IAC3B,IAAK,IAAIC,EAAK,EAAGA,GAAMN,EAAQM,IAAM,CACjCL,EAAM3F,GAAQ+F,EAAK,GAAKjG,EACxB8F,EAAM1F,GAAQ8F,EAAK,GAAKjG,GACxB+F,EAAc9F,EAAO+F,EAAKjG,EAAQmH,EAAeA,EAAejH,EAAO+F,EAAKjG,GAC1DG,EAAO,IACrB6F,EAAc7F,EAAO,IAEzB4F,EAAc3F,EAAO8F,EAAKjG,EAAQiH,EAAgBA,EAAgB9G,EAAO8F,EAAKjG,GAC5DI,EAAO,IACrB0F,EAAc1F,EAAO,GAEzB,IAAIK,KACJ,IAAK,IAAIC,EAAIkF,EAAKlF,EAAIqF,EAAarF,IAAK,CACpC,IAAIpD,KAAOkD,OAAOlF,EAAEoF,IACpB,IAAK,IAAI9E,EAAIiK,EAAKjK,EAAIkK,EAAalK,IAAK,CACpC,GAAIV,EAAkB0H,EAAOlC,EAAIkF,EAAM,KAAO9C,EAAOlH,EAAIiK,IAAO,CAC5D,IAAIhF,GACAC,UAAa,OACb5C,OACI6C,UAAaL,EACbM,UAAapF,EACbmB,EAAK7B,EAAkB0H,EAAOlC,EAAIkF,EAAM,KAAO9C,EAAOlH,EAAIiK,IAAM9I,EAChErB,EAAKR,EAAkB0H,EAAOlC,EAAIkF,EAAM,KAAO9C,EAAOlH,EAAIiK,IAAMnK,EAChEiB,EAAKzB,EAAkB0H,EAAOlC,EAAIkF,EAAM,KAAO9C,EAAOlH,EAAIiK,IAAMlJ,EAChEG,EAAK5B,EAAkB0H,EAAOlC,EAAIkF,EAAM,KAAO9C,EAAOlH,EAAIiK,IAAM/I,IAG/C,MAArB+C,EAAgB,aAChBA,EAAgB,eAEpBA,EAAgB,WAAEpF,KAAKoG,QACpB,GAAI3F,EAAkBwF,EAAI,IAAM9E,GAAI,CACvC,IAAIiF,GACAC,UAAa,OACb5C,OACI6C,UAAaL,EACbM,UAAapF,EACbmB,EAAK,KACLrB,EAAK,KACLiB,EAAK,KACLG,EAAK,OAGY,MAArB+C,EAAgB,aAChBA,EAAgB,eAEpBA,EAAgB,WAAEpF,KAAKoG,GAGvBoC,EAAmBL,EAAOlC,EAAIkF,EAAM,KAAO9C,EAAOlH,EAAIiK,MAC9B,MAApB1C,IACAA,EAAmBxL,EAAEmI,QAAO,KAAU9J,EAAMkN,eAAenM,EAAcf,EAAMiF,oBAAoBkI,mBAEvGA,EAAiBzC,EAAI,IAAM9E,GAAKqH,EAAmBL,EAAOlC,EAAIkF,EAAM,KAAO9C,EAAOlH,EAAIiK,KAElE,UAApB5O,EAAWqG,EAAE1B,KAAmB,OAAQ0B,EAAE1B,KACtC,OAAQ0B,EAAE1B,GAAGf,WACNgF,EAAW,MAAEvC,EAAE1B,GAAO,GAAEF,EAAI,IAAM4B,EAAE1B,GAAO,GAAEA,UAEjD0B,EAAE1B,GAAGf,IAEhB,IAAIqD,EAAQ,KAIZ,GAHyB,MAArB8E,EAAStC,EAAIkF,IAA8C,MAA9B5C,EAAStC,EAAIkF,GAAKhK,EAAIiK,KACnD3H,EAAQ8E,EAAStC,EAAIkF,GAAKhK,EAAIiK,IAErB,MAAT3H,WACOA,EAAS,SACTA,EAAS,SACTA,EAAS,SACTA,EAAW,IACdA,EAAMlC,IAAoB,aAAdkC,EAAMlC,GAAGW,UACduB,EAAMlC,GAEO,UAApB/E,EAAWqG,EAAE1B,MAEb0B,EAAE1B,IAAOwG,EAAK9E,EAAE1B,KAEpB0B,EAAE1B,GAAKjE,EAAEmI,QAAO,EAAMxC,EAAE1B,GAAIsC,GACxBuE,GAAa,OAAQnF,EAAE1B,KACF,MAAjB0B,EAAE1B,GAAO,GAAEd,IACXwC,EAAE1B,GAAO,GAAEF,EAAIgF,EACXpD,EAAE1B,GAAO,GAAEd,GAAK4F,GAAKqF,IACrBzI,EAAE1B,GAAO,GAAEd,GAAKiL,EAAcrF,GAElCpD,EAAE1B,GAAO,GAAEA,EAAIA,EACX0B,EAAE1B,GAAO,GAAEQ,GAAKR,GAAKkK,IACrBxI,EAAE1B,GAAO,GAAEQ,GAAK0J,EAAclK,GAElCiE,EAAW,MAAEvC,EAAE1B,GAAO,GAAEF,EAAI,IAAM4B,EAAE1B,GAAO,GAAEA,GAAK0B,EAAE1B,GAAO,GAC3D6E,EAASvC,EAAU,GAAExC,EAAI,IAAMwC,EAAU,GAAEtC,IACvC0B,EAAE1B,GAAO,GAAEF,EACX4B,EAAE1B,GAAO,GAAEA,IAGf0B,EAAE1B,IACEf,IACIa,EAAG+E,EAASvC,EAAU,GAAExC,EAAI,IAAMwC,EAAU,GAAEtC,GAAG,GACjDA,EAAG6E,EAASvC,EAAU,GAAExC,EAAI,IAAMwC,EAAU,GAAEtC,GAAG,MAKnD,MAAV0B,EAAE1B,GAAGwG,GACc,MAAflE,EAAU,IAAkC,MAArBA,EAAU,GAAM,IAAW,CAClD,IAAIsE,EAAO1L,EAAOoH,EAAU,GAAM,GAAGZ,EAAE1B,GAAGwG,GAC1C9E,EAAE1B,GAAGyG,EAAIG,GAKzBlH,EAAEoF,GAAKpD,GAKnB,IAAIyH,EAAW,KACXZ,EAAUxM,EAAEmI,QAAO,KAAU9J,EAAMkN,eAAenM,EAAc4L,IAAkD,iCACtH,GAAe,MAAXwB,GAAmBA,EAAQrK,OAAS,EAAG,CACvCiL,EAAWpN,EAAEmI,QAAO,KAAU9J,EAAMkN,eAAenM,EAAcf,EAAMiF,oBAAqD,iCAC5H,IAAK,IAAIQ,EAAI,EAAGA,EAAI0I,EAAQrK,OAAQ2B,IAAK,CACrC,IAAI0L,EAAqBhD,EAAQ1I,GAAG4I,UAChCC,KACJ,IAAK,IAAI3I,EAAI,EAAGA,EAAIwL,EAAmBrN,OAAQ6B,IAAK,CAChD,IAAI5B,EAAQ5E,EAAgBqO,aAAa2D,EAAmBxL,IACxD1B,KACI2I,EACAC,GAEJzI,QACI0I,EACAC,KAGJ9I,KACIgG,EACAC,GAEJ9F,QACI+F,EACAC,IAEL,eACCrG,EAAMD,OAAS,IACfwK,EAAaA,EAAW9D,OAAOzG,IAGnCuK,EAAWxK,OAAS,IACpBqK,EAAQ1I,GAAG4I,YACHpK,KACIgG,EACAC,GAEJ9F,QACI+F,EACAC,KAGZ2E,EAAStK,KAAK0J,EAAQ1I,MAYlC,GARAkG,EAAU,KACN1B,EACAC,GAEJyB,EAAa,QACTxB,EACAC,GAEAsC,EAAgB,CAEhB,IAAItB,GACAvB,IAFJA,EAAMpJ,EAAc6E,EAAG2E,EAAMC,EAAML,GAG/BnG,YAAc,EACdqL,SAAYA,EACZ5B,iBAAoBA,GAExBnN,EAAMqL,aAAa/F,EAAGtF,EAAM6D,uBAAwBuH,OACjD,CACH,IAAIA,GACAvB,IAAOA,EACPkF,SAAYA,EACZ5B,iBAAoBA,GAExBnN,EAAMqL,aAAa/F,EAAGtF,EAAM6D,uBAAwBuH,GACpDlL,MAGRkR,UAAW,SAAUC,EAAOC,GACxB,IAAsCC,EAAUC,EAA5CC,KAAiBC,KACrB,GAAoB,iBAATL,EACPI,EAAaJ,MACV,CACHI,EAAaJ,EAAM5F,MAAM,MACzB,IAAK,IAAIhG,EAAI,EAAGA,EAAIgM,EAAW3N,OAAQ2B,IACnCgM,EAAWhM,GAAKgM,EAAWhM,GAAGgG,MAAM,MAI5C,GADA8F,EAAWE,EAAW3N,OACF,iBAATwN,EACPI,EAAaJ,MACV,CACHI,EAAaJ,EAAM7F,MAAM,MACzB,IAAK,IAAIhG,EAAI,EAAGA,EAAIiM,EAAW5N,OAAQ2B,IACnCiM,EAAWjM,GAAKiM,EAAWjM,GAAGgG,MAAM,MAI5C,GAAI8F,IADJC,EAAWE,EAAW5N,QAElB,OAAO,EAEX,IAAK,IAAIE,EAAK,EAAGA,EAAKuN,EAAUvN,IAC5B,GAAiC,MAA7BhE,EAAMuE,OAAkB,WAA8C,MAAjCvE,EAAMuE,OAAkB,UAAEP,GAGnE,IAAK,IAAIE,EAAK,EAAGA,EAAKsN,EAAUtN,IAC5B,GAAIuN,EAAWzN,GAAIF,QAAU4N,EAAWxN,GAAIJ,OACxC,OAAO,EAInB,IAAK,IAAI4B,EAAI,EAAGA,EAAI6L,EAAU7L,IAC1B,GAAiC,MAA7B1F,EAAMuE,OAAkB,WAA6C,MAAhCvE,EAAMuE,OAAkB,UAAEmB,GAGnE,IAAK,IAAIE,EAAI,EAAGA,EAAI6L,EAAW,GAAG3N,OAAQ8B,IACtC,GAAIrF,EAAamF,EAAGE,EAAG6L,IAAelR,EAAamF,EAAGE,EAAG8L,GACrD,OAAO,EAInB,OAAO","file":"../../controllers/selection.js","sourcesContent":["define([\n    '../widgets/select',\n    './conditionformat',\n    '../methods/protection_methods',\n    '../methods/luckysheetConfigsetting',\n    '../widgets/tooltip',\n    '../methods/formula_methods',\n    '../methods/border',\n    '../methods/getdata',\n    '../methods/getRowlen',\n    '../methods/validate',\n    '../methods/format',\n    '../methods/get',\n    '../methods/cells',    \n    '../utils/util',\n    '../store',\n    '../locale/locale'\n], function (m_select, conditionformat, m_protection, luckysheetConfigsetting,tooltip, formula, m_border, m_getdata,cells, m_getRowlen, m_validate, m_format, m_get, m_util, Store, locale) {\n    'use strict';\n    const {selectHightlightShow, selectionCopyShow} = m_select;\n    const {checkProtectionLockedRangeList} = m_protection;\n    const {getBorderInfoCompute} = m_border;\n    const {getdatabyselection, getcellvalue, datagridgrowth} = m_getdata;\n    const {rowlenByRange} = m_getRowlen;\n    const {hasPartMC, isRealNum} = m_validate;\n    const isEditMode = luckysheetConfigsetting.isEditMode;\n    const {genarate, update} = m_format;\n    const {getSheetIndex} = m_get;\n    const {replaceHtml, getObjType, luckysheetfontformat} = m_util;\n    const selection = {\n        clearcopy: function (e) {\n            let clipboardData = window.clipboardData;    //for IE\n            //for IE\n            if (!clipboardData) {\n                // for chrome\n                if (!!e) {\n                    clipboardData = e.originalEvent.clipboardData;\n                }\n            }\n            let cpdata = ' ';\n            Store.luckysheet_selection_range = [];\n            selectionCopyShow(); \n            // Store.luckysheet_copy_save = {};\n            if (!clipboardData) {\n                let textarea = $('#luckysheet-copy-content').css('visibility', 'hidden');\n                textarea.val(cpdata);\n                textarea.focus();\n                textarea.select();    // 等50毫秒，keyPress事件发生了再去处理数据\n                // 等50毫秒，keyPress事件发生了再去处理数据\n                setTimeout(function () {\n                    textarea.blur().css('visibility', 'visible');\n                }, 10);\n            } else {\n                clipboardData.setData('Text', cpdata);\n                return false;    //否则设不生效\n            }\n        },\n        //否则设不生效\n        getHtmlBorderStyle: function (type, color) {\n            let style = '';\n            let borderType = {\n                '0': 'none',\n                '1': 'Thin',\n                '2': 'Hair',\n                '3': 'Dotted',\n                '4': 'Dashed',\n                '5': 'DashDot',\n                '6': 'DashDotDot',\n                '7': 'Double',\n                '8': 'Medium',\n                '9': 'MediumDashed',\n                '10': 'MediumDashDot',\n                '11': 'MediumDashDotDot',\n                '12': 'SlantedDashDot',\n                '13': 'Thick'\n            };\n            type = borderType[type.toString()];\n            if (type.indexOf('Medium') > -1) {\n                style += '1pt ';\n            } else if (type == 'Thick') {\n                style += '1.5pt ';\n            } else {\n                style += '0.5pt ';\n            }\n            if (type == 'Hair') {\n                style += 'double ';\n            } else if (type.indexOf('DashDotDot') > -1) {\n                style += 'dotted ';\n            } else if (type.indexOf('DashDot') > -1) {\n                style += 'dashed ';\n            } else if (type.indexOf('Dotted') > -1) {\n                style += 'dotted ';\n            } else if (type.indexOf('Dashed') > -1) {\n                style += 'dashed ';\n            } else {\n                style += 'solid ';\n            }\n            return style + color + ';';\n        },\n        copy: function (e) {\n            //copy事件\n            let clipboardData = window.clipboardData;    //for IE\n            //for IE\n            if (!clipboardData) {\n                // for chrome\n                clipboardData = e.originalEvent.clipboardData;\n            }\n            Store.luckysheet_selection_range = [];    //copy范围\n            //copy范围\n            let rowIndexArr = [], colIndexArr = [];\n            let copyRange = [], RowlChange = false, HasMC = false;\n            for (let s = 0; s < Store.luckysheet_select_save.length; s++) {\n                let range = Store.luckysheet_select_save[s];\n                let r1 = range.row[0], r2 = range.row[1];\n                let c1 = range.column[0], c2 = range.column[1];\n                for (let copyR = r1; copyR <= r2; copyR++) {\n                    if (Store.config['rowhidden'] != null && Store.config['rowhidden'][copyR] != null) {\n                        continue;\n                    }\n                    if (!rowIndexArr.includes(copyR)) {\n                        rowIndexArr.push(copyR);\n                    }\n                    if (Store.config['rowlen'] != null && copyR in Store.config['rowlen']) {\n                        RowlChange = true;\n                    }\n                    for (let copyC = c1; copyC <= c2; copyC++) {\n                        if (Store.config['colhidden'] != null && Store.config['colhidden'][copyC] != null) {\n                            continue;\n                        }\n                        if (!colIndexArr.includes(copyC)) {\n                            colIndexArr.push(copyC);\n                        }\n                        let cell = Store.flowdata[copyR][copyC];\n                        if (getObjType(cell) == 'object' && 'mc' in cell && cell.mc.rs != null) {\n                            HasMC = true;\n                        }\n                    }\n                }\n                Store.luckysheet_selection_range.push({\n                    'row': range.row,\n                    'column': range.column\n                });\n                copyRange.push({\n                    'row': range.row,\n                    'column': range.column\n                });\n            }\n            selectionCopyShow();    //luckysheet内copy保存\n            //luckysheet内copy保存\n            Store.luckysheet_copy_save = {\n                'dataSheetIndex': Store.currentSheetIndex,\n                'copyRange': copyRange,\n                'RowlChange': RowlChange,\n                'HasMC': HasMC\n            };    //copy范围数据拼接成table 赋给剪贴板\n            //copy范围数据拼接成table 赋给剪贴板\n            let _this = this;\n            let borderInfoCompute;\n            if (Store.config['borderInfo'] && Store.config['borderInfo'].length > 0) {\n                //边框\n                borderInfoCompute = getBorderInfoCompute();\n            }\n            let cpdata = '', d = Store.deepCopyFlowData(Store.flowdata);\n            let colgroup = '';    // rowIndexArr = rowIndexArr.sort();\n                                  // colIndexArr = colIndexArr.sort();\n            // rowIndexArr = rowIndexArr.sort();\n            // colIndexArr = colIndexArr.sort();\n            for (let i = 0; i < rowIndexArr.length; i++) {\n                let r = rowIndexArr[i];\n                if (Store.config['rowhidden'] != null && Store.config['rowhidden'][r] != null) {\n                    continue;\n                }\n                cpdata += '<tr>';\n                for (let j = 0; j < colIndexArr.length; j++) {\n                    let c = colIndexArr[j];\n                    if (Store.config['colhidden'] != null && Store.config['colhidden'][c] != null) {\n                        continue;\n                    }\n                    let column = '<td ${span} style=\"${style}\">';\n                    if (d[r] != null && d[r][c] != null) {\n                        let style = '', span = '';\n                        if (r == rowIndexArr[0]) {\n                            if (Store.config == null || Store.config['columnlen'] == null || Store.config['columnlen'][c.toString()] == null) {\n                                colgroup += '<colgroup width=\"72px\"></colgroup>';\n                            } else {\n                                colgroup += '<colgroup width=\"' + Store.config['columnlen'][c.toString()] + 'px\"></colgroup>';\n                            }\n                        }\n                        if (c == colIndexArr[0]) {\n                            if (Store.config == null || Store.config['rowlen'] == null || Store.config['rowlen'][r.toString()] == null) {\n                                style += 'height:19px;';\n                            } else {\n                                style += 'height:' + Store.config['rowlen'][r.toString()] + 'px;';\n                            }\n                        }\n                        let reg = /^(w|W)((0?)|(0\\.0+))$/;\n                        let c_value;\n                        if (d[r][c].ct != null && d[r][c].ct.fa != null && d[r][c].ct.fa.match(reg)) {\n                            c_value = getcellvalue(r, c, d);\n                        } else {\n                            c_value = getcellvalue(r, c, d, 'm');\n                        }\n                        style += cells.getStyleByCell(d, r, c);\n                        if (getObjType(d[r][c]) == 'object' && 'mc' in d[r][c]) {\n                            if ('rs' in d[r][c]['mc']) {\n                                span = 'rowspan=\"' + d[r][c]['mc'].rs + '\" colspan=\"' + d[r][c]['mc'].cs + '\"';    //边框\n                                //边框\n                                if (borderInfoCompute && borderInfoCompute[r + '_' + c]) {\n                                    let bl_obj = {\n                                            'color': {},\n                                            'style': {}\n                                        }, br_obj = {\n                                            'color': {},\n                                            'style': {}\n                                        }, bt_obj = {\n                                            'color': {},\n                                            'style': {}\n                                        }, bb_obj = {\n                                            'color': {},\n                                            'style': {}\n                                        };\n                                    for (let bd_r = r; bd_r < r + d[r][c]['mc'].rs; bd_r++) {\n                                        for (let bd_c = c; bd_c < c + d[r][c]['mc'].cs; bd_c++) {\n                                            if (bd_r == r && borderInfoCompute[bd_r + '_' + bd_c] && borderInfoCompute[bd_r + '_' + bd_c].t) {\n                                                let linetype = borderInfoCompute[bd_r + '_' + bd_c].t.style;\n                                                let bcolor = borderInfoCompute[bd_r + '_' + bd_c].t.color;\n                                                if (bt_obj['style'][linetype] == null) {\n                                                    bt_obj['style'][linetype] = 1;\n                                                } else {\n                                                    bt_obj['style'][linetype] = bt_obj['style'][linetype] + 1;\n                                                }\n                                                if (bt_obj['color'][bcolor] == null) {\n                                                    bt_obj['color'][bcolor] = 1;\n                                                } else {\n                                                    bt_obj['color'][bcolor] = bt_obj['color'][bcolor] + 1;\n                                                }\n                                            }\n                                            if (bd_r == r + d[r][c]['mc'].rs - 1 && borderInfoCompute[bd_r + '_' + bd_c] && borderInfoCompute[bd_r + '_' + bd_c].b) {\n                                                let linetype = borderInfoCompute[bd_r + '_' + bd_c].b.style;\n                                                let bcolor = borderInfoCompute[bd_r + '_' + bd_c].b.color;\n                                                if (bb_obj['style'][linetype] == null) {\n                                                    bb_obj['style'][linetype] = 1;\n                                                } else {\n                                                    bb_obj['style'][linetype] = bb_obj['style'][linetype] + 1;\n                                                }\n                                                if (bb_obj['color'][bcolor] == null) {\n                                                    bb_obj['color'][bcolor] = 1;\n                                                } else {\n                                                    bb_obj['color'][bcolor] = bb_obj['color'][bcolor] + 1;\n                                                }\n                                            }\n                                            if (bd_c == c && borderInfoCompute[bd_r + '_' + bd_c] && borderInfoCompute[bd_r + '_' + bd_c].l) {\n                                                let linetype = borderInfoCompute[r + '_' + c].l.style;\n                                                let bcolor = borderInfoCompute[bd_r + '_' + bd_c].l.color;\n                                                if (bl_obj['style'][linetype] == null) {\n                                                    bl_obj['style'][linetype] = 1;\n                                                } else {\n                                                    bl_obj['style'][linetype] = bl_obj['style'][linetype] + 1;\n                                                }\n                                                if (bl_obj['color'][bcolor] == null) {\n                                                    bl_obj['color'][bcolor] = 1;\n                                                } else {\n                                                    bl_obj['color'][bcolor] = bl_obj['color'][bcolor] + 1;\n                                                }\n                                            }\n                                            if (bd_c == c + d[r][c]['mc'].cs - 1 && borderInfoCompute[bd_r + '_' + bd_c] && borderInfoCompute[bd_r + '_' + bd_c].r) {\n                                                let linetype = borderInfoCompute[bd_r + '_' + bd_c].r.style;\n                                                let bcolor = borderInfoCompute[bd_r + '_' + bd_c].r.color;\n                                                if (br_obj['style'][linetype] == null) {\n                                                    br_obj['style'][linetype] = 1;\n                                                } else {\n                                                    br_obj['style'][linetype] = br_obj['style'][linetype] + 1;\n                                                }\n                                                if (br_obj['color'][bcolor] == null) {\n                                                    br_obj['color'][bcolor] = 1;\n                                                } else {\n                                                    br_obj['color'][bcolor] = br_obj['color'][bcolor] + 1;\n                                                }\n                                            }\n                                        }\n                                    }\n                                    let rowlen = d[r][c]['mc'].rs, collen = d[r][c]['mc'].cs;\n                                    if (JSON.stringify(bl_obj).length > 23) {\n                                        let bl_color = null, bl_style = null;\n                                        for (let x in bl_obj.color) {\n                                            if (bl_obj.color[x] >= rowlen / 2) {\n                                                bl_color = x;\n                                            }\n                                        }\n                                        for (let x in bl_obj.style) {\n                                            if (bl_obj.style[x] >= rowlen / 2) {\n                                                bl_style = x;\n                                            }\n                                        }\n                                        if (bl_color != null && bl_style != null) {\n                                            style += 'border-left:' + _this.getHtmlBorderStyle(bl_style, bl_color);\n                                        }\n                                    }\n                                    if (JSON.stringify(br_obj).length > 23) {\n                                        let br_color = null, br_style = null;\n                                        for (let x in br_obj.color) {\n                                            if (br_obj.color[x] >= rowlen / 2) {\n                                                br_color = x;\n                                            }\n                                        }\n                                        for (let x in br_obj.style) {\n                                            if (br_obj.style[x] >= rowlen / 2) {\n                                                br_style = x;\n                                            }\n                                        }\n                                        if (br_color != null && br_style != null) {\n                                            style += 'border-right:' + _this.getHtmlBorderStyle(br_style, br_color);\n                                        }\n                                    }\n                                    if (JSON.stringify(bt_obj).length > 23) {\n                                        let bt_color = null, bt_style = null;\n                                        for (let x in bt_obj.color) {\n                                            if (bt_obj.color[x] >= collen / 2) {\n                                                bt_color = x;\n                                            }\n                                        }\n                                        for (let x in bt_obj.style) {\n                                            if (bt_obj.style[x] >= collen / 2) {\n                                                bt_style = x;\n                                            }\n                                        }\n                                        if (bt_color != null && bt_style != null) {\n                                            style += 'border-top:' + _this.getHtmlBorderStyle(bt_style, bt_color);\n                                        }\n                                    }\n                                    if (JSON.stringify(bb_obj).length > 23) {\n                                        let bb_color = null, bb_style = null;\n                                        for (let x in bb_obj.color) {\n                                            if (bb_obj.color[x] >= collen / 2) {\n                                                bb_color = x;\n                                            }\n                                        }\n                                        for (let x in bb_obj.style) {\n                                            if (bb_obj.style[x] >= collen / 2) {\n                                                bb_style = x;\n                                            }\n                                        }\n                                        if (bb_color != null && bb_style != null) {\n                                            style += 'border-bottom:' + _this.getHtmlBorderStyle(bb_style, bb_color);\n                                        }\n                                    }\n                                }\n                            } else {\n                                continue;\n                            }\n                        } else {\n                            //边框\n                            if (borderInfoCompute && borderInfoCompute[r + '_' + c]) {\n                                //左边框\n                                if (borderInfoCompute[r + '_' + c].l) {\n                                    let linetype = borderInfoCompute[r + '_' + c].l.style;\n                                    let bcolor = borderInfoCompute[r + '_' + c].l.color;\n                                    style += 'border-left:' + _this.getHtmlBorderStyle(linetype, bcolor);\n                                }    //右边框\n                                //右边框\n                                if (borderInfoCompute[r + '_' + c].r) {\n                                    let linetype = borderInfoCompute[r + '_' + c].r.style;\n                                    let bcolor = borderInfoCompute[r + '_' + c].r.color;\n                                    style += 'border-right:' + _this.getHtmlBorderStyle(linetype, bcolor);\n                                }    //下边框\n                                //下边框\n                                if (borderInfoCompute[r + '_' + c].b) {\n                                    let linetype = borderInfoCompute[r + '_' + c].b.style;\n                                    let bcolor = borderInfoCompute[r + '_' + c].b.color;\n                                    style += 'border-bottom:' + _this.getHtmlBorderStyle(linetype, bcolor);\n                                }    //上边框\n                                //上边框\n                                if (borderInfoCompute[r + '_' + c].t) {\n                                    let linetype = borderInfoCompute[r + '_' + c].t.style;\n                                    let bcolor = borderInfoCompute[r + '_' + c].t.color;\n                                    style += 'border-top:' + _this.getHtmlBorderStyle(linetype, bcolor);\n                                }\n                            }\n                        }\n                        column = replaceHtml(column, {\n                            'style': style,\n                            'span': span\n                        });\n                        if (c_value == null) {\n                            c_value = getcellvalue(r, c, d);\n                        }\n                        if (c_value == null) {\n                            c_value = '';\n                        }\n                        column += c_value;\n                    } else {\n                        let style = '';    //边框\n                        //边框\n                        if (borderInfoCompute && borderInfoCompute[r + '_' + c]) {\n                            //左边框\n                            if (borderInfoCompute[r + '_' + c].l) {\n                                let linetype = borderInfoCompute[r + '_' + c].l.style;\n                                let bcolor = borderInfoCompute[r + '_' + c].l.color;\n                                style += 'border-left:' + _this.getHtmlBorderStyle(linetype, bcolor);\n                            }    //右边框\n                            //右边框\n                            if (borderInfoCompute[r + '_' + c].r) {\n                                let linetype = borderInfoCompute[r + '_' + c].r.style;\n                                let bcolor = borderInfoCompute[r + '_' + c].r.color;\n                                style += 'border-right:' + _this.getHtmlBorderStyle(linetype, bcolor);\n                            }    //下边框\n                            //下边框\n                            if (borderInfoCompute[r + '_' + c].b) {\n                                let linetype = borderInfoCompute[r + '_' + c].b.style;\n                                let bcolor = borderInfoCompute[r + '_' + c].b.color;\n                                style += 'border-bottom:' + _this.getHtmlBorderStyle(linetype, bcolor);\n                            }    //上边框\n                            //上边框\n                            if (borderInfoCompute[r + '_' + c].t) {\n                                let linetype = borderInfoCompute[r + '_' + c].t.style;\n                                let bcolor = borderInfoCompute[r + '_' + c].t.color;\n                                style += 'border-top:' + _this.getHtmlBorderStyle(linetype, bcolor);\n                            }\n                        }\n                        column += '';\n                        if (r == rowIndexArr[0]) {\n                            if (Store.config == null || Store.config['columnlen'] == null || Store.config['columnlen'][c.toString()] == null) {\n                                colgroup += '<colgroup width=\"72px\"></colgroup>';\n                            } else {\n                                colgroup += '<colgroup width=\"' + Store.config['columnlen'][c.toString()] + 'px\"></colgroup>';\n                            }\n                        }\n                        if (c == colIndexArr[0]) {\n                            if (Store.config == null || Store.config['rowlen'] == null || Store.config['rowlen'][r.toString()] == null) {\n                                style += 'height:19px;';\n                            } else {\n                                style += 'height:' + Store.config['rowlen'][r.toString()] + 'px;';\n                            }\n                        }\n                        column = replaceHtml(column, {\n                            'style': style,\n                            'span': ''\n                        });\n                        column += '';\n                    }\n                    column += '</td>';\n                    cpdata += column;\n                }\n                cpdata += '</tr>';\n            }\n            cpdata = '<table data-type=\"luckysheet_copy_action_table\">' + colgroup + cpdata + '</table>';\n            Store.iscopyself = true;\n            if (!clipboardData) {\n                // let textarea = $(\"#luckysheet-copy-content\");\n                // textarea.html(cpdata);\n                // textarea.focus();\n                // textarea.select();\n                // document.execCommand(\"selectAll\");\n                // document.execCommand(\"Copy\");\n                // 等50毫秒，keyPress事件发生了再去处理数据\n                // setTimeout(function () {\n                //     $(\"#luckysheet-copy-content\").blur();\n                // }, 10);\n                var oInput = document.createElement('input');\n                oInput.setAttribute('readonly', 'readonly');\n                oInput.value = cpdata;\n                document.body.appendChild(oInput);\n                oInput.select();    // 选择对象\n                // 选择对象\n                document.execCommand('Copy');\n                oInput.style.display = 'none';\n                document.body.removeChild(oInput);\n            } else {\n                clipboardData.setData('Text', cpdata);\n                return false;    //否则设不生效\n            }\n        },\n        //否则设不生效\n        copybyformat: function (e, txt) {\n            //copy事件\n            let clipboardData = window.clipboardData;    //for IE\n            //for IE\n            if (!clipboardData) {\n                // for chrome\n                clipboardData = e.originalEvent && e.originalEvent.clipboardData;\n            }\n            Store.luckysheet_selection_range = [{\n                    'row': Store.luckysheet_select_save[0].row,\n                    'column': Store.luckysheet_select_save[0].column\n                }];\n            selectionCopyShow();\n            let cpdata = txt;\n            Store.iscopyself = true;\n            if (!clipboardData) {\n                let textarea = $('#luckysheet-copy-content');\n                textarea.text(cpdata);\n                textarea.focus();\n                textarea.select();\n                document.execCommand('selectAll');\n                document.execCommand('Copy');    // 等50毫秒，keyPress事件发生了再去处理数据\n                // 等50毫秒，keyPress事件发生了再去处理数据\n                setTimeout(function () {\n                    textarea.blur();\n                }, 10);\n            } else {\n                clipboardData.setData('Text', cpdata);\n                return false;    //否则设不生效\n            }\n        },\n        //否则设不生效\n        isPasteAction: false,\n        paste: function (e, triggerType) {\n            //paste事件\n            let _this = this;\n            if (Store.allowEdit === false) {\n                return;\n            }\n            const _locale = locale();\n            const local_drag = _locale.drag;\n            let textarea = $('#luckysheet-copy-content');\n            textarea.focus();\n            textarea.select();    // 等50毫秒，keyPress事件发生了再去处理数据\n            // 等50毫秒，keyPress事件发生了再去处理数据\n            setTimeout(function () {\n                let data = textarea.html();\n                if (data.indexOf('luckysheet_copy_action_table') > -1 && Store.luckysheet_copy_save['copyRange'] != null && Store.luckysheet_copy_save['copyRange'].length > 0) {\n                    if (Store.luckysheet_paste_iscut) {\n                        Store.luckysheet_paste_iscut = false;\n                        _this.pasteHandlerOfCutPaste(Store.luckysheet_copy_save);\n                        _this.clearcopy(e);\n                    } else {\n                        _this.pasteHandlerOfCopyPaste(Store.luckysheet_copy_save);\n                    }\n                } else if (triggerType != 'btn') {\n                    _this.pasteHandler(data);\n                } else {\n                    if (isEditMode()) {\n                        alert(local_drag.pasteMustKeybordAlert);\n                    } else {\n                        tooltip.info(local_drag.pasteMustKeybordAlertHTMLTitle, local_drag.pasteMustKeybordAlertHTML);\n                    }\n                }\n            }, 10);\n        },\n        pasteHandler: function (data, borderInfo) {\n            if (!checkProtectionLockedRangeList(Store.luckysheet_select_save, Store.currentSheetIndex)) {\n                return;\n            }\n            if (Store.allowEdit === false) {\n                return;\n            }\n            if (Store.luckysheet_select_save.length > 1) {\n                if (isEditMode()) {\n                    alert('不能对多重选择区域执行此操作\\uFF0C请选择单个区域\\uFF0C然后再试');\n                } else {\n                    tooltip.info('<i class=\"fa fa-exclamation-triangle\"></i>提示', '不能对多重选择区域执行此操作\\uFF0C请选择单个区域\\uFF0C然后再试');\n                }\n            }\n            if (typeof data == 'object') {\n                if (data.length == 0) {\n                    return;\n                }\n                ;\n                let cfg = $.extend(true, {}, Store.config);\n                if (cfg['merge'] == null) {\n                    cfg['merge'] = {};\n                }\n                if (JSON.stringify(borderInfo).length > 2 && cfg['borderInfo'] == null) {\n                    cfg['borderInfo'] = [];\n                }\n                let copyh = data.length, copyc = data[0].length;\n                let minh = Store.luckysheet_select_save[0].row[0],\n                    //应用范围首尾行\n                    maxh = minh + copyh - 1;\n                let minc = Store.luckysheet_select_save[0].column[0],\n                    //应用范围首尾列\n                    maxc = minc + copyc - 1;    //应用范围包含部分合并单元格，则return提示\n                //应用范围包含部分合并单元格，则return提示\n                let has_PartMC = false;\n                if (cfg['merge'] != null) {\n                    has_PartMC = hasPartMC(cfg, minh, maxh, minc, maxc);\n                }\n                if (has_PartMC) {\n                    if (isEditMode()) {\n                        alert('不能对合并单元格做部分更改');\n                    } else {\n                        tooltip.info('<i class=\"fa fa-exclamation-triangle\"></i>提示', '不能对合并单元格做部分更改');\n                    }\n                    return;\n                }\n                let d = Store.deepCopyFlowData(Store.flowdata);    //取数据\n                //取数据\n                let rowMaxLength = d.length;\n                let cellMaxLength = d[0].length;    //若应用范围超过最大行或最大列，增加行列\n                //若应用范围超过最大行或最大列，增加行列\n                let addr = maxh - rowMaxLength + 1, addc = maxc - cellMaxLength + 1;\n                if (addr > 0 || addc > 0) {\n                    d = datagridgrowth([].concat(d), addr, addc, true);\n                }\n                if (cfg['rowlen'] == null) {\n                    cfg['rowlen'] = {};\n                }\n                let RowlChange = false;\n                let offsetMC = {};\n                for (let h = minh; h <= maxh; h++) {\n                    let x = [].concat(d[h]);\n                    let currentRowLen = Store.defaultrowlen;\n                    if (cfg['rowlen'][h] != null) {\n                        currentRowLen = cfg['rowlen'][h];\n                    }\n                    for (let c = minc; c <= maxc; c++) {\n                        if (getObjType(x[c]) == 'object' && 'mc' in x[c]) {\n                            if ('rs' in x[c].mc) {\n                                delete cfg['merge'][x[c]['mc'].r + '_' + x[c]['mc'].c];\n                            }\n                            delete x[c].mc;\n                        }\n                        let value = null;\n                        if (data[h - minh] != null && data[h - minh][c - minc] != null) {\n                            value = data[h - minh][c - minc];\n                        }\n                        x[c] = $.extend(true, {}, value);\n                        if (value != null && 'mc' in x[c]) {\n                            if (x[c]['mc'].rs != null) {\n                                x[c]['mc'].r = h;\n                                x[c]['mc'].c = c;\n                                cfg['merge'][x[c]['mc'].r + '_' + x[c]['mc'].c] = x[c]['mc'];\n                                offsetMC[value['mc'].r + '_' + value['mc'].c] = [\n                                    x[c]['mc'].r,\n                                    x[c]['mc'].c\n                                ];\n                            } else {\n                                x[c] = {\n                                    'mc': {\n                                        r: offsetMC[value['mc'].r + '_' + value['mc'].c][0],\n                                        c: offsetMC[value['mc'].r + '_' + value['mc'].c][1]\n                                    }\n                                };\n                            }\n                        }\n                        if (borderInfo[h - minh + '_' + (c - minc)]) {\n                            let bd_obj = {\n                                'rangeType': 'cell',\n                                'value': {\n                                    'row_index': h,\n                                    'col_index': c,\n                                    'l': borderInfo[h - minh + '_' + (c - minc)].l,\n                                    'r': borderInfo[h - minh + '_' + (c - minc)].r,\n                                    't': borderInfo[h - minh + '_' + (c - minc)].t,\n                                    'b': borderInfo[h - minh + '_' + (c - minc)].b\n                                }\n                            };\n                            cfg['borderInfo'].push(bd_obj);\n                        }\n                        let fontset = luckysheetfontformat(x[c]);\n                        let oneLineTextHeight = cells.getTextSize('田', fontset)[1];    //比较计算高度和当前高度取最大高度\n                        //比较计算高度和当前高度取最大高度\n                        if (oneLineTextHeight > currentRowLen) {\n                            currentRowLen = oneLineTextHeight;\n                            RowlChange = true;\n                        }\n                    }\n                    d[h] = x;\n                    if (currentRowLen != Store.defaultrowlen) {\n                        cfg['rowlen'][h] = currentRowLen;\n                    }\n                }\n                Store.luckysheet_select_save = [{\n                        'row': [\n                            minh,\n                            maxh\n                        ],\n                        'column': [\n                            minc,\n                            maxc\n                        ]\n                    }];\n                if (addr > 0 || addc > 0 || RowlChange) {\n                    let allParam = {\n                        'cfg': cfg,\n                        'RowlChange': true\n                    };\n                    Store.refreshRange(d, Store.luckysheet_select_save, allParam);\n                } else {\n                    let allParam = { 'cfg': cfg };\n                    Store.refreshRange(d, Store.luckysheet_select_save, allParam);\n                    selectHightlightShow();\n                }\n            } else {\n                data = data.replace(/\\r/g, '');\n                let dataChe = [];\n                let che = data.split('\\n'), colchelen = che[0].split('\\t').length;\n                for (let i = 0; i < che.length; i++) {\n                    if (che[i].split('\\t').length < colchelen) {\n                        continue;\n                    }\n                    dataChe.push(che[i].split('\\t'));\n                }\n                let d = Store.deepCopyFlowData(Store.flowdata);    //取数据\n                //取数据\n                let last = Store.luckysheet_select_save[Store.luckysheet_select_save.length - 1];\n                let curR = last['row'] == null ? 0 : last['row'][0];\n                let curC = last['column'] == null ? 0 : last['column'][0];\n                let rlen = dataChe.length, clen = dataChe[0].length;    //应用范围包含部分合并单元格，则return提示\n                //应用范围包含部分合并单元格，则return提示\n                let has_PartMC = false;\n                if (Store.config['merge'] != null) {\n                    has_PartMC = hasPartMC(Store.config, curR, curR + rlen - 1, curC, curC + clen - 1);\n                }\n                if (has_PartMC) {\n                    if (isEditMode()) {\n                        alert('不能对合并单元格做部分更改');\n                    } else {\n                        tooltip.info('<i class=\"fa fa-exclamation-triangle\"></i>提示', '不能对合并单元格做部分更改');\n                    }\n                    return;\n                }\n                let addr = curR + rlen - d.length, addc = curC + clen - d[0].length;\n                if (addr > 0 || addc > 0) {\n                    d = datagridgrowth([].concat(d), addr, addc, true);\n                }\n                for (let r = 0; r < rlen; r++) {\n                    let x = [].concat(d[r + curR]);\n                    for (let c = 0; c < clen; c++) {\n                        let originCell = x[c + curC];\n                        let value = dataChe[r][c];\n                        if (isRealNum(value)) {\n                            // 如果单元格设置了纯文本格式，那么就不要转成数值类型了，防止数值过大自动转成科学计数法\n                            if (originCell && originCell.ct && originCell.ct.fa === '@') {\n                                value = String(value);\n                            } else {\n                                value = parseFloat(value);\n                            }\n                        }\n                        if (originCell instanceof Object) {\n                            originCell.v = value;\n                            if (originCell.ct != null && originCell.ct.fa != null) {\n                                originCell.m = update(originCell['ct']['fa'], value);\n                            } else {\n                                originCell.m = value;\n                            }\n                            if (originCell.f != null && originCell.f.length > 0) {\n                                originCell.f = '';\n                                formula.delFunctionGroup(r + curR, c + curC, Store.currentSheetIndex);\n                            }\n                        } else {\n                            let cell = {};\n                            let mask = genarate(value);\n                            cell.v = mask[2];\n                            cell.ct = mask[1];\n                            cell.m = mask[0];\n                            x[c + curC] = cell;\n                        }\n                    }\n                    d[r + curR] = x;\n                }\n                last['row'] = [\n                    curR,\n                    curR + rlen - 1\n                ];\n                last['column'] = [\n                    curC,\n                    curC + clen - 1\n                ];\n                if (addr > 0 || addc > 0) {\n                    let allParam = { 'RowlChange': true };\n                    Store.refreshRange(d, Store.luckysheet_select_save, allParam);\n                } else {\n                    Store.refreshRange(d, Store.luckysheet_select_save);\n                    selectHightlightShow();\n                }\n            }\n        },\n        pasteHandlerOfCutPaste: function (copyRange) {\n            if (!checkProtectionLockedRangeList(Store.luckysheet_select_save, Store.currentSheetIndex)) {\n                return;\n            }\n            if (Store.allowEdit === false) {\n                return;\n            }\n            let cfg = $.extend(true, {}, Store.config);\n            if (cfg['merge'] == null) {\n                cfg['merge'] = {};\n            }    //复制范围\n            //复制范围\n            let copyHasMC = copyRange['HasMC'];\n            let copyRowlChange = copyRange['RowlChange'];\n            let copySheetIndex = copyRange['dataSheetIndex'];\n            let c_r1 = copyRange['copyRange'][0].row[0], c_r2 = copyRange['copyRange'][0].row[1], c_c1 = copyRange['copyRange'][0].column[0], c_c2 = copyRange['copyRange'][0].column[1];\n            let copyData = $.extend(true, [], getdatabyselection({\n                'row': [\n                    c_r1,\n                    c_r2\n                ],\n                'column': [\n                    c_c1,\n                    c_c2\n                ]\n            }, copySheetIndex));\n            let copyh = copyData.length, copyc = copyData[0].length;    //应用范围\n            //应用范围\n            let last = Store.luckysheet_select_save[Store.luckysheet_select_save.length - 1];\n            let minh = last['row_focus'], maxh = minh + copyh - 1;    //应用范围首尾行\n            //应用范围首尾行\n            let minc = last['column_focus'], maxc = minc + copyc - 1;    //应用范围首尾列\n                                                                         //应用范围包含部分合并单元格，则提示\n            //应用范围首尾列\n            //应用范围包含部分合并单元格，则提示\n            let has_PartMC = false;\n            if (cfg['merge'] != null) {\n                has_PartMC = hasPartMC(cfg, minh, maxh, minc, maxc);\n            }\n            if (has_PartMC) {\n                if (isEditMode()) {\n                    alert('不能对合并单元格做部分更改');\n                } else {\n                    tooltip.info('<i class=\"fa fa-exclamation-triangle\"></i>提示', '不能对合并单元格做部分更改');\n                }\n                return;\n            }\n            let d = Store.deepCopyFlowData(Store.flowdata);    //取数据\n            //取数据\n            let rowMaxLength = d.length;\n            let cellMaxLength = d[0].length;\n            let addr = copyh + minh - rowMaxLength, addc = copyc + minc - cellMaxLength;\n            if (addr > 0 || addc > 0) {\n                d = datagridgrowth([].concat(d), addr, addc, true);\n            }\n            let borderInfoCompute = getBorderInfoCompute(copySheetIndex);\n            let c_dataVerification = $.extend(true, {}, Store.luckysheetfile[getSheetIndex(copySheetIndex)]['dataVerification']);\n            let dataVerification = $.extend(true, {}, Store.luckysheetfile[getSheetIndex(Store.currentSheetIndex)]['dataVerification']);    //剪切粘贴在当前表操作，删除剪切范围内数据、合并单元格和数据验证\n            //剪切粘贴在当前表操作，删除剪切范围内数据、合并单元格和数据验证\n            if (Store.currentSheetIndex == copySheetIndex) {\n                for (let i = c_r1; i <= c_r2; i++) {\n                    for (let j = c_c1; j <= c_c2; j++) {\n                        let cell = d[i][j];\n                        if (getObjType(cell) == 'object' && 'mc' in cell) {\n                            if ('rs' in cell['mc']) {\n                                delete cfg['merge'][cell['mc'].r + '_' + cell['mc'].c];\n                            }\n                            delete cell['mc'];\n                        }\n                        d[i][j] = null;\n                        delete dataVerification[i + '_' + j];\n                    }\n                }    //边框\n                //边框\n                if (cfg['borderInfo'] && cfg['borderInfo'].length > 0) {\n                    let source_borderInfo = [];\n                    for (let i = 0; i < cfg['borderInfo'].length; i++) {\n                        let bd_rangeType = cfg['borderInfo'][i].rangeType;\n                        if (bd_rangeType == 'range') {\n                            let bd_range = cfg['borderInfo'][i].range;\n                            let bd_emptyRange = [];\n                            for (let j = 0; j < bd_range.length; j++) {\n                                bd_emptyRange = bd_emptyRange.concat(conditionformat.CFSplitRange(bd_range[j], {\n                                    'row': [\n                                        c_r1,\n                                        c_r2\n                                    ],\n                                    'column': [\n                                        c_c1,\n                                        c_c2\n                                    ]\n                                }, {\n                                    'row': [\n                                        minh,\n                                        maxh\n                                    ],\n                                    'column': [\n                                        minc,\n                                        maxc\n                                    ]\n                                }, 'restPart'));\n                            }\n                            cfg['borderInfo'][i].range = bd_emptyRange;\n                            source_borderInfo.push(cfg['borderInfo'][i]);\n                        } else if (bd_rangeType == 'cell') {\n                            let bd_r = cfg['borderInfo'][i].value.row_index;\n                            let bd_c = cfg['borderInfo'][i].value.col_index;\n                            if (!(bd_r >= c_r1 && bd_r <= c_r2 && bd_c >= c_c1 && bd_c <= c_c2)) {\n                                source_borderInfo.push(cfg['borderInfo'][i]);\n                            }\n                        }\n                    }\n                    cfg['borderInfo'] = source_borderInfo;\n                }\n            }\n            let offsetMC = {};\n            for (let h = minh; h <= maxh; h++) {\n                let x = [].concat(d[h]);\n                for (let c = minc; c <= maxc; c++) {\n                    if (borderInfoCompute[c_r1 + h - minh + '_' + (c_c1 + c - minc)]) {\n                        let bd_obj = {\n                            'rangeType': 'cell',\n                            'value': {\n                                'row_index': h,\n                                'col_index': c,\n                                'l': borderInfoCompute[c_r1 + h - minh + '_' + (c_c1 + c - minc)].l,\n                                'r': borderInfoCompute[c_r1 + h - minh + '_' + (c_c1 + c - minc)].r,\n                                't': borderInfoCompute[c_r1 + h - minh + '_' + (c_c1 + c - minc)].t,\n                                'b': borderInfoCompute[c_r1 + h - minh + '_' + (c_c1 + c - minc)].b\n                            }\n                        };\n                        if (cfg['borderInfo'] == null) {\n                            cfg['borderInfo'] = [];\n                        }\n                        cfg['borderInfo'].push(bd_obj);\n                    } else if (borderInfoCompute[h + '_' + c]) {\n                        let bd_obj = {\n                            'rangeType': 'cell',\n                            'value': {\n                                'row_index': h,\n                                'col_index': c,\n                                'l': null,\n                                'r': null,\n                                't': null,\n                                'b': null\n                            }\n                        };\n                        if (cfg['borderInfo'] == null) {\n                            cfg['borderInfo'] = [];\n                        }\n                        cfg['borderInfo'].push(bd_obj);\n                    }    //数据验证 剪切\n                    //数据验证 剪切\n                    if (c_dataVerification[c_r1 + h - minh + '_' + (c_c1 + c - minc)]) {\n                        dataVerification[h + '_' + c] = c_dataVerification[c_r1 + h - minh + '_' + (c_c1 + c - minc)];\n                    }\n                    if (getObjType(x[c]) == 'object' && 'mc' in x[c]) {\n                        if ('rs' in x[c].mc) {\n                            delete cfg['merge'][x[c]['mc'].r + '_' + x[c]['mc'].c];\n                        }\n                        delete x[c].mc;\n                    }\n                    let value = null;\n                    if (copyData[h - minh] != null && copyData[h - minh][c - minc] != null) {\n                        value = copyData[h - minh][c - minc];\n                    }\n                    x[c] = $.extend(true, {}, value);\n                    if (value != null && copyHasMC && 'mc' in x[c]) {\n                        if (x[c]['mc'].rs != null) {\n                            x[c]['mc'].r = h;\n                            x[c]['mc'].c = c;\n                            cfg['merge'][x[c]['mc'].r + '_' + x[c]['mc'].c] = x[c]['mc'];\n                            offsetMC[value['mc'].r + '_' + value['mc'].c] = [\n                                x[c]['mc'].r,\n                                x[c]['mc'].c\n                            ];\n                        } else {\n                            x[c] = {\n                                'mc': {\n                                    r: offsetMC[value['mc'].r + '_' + value['mc'].c][0],\n                                    c: offsetMC[value['mc'].r + '_' + value['mc'].c][1]\n                                }\n                            };\n                        }\n                    }\n                }\n                d[h] = x;\n            }\n            last['row'] = [\n                minh,\n                maxh\n            ];\n            last['column'] = [\n                minc,\n                maxc\n            ];    //若有行高改变，重新计算行高改变\n            //若有行高改变，重新计算行高改变\n            if (copyRowlChange) {\n                if (Store.currentSheetIndex != copySheetIndex) {\n                    cfg = rowlenByRange(d, minh, maxh, cfg);\n                } else {\n                    cfg = rowlenByRange(d, c_r1, c_r2, cfg);\n                    cfg = rowlenByRange(d, minh, maxh, cfg);\n                }\n            }\n            let source, target;\n            if (Store.currentSheetIndex != copySheetIndex) {\n                //跨表操作\n                let sourceData = $.extend(true, [], Store.luckysheetfile[getSheetIndex(copySheetIndex)]['data']);\n                let sourceConfig = $.extend(true, {}, Store.luckysheetfile[getSheetIndex(copySheetIndex)]['config']);\n                let sourceCurData = $.extend(true, [], sourceData);\n                let sourceCurConfig = $.extend(true, {}, sourceConfig);\n                if (sourceCurConfig['merge'] == null) {\n                    sourceCurConfig['merge'] = {};\n                }\n                for (let source_r = c_r1; source_r <= c_r2; source_r++) {\n                    for (let source_c = c_c1; source_c <= c_c2; source_c++) {\n                        let cell = sourceCurData[source_r][source_c];\n                        if (getObjType(cell) == 'object' && 'mc' in cell) {\n                            if ('rs' in cell['mc']) {\n                                delete sourceCurConfig['merge'][cell['mc'].r + '_' + cell['mc'].c];\n                            }\n                            delete cell['mc'];\n                        }\n                        sourceCurData[source_r][source_c] = null;\n                    }\n                }\n                if (copyRowlChange) {\n                    sourceCurConfig = rowlenByRange(sourceCurData, c_r1, c_r2, sourceCurConfig);\n                }    //边框\n                //边框\n                if (sourceCurConfig['borderInfo'] && sourceCurConfig['borderInfo'].length > 0) {\n                    let source_borderInfo = [];\n                    for (let i = 0; i < sourceCurConfig['borderInfo'].length; i++) {\n                        let bd_rangeType = sourceCurConfig['borderInfo'][i].rangeType;\n                        if (bd_rangeType == 'range') {\n                            let bd_range = sourceCurConfig['borderInfo'][i].range;\n                            let bd_emptyRange = [];\n                            for (let j = 0; j < bd_range.length; j++) {\n                                bd_emptyRange = bd_emptyRange.concat(conditionformat.CFSplitRange(bd_range[j], {\n                                    'row': [\n                                        c_r1,\n                                        c_r2\n                                    ],\n                                    'column': [\n                                        c_c1,\n                                        c_c2\n                                    ]\n                                }, {\n                                    'row': [\n                                        minh,\n                                        maxh\n                                    ],\n                                    'column': [\n                                        minc,\n                                        maxc\n                                    ]\n                                }, 'restPart'));\n                            }\n                            sourceCurConfig['borderInfo'][i].range = bd_emptyRange;\n                            source_borderInfo.push(sourceCurConfig['borderInfo'][i]);\n                        } else if (bd_rangeType == 'cell') {\n                            let bd_r = sourceCurConfig['borderInfo'][i].value.row_index;\n                            let bd_c = sourceCurConfig['borderInfo'][i].value.col_index;\n                            if (!(bd_r >= c_r1 && bd_r <= c_r2 && bd_c >= c_c1 && bd_c <= c_c2)) {\n                                source_borderInfo.push(sourceCurConfig['borderInfo'][i]);\n                            }\n                        }\n                    }\n                    sourceCurConfig['borderInfo'] = source_borderInfo;\n                }    //条件格式\n                //条件格式\n                let source_cdformat = $.extend(true, [], Store.luckysheetfile[getSheetIndex(copySheetIndex)]['luckysheet_conditionformat_save']);\n                let source_curCdformat = $.extend(true, [], source_cdformat);\n                let ruleArr = [];\n                if (source_curCdformat != null && source_curCdformat.length > 0) {\n                    for (let i = 0; i < source_curCdformat.length; i++) {\n                        let source_curCdformat_cellrange = source_curCdformat[i].cellrange;\n                        let emptyRange = [];\n                        let emptyRange2 = [];\n                        for (let j = 0; j < source_curCdformat_cellrange.length; j++) {\n                            let range = conditionformat.CFSplitRange(source_curCdformat_cellrange[j], {\n                                'row': [\n                                    c_r1,\n                                    c_r2\n                                ],\n                                'column': [\n                                    c_c1,\n                                    c_c2\n                                ]\n                            }, {\n                                'row': [\n                                    minh,\n                                    maxh\n                                ],\n                                'column': [\n                                    minc,\n                                    maxc\n                                ]\n                            }, 'restPart');\n                            emptyRange = emptyRange.concat(range);\n                            let range2 = conditionformat.CFSplitRange(source_curCdformat_cellrange[j], {\n                                'row': [\n                                    c_r1,\n                                    c_r2\n                                ],\n                                'column': [\n                                    c_c1,\n                                    c_c2\n                                ]\n                            }, {\n                                'row': [\n                                    minh,\n                                    maxh\n                                ],\n                                'column': [\n                                    minc,\n                                    maxc\n                                ]\n                            }, 'operatePart');\n                            if (range2.length > 0) {\n                                emptyRange2 = emptyRange2.concat(range2);\n                            }\n                        }\n                        source_curCdformat[i].cellrange = emptyRange;\n                        if (emptyRange2.length > 0) {\n                            let ruleObj = $.extend(true, {}, source_curCdformat[i]);\n                            ruleObj.cellrange = emptyRange2;\n                            ruleArr.push(ruleObj);\n                        }\n                    }\n                }\n                let target_cdformat = $.extend(true, [], Store.luckysheetfile[getSheetIndex(Store.currentSheetIndex)]['luckysheet_conditionformat_save']);\n                let target_curCdformat = $.extend(true, [], target_cdformat);\n                if (ruleArr.length > 0) {\n                    target_curCdformat = target_curCdformat.concat(ruleArr);\n                }    //数据验证\n                //数据验证\n                for (let i = c_r1; i <= c_r2; i++) {\n                    for (let j = c_c1; j <= c_c2; j++) {\n                        delete c_dataVerification[i + '_' + j];\n                    }\n                }\n                source = {\n                    'sheetIndex': copySheetIndex,\n                    'data': sourceData,\n                    'curData': sourceCurData,\n                    'config': sourceConfig,\n                    'curConfig': sourceCurConfig,\n                    'cdformat': source_cdformat,\n                    'curCdformat': source_curCdformat,\n                    'dataVerification': $.extend(true, {}, Store.luckysheetfile[getSheetIndex(copySheetIndex)]['dataVerification']),\n                    'curDataVerification': c_dataVerification,\n                    'range': {\n                        'row': [\n                            c_r1,\n                            c_r2\n                        ],\n                        'column': [\n                            c_c1,\n                            c_c2\n                        ]\n                    }\n                };\n                target = {\n                    'sheetIndex': Store.currentSheetIndex,\n                    'data': Store.flowdata,\n                    'curData': d,\n                    'config': $.extend(true, {}, Store.config),\n                    'curConfig': cfg,\n                    'cdformat': target_cdformat,\n                    'curCdformat': target_curCdformat,\n                    'dataVerification': $.extend(true, {}, Store.luckysheetfile[getSheetIndex(Store.currentSheetIndex)]['dataVerification']),\n                    'curDataVerification': dataVerification,\n                    'range': {\n                        'row': [\n                            minh,\n                            maxh\n                        ],\n                        'column': [\n                            minc,\n                            maxc\n                        ]\n                    }\n                };\n            } else {\n                //条件格式\n                let cdformat = $.extend(true, [], Store.luckysheetfile[getSheetIndex(Store.currentSheetIndex)]['luckysheet_conditionformat_save']);\n                let curCdformat = $.extend(true, [], cdformat);\n                if (curCdformat != null && curCdformat.length > 0) {\n                    for (let i = 0; i < curCdformat.length; i++) {\n                        let cellrange = curCdformat[i].cellrange;\n                        let emptyRange = [];\n                        for (let j = 0; j < cellrange.length; j++) {\n                            let range = conditionformat.CFSplitRange(cellrange[j], {\n                                'row': [\n                                    c_r1,\n                                    c_r2\n                                ],\n                                'column': [\n                                    c_c1,\n                                    c_c2\n                                ]\n                            }, {\n                                'row': [\n                                    minh,\n                                    maxh\n                                ],\n                                'column': [\n                                    minc,\n                                    maxc\n                                ]\n                            }, 'allPart');\n                            emptyRange = emptyRange.concat(range);\n                        }\n                        curCdformat[i].cellrange = emptyRange;\n                    }\n                } \n                //当前表操作\n                source = {\n                    'sheetIndex': Store.currentSheetIndex,\n                    'data': Store.flowdata,\n                    'curData': d,\n                    'config': $.extend(true, {}, Store.config),\n                    'curConfig': cfg,\n                    'cdformat': cdformat,\n                    'curCdformat': curCdformat,\n                    'dataVerification': $.extend(true, {}, Store.luckysheetfile[getSheetIndex(Store.currentSheetIndex)]['dataVerification']),\n                    'curDataVerification': dataVerification,\n                    'range': {\n                        'row': [\n                            c_r1,\n                            c_r2\n                        ],\n                        'column': [\n                            c_c1,\n                            c_c2\n                        ]\n                    }\n                };\n                target = {\n                    'sheetIndex': Store.currentSheetIndex,\n                    'data': Store.flowdata,\n                    'curData': d,\n                    'config': $.extend(true, {}, Store.config),\n                    'curConfig': cfg,\n                    'cdformat': cdformat,\n                    'curCdformat': curCdformat,\n                    'dataVerification': $.extend(true, {}, Store.luckysheetfile[getSheetIndex(Store.currentSheetIndex)]['dataVerification']),\n                    'curDataVerification': dataVerification,\n                    'range': {\n                        'row': [\n                            minh,\n                            maxh\n                        ],\n                        'column': [\n                            minc,\n                            maxc\n                        ]\n                    }\n                };\n            }\n            if (addr > 0 || addc > 0) {\n                ///jfrefreshgrid_pastcut(source, target, true);\n                Store.refreshGrid_pastcut(source,target,true);\n            } else {\n                ///jfrefreshgrid_pastcut(source, target, copyRowlChange);\n                Store.refreshGrid_pastcut(source,target,copyRowlChange);\n            }\n        },\n        pasteHandlerOfCopyPaste: function (copyRange) {\n            if (!checkProtectionLockedRangeList(Store.luckysheet_select_save, Store.currentSheetIndex)) {\n                return;\n            }\n            let cfg = $.extend(true, {}, Store.config);\n            if (cfg['merge'] == null) {\n                cfg['merge'] = {};\n            }    //复制范围\n            //复制范围\n            let copyHasMC = copyRange['HasMC'];\n            let copyRowlChange = copyRange['RowlChange'];\n            let copySheetIndex = copyRange['dataSheetIndex'];\n            let c_r1 = copyRange['copyRange'][0].row[0], c_r2 = copyRange['copyRange'][0].row[1], c_c1 = copyRange['copyRange'][0].column[0], c_c2 = copyRange['copyRange'][0].column[1];\n            let arr = [], isSameRow = false;\n            for (let i = 0; i < copyRange['copyRange'].length; i++) {\n                let arrData = getdatabyselection({\n                    'row': copyRange['copyRange'][i].row,\n                    'column': copyRange['copyRange'][i].column\n                }, copySheetIndex);\n                if (copyRange['copyRange'].length > 1) {\n                    if (c_r1 == copyRange['copyRange'][1].row[0] && c_r2 == copyRange['copyRange'][1].row[1]) {\n                        arrData = arrData[0].map(function (col, a) {\n                            return arrData.map(function (row) {\n                                return row[a];\n                            });\n                        });\n                        arr = arr.concat(arrData);\n                        isSameRow = true;\n                    } else if (c_c1 == copyRange['copyRange'][1].column[0] && c_c2 == copyRange['copyRange'][1].column[1]) {\n                        arr = arr.concat(arrData);\n                    }\n                } else {\n                    arr = arrData;\n                }\n            }\n            if (isSameRow) {\n                arr = arr[0].map(function (col, b) {\n                    return arr.map(function (row) {\n                        return row[b];\n                    });\n                });\n            }\n            let copyData = $.extend(true, [], arr);    //多重选择选择区域 单元格如果有函数 则只取值 不取函数\n            //多重选择选择区域 单元格如果有函数 则只取值 不取函数\n            if (copyRange['copyRange'].length > 1) {\n                for (let i = 0; i < copyData.length; i++) {\n                    for (let j = 0; j < copyData[i].length; j++) {\n                        if (copyData[i][j] != null && copyData[i][j].f != null) {\n                            delete copyData[i][j].f;\n                            delete copyData[i][j].spl;\n                        }\n                    }\n                }\n            }\n            let copyh = copyData.length, copyc = copyData[0].length;    //应用范围\n            //应用范围\n            let last = Store.luckysheet_select_save[Store.luckysheet_select_save.length - 1];\n            let minh = last['row'][0], maxh = last['row'][1];    //应用范围首尾行\n            //应用范围首尾行\n            let minc = last['column'][0], maxc = last['column'][1];    //应用范围首尾列\n            //应用范围首尾列\n            let mh = (maxh - minh + 1) % copyh;\n            let mc = (maxc - minc + 1) % copyc;\n            if (mh != 0 || mc != 0) {\n                //若应用范围不是copydata行列数的整数倍，则取copydata的行列数\n                maxh = minh + copyh - 1;\n                maxc = minc + copyc - 1;\n            }    //应用范围包含部分合并单元格，则提示\n            //应用范围包含部分合并单元格，则提示\n            let has_PartMC = false;\n            if (cfg['merge'] != null) {\n                has_PartMC = hasPartMC(cfg, minh, maxh, minc, maxc);\n            }\n            if (has_PartMC) {\n                if (isEditMode()) {\n                    alert('不能对合并单元格做部分更改');\n                } else {\n                    tooltip.info('<i class=\"fa fa-exclamation-triangle\"></i>提示', '不能对合并单元格做部分更改');\n                }\n                return;\n            }\n            let timesH = (maxh - minh + 1) / copyh;\n            let timesC = (maxc - minc + 1) / copyc;\n            let d = Store.deepCopyFlowData(Store.flowdata);    //取数据\n            //取数据\n            let rowMaxLength = d.length;\n            let cellMaxLength = d[0].length;    //若应用范围超过最大行或最大列，增加行列\n            //若应用范围超过最大行或最大列，增加行列\n            let addr = copyh + minh - rowMaxLength, addc = copyc + minc - cellMaxLength;\n            if (addr > 0 || addc > 0) {\n                d = datagridgrowth([].concat(d), addr, addc, true);\n            }\n            let borderInfoCompute = getBorderInfoCompute(copySheetIndex);\n            let c_dataVerification = $.extend(true, {}, Store.luckysheetfile[getSheetIndex(copySheetIndex)].dataVerification);\n            let dataVerification = null;\n            let mth = 0, mtc = 0, maxcellCahe = 0, maxrowCache = 0;\n            for (let th = 1; th <= timesH; th++) {\n                for (let tc = 1; tc <= timesC; tc++) {\n                    mth = minh + (th - 1) * copyh;\n                    mtc = minc + (tc - 1) * copyc;\n                    maxrowCache = minh + th * copyh;\n                    maxcellCahe = minc + tc * copyc;    //行列位移值 用于单元格有函数\n                    //行列位移值 用于单元格有函数\n                    let offsetRow = mth - c_r1;\n                    let offsetCol = mtc - c_c1;\n                    let offsetMC = {};\n                    for (let h = mth; h < maxrowCache; h++) {\n                        let x = [].concat(d[h]);\n                        for (let c = mtc; c < maxcellCahe; c++) {\n                            if (borderInfoCompute[c_r1 + h - mth + '_' + (c_c1 + c - mtc)]) {\n                                let bd_obj = {\n                                    'rangeType': 'cell',\n                                    'value': {\n                                        'row_index': h,\n                                        'col_index': c,\n                                        'l': borderInfoCompute[c_r1 + h - mth + '_' + (c_c1 + c - mtc)].l,\n                                        'r': borderInfoCompute[c_r1 + h - mth + '_' + (c_c1 + c - mtc)].r,\n                                        't': borderInfoCompute[c_r1 + h - mth + '_' + (c_c1 + c - mtc)].t,\n                                        'b': borderInfoCompute[c_r1 + h - mth + '_' + (c_c1 + c - mtc)].b\n                                    }\n                                };\n                                if (cfg['borderInfo'] == null) {\n                                    cfg['borderInfo'] = [];\n                                }\n                                cfg['borderInfo'].push(bd_obj);\n                            } else if (borderInfoCompute[h + '_' + c]) {\n                                let bd_obj = {\n                                    'rangeType': 'cell',\n                                    'value': {\n                                        'row_index': h,\n                                        'col_index': c,\n                                        'l': null,\n                                        'r': null,\n                                        't': null,\n                                        'b': null\n                                    }\n                                };\n                                if (cfg['borderInfo'] == null) {\n                                    cfg['borderInfo'] = [];\n                                }\n                                cfg['borderInfo'].push(bd_obj);\n                            }    //数据验证 复制\n                            //数据验证 复制\n                            if (c_dataVerification[c_r1 + h - mth + '_' + (c_c1 + c - mtc)]) {\n                                if (dataVerification == null) {\n                                    dataVerification = $.extend(true, {}, Store.luckysheetfile[getSheetIndex(Store.currentSheetIndex)].dataVerification);\n                                }\n                                dataVerification[h + '_' + c] = c_dataVerification[c_r1 + h - mth + '_' + (c_c1 + c - mtc)];\n                            }\n                            if (getObjType(x[c]) == 'object' && 'mc' in x[c]) {\n                                if ('rs' in x[c].mc) {\n                                    delete cfg['merge'][x[c]['mc'].r + '_' + x[c]['mc'].c];\n                                }\n                                delete x[c].mc;\n                            }\n                            let value = null;\n                            if (copyData[h - mth] != null && copyData[h - mth][c - mtc] != null) {\n                                value = $.extend(true, {}, copyData[h - mth][c - mtc]);\n                            }\n                            if (value != null && value.f != null) {\n                                let func = value.f;\n                                if (offsetRow > 0) {\n                                    func = '=' + formula.functionCopy(func, 'down', offsetRow);\n                                }\n                                if (offsetRow < 0) {\n                                    func = '=' + formula.functionCopy(func, 'up', Math.abs(offsetRow));\n                                }\n                                if (offsetCol > 0) {\n                                    func = '=' + formula.functionCopy(func, 'right', offsetCol);\n                                }\n                                if (offsetCol < 0) {\n                                    func = '=' + formula.functionCopy(func, 'left', Math.abs(offsetCol));\n                                }\n                                let funcV = formula.execfunction(func, h, c, undefined, true);\n                                if (value.spl != null) {\n                                    value.f = funcV[2];\n                                    value.v = funcV[1];\n                                    value.spl = funcV[3].data;\n                                } else {\n                                    value.f = funcV[2];\n                                    value.v = funcV[1];\n                                    if (value.ct != null && value.ct['fa'] != null) {\n                                        value.m = update(value.ct['fa'], funcV[1]);\n                                    }\n                                }\n                            }\n                            x[c] = $.extend(true, {}, value);\n                            if (value != null && copyHasMC && 'mc' in x[c]) {\n                                if (x[c]['mc'].rs != null) {\n                                    x[c]['mc'].r = h;\n                                    x[c]['mc'].c = c;\n                                    cfg['merge'][x[c]['mc'].r + '_' + x[c]['mc'].c] = x[c]['mc'];\n                                    offsetMC[value['mc'].r + '_' + value['mc'].c] = [\n                                        x[c]['mc'].r,\n                                        x[c]['mc'].c\n                                    ];\n                                } else {\n                                    x[c] = {\n                                        'mc': {\n                                            r: offsetMC[value['mc'].r + '_' + value['mc'].c][0],\n                                            c: offsetMC[value['mc'].r + '_' + value['mc'].c][1]\n                                        }\n                                    };\n                                }\n                            }\n                        }\n                        d[h] = x;\n                    }\n                }\n            }    //复制范围 是否有 条件格式和数据验证\n            //复制范围 是否有 条件格式和数据验证\n            let cdformat = null;\n            if (copyRange['copyRange'].length == 1) {\n                let c_file = Store.luckysheetfile[getSheetIndex(copySheetIndex)];\n                let a_file = Store.luckysheetfile[getSheetIndex(Store.currentSheetIndex)];\n                let ruleArr_cf = $.extend(true, [], c_file['luckysheet_conditionformat_save']);\n                if (ruleArr_cf != null && ruleArr_cf.length > 0) {\n                    cdformat = $.extend(true, [], a_file['luckysheet_conditionformat_save']);\n                    for (let i = 0; i < ruleArr_cf.length; i++) {\n                        let cf_range = ruleArr_cf[i].cellrange;\n                        let emptyRange = [];\n                        for (let th = 1; th <= timesH; th++) {\n                            for (let tc = 1; tc <= timesC; tc++) {\n                                mth = minh + (th - 1) * copyh;\n                                mtc = minc + (tc - 1) * copyc;\n                                maxrowCache = minh + th * copyh;\n                                maxcellCahe = minc + tc * copyc;\n                                for (let j = 0; j < cf_range.length; j++) {\n                                    let range = conditionformat.CFSplitRange(cf_range[j], {\n                                        'row': [\n                                            c_r1,\n                                            c_r2\n                                        ],\n                                        'column': [\n                                            c_c1,\n                                            c_c2\n                                        ]\n                                    }, {\n                                        'row': [\n                                            mth,\n                                            maxrowCache - 1\n                                        ],\n                                        'column': [\n                                            mtc,\n                                            maxcellCahe - 1\n                                        ]\n                                    }, 'operatePart');\n                                    if (range.length > 0) {\n                                        emptyRange = emptyRange.concat(range);\n                                    }\n                                }\n                            }\n                        }\n                        if (emptyRange.length > 0) {\n                            ruleArr_cf[i].cellrange = emptyRange;\n                            cdformat.push(ruleArr_cf[i]);\n                        }\n                    }\n                }\n            }\n            last['row'] = [\n                minh,\n                maxh\n            ];\n            last['column'] = [\n                minc,\n                maxc\n            ];\n            if (copyRowlChange || addr > 0 || addc > 0) {\n                cfg = rowlenByRange(d, minh, maxh, cfg);\n                let allParam = {\n                    'cfg': cfg,\n                    'RowlChange': true,\n                    'cdformat': cdformat,\n                    'dataVerification': dataVerification\n                };\n                Store.refreshRange(d, Store.luckysheet_select_save, allParam);\n            } else {\n                let allParam = {\n                    'cfg': cfg,\n                    'cdformat': cdformat,\n                    'dataVerification': dataVerification\n                };\n                Store.refreshRange(d, Store.luckysheet_select_save, allParam);\n                selectHightlightShow();\n            }\n        },\n        pasteHandlerOfPaintModel: function (copyRange) {\n            if (!checkProtectionLockedRangeList(Store.luckysheet_select_save, Store.currentSheetIndex)) {\n                return;\n            }\n            let cfg = $.extend(true, {}, Store.config);\n            if (cfg['merge'] == null) {\n                cfg['merge'] = {};\n            }    //复制范围\n            //复制范围\n            let copyHasMC = copyRange['HasMC'];\n            let copyRowlChange = copyRange['RowlChange'];\n            let copySheetIndex = copyRange['dataSheetIndex'];\n            let c_r1 = copyRange['copyRange'][0].row[0], c_r2 = copyRange['copyRange'][0].row[1], c_c1 = copyRange['copyRange'][0].column[0], c_c2 = copyRange['copyRange'][0].column[1];\n            let copyData = $.extend(true, [], getdatabyselection({\n                'row': [\n                    c_r1,\n                    c_r2\n                ],\n                'column': [\n                    c_c1,\n                    c_c2\n                ]\n            }, copySheetIndex));    //应用范围\n            //应用范围\n            let last = Store.luckysheet_select_save[Store.luckysheet_select_save.length - 1];\n            let minh = last['row'][0], maxh = last['row'][1];    //应用范围首尾行\n            //应用范围首尾行\n            let minc = last['column'][0], maxc = last['column'][1];    //应用范围首尾列\n            //应用范围首尾列\n            let copyh = copyData.length, copyc = copyData[0].length;\n            if (minh == maxh && minc == maxc) {\n                //应用范围是一个单元格，自动增加到复制范围大小 (若自动增加的范围包含部分合并单元格，则提示)\n                let has_PartMC = false;\n                if (cfg['merge'] != null) {\n                    has_PartMC = hasPartMC(cfg, minh, minh + copyh - 1, minc, minc + copyc - 1);\n                }\n                if (has_PartMC) {\n                    if (isEditMode()) {\n                        alert('不能对合并单元格做部分更改');\n                    } else {\n                        tooltip.info('<i class=\"fa fa-exclamation-triangle\"></i>提示', '不能对合并单元格做部分更改');\n                    }\n                    return;\n                }\n                maxh = minh + copyh - 1;\n                maxc = minc + copyc - 1;\n            }\n            let timesH = Math.ceil((maxh - minh + 1) / copyh);    //复制行 组数\n            //复制行 组数\n            let timesC = Math.ceil((maxc - minc + 1) / copyc);    //复制列 组数\n            //复制列 组数\n            let d = Store.deepCopyFlowData(Store.flowdata);    //取数据\n            //取数据\n            let cellMaxLength = d[0].length;\n            let rowMaxLength = d.length;\n            let borderInfoCompute = getBorderInfoCompute(copySheetIndex);\n            let c_dataVerification = $.extend(true, {}, Store.luckysheetfile[getSheetIndex(copySheetIndex)].dataVerification);\n            let dataVerification = null;\n            let mth = 0, mtc = 0, maxcellCahe = 0, maxrowCache = 0;\n            for (let th = 1; th <= timesH; th++) {\n                for (let tc = 1; tc <= timesC; tc++) {\n                    mth = minh + (th - 1) * copyh;\n                    mtc = minc + (tc - 1) * copyc;\n                    maxrowCache = minh + th * copyh > rowMaxLength ? rowMaxLength : minh + th * copyh;\n                    if (maxrowCache > maxh + 1) {\n                        maxrowCache = maxh + 1;\n                    }\n                    maxcellCahe = minc + tc * copyc > cellMaxLength ? cellMaxLength : minc + tc * copyc;\n                    if (maxcellCahe > maxc + 1) {\n                        maxcellCahe = maxc + 1;\n                    }\n                    let offsetMC = {};\n                    for (let h = mth; h < maxrowCache; h++) {\n                        let x = [].concat(d[h]);\n                        for (let c = mtc; c < maxcellCahe; c++) {\n                            if (borderInfoCompute[c_r1 + h - mth + '_' + (c_c1 + c - mtc)]) {\n                                let bd_obj = {\n                                    'rangeType': 'cell',\n                                    'value': {\n                                        'row_index': h,\n                                        'col_index': c,\n                                        'l': borderInfoCompute[c_r1 + h - mth + '_' + (c_c1 + c - mtc)].l,\n                                        'r': borderInfoCompute[c_r1 + h - mth + '_' + (c_c1 + c - mtc)].r,\n                                        't': borderInfoCompute[c_r1 + h - mth + '_' + (c_c1 + c - mtc)].t,\n                                        'b': borderInfoCompute[c_r1 + h - mth + '_' + (c_c1 + c - mtc)].b\n                                    }\n                                };\n                                if (cfg['borderInfo'] == null) {\n                                    cfg['borderInfo'] = [];\n                                }\n                                cfg['borderInfo'].push(bd_obj);\n                            } else if (borderInfoCompute[h + '_' + c]) {\n                                let bd_obj = {\n                                    'rangeType': 'cell',\n                                    'value': {\n                                        'row_index': h,\n                                        'col_index': c,\n                                        'l': null,\n                                        'r': null,\n                                        't': null,\n                                        'b': null\n                                    }\n                                };\n                                if (cfg['borderInfo'] == null) {\n                                    cfg['borderInfo'] = [];\n                                }\n                                cfg['borderInfo'].push(bd_obj);\n                            }    //数据验证 复制\n                            //数据验证 复制\n                            if (c_dataVerification[c_r1 + h - mth + '_' + (c_c1 + c - mtc)]) {\n                                if (dataVerification == null) {\n                                    dataVerification = $.extend(true, {}, Store.luckysheetfile[getSheetIndex(Store.currentSheetIndex)].dataVerification);\n                                }\n                                dataVerification[h + '_' + c] = c_dataVerification[c_r1 + h - mth + '_' + (c_c1 + c - mtc)];\n                            }\n                            if (getObjType(x[c]) == 'object' && 'mc' in x[c]) {\n                                if ('rs' in x[c].mc) {\n                                    delete cfg['merge'][x[c]['mc'].r + '_' + x[c]['mc'].c];\n                                }\n                                delete x[c].mc;\n                            }\n                            let value = null;\n                            if (copyData[h - mth] != null && copyData[h - mth][c - mtc] != null) {\n                                value = copyData[h - mth][c - mtc];\n                            }\n                            if (value != null) {\n                                delete value['v'];\n                                delete value['m'];\n                                delete value['f'];\n                                delete value['spl'];\n                                if (value.ct && value.ct.t == 'inlineStr') {\n                                    delete value.ct;\n                                }\n                                if (getObjType(x[c]) == 'object') {\n                                } else {\n                                    x[c] = { 'v': x[c] };\n                                }\n                                x[c] = $.extend(true, x[c], value);\n                                if (copyHasMC && 'mc' in x[c]) {\n                                    if (x[c]['mc'].rs != null) {\n                                        x[c]['mc'].r = h;\n                                        if (x[c]['mc'].rs + h >= maxrowCache) {\n                                            x[c]['mc'].rs = maxrowCache - h;\n                                        }\n                                        x[c]['mc'].c = c;\n                                        if (x[c]['mc'].cs + c >= maxcellCahe) {\n                                            x[c]['mc'].cs = maxcellCahe - c;\n                                        }\n                                        cfg['merge'][x[c]['mc'].r + '_' + x[c]['mc'].c] = x[c]['mc'];\n                                        offsetMC[value['mc'].r + '_' + value['mc'].c] = [\n                                            x[c]['mc'].r,\n                                            x[c]['mc'].c\n                                        ];\n                                    } else {\n                                        x[c] = {\n                                            'mc': {\n                                                r: offsetMC[value['mc'].r + '_' + value['mc'].c][0],\n                                                c: offsetMC[value['mc'].r + '_' + value['mc'].c][1]\n                                            }\n                                        };\n                                    }\n                                }\n                                if (x[c].v != null) {\n                                    if (value['ct'] != null && value['ct']['fa'] != null) {\n                                        let mask = update(value['ct']['fa'], x[c].v);\n                                        x[c].m = mask;\n                                    }\n                                }\n                            }\n                        }\n                        d[h] = x;\n                    }\n                }\n            }    //复制范围 是否有 条件格式\n            //复制范围 是否有 条件格式\n            let cdformat = null;\n            let ruleArr = $.extend(true, [], Store.luckysheetfile[getSheetIndex(copySheetIndex)]['luckysheet_conditionformat_save']);\n            if (ruleArr != null && ruleArr.length > 0) {\n                cdformat = $.extend(true, [], Store.luckysheetfile[getSheetIndex(Store.currentSheetIndex)]['luckysheet_conditionformat_save']);\n                for (let i = 0; i < ruleArr.length; i++) {\n                    let cdformat_cellrange = ruleArr[i].cellrange;\n                    let emptyRange = [];\n                    for (let j = 0; j < cdformat_cellrange.length; j++) {\n                        let range = conditionformat.CFSplitRange(cdformat_cellrange[j], {\n                            'row': [\n                                c_r1,\n                                c_r2\n                            ],\n                            'column': [\n                                c_c1,\n                                c_c2\n                            ]\n                        }, {\n                            'row': [\n                                minh,\n                                maxh\n                            ],\n                            'column': [\n                                minc,\n                                maxc\n                            ]\n                        }, 'operatePart');\n                        if (range.length > 0) {\n                            emptyRange = emptyRange.concat(range);\n                        }\n                    }\n                    if (emptyRange.length > 0) {\n                        ruleArr[i].cellrange = [{\n                                'row': [\n                                    minh,\n                                    maxh\n                                ],\n                                'column': [\n                                    minc,\n                                    maxc\n                                ]\n                            }];\n                        cdformat.push(ruleArr[i]);\n                    }\n                }\n            }\n            last['row'] = [\n                minh,\n                maxh\n            ];\n            last['column'] = [\n                minc,\n                maxc\n            ];\n            if (copyRowlChange) {\n                cfg = rowlenByRange(d, minh, maxh, cfg);\n                let allParam = {\n                    'cfg': cfg,\n                    'RowlChange': true,\n                    'cdformat': cdformat,\n                    'dataVerification': dataVerification\n                };\n                Store.refreshRange(d, Store.luckysheet_select_save, allParam);\n            } else {\n                let allParam = {\n                    'cfg': cfg,\n                    'cdformat': cdformat,\n                    'dataVerification': dataVerification\n                };\n                Store.refreshRange(d, Store.luckysheet_select_save, allParam);\n                selectHightlightShow();\n            }\n        },\n        matchcopy: function (data1, data2) {\n            let data1cache = [], data2cache = [], data1len, data2len;\n            if (typeof data1 == 'object') {\n                data1cache = data1;\n            } else {\n                data1cache = data1.split('\\n');\n                for (let i = 0; i < data1cache.length; i++) {\n                    data1cache[i] = data1cache[i].split('\\t');\n                }\n            }\n            data1len = data1cache.length;\n            if (typeof data2 == 'object') {\n                data2cache = data2;\n            } else {\n                data2cache = data2.split('\\n');\n                for (let i = 0; i < data2cache.length; i++) {\n                    data2cache[i] = data2cache[i].split('\\t');\n                }\n            }\n            data2len = data2cache.length;\n            if (data1len != data2len) {\n                return false;\n            }\n            for (let r1 = 0; r1 < data1len; r1++) {\n                if (Store.config['rowhidden'] != null && Store.config['rowhidden'][r1] != null) {\n                    continue;\n                }\n                for (let r2 = 0; r2 < data2len; r2++) {\n                    if (data1cache[r1].length != data2cache[r2].length) {\n                        return false;\n                    }\n                }\n            }\n            for (let r = 0; r < data1len; r++) {\n                if (Store.config['rowhidden'] != null && Store.config['rowhidden'][r] != null) {\n                    continue;\n                }\n                for (let c = 0; c < data1cache[0].length; c++) {\n                    if (getcellvalue(r, c, data1cache) != getcellvalue(r, c, data2cache)) {\n                        return false;\n                    }\n                }\n            }\n            return true;\n        }\n    };\n    return selection;\n});"]}