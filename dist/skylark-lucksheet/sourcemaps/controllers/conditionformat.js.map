{"version":3,"sources":["controllers/conditionformat.js"],"names":["define","m_get","m_util","formula","m_validate","tooltip","m_refresh","m_getdata","m_format","m_constant","server","m_select","sheetmanage","locale","m_protection","Store","dayjs","getSheetIndex","getRangetxt","replaceHtml","getObjType","chatatABC","isRealNull","isEditMode","luckysheetrefreshgrid","getcellvalue","genarate","modelHTML","luckysheet_CFiconsImg","selectionCopyShow","checkProtectionFormatCells","fileClone","editorRule","ruleTypeHtml","conditionformat_Text","conditionformat","ruleTypeItem1","ruleTypeItem2","ruleTypeItem3","ruleTypeItem4","ruleTypeItem5","ruleTypeItem6","textCellColorHtml","textColor","cellColor","selectRange","selectStatus","dataBarList","format","colorGradationList","init","_this","this","$","document","off","on","index","val","getConditionRuleList","addClass","siblings","removeClass","currentSheetIndex","fileH","extend","luckysheetfile","historyRules","getHistoryRules","c","length","sheetIndex","fileC","currentRules","getCurrentRules","ref","hide","allowUpdate","files","i","saveParam","k","parents","changeSheetExec","txt","trim","dataItem","attr","multiRangeDialog","range","getRangeByTxt","s","r1","row","r2","c1","column","c2","visibledatarow","row_pre","col","visibledatacolumn","col_pre","push","left","width","top","height","left_move","width_move","top_move","height_move","row_focus","column_focus","v","find","cellrange","show","luckysheet_select_save","newConditionRuleDialog","alert","pleaseSelectRange","info","rule","type1","type2","color","spectrum","toHexString","type","maxcolor","toRgbString","midcolor","mincolor","len","leftMin","textcolor","cellcolor","conditionName","conditionRange","conditionValue","v1","v2","rangeArr1","infoDialog","onlySingleCell","flowdata","isNaN","conditionValueCanOnly","rangeArr2","rangeArr","pleaseSelectADate","is","parseInt","pleaseEnterInteger","source","ruleArr","undefined","administerRuleDialog","itemIndex","data","editorConditionRuleDialog","console","log","html","getRuleExplain","colorSelectInit","optionVal","daterangeInit","toggle","leftmin","title","position","css","splice","updateItem","id","$id","singleRangeDialog","value","remove","append","addclass","selectCell","content","pleaseSelectCell","botton","confirm","cancel","style","$t","end","myh","outerHeight","myw","outerWidth","winw","window","winh","scrollLeft","scrollTop","getTxtByRange","join","toString","indexOf","arr","split","iscelldata","getcellrange","showPalette","showPaletteOnly","preferredFormat","clickoutFiresChange","showInitial","showInput","hideAfterPaletteSelect","showSelectionPalette","maxPaletteSize","maxSelectionSize","cancelText","chooseText","confirmColor","togglePaletteMoreText","togglePaletteLessText","togglePaletteOnly","clearText","clearColorSelect","noColorSelectedText","localStorageKey","gridKey","palette","change","conditionformatDialog","conditionformat_occurrenceDate","CFiconsDialog","pleaseSelectIcon","direction","threeWayArrow","multicolor","threeTriangles","fourWayArrow","fiveWayArrow","grayColor","shape","threeColorTrafficLight","rimless","threeSigns","greenRedBlackGradient","bordered","fourColorTrafficLight","mark","threeSymbols","circled","tricolorFlag","noCircle","grade","threeStars","fiveQuadrantDiagram","fiveBoxes","grade4","grade5","icons","close","opHtml","j","status","currentSheet","sheet","showRules","newRule","editRule","deleteRule","applyRange","conditionformatManageRules","empty","luckysheet_conditionformat_save","ruleName","formatHtml","dataBar","colorGradation","getConditionRuleName","rangeTxtArr","itemHtml","prepend","each","x","closest","can","get","getContext","my_gradient","createLinearGradient","addColorStop","fillStyle","fillRect","beginPath","moveTo","lineTo","lineWidth","devicePixelRatio","strokeStyle","stroke","closePath","l","t","w1","h1","w2","h2","drawImage","eq","cellValue","between","in","between2","contain","duplicateValue","uniqueValue","oneself","last","aboveAverage","belowAverage","slice","ruleExplainHtml","chooseRuleType","editRuleDescription","newFormatRule","ruleType","ruleFormat","editFormatRule","e","val1","val2","formatStyle","fillType","gradient","solid","dataBarColor","tricolor","twocolor","maxValue","medianValue","minValue","ruleTypeItem2_title","specificText","occurrence","greaterThan","lessThan","equal","selectDataRange","setFormat","ruleTypeItem3_title","selectRange_percent","ruleTypeItem4_title","above","below","selectRange_average","all","selectRange_value","flatpickr","mode","onChange","label","start","format1","yesterday","today","format2","lastWeek","thisWeek","lastMonth","thisMonth","lastYear","thisYear","last7days","last30days","CFSplitRange","range1","range2","range3","offset_r","offset_c","getcolorGradation","color1","color2","value1","value2","rgb1","g1","b1","rgb2","g2","b2","Math","round","getCFPartRange","cf","checksCF","r","computeMap","getComputeMap","compute","d","max","min","cell","plusLen","minusLen","abs","valueLen","valueType","sum","count","avg","floor","a","b","v3","v4","v5","conditionValue0","conditionValue1","vBig","vSmall","dBig","dSmall","str","ct","cellVal","dmap","item","dArr","temp","cArr","averageNum","edr","stc","edc","formulaTxt","func","offsetRow","offsetCol","functionCopy","execfunction","Number","h","clearjfundo","jfundo","redo","jfredo","setTimeout"],"mappings":"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","file":"../../controllers/conditionformat.js","sourcesContent":["define([\n    '../methods/get',\n    '../utils/util',\n    '../global/formula',\n    '../global/validate',\n    '../global/tooltip',\n    '../global/refresh',\n    '../global/getdata',\n    '../global/format',\n    './constant',\n    './server',\n    './select',\n    './sheetmanage',\n    '../locale/locale',\n    './protection',\n    '../store',\n    'skylark-moment'\n], function (m_get, m_util, formula, m_validate, tooltip, m_refresh, m_getdata, m_format, m_constant, server, m_select, sheetmanage, locale, m_protection, Store, dayjs) {\n    'use strict';\n    const {getSheetIndex, getRangetxt} = m_get;\n    const {replaceHtml, getObjType, chatatABC} = m_util;\n    const {isRealNull, isEditMode} = m_validate;\n    const {luckysheetrefreshgrid} = m_refresh;\n    const {getcellvalue} = m_getdata;\n    const {genarate} = m_format;\n    const {modelHTML, luckysheet_CFiconsImg} = m_constant;\n    const {selectionCopyShow} = m_select;\n    const {checkProtectionFormatCells} = m_protection;\n    //条件格式\n    const conditionformat = {\n        fileClone: [],\n        editorRule: null,\n        //{\"sheetIndex\": sheetIndex,\"itemIndex\": itemIndex,\"data\": luckysheetfile[sheetIndex].luckysheet_conditionformat_save[itemIndex]}\n        ruleTypeHtml: function () {\n            const conditionformat_Text = locale().conditionformat;\n            return `<div class=\"ruleTypeBox\">\n                    <div class=\"ruleTypeItem\">\n                        <span class=\"icon iconfont luckysheet-iconfont-youjiantou\"></span>\n                        <span>${ conditionformat_Text.ruleTypeItem1 }</span>\n                    </div>\n                    <div class=\"ruleTypeItem\">\n                        <span class=\"icon iconfont luckysheet-iconfont-youjiantou\"></span>\n                        <span>${ conditionformat_Text.ruleTypeItem2 }</span>\n                    </div>\n                    <div class=\"ruleTypeItem\">\n                        <span class=\"icon iconfont luckysheet-iconfont-youjiantou\"></span>\n                        <span>${ conditionformat_Text.ruleTypeItem3 }</span>\n                    </div>\n                    <div class=\"ruleTypeItem\">\n                        <span class=\"icon iconfont luckysheet-iconfont-youjiantou\"></span>\n                        <span>${ conditionformat_Text.ruleTypeItem4 }</span>\n                    </div>\n                    <div class=\"ruleTypeItem\">\n                        <span class=\"icon iconfont luckysheet-iconfont-youjiantou\"></span>\n                        <span>${ conditionformat_Text.ruleTypeItem5 }</span>\n                    </div>\n                    <div class=\"ruleTypeItem\">\n                        <span class=\"icon iconfont luckysheet-iconfont-youjiantou\"></span>\n                        <span>${ conditionformat_Text.ruleTypeItem6 }</span>\n                    </div>\n                </div>`;\n        },\n        textCellColorHtml: function () {\n            const conditionformat_Text = locale().conditionformat;\n            return `<div id=\"textCellColor\">\n                    <div class=\"colorbox\">\n                        <input id=\"checkTextColor\" type=\"checkbox\" checked=\"checked\">\n                        <label for=\"checkTextColor\">${ conditionformat_Text.textColor }：</label>\n                        <input id=\"textcolorshow\" data-tips=\"${ conditionformat_Text.textColor }\" data-func=\"background\" class=\"luckysheet-conditionformat-config-color\" type=\"text\" value=\"#9c0006\" style=\"display: none;\">\n                    </div>\n                    <div class=\"colorbox\">\n                        <input id=\"checkCellColor\" type=\"checkbox\" checked=\"checked\">\n                        <label for=\"checkCellColor\">${ conditionformat_Text.cellColor }：</label>\n                        <input id=\"cellcolorshow\" data-tips=\"${ conditionformat_Text.cellColor }\" data-func=\"background\" class=\"luckysheet-conditionformat-config-color\" type=\"text\" value=\"#ffc7ce\" style=\"display: none;\">\n                    </div>\n                </div>`;\n        },\n        selectRange: [],\n        selectStatus: false,\n        dataBarList: [\n            {\n                'format': [\n                    '#638ec6',\n                    '#ffffff'\n                ]\n            },\n            //蓝-白渐变 数据条\n            {\n                'format': [\n                    '#63c384',\n                    '#ffffff'\n                ]\n            },\n            //绿-白渐变 数据条\n            {\n                'format': [\n                    '#ff555a',\n                    '#ffffff'\n                ]\n            },\n            //红-白渐变 数据条\n            {\n                'format': [\n                    '#ffb628',\n                    '#ffffff'\n                ]\n            },\n            //橙-白渐变 数据条\n            {\n                'format': [\n                    '#008aef',\n                    '#ffffff'\n                ]\n            },\n            //浅蓝-白渐变 数据条\n            {\n                'format': [\n                    '#d6007b',\n                    '#ffffff'\n                ]\n            },\n            //紫-白渐变 数据条\n            { 'format': ['#638ec6'] },\n            //蓝色 数据条\n            { 'format': ['#63c384'] },\n            //绿色 数据条\n            { 'format': ['#ff555a'] },\n            //红色 数据条\n            { 'format': ['#ffb628'] },\n            //橙色 数据条\n            { 'format': ['#008aef'] },\n            //浅蓝色 数据条\n            { 'format': ['#d6007b'] }    //紫色 数据条\n        ],\n        //紫色 数据条\n        colorGradationList: [\n            {\n                'format': [\n                    'rgb(99, 190, 123)',\n                    'rgb(255, 235, 132)',\n                    'rgb(248, 105, 107)'\n                ]\n            },\n            //绿-黄-红色阶\n            {\n                'format': [\n                    'rgb(248, 105, 107)',\n                    'rgb(255, 235, 132)',\n                    'rgb(99, 190, 123)'\n                ]\n            },\n            //红-黄-绿色阶\n            {\n                'format': [\n                    'rgb(99, 190, 123)',\n                    'rgb(252, 252, 255)',\n                    'rgb(248, 105, 107)'\n                ]\n            },\n            //绿-白-红色阶\n            {\n                'format': [\n                    'rgb(248, 105, 107)',\n                    'rgb(252, 252, 255)',\n                    'rgb(99, 190, 123)'\n                ]\n            },\n            //红-白-绿色阶\n            {\n                'format': [\n                    'rgb(90, 138, 198)',\n                    'rgb(252, 252, 255)',\n                    'rgb(248, 105, 107)'\n                ]\n            },\n            //蓝-白-红色阶\n            {\n                'format': [\n                    'rgb(248, 105, 107)',\n                    'rgb(252, 252, 255)',\n                    'rgb(90, 138, 198)'\n                ]\n            },\n            //红-白-蓝色阶\n            {\n                'format': [\n                    'rgb(252, 252, 255)',\n                    'rgb(248, 105, 107)'\n                ]\n            },\n            //白-红色阶\n            {\n                'format': [\n                    'rgb(248, 105, 107)',\n                    'rgb(252, 252, 255)'\n                ]\n            },\n            //红-白色阶\n            {\n                'format': [\n                    'rgb(99, 190, 123)',\n                    'rgb(252, 252, 255)'\n                ]\n            },\n            //绿-白色阶\n            {\n                'format': [\n                    'rgb(252, 252, 255)',\n                    'rgb(99, 190, 123)'\n                ]\n            },\n            //白-绿色阶\n            {\n                'format': [\n                    'rgb(99, 190, 123)',\n                    'rgb(255, 235, 132)'\n                ]\n            },\n            //绿-黄色阶\n            {\n                'format': [\n                    'rgb(255, 235, 132)',\n                    'rgb(99, 190, 123)'\n                ]\n            }    //黄-绿色阶\n        ],\n        //黄-绿色阶\n        init: function () {\n            let _this = this;\n            const conditionformat_Text = locale().conditionformat;    // 管理规则\n            // 管理规则\n            $(document).off('change.CFchooseSheet').on('change.CFchooseSheet', '#luckysheet-administerRule-dialog .chooseSheet', function () {\n                let index = $('#luckysheet-administerRule-dialog .chooseSheet option:selected').val();\n                _this.getConditionRuleList(index);\n            });\n            $(document).off('click.CFadministerRuleItem').on('click.CFadministerRuleItem', '#luckysheet-administerRule-dialog .ruleList .listBox .item', function () {\n                $(this).addClass('on').siblings().removeClass('on');\n            });\n            $(document).off('click.CFadministerRuleConfirm').on('click.CFadministerRuleConfirm', '#luckysheet-administerRule-dialog-confirm', function () {\n                if (!checkProtectionFormatCells(Store.currentSheetIndex)) {\n                    return;\n                }    //保存之前的规则\n                //保存之前的规则\n                let fileH = $.extend(true, [], Store.luckysheetfile);\n                let historyRules = _this.getHistoryRules(fileH);    //保存当前的规则\n                //保存当前的规则\n                let fileClone = $.extend(true, [], _this.fileClone);\n                for (let c = 0; c < fileClone.length; c++) {\n                    let sheetIndex = fileClone[c]['index'];\n                    Store.luckysheetfile[getSheetIndex(sheetIndex)]['luckysheet_conditionformat_save'] = fileClone[getSheetIndex(sheetIndex)]['luckysheet_conditionformat_save'];\n                }\n                let fileC = $.extend(true, [], Store.luckysheetfile);\n                let currentRules = _this.getCurrentRules(fileC);    //刷新一次表格\n                //刷新一次表格\n                _this.ref(historyRules, currentRules);    //隐藏一些dom\n                //隐藏一些dom\n                $('#luckysheet-modal-dialog-mask').hide();\n                $('#luckysheet-administerRule-dialog').hide();    //发送给后台\n                //发送给后台\n                if (server.allowUpdate) {\n                    let files = $.extend(true, [], Store.luckysheetfile);\n                    for (let i = 0; i < files.length; i++) {\n                        server.saveParam('all', files[i]['index'], files[i]['luckysheet_conditionformat_save'], { 'k': 'luckysheet_conditionformat_save' });\n                    }\n                }\n            });\n            $(document).off('click.CFadministerRuleClose').on('click.CFadministerRuleClose', '#luckysheet-administerRule-dialog-close', function () {\n                $('#luckysheet-modal-dialog-mask').hide();\n                $('#luckysheet-administerRule-dialog').hide();\n                _this.fileClone = [];\n            });\n            $(document).off('click.CFadministerRuleFa').on('click.CFadministerRuleFa', '#luckysheet-administerRule-dialog .item .fa-table', function () {\n                $(this).parents('#luckysheet-administerRule-dialog').hide();\n                let sheetIndex = $('#luckysheet-administerRule-dialog .chooseSheet select option:selected').val();\n                if (sheetIndex != Store.currentSheetIndex) {\n                    sheetmanage.changeSheetExec(sheetIndex);\n                }\n                let txt = $(this).siblings('input').val().trim();\n                let dataItem = $(this).parents('.item').attr('data-item');\n                _this.multiRangeDialog(dataItem, txt);\n                _this.selectRange = [];\n                let range = _this.getRangeByTxt(txt);\n                if (range.length > 0) {\n                    for (let s = 0; s < range.length; s++) {\n                        let r1 = range[s].row[0], r2 = range[s].row[1];\n                        let c1 = range[s].column[0], c2 = range[s].column[1];\n                        let row = Store.visibledatarow[r2], row_pre = r1 - 1 == -1 ? 0 : Store.visibledatarow[r1 - 1];\n                        let col = Store.visibledatacolumn[c2], col_pre = c1 - 1 == -1 ? 0 : Store.visibledatacolumn[c1 - 1];\n                        _this.selectRange.push({\n                            'left': col_pre,\n                            'width': col - col_pre - 1,\n                            'top': row_pre,\n                            'height': row - row_pre - 1,\n                            'left_move': col_pre,\n                            'width_move': col - col_pre - 1,\n                            'top_move': row_pre,\n                            'height_move': row - row_pre - 1,\n                            'row': [\n                                r1,\n                                r2\n                            ],\n                            'column': [\n                                c1,\n                                c2\n                            ],\n                            'row_focus': r1,\n                            'column_focus': c1\n                        });\n                    }\n                }\n                selectionCopyShow(_this.selectRange);\n            });\n            $(document).off('click.CFmultiRangeConfirm').on('click.CFmultiRangeConfirm', '#luckysheet-multiRange-dialog-confirm', function () {\n                $(this).parents('#luckysheet-multiRange-dialog').hide();\n                let dataItem = $(this).attr('data-item');\n                let v = $(this).parents('#luckysheet-multiRange-dialog').find('input').val();\n                $('#luckysheet-administerRule-dialog .item[data-item=' + dataItem + '] input').val(v);\n                let sheetIndex = $('#luckysheet-administerRule-dialog .chooseSheet option:selected').val();\n                _this.fileClone[getSheetIndex(sheetIndex)]['luckysheet_conditionformat_save'][dataItem].cellrange = _this.getRangeByTxt(v);\n                $('#luckysheet-modal-dialog-mask').show();\n                $('#luckysheet-administerRule-dialog').show();\n                let range = [];\n                selectionCopyShow(range);\n            });\n            $(document).off('click.CFmultiRangeClose').on('click.CFmultiRangeClose', '#luckysheet-multiRange-dialog-close', function () {\n                $(this).parents('#luckysheet-multiRange-dialog').hide();\n                $('#luckysheet-modal-dialog-mask').show();\n                $('#luckysheet-administerRule-dialog').show();\n                $('#luckysheet-formula-functionrange-select').hide();\n                $('#luckysheet-row-count-show').hide();\n                $('#luckysheet-column-count-show').hide();\n                let range = [];\n                selectionCopyShow(range);\n            });    // 新建规则\n            // 新建规则\n            $(document).off('click.CFnewConditionRule').on('click.CFnewConditionRule', '#newConditionRule', function () {\n                let sheetIndex = $('#luckysheet-administerRule-dialog .chooseSheet option:selected').val();\n                if (!checkProtectionFormatCells(sheetIndex)) {\n                    return;\n                }\n                if (Store.luckysheet_select_save.length == 0) {\n                    if (isEditMode()) {\n                        alert(conditionformat_Text.pleaseSelectRange);\n                    } else {\n                        tooltip.info(conditionformat_Text.pleaseSelectRange, '');\n                    }\n                    return;\n                }\n                _this.newConditionRuleDialog(1);\n            });\n            $(document).off('click.CFnewConditionRuleConfirm').on('click.CFnewConditionRuleConfirm', '#luckysheet-newConditionRule-dialog-confirm', function () {\n                if (!checkProtectionFormatCells(Store.currentSheetIndex)) {\n                    return;\n                }\n                let index = $('#luckysheet-newConditionRule-dialog .ruleTypeItem.on').index();\n                let type1 = $('#luckysheet-newConditionRule-dialog #type1 option:selected').val();\n                let type2 = $('#luckysheet-newConditionRule-dialog .' + type1 + 'Box #type2 option:selected').val();\n                let format, rule;\n                if (index == 0) {\n                    if (type1 == 'dataBar') {\n                        //数据条\n                        let color = $(this).parents('#luckysheet-newConditionRule-dialog').find('.dataBarBox .luckysheet-conditionformat-config-color').spectrum('get').toHexString();\n                        if (type2 == 'gradient') {\n                            //渐变填充\n                            format = [\n                                color,\n                                '#ffffff'\n                            ];\n                        } else if (type2 == 'solid') {\n                            //实心填充\n                            format = [color];\n                        }\n                        rule = {\n                            'type': 'dataBar',\n                            'cellrange': $.extend(true, [], Store.luckysheet_select_save),\n                            'format': format\n                        };\n                    } else if (type1 == 'colorGradation') {\n                        //色阶\n                        let maxcolor = $(this).parents('#luckysheet-newConditionRule-dialog').find('.colorGradationBox .maxVal .luckysheet-conditionformat-config-color').spectrum('get').toRgbString();\n                        let midcolor = $(this).parents('#luckysheet-newConditionRule-dialog').find('.colorGradationBox .midVal .luckysheet-conditionformat-config-color').spectrum('get').toRgbString();\n                        let mincolor = $(this).parents('#luckysheet-newConditionRule-dialog').find('.colorGradationBox .minVal .luckysheet-conditionformat-config-color').spectrum('get').toRgbString();\n                        if (type2 == 'threeColor') {\n                            //三色\n                            format = [\n                                maxcolor,\n                                midcolor,\n                                mincolor\n                            ];\n                        } else if (type2 == 'twoColor') {\n                            //双色\n                            format = [\n                                maxcolor,\n                                mincolor\n                            ];\n                        }\n                        rule = {\n                            'type': 'colorGradation',\n                            'cellrange': $.extend(true, [], Store.luckysheet_select_save),\n                            'format': format\n                        };\n                    } else if (type1 == 'icons') {\n                        //图标集\n                        let len = $(this).parents('#luckysheet-newConditionRule-dialog').find('.iconsBox .model').attr('data-len');\n                        let leftMin = $(this).parents('#luckysheet-newConditionRule-dialog').find('.iconsBox .model').attr('data-leftmin');\n                        let top = $(this).parents('#luckysheet-newConditionRule-dialog').find('.iconsBox .model').attr('data-top');\n                        format = {\n                            'len': len,\n                            'leftMin': leftMin,\n                            'top': top\n                        };\n                        rule = {\n                            'type': 'icons',\n                            'cellrange': $.extend(true, [], Store.luckysheet_select_save),\n                            'format': format\n                        };\n                    }\n                } else {\n                    let conditionName = '', conditionRange = [], conditionValue = [];\n                    if (index == 1) {\n                        if (type1 == 'number') {\n                            //单元格值\n                            conditionName = type2;\n                            if (type2 == 'betweenness') {\n                                let v1 = $('#luckysheet-newConditionRule-dialog #conditionVal input').val().trim();\n                                let v2 = $('#luckysheet-newConditionRule-dialog #conditionVal2 input').val().trim();    //条件值是否是选区\n                                //条件值是否是选区\n                                let rangeArr1 = _this.getRangeByTxt(v1);\n                                if (rangeArr1.length > 1) {\n                                    _this.infoDialog(conditionformat_Text.onlySingleCell, '');\n                                    return;\n                                } else if (rangeArr1.length == 1) {\n                                    let r1 = rangeArr1[0].row[0], r2 = rangeArr1[0].row[1];\n                                    let c1 = rangeArr1[0].column[0], c2 = rangeArr1[0].column[1];\n                                    if (r1 == r2 && c1 == c2) {\n                                        v1 = getcellvalue(r1, c1, Store.flowdata);\n                                        conditionRange.push({\n                                            'row': rangeArr1[0].row,\n                                            'column': rangeArr1[0].column\n                                        });\n                                        conditionValue.push(v1);\n                                    } else {\n                                        _this.infoDialog(conditionformat_Text.onlySingleCell, '');\n                                        return;\n                                    }\n                                } else if (rangeArr1.length == 0) {\n                                    if (isNaN(v1) || v1 == '') {\n                                        _this.infoDialog(conditionformat_Text.conditionValueCanOnly, '');\n                                        return;\n                                    } else {\n                                        conditionValue.push(v1);\n                                    }\n                                }\n                                let rangeArr2 = _this.getRangeByTxt(v2);\n                                if (rangeArr2.length > 1) {\n                                    _this.infoDialog(conditionformat_Text.onlySingleCell, '');\n                                    return;\n                                } else if (rangeArr2.length == 1) {\n                                    let r1 = rangeArr2[0].row[0], r2 = rangeArr2[0].row[1];\n                                    let c1 = rangeArr2[0].column[0], c2 = rangeArr2[0].column[1];\n                                    if (r1 == r2 && c1 == c2) {\n                                        v2 = getcellvalue(r1, c1, Store.flowdata);\n                                        conditionRange.push({\n                                            'row': rangeArr2[0].row,\n                                            'column': rangeArr2[0].column\n                                        });\n                                        conditionValue.push(v2);\n                                    } else {\n                                        _this.infoDialog(conditionformat_Text.onlySingleCell, '');\n                                        return;\n                                    }\n                                } else if (rangeArr2.length == 0) {\n                                    if (isNaN(v2) || v2 == '') {\n                                        _this.infoDialog(conditionformat_Text.conditionValueCanOnly, '');\n                                        return;\n                                    } else {\n                                        conditionValue.push(v2);\n                                    }\n                                }\n                            } else {\n                                //条件值\n                                let v = $('#luckysheet-newConditionRule-dialog #conditionVal input').val().trim();    //条件值是否是选区\n                                //条件值是否是选区\n                                let rangeArr = _this.getRangeByTxt(v);\n                                if (rangeArr.length > 1) {\n                                    _this.infoDialog(conditionformat_Text.onlySingleCell, '');\n                                    return;\n                                } else if (rangeArr.length == 1) {\n                                    let r1 = rangeArr[0].row[0], r2 = rangeArr[0].row[1];\n                                    let c1 = rangeArr[0].column[0], c2 = rangeArr[0].column[1];\n                                    if (r1 == r2 && c1 == c2) {\n                                        v = getcellvalue(r1, c1, Store.flowdata);\n                                        conditionRange.push({\n                                            'row': rangeArr[0].row,\n                                            'column': rangeArr[0].column\n                                        });\n                                        conditionValue.push(v);\n                                    } else {\n                                        _this.infoDialog(conditionformat_Text.onlySingleCell, '');\n                                        return;\n                                    }\n                                } else if (rangeArr.length == 0) {\n                                    if (isNaN(v) || v == '') {\n                                        _this.infoDialog(conditionformat_Text.conditionValueCanOnly, '');\n                                        return;\n                                    } else {\n                                        conditionValue.push(v);\n                                    }\n                                }\n                            }\n                        } else if (type1 == 'text') {\n                            //特定文本\n                            conditionName = 'textContains';    //条件值\n                            //条件值\n                            let v = $('#luckysheet-newConditionRule-dialog #conditionVal input').val().trim();    //条件值是否是选区\n                            //条件值是否是选区\n                            let rangeArr = _this.getRangeByTxt(v);\n                            if (rangeArr.length > 1) {\n                                _this.infoDialog(conditionformat_Text.onlySingleCell, '');\n                                return;\n                            } else if (rangeArr.length == 1) {\n                                let r1 = rangeArr[0].row[0], r2 = rangeArr[0].row[1];\n                                let c1 = rangeArr[0].column[0], c2 = rangeArr[0].column[1];\n                                if (r1 == r2 && c1 == c2) {\n                                    v = getcellvalue(r1, c1, Store.flowdata);\n                                    conditionRange.push({\n                                        'row': rangeArr[0].row,\n                                        'column': rangeArr[0].column\n                                    });\n                                    conditionValue.push(v);\n                                } else {\n                                    _this.infoDialog(conditionformat_Text.onlySingleCell, '');\n                                    return;\n                                }\n                            } else if (rangeArr.length == 0) {\n                                if (v == '') {\n                                    _this.infoDialog(conditionformat_Text.conditionValueCanOnly, '');\n                                    return;\n                                } else {\n                                    conditionValue.push(v);\n                                }\n                            }\n                        } else if (type1 == 'date') {\n                            //发生日期\n                            conditionName = 'occurrenceDate';    //条件值\n                            //条件值\n                            let v = $('#luckysheet-newConditionRule-dialog #daterange-btn').val();\n                            if (v == '' || v == null) {\n                                _this.infoDialog(conditionformat_Text.pleaseSelectADate, '');\n                                return;\n                            }\n                            conditionValue.push(v);\n                        }\n                    } else if (index == 2) {\n                        //排名靠前靠后\n                        //条件名称\n                        if (type1 == 'top') {\n                            if ($('#luckysheet-newConditionRule-dialog #isPercent').is(':selected')) {\n                                conditionName = 'top10%';\n                            } else {\n                                conditionName = 'top10';\n                            }\n                        } else if (type1 == 'last') {\n                            if ($('#luckysheet-newConditionRule-dialog #isPercent').is(':selected')) {\n                                conditionName = 'last10%';\n                            } else {\n                                conditionName = 'last10';\n                            }\n                        }    //条件值\n                        //条件值\n                        let v = $('#luckysheet-newConditionRule-dialog #conditionVal input').val().trim();\n                        if (parseInt(v) != v || parseInt(v) < 1 || parseInt(v) > 1000) {\n                            _this.infoDialog(conditionformat_Text.pleaseEnterInteger, '');\n                            return;\n                        }\n                        conditionValue.push(parseInt(v));\n                    } else if (index == 3) {\n                        //平均值\n                        if (type1 == 'AboveAverage') {\n                            conditionName = 'AboveAverage';\n                            conditionValue.push('AboveAverage');\n                        } else if (type1 == 'SubAverage') {\n                            conditionName = 'SubAverage';\n                            conditionValue.push('SubAverage');\n                        }\n                    } else if (index == 4) {\n                        //重复值\n                        conditionName = 'duplicateValue';\n                        conditionValue.push(type1);\n                    } else if (index == 5) {\n                        //公式\n                        conditionName = 'formula';    //条件值\n                        //条件值\n                        let v = $('#luckysheet-newConditionRule-dialog #formulaConditionVal input').val().trim();\n                        if (v == '') {\n                            _this.infoDialog('Condition value cannot be empty!', '');\n                            return;\n                        }\n                        conditionValue.push(v);\n                    }    //格式颜色\n                    //格式颜色\n                    let textcolor;\n                    if ($('#luckysheet-newConditionRule-dialog #checkTextColor').is(':checked')) {\n                        textcolor = $('#luckysheet-newConditionRule-dialog #textcolorshow').spectrum('get').toHexString();\n                    } else {\n                        textcolor = null;\n                    }\n                    let cellcolor;\n                    if ($('#luckysheet-newConditionRule-dialog #checkCellColor').is(':checked')) {\n                        cellcolor = $('#luckysheet-newConditionRule-dialog #cellcolorshow').spectrum('get').toHexString();\n                    } else {\n                        cellcolor = null;\n                    }\n                    format = {\n                        'textColor': textcolor,\n                        'cellColor': cellcolor\n                    };\n                    rule = {\n                        'type': 'default',\n                        'cellrange': $.extend(true, [], Store.luckysheet_select_save),\n                        'format': format,\n                        'conditionName': conditionName,\n                        'conditionRange': conditionRange,\n                        'conditionValue': conditionValue\n                    };\n                }\n                $('#luckysheet-newConditionRule-dialog').hide();    //新建规则的入口\n                //新建规则的入口\n                let source = $(this).attr('data-source');\n                if (source == 0) {\n                    $('#luckysheet-modal-dialog-mask').hide();    //保存之前的规则\n                    //保存之前的规则\n                    let fileH = $.extend(true, [], Store.luckysheetfile);\n                    let historyRules = _this.getHistoryRules(fileH);    //保存当前的规则\n                    //保存当前的规则\n                    let ruleArr = Store.luckysheetfile[getSheetIndex(Store.currentSheetIndex)]['luckysheet_conditionformat_save'] == undefined ? [] : Store.luckysheetfile[getSheetIndex(Store.currentSheetIndex)]['luckysheet_conditionformat_save'];\n                    ruleArr.push(rule);\n                    Store.luckysheetfile[getSheetIndex(Store.currentSheetIndex)]['luckysheet_conditionformat_save'] = ruleArr;\n                    let fileC = $.extend(true, [], Store.luckysheetfile);\n                    let currentRules = _this.getCurrentRules(fileC);    //刷新一次表格\n                    //刷新一次表格\n                    _this.ref(historyRules, currentRules);    //发送给后台\n                    //发送给后台\n                    if (server.allowUpdate) {\n                        server.saveParam('all', Store.currentSheetIndex, ruleArr, { 'k': 'luckysheet_conditionformat_save' });\n                    }\n                } else if (source == 1) {\n                    //临时存储新规则\n                    let ruleArr = !!_this.fileClone[getSheetIndex(Store.currentSheetIndex)]['luckysheet_conditionformat_save'] ? _this.fileClone[getSheetIndex(Store.currentSheetIndex)]['luckysheet_conditionformat_save'] : [];\n                    ruleArr.push(rule);\n                    _this.fileClone[getSheetIndex(Store.currentSheetIndex)]['luckysheet_conditionformat_save'] = ruleArr;    //新建规则隐藏，管理规则显示\n                    //新建规则隐藏，管理规则显示\n                    _this.administerRuleDialog();\n                }\n            });\n            $(document).off('click.CFnewConditionRuleClose').on('click.CFnewConditionRuleClose', '#luckysheet-newConditionRule-dialog-close', function () {\n                //新建规则的入口\n                let source = $(this).attr('data-source');\n                if (source == 0) {\n                    $('#luckysheet-modal-dialog-mask').hide();\n                }\n                if (source == 1) {\n                    $('#luckysheet-administerRule-dialog').show();\n                }    //新建规则隐藏\n                //新建规则隐藏\n                $('#luckysheet-newConditionRule-dialog').hide();    //隐藏虚线框\n                //隐藏虚线框\n                $('#luckysheet-formula-functionrange-select').hide();\n                $('#luckysheet-row-count-show').hide();\n                $('#luckysheet-column-count-show').hide();\n            });    // 编辑规则\n            // 编辑规则\n            $(document).off('click.CFeditorConditionRule').on('click.CFeditorConditionRule', '#editorConditionRule', function () {\n                let sheetIndex = $('#luckysheet-administerRule-dialog .chooseSheet option:selected').val();\n                if (!checkProtectionFormatCells(sheetIndex)) {\n                    return;\n                }\n                let itemIndex = $('#luckysheet-administerRule-dialog .ruleList .listBox .item.on').attr('data-item');\n                let rule = {\n                    'sheetIndex': sheetIndex,\n                    'itemIndex': itemIndex,\n                    'data': _this.fileClone[getSheetIndex(sheetIndex)]['luckysheet_conditionformat_save'][itemIndex]\n                };\n                _this.editorRule = rule;\n                _this.editorConditionRuleDialog();\n            });\n            $(document).off('click.CFeditorConditionRuleConfirm').on('click.CFeditorConditionRuleConfirm', '#luckysheet-editorConditionRule-dialog-confirm', function () {\n                let index = $('#luckysheet-editorConditionRule-dialog .ruleTypeItem.on').index();\n                let type1 = $('#luckysheet-editorConditionRule-dialog #type1 option:selected').val();\n                let type2 = $('#luckysheet-editorConditionRule-dialog .' + type1 + 'Box #type2 option:selected').val();\n                let cellrange = _this.editorRule['data'].cellrange;\n                let format, rule;\n                if (index == 0) {\n                    if (type1 == 'dataBar') {\n                        //数据条\n                        let color = $(this).parents('#luckysheet-editorConditionRule-dialog').find('.dataBarBox .luckysheet-conditionformat-config-color').spectrum('get').toHexString();\n                        if (type2 == 'gradient') {\n                            //渐变填充\n                            format = [\n                                color,\n                                '#ffffff'\n                            ];\n                        } else if (type2 == 'solid') {\n                            //实心填充\n                            format = [color];\n                        }\n                        rule = {\n                            'type': 'dataBar',\n                            'cellrange': cellrange,\n                            'format': format\n                        };\n                    } else if (type1 == 'colorGradation') {\n                        //色阶\n                        let maxcolor = $(this).parents('#luckysheet-editorConditionRule-dialog').find('.colorGradationBox .maxVal .luckysheet-conditionformat-config-color').spectrum('get').toRgbString();\n                        let midcolor = $(this).parents('#luckysheet-editorConditionRule-dialog').find('.colorGradationBox .midVal .luckysheet-conditionformat-config-color').spectrum('get').toRgbString();\n                        let mincolor = $(this).parents('#luckysheet-editorConditionRule-dialog').find('.colorGradationBox .minVal .luckysheet-conditionformat-config-color').spectrum('get').toRgbString();\n                        if (type2 == 'threeColor') {\n                            //三色\n                            format = [\n                                maxcolor,\n                                midcolor,\n                                mincolor\n                            ];\n                        } else if (type2 == 'twoColor') {\n                            //双色\n                            format = [\n                                maxcolor,\n                                mincolor\n                            ];\n                        }\n                        rule = {\n                            'type': 'colorGradation',\n                            'cellrange': cellrange,\n                            'format': format\n                        };\n                    } else if (type1 == 'icons') {\n                        //图标集\n                        let len = $(this).parents('#luckysheet-editorConditionRule-dialog').find('.iconsBox .model').attr('data-len');\n                        let leftMin = $(this).parents('#luckysheet-editorConditionRule-dialog').find('.iconsBox .model').attr('data-leftmin');\n                        let top = $(this).parents('#luckysheet-editorConditionRule-dialog').find('.iconsBox .model').attr('data-top');\n                        format = {\n                            'len': len,\n                            'leftMin': leftMin,\n                            'top': top\n                        };\n                        rule = {\n                            'type': 'icons',\n                            'cellrange': cellrange,\n                            'format': format\n                        };\n                    }\n                } else {\n                    let conditionName = '', conditionRange = [], conditionValue = [];\n                    if (index == 1) {\n                        if (type1 == 'number') {\n                            //单元格值\n                            conditionName = type2;\n                            if (type2 == 'betweenness') {\n                                let v1 = $('#luckysheet-editorConditionRule-dialog #conditionVal input').val().trim();\n                                let v2 = $('#luckysheet-editorConditionRule-dialog #conditionVal2 input').val().trim();    //条件值是否是选区\n                                //条件值是否是选区\n                                let rangeArr1 = _this.getRangeByTxt(v1);\n                                if (rangeArr1.length > 1) {\n                                    _this.infoDialog(conditionformat_Text.onlySingleCell, '');\n                                    return;\n                                } else if (rangeArr1.length == 1) {\n                                    let r1 = rangeArr1[0].row[0], r2 = rangeArr1[0].row[1];\n                                    let c1 = rangeArr1[0].column[0], c2 = rangeArr1[0].column[1];\n                                    if (r1 == r2 && c1 == c2) {\n                                        v1 = getcellvalue(r1, c1, Store.flowdata);\n                                        conditionRange.push({\n                                            'row': rangeArr1[0].row,\n                                            'column': rangeArr1[0].column\n                                        });\n                                        conditionValue.push(v1);\n                                    } else {\n                                        _this.infoDialog(conditionformat_Text.onlySingleCell, '');\n                                        return;\n                                    }\n                                } else if (rangeArr1.length == 0) {\n                                    if (isNaN(v1) || v1 == '') {\n                                        _this.infoDialog(conditionformat_Text.conditionValueCanOnly, '');\n                                        return;\n                                    } else {\n                                        conditionValue.push(v1);\n                                    }\n                                }\n                                let rangeArr2 = _this.getRangeByTxt(v2);\n                                if (rangeArr2.length > 1) {\n                                    _this.infoDialog(conditionformat_Text.onlySingleCell, '');\n                                    return;\n                                } else if (rangeArr2.length == 1) {\n                                    let r1 = rangeArr2[0].row[0], r2 = rangeArr2[0].row[1];\n                                    let c1 = rangeArr2[0].column[0], c2 = rangeArr2[0].column[1];\n                                    if (r1 == r2 && c1 == c2) {\n                                        v2 = getcellvalue(r1, c1, Store.flowdata);\n                                        conditionRange.push({\n                                            'row': rangeArr2[0].row,\n                                            'column': rangeArr2[0].column\n                                        });\n                                        conditionValue.push(v2);\n                                    } else {\n                                        _this.infoDialog(conditionformat_Text.onlySingleCell, '');\n                                        return;\n                                    }\n                                } else if (rangeArr2.length == 0) {\n                                    if (isNaN(v2) || v2 == '') {\n                                        _this.infoDialog(conditionformat_Text.conditionValueCanOnly, '');\n                                        return;\n                                    } else {\n                                        conditionValue.push(v2);\n                                    }\n                                }\n                            } else {\n                                //条件值\n                                let v = $('#luckysheet-editorConditionRule-dialog #conditionVal input').val().trim();    //条件值是否是选区\n                                //条件值是否是选区\n                                let rangeArr = _this.getRangeByTxt(v);\n                                if (rangeArr.length > 1) {\n                                    _this.infoDialog(conditionformat_Text.onlySingleCell, '');\n                                    return;\n                                } else if (rangeArr.length == 1) {\n                                    let r1 = rangeArr[0].row[0], r2 = rangeArr[0].row[1];\n                                    let c1 = rangeArr[0].column[0], c2 = rangeArr[0].column[1];\n                                    if (r1 == r2 && c1 == c2) {\n                                        v = getcellvalue(r1, c1, Store.flowdata);\n                                        conditionRange.push({\n                                            'row': rangeArr[0].row,\n                                            'column': rangeArr[0].column\n                                        });\n                                        conditionValue.push(v);\n                                    } else {\n                                        _this.infoDialog(conditionformat_Text.onlySingleCell, '');\n                                        return;\n                                    }\n                                } else if (rangeArr.length == 0) {\n                                    if (isNaN(v) || v == '') {\n                                        _this.infoDialog(conditionformat_Text.conditionValueCanOnly, '');\n                                        return;\n                                    } else {\n                                        conditionValue.push(v);\n                                    }\n                                }\n                            }\n                        } else if (type1 == 'text') {\n                            //特定文本\n                            conditionName = 'textContains';    //条件值\n                            //条件值\n                            let v = $('#luckysheet-editorConditionRule-dialog #conditionVal input').val().trim();    //条件值是否是选区\n                            //条件值是否是选区\n                            let rangeArr = _this.getRangeByTxt(v);\n                            if (rangeArr.length > 1) {\n                                _this.infoDialog(conditionformat_Text.onlySingleCell, '');\n                                return;\n                            } else if (rangeArr.length == 1) {\n                                let r1 = rangeArr[0].row[0], r2 = rangeArr[0].row[1];\n                                let c1 = rangeArr[0].column[0], c2 = rangeArr[0].column[1];\n                                if (r1 == r2 && c1 == c2) {\n                                    v = getcellvalue(r1, c1, Store.flowdata);\n                                    conditionRange.push({\n                                        'row': rangeArr[0].row,\n                                        'column': rangeArr[0].column\n                                    });\n                                    conditionValue.push(v);\n                                } else {\n                                    _this.infoDialog(conditionformat_Text.onlySingleCell, '');\n                                    return;\n                                }\n                            } else if (rangeArr.length == 0) {\n                                if (isNaN(v) || v == '') {\n                                    _this.infoDialog(conditionformat_Text.conditionValueCanOnly, '');\n                                    return;\n                                } else {\n                                    conditionValue.push(v);\n                                }\n                            }\n                        } else if (type1 == 'date') {\n                            //发生日期\n                            conditionName = 'occurrenceDate';    //条件值\n                            //条件值\n                            let v = $('#luckysheet-editorConditionRule-dialog #daterange-btn').val();\n                            if (v == '' || v == null) {\n                                _this.infoDialog(conditionformat_Text.pleaseSelectADate, '');\n                                return;\n                            }\n                            conditionValue.push(v);\n                        }\n                    } else if (index == 2) {\n                        //排名靠前靠后\n                        //条件名称\n                        if (type1 == 'top') {\n                            if ($('#luckysheet-editorConditionRule-dialog #isPercent').is(':selected')) {\n                                conditionName = 'top10%';\n                            } else {\n                                conditionName = 'top10';\n                            }\n                        } else if (type1 == 'last') {\n                            if ($('#luckysheet-editorConditionRule-dialog #isPercent').is(':selected')) {\n                                conditionName = 'last10%';\n                            } else {\n                                conditionName = 'last10';\n                            }\n                        }    //条件值\n                        //条件值\n                        let v = $('#luckysheet-editorConditionRule-dialog #conditionVal input').val().trim();\n                        if (parseInt(v) != v || parseInt(v) < 1 || parseInt(v) > 1000) {\n                            _this.infoDialog(conditionformat_Text.pleaseEnterInteger, '');\n                            return;\n                        }\n                        conditionValue.push(v);\n                    } else if (index == 3) {\n                        //平均值\n                        if (type1 == 'AboveAverage') {\n                            conditionName = 'AboveAverage';\n                            conditionValue.push('AboveAverage');\n                        } else if (type1 == 'SubAverage') {\n                            conditionName = 'SubAverage';\n                            conditionValue.push('SubAverage');\n                        }\n                    } else if (index == 4) {\n                        //重复值\n                        conditionName = 'duplicateValue';\n                        conditionValue.push(type1);\n                    } else if (index == 5) {\n                        //公式\n                        conditionName = 'formula';    //条件值\n                        //条件值\n                        let v = $('#luckysheet-editorConditionRule-dialog #formulaConditionVal input').val().trim();\n                        console.log(v);\n                        if (v == '') {\n                            _this.infoDialog('Condition value cannot be empty!', '');\n                            return;\n                        }\n                        conditionValue.push(v);\n                    }    //格式颜色\n                    //格式颜色\n                    let textcolor;\n                    if ($('#luckysheet-editorConditionRule-dialog #checkTextColor').is(':checked')) {\n                        textcolor = $('#luckysheet-editorConditionRule-dialog #textcolorshow').spectrum('get').toHexString();\n                    } else {\n                        textcolor = null;\n                    }\n                    let cellcolor;\n                    if ($('#luckysheet-editorConditionRule-dialog #checkCellColor').is(':checked')) {\n                        cellcolor = $('#luckysheet-editorConditionRule-dialog #cellcolorshow').spectrum('get').toHexString();\n                    } else {\n                        cellcolor = null;\n                    }\n                    format = {\n                        'textColor': textcolor,\n                        'cellColor': cellcolor\n                    };\n                    rule = {\n                        'type': 'default',\n                        'cellrange': cellrange,\n                        'format': format,\n                        'conditionName': conditionName,\n                        'conditionRange': conditionRange,\n                        'conditionValue': conditionValue\n                    };\n                }    //修改编辑的规则\n                //修改编辑的规则\n                let sheetIndex = _this.editorRule['sheetIndex'];\n                let itemIndex = _this.editorRule['itemIndex'];\n                _this.fileClone[getSheetIndex(sheetIndex)]['luckysheet_conditionformat_save'][itemIndex] = rule;    //编辑规则隐藏，管理规则显示\n                //编辑规则隐藏，管理规则显示\n                $('#luckysheet-editorConditionRule-dialog').hide();\n                _this.administerRuleDialog();\n            });\n            $(document).off('click.CFeditorConditionRuleClose').on('click.CFeditorConditionRuleClose', '#luckysheet-editorConditionRule-dialog-close', function () {\n                //编辑规则隐藏，管理规则显示\n                $('#luckysheet-editorConditionRule-dialog').hide();\n                $('#luckysheet-administerRule-dialog').show();    //隐藏虚线框\n                //隐藏虚线框\n                $('#luckysheet-formula-functionrange-select').hide();\n                $('#luckysheet-row-count-show').hide();\n                $('#luckysheet-column-count-show').hide();\n            });    // 新建规则、编辑规则 类型切换\n            // 新建规则、编辑规则 类型切换\n            $(document).off('click.CFnewEditorRuleItem').on('click.CFnewEditorRuleItem', '.luckysheet-newEditorRule-dialog .ruleTypeItem', function () {\n                $(this).addClass('on').siblings().removeClass('on');\n                let index = $(this).index();\n                $(this).parents('.luckysheet-newEditorRule-dialog').find('.ruleExplainBox').html(_this.getRuleExplain(index));\n                _this.colorSelectInit();\n            });\n            $(document).off('change.CFnewEditorRuleType1').on('change.CFnewEditorRuleType1', '.luckysheet-newEditorRule-dialog #type1', function () {\n                let optionVal = $(this).find('option:selected').val();\n                if (optionVal == 'dataBar' || optionVal == 'colorGradation' || optionVal == 'icons' || optionVal == 'number' || optionVal == 'text' || optionVal == 'date') {\n                    $(this).parents('.luckysheet-newEditorRule-dialog').find('.' + optionVal + 'Box').show().siblings().hide();\n                }\n                if (optionVal == 'date') {\n                    _this.daterangeInit($(this).parents('.luckysheet-newEditorRule-dialog').attr('id'));\n                }\n            });\n            $(document).off('change.CFnewEditorRuleType2').on('change.CFnewEditorRuleType2', '.luckysheet-newEditorRule-dialog #type2', function () {\n                let type1 = $(this).parents('.luckysheet-newEditorRule-dialog').find('#type1 option:selected').val();\n                if (type1 == 'colorGradation') {\n                    let type2 = $(this).find('option:selected').val();\n                    if (type2 == 'threeColor') {\n                        $(this).parents('.luckysheet-newEditorRule-dialog').find('.midVal').show();\n                    } else {\n                        $(this).parents('.luckysheet-newEditorRule-dialog').find('.midVal').hide();\n                    }\n                } else if (type1 == 'number') {\n                    let type2 = $(this).find('option:selected').val();\n                    if (type2 == 'betweenness') {\n                        $(this).parents('.luckysheet-newEditorRule-dialog').find('.txt').show();\n                        $(this).parents('.luckysheet-newEditorRule-dialog').find('#conditionVal2').show();\n                    } else {\n                        $(this).parents('.luckysheet-newEditorRule-dialog').find('.txt').hide();\n                        $(this).parents('.luckysheet-newEditorRule-dialog').find('#conditionVal2').hide();\n                    }\n                }\n            });\n            $(document).off('click.CFiconsShowbox').on('click.CFiconsShowbox', '.luckysheet-newEditorRule-dialog .iconsBox .showbox', function () {\n                $(this).parents('.iconsBox').find('ul').toggle();\n            });\n            $(document).off('click.CFiconsLi').on('click.CFiconsLi', '.luckysheet-newEditorRule-dialog .iconsBox li', function () {\n                let len = $(this).find('div').attr('data-len');\n                let leftmin = $(this).find('div').attr('data-leftmin');\n                let top = $(this).find('div').attr('data-top');\n                let title = $(this).find('div').attr('title');\n                let position = $(this).find('div').css('background-position');\n                $(this).parents('.iconsBox').find('.showbox .model').css('background-position', position);\n                $(this).parents('.iconsBox').find('.showbox .model').attr('data-len', len);\n                $(this).parents('.iconsBox').find('.showbox .model').attr('data-leftmin', leftmin);\n                $(this).parents('.iconsBox').find('.showbox .model').attr('data-top', top);\n                $(this).parents('.iconsBox').find('.showbox .model').attr('title', title);\n                $(this).parents('ul').hide();\n            });    // 删除规则\n            // 删除规则\n            $(document).off('click.CFdeleteConditionRule').on('click.CFdeleteConditionRule', '#deleteConditionRule', function () {\n                let sheetIndex = $('#luckysheet-administerRule-dialog .chooseSheet option:selected').val();\n                if (!checkProtectionFormatCells(sheetIndex)) {\n                    return;\n                }\n                let itemIndex = $('#luckysheet-administerRule-dialog .ruleList .listBox .item.on').attr('data-item');\n                _this.fileClone[getSheetIndex(sheetIndex)]['luckysheet_conditionformat_save'].splice(itemIndex, 1);\n                _this.administerRuleDialog();\n            });    // 规则子菜单弹出层 点击确定修改样式\n            // 规则子菜单弹出层 点击确定修改样式\n            $(document).off('click.CFdefault').on('click.CFdefault', '#luckysheet-conditionformat-dialog-confirm', function () {\n                if (!checkProtectionFormatCells(Store.currentSheetIndex)) {\n                    return;\n                }    //条件名称\n                //条件名称\n                let conditionName = $('#luckysheet-conditionformat-dialog .box').attr('data-itemvalue');    //条件单元格\n                //条件单元格\n                let conditionRange = [];    //条件值\n                //条件值\n                let conditionValue = [];\n                if (conditionName == 'greaterThan' || conditionName == 'lessThan' || conditionName == 'equal' || conditionName == 'textContains') {\n                    let v = $('#luckysheet-conditionformat-dialog #conditionVal').val().trim();    //条件值是否是选区\n                    //条件值是否是选区\n                    let rangeArr = _this.getRangeByTxt(v);\n                    if (rangeArr.length > 1) {\n                        _this.infoDialog(conditionformat_Text.onlySingleCell, '');\n                        return;\n                    } else if (rangeArr.length == 1) {\n                        let r1 = rangeArr[0].row[0], r2 = rangeArr[0].row[1];\n                        let c1 = rangeArr[0].column[0], c2 = rangeArr[0].column[1];\n                        if (r1 == r2 && c1 == c2) {\n                            v = getcellvalue(r1, c1, Store.flowdata);\n                            conditionRange.push({\n                                'row': rangeArr[0].row,\n                                'column': rangeArr[0].column\n                            });\n                            conditionValue.push(v);\n                        } else {\n                            _this.infoDialog(conditionformat_Text.onlySingleCell, '');\n                            return;\n                        }\n                    } else if (rangeArr.length == 0) {\n                        if (isNaN(v) || v == '') {\n                            _this.infoDialog(conditionformat_Text.conditionValueCanOnly, '');\n                            return;\n                        } else {\n                            conditionValue.push(v);\n                        }\n                    }\n                } else if (conditionName == 'betweenness') {\n                    //介于\n                    let v1 = $('#luckysheet-conditionformat-dialog #conditionVal').val().trim();\n                    let v2 = $('#luckysheet-conditionformat-dialog #conditionVal2').val().trim();    //条件值是否是选区\n                    //条件值是否是选区\n                    let rangeArr1 = _this.getRangeByTxt(v1);\n                    if (rangeArr1.length > 1) {\n                        _this.infoDialog(conditionformat_Text.onlySingleCell, '');\n                        return;\n                    } else if (rangeArr1.length == 1) {\n                        let r1 = rangeArr1[0].row[0], r2 = rangeArr1[0].row[1];\n                        let c1 = rangeArr1[0].column[0], c2 = rangeArr1[0].column[1];\n                        if (r1 == r2 && c1 == c2) {\n                            v1 = getcellvalue(r1, c1, Store.flowdata);\n                            conditionRange.push({\n                                'row': rangeArr1[0].row,\n                                'column': rangeArr1[0].column\n                            });\n                            conditionValue.push(v1);\n                        } else {\n                            _this.infoDialog(conditionformat_Text.onlySingleCell, '');\n                            return;\n                        }\n                    } else if (rangeArr1.length == 0) {\n                        if (isNaN(v1) || v1 == '') {\n                            _this.infoDialog(conditionformat_Text.conditionValueCanOnly, '');\n                            return;\n                        } else {\n                            conditionValue.push(v1);\n                        }\n                    }\n                    let rangeArr2 = _this.getRangeByTxt(v2);\n                    if (rangeArr2.length > 1) {\n                        _this.infoDialog(conditionformat_Text.onlySingleCell, '');\n                        return;\n                    } else if (rangeArr2.length == 1) {\n                        let r1 = rangeArr2[0].row[0], r2 = rangeArr2[0].row[1];\n                        let c1 = rangeArr2[0].column[0], c2 = rangeArr2[0].column[1];\n                        if (r1 == r2 && c1 == c2) {\n                            v2 = getcellvalue(r1, c1, Store.flowdata);\n                            conditionRange.push({\n                                'row': rangeArr2[0].row,\n                                'column': rangeArr2[0].column\n                            });\n                            conditionValue.push(v2);\n                        } else {\n                            _this.infoDialog(conditionformat_Text.onlySingleCell, '');\n                            return;\n                        }\n                    } else if (rangeArr2.length == 0) {\n                        if (isNaN(v2) || v2 == '') {\n                            _this.infoDialog(conditionformat_Text.conditionValueCanOnly, '');\n                            return;\n                        } else {\n                            conditionValue.push(v2);\n                        }\n                    }\n                } else if (conditionName == 'occurrenceDate') {\n                    //日期\n                    let v = $('#luckysheet-conditionformat-dialog #daterange-btn').val();\n                    if (v == '' || v == null) {\n                        _this.infoDialog(conditionformat_Text.pleaseSelectADate, '');\n                        return;\n                    }\n                    conditionValue.push(v);\n                } else if (conditionName == 'duplicateValue') {\n                    //重复值\n                    conditionValue.push($('#luckysheet-conditionformat-dialog #conditionVal option:selected').val());\n                } else if (conditionName == 'top10' || conditionName == 'top10%' || conditionName == 'last10' || conditionName == 'last10%') {\n                    let v = $('#luckysheet-conditionformat-dialog #conditionVal').val().trim();\n                    if (parseInt(v) != v || parseInt(v) < 1 || parseInt(v) > 1000) {\n                        _this.infoDialog(conditionformat_Text.pleaseEnterInteger, '');\n                        return;\n                    }\n                    conditionValue.push(v);\n                } else if (conditionName == 'AboveAverage') {\n                    //高于平均值\n                    conditionValue.push('AboveAverage');\n                } else if (conditionName == 'SubAverage') {\n                    //低于平均值\n                    conditionValue.push('SubAverage');\n                }    //格式颜色\n                //格式颜色\n                let textcolor;\n                if ($('#checkTextColor').is(':checked')) {\n                    textcolor = $('#textcolorshow').spectrum('get').toHexString();\n                } else {\n                    textcolor = null;\n                }\n                let cellcolor;\n                if ($('#checkCellColor').is(':checked')) {\n                    cellcolor = $('#cellcolorshow').spectrum('get').toHexString();\n                } else {\n                    cellcolor = null;\n                }    //保存之前的规则\n                //保存之前的规则\n                let fileH = $.extend(true, [], Store.luckysheetfile);\n                let historyRules = _this.getHistoryRules(fileH);    //保存当前的规则\n                //保存当前的规则\n                let rule = {\n                    'type': 'default',\n                    'cellrange': $.extend(true, [], Store.luckysheet_select_save),\n                    'format': {\n                        'textColor': textcolor,\n                        'cellColor': cellcolor\n                    },\n                    'conditionName': conditionName,\n                    'conditionRange': conditionRange,\n                    'conditionValue': conditionValue\n                };\n                let ruleArr = Store.luckysheetfile[getSheetIndex(Store.currentSheetIndex)]['luckysheet_conditionformat_save'] == undefined ? [] : Store.luckysheetfile[getSheetIndex(Store.currentSheetIndex)]['luckysheet_conditionformat_save'];\n                ruleArr.push(rule);\n                Store.luckysheetfile[getSheetIndex(Store.currentSheetIndex)]['luckysheet_conditionformat_save'] = ruleArr;\n                let fileC = $.extend(true, [], Store.luckysheetfile);\n                let currentRules = _this.getCurrentRules(fileC);    //刷新一次表格\n                //刷新一次表格\n                _this.ref(historyRules, currentRules);    //隐藏一些dom\n                //隐藏一些dom\n                $('#luckysheet-modal-dialog-mask').hide();\n                $('#luckysheet-conditionformat-dialog').hide();    //发送给后台\n                //发送给后台\n                if (server.allowUpdate) {\n                    server.saveParam('all', Store.currentSheetIndex, ruleArr, { 'k': 'luckysheet_conditionformat_save' });\n                }\n            });    // 图标集弹出层 选择\n            // 图标集弹出层 选择\n            $(document).off('click.CFicons').on('click.CFicons', '#luckysheet-CFicons-dialog .item', function () {\n                $('#luckysheet-modal-dialog-mask').hide();\n                $('#luckysheet-CFicons-dialog').hide();\n                if (Store.luckysheet_select_save.length > 0) {\n                    let cellrange = $.extend(true, [], Store.luckysheet_select_save);\n                    let format = {\n                        'len': $(this).attr('data-len'),\n                        'leftMin': $(this).attr('data-leftMin'),\n                        'top': $(this).attr('data-top')\n                    };\n                    _this.updateItem('icons', cellrange, format);\n                }\n            });    // 选择单元格\n            // 选择单元格\n            $(document).on('click', '.range .fa-table', function () {\n                let id = $(this).parents('.luckysheet-modal-dialog').attr('id');\n                $('#' + id).hide();    //入口\n                //入口\n                let source;\n                if (id == 'luckysheet-conditionformat-dialog') {\n                    let $id = $(this).siblings('input').attr('id');\n                    if ($id == 'conditionVal') {\n                        source = '0_1';\n                    } else {\n                        source = '0_2';\n                    }\n                } else if (id == 'luckysheet-newConditionRule-dialog') {\n                    let $id = $(this).parents('.range').attr('id');\n                    if ($id == 'formulaConditionVal') {\n                        source = '1_0';\n                    } else if ($id == 'conditionVal') {\n                        source = '1_1';\n                    } else {\n                        source = '1_2';\n                    }\n                } else if (id == 'luckysheet-editorConditionRule-dialog') {\n                    let $id = $(this).parents('.range').attr('id');\n                    if ($id == 'formulaConditionVal') {\n                        source = '2_0';\n                    } else if ($id == 'conditionVal') {\n                        source = '2_1';\n                    } else {\n                        source = '2_2';\n                    }\n                }    //input值\n                //input值\n                let v = $(this).siblings('input').val();\n                _this.singleRangeDialog(source, v);\n                selectionCopyShow(_this.getRangeByTxt(v));\n            });\n            $(document).on('click', '#luckysheet-singleRange-dialog-confirm', function () {\n                $('#luckysheet-modal-dialog-mask').show();\n                $(this).parents('#luckysheet-singleRange-dialog').hide();\n                let source = $(this).attr('data-source');\n                let v = $(this).parents('#luckysheet-singleRange-dialog').find('input').val();\n                if (source == '0_1') {\n                    $('#luckysheet-conditionformat-dialog').show();\n                    $('#luckysheet-conditionformat-dialog #conditionVal').val(v);\n                } else if (source == '0_2') {\n                    $('#luckysheet-conditionformat-dialog').show();\n                    $('#luckysheet-conditionformat-dialog #conditionVal2').val(v);\n                } else if (source == '1_0') {\n                    $('#luckysheet-newConditionRule-dialog').show();\n                    $('#luckysheet-newConditionRule-dialog #formulaConditionVal input').val(v);\n                } else if (source == '1_1') {\n                    $('#luckysheet-newConditionRule-dialog').show();\n                    $('#luckysheet-newConditionRule-dialog #conditionVal input').val(v);\n                } else if (source == '1_2') {\n                    $('#luckysheet-newConditionRule-dialog').show();\n                    $('#luckysheet-newConditionRule-dialog #conditionVal2 input').val(v);\n                } else if (source == '2_0') {\n                    $('#luckysheet-editorConditionRule-dialog').show();\n                    $('#luckysheet-editorConditionRule-dialog #formulaConditionVal input').val(v);\n                } else if (source == '2_1') {\n                    $('#luckysheet-editorConditionRule-dialog').show();\n                    $('#luckysheet-editorConditionRule-dialog #conditionVal input').val(v);\n                } else if (source == '2_2') {\n                    $('#luckysheet-editorConditionRule-dialog').show();\n                    $('#luckysheet-editorConditionRule-dialog #conditionVal2 input').val(v);\n                }\n                let range = [];\n                selectionCopyShow(range);\n            });\n            $(document).on('click', '#luckysheet-singleRange-dialog-close', function () {\n                $('#luckysheet-modal-dialog-mask').show();\n                $(this).parents('#luckysheet-singleRange-dialog').hide();\n                let source = $(this).attr('data-source');\n                if (source == '0_1' || source == '0_2') {\n                    $('#luckysheet-conditionformat-dialog').show();\n                } else if (source == '1_0' || source == '1_1' || source == '1_2') {\n                    $('#luckysheet-newConditionRule-dialog').show();\n                } else if (source == '2_0' || source == '2_1' || source == '2_2') {\n                    $('#luckysheet-editorConditionRule-dialog').show();\n                }\n                let range = [];\n                selectionCopyShow(range);\n            });    // 弹出层右上角关闭按钮\n            // 弹出层右上角关闭按钮\n            $(document).on('click', '.luckysheet-modal-dialog-title-close', function () {\n                let id = $(this).parents('.luckysheet-modal-dialog').attr('id');    //新建规则弹出层\n                //新建规则弹出层\n                if (id == 'luckysheet-newConditionRule-dialog') {\n                    let source = $('#' + id).find('#luckysheet-newConditionRule-dialog-close').attr('data-source');    //新建规则入口\n                    //新建规则入口\n                    if (source == 1) {\n                        $('#luckysheet-administerRule-dialog').show();\n                    }\n                }    //编辑规则弹出层\n                //编辑规则弹出层\n                if (id == 'luckysheet-editorConditionRule-dialog') {\n                    $('#luckysheet-administerRule-dialog').show();\n                }    //选择单元格弹出层\n                //选择单元格弹出层\n                if (id == 'luckysheet-singleRange-dialog') {\n                    $('#luckysheet-modal-dialog-mask').show();\n                    let source = $(this).parents('#luckysheet-singleRange-dialog').find('#luckysheet-singleRange-dialog-confirm').attr('data-source');\n                    if (source == '0_1' || source == '0_2') {\n                        $('#luckysheet-conditionformat-dialog').show();\n                    } else if (source == '1_1' || source == '1_2') {\n                        $('#luckysheet-newConditionRule-dialog').show();\n                    } else if (source == '2_1' || source == '2_2') {\n                        $('#luckysheet-editorConditionRule-dialog').show();\n                    }\n                    let range = [];\n                    selectionCopyShow(range);\n                }    //选择应用范围弹出层\n                //选择应用范围弹出层\n                if (id == 'luckysheet-multiRange-dialog') {\n                    $('#luckysheet-modal-dialog-mask').show();\n                    $('#luckysheet-administerRule-dialog').show();\n                    let range = [];\n                    selectionCopyShow(range);\n                }    //提示框\n                //提示框\n                if (id == 'luckysheet-conditionformat-info-dialog') {\n                    $('#luckysheet-modal-dialog-mask').show();\n                }\n            });    //提示框\n            //提示框\n            $(document).on('click', '#luckysheet-conditionformat-info-dialog-close', function () {\n                $(this).parents('#luckysheet-conditionformat-info-dialog').hide();\n            });\n        },\n        singleRangeDialog: function (source, value) {\n            $('#luckysheet-modal-dialog-mask').hide();\n            $('#luckysheet-singleRange-dialog').remove();\n            const conditionformat_Text = locale().conditionformat;\n            $('body').append(replaceHtml(modelHTML, {\n                'id': 'luckysheet-singleRange-dialog',\n                'addclass': 'luckysheet-singleRange-dialog',\n                'title': conditionformat_Text.selectCell,\n                'content': `<input readonly=\"readonly\" placeholder=\"${ conditionformat_Text.pleaseSelectCell }\" value=\"${ value }\"/>`,\n                'botton': `<button id=\"luckysheet-singleRange-dialog-confirm\" class=\"btn btn-primary\" data-source=\"${ source }\">${ conditionformat_Text.confirm }</button>\n                        <button id=\"luckysheet-singleRange-dialog-close\" class=\"btn btn-default\" data-source=\"${ source }\">${ conditionformat_Text.cancel }</button>`,\n                'style': 'z-index:100003'\n            }));\n            let $t = $('#luckysheet-singleRange-dialog').find('.luckysheet-modal-dialog-content').css('min-width', 300).end(), myh = $t.outerHeight(), myw = $t.outerWidth();\n            let winw = $(window).width(), winh = $(window).height();\n            let scrollLeft = $(document).scrollLeft(), scrollTop = $(document).scrollTop();\n            $('#luckysheet-singleRange-dialog').css({\n                'left': (winw + scrollLeft - myw) / 2,\n                'top': (winh + scrollTop - myh) / 3\n            }).show();\n        },\n        multiRangeDialog: function (dataItem, value) {\n            let _this = this;\n            $('#luckysheet-modal-dialog-mask').hide();\n            $('#luckysheet-multiRange-dialog').remove();\n            const conditionformat_Text = locale().conditionformat;\n            $('body').append(replaceHtml(modelHTML, {\n                'id': 'luckysheet-multiRange-dialog',\n                'addclass': 'luckysheet-multiRange-dialog',\n                'title': conditionformat_Text.selectRange,\n                'content': `<input readonly=\"readonly\" placeholder=\"${ conditionformat_Text.pleaseSelectRange }\" value=\"${ value }\"/>`,\n                'botton': `<button id=\"luckysheet-multiRange-dialog-confirm\" class=\"btn btn-primary\" data-item=\"${ dataItem }\">${ conditionformat_Text.confirm }</button>\n                        <button id=\"luckysheet-multiRange-dialog-close\" class=\"btn btn-default\">${ conditionformat_Text.cancel }</button>`,\n                'style': 'z-index:100003'\n            }));\n            let $t = $('#luckysheet-multiRange-dialog').find('.luckysheet-modal-dialog-content').css('min-width', 300).end(), myh = $t.outerHeight(), myw = $t.outerWidth();\n            let winw = $(window).width(), winh = $(window).height();\n            let scrollLeft = $(document).scrollLeft(), scrollTop = $(document).scrollTop();\n            $('#luckysheet-multiRange-dialog').css({\n                'left': (winw + scrollLeft - myw) / 2,\n                'top': (winh + scrollTop - myh) / 3\n            }).show();\n            selectionCopyShow(_this.getRangeByTxt(value));\n        },\n        getTxtByRange: function (range) {\n            if (range.length > 0) {\n                let txt = [];\n                for (let s = 0; s < range.length; s++) {\n                    let r1 = range[s].row[0], r2 = range[s].row[1];\n                    let c1 = range[s].column[0], c2 = range[s].column[1];\n                    txt.push(getRangetxt(Store.currentSheetIndex, {\n                        'row': [\n                            r1,\n                            r2\n                        ],\n                        'column': [\n                            c1,\n                            c2\n                        ]\n                    }, Store.currentSheetIndex));\n                }\n                return txt.join(',');\n            }\n        },\n        getRangeByTxt: function (txt) {\n            let range = [];\n            txt = txt.toString();\n            if (txt.indexOf(',') != -1) {\n                let arr = txt.split(',');\n                for (let i = 0; i < arr.length; i++) {\n                    if (formula.iscelldata(arr[i])) {\n                        range.push(formula.getcellrange(arr[i]));\n                    } else {\n                        range = [];\n                        break;\n                    }\n                }\n            } else {\n                if (formula.iscelldata(txt)) {\n                    range.push(formula.getcellrange(txt));\n                }\n            }\n            return range;\n        },\n        colorSelectInit: function () {\n            const conditionformat_Text = locale().conditionformat;\n            $('.luckysheet-conditionformat-config-color').spectrum({\n                showPalette: true,\n                showPaletteOnly: true,\n                preferredFormat: 'hex',\n                clickoutFiresChange: false,\n                showInitial: true,\n                showInput: true,\n                // flat: true,\n                hideAfterPaletteSelect: true,\n                showSelectionPalette: true,\n                // showButtons: false,//隐藏选择取消按钮\n                maxPaletteSize: 8,\n                maxSelectionSize: 8,\n                // color: currenColor,\n                cancelText: conditionformat_Text.cancel,\n                chooseText: conditionformat_Text.confirmColor,\n                togglePaletteMoreText: '自定义',\n                togglePaletteLessText: '收起',\n                togglePaletteOnly: true,\n                clearText: conditionformat_Text.clearColorSelect,\n                noColorSelectedText: '没有颜色被选择',\n                localStorageKey: 'spectrum.textcolor' + server.gridKey,\n                palette: [\n                    [\n                        '#000',\n                        '#444',\n                        '#666',\n                        '#999',\n                        '#ccc',\n                        '#eee',\n                        '#f3f3f3',\n                        '#fff'\n                    ],\n                    [\n                        '#f00',\n                        '#f90',\n                        '#ff0',\n                        '#0f0',\n                        '#0ff',\n                        '#00f',\n                        '#90f',\n                        '#f0f'\n                    ],\n                    [\n                        '#f4cccc',\n                        '#fce5cd',\n                        '#fff2cc',\n                        '#d9ead3',\n                        '#d0e0e3',\n                        '#cfe2f3',\n                        '#d9d2e9',\n                        '#ead1dc'\n                    ],\n                    [\n                        '#ea9999',\n                        '#f9cb9c',\n                        '#ffe599',\n                        '#b6d7a8',\n                        '#a2c4c9',\n                        '#9fc5e8',\n                        '#b4a7d6',\n                        '#d5a6bd'\n                    ],\n                    [\n                        '#e06666',\n                        '#f6b26b',\n                        '#ffd966',\n                        '#93c47d',\n                        '#76a5af',\n                        '#6fa8dc',\n                        '#8e7cc3',\n                        '#c27ba0'\n                    ],\n                    [\n                        '#c00',\n                        '#e69138',\n                        '#f1c232',\n                        '#6aa84f',\n                        '#45818e',\n                        '#3d85c6',\n                        '#674ea7',\n                        '#a64d79'\n                    ],\n                    [\n                        '#900',\n                        '#b45f06',\n                        '#bf9000',\n                        '#38761d',\n                        '#134f5c',\n                        '#0b5394',\n                        '#351c75',\n                        '#741b47'\n                    ],\n                    [\n                        '#600',\n                        '#783f04',\n                        '#7f6000',\n                        '#274e13',\n                        '#0c343d',\n                        '#073763',\n                        '#20124d',\n                        '#4c1130'\n                    ]\n                ],\n                change: function (color) {\n                    if (color != null) {\n                        color = color.toHexString();\n                    }\n                }\n            });\n        },\n        conditionformatDialog: function (title, content) {\n            let _this = this;\n            $('#luckysheet-modal-dialog-mask').show();\n            $('#luckysheet-conditionformat-dialog').remove();\n            const conditionformat_Text = locale().conditionformat;\n            $('body').append(replaceHtml(modelHTML, {\n                'id': 'luckysheet-conditionformat-dialog',\n                'addclass': 'luckysheet-conditionformat-dialog',\n                'title': title,\n                'content': content,\n                'botton': `<button id=\"luckysheet-conditionformat-dialog-confirm\" class=\"btn btn-primary\">${ conditionformat_Text.confirm }</button>\n                        <button class=\"btn btn-default luckysheet-model-close-btn\">${ conditionformat_Text.cancel }</button>`,\n                'style': 'z-index:9999'\n            }));\n            let $t = $('#luckysheet-conditionformat-dialog').find('.luckysheet-modal-dialog-content').css('min-width', 300).end(), myh = $t.outerHeight(), myw = $t.outerWidth();\n            let winw = $(window).width(), winh = $(window).height();\n            let scrollLeft = $(document).scrollLeft(), scrollTop = $(document).scrollTop();\n            $('#luckysheet-conditionformat-dialog').css({\n                'left': (winw + scrollLeft - myw) / 2,\n                'top': (winh + scrollTop - myh) / 3\n            }).show();\n            _this.init();\n            _this.colorSelectInit();\n            if (title == locale().conditionformat.conditionformat_occurrenceDate) {\n                _this.daterangeInit('luckysheet-conditionformat-dialog');\n            }\n        },\n        CFiconsDialog: function () {\n            $('#luckysheet-modal-dialog-mask').show();\n            $('#luckysheet-CFicons-dialog').remove();\n            const conditionformat_Text = locale().conditionformat;\n            let content = `<div class=\"box\">\n                            <div style=\"margin-bottom: 10px;\">${ conditionformat_Text.pleaseSelectIcon }</div>\n                            <div class=\"title\">${ conditionformat_Text.direction }</div>\n                            <div class=\"list\">\n                                <div class=\"left\">\n                                    <div class=\"item\" data-len=\"3\" data-leftMin=\"0\" data-top=\"0\" title=\"${ conditionformat_Text.threeWayArrow }(${ conditionformat_Text.multicolor })\"><div style=\"background-position:0 0;\"></div></div>\n                                    <div class=\"item\" data-len=\"3\" data-leftMin=\"0\" data-top=\"1\" title=\"${ conditionformat_Text.threeTriangles }\"><div style=\"background-position:0 -20px;\"></div></div>\n                                    <div class=\"item\" data-len=\"4\" data-leftMin=\"0\" data-top=\"2\" title=\"${ conditionformat_Text.fourWayArrow }(${ conditionformat_Text.multicolor })\"><div style=\"background-position:0 -40px;\"></div></div>\n                                    <div class=\"item\" data-len=\"5\" data-leftMin=\"0\" data-top=\"3\" title=\"${ conditionformat_Text.fiveWayArrow }(${ conditionformat_Text.multicolor })\"><div style=\"background-position:0 -60px;\"></div></div>\n                                </div>\n                                <div class=\"right\">\n                                    <div class=\"item\" data-len=\"3\" data-leftMin=\"5\" data-top=\"0\" title=\"${ conditionformat_Text.threeWayArrow }(${ conditionformat_Text.grayColor })\"><div style=\"background-position:-131px 0;\"></div></div>\n                                    <div class=\"item\" data-len=\"4\" data-leftMin=\"5\" data-top=\"1\" title=\"${ conditionformat_Text.fourWayArrow }(${ conditionformat_Text.grayColor })\"><div style=\"background-position:-131px -20px;\"></div></div>\n                                    <div class=\"item\" data-len=\"5\" data-leftMin=\"5\" data-top=\"2\" title=\"${ conditionformat_Text.fiveWayArrow }(${ conditionformat_Text.grayColor })\"><div style=\"background-position:-131px -40px;\"></div></div>\n                                </div>\n                                <div style=\"clear:both;\"></div>\n                            </div>\n                            <div class=\"title\">${ conditionformat_Text.shape }</div>\n                            <div class=\"list\">\n                                <div class=\"left\">\n                                    <div class=\"item\" data-len=\"3\" data-leftMin=\"0\" data-top=\"4\" title=\"${ conditionformat_Text.threeColorTrafficLight }(${ conditionformat_Text.rimless })\"><div style=\"background-position:0 -80px;\"></div></div>\n                                    <div class=\"item\" data-len=\"3\" data-leftMin=\"0\" data-top=\"5\" title=\"${ conditionformat_Text.threeSigns }\"><div style=\"background-position:0 -100px;\"></div></div>\n                                    <div class=\"item\" data-len=\"4\" data-leftMin=\"0\" data-top=\"6\" title=\"${ conditionformat_Text.greenRedBlackGradient }\"><div style=\"background-position:0 -120px;\"></div></div>\n                                </div>\n                                <div class=\"right\">\n                                    <div class=\"item\" data-len=\"3\" data-leftMin=\"5\" data-top=\"4\" title=\"${ conditionformat_Text.threeColorTrafficLight }(${ conditionformat_Text.bordered })\"><div style=\"background-position:-131px -80px;\"></div></div>\n                                    <div class=\"item\" data-len=\"4\" data-leftMin=\"5\" data-top=\"5\" title=\"${ conditionformat_Text.fourColorTrafficLight }\"><div style=\"background-position:-131px -100px;\"></div></div>\n                                </div>\n                                <div style=\"clear:both;\"></div>\n                            </div>\n                            <div class=\"title\">${ conditionformat_Text.mark }</div>\n                            <div class=\"list\">\n                                <div class=\"left\">\n                                    <div class=\"item\" data-len=\"3\" data-leftMin=\"0\" data-top=\"7\" title=\"${ conditionformat_Text.threeSymbols }(${ conditionformat_Text.circled })\"><div style=\"background-position:0 -140px;\"></div></div>\n                                    <div class=\"item\" data-len=\"3\" data-leftMin=\"0\" data-top=\"8\" title=\"${ conditionformat_Text.tricolorFlag }\"><div style=\"background-position:0 -160px;\"></div></div>\n                                </div>\n                                <div class=\"right\">\n                                    <div class=\"item\" data-len=\"3\" data-leftMin=\"5\" data-top=\"7\" title=\"${ conditionformat_Text.threeSymbols }(${ conditionformat_Text.noCircle })\"><div style=\"background-position:-131px -140px;\"></div></div>\n                                </div>\n                                <div style=\"clear:both;\"></div>\n                            </div>\n                            <div class=\"title\">${ conditionformat_Text.grade }</div>\n                            <div class=\"list\">\n                                <div class=\"left\">\n                                    <div class=\"item\" data-len=\"3\" data-leftMin=\"0\" data-top=\"9\" title=\"${ conditionformat_Text.threeStars }\"><div style=\"background-position:0 -180px;\"></div></div>\n                                    <div class=\"item\" data-len=\"5\" data-leftMin=\"0\" data-top=\"10\" title=\"${ conditionformat_Text.fiveQuadrantDiagram }\"><div style=\"background-position:0 -200px;\"></div></div>\n                                    <div class=\"item\" data-len=\"5\" data-leftMin=\"0\" data-top=\"11\" title=\"${ conditionformat_Text.fiveBoxes }\"><div style=\"background-position:0 -220px;\"></div></div>\n                                </div>\n                                <div class=\"right\">\n                                    <div class=\"item\" data-len=\"4\" data-leftMin=\"5\" data-top=\"9\" title=\"${ conditionformat_Text.grade4 }\"><div style=\"background-position:-131px -180px;\"></div></div>\n                                    <div class=\"item\" data-len=\"5\" data-leftMin=\"5\" data-top=\"10\" title=\"${ conditionformat_Text.grade5 }\"><div style=\"background-position:-131px -200px;\"></div></div>\n                                </div>\n                                <div style=\"clear:both;\"></div>\n                            </div>\n                        </div>`;\n            $('body').append(replaceHtml(modelHTML, {\n                'id': 'luckysheet-CFicons-dialog',\n                'addclass': 'luckysheet-CFicons-dialog',\n                'title': conditionformat_Text.icons,\n                'content': content,\n                'botton': `<button class=\"btn btn-default luckysheet-model-close-btn\">${ conditionformat_Text.close }</button>`,\n                'style': 'z-index:100003'\n            }));\n            let $t = $('#luckysheet-CFicons-dialog').find('.luckysheet-modal-dialog-content').css('min-width', 400).end(), myh = $t.outerHeight(), myw = $t.outerWidth();\n            let winw = $(window).width(), winh = $(window).height();\n            let scrollLeft = $(document).scrollLeft(), scrollTop = $(document).scrollTop();\n            $('#luckysheet-CFicons-dialog').css({\n                'left': (winw + scrollLeft - myw) / 2,\n                'top': (winh + scrollTop - myh) / 3\n            }).show();\n        },\n        administerRuleDialog: function () {\n            $('#luckysheet-modal-dialog-mask').show();\n            $('#luckysheet-administerRule-dialog').remove();\n            const conditionformat_Text = locale().conditionformat;    //工作表\n            //工作表\n            let opHtml = '';\n            for (let j = 0; j < Store.luckysheetfile.length; j++) {\n                if (Store.luckysheetfile[j].status == '1') {\n                    opHtml += `<option value=\"${ Store.luckysheetfile[j]['index'] }\" selected=\"selected\">\n                                ${ conditionformat_Text.currentSheet }：${ Store.luckysheetfile[j]['name'] }\n                            </option>`;\n                } else {\n                    opHtml += `<option value=\"${ Store.luckysheetfile[j]['index'] }\">\n                                ${ conditionformat_Text.sheet }：${ Store.luckysheetfile[j]['name'] }\n                            </option>`;\n                }\n            }\n            let content = `<div class=\"chooseSheet\">\n                            <label>${ conditionformat_Text.showRules }：</label>\n                            <select>${ opHtml }</select>\n                        </div>\n                        <div class=\"ruleBox\">\n                            <div class=\"ruleBtn\">\n                                <button id=\"newConditionRule\" class=\"btn btn-default\">${ conditionformat_Text.newRule }</button>\n                                <button id=\"editorConditionRule\" class=\"btn btn-default\">${ conditionformat_Text.editRule }</button>\n                                <button id=\"deleteConditionRule\" class=\"btn btn-default\">${ conditionformat_Text.deleteRule }</button>\n                            </div>\n                            <div class=\"ruleList\">\n                                <div class=\"listTitle\">\n                                    <span>${ conditionformat_Text.rule }</span>\n                                    <span>${ conditionformat_Text.format }</span>\n                                    <span>${ conditionformat_Text.applyRange }</span>\n                                </div>\n                                <div class=\"listBox\"></div>\n                            </div>\n                        </div>`;\n            $('body').append(replaceHtml(modelHTML, {\n                'id': 'luckysheet-administerRule-dialog',\n                'addclass': 'luckysheet-administerRule-dialog',\n                'title': conditionformat_Text.conditionformatManageRules,\n                'content': content,\n                'botton': `<button id=\"luckysheet-administerRule-dialog-confirm\" class=\"btn btn-primary\">${ conditionformat_Text.confirm }</button>\n                        <button id=\"luckysheet-administerRule-dialog-close\" class=\"btn btn-default\">${ conditionformat_Text.close }</button>`,\n                'style': 'z-index:100003'\n            }));\n            let $t = $('#luckysheet-administerRule-dialog').find('.luckysheet-modal-dialog-content').css('min-width', 400).end(), myh = $t.outerHeight(), myw = $t.outerWidth();\n            let winw = $(window).width(), winh = $(window).height();\n            let scrollLeft = $(document).scrollLeft(), scrollTop = $(document).scrollTop();\n            $('#luckysheet-administerRule-dialog').css({\n                'left': (winw + scrollLeft - myw) / 2,\n                'top': (winh + scrollTop - myh) / 3\n            }).show();    //当前工作表的规则列表\n            //当前工作表的规则列表\n            let index = $('#luckysheet-administerRule-dialog .chooseSheet option:selected').val();\n            this.getConditionRuleList(index);\n        },\n        getConditionRuleList: function (index) {\n            let _this = this;\n            $('#luckysheet-administerRule-dialog .ruleList .listBox').empty();\n            let ruleArr = _this.fileClone[getSheetIndex(index)].luckysheet_conditionformat_save;    //条件格式规则集合\n            //条件格式规则集合\n            if (ruleArr != null && ruleArr.length > 0) {\n                const conditionformat_Text = locale().conditionformat;\n                for (let i = 0; i < ruleArr.length; i++) {\n                    let type = ruleArr[i]['type'];    //规则类型\n                    //规则类型\n                    let format = ruleArr[i]['format'];    //规则样式\n                    //规则样式\n                    let cellrange = ruleArr[i]['cellrange'];    //规则应用范围\n                    //规则应用范围\n                    let ruleName;    //规则名称\n                    //规则名称\n                    let formatHtml = '';    //样式dom\n                    //样式dom\n                    if (type == 'dataBar') {\n                        ruleName = conditionformat_Text.dataBar;\n                        formatHtml = '<canvas width=\"46\" height=\"18\" style=\"width: 46px;height: 18px;margin: 3px 0 0 5px;\"></canvas>';\n                    } else if (type == 'colorGradation') {\n                        ruleName = conditionformat_Text.colorGradation;\n                        formatHtml = '<canvas width=\"46\" height=\"18\" style=\"width: 46px;height: 18px;margin: 3px 0 0 5px;\"></canvas>';\n                    } else if (type == 'icons') {\n                        ruleName = conditionformat_Text.icons;\n                        formatHtml = '<canvas width=\"46\" height=\"18\" style=\"width: 46px;height: 18px;margin: 3px 0 0 5px;\"></canvas>';\n                    } else {\n                        ruleName = _this.getConditionRuleName(ruleArr[i].conditionName, ruleArr[i].conditionRange, ruleArr[i].conditionValue);\n                        if (format['textColor'] != null) {\n                            formatHtml += '<span class=\"colorbox\" title=\"' + conditionformat_Text.textColor + '\" style=\"background-color:' + format['textColor'] + '\"></span>';\n                        }\n                        if (format['cellColor'] != null) {\n                            formatHtml += '<span class=\"colorbox\" title=\"' + conditionformat_Text.cellColor + '\" style=\"background-color:' + format['cellColor'] + '\"></span>';\n                        }\n                    }    //应用范围dom\n                    //应用范围dom\n                    let rangeTxtArr = [];\n                    for (let s = 0; s < cellrange.length; s++) {\n                        let r1 = cellrange[s].row[0], r2 = cellrange[s].row[1];\n                        let c1 = cellrange[s].column[0], c2 = cellrange[s].column[1];\n                        rangeTxtArr.push(chatatABC(c1) + (r1 + 1) + ':' + chatatABC(c2) + (r2 + 1));\n                    }    //条件格式规则列表dom\n                    //条件格式规则列表dom\n                    let itemHtml = '<div class=\"item\" data-item=\"' + i + '\">' + '<div class=\"ruleName\" title=\"' + ruleName + '\">' + ruleName + '</div>' + '<div class=\"format\">' + formatHtml + '</div>' + '<div class=\"ruleRange\">' + '<input class=\"formulaInputFocus\" readonly=\"true\" value=\"' + rangeTxtArr.join(',') + '\"/>' + '<i class=\"fa fa-table\" aria-hidden=\"true\" title=\"' + conditionformat_Text.selectRange + '\"></i>' + '</div>' + '</div>';\n                    $('#luckysheet-administerRule-dialog .ruleList .listBox').prepend(itemHtml);\n                }\n                $('#luckysheet-administerRule-dialog .ruleList .listBox .item canvas').each(function (i) {\n                    let x = $(this).closest('.item').attr('data-item');\n                    let type = ruleArr[x]['type'];\n                    let format = ruleArr[x]['format'];\n                    let can = $(this).get(0).getContext('2d');\n                    if (type == 'dataBar') {\n                        if (format.length == 2) {\n                            let my_gradient = can.createLinearGradient(0, 0, 46, 0);\n                            my_gradient.addColorStop(0, format[0]);\n                            my_gradient.addColorStop(1, format[1]);\n                            can.fillStyle = my_gradient;\n                            can.fillRect(0, 0, 46, 18);\n                            can.beginPath();\n                            can.moveTo(0, 0);\n                            can.lineTo(0, 18);\n                            can.lineTo(46, 18);\n                            can.lineTo(46, 0);\n                            can.lineTo(0, 0);\n                            can.lineWidth = Store.devicePixelRatio;\n                            can.strokeStyle = format[0];\n                            can.stroke();\n                            can.closePath();\n                        } else if (format.length == 1) {\n                            can.fillStyle = format[0];\n                            can.fillRect(0, 0, 46, 18);\n                            can.beginPath();\n                            can.moveTo(0, 0);\n                            can.lineTo(0, 18);\n                            can.lineTo(46, 18);\n                            can.lineTo(46, 0);\n                            can.lineTo(0, 0);\n                            can.lineWidth = Store.devicePixelRatio;\n                            can.strokeStyle = format[0];\n                            can.stroke();\n                            can.closePath();\n                        }\n                    } else if (type == 'colorGradation') {\n                        let my_gradient = can.createLinearGradient(0, 0, 46, 0);\n                        if (format.length == 3) {\n                            my_gradient.addColorStop(0, format[0]);\n                            my_gradient.addColorStop(0.5, format[1]);\n                            my_gradient.addColorStop(1, format[2]);\n                        } else if (format.length == 2) {\n                            my_gradient.addColorStop(0, format[0]);\n                            my_gradient.addColorStop(1, format[1]);\n                        }\n                        can.fillStyle = my_gradient;\n                        can.fillRect(0, 0, 46, 18);\n                    } else if (type == 'icons') {\n                        let len = format['len'];\n                        let l = format['leftMin'];\n                        let t = format['top'];\n                        let w1 = 32 * len + 10 * (len - 1);\n                        let h1 = 32;\n                        let w2 = 46;\n                        let h2 = 46 * 32 / w1;\n                        if (l == '0') {\n                            can.drawImage(luckysheet_CFiconsImg, 0, t * 32, w1, h1, 0, (18 - h2) / 2, w2, h2);\n                        } else if (l == '5') {\n                            can.drawImage(luckysheet_CFiconsImg, 210, t * 32, w1, h1, 0, (18 - h2) / 2, w2, h2);\n                        }\n                    }\n                });\n                $('#luckysheet-administerRule-dialog .ruleList .listBox .item').eq(0).addClass('on');\n            }\n        },\n        getConditionRuleName: function (conditionName, conditionRange, conditionValue) {\n            //v 有条件单元格取条件单元格，若无取条件值\n            let v;\n            if (conditionRange[0] != null) {\n                v = chatatABC(conditionRange[0]['column'][0]) + (conditionRange[0]['row'][0] + 1);\n            } else {\n                v = conditionValue[0];\n            }\n            const conditionformat_Text = locale().conditionformat;    //返回条件格式规则名称\n            //返回条件格式规则名称\n            if (conditionName == 'greaterThan') {\n                return conditionformat_Text.cellValue + ' > ' + v;\n            } else if (conditionName == 'lessThan') {\n                return conditionformat_Text.cellValue + ' < ' + v;\n            } else if (conditionName == 'betweenness') {\n                let v2;\n                if (conditionRange[1] != null) {\n                    v2 = chatatABC(conditionRange[1]['column'][0]) + (conditionRange[1]['row'][0] + 1);\n                } else {\n                    v2 = conditionValue[1];\n                }\n                return conditionformat_Text.cellValue + ' ' + conditionformat_Text.between + ' ' + v + ' ' + conditionformat_Text.in + ' ' + v2 + ' ' + conditionformat_Text.between2;\n            } else if (conditionName == 'equal') {\n                return conditionformat_Text.cellValue + ' = ' + v;\n            } else if (conditionName == 'textContains') {\n                return conditionformat_Text.cellValue + conditionformat_Text.contain + ' =' + v;\n            } else if (conditionName == 'occurrenceDate') {\n                return conditionValue;\n            } else if (conditionName == 'duplicateValue') {\n                if (conditionValue == '0') {\n                    return conditionformat_Text.duplicateValue;\n                }\n                if (conditionValue == '1') {\n                    return conditionformat_Text.uniqueValue;\n                }\n            } else if (conditionName == 'top10') {\n                return conditionformat_Text.top + ' ' + v + ' ' + conditionformat_Text.oneself;\n            } else if (conditionName == 'top10%') {\n                return conditionformat_Text.top + ' ' + v + '% ' + conditionformat_Text.oneself;\n            } else if (conditionName == 'last10') {\n                return conditionformat_Text.last + ' ' + v + ' ' + conditionformat_Text.oneself;\n            } else if (conditionName == 'last10%') {\n                return conditionformat_Text.last + ' ' + v + '% ' + conditionformat_Text.oneself;\n            } else if (conditionName == 'AboveAverage') {\n                return conditionformat_Text.aboveAverage;\n            } else if (conditionName == 'SubAverage') {\n                return conditionformat_Text.belowAverage;\n            } else if (conditionName == 'formula') {\n                if (v.slice(0, 1) != '=') {\n                    v = '=' + v;\n                }\n                return conditionformat_Text.formula + ': ' + v;\n            }\n        },\n        newConditionRuleDialog: function (source) {\n            let _this = this;\n            const conditionformat_Text = locale().conditionformat;    //规则说明\n            //规则说明\n            let ruleExplainHtml = _this.getRuleExplain(0);    //弹出层\n            //弹出层\n            $('#luckysheet-modal-dialog-mask').show();\n            $('#luckysheet-administerRule-dialog').hide();\n            $('#luckysheet-newConditionRule-dialog').remove();\n            let content = '<div>' + '<div class=\"boxTitle\">' + conditionformat_Text.chooseRuleType + '\\uFF1A</div>' + _this.ruleTypeHtml() + '<div class=\"boxTitle\">' + conditionformat_Text.editRuleDescription + '\\uFF1A</div>' + '<div class=\"ruleExplainBox\">' + ruleExplainHtml + '</div>' + '</div>';\n            $('body').append(replaceHtml(modelHTML, {\n                'id': 'luckysheet-newConditionRule-dialog',\n                'addclass': 'luckysheet-newEditorRule-dialog',\n                'title': conditionformat_Text.newFormatRule,\n                'content': content,\n                'botton': `<button id=\"luckysheet-newConditionRule-dialog-confirm\" class=\"btn btn-primary\" data-source=\"${ source }\">${ conditionformat_Text.confirm }</button>\n                        <button id=\"luckysheet-newConditionRule-dialog-close\" class=\"btn btn-default\" data-source=\"${ source }\">${ conditionformat_Text.cancel }</button>`,\n                'style': 'z-index:100003'\n            }));\n            let $t = $('#luckysheet-newConditionRule-dialog').find('.luckysheet-modal-dialog-content').css('min-width', 400).end(), myh = $t.outerHeight(), myw = $t.outerWidth();\n            let winw = $(window).width(), winh = $(window).height();\n            let scrollLeft = $(document).scrollLeft(), scrollTop = $(document).scrollTop();\n            $('#luckysheet-newConditionRule-dialog').css({\n                'left': (winw + scrollLeft - myw) / 2,\n                'top': (winh + scrollTop - myh) / 3\n            }).show();    //index的规则类型focus\n            //index的规则类型focus\n            $('#luckysheet-newConditionRule-dialog .ruleTypeBox .ruleTypeItem:eq(0)').addClass('on').siblings().removeClass('on');\n            _this.colorSelectInit();\n        },\n        editorConditionRuleDialog: function () {\n            let _this = this;\n            const conditionformat_Text = locale().conditionformat;\n            let rule = _this.editorRule.data;\n            if (rule == null) {\n                return;\n            }\n            let ruleType = rule['type'], ruleFormat = rule['format'], conditionName = rule['conditionName'];\n            let index, type1;\n            if (ruleType == 'dataBar' || ruleType == 'colorGradation' || ruleType == 'icons') {\n                index = 0;\n                type1 = ruleType;\n            } else {\n                if (conditionName == 'greaterThan' || conditionName == 'lessThan' || conditionName == 'betweenness' || conditionName == 'equal' || conditionName == 'textContains' || conditionName == 'occurrenceDate') {\n                    index = 1;\n                    if (conditionName == 'greaterThan' || conditionName == 'lessThan' || conditionName == 'betweenness' || conditionName == 'equal') {\n                        type1 = 'number';\n                    } else if (conditionName == 'textContains') {\n                        type1 = 'text';\n                    } else if (conditionName == 'occurrenceDate') {\n                        type1 = 'date';\n                    }\n                } else if (conditionName == 'top10' || conditionName == 'top10%' || conditionName == 'last10' || conditionName == 'last10%') {\n                    index = 2;\n                    if (conditionName == 'top10' || conditionName == 'top10%') {\n                        type1 = 'top';\n                    } else if (conditionName == 'last10' || conditionName == 'last10%') {\n                        type1 = 'last';\n                    }\n                } else if (conditionName == 'AboveAverage' || conditionName == 'SubAverage') {\n                    index = 3;\n                    type1 = conditionName;\n                } else if (conditionName == 'duplicateValue') {\n                    index = 4;\n                    type1 = rule['conditionValue'];\n                } else if (conditionName == 'formula') {\n                    index = 5;\n                }\n            }    //规则说明\n            //规则说明\n            let ruleExplainHtml = _this.getRuleExplain(index);    //弹出层\n            //弹出层\n            $('#luckysheet-modal-dialog-mask').show();\n            $('#luckysheet-administerRule-dialog').hide();\n            $('#luckysheet-editorConditionRule-dialog').remove();\n            let content = '<div>' + '<div class=\"boxTitle\">' + conditionformat_Text.chooseRuleType + '\\uFF1A</div>' + _this.ruleTypeHtml() + '<div class=\"boxTitle\">' + conditionformat_Text.editRuleDescription + '\\uFF1A</div>' + '<div class=\"ruleExplainBox\">' + ruleExplainHtml + '</div>' + '</div>';\n            $('body').append(replaceHtml(modelHTML, {\n                'id': 'luckysheet-editorConditionRule-dialog',\n                'addclass': 'luckysheet-newEditorRule-dialog',\n                'title': conditionformat_Text.editFormatRule,\n                'content': content,\n                'botton': `<button id=\"luckysheet-editorConditionRule-dialog-confirm\" class=\"btn btn-primary\">${ conditionformat_Text.confirm }</button>\n                        <button id=\"luckysheet-editorConditionRule-dialog-close\" class=\"btn btn-default\">${ conditionformat_Text.cancel }</button>`,\n                'style': 'z-index:100003'\n            }));\n            let $t = $('#luckysheet-editorConditionRule-dialog').find('.luckysheet-modal-dialog-content').css('min-width', 400).end(), myh = $t.outerHeight(), myw = $t.outerWidth();\n            let winw = $(window).width(), winh = $(window).height();\n            let scrollLeft = $(document).scrollLeft(), scrollTop = $(document).scrollTop();\n            $('#luckysheet-editorConditionRule-dialog').css({\n                'left': (winw + scrollLeft - myw) / 2,\n                'top': (winh + scrollTop - myh) / 3\n            }).show();\n            _this.colorSelectInit();    //规则类型focus\n            //规则类型focus\n            $('#luckysheet-editorConditionRule-dialog .ruleTypeBox .ruleTypeItem:eq(' + index + ')').addClass('on').siblings().removeClass('on');    //type1\n            //type1\n            $('#luckysheet-editorConditionRule-dialog #type1').val(type1);\n            if (type1 == 'dataBar' || type1 == 'colorGradation' || type1 == 'icons' || type1 == 'number' || type1 == 'text' || type1 == 'date') {\n                $('#luckysheet-editorConditionRule-dialog .' + type1 + 'Box').show();\n                $('#luckysheet-editorConditionRule-dialog .' + type1 + 'Box').siblings().hide();\n            }\n            if (type1 == 'date') {\n                _this.daterangeInit('luckysheet-editorConditionRule-dialog');\n            }    //type2  format  value\n            //type2  format  value\n            if (ruleType == 'dataBar' || ruleType == 'colorGradation' || ruleType == 'icons') {\n                if (type1 == 'dataBar') {\n                    if (ruleFormat.length == 2) {\n                        $('#luckysheet-editorConditionRule-dialog .dataBarBox #type2').val('gradient');\n                    } else if (ruleFormat.length == 1) {\n                        $('#luckysheet-editorConditionRule-dialog .dataBarBox #type2').val('solid');\n                    }\n                    $('#luckysheet-editorConditionRule-dialog .dataBarBox .luckysheet-conditionformat-config-color').spectrum('set', ruleFormat[0]);\n                } else if (type1 == 'colorGradation') {\n                    if (ruleFormat.length == 3) {\n                        $('#luckysheet-editorConditionRule-dialog .colorGradationBox #type2').val('threeColor');\n                        $('#luckysheet-editorConditionRule-dialog .colorGradationBox .midVal').show();\n                        $('#luckysheet-editorConditionRule-dialog .colorGradationBox .maxVal .luckysheet-conditionformat-config-color').spectrum('set', ruleFormat[0]);\n                        $('#luckysheet-editorConditionRule-dialog .colorGradationBox .midVal .luckysheet-conditionformat-config-color').spectrum('set', ruleFormat[1]);\n                        $('#luckysheet-editorConditionRule-dialog .colorGradationBox .minVal .luckysheet-conditionformat-config-color').spectrum('set', ruleFormat[2]);\n                    } else if (ruleFormat.length == 2) {\n                        $('#luckysheet-editorConditionRule-dialog .colorGradationBox #type2').val('twoColor');\n                        $('#luckysheet-editorConditionRule-dialog .colorGradationBox .midVal').hide();\n                        $('#luckysheet-editorConditionRule-dialog .colorGradationBox .maxVal .luckysheet-conditionformat-config-color').spectrum('set', ruleFormat[0]);\n                        $('#luckysheet-editorConditionRule-dialog .colorGradationBox .minVal .luckysheet-conditionformat-config-color').spectrum('set', ruleFormat[1]);\n                    }\n                } else if (type1 == 'icons') {\n                    let len = ruleFormat['len'];\n                    let l = ruleFormat['leftMin'];\n                    let t = ruleFormat['top'];\n                    $('#luckysheet-editorConditionRule-dialog .iconsBox li').each(function (i, e) {\n                        if ($(e).find('div').attr('data-len') == len && $(e).find('div').attr('data-leftmin') == l && $(e).find('div').attr('data-top') == t) {\n                            $('#luckysheet-editorConditionRule-dialog .iconsBox .showbox .model').css('background-position', $(e).find('div').css('background-position'));\n                            $('#luckysheet-editorConditionRule-dialog .iconsBox .showbox .model').attr('data-len', $(e).find('div').attr('data-len'));\n                            $('#luckysheet-editorConditionRule-dialog .iconsBox .showbox .model').attr('data-leftmin', $(e).find('div').attr('data-leftmin'));\n                            $('#luckysheet-editorConditionRule-dialog .iconsBox .showbox .model').attr('data-top', $(e).find('div').attr('data-leftmin'));\n                            $('#luckysheet-editorConditionRule-dialog .iconsBox .showbox .model').attr('title', $(e).find('div').attr('title'));\n                            return true;\n                        }\n                    });\n                }\n            } else {\n                if (type1 == 'number') {\n                    $('#luckysheet-editorConditionRule-dialog .numberBox #type2').val(conditionName);\n                    let val1;\n                    if (rule.conditionRange[0] != null) {\n                        val1 = getRangetxt(Store.currentSheetIndex, {\n                            'row': rule.conditionRange[0]['row'],\n                            'column': rule.conditionRange[0]['column']\n                        }, Store.currentSheetIndex);\n                    } else {\n                        val1 = rule.conditionValue[0];\n                    }\n                    $('#luckysheet-editorConditionRule-dialog .numberBox #conditionVal input').val(val1);\n                    if (conditionName == 'betweenness') {\n                        $('#luckysheet-editorConditionRule-dialog .numberBox .txt').show();\n                        $('#luckysheet-editorConditionRule-dialog .numberBox #conditionVal2').show();\n                        let val2;\n                        if (rule.conditionRange[1] != null) {\n                            val2 = getRangetxt(Store.currentSheetIndex, {\n                                'row': rule.conditionRange[1]['row'],\n                                'column': rule.conditionRange[1]['column']\n                            }, Store.currentSheetIndex);\n                        } else {\n                            val2 = rule.conditionValue[1];\n                        }\n                        $('#luckysheet-editorConditionRule-dialog .numberBox #conditionVal2 input').val(val2);\n                    } else {\n                        $('#luckysheet-editorConditionRule-dialog .numberBox .txt').hide();\n                        $('#luckysheet-editorConditionRule-dialog .numberBox #conditionVal2').hide();\n                    }\n                } else if (type1 == 'text') {\n                    let val1;\n                    if (rule.conditionRange[0] != null) {\n                        val1 = getRangetxt(Store.currentSheetIndex, {\n                            'row': rule.conditionRange[0]['row'],\n                            'column': rule.conditionRange[0]['column']\n                        }, Store.currentSheetIndex);\n                    } else {\n                        val1 = rule.conditionValue[0];\n                    }\n                    $('#luckysheet-editorConditionRule-dialog .textBox #conditionVal input').val(val1);\n                } else if (type1 == 'date') {\n                    _this.daterangeInit('luckysheet-editorConditionRule-dialog');\n                    let val1 = rule.conditionValue[0];\n                    $('#luckysheet-editorConditionRule-dialog .dateBox #daterange-btn').val(val1);\n                } else if (type1 == 'top' || type1 == 'last') {\n                    let val1 = rule.conditionValue[0];\n                    if (conditionName == 'top10%' || conditionName == 'last10%') {\n                        $('#luckysheet-editorConditionRule-dialog #isPercent').attr('checked', 'checked');\n                    }\n                } else {\n                    if (conditionName == 'formula') {\n                        let val1 = rule.conditionValue[0];\n                        $('#luckysheet-editorConditionRule-dialog #formulaConditionVal input').val(val1);\n                    }\n                }\n                $('#luckysheet-editorConditionRule-dialog #textcolorshow').spectrum('set', ruleFormat.textColor);\n                $('#luckysheet-editorConditionRule-dialog #cellcolorshow').spectrum('set', ruleFormat.cellColor);\n            }\n        },\n        infoDialog: function (title, content) {\n            $('#luckysheet-modal-dialog-mask').show();\n            $('#luckysheet-conditionformat-info-dialog').remove();\n            $('body').append(replaceHtml(modelHTML, {\n                'id': 'luckysheet-conditionformat-info-dialog',\n                'addclass': '',\n                'title': title,\n                'content': content,\n                'botton': `<button id=\"luckysheet-conditionformat-info-dialog-close\" class=\"btn btn-default\">${ locale().conditionformat.close }</button>`,\n                'style': 'z-index:100003'\n            }));\n            let $t = $('#luckysheet-conditionformat-info-dialog').find('.luckysheet-modal-dialog-content').css('min-width', 300).end(), myh = $t.outerHeight(), myw = $t.outerWidth();\n            let winw = $(window).width(), winh = $(window).height();\n            let scrollLeft = $(document).scrollLeft(), scrollTop = $(document).scrollTop();\n            $('#luckysheet-conditionformat-info-dialog').css({\n                'left': (winw + scrollLeft - myw) / 2,\n                'top': (winh + scrollTop - myh) / 3\n            }).show();\n        },\n        getRuleExplain: function (index) {\n            const conditionformat_Text = locale().conditionformat;\n            let textCellColorHtml = this.textCellColorHtml();\n            let ruleExplainHtml;\n            switch (index) {\n            case 0:\n                //基于各自值设置所有单元格的格式\n                ruleExplainHtml = `<div class=\"title\">${ conditionformat_Text.ruleTypeItem1 }：</div>\n                                    <div style=\"height: 30px;margin-bottom: 5px;\">\n                                        <label style=\"display: block;width: 80px;height: 30px;line-height: 30px;float: left;\">${ conditionformat_Text.formatStyle }：</label>\n                                        <select id=\"type1\">\n                                            <option value=\"dataBar\">${ conditionformat_Text.dataBar }</option>\n                                            <option value=\"colorGradation\">${ conditionformat_Text.colorGradation }</option>\n                                            <option value=\"icons\">${ conditionformat_Text.icons }</option>\n                                        </select>\n                                    </div>\n                                    <div>\n                                        <div class=\"type1Box dataBarBox\">\n                                            <div style=\"height: 30px;margin-bottom: 5px;\">\n                                                <label style=\"display: block;width: 80px;height: 30px;line-height: 30px;float: left;\">${ conditionformat_Text.fillType }：</label>\n                                                <select id=\"type2\">\n                                                    <option value=\"gradient\">${ conditionformat_Text.gradient }</option>\n                                                    <option value=\"solid\">${ conditionformat_Text.solid }</option>\n                                                </select>\n                                            </div>\n                                            <div style=\"height: 30px;margin-bottom: 5px;\">\n                                                <label style=\"display: block;width: 80px;height: 30px;line-height: 30px;float: left;\">${ conditionformat_Text.color }：</label>\n                                                <input data-tips=\"${ conditionformat_Text.dataBarColor }\" data-func=\"background\" class=\"luckysheet-conditionformat-config-color\" type=\"text\" value=\"#638ec6\" style=\"display: none;\"> \n                                            </div>\n                                        </div>\n                                        <div class=\"type1Box colorGradationBox\" style=\"display: none;\">\n                                            <div style=\"height: 30px;margin-bottom: 5px;\">\n                                                <label style=\"display: block;width: 80px;height: 30px;line-height: 30px;float: left;\">${ conditionformat_Text.fillType }：</label>\n                                                <select id=\"type2\">\n                                                    <option value=\"threeColor\">${ conditionformat_Text.tricolor }</option>\n                                                    <option value=\"twoColor\">${ conditionformat_Text.twocolor }</option>\n                                                </select>\n                                            </div>\n                                            <div class=\"maxVal\" style=\"height: 30px;margin-bottom: 5px;\">\n                                                <label style=\"display: block;width: 80px;height: 30px;line-height: 30px;float: left;\">${ conditionformat_Text.maxValue }：</label>\n                                                <input data-tips=\"${ conditionformat_Text.maxValue } ${ conditionformat_Text.color }\" data-func=\"background\" class=\"luckysheet-conditionformat-config-color\" type=\"text\" value=\"rgb(99, 190, 123)\" style=\"display: none;\">\n                                            </div>\n                                            <div class=\"midVal\" style=\"height: 30px;margin-bottom: 5px;\">\n                                                <label style=\"display: block;width: 80px;height: 30px;line-height: 30px;float: left;\">${ conditionformat_Text.medianValue }：</label>\n                                                <input data-tips=\"${ conditionformat_Text.medianValue } ${ conditionformat_Text.color }\" data-func=\"background\" class=\"luckysheet-conditionformat-config-color\" type=\"text\" value=\"rgb(255, 235, 132)\" style=\"display: none;\">\n                                            </div>\n                                            <div class=\"minVal\" style=\"height: 30px;margin-bottom: 5px;\">\n                                                <label style=\"display: block;width: 80px;height: 30px;line-height: 30px;float: left;\">${ conditionformat_Text.minValue }：</label>\n                                                <input data-tips=\"${ conditionformat_Text.minValue } ${ conditionformat_Text.color }\" data-func=\"background\" class=\"luckysheet-conditionformat-config-color\" type=\"text\" value=\"rgb(248, 105, 107)\" style=\"display: none;\">\n                                            </div>\n                                        </div>\n                                        <div class=\"type1Box iconsBox\" style=\"display: none;\">\n                                            <label>${ conditionformat_Text.fillType }：</label>\n                                            <div class=\"showbox\">\n                                                <div class=\"model\" data-len=\"3\" data-leftmin=\"0\" data-top=\"0\" title=\"${ conditionformat_Text.threeWayArrow }(${ conditionformat_Text.multicolor })\" style=\"background-position: 0 0;\"></div>\n                                                <span class=\"ui-selectmenu-icon ui-icon ui-icon-triangle-1-s\" style=\"margin-top: 2px;\"></span>\n                                            </div>\n                                            <ul>\n                                                <li><div data-len=\"3\" data-leftmin=\"0\" data-top=\"0\" title=\"${ conditionformat_Text.threeWayArrow }(${ conditionformat_Text.multicolor })\" style=\"background-position: 0 0;\"></div></li>\n                                                <li><div data-len=\"3\" data-leftmin=\"5\" data-top=\"0\" title=\"${ conditionformat_Text.threeWayArrow }(${ conditionformat_Text.grayColor })\" style=\"background-position: -131px 0;\"></div></li>\n                                                <li><div data-len=\"3\" data-leftmin=\"0\" data-top=\"1\" title=\"${ conditionformat_Text.threeTriangles }\" style=\"background-position: 0 -20px;\"></div></li>\n                                                <li><div data-len=\"4\" data-leftmin=\"0\" data-top=\"2\" title=\"${ conditionformat_Text.fourWayArrow }(${ conditionformat_Text.multicolor })\" style=\"background-position: 0 -40px;\"></div></li>\n                                                <li><div data-len=\"4\" data-leftmin=\"5\" data-top=\"1\" title=\"${ conditionformat_Text.fourWayArrow }(${ conditionformat_Text.grayColor })\" style=\"background-position: -131px -20px;\"></div></li>\n                                                <li><div data-len=\"5\" data-leftmin=\"0\" data-top=\"3\" title=\"${ conditionformat_Text.fiveWayArrow }(${ conditionformat_Text.multicolor })\" style=\"background-position: 0 -60px;\"></div></li>\n                                                <li><div data-len=\"5\" data-leftmin=\"5\" data-top=\"2\" title=\"${ conditionformat_Text.fiveWayArrow }(${ conditionformat_Text.grayColor })\" style=\"background-position: -131px -40px;\"></div></li>\n                                                <li><div data-len=\"3\" data-leftmin=\"0\" data-top=\"4\" title=\"${ conditionformat_Text.threeColorTrafficLight }(${ conditionformat_Text.rimless })\" style=\"background-position: 0 -80px;\"></div></li>\n                                                <li><div data-len=\"3\" data-leftmin=\"5\" data-top=\"4\" title=\"${ conditionformat_Text.threeColorTrafficLight }(${ conditionformat_Text.bordered })\" style=\"background-position: -131px -80px;\"></div></li>\n                                                <li><div data-len=\"3\" data-leftmin=\"0\" data-top=\"5\" title=\"${ conditionformat_Text.threeSigns }\" style=\"background-position: 0 -100px;\"></div></li>\n                                                <li><div data-len=\"4\" data-leftmin=\"5\" data-top=\"5\" title=\"${ conditionformat_Text.fourColorTrafficLight }\" style=\"background-position: -131px -100px;\"></div></li>\n                                                <li><div data-len=\"4\" data-leftmin=\"0\" data-top=\"6\" title=\"${ conditionformat_Text.greenRedBlackGradient }\" style=\"background-position: 0 -120px;\"></div></li>\n                                                <li><div data-len=\"3\" data-leftmin=\"0\" data-top=\"7\" title=\"${ conditionformat_Text.threeSymbols }(${ conditionformat_Text.circled })\" style=\"background-position: 0 -140px;\"></div></li>\n                                                <li><div data-len=\"3\" data-leftmin=\"5\" data-top=\"7\" title=\"${ conditionformat_Text.threeSymbols }(${ conditionformat_Text.noCircle })\" style=\"background-position: -131px -140px;\"></div></li>\n                                                <li><div data-len=\"3\" data-leftmin=\"0\" data-top=\"8\" title=\"${ conditionformat_Text.tricolorFlag }\" style=\"background-position: 0 -160px;\"></div></li>\n                                                <li><div data-len=\"3\" data-leftmin=\"0\" data-top=\"9\" title=\"${ conditionformat_Text.threeStars }\" style=\"background-position: 0 -180px;\"></div></li>\n                                                <li><div data-len=\"5\" data-leftmin=\"0\" data-top=\"10\" title=\"${ conditionformat_Text.fiveQuadrantDiagram }\" style=\"background-position: 0 -200px;\"></div></li>\n                                                <li><div data-len=\"5\" data-leftmin=\"0\" data-top=\"11\" title=\"${ conditionformat_Text.fiveBoxes }\" style=\"background-position: 0 -220px;\"></div></li>\n                                                <li><div data-len=\"4\" data-leftmin=\"5\" data-top=\"9\" title=\"${ conditionformat_Text.grade4 }\" style=\"background-position: -131px -180px;\"></div></li>\n                                                <li><div data-len=\"5\" data-leftmin=\"5\" data-top=\"10\" title=\"${ conditionformat_Text.grade5 }\" style=\"background-position: -131px -200px;\"></div></li>\n                                            </ul>\n                                        </div>\n                                    </div>`;\n                break;\n            case 1:\n                //只为包含以下内容的单元格设置格式\n                ruleExplainHtml = `<div class=\"title\">${ conditionformat_Text.ruleTypeItem2_title }：</div>\n                                    <div style=\"height: 30px;margin-bottom: 10px;\">\n                                        <select id=\"type1\">\n                                            <option value=\"number\">${ conditionformat_Text.cellValue }</option>\n                                            <option value=\"text\">${ conditionformat_Text.specificText }</option>\n                                            <option value=\"date\">${ conditionformat_Text.occurrence }</option>\n                                        </select>\n                                        <div>\n                                            <div class=\"type1Box numberBox\">\n                                                <select id=\"type2\">\n                                                    <option value=\"greaterThan\">${ conditionformat_Text.greaterThan }</option>\n                                                    <option value=\"lessThan\">${ conditionformat_Text.lessThan }</option>\n                                                    <option value=\"betweenness\">${ conditionformat_Text.between }</option>\n                                                    <option value=\"equal\">${ conditionformat_Text.equal }</option>\n                                                </select>\n                                                <div class=\"inpbox range\" id=\"conditionVal\">\n                                                    <input class=\"formulaInputFocus\"/>\n                                                    <i class=\"fa fa-table\" aria-hidden=\"true\" title=\"${ conditionformat_Text.selectCell }\"></i>\n                                                </div>\n                                                <span class=\"txt\" style=\"display: none;\">${ conditionformat_Text.in }</span>\n                                                <div class=\"inpbox range\" id=\"conditionVal2\" style=\"display: none;\">\n                                                    <input class=\"formulaInputFocus\"/>\n                                                    <i class=\"fa fa-table\" aria-hidden=\"true\" title=\"${ conditionformat_Text.selectDataRange }\"></i>\n                                                </div>\n                                            </div>\n                                            <div class=\"type1Box textBox\" style=\"display: none;\">\n                                                <select id=\"type2\">\n                                                    <option value=\"\">${ conditionformat_Text.contain }</option>\n                                                </select>\n                                                <div class=\"inpbox range\" id=\"conditionVal\">\n                                                    <input class=\"formulaInputFocus\"/>\n                                                    <i class=\"fa fa-table\" aria-hidden=\"true\" title=\"${ conditionformat_Text.selectCell }\"></i>\n                                                </div>\n                                            </div>\n                                            <div class=\"type1Box dateBox\" style=\"display: none;\">\n                                                <div style=\"width: 162px;\" class=\"inpbox\">\n                                                    <input style=\"width: 150px;\" id=\"daterange-btn\" readonly=\"readonly\" placeholder=\"${ conditionformat_Text.pleaseSelectADate }\"/>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class=\"title\">${ conditionformat_Text.setFormat }: </div>${ textCellColorHtml }`;\n                break;\n            case 2:\n                //仅对排名靠前或靠后的数值设置格式\n                ruleExplainHtml = `<div class=\"title\">${ conditionformat_Text.ruleTypeItem3_title }：</div>\n                                    <div style=\"height: 30px;margin-bottom: 10px;\">\n                                        <select id=\"type1\">\n                                            <option value=\"top\">${ conditionformat_Text.top }</option>\n                                            <option value=\"last\">${ conditionformat_Text.last }</option>\n                                        </select>\n                                        <div class=\"inpbox\" id=\"conditionVal\">\n                                            <input class=\"formulaInputFocus\" type=\"number\" value=\"10\"/>\n                                        </div>\n                                        <input id=\"isPercent\" type=\"checkbox\"/>\n                                        <label for=\"isPercent\" class=\"txt\">${ conditionformat_Text.selectRange_percent }</label>\n                                    </div>\n                                    <div class=\"title\">${ conditionformat_Text.setFormat }：</div>${ textCellColorHtml }`;\n                break;\n            case 3:\n                //仅对高于或低于平均值的数值设置格式\n                ruleExplainHtml = `<div class=\"title\">${ conditionformat_Text.ruleTypeItem4_title }：</div>\n                                    <div style=\"height: 30px;margin-bottom: 10px;\">\n                                        <select id=\"type1\">\n                                            <option value=\"AboveAverage\">${ conditionformat_Text.above }</option>\n                                            <option value=\"SubAverage\">${ conditionformat_Text.below }</option>\n                                        </select>\n                                        <span class=\"txt\">${ conditionformat_Text.selectRange_average }</span>\n                                    </div>\n                                    <div class=\"title\">${ conditionformat_Text.setFormat }：</div>${ textCellColorHtml }`;\n                break;\n            case 4:\n                //仅对唯一值或重复值设置格式\n                ruleExplainHtml = `<div class=\"title\">${ conditionformat_Text.all }：</div>\n                                    <div style=\"height: 30px;margin-bottom: 10px;\">\n                                        <select id=\"type1\">\n                                            <option value=\"0\">${ conditionformat_Text.duplicateValue }</option>\n                                            <option value=\"1\">${ conditionformat_Text.uniqueValue }</option>\n                                        </select>\n                                        <span class=\"txt\">${ conditionformat_Text.selectRange_value }</span>\n                                    </div>\n                                    <div class=\"title\">${ conditionformat_Text.setFormat }：</div>${ textCellColorHtml }`;\n                break;\n            case 5:\n                //使用公式确定要设置格式的单元格\n                ruleExplainHtml = `<div class=\"title\">${ conditionformat_Text.ruleTypeItem2_title }：</div>\n                                    <div style=\"height: 30px;margin-bottom: 10px;\">\n                                        <div class=\"inpbox range\" id=\"formulaConditionVal\" style=\"width: 250px;\">\n                                            <input class=\"formulaInputFocus\" style=\"width: 200px;\"/>\n                                            <i class=\"fa fa-table\" aria-hidden=\"true\" title=\"${ conditionformat_Text.selectCell }\"></i>\n                                        </div>\n                                    </div>\n                                    <div class=\"title\">${ conditionformat_Text.setFormat }: </div>${ textCellColorHtml }`;\n                break;\n            }\n            return ruleExplainHtml;\n        },\n        daterangeInit: function (id) {\n            const conditionformat_Text = locale().conditionformat;    //日期选择插件\n            //日期选择插件\n            $('.ranges_1 ul').remove();\n            $('#' + id).find('#daterange-btn').flatpickr({\n                mode: 'range',\n                onChange: function (data, label) {\n                    const [start, end] = data;    //label:通过它来知道用户选择的是什么，传给后台进行相应的展示\n                    //label:通过它来知道用户选择的是什么，传给后台进行相应的展示\n                    let format1 = [\n                        conditionformat_Text.yesterday,\n                        conditionformat_Text.today\n                    ];\n                    let format2 = [\n                        conditionformat_Text.lastWeek,\n                        conditionformat_Text.thisWeek,\n                        conditionformat_Text.lastMonth,\n                        conditionformat_Text.thisMonth,\n                        conditionformat_Text.lastYear,\n                        conditionformat_Text.thisYear,\n                        conditionformat_Text.last7days,\n                        conditionformat_Text.last30days\n                    ];\n                    if (label == conditionformat_Text.all) {\n                        $('#daterange-btn').val('');\n                    } else if (format1.indexOf(label) > -1) {\n                        $('#daterange-btn').val(dayjs(start).format('YYYY/MM/DD'));\n                    } else if (format2.indexOf(label) > -1) {\n                        $('#daterange-btn').val(dayjs(start).format('YYYY/MM/DD') + '-' + dayjs(end).format('YYYY/MM/DD'));\n                    }\n                }\n            });\n        },\n        CFSplitRange: function (range1, range2, range3, type) {\n            let range = [];\n            let offset_r = range3['row'][0] - range2['row'][0];\n            let offset_c = range3['column'][0] - range2['column'][0];\n            let r1 = range1['row'][0], r2 = range1['row'][1];\n            let c1 = range1['column'][0], c2 = range1['column'][1];\n            if (r1 >= range2['row'][0] && r2 <= range2['row'][1] && c1 >= range2['column'][0] && c2 <= range2['column'][1]) {\n                //选区 包含 条件格式应用范围 全部\n                if (type == 'allPart') {\n                    //所有部分\n                    range = [{\n                            'row': [\n                                r1 + offset_r,\n                                r2 + offset_r\n                            ],\n                            'column': [\n                                c1 + offset_c,\n                                c2 + offset_c\n                            ]\n                        }];\n                } else if (type == 'restPart') {\n                    //剩余部分\n                    range = [];\n                } else if (type == 'operatePart') {\n                    //操作部分\n                    range = [{\n                            'row': [\n                                r1 + offset_r,\n                                r2 + offset_r\n                            ],\n                            'column': [\n                                c1 + offset_c,\n                                c2 + offset_c\n                            ]\n                        }];\n                }\n            } else if (r1 >= range2['row'][0] && r1 <= range2['row'][1] && c1 >= range2['column'][0] && c2 <= range2['column'][1]) {\n                //选区 行贯穿 条件格式应用范围 上部分\n                if (type == 'allPart') {\n                    //所有部分\n                    range = [\n                        {\n                            'row': [\n                                range2['row'][1] + 1,\n                                r2\n                            ],\n                            'column': [\n                                c1,\n                                c2\n                            ]\n                        },\n                        {\n                            'row': [\n                                r1 + offset_r,\n                                range2['row'][1] + offset_r\n                            ],\n                            'column': [\n                                c1 + offset_c,\n                                c2 + offset_c\n                            ]\n                        }\n                    ];\n                } else if (type == 'restPart') {\n                    //剩余部分\n                    range = [{\n                            'row': [\n                                range2['row'][1] + 1,\n                                r2\n                            ],\n                            'column': [\n                                c1,\n                                c2\n                            ]\n                        }];\n                } else if (type == 'operatePart') {\n                    //操作部分\n                    range = [{\n                            'row': [\n                                r1 + offset_r,\n                                range2['row'][1] + offset_r\n                            ],\n                            'column': [\n                                c1 + offset_c,\n                                c2 + offset_c\n                            ]\n                        }];\n                }\n            } else if (r2 >= range2['row'][0] && r2 <= range2['row'][1] && c1 >= range2['column'][0] && c2 <= range2['column'][1]) {\n                //选区 行贯穿 条件格式应用范围 下部分\n                if (type == 'allPart') {\n                    //所有部分\n                    range = [\n                        {\n                            'row': [\n                                r1,\n                                range2['row'][0] - 1\n                            ],\n                            'column': [\n                                c1,\n                                c2\n                            ]\n                        },\n                        {\n                            'row': [\n                                range2['row'][0] + offset_r,\n                                r2 + offset_r\n                            ],\n                            'column': [\n                                c1 + offset_c,\n                                c2 + offset_c\n                            ]\n                        }\n                    ];\n                } else if (type == 'restPart') {\n                    //剩余部分\n                    range = [{\n                            'row': [\n                                r1,\n                                range2['row'][0] - 1\n                            ],\n                            'column': [\n                                c1,\n                                c2\n                            ]\n                        }];\n                } else if (type == 'operatePart') {\n                    //操作部分\n                    range = [{\n                            'row': [\n                                range2['row'][0] + offset_r,\n                                r2 + offset_r\n                            ],\n                            'column': [\n                                c1 + offset_c,\n                                c2 + offset_c\n                            ]\n                        }];\n                }\n            } else if (r1 < range2['row'][0] && r2 > range2['row'][1] && c1 >= range2['column'][0] && c2 <= range2['column'][1]) {\n                //选区 行贯穿 条件格式应用范围 中间部分\n                if (type == 'allPart') {\n                    //所有部分\n                    range = [\n                        {\n                            'row': [\n                                r1,\n                                range2['row'][0] - 1\n                            ],\n                            'column': [\n                                c1,\n                                c2\n                            ]\n                        },\n                        {\n                            'row': [\n                                range2['row'][1] + 1,\n                                r2\n                            ],\n                            'column': [\n                                c1,\n                                c2\n                            ]\n                        },\n                        {\n                            'row': [\n                                range2['row'][0] + offset_r,\n                                range2['row'][1] + offset_r\n                            ],\n                            'column': [\n                                c1 + offset_c,\n                                c2 + offset_c\n                            ]\n                        }\n                    ];\n                } else if (type == 'restPart') {\n                    //剩余部分\n                    range = [\n                        {\n                            'row': [\n                                r1,\n                                range2['row'][0] - 1\n                            ],\n                            'column': [\n                                c1,\n                                c2\n                            ]\n                        },\n                        {\n                            'row': [\n                                range2['row'][1] + 1,\n                                r2\n                            ],\n                            'column': [\n                                c1,\n                                c2\n                            ]\n                        }\n                    ];\n                } else if (type == 'operatePart') {\n                    //操作部分\n                    range = [{\n                            'row': [\n                                range2['row'][0] + offset_r,\n                                range2['row'][1] + offset_r\n                            ],\n                            'column': [\n                                c1 + offset_c,\n                                c2 + offset_c\n                            ]\n                        }];\n                }\n            } else if (c1 >= range2['column'][0] && c1 <= range2['column'][1] && r1 >= range2['row'][0] && r2 <= range2['row'][1]) {\n                //选区 列贯穿 条件格式应用范围 左部分\n                if (type == 'allPart') {\n                    //所有部分\n                    range = [\n                        {\n                            'row': [\n                                r1,\n                                r2\n                            ],\n                            'column': [\n                                range2['column'][1] + 1,\n                                c2\n                            ]\n                        },\n                        {\n                            'row': [\n                                r1 + offset_r,\n                                r2 + offset_r\n                            ],\n                            'column': [\n                                c1 + offset_c,\n                                range2['column'][1] + offset_c\n                            ]\n                        }\n                    ];\n                } else if (type == 'restPart') {\n                    //剩余部分\n                    range = [{\n                            'row': [\n                                r1,\n                                r2\n                            ],\n                            'column': [\n                                range2['column'][1] + 1,\n                                c2\n                            ]\n                        }];\n                } else if (type == 'operatePart') {\n                    //操作部分\n                    range = [{\n                            'row': [\n                                r1 + offset_r,\n                                r2 + offset_r\n                            ],\n                            'column': [\n                                c1 + offset_c,\n                                range2['column'][1] + offset_c\n                            ]\n                        }];\n                }\n            } else if (c2 >= range2['column'][0] && c2 <= range2['column'][1] && r1 >= range2['row'][0] && r2 <= range2['row'][1]) {\n                //选区 列贯穿 条件格式应用范围 右部分\n                if (type == 'allPart') {\n                    //所有部分\n                    range = [\n                        {\n                            'row': [\n                                r1,\n                                r2\n                            ],\n                            'column': [\n                                c1,\n                                range2['column'][0] - 1\n                            ]\n                        },\n                        {\n                            'row': [\n                                r1 + offset_r,\n                                r2 + offset_r\n                            ],\n                            'column': [\n                                range2['column'][0] + offset_c,\n                                c2 + offset_c\n                            ]\n                        }\n                    ];\n                } else if (type == 'restPart') {\n                    //剩余部分\n                    range = [{\n                            'row': [\n                                r1,\n                                r2\n                            ],\n                            'column': [\n                                c1,\n                                range2['column'][0] - 1\n                            ]\n                        }];\n                } else if (type == 'operatePart') {\n                    //操作部分\n                    range = [{\n                            'row': [\n                                r1 + offset_r,\n                                r2 + offset_r\n                            ],\n                            'column': [\n                                range2['column'][0] + offset_c,\n                                c2 + offset_c\n                            ]\n                        }];\n                }\n            } else if (c1 < range2['column'][0] && c2 > range2['column'][1] && r1 >= range2['row'][0] && r2 <= range2['row'][1]) {\n                //选区 列贯穿 条件格式应用范围 中间部分\n                if (type == 'allPart') {\n                    //所有部分\n                    range = [\n                        {\n                            'row': [\n                                r1,\n                                r2\n                            ],\n                            'column': [\n                                c1,\n                                range2['column'][0] - 1\n                            ]\n                        },\n                        {\n                            'row': [\n                                r1,\n                                r2\n                            ],\n                            'column': [\n                                range2['column'][1] + 1,\n                                c2\n                            ]\n                        },\n                        {\n                            'row': [\n                                r1 + offset_r,\n                                r2 + offset_r\n                            ],\n                            'column': [\n                                range2['column'][0] + offset_c,\n                                range2['column'][1] + offset_c\n                            ]\n                        }\n                    ];\n                } else if (type == 'restPart') {\n                    //剩余部分\n                    range = [\n                        {\n                            'row': [\n                                r1,\n                                r2\n                            ],\n                            'column': [\n                                c1,\n                                range2['column'][0] - 1\n                            ]\n                        },\n                        {\n                            'row': [\n                                r1,\n                                r2\n                            ],\n                            'column': [\n                                range2['column'][1] + 1,\n                                c2\n                            ]\n                        }\n                    ];\n                } else if (type == 'operatePart') {\n                    //操作部分\n                    range = [{\n                            'row': [\n                                r1 + offset_r,\n                                r2 + offset_r\n                            ],\n                            'column': [\n                                range2['column'][0] + offset_c,\n                                range2['column'][1] + offset_c\n                            ]\n                        }];\n                }\n            } else if (r1 >= range2['row'][0] && r1 <= range2['row'][1] && c1 >= range2['column'][0] && c1 <= range2['column'][1]) {\n                //选区 包含 条件格式应用范围 左上角部分\n                if (type == 'allPart') {\n                    //所有部分\n                    range = [\n                        {\n                            'row': [\n                                r1,\n                                range2['row'][1]\n                            ],\n                            'column': [\n                                range2['column'][1] + 1,\n                                c2\n                            ]\n                        },\n                        {\n                            'row': [\n                                range2['row'][1] + 1,\n                                r2\n                            ],\n                            'column': [\n                                c1,\n                                c2\n                            ]\n                        },\n                        {\n                            'row': [\n                                r1 + offset_r,\n                                range2['row'][1] + offset_r\n                            ],\n                            'column': [\n                                c1 + offset_c,\n                                range2['column'][1] + offset_c\n                            ]\n                        }\n                    ];\n                } else if (type == 'restPart') {\n                    //剩余部分\n                    range = [\n                        {\n                            'row': [\n                                r1,\n                                range2['row'][1]\n                            ],\n                            'column': [\n                                range2['column'][1] + 1,\n                                c2\n                            ]\n                        },\n                        {\n                            'row': [\n                                range2['row'][1] + 1,\n                                r2\n                            ],\n                            'column': [\n                                c1,\n                                c2\n                            ]\n                        }\n                    ];\n                } else if (type == 'operatePart') {\n                    //操作部分\n                    range = [{\n                            'row': [\n                                r1 + offset_r,\n                                range2['row'][1] + offset_r\n                            ],\n                            'column': [\n                                c1 + offset_c,\n                                range2['column'][1] + offset_c\n                            ]\n                        }];\n                }\n            } else if (r1 >= range2['row'][0] && r1 <= range2['row'][1] && c2 >= range2['column'][0] && c2 <= range2['column'][1]) {\n                //选区 包含 条件格式应用范围 右上角部分\n                if (type == 'allPart') {\n                    //所有部分\n                    range = [\n                        {\n                            'row': [\n                                r1,\n                                range2['row'][1]\n                            ],\n                            'column': [\n                                c1,\n                                range2['column'][0] - 1\n                            ]\n                        },\n                        {\n                            'row': [\n                                range2['row'][1] + 1,\n                                r2\n                            ],\n                            'column': [\n                                c1,\n                                c2\n                            ]\n                        },\n                        {\n                            'row': [\n                                r1 + offset_r,\n                                range2['row'][1] + offset_r\n                            ],\n                            'column': [\n                                range2['column'][0] + offset_c,\n                                c2 + offset_c\n                            ]\n                        }\n                    ];\n                } else if (type == 'restPart') {\n                    //剩余部分\n                    range = [\n                        {\n                            'row': [\n                                r1,\n                                range2['row'][1]\n                            ],\n                            'column': [\n                                c1,\n                                range2['column'][0] - 1\n                            ]\n                        },\n                        {\n                            'row': [\n                                range2['row'][1] + 1,\n                                r2\n                            ],\n                            'column': [\n                                c1,\n                                c2\n                            ]\n                        }\n                    ];\n                } else if (type == 'operatePart') {\n                    //操作部分\n                    range = [{\n                            'row': [\n                                r1 + offset_r,\n                                range2['row'][1] + offset_r\n                            ],\n                            'column': [\n                                range2['column'][0] + offset_c,\n                                c2 + offset_c\n                            ]\n                        }];\n                }\n            } else if (r2 >= range2['row'][0] && r2 <= range2['row'][1] && c1 >= range2['column'][0] && c1 <= range2['column'][1]) {\n                //选区 包含 条件格式应用范围 左下角部分\n                if (type == 'allPart') {\n                    //所有部分\n                    range = [\n                        {\n                            'row': [\n                                r1,\n                                range2['row'][0] - 1\n                            ],\n                            'column': [\n                                c1,\n                                c2\n                            ]\n                        },\n                        {\n                            'row': [\n                                range2['row'][0],\n                                r2\n                            ],\n                            'column': [\n                                range2['column'][1] + 1,\n                                c2\n                            ]\n                        },\n                        {\n                            'row': [\n                                range2['row'][0] + offset_r,\n                                r2 + offset_r\n                            ],\n                            'column': [\n                                c1 + offset_c,\n                                range2['column'][1] + offset_c\n                            ]\n                        }\n                    ];\n                } else if (type == 'restPart') {\n                    //剩余部分\n                    range = [\n                        {\n                            'row': [\n                                r1,\n                                range2['row'][0] - 1\n                            ],\n                            'column': [\n                                c1,\n                                c2\n                            ]\n                        },\n                        {\n                            'row': [\n                                range2['row'][0],\n                                r2\n                            ],\n                            'column': [\n                                range2['column'][1] + 1,\n                                c2\n                            ]\n                        }\n                    ];\n                } else if (type == 'operatePart') {\n                    //操作部分\n                    range = [{\n                            'row': [\n                                range2['row'][0] + offset_r,\n                                r2 + offset_r\n                            ],\n                            'column': [\n                                c1 + offset_c,\n                                range2['column'][1] + offset_c\n                            ]\n                        }];\n                }\n            } else if (r2 >= range2['row'][0] && r2 <= range2['row'][1] && c2 >= range2['column'][0] && c2 <= range2['column'][1]) {\n                //选区 包含 条件格式应用范围 右下角部分\n                if (type == 'allPart') {\n                    //所有部分\n                    range = [\n                        {\n                            'row': [\n                                r1,\n                                range2['row'][0] - 1\n                            ],\n                            'column': [\n                                c1,\n                                c2\n                            ]\n                        },\n                        {\n                            'row': [\n                                range2['row'][0],\n                                r2\n                            ],\n                            'column': [\n                                c1,\n                                range2['column'][0] - 1\n                            ]\n                        },\n                        {\n                            'row': [\n                                range2['row'][0] + offset_r,\n                                r2 + offset_r\n                            ],\n                            'column': [\n                                range2['column'][0] + offset_c,\n                                c2 + offset_c\n                            ]\n                        }\n                    ];\n                } else if (type == 'restPart') {\n                    //剩余部分\n                    range = [\n                        {\n                            'row': [\n                                r1,\n                                range2['row'][0] - 1\n                            ],\n                            'column': [\n                                c1,\n                                c2\n                            ]\n                        },\n                        {\n                            'row': [\n                                range2['row'][0],\n                                r2\n                            ],\n                            'column': [\n                                c1,\n                                range2['column'][0] - 1\n                            ]\n                        }\n                    ];\n                } else if (type == 'operatePart') {\n                    //操作部分\n                    range = [{\n                            'row': [\n                                range2['row'][0] + offset_r,\n                                r2 + offset_r\n                            ],\n                            'column': [\n                                range2['column'][0] + offset_c,\n                                c2 + offset_c\n                            ]\n                        }];\n                }\n            } else if (r1 < range2['row'][0] && r2 > range2['row'][1] && c1 >= range2['column'][0] && c1 <= range2['column'][1]) {\n                //选区 包含 条件格式应用范围 左中间部分\n                if (type == 'allPart') {\n                    //所有部分\n                    range = [\n                        {\n                            'row': [\n                                r1,\n                                range2['row'][0] - 1\n                            ],\n                            'column': [\n                                c1,\n                                c2\n                            ]\n                        },\n                        {\n                            'row': [\n                                range2['row'][0],\n                                range2['row'][1]\n                            ],\n                            'column': [\n                                range2['column'][1] + 1,\n                                c2\n                            ]\n                        },\n                        {\n                            'row': [\n                                range2['row'][1] + 1,\n                                r2\n                            ],\n                            'column': [\n                                c1,\n                                c2\n                            ]\n                        },\n                        {\n                            'row': [\n                                range2['row'][0] + offset_r,\n                                range2['row'][1] + offset_r\n                            ],\n                            'column': [\n                                c1 + offset_c,\n                                range2['column'][1] + offset_c\n                            ]\n                        }\n                    ];\n                } else if (type == 'restPart') {\n                    //剩余部分\n                    range = [\n                        {\n                            'row': [\n                                r1,\n                                range2['row'][0] - 1\n                            ],\n                            'column': [\n                                c1,\n                                c2\n                            ]\n                        },\n                        {\n                            'row': [\n                                range2['row'][0],\n                                range2['row'][1]\n                            ],\n                            'column': [\n                                range2['column'][1] + 1,\n                                c2\n                            ]\n                        },\n                        {\n                            'row': [\n                                range2['row'][1] + 1,\n                                r2\n                            ],\n                            'column': [\n                                c1,\n                                c2\n                            ]\n                        }\n                    ];\n                } else if (type == 'operatePart') {\n                    //操作部分\n                    range = [{\n                            'row': [\n                                range2['row'][0] + offset_r,\n                                range2['row'][1] + offset_r\n                            ],\n                            'column': [\n                                c1 + offset_c,\n                                range2['column'][1] + offset_c\n                            ]\n                        }];\n                }\n            } else if (r1 < range2['row'][0] && r2 > range2['row'][1] && c2 >= range2['column'][0] && c2 <= range2['column'][1]) {\n                //选区 包含 条件格式应用范围 右中间部分\n                if (type == 'allPart') {\n                    //所有部分\n                    range = [\n                        {\n                            'row': [\n                                r1,\n                                range2['row'][0] - 1\n                            ],\n                            'column': [\n                                c1,\n                                c2\n                            ]\n                        },\n                        {\n                            'row': [\n                                range2['row'][0],\n                                range2['row'][1]\n                            ],\n                            'column': [\n                                c1,\n                                range2['column'][0] - 1\n                            ]\n                        },\n                        {\n                            'row': [\n                                range2['row'][1] + 1,\n                                r2\n                            ],\n                            'column': [\n                                c1,\n                                c2\n                            ]\n                        },\n                        {\n                            'row': [\n                                range2['row'][0] + offset_r,\n                                range2['row'][1] + offset_r\n                            ],\n                            'column': [\n                                range2['column'][0] + offset_c,\n                                c2 + offset_c\n                            ]\n                        }\n                    ];\n                } else if (type == 'restPart') {\n                    //剩余部分\n                    range = [\n                        {\n                            'row': [\n                                r1,\n                                range2['row'][0] - 1\n                            ],\n                            'column': [\n                                c1,\n                                c2\n                            ]\n                        },\n                        {\n                            'row': [\n                                range2['row'][0],\n                                range2['row'][1]\n                            ],\n                            'column': [\n                                c1,\n                                range2['column'][0] - 1\n                            ]\n                        },\n                        {\n                            'row': [\n                                range2['row'][1] + 1,\n                                r2\n                            ],\n                            'column': [\n                                c1,\n                                c2\n                            ]\n                        }\n                    ];\n                } else if (type == 'operatePart') {\n                    //操作部分\n                    range = [{\n                            'row': [\n                                range2['row'][0] + offset_r,\n                                range2['row'][1] + offset_r\n                            ],\n                            'column': [\n                                range2['column'][0] + offset_c,\n                                c2 + offset_c\n                            ]\n                        }];\n                }\n            } else if (c1 < range2['column'][0] && c2 > range2['column'][1] && r1 >= range2['row'][0] && r1 <= range2['row'][1]) {\n                //选区 包含 条件格式应用范围 上中间部分\n                if (type == 'allPart') {\n                    //所有部分\n                    range = [\n                        {\n                            'row': [\n                                r1,\n                                range2['row'][1]\n                            ],\n                            'column': [\n                                c1,\n                                range2['column'][0] - 1\n                            ]\n                        },\n                        {\n                            'row': [\n                                r1,\n                                range2['row'][1]\n                            ],\n                            'column': [\n                                range2['column'][1] + 1,\n                                c2\n                            ]\n                        },\n                        {\n                            'row': [\n                                range2['row'][1] + 1,\n                                r2\n                            ],\n                            'column': [\n                                c1,\n                                c2\n                            ]\n                        },\n                        {\n                            'row': [\n                                r1 + offset_r,\n                                range2['row'][1] + offset_r\n                            ],\n                            'column': [\n                                range2['column'][0] + offset_c,\n                                range2['column'][1] + offset_c\n                            ]\n                        }\n                    ];\n                } else if (type == 'restPart') {\n                    //剩余部分\n                    range = [\n                        {\n                            'row': [\n                                r1,\n                                range2['row'][1]\n                            ],\n                            'column': [\n                                c1,\n                                range2['column'][0] - 1\n                            ]\n                        },\n                        {\n                            'row': [\n                                r1,\n                                range2['row'][1]\n                            ],\n                            'column': [\n                                range2['column'][1] + 1,\n                                c2\n                            ]\n                        },\n                        {\n                            'row': [\n                                range2['row'][1] + 1,\n                                r2\n                            ],\n                            'column': [\n                                c1,\n                                c2\n                            ]\n                        }\n                    ];\n                } else if (type == 'operatePart') {\n                    //操作部分\n                    range = [{\n                            'row': [\n                                r1 + offset_r,\n                                range2['row'][1] + offset_r\n                            ],\n                            'column': [\n                                range2['column'][0] + offset_c,\n                                range2['column'][1] + offset_c\n                            ]\n                        }];\n                }\n            } else if (c1 < range2['column'][0] && c2 > range2['column'][1] && r2 >= range2['row'][0] && r2 <= range2['row'][1]) {\n                //选区 包含 条件格式应用范围 下中间部分\n                if (type == 'allPart') {\n                    //所有部分\n                    range = [\n                        {\n                            'row': [\n                                r1,\n                                range2['row'][0] - 1\n                            ],\n                            'column': [\n                                c1,\n                                c2\n                            ]\n                        },\n                        {\n                            'row': [\n                                range2['row'][0],\n                                r2\n                            ],\n                            'column': [\n                                c1,\n                                range2['column'][0] - 1\n                            ]\n                        },\n                        {\n                            'row': [\n                                range2['row'][0],\n                                r2\n                            ],\n                            'column': [\n                                range2['column'][1] + 1,\n                                c2\n                            ]\n                        },\n                        {\n                            'row': [\n                                range2['row'][0] + offset_r,\n                                r2 + offset_r\n                            ],\n                            'column': [\n                                range2['column'][0] + offset_c,\n                                range2['column'][1] + offset_c\n                            ]\n                        }\n                    ];\n                } else if (type == 'restPart') {\n                    //剩余部分\n                    range = [\n                        {\n                            'row': [\n                                r1,\n                                range2['row'][0] - 1\n                            ],\n                            'column': [\n                                c1,\n                                c2\n                            ]\n                        },\n                        {\n                            'row': [\n                                range2['row'][0],\n                                r2\n                            ],\n                            'column': [\n                                c1,\n                                range2['column'][0] - 1\n                            ]\n                        },\n                        {\n                            'row': [\n                                range2['row'][0],\n                                r2\n                            ],\n                            'column': [\n                                range2['column'][1] + 1,\n                                c2\n                            ]\n                        }\n                    ];\n                } else if (type == 'operatePart') {\n                    //操作部分\n                    range = [{\n                            'row': [\n                                range2['row'][0] + offset_r,\n                                r2 + offset_r\n                            ],\n                            'column': [\n                                range2['column'][0] + offset_c,\n                                range2['column'][1] + offset_c\n                            ]\n                        }];\n                }\n            } else if (r1 < range2['row'][0] && r2 > range2['row'][1] && c1 < range2['column'][0] && c2 > range2['column'][1]) {\n                //选区 包含 条件格式应用范围 正中间部分\n                if (type == 'allPart') {\n                    //所有部分\n                    range = [\n                        {\n                            'row': [\n                                r1,\n                                range2['row'][0] - 1\n                            ],\n                            'column': [\n                                c1,\n                                c2\n                            ]\n                        },\n                        {\n                            'row': [\n                                range2['row'][0],\n                                range2['row'][1]\n                            ],\n                            'column': [\n                                c1,\n                                range2['column'][0] - 1\n                            ]\n                        },\n                        {\n                            'row': [\n                                range2['row'][0],\n                                range2['row'][1]\n                            ],\n                            'column': [\n                                range2['column'][1] + 1,\n                                c2\n                            ]\n                        },\n                        {\n                            'row': [\n                                range2['row'][1] + 1,\n                                r2\n                            ],\n                            'column': [\n                                c1,\n                                c2\n                            ]\n                        },\n                        {\n                            'row': [\n                                range2['row'][0] + offset_r,\n                                range2['row'][1] + offset_r\n                            ],\n                            'column': [\n                                range2['column'][0] + offset_c,\n                                range2['column'][1] + offset_c\n                            ]\n                        }\n                    ];\n                } else if (type == 'restPart') {\n                    //剩余部分\n                    range = [\n                        {\n                            'row': [\n                                r1,\n                                range2['row'][0] - 1\n                            ],\n                            'column': [\n                                c1,\n                                c2\n                            ]\n                        },\n                        {\n                            'row': [\n                                range2['row'][0],\n                                range2['row'][1]\n                            ],\n                            'column': [\n                                c1,\n                                range2['column'][0] - 1\n                            ]\n                        },\n                        {\n                            'row': [\n                                range2['row'][0],\n                                range2['row'][1]\n                            ],\n                            'column': [\n                                range2['column'][1] + 1,\n                                c2\n                            ]\n                        },\n                        {\n                            'row': [\n                                range2['row'][1] + 1,\n                                r2\n                            ],\n                            'column': [\n                                c1,\n                                c2\n                            ]\n                        }\n                    ];\n                } else if (type == 'operatePart') {\n                    //操作部分\n                    range = [{\n                            'row': [\n                                range2['row'][0] + offset_r,\n                                range2['row'][1] + offset_r\n                            ],\n                            'column': [\n                                range2['column'][0] + offset_c,\n                                range2['column'][1] + offset_c\n                            ]\n                        }];\n                }\n            } else {\n                //选区 在 条件格式应用范围 之外\n                if (type == 'allPart') {\n                    //所有部分\n                    range = [{\n                            'row': [\n                                r1,\n                                r2\n                            ],\n                            'column': [\n                                c1,\n                                c2\n                            ]\n                        }];\n                } else if (type == 'restPart') {\n                    //剩余部分\n                    range = [{\n                            'row': [\n                                r1,\n                                r2\n                            ],\n                            'column': [\n                                c1,\n                                c2\n                            ]\n                        }];\n                } else if (type == 'operatePart') {\n                    //操作部分\n                    range = [];\n                }\n            }\n            return range;\n        },\n        getcolorGradation: function (color1, color2, value1, value2, value) {\n            let rgb1 = color1.split(',');\n            let r1 = parseInt(rgb1[0].split('(')[1]);\n            let g1 = parseInt(rgb1[1]);\n            let b1 = parseInt(rgb1[2].split(')')[0]);\n            let rgb2 = color2.split(',');\n            let r2 = parseInt(rgb2[0].split('(')[1]);\n            let g2 = parseInt(rgb2[1]);\n            let b2 = parseInt(rgb2[2].split(')')[0]);\n            let r = Math.round(r1 - (r1 - r2) / (value1 - value2) * (value1 - value));\n            let g = Math.round(g1 - (g1 - g2) / (value1 - value2) * (value1 - value));\n            let b = Math.round(b1 - (b1 - b2) / (value1 - value2) * (value1 - value));\n            return 'rgb(' + r + ', ' + g + ', ' + b + ')';\n        },\n        getCFPartRange: function (sheetIndex, range1, range2) {\n            let ruleArr = [];\n            let cf = Store.luckysheetfile[getSheetIndex(sheetIndex)].luckysheet_conditionformat_save;\n            if (cf != null && cf.length > 0) {\n                label:\n                    for (let i = 0; i < cf.length; i++) {\n                        let cellrange = cf[i].cellrange;\n                        for (let j = 0; j < cellrange.length; j++) {\n                            let r1 = cellrange[j].row[0], r2 = cellrange[j].row[1];\n                            let c1 = cellrange[j].column[0], c2 = cellrange[j].column[1];\n                            for (let s = 0; s < range.length; s++) {\n                                if (range[s].row[0] >= r1 && range[s].row[0] <= r2 || range[s].row[1] >= r1 && range[s].row[1] <= r2 || range[s].column[0] >= c1 && range[s].column[0] <= c2 || range[s].column[1] >= c1 && range[s].column[1] <= c2) {\n                                    ruleArr.push(cf[i]);\n                                    continue label;\n                                }\n                            }\n                        }\n                    }\n            }\n            return ruleArr;\n        },\n        checksCF: function (r, c, computeMap) {\n            if (computeMap != null && r + '_' + c in computeMap) {\n                return computeMap[r + '_' + c];\n            } else {\n                return null;\n            }\n        },\n        getComputeMap: function (sheetIndex) {\n            let index = getSheetIndex(Store.currentSheetIndex);\n            if (sheetIndex != null) {\n                index = getSheetIndex(sheetIndex);\n            }\n            let ruleArr = Store.luckysheetfile[index]['luckysheet_conditionformat_save'];\n            let data = Store.luckysheetfile[index]['data'];\n            if (data == null) {\n                return null;\n            }\n            let computeMap = this.compute(ruleArr, data);\n            return computeMap;\n        },\n        compute: function (ruleArr, d) {\n            let _this = this;\n            if (ruleArr == null) {\n                ruleArr = [];\n            }    //条件计算存储\n            //条件计算存储\n            let computeMap = {};\n            if (ruleArr.length > 0) {\n                for (let i = 0; i < ruleArr.length; i++) {\n                    let type = ruleArr[i]['type'];\n                    let cellrange = ruleArr[i]['cellrange'];\n                    let format = ruleArr[i]['format'];\n                    if (type == 'dataBar') {\n                        //数据条\n                        let max = null, min = null;\n                        for (let s = 0; s < cellrange.length; s++) {\n                            for (let r = cellrange[s].row[0]; r <= cellrange[s].row[1]; r++) {\n                                for (let c = cellrange[s].column[0]; c <= cellrange[s].column[1]; c++) {\n                                    if (d[r] == null || d[r][c] == null) {\n                                        continue;\n                                    }\n                                    let cell = d[r][c];\n                                    if (getObjType(cell) == 'object' && cell['ct'] != null && cell['ct'].t == 'n' && cell.v != null) {\n                                        if (max == null || parseInt(cell.v) > max) {\n                                            max = parseInt(cell.v);\n                                        }\n                                        if (min == null || parseInt(cell.v) < min) {\n                                            min = parseInt(cell.v);\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        if (max != null && min != null) {\n                            if (min < 0) {\n                                //选区范围内有负数\n                                let plusLen = Math.round(max / (max - min) * 10) / 10;    //正数所占比\n                                //正数所占比\n                                let minusLen = Math.round(Math.abs(min) / (max - min) * 10) / 10;    //负数所占比\n                                //负数所占比\n                                for (let s = 0; s < cellrange.length; s++) {\n                                    for (let r = cellrange[s].row[0]; r <= cellrange[s].row[1]; r++) {\n                                        for (let c = cellrange[s].column[0]; c <= cellrange[s].column[1]; c++) {\n                                            if (d[r] == null || d[r][c] == null) {\n                                                continue;\n                                            }\n                                            let cell = d[r][c];\n                                            if (getObjType(cell) == 'object' && cell['ct'] != null && cell['ct'].t == 'n' && cell.v != null) {\n                                                if (parseInt(cell.v) < 0) {\n                                                    //负数\n                                                    let valueLen = Math.round(Math.abs(parseInt(cell.v)) / Math.abs(min) * 100) / 100;\n                                                    if (r + '_' + c in computeMap) {\n                                                        computeMap[r + '_' + c]['dataBar'] = {\n                                                            'valueType': 'minus',\n                                                            'minusLen': minusLen,\n                                                            'valueLen': valueLen,\n                                                            'format': format\n                                                        };\n                                                    } else {\n                                                        computeMap[r + '_' + c] = {\n                                                            'dataBar': {\n                                                                'valueType': 'minus',\n                                                                'minusLen': minusLen,\n                                                                'valueLen': valueLen,\n                                                                'format': format\n                                                            }\n                                                        };\n                                                    }\n                                                }\n                                                if (parseInt(cell.v) > 0) {\n                                                    //正数\n                                                    let valueLen = Math.round(parseInt(cell.v) / max * 100) / 100;\n                                                    if (r + '_' + c in computeMap) {\n                                                        computeMap[r + '_' + c]['dataBar'] = {\n                                                            'valueType': 'plus',\n                                                            'plusLen': plusLen,\n                                                            'minusLen': minusLen,\n                                                            'valueLen': valueLen,\n                                                            'format': format\n                                                        };\n                                                    } else {\n                                                        computeMap[r + '_' + c] = {\n                                                            'dataBar': {\n                                                                'valueType': 'plus',\n                                                                'plusLen': plusLen,\n                                                                'minusLen': minusLen,\n                                                                'valueLen': valueLen,\n                                                                'format': format\n                                                            }\n                                                        };\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            } else {\n                                let plusLen = 1;\n                                for (let s = 0; s < cellrange.length; s++) {\n                                    for (let r = cellrange[s].row[0]; r <= cellrange[s].row[1]; r++) {\n                                        for (let c = cellrange[s].column[0]; c <= cellrange[s].column[1]; c++) {\n                                            if (d[r] == null || d[r][c] == null) {\n                                                continue;\n                                            }\n                                            let cell = d[r][c];\n                                            if (getObjType(cell) == 'object' && cell['ct'] != null && cell['ct'].t == 'n' && cell.v != null) {\n                                                let valueLen;\n                                                if (max == 0) {\n                                                    valueLen = 1;\n                                                } else {\n                                                    valueLen = Math.round(parseInt(cell.v) / max * 100) / 100;\n                                                }\n                                                if (r + '_' + c in computeMap) {\n                                                    computeMap[r + '_' + c]['dataBar'] = {\n                                                        'valueType': 'plus',\n                                                        'plusLen': plusLen,\n                                                        'valueLen': valueLen,\n                                                        'format': format\n                                                    };\n                                                } else {\n                                                    computeMap[r + '_' + c] = {\n                                                        'dataBar': {\n                                                            'valueType': 'plus',\n                                                            'plusLen': plusLen,\n                                                            'valueLen': valueLen,\n                                                            'format': format\n                                                        }\n                                                    };\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    } else if (type == 'colorGradation') {\n                        //色阶\n                        let max = null, min = null, sum = 0, count = 0;\n                        for (let s = 0; s < cellrange.length; s++) {\n                            for (let r = cellrange[s].row[0]; r <= cellrange[s].row[1]; r++) {\n                                for (let c = cellrange[s].column[0]; c <= cellrange[s].column[1]; c++) {\n                                    if (d[r] == null || d[r][c] == null) {\n                                        continue;\n                                    }\n                                    let cell = d[r][c];\n                                    if (getObjType(cell) == 'object' && cell['ct'] != null && cell['ct'].t == 'n' && cell.v != null) {\n                                        count++;\n                                        sum += parseInt(cell.v);\n                                        if (max == null || parseInt(cell.v) > max) {\n                                            max = parseInt(cell.v);\n                                        }\n                                        if (min == null || parseInt(cell.v) < min) {\n                                            min = parseInt(cell.v);\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        if (max != null && min != null) {\n                            if (format.length == 3) {\n                                //三色色阶\n                                let avg = Math.floor(sum / count);\n                                for (let s = 0; s < cellrange.length; s++) {\n                                    for (let r = cellrange[s].row[0]; r <= cellrange[s].row[1]; r++) {\n                                        for (let c = cellrange[s].column[0]; c <= cellrange[s].column[1]; c++) {\n                                            if (d[r] == null || d[r][c] == null) {\n                                                continue;\n                                            }\n                                            let cell = d[r][c];\n                                            if (getObjType(cell) == 'object' && cell['ct'] != null && cell['ct'].t == 'n' && cell.v != null) {\n                                                if (parseInt(cell.v) == min) {\n                                                    if (r + '_' + c in computeMap) {\n                                                        computeMap[r + '_' + c]['cellColor'] = format[2];\n                                                    } else {\n                                                        computeMap[r + '_' + c] = { 'cellColor': format[2] };\n                                                    }\n                                                } else if (parseInt(cell.v) > min && parseInt(cell.v) < avg) {\n                                                    if (r + '_' + c in computeMap) {\n                                                        computeMap[r + '_' + c]['cellColor'] = _this.getcolorGradation(format[2], format[1], min, avg, parseInt(cell.v));\n                                                    } else {\n                                                        computeMap[r + '_' + c] = { 'cellColor': _this.getcolorGradation(format[2], format[1], min, avg, parseInt(cell.v)) };\n                                                    }\n                                                } else if (parseInt(cell.v) == avg) {\n                                                    if (r + '_' + c in computeMap) {\n                                                        computeMap[r + '_' + c]['cellColor'] = format[1];\n                                                    } else {\n                                                        computeMap[r + '_' + c] = { 'cellColor': format[1] };\n                                                    }\n                                                } else if (parseInt(cell.v) > avg && parseInt(cell.v) < max) {\n                                                    if (r + '_' + c in computeMap) {\n                                                        computeMap[r + '_' + c]['cellColor'] = _this.getcolorGradation(format[1], format[0], avg, max, parseInt(cell.v));\n                                                    } else {\n                                                        computeMap[r + '_' + c] = { 'cellColor': _this.getcolorGradation(format[1], format[0], avg, max, parseInt(cell.v)) };\n                                                    }\n                                                } else if (parseInt(cell.v) == max) {\n                                                    if (r + '_' + c in computeMap) {\n                                                        computeMap[r + '_' + c]['cellColor'] = format[0];\n                                                    } else {\n                                                        computeMap[r + '_' + c] = { 'cellColor': format[0] };\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            } else if (format.length == 2) {\n                                //两色色阶\n                                for (let s = 0; s < cellrange.length; s++) {\n                                    for (let r = cellrange[s].row[0]; r <= cellrange[s].row[1]; r++) {\n                                        for (let c = cellrange[s].column[0]; c <= cellrange[s].column[1]; c++) {\n                                            if (d[r] == null || d[r][c] == null) {\n                                                continue;\n                                            }\n                                            let cell = d[r][c];\n                                            if (getObjType(cell) == 'object' && cell['ct'] != null && cell['ct'].t == 'n' && cell.v != null) {\n                                                if (parseInt(cell.v) == min) {\n                                                    if (r + '_' + c in computeMap) {\n                                                        computeMap[r + '_' + c]['cellColor'] = format[1];\n                                                    } else {\n                                                        computeMap[r + '_' + c] = { 'cellColor': format[1] };\n                                                    }\n                                                } else if (parseInt(cell.v) > min && parseInt(cell.v) < max) {\n                                                    if (r + '_' + c in computeMap) {\n                                                        computeMap[r + '_' + c]['cellColor'] = _this.getcolorGradation(format[1], format[0], min, max, parseInt(cell.v));\n                                                    } else {\n                                                        computeMap[r + '_' + c] = { 'cellColor': _this.getcolorGradation(format[1], format[0], min, max, parseInt(cell.v)) };\n                                                    }\n                                                } else if (parseInt(cell.v) == max) {\n                                                    if (r + '_' + c in computeMap) {\n                                                        computeMap[r + '_' + c]['cellColor'] = format[0];\n                                                    } else {\n                                                        computeMap[r + '_' + c] = { 'cellColor': format[0] };\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    } else if (type == 'icons') {\n                        //图标集\n                        let len = parseInt(format['len']);\n                        let leftMin = parseInt(format['leftMin']);\n                        let top = parseInt(format['top']);\n                        let max = null, min = null;\n                        for (let s = 0; s < cellrange.length; s++) {\n                            for (let r = cellrange[s].row[0]; r <= cellrange[s].row[1]; r++) {\n                                for (let c = cellrange[s].column[0]; c <= cellrange[s].column[1]; c++) {\n                                    if (d[r] == null || d[r][c] == null) {\n                                        continue;\n                                    }\n                                    let cell = d[r][c];\n                                    if (getObjType(cell) == 'object' && cell['ct'] != null && cell['ct'].t == 'n' && cell.v != null) {\n                                        if (max == null || parseInt(cell.v) > max) {\n                                            max = parseInt(cell.v);\n                                        }\n                                        if (min == null || parseInt(cell.v) < min) {\n                                            min = parseInt(cell.v);\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        if (max != null && min != null) {\n                            let a = Math.floor((max - min + 1) / len);\n                            let b = (max - min + 1) % len;\n                            if (len == 3) {\n                                //一组图标有三个\n                                let v1, v2, v3;\n                                if (b == 2) {\n                                    v1 = [\n                                        min,\n                                        min + a\n                                    ];\n                                    v2 = [\n                                        min + a + 1,\n                                        min + a * 2\n                                    ];\n                                    v3 = [\n                                        min + a * 2 + 1,\n                                        max\n                                    ];\n                                } else {\n                                    v1 = [\n                                        min,\n                                        min + a - 1\n                                    ];\n                                    v2 = [\n                                        min + a,\n                                        min + a * 2 - 1\n                                    ];\n                                    v3 = [\n                                        min + a * 2,\n                                        max\n                                    ];\n                                }\n                                for (let s = 0; s < cellrange.length; s++) {\n                                    for (let r = cellrange[s].row[0]; r <= cellrange[s].row[1]; r++) {\n                                        for (let c = cellrange[s].column[0]; c <= cellrange[s].column[1]; c++) {\n                                            if (d[r] == null || d[r][c] == null) {\n                                                continue;\n                                            }\n                                            let cell = d[r][c];\n                                            if (getObjType(cell) == 'object' && cell['ct'] != null && cell['ct'].t == 'n' && cell.v != null) {\n                                                if (parseInt(cell.v) >= v1[0] && parseInt(cell.v) <= v1[1]) {\n                                                    if (r + '_' + c in computeMap) {\n                                                        computeMap[r + '_' + c]['icons'] = {\n                                                            'left': leftMin + 2,\n                                                            'top': top\n                                                        };\n                                                    } else {\n                                                        computeMap[r + '_' + c] = {\n                                                            'icons': {\n                                                                'left': leftMin + 2,\n                                                                'top': top\n                                                            }\n                                                        };\n                                                    }\n                                                } else if (parseInt(cell.v) >= v2[0] && parseInt(cell.v) <= v2[1]) {\n                                                    if (r + '_' + c in computeMap) {\n                                                        computeMap[r + '_' + c]['icons'] = {\n                                                            'left': leftMin + 1,\n                                                            'top': top\n                                                        };\n                                                    } else {\n                                                        computeMap[r + '_' + c] = {\n                                                            'icons': {\n                                                                'left': leftMin + 1,\n                                                                'top': top\n                                                            }\n                                                        };\n                                                    }\n                                                } else if (parseInt(cell.v) >= v3[0] && parseInt(cell.v) <= v3[1]) {\n                                                    if (r + '_' + c in computeMap) {\n                                                        computeMap[r + '_' + c]['icons'] = {\n                                                            'left': leftMin,\n                                                            'top': top\n                                                        };\n                                                    } else {\n                                                        computeMap[r + '_' + c] = {\n                                                            'icons': {\n                                                                'left': leftMin,\n                                                                'top': top\n                                                            }\n                                                        };\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            } else if (len == 4) {\n                                //一组图标有四个\n                                let v1, v2, v3, v4;\n                                if (b == 2) {\n                                    v1 = [\n                                        min,\n                                        min + a\n                                    ];\n                                    v2 = [\n                                        min + a + 1,\n                                        min + a * 2\n                                    ];\n                                    v3 = [\n                                        min + a * 2 + 1,\n                                        min + a * 3\n                                    ];\n                                    v4 = [\n                                        min + a * 3 + 1,\n                                        max\n                                    ];\n                                } else if (b == 3) {\n                                    v1 = [\n                                        min,\n                                        min + a\n                                    ];\n                                    v2 = [\n                                        min + a + 1,\n                                        min + a * 2\n                                    ];\n                                    v3 = [\n                                        min + a * 2 + 1,\n                                        min + a * 3 + 1\n                                    ];\n                                    v4 = [\n                                        min + a * 3 + 2,\n                                        max\n                                    ];\n                                } else {\n                                    v1 = [\n                                        min,\n                                        min + a - 1\n                                    ];\n                                    v2 = [\n                                        min + a,\n                                        min + a * 2 - 1\n                                    ];\n                                    v3 = [\n                                        min + a * 2,\n                                        min + a * 3 - 1\n                                    ];\n                                    v4 = [\n                                        min + a * 3,\n                                        max\n                                    ];\n                                }\n                                for (let s = 0; s < cellrange.length; s++) {\n                                    for (let r = cellrange[s].row[0]; r <= cellrange[s].row[1]; r++) {\n                                        for (let c = cellrange[s].column[0]; c <= cellrange[s].column[1]; c++) {\n                                            if (d[r] == null || d[r][c] == null) {\n                                                continue;\n                                            }\n                                            let cell = d[r][c];\n                                            if (getObjType(cell) == 'object' && cell['ct'] != null && cell['ct'].t == 'n' && cell.v != null) {\n                                                if (parseInt(cell.v) >= v1[0] && parseInt(cell.v) <= v1[1]) {\n                                                    if (r + '_' + c in computeMap) {\n                                                        computeMap[r + '_' + c]['icons'] = {\n                                                            'left': leftMin + 3,\n                                                            'top': top\n                                                        };\n                                                    } else {\n                                                        computeMap[r + '_' + c] = {\n                                                            'icons': {\n                                                                'left': leftMin + 3,\n                                                                'top': top\n                                                            }\n                                                        };\n                                                    }\n                                                } else if (parseInt(cell.v) >= v2[0] && parseInt(cell.v) <= v2[1]) {\n                                                    if (r + '_' + c in computeMap) {\n                                                        computeMap[r + '_' + c]['icons'] = {\n                                                            'left': leftMin + 2,\n                                                            'top': top\n                                                        };\n                                                    } else {\n                                                        computeMap[r + '_' + c] = {\n                                                            'icons': {\n                                                                'left': leftMin + 2,\n                                                                'top': top\n                                                            }\n                                                        };\n                                                    }\n                                                } else if (parseInt(cell.v) >= v3[0] && parseInt(cell.v) <= v3[1]) {\n                                                    if (r + '_' + c in computeMap) {\n                                                        computeMap[r + '_' + c]['icons'] = {\n                                                            'left': leftMin + 1,\n                                                            'top': top\n                                                        };\n                                                    } else {\n                                                        computeMap[r + '_' + c] = {\n                                                            'icons': {\n                                                                'left': leftMin + 1,\n                                                                'top': top\n                                                            }\n                                                        };\n                                                    }\n                                                } else if (parseInt(cell.v) >= v4[0] && parseInt(cell.v) <= v4[1]) {\n                                                    if (r + '_' + c in computeMap) {\n                                                        computeMap[r + '_' + c]['icons'] = {\n                                                            'left': leftMin,\n                                                            'top': top\n                                                        };\n                                                    } else {\n                                                        computeMap[r + '_' + c] = {\n                                                            'icons': {\n                                                                'left': leftMin,\n                                                                'top': top\n                                                            }\n                                                        };\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            } else if (len == 5) {\n                                //一组图标有五个\n                                let v1, v2, v3, v4, v5;\n                                if (b == 2) {\n                                    v1 = [\n                                        min,\n                                        min + a\n                                    ];\n                                    v2 = [\n                                        min + a + 1,\n                                        min + a * 2\n                                    ];\n                                    v3 = [\n                                        min + a * 2 + 1,\n                                        min + a * 3\n                                    ];\n                                    v4 = [\n                                        min + a * 3 + 1,\n                                        min + a * 4\n                                    ];\n                                    v5 = [\n                                        min + a * 4 + 1,\n                                        max\n                                    ];\n                                } else if (b == 3) {\n                                    v1 = [\n                                        min,\n                                        min + a\n                                    ];\n                                    v2 = [\n                                        min + a + 1,\n                                        min + a * 2\n                                    ];\n                                    v3 = [\n                                        min + a * 2 + 1,\n                                        min + a * 3 + 1\n                                    ];\n                                    v4 = [\n                                        min + a * 3 + 2,\n                                        min + a * 4 + 1\n                                    ];\n                                    v5 = [\n                                        min + a * 4 + 2,\n                                        max\n                                    ];\n                                } else if (b == 4) {\n                                    v1 = [\n                                        min,\n                                        min + a\n                                    ];\n                                    v2 = [\n                                        min + a + 1,\n                                        min + a * 2 + 1\n                                    ];\n                                    v3 = [\n                                        min + a * 2 + 2,\n                                        min + a * 3 + 1\n                                    ];\n                                    v4 = [\n                                        min + a * 3 + 2,\n                                        min + a * 4 + 2\n                                    ];\n                                    v5 = [\n                                        min + a * 4 + 3,\n                                        max\n                                    ];\n                                } else {\n                                    v1 = [\n                                        min,\n                                        min + a - 1\n                                    ];\n                                    v2 = [\n                                        min + a,\n                                        min + a * 2 - 1\n                                    ];\n                                    v3 = [\n                                        min + a * 2,\n                                        min + a * 3 - 1\n                                    ];\n                                    v4 = [\n                                        min + a * 3,\n                                        min + a * 4 - 1\n                                    ];\n                                    v5 = [\n                                        min + a * 4,\n                                        max\n                                    ];\n                                }\n                                for (let s = 0; s < cellrange.length; s++) {\n                                    for (let r = cellrange[s].row[0]; r <= cellrange[s].row[1]; r++) {\n                                        for (let c = cellrange[s].column[0]; c <= cellrange[s].column[1]; c++) {\n                                            if (d[r] == null || d[r][c] == null) {\n                                                continue;\n                                            }\n                                            let cell = d[r][c];\n                                            if (getObjType(cell) == 'object' && cell['ct'] != null && cell['ct'].t == 'n' && cell.v != null) {\n                                                if (parseInt(cell.v) >= v1[0] && parseInt(cell.v) <= v1[1]) {\n                                                    if (r + '_' + c in computeMap) {\n                                                        computeMap[r + '_' + c]['icons'] = {\n                                                            'left': leftMin + 4,\n                                                            'top': top\n                                                        };\n                                                    } else {\n                                                        computeMap[r + '_' + c] = {\n                                                            'icons': {\n                                                                'left': leftMin + 4,\n                                                                'top': top\n                                                            }\n                                                        };\n                                                    }\n                                                } else if (parseInt(cell.v) >= v2[0] && parseInt(cell.v) <= v2[1]) {\n                                                    if (r + '_' + c in computeMap) {\n                                                        computeMap[r + '_' + c]['icons'] = {\n                                                            'left': leftMin + 3,\n                                                            'top': top\n                                                        };\n                                                    } else {\n                                                        computeMap[r + '_' + c] = {\n                                                            'icons': {\n                                                                'left': leftMin + 3,\n                                                                'top': top\n                                                            }\n                                                        };\n                                                    }\n                                                } else if (parseInt(cell.v) >= v3[0] && parseInt(cell.v) <= v3[1]) {\n                                                    if (r + '_' + c in computeMap) {\n                                                        computeMap[r + '_' + c]['icons'] = {\n                                                            'left': leftMin + 2,\n                                                            'top': top\n                                                        };\n                                                    } else {\n                                                        computeMap[r + '_' + c] = {\n                                                            'icons': {\n                                                                'left': leftMin + 2,\n                                                                'top': top\n                                                            }\n                                                        };\n                                                    }\n                                                } else if (parseInt(cell.v) >= v4[0] && parseInt(cell.v) <= v4[1]) {\n                                                    if (r + '_' + c in computeMap) {\n                                                        computeMap[r + '_' + c]['icons'] = {\n                                                            'left': leftMin + 1,\n                                                            'top': top\n                                                        };\n                                                    } else {\n                                                        computeMap[r + '_' + c] = {\n                                                            'icons': {\n                                                                'left': leftMin + 1,\n                                                                'top': top\n                                                            }\n                                                        };\n                                                    }\n                                                } else if (parseInt(cell.v) >= v5[0] && parseInt(cell.v) <= v5[1]) {\n                                                    if (r + '_' + c in computeMap) {\n                                                        computeMap[r + '_' + c]['icons'] = {\n                                                            'left': leftMin,\n                                                            'top': top\n                                                        };\n                                                    } else {\n                                                        computeMap[r + '_' + c] = {\n                                                            'icons': {\n                                                                'left': leftMin,\n                                                                'top': top\n                                                            }\n                                                        };\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    } else {\n                        //获取变量值\n                        let conditionName = ruleArr[i].conditionName,\n                            //条件名称\n                            conditionValue0 = ruleArr[i].conditionValue[0],\n                            //条件值1\n                            conditionValue1 = ruleArr[i].conditionValue[1],\n                            //条件值2\n                            textColor = format.textColor,\n                            //条件格式文本颜色 fc\n                            cellColor = format.cellColor;    //条件格式单元格颜色 bg\n                        //条件格式单元格颜色 bg\n                        for (let s = 0; s < cellrange.length; s++) {\n                            //条件类型判断\n                            if (conditionName == 'greaterThan' || conditionName == 'lessThan' || conditionName == 'equal' || conditionName == 'textContains') {\n                                //循环应用范围计算\n                                for (let r = cellrange[s].row[0]; r <= cellrange[s].row[1]; r++) {\n                                    for (let c = cellrange[s].column[0]; c <= cellrange[s].column[1]; c++) {\n                                        if (d[r] == null || d[r][c] == null) {\n                                            continue;\n                                        }    //单元格值\n                                        //单元格值\n                                        let cell = d[r][c];\n                                        if (getObjType(cell) != 'object' || isRealNull(cell.v)) {\n                                            continue;\n                                        }    //符合条件\n                                        //符合条件\n                                        if (conditionName == 'greaterThan' && cell.v > conditionValue0) {\n                                            if (r + '_' + c in computeMap) {\n                                                computeMap[r + '_' + c]['textColor'] = textColor;\n                                                computeMap[r + '_' + c]['cellColor'] = cellColor;\n                                            } else {\n                                                computeMap[r + '_' + c] = {\n                                                    'textColor': textColor,\n                                                    'cellColor': cellColor\n                                                };\n                                            }\n                                        } else if (conditionName == 'lessThan' && cell.v < conditionValue0) {\n                                            if (r + '_' + c in computeMap) {\n                                                computeMap[r + '_' + c]['textColor'] = textColor;\n                                                computeMap[r + '_' + c]['cellColor'] = cellColor;\n                                            } else {\n                                                computeMap[r + '_' + c] = {\n                                                    'textColor': textColor,\n                                                    'cellColor': cellColor\n                                                };\n                                            }\n                                        } else if (conditionName == 'equal' && cell.v == conditionValue0) {\n                                            if (r + '_' + c in computeMap) {\n                                                computeMap[r + '_' + c]['textColor'] = textColor;\n                                                computeMap[r + '_' + c]['cellColor'] = cellColor;\n                                            } else {\n                                                computeMap[r + '_' + c] = {\n                                                    'textColor': textColor,\n                                                    'cellColor': cellColor\n                                                };\n                                            }\n                                        } else if (conditionName == 'textContains' && cell.v.toString().indexOf(conditionValue0) != -1) {\n                                            if (r + '_' + c in computeMap) {\n                                                computeMap[r + '_' + c]['textColor'] = textColor;\n                                                computeMap[r + '_' + c]['cellColor'] = cellColor;\n                                            } else {\n                                                computeMap[r + '_' + c] = {\n                                                    'textColor': textColor,\n                                                    'cellColor': cellColor\n                                                };\n                                            }\n                                        }\n                                    }\n                                }\n                            } else if (conditionName == 'betweenness') {\n                                //比较条件值1和条件值2的大小\n                                let vBig, vSmall;\n                                if (conditionValue0 > conditionValue1) {\n                                    vBig = conditionValue0;\n                                    vSmall = conditionValue1;\n                                } else {\n                                    vBig = conditionValue1;\n                                    vSmall = conditionValue0;\n                                }    //循环应用范围计算\n                                //循环应用范围计算\n                                for (let r = cellrange[s].row[0]; r <= cellrange[s].row[1]; r++) {\n                                    for (let c = cellrange[s].column[0]; c <= cellrange[s].column[1]; c++) {\n                                        if (d[r] == null || d[r][c] == null) {\n                                            continue;\n                                        }    //单元格值\n                                        //单元格值\n                                        let cell = d[r][c];\n                                        if (getObjType(cell) != 'object' || isRealNull(cell.v)) {\n                                            continue;\n                                        }    //符合条件\n                                        //符合条件\n                                        if (cell.v >= vSmall && cell.v <= vBig) {\n                                            if (r + '_' + c in computeMap) {\n                                                computeMap[r + '_' + c]['textColor'] = textColor;\n                                                computeMap[r + '_' + c]['cellColor'] = cellColor;\n                                            } else {\n                                                computeMap[r + '_' + c] = {\n                                                    'textColor': textColor,\n                                                    'cellColor': cellColor\n                                                };\n                                            }\n                                        }\n                                    }\n                                }\n                            } else if (conditionName == 'occurrenceDate') {\n                                //获取日期所对应的数值\n                                let dBig, dSmall;\n                                if (conditionValue0.toString().indexOf('-') == -1) {\n                                    dBig = genarate(conditionValue0)[2];\n                                    dSmall = genarate(conditionValue0)[2];\n                                } else {\n                                    let str = conditionValue0.toString().split('-');\n                                    dBig = genarate(str[1].trim())[2];\n                                    dSmall = genarate(str[0].trim())[2];\n                                }    //循环应用范围计算\n                                //循环应用范围计算\n                                for (let r = cellrange[s].row[0]; r <= cellrange[s].row[1]; r++) {\n                                    for (let c = cellrange[s].column[0]; c <= cellrange[s].column[1]; c++) {\n                                        if (d[r] == null || d[r][c] == null) {\n                                            continue;\n                                        }    //单元格值类型为日期类型\n                                        //单元格值类型为日期类型\n                                        if (d[r][c].ct != null && d[r][c].ct.t == 'd') {\n                                            //单元格值\n                                            let cellVal = getcellvalue(r, c, d);    //符合条件\n                                            //符合条件\n                                            if (cellVal >= dSmall && cellVal <= dBig) {\n                                                if (r + '_' + c in computeMap) {\n                                                    computeMap[r + '_' + c]['textColor'] = textColor;\n                                                    computeMap[r + '_' + c]['cellColor'] = cellColor;\n                                                } else {\n                                                    computeMap[r + '_' + c] = {\n                                                        'textColor': textColor,\n                                                        'cellColor': cellColor\n                                                    };\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            } else if (conditionName == 'duplicateValue') {\n                                //应用范围单元格值处理\n                                let dmap = {};\n                                for (let r = cellrange[s].row[0]; r <= cellrange[s].row[1]; r++) {\n                                    for (let c = cellrange[s].column[0]; c <= cellrange[s].column[1]; c++) {\n                                        let item = getcellvalue(r, c, d);\n                                        if (!(item in dmap)) {\n                                            dmap[item] = [];\n                                        }\n                                        dmap[item].push({\n                                            'r': r,\n                                            'c': c\n                                        });\n                                    }\n                                }    //循环应用范围计算\n                                //循环应用范围计算\n                                if (conditionValue0 == '0') {\n                                    //重复值\n                                    for (let x in dmap) {\n                                        if (x != 'null' && x != 'undefined' && dmap[x].length > 1) {\n                                            for (let j = 0; j < dmap[x].length; j++) {\n                                                if (dmap[x][j].r + '_' + dmap[x][j].c in computeMap) {\n                                                    computeMap[dmap[x][j].r + '_' + dmap[x][j].c]['textColor'] = textColor;\n                                                    computeMap[dmap[x][j].r + '_' + dmap[x][j].c]['cellColor'] = cellColor;\n                                                } else {\n                                                    computeMap[dmap[x][j].r + '_' + dmap[x][j].c] = {\n                                                        'textColor': textColor,\n                                                        'cellColor': cellColor\n                                                    };\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                if (conditionValue0 == '1') {\n                                    //唯一值\n                                    for (let x in dmap) {\n                                        if (x != 'null' && x != 'undefined' && dmap[x].length == 1) {\n                                            if (dmap[x][0].r + '_' + dmap[x][0].c in computeMap) {\n                                                computeMap[dmap[x][0].r + '_' + dmap[x][0].c]['textColor'] = textColor;\n                                                computeMap[dmap[x][0].r + '_' + dmap[x][0].c]['cellColor'] = cellColor;\n                                            } else {\n                                                computeMap[dmap[x][0].r + '_' + dmap[x][0].c] = {\n                                                    'textColor': textColor,\n                                                    'cellColor': cellColor\n                                                };\n                                            }\n                                        }\n                                    }\n                                }\n                            } else if (conditionName == 'top10' || conditionName == 'top10%' || conditionName == 'last10' || conditionName == 'last10%' || conditionName == 'AboveAverage' || conditionName == 'SubAverage') {\n                                //应用范围单元格值(数值型)\n                                let dArr = [];\n                                for (let r = cellrange[s].row[0]; r <= cellrange[s].row[1]; r++) {\n                                    for (let c = cellrange[s].column[0]; c <= cellrange[s].column[1]; c++) {\n                                        if (d[r] == null || d[r][c] == null) {\n                                            continue;\n                                        }    //单元格值类型为数字类型\n                                        //单元格值类型为数字类型\n                                        if (d[r][c].ct != null && d[r][c].ct.t == 'n') {\n                                            dArr.push(getcellvalue(r, c, d));\n                                        }\n                                    }\n                                }    //数组处理\n                                //数组处理\n                                if (conditionName == 'top10' || conditionName == 'top10%' || conditionName == 'last10' || conditionName == 'last10%') {\n                                    //从大到小排序\n                                    for (let j = 0; j < dArr.length; j++) {\n                                        for (let k = 0; k < dArr.length - 1 - j; k++) {\n                                            if (dArr[k] < dArr[k + 1]) {\n                                                let temp = dArr[k];\n                                                dArr[k] = dArr[k + 1];\n                                                dArr[k + 1] = temp;\n                                            }\n                                        }\n                                    }    //取条件值数组\n                                    //取条件值数组\n                                    let cArr;\n                                    if (conditionName == 'top10') {\n                                        cArr = dArr.slice(0, conditionValue0);    //前10项数组\n                                    } else //前10项数组\n                                    if (conditionName == 'top10%') {\n                                        cArr = dArr.slice(0, Math.floor(conditionValue0 * dArr.length / 100));    //前10%数组\n                                    } else //前10%数组\n                                    if (conditionName == 'last10') {\n                                        cArr = dArr.slice(dArr.length - conditionValue0, dArr.length);    //最后10项数组\n                                    } else //最后10项数组\n                                    if (conditionName == 'last10%') {\n                                        cArr = dArr.slice(dArr.length - Math.floor(conditionValue0 * dArr.length / 100), dArr.length);    //最后10%数组\n                                    }    //循环应用范围计算\n                                    //最后10%数组\n                                    //循环应用范围计算\n                                    for (let r = cellrange[s].row[0]; r <= cellrange[s].row[1]; r++) {\n                                        for (let c = cellrange[s].column[0]; c <= cellrange[s].column[1]; c++) {\n                                            if (d[r] == null || d[r][c] == null) {\n                                                continue;\n                                            }    //单元格值\n                                            //单元格值\n                                            let cellVal = getcellvalue(r, c, d);    //符合条件\n                                            //符合条件\n                                            if (cArr.indexOf(cellVal) != -1) {\n                                                if (r + '_' + c in computeMap) {\n                                                    computeMap[r + '_' + c]['textColor'] = textColor;\n                                                    computeMap[r + '_' + c]['cellColor'] = cellColor;\n                                                } else {\n                                                    computeMap[r + '_' + c] = {\n                                                        'textColor': textColor,\n                                                        'cellColor': cellColor\n                                                    };\n                                                }\n                                            }\n                                        }\n                                    }\n                                } else if (conditionName == 'AboveAverage' || conditionName == 'SubAverage') {\n                                    //计算数组平均值\n                                    let sum = 0;\n                                    for (let j = 0; j < dArr.length; j++) {\n                                        sum += dArr[j];\n                                    }\n                                    let averageNum = sum / dArr.length;    //循环应用范围计算\n                                    //循环应用范围计算\n                                    if (conditionName == 'AboveAverage') {\n                                        //高于平均值\n                                        for (let r = cellrange[s].row[0]; r <= cellrange[s].row[1]; r++) {\n                                            for (let c = cellrange[s].column[0]; c <= cellrange[s].column[1]; c++) {\n                                                if (d[r] == null || d[r][c] == null) {\n                                                    continue;\n                                                }    //单元格值\n                                                //单元格值\n                                                let cellVal = getcellvalue(r, c, d);    //符合条件\n                                                //符合条件\n                                                if (cellVal > averageNum) {\n                                                    if (r + '_' + c in computeMap) {\n                                                        computeMap[r + '_' + c]['textColor'] = textColor;\n                                                        computeMap[r + '_' + c]['cellColor'] = cellColor;\n                                                    } else {\n                                                        computeMap[r + '_' + c] = {\n                                                            'textColor': textColor,\n                                                            'cellColor': cellColor\n                                                        };\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    } else if (conditionName == 'SubAverage') {\n                                        //低于平均值\n                                        for (let r = cellrange[s].row[0]; r <= cellrange[s].row[1]; r++) {\n                                            for (let c = cellrange[s].column[0]; c <= cellrange[s].column[1]; c++) {\n                                                if (d[r] == null || d[r][c] == null) {\n                                                    continue;\n                                                }    //单元格值\n                                                //单元格值\n                                                let cellVal = getcellvalue(r, c, d);    //符合条件\n                                                //符合条件\n                                                if (cellVal < averageNum) {\n                                                    if (r + '_' + c in computeMap) {\n                                                        computeMap[r + '_' + c]['textColor'] = textColor;\n                                                        computeMap[r + '_' + c]['cellColor'] = cellColor;\n                                                    } else {\n                                                        computeMap[r + '_' + c] = {\n                                                            'textColor': textColor,\n                                                            'cellColor': cellColor\n                                                        };\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            } else if (conditionName == 'formula') {\n                                let str = cellrange[s].row[0], edr = cellrange[s].row[1], stc = cellrange[s].column[0], edc = cellrange[s].column[1];\n                                let formulaTxt = conditionValue0;\n                                if (conditionValue0.toString().slice(0, 1) != '=') {\n                                    formulaTxt = '=' + conditionValue0;\n                                }\n                                for (let r = str; r <= edr; r++) {\n                                    for (let c = stc; c <= edc; c++) {\n                                        let func = formulaTxt;\n                                        let offsetRow = r - str;\n                                        let offsetCol = c - stc;\n                                        if (offsetRow > 0) {\n                                            func = '=' + formula.functionCopy(func, 'down', offsetRow);\n                                        }\n                                        if (offsetCol > 0) {\n                                            func = '=' + formula.functionCopy(func, 'right', offsetCol);\n                                        }\n                                        let funcV = formula.execfunction(func);\n                                        let v = funcV[1];\n                                        if (typeof v != 'boolean') {\n                                            v = !!Number(v);\n                                        }\n                                        if (!v) {\n                                            continue;\n                                        }\n                                        if (r + '_' + c in computeMap) {\n                                            computeMap[r + '_' + c]['textColor'] = textColor;\n                                            computeMap[r + '_' + c]['cellColor'] = cellColor;\n                                        } else {\n                                            computeMap[r + '_' + c] = {\n                                                'textColor': textColor,\n                                                'cellColor': cellColor\n                                            };\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            return computeMap;\n        },\n        updateItem: function (type, cellrange, format) {\n            if (!checkProtectionFormatCells(Store.currentSheetIndex)) {\n                return;\n            }\n            let _this = this;\n            let index = getSheetIndex(Store.currentSheetIndex);    //保存之前的规则\n            //保存之前的规则\n            let fileH = $.extend(true, [], Store.luckysheetfile);\n            let historyRules = _this.getHistoryRules(fileH);    //保存当前的规则\n            //保存当前的规则\n            let ruleArr;\n            if (type == 'delSheet') {\n                ruleArr = [];\n            } else {\n                let rule = {\n                    'type': type,\n                    'cellrange': cellrange,\n                    'format': format\n                };\n                ruleArr = Store.luckysheetfile[index]['luckysheet_conditionformat_save'] == null ? [] : Store.luckysheetfile[index]['luckysheet_conditionformat_save'];\n                ruleArr.push(rule);\n            }\n            Store.luckysheetfile[index]['luckysheet_conditionformat_save'] = ruleArr;\n            let fileC = $.extend(true, [], Store.luckysheetfile);\n            let currentRules = _this.getCurrentRules(fileC);    //刷新一次表格\n            //刷新一次表格\n            _this.ref(historyRules, currentRules);    //发送给后台\n            //发送给后台\n            if (server.allowUpdate) {\n                server.saveParam('all', Store.currentSheetIndex, ruleArr, { 'k': 'luckysheet_conditionformat_save' });\n            }\n        },\n        getHistoryRules: function (fileH) {\n            let historyRules = [];\n            for (let h = 0; h < fileH.length; h++) {\n                historyRules.push({\n                    'sheetIndex': fileH[h]['index'],\n                    'luckysheet_conditionformat_save': fileH[h]['luckysheet_conditionformat_save']\n                });\n            }\n            return historyRules;\n        },\n        getCurrentRules: function (fileC) {\n            let currentRules = [];\n            for (let c = 0; c < fileC.length; c++) {\n                currentRules.push({\n                    'sheetIndex': fileC[c]['index'],\n                    'luckysheet_conditionformat_save': fileC[c]['luckysheet_conditionformat_save']\n                });\n            }\n            return currentRules;\n        },\n        ref: function (historyRules, currentRules) {\n            if (Store.clearjfundo) {\n                Store.jfundo.length = 0;\n                let redo = {};\n                redo['type'] = 'updateCF';\n                redo['data'] = {\n                    'historyRules': historyRules,\n                    'currentRules': currentRules\n                };\n                Store.jfredo.push(redo);\n            }\n            setTimeout(function () {\n                luckysheetrefreshgrid();\n            }, 1);\n        }\n    };\n    return conditionformat;\n});"]}