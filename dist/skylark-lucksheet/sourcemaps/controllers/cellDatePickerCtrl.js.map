{"version":3,"sources":["controllers/cellDatePickerCtrl.js"],"names":["define","menuButton","formula","Store","flatpickr","dayjs","m_format","m_api","update","datenum_local","setCellValue","setCellFormat","cellFocus","r","c","cell","row","visibledatarow","row_pre","col","visibledatacolumn","col_pre","margeset","mergeborer","flowdata","type","ct","fa","defaultDate","v","dateFormat","formatStr","replace","includes","fitFormat","enableTime","noCalendar","enableSeconds","time_24hr","hasChineseTime","column","$","show","css","width","height","left","top","test","fp","allowInput","[object Object]","setTimeout","destroy","parseDate","datestr","format","toDate","formatDate","date","locale","onChange","selectedDates","dateStr","currentVal","Date","html","isRefresh","updatecell","luckysheetCellUpdate","click"],"mappings":";;;;;;;AAAAA,QACI,eACA,oBACA,WACA,uBACA,iBACA,mBACA,iBACD,SAAUC,EAAYC,EAASC,EAAOC,EAAWC,EAAOC,EAAUC,GACjE,aACA,MAAMC,OAACA,EAAMC,cAAEA,GAAiBH,GAC1BI,aAACA,EAAYC,cAAEA,GAAiBJ,EA4FtC,OA1EIK,UAAW,SAAUC,EAAGC,EAAGC,GACvB,IAAIC,EAAMb,EAAMc,eAAeJ,GAAIK,EAAe,GAALL,EAAS,EAAIV,EAAMc,eAAeJ,EAAI,GAC/EM,EAAMhB,EAAMiB,kBAAkBN,GAAIO,EAAe,GAALP,EAAS,EAAIX,EAAMiB,kBAAkBN,EAAI,GACrFQ,EAAWrB,EAAWsB,WAAWpB,EAAMqB,SAAUX,EAAGC,GACpDW,EAAOV,EAAKW,GAAGC,IAAM,aACrBC,EAAcpB,EAAO,sBAAuBO,EAAKc,GACjDC,EAvBMC,CAAAA,IACd,IAAID,EAAaC,EAAUC,QAAQ,KAAM,KAazC,OAJAF,GADAA,GADAA,GADAA,GADAA,GADAA,GADAA,GADAA,GADAA,EAAaA,EAAWE,QAAQ,KAAM,MACdA,QAAQ,KAAM,MACdA,QAAQ,UAAW,MACnBA,QAAQ,MAAO,MACfA,QAAQ,MAAO,MACfA,QAAQ,UAAW,MACnBA,QAAQ,MAAO,MACfA,QAAQ,MAAO,MACfA,QAAQ,MAAO,KACxBC,SAAS,OACpBH,EAAaA,EAAWE,QAAQ,KAAM,MAEnCF,GAScI,CAAUT,GACvBU,GAAa,EACbC,GAAa,EACbC,GAAgB,EAChBC,GAAY,EACZC,GAAiB,EACfjB,IACFN,EAAMM,EAASN,IAAI,GACnBE,EAAUI,EAASN,IAAI,GACvBG,EAAMG,EAASkB,OAAO,GACtBnB,EAAUC,EAASkB,OAAO,IAE9BC,EAAE,qBAAqBC,OAAOC,KAC1BC,MAAOzB,EAAME,EAAU,EACvBwB,OAAQ7B,EAAME,EAAU,EACxB4B,KAAMzB,EACN0B,IAAK7B,IAEL,SAAS8B,KAAKvB,KACdc,GAAiB,GAEjB,SAASS,KAAKlB,KACdK,GAAa,GAEZ,QAAQa,KAAKlB,KACdM,GAAa,GAEb,IAAIY,KAAKlB,KACTO,GAAgB,GAEhB,IAAIW,KAAKlB,KACTQ,GAAY,GAEhB,MAAMW,EAAK7C,EAAU,yBACjB8C,YAAY,EACZd,WAAAA,EACAC,cAAAA,EACAF,WAAAA,EACAL,WAAAA,EACAQ,UAAAA,EACAV,YAAAA,EACAuB,UACIC,WAAW,KACPH,EAAGI,WACJ,IAEPC,UAAW,CAACC,EAASC,IACVnD,EAAMkD,GAASE,SAE1BC,WAAY,CAACC,EAAMH,EAAQI,IACnBrB,EACOlC,EAAMsD,GAAMH,OAAOA,GAAQxB,QAAQ,KAAM,MAAMA,QAAQ,KAAM,MAEjE3B,EAAMsD,GAAMH,OAAOA,GAE9BK,SAAU,SAAUC,EAAeC,GAC/B,IAAIC,EAAavD,EAAc,IAAIwD,KAAKH,IACxCrB,EAAE,gCAAgCyB,KAAKH,GACvCrD,EAAaG,EAAGC,EAAGkD,GAAcG,WAAW,IAC5CxD,EAAcE,EAAGC,EAAG,KAAMC,EAAKW,IAC1BS,GACDjC,EAAQkE,WAAWjE,EAAMkE,qBAAqB,GAAIlE,EAAMkE,qBAAqB,OAIzF5B,EAAE,yBAAyB6B","file":"../../controllers/cellDatePickerCtrl.js","sourcesContent":["define([\n    './menuButton',\n    '../global/formula',\n    '../store',\n    '../vendors/flatpickr',\n    'skylark-moment',\n    '../global/format',\n    '../global/api'\n], function (menuButton, formula, Store, flatpickr, dayjs, m_format, m_api) {\n    'use strict';\n    const {update, datenum_local} = m_format;\n    const {setCellValue, setCellFormat} = m_api;\n    const fitFormat = formatStr => {\n        let dateFormat = formatStr.replace(/y/g, 'Y');\n        dateFormat = dateFormat.replace(/d/g, 'D');\n        dateFormat = dateFormat.replace(/h/g, 'H');\n        dateFormat = dateFormat.replace(/上午\\/下午/g, 'A');\n        dateFormat = dateFormat.replace(/上午/g, 'A');\n        dateFormat = dateFormat.replace(/下午/g, 'A');\n        dateFormat = dateFormat.replace(/AM\\/PM/g, 'A');\n        dateFormat = dateFormat.replace(/AM/g, 'A');\n        dateFormat = dateFormat.replace(/PM/g, 'A');\n        dateFormat = dateFormat.replace(/\\\"/g, '');\n        if (dateFormat.includes('A')) {\n            dateFormat = dateFormat.replace(/H/g, 'h');\n        }\n        return dateFormat;\n    };\n    const cellDatePickerCtrl = {\n        cellFocus: function (r, c, cell) {\n            let row = Store.visibledatarow[r], row_pre = r == 0 ? 0 : Store.visibledatarow[r - 1];\n            let col = Store.visibledatacolumn[c], col_pre = c == 0 ? 0 : Store.visibledatacolumn[c - 1];\n            let margeset = menuButton.mergeborer(Store.flowdata, r, c);\n            let type = cell.ct.fa || 'YYYY-MM-DD';\n            let defaultDate = update('yyyy-MM-dd hh:mm:ss', cell.v);\n            let dateFormat = fitFormat(type);\n            let enableTime = false;\n            let noCalendar = false;\n            let enableSeconds = false;\n            let time_24hr = true;\n            let hasChineseTime = false;\n            if (!!margeset) {\n                row = margeset.row[1];\n                row_pre = margeset.row[0];\n                col = margeset.column[1];\n                col_pre = margeset.column[0];\n            }\n            $('.cell-date-picker').show().css({\n                width: col - col_pre + 1,\n                height: row - row_pre + 1,\n                left: col_pre,\n                top: row_pre\n            });\n            if (/[上午下午]/.test(type)) {\n                hasChineseTime = true;\n            }\n            if (/[Hhms]/.test(dateFormat)) {\n                enableTime = true;\n            }\n            if (!/[YMD]/.test(dateFormat)) {\n                noCalendar = true;\n            }\n            if (/s/.test(dateFormat)) {\n                enableSeconds = true;\n            }\n            if (/A/.test(dateFormat)) {\n                time_24hr = false;\n            }\n            const fp = flatpickr('#luckysheet-input-box', {\n                allowInput: false,\n                noCalendar,\n                enableSeconds,\n                enableTime,\n                dateFormat,\n                time_24hr,\n                defaultDate,\n                onClose() {\n                    setTimeout(() => {\n                        fp.destroy();\n                    }, 0);\n                },\n                parseDate: (datestr, format) => {\n                    return dayjs(datestr).toDate();\n                },\n                formatDate: (date, format, locale) => {\n                    if (hasChineseTime) {\n                        return dayjs(date).format(format).replace('AM', '上午').replace('PM', '下午');\n                    }\n                    return dayjs(date).format(format);\n                },\n                onChange: function (selectedDates, dateStr) {\n                    let currentVal = datenum_local(new Date(selectedDates));\n                    $('#luckysheet-rich-text-editor').html(dateStr);\n                    setCellValue(r, c, currentVal, { isRefresh: false });\n                    setCellFormat(r, c, 'ct', cell.ct);\n                    if (!enableTime) {\n                        formula.updatecell(Store.luckysheetCellUpdate[0], Store.luckysheetCellUpdate[1]);\n                    }\n                }\n            });\n            $('#luckysheet-input-box').click();\n        }\n    };\n    return cellDatePickerCtrl;\n});"]}