{"version":3,"sources":["controllers/sort.js"],"names":["define","m_util","m_sort_methods","m_validate","m_datecontroll","tooltip","m_getRowlen","m_protection","luckysheetConfigsetting","Store","numeral","getObjType","isRealNull","isRealNum","isEditMode","isdatetime","diff","rowlenByRange","checkProtectionAuthorityNormal","orderbydata","orderbydata1D","sortSelection","isAsc","currentSheetIndex","luckysheet_select_save","length","alert","info","str","edr","d","deepCopyFlowData","flowdata","r1","row","r2","c1","column","c2","r","cell","mc","v","test","hasMc","data","data_row","c","push","allParam","config","cfg","$","extend","RowlChange","refreshRange","sortColumnSeletion","colIndex"],"mappings":"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","file":"../../controllers/sort.js","sourcesContent":["define([\n    '../utils/util',\n    '../methods/sort_methods',\n    '../methods/validate',\n    '../methods/datecontroll',\n    '../widgets/tooltip',\n    '../methods/getRowlen',\n    '../methods/protection_methods',\n    '../methods/luckysheetConfigsetting',    \n    '../store',\n    '../vendors/numeral'\n], function (m_util,m_sort_methods, m_validate, m_datecontroll, tooltip,  m_getRowlen, m_protection, luckysheetConfigsetting,Store, numeral) {\n    'use strict';\n    const {getObjType} = m_util;\n    const {isRealNull, isRealNum} = m_validate;\n    const isEditMode = luckysheetConfigsetting.isEditMode;\n\n    const {isdatetime, diff} = m_datecontroll;\n    const {rowlenByRange} = m_getRowlen;\n    const {checkProtectionAuthorityNormal} = m_protection;\n\n    const {orderbydata,orderbydata1D} = m_sort_methods;\n\n    //排序选区数据\n    function sortSelection(isAsc) {\n        if (!checkProtectionAuthorityNormal(Store.currentSheetIndex, 'sort')) {\n            return;\n        }\n        if (Store.luckysheet_select_save.length > 1) {\n            if (isEditMode()) {\n                alert('不能对多重选择区域执行此操作\\uFF0C请选择单个区域\\uFF0C然后再试');\n            } else {\n                tooltip.info('不能对多重选择区域执行此操作\\uFF0C请选择单个区域\\uFF0C然后再试', '');\n            }\n            return;\n        }\n        if (isAsc == null) {\n            isAsc = true;\n        }\n        let d = Store.deepCopyFlowData(Store.flowdata);\n        let r1 = Store.luckysheet_select_save[0].row[0], r2 = Store.luckysheet_select_save[0].row[1];\n        let c1 = Store.luckysheet_select_save[0].column[0], c2 = Store.luckysheet_select_save[0].column[1];\n        let str, edr;\n        for (let r = r1; r <= r2; r++) {\n            if (d[r] != null && d[r][c1] != null) {\n                let cell = d[r][c1];\n                if (cell.mc != null || isRealNull(cell.v)) {\n                    continue;\n                }\n                if (str == null && /[\\u4e00-\\u9fa5]+/g.test(cell.v)) {\n                    str = r + 1;\n                    edr = r + 1;\n                    continue;\n                }\n                if (str == null) {\n                    str = r;\n                }\n                edr = r;\n            }\n        }\n        if (str == null || str > r2) {\n            return;\n        }\n        let hasMc = false;    //排序选区是否有合并单元格\n        //排序选区是否有合并单元格\n        let data = [];\n        for (let r = str; r <= edr; r++) {\n            let data_row = [];\n            for (let c = c1; c <= c2; c++) {\n                if (d[r][c] != null && d[r][c].mc != null) {\n                    hasMc = true;\n                    break;\n                }\n                data_row.push(d[r][c]);\n            }\n            data.push(data_row);\n        }\n        if (hasMc) {\n            if (isEditMode()) {\n                alert('选区有合并单元格\\uFF0C无法执行此操作\\uFF01');\n            } else {\n                tooltip.info('选区有合并单元格\\uFF0C无法执行此操作\\uFF01', '');\n            }\n            return;\n        }\n        data = orderbydata(data, 0, isAsc);\n        for (let r = str; r <= edr; r++) {\n            for (let c = c1; c <= c2; c++) {\n                d[r][c] = data[r - str][c - c1];\n            }\n        }\n        let allParam = {};\n        if (Store.config['rowlen'] != null) {\n            let cfg = $.extend(true, {}, Store.config);\n            cfg = rowlenByRange(d, str, edr, cfg);\n            allParam = {\n                'cfg': cfg,\n                'RowlChange': true\n            };\n        }\n        ///jfrefreshgrid(d, [{\n        Store.refreshRange(d,[{\n                'row': [\n                    str,\n                    edr\n                ],\n                'column': [\n                    c1,\n                    c2\n                ]\n            }], allParam);\n    }    //排序一列数据\n    //排序一列数据\n    function sortColumnSeletion(colIndex, isAsc) {\n        if (!checkProtectionAuthorityNormal(Store.currentSheetIndex, 'sort')) {\n            return;\n        }\n        if (isAsc == null) {\n            isAsc = true;\n        }\n        let d = Store.deepCopyFlowData(Store.flowdata);\n        let r1 = 0, r2 = d.length - 1;\n        let c1 = 0, c2 = d[0].length - 1;\n        let str, edr;\n        for (let r = r1; r <= r2; r++) {\n            if (d[r][colIndex] != null && d[r][colIndex].mc != null) {\n                continue;\n            }\n            if (d[r][colIndex] != null && !isRealNull(d[r][colIndex].v) && /[\\u4e00-\\u9fa5]+/g.test(d[r][colIndex].v) && str == null) {\n                str = r + 1;\n                edr = r + 1;\n                continue;\n            }\n            if (str == null) {\n                str = r;\n            }\n            if (d[r][colIndex] != null && !isRealNull(d[r][colIndex].v)) {\n                edr = r;\n            }\n        }\n        if (str == null || str > r2) {\n            return;\n        }\n        let hasMc = false;    //排序选区是否有合并单元格\n        //排序选区是否有合并单元格\n        let data = [];\n        for (let r = str; r <= edr; r++) {\n            let data_row = [];\n            for (let c = c1; c <= c2; c++) {\n                if (d[r][c] != null && d[r][c].mc != null) {\n                    hasMc = true;\n                    break;\n                }\n                data_row.push(d[r][c]);\n            }\n            data.push(data_row);\n        }\n        if (hasMc) {\n            if (isEditMode()) {\n                alert('列排序会扩展至整个表格选区\\uFF0C选区有合并单元格\\uFF0C无法执行此操作\\uFF0C请选择功能栏排序功能\\uFF01');\n            } else {\n                tooltip.info('列排序会扩展至整个表格选区\\uFF0C选区有合并单元格\\uFF0C无法执行此操作\\uFF0C请选择功能栏排序功能\\uFF01', '');\n            }\n            return;\n        }\n        data = orderbydata(data, colIndex, isAsc);\n        for (let r = str; r <= edr; r++) {\n            for (let c = c1; c <= c2; c++) {\n                d[r][c] = data[r - str][c - c1];\n            }\n        }\n        let allParam = {};\n        if (Store.config['rowlen'] != null) {\n            let cfg = $.extend(true, {}, Store.config);\n            cfg = rowlenByRange(d, str, edr, cfg);\n            allParam = {\n                'cfg': cfg,\n                'RowlChange': true\n            };\n        }\n        ///jfrefreshgrid(d, [{\n        Store.refreshRange(d,[{\n                'row': [\n                    str,\n                    edr\n                ],\n                'column': [\n                    c1,\n                    c2\n                ]\n            }], allParam);\n    }\n    return {\n        orderbydata,\n        orderbydata1D,\n        sortSelection,\n        sortColumnSeletion\n    };\n});"]}