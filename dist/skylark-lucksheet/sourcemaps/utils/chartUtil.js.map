{"version":3,"sources":["utils/chartUtil.js"],"names":["define","isObject","o","isMap","obj","Map","deepCopy","cloneObj","key","keys","value","get","Array","isArray","copyVal","set","HTMLElement","cloneNode","Object","prototype","hasOwnProperty","call","generateRandomKey","prefix","userAgent","window","navigator","replace","split","mid","i","Math","round","random","length","Date","getTime","replaceHtml","temp","dataarry","s1","s2","s"],"mappings":";;;;;;;AAAAA,OAAO,WACH,aA+DA,SAASC,EAASC,GACd,OAAQC,EAAMD,KAAoB,iBAANA,GAA+B,mBAANA,IAA2B,OAANA,EAS9E,SAASC,EAAMC,GACX,OAAIA,aAAeC,IA2BvB,OACIF,MAAAA,EACAF,SAAAA,EACAK,SAjFJ,SAASA,EAASF,GACd,IAAKH,EAASG,KAASD,EAAMC,GACzB,OAAOA,EAEX,IAAIG,EACJ,GAAIJ,EAAMC,GAAM,CACZG,EAAW,IAAIF,IACf,IAAK,IAAIG,KAAOJ,EAAIK,OAAQ,CACxB,IAAIC,EAAQN,EAAIO,IAAIH,GACpB,GAAIL,EAAMO,IAAUT,EAASS,IAAUE,MAAMC,QAAQT,GAAM,CACvD,IAAIU,EAAUR,EAASI,GACvBH,EAASQ,IAAIP,EAAKM,QAElBP,EAASQ,IAAIP,EAAKE,SAGvB,GAAmB,mBAARN,EACdG,EAAWH,OAGX,GADAG,EAAWK,MAAMC,QAAQT,SACrBA,aAAeY,YACfT,EAAWH,EAAIa,WAAU,QAEzB,IAAK,IAAIT,KAAOJ,EAERc,OAAOC,UAAUC,eAAeC,KAAKjB,EAAKI,KAC1CD,EAASC,GAAOL,EAAMC,EAAII,KAASP,EAASG,EAAII,IAAQF,EAASF,EAAII,IAAQJ,EAAII,IAKjG,OAAOD,GAmDPe,kBArGJ,SAA2BC,GACT,MAAVA,IACAA,EAAS,SAIb,IAFA,IAAIC,EAAYC,OAAOC,UAAUF,UAAUG,QAAQ,gBAAiB,IAAIC,MAAM,IAC1EC,EAAM,GACDC,EAAI,EAAGA,EAAI,GAAIA,IACpBD,GAAOL,EAAUO,KAAKC,MAAMD,KAAKE,UAAYT,EAAUU,OAAS,KAGpE,OAAOX,EAAS,IAAMM,EAAM,KADjB,IAAIM,MAAOC,WA6FtBC,YAvBJ,SAAqBC,EAAMC,GACvB,OAAOD,EAAKX,QAAQ,iBAAkB,SAAUa,EAAIC,GAChD,IAAIC,EAAIH,EAASE,GACjB,YAAgB,IAALC,EACAA,EAEAF","file":"../../utils/chartUtil.js","sourcesContent":["define(function () {\n    'use strict';\n    /**\n * 生成随机图表id\n */\n    function generateRandomKey(prefix) {\n        if (prefix == null) {\n            prefix = 'chart';\n        }\n        var userAgent = window.navigator.userAgent.replace(/[^a-zA-Z0-9]/g, '').split('');\n        var mid = '';\n        for (var i = 0; i < 12; i++) {\n            mid += userAgent[Math.round(Math.random() * (userAgent.length - 1))];\n        }\n        var time = new Date().getTime();\n        return prefix + '_' + mid + '_' + time;\n    }    /**\n * 深度克隆数据,包括对象，数组，map\n * @param {*} obj 对象，数组，map\n */\n    /**\n * 深度克隆数据,包括对象，数组，map\n * @param {*} obj 对象，数组，map\n */\n    function deepCopy(obj) {\n        if (!isObject(obj) && !isMap(obj)) {\n            return obj;\n        }\n        let cloneObj;\n        if (isMap(obj)) {\n            cloneObj = new Map();\n            for (let key of obj.keys()) {\n                let value = obj.get(key);\n                if (isMap(value) || isObject(value) || Array.isArray(obj)) {\n                    let copyVal = deepCopy(value);\n                    cloneObj.set(key, copyVal);\n                } else {\n                    cloneObj.set(key, value);\n                }\n            }\n        } else if (typeof obj === 'function') {\n            cloneObj = obj;\n        } else {\n            cloneObj = Array.isArray(obj) ? [] : {};\n            if (obj instanceof HTMLElement) {\n                cloneObj = obj.cloneNode(true);\n            } else {\n                for (let key in obj) {\n                    // if (obj.hasOwnProperty(key)) {\n                    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n                        cloneObj[key] = isMap(obj[key]) || isObject(obj[key]) ? deepCopy(obj[key]) : obj[key];\n                    }\n                }\n            }\n        }\n        return cloneObj;\n    }    /**\n * 判断参数是否是Object类型\n * @param {*} o \n */\n    /**\n * 判断参数是否是Object类型\n * @param {*} o \n */\n    function isObject(o) {\n        return !isMap(o) && (typeof o === 'object' || typeof o === 'function') && o !== null;\n    }    /**\n * 判断参数是否是Map类型\n * @param {*} obj \n */\n    /**\n * 判断参数是否是Map类型\n * @param {*} obj \n */\n    function isMap(obj) {\n        if (obj instanceof Map) {\n            return true;\n        } else {\n            return false;\n        }\n    }    // 替换temp中的${xxx}为指定内容 ,temp:字符串，这里指html代码，dataarry：一个对象{\"xxx\":\"替换的内容\"}\n         // 例：luckysheet.replaceHtml(\"${image}\",{\"image\":\"abc\",\"jskdjslf\":\"abc\"})   ==>  abc\n    // 替换temp中的${xxx}为指定内容 ,temp:字符串，这里指html代码，dataarry：一个对象{\"xxx\":\"替换的内容\"}\n    // 例：luckysheet.replaceHtml(\"${image}\",{\"image\":\"abc\",\"jskdjslf\":\"abc\"})   ==>  abc\n    function replaceHtml(temp, dataarry) {\n        return temp.replace(/\\$\\{([\\w]+)\\}/g, function (s1, s2) {\n            var s = dataarry[s2];\n            if (typeof s != 'undefined') {\n                return s;\n            } else {\n                return s1;\n            }\n        });\n    }\n    function hasChinaword(s) {\n        var patrn = /[\\u4E00-\\u9FA5]|[\\uFE30-\\uFFA0]/gi;\n        if (!patrn.exec(s)) {\n            return false;\n        } else {\n            return true;\n        }\n    }\n    return {\n        isMap,\n        isObject,\n        deepCopy,\n        generateRandomKey,\n        replaceHtml\n    };\n});"]}