{"version":3,"sources":["utils/util.js"],"names":["define","m_constant","Store","locale","numeral","columeHeader_word","columeHeader_word_index","luckysheetdefaultFont","convertCssToStyleList","cssText","length","cssTextArray","split","_locale","locale_fontarray","fontarray","locale_fontjson","fontjson","styleList","ff","fc","fs","cl","un","bl","it","forEach","s","key","textTrim","toLowerCase","substr","indexOf","value","parseInt","x","replace","isdatetime","toString","str","test","year","RegExp","$1","month","$2","day","$3","Date","getDate","checkDateTime","isdatatypemulti","type","isNaN","parseFloat","hasChinaword","isdatatype","isRealNum","val","exec","getObjType","obj","[object Boolean]","[object Number]","[object String]","[object Function]","[object Array]","[object Date]","[object RegExp]","[object Undefined]","[object Null]","[object Object]","Object","prototype","call","createABCdim","count","chwl","ret","c","i","b","n","bq","push","index","bb","w","aa","bqa","callback","isJsonString","JSON","parse","e","common_extend","jsonbject1","jsonbject2","resultJsonObject","attr","undefined","replaceHtml","temp","dataarry","s1","s2","getNowDateTime","format","now","getFullYear","getMonth","date","hour","getDay","getHours","minu","getMinutes","sec","getSeconds","time","hexToRgb","hex","color","rgb","tmp","charAt","join","Number","rgbTohex","slice","ABCatNum","a","NaN","al","numout","charCodeAt","Math","pow","chatatABC","orda","len","String","fromCharCode","floor","toUpperCase","ceateABC","wordlen","relist","concat","getByteLen","subLen","match","substring","ArrayUnique","dataArr","result","item","luckysheetfontformat","font","ceil","defaultFontSize","fontfamily","document","fonts","check","showrightclickmenu","$menu","y","winH","$","window","height","winW","width","menuW","menuH","top","left","css","show","luckysheetactiveCell","fullscreenmode","setTimeout","focus","select","numFormat","num","Infinity","floatlen","ismustfloat","numfloatlen","lens","mouseclickposition","p","bottom","$$","selector","context","elements","querySelectorAll","Array","seriesLoadScripts","scripts","options","HEAD","getElementsByTagName","documentElement","last","recursiveLoad","createElement","setAttribute","onload","onreadystatechange","this","parentNode","removeChild","appendChild","parallelLoadScripts","loaded","loadLinks","urls","url","doc","link","heads","loadLink","luckysheetContainerFocus","container","transformRangeToAbsolute","txt1","txtArray","txtSplit","sheetName","rangeTxt","rangeTxtArray","rangeRet","t","row","col","rangeTT","openSelfModel","id","isshowMask","$t","find","end","myh","outerHeight","myw","outerWidth","winw","winh","scrollLeft","scrollTop","createProxy","data","k","hasOwnProperty","Proxy","set","target","property","receiver","Reflect","defineProperty","enumerable","configurable","get","newValue","console","log","defineBasicReactive","info","arrayRemoveItem","array","some","curr","arr","splice","isRealNull","convertSpanToShareString","$dom","preStyleList","styles","preStyleListString","span","style","curStyleListString","stringify","v","innerText"],"mappings":"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","file":"../../utils/util.js","sourcesContent":["define([\n    '../widgets/constant',\n    ///'../controllers/menuButton',\n    '../store',\n    '../locale/locale',\n    '../vendors/numeral'\n], function (\n    m_constant, \n    ///menuButton, \n    Store, \n    locale, \n    numeral\n) {\n    'use strict';\n\n    const {columeHeader_word, columeHeader_word_index, luckysheetdefaultFont} = m_constant;\n\n    // from ../controllers/inlineString\n\n    function convertCssToStyleList(cssText) {\n        if (cssText == null || cssText.length == 0) {\n            return {};\n        }\n        let cssTextArray = cssText.split(';');\n        const _locale = locale();\n        const locale_fontarray = _locale.fontarray;\n        const locale_fontjson = _locale.fontjson;\n        let styleList = {\n            'ff': locale_fontarray[0],\n            //font family\n            'fc': '#000000',\n            //font color\n            'fs': 10,\n            //font size\n            'cl': 0,\n            //strike\n            'un': 0,\n            //underline\n            'bl': 0,\n            //blod\n            'it': 0\n        };\n        //italic\n        cssTextArray.forEach(s => {\n            s = s.toLowerCase();\n            let key = textTrim(s.substr(0, s.indexOf(':')));\n            let value = textTrim(s.substr(s.indexOf(':') + 1));\n            if (key == 'font-weight') {\n                if (value == 'bold') {\n                    styleList['bl'] = 1;\n                } else {\n                    styleList['bl'] = 0;\n                }\n            }\n            if (key == 'font-style') {\n                if (value == 'italic') {\n                    styleList['it'] = 1;\n                } else {\n                    styleList['it'] = 0;\n                }\n            }\n            if (key == 'font-family') {\n                let ff = locale_fontjson[value];\n                if (ff == null) {\n                    styleList['ff'] = value;\n                } else {\n                    styleList['ff'] = ff;\n                }\n            }\n            if (key == 'font-size') {\n                styleList['fs'] = parseInt(value);\n            }\n            if (key == 'color') {\n                styleList['fc'] = value;\n            }\n            if (key == 'text-decoration') {\n                styleList['cl'] = 1;\n            }\n            if (key == 'border-bottom') {\n                styleList['un'] = 1;\n            }\n            if (key == 'lucky-strike') {\n                styleList['cl'] = value;\n            }\n            if (key == 'lucky-underline') {\n                styleList['un'] = value;\n            }\n        });\n        return styleList;\n    }\n\n    function convertSpanToShareString($dom) {\n        let styles = [], preStyleList, preStyleListString = null;\n        for (let i = 0; i < $dom.length; i++) {\n            let span = $dom.get(i);\n            let styleList = convertCssToStyleList(span.style.cssText);\n            let curStyleListString = JSON.stringify(styleList);    // let v = span.innerHTML;\n            // let v = span.innerHTML;\n            let v = span.innerText;\n            v = v.replace(/\\n/g, '\\r\\n');\n            if (curStyleListString == preStyleListString) {\n                preStyleList.v += v;\n            } else {\n                styleList.v = v;\n                styles.push(styleList);\n                preStyleListString = curStyleListString;\n                preStyleList = styleList;\n            }\n        }\n        return styles;\n    }\n\n    // from ../global/getdata\n    function textTrim(x) {\n        if (x == null || x.length == 0) {\n            return x;\n        }\n        return x.replace(/^\\s+|\\s+$/gm, '');\n    }\n\n    function isdatetime(s) {\n        if (s == null || s.toString().length < 5) {\n            return false;\n        } else if (checkDateTime(s)) {\n            return true;\n        } else {\n            return false;\n        }\n        function checkDateTime(str) {\n            var reg1 = /^(\\d{4})-(\\d{1,2})-(\\d{1,2})(\\s(\\d{1,2}):(\\d{1,2})(:(\\d{1,2}))?)?$/;\n            var reg2 = /^(\\d{4})\\/(\\d{1,2})\\/(\\d{1,2})(\\s(\\d{1,2}):(\\d{1,2})(:(\\d{1,2}))?)?$/;\n            if (!reg1.test(str) && !reg2.test(str)) {\n                return false;\n            }\n            var year = RegExp.$1, month = RegExp.$2, day = RegExp.$3;\n            if (year < 1900) {\n                return false;\n            }\n            if (month > 12) {\n                return false;\n            }\n            if (day > 31) {\n                return false;\n            }\n            if (month == 2) {\n                if (new Date(year, 1, 29).getDate() == 29 && day > 29) {\n                    return false;\n                } else if (new Date(year, 1, 29).getDate() != 29 && day > 28) {\n                    return false;\n                }\n            }\n            return true;\n        }\n    }\n\n    function isdatatypemulti(s) {\n        let type = {};\n        if (isdatetime(s)) {\n            type['date'] = true;\n        }\n        if (!isNaN(parseFloat(s)) && !hasChinaword(s)) {\n            type['num'] = true;\n        }\n        return type;\n    }\n    function isdatatype(s) {\n        let type = 'string';\n        if (isdatetime(s)) {\n            type = 'date';\n        } else if (!isNaN(parseFloat(s)) && !hasChinaword(s)) {\n            type = 'num';\n        }\n        return type;\n    }\n\n    //数组范围有其它值\n    //是否是空值\n    function isRealNull(val) {\n        if (val == null || val.toString().replace(/\\s/g, '') == '') {\n            return true;\n        } else {\n            return false;\n        }\n    }    //是否是纯数字\n    //是否是纯数字\n    function isRealNum(val) {\n        if (val == null || val.toString().replace(/\\s/g, '') === '') {\n            return false;\n        }\n        if (typeof val == 'boolean') {\n            return false;\n        }\n        if (!isNaN(val)) {\n            return true;\n        } else {\n            return false;\n        }\n    }    //是否是错误类型\n    //是否是错误类型\n\n    //是否有中文\n    function hasChinaword(s) {\n        let patrn = /[\\u4E00-\\u9FA5]|[\\uFE30-\\uFFA0]/gi;\n        if (!patrn.exec(s)) {\n            return false;\n        } else {\n            return true;\n        }\n    }    \n\n    // import method from '../widgets/method';\n    /**\n * Common tool methods\n */\n    /**\n * Determine whether a string is in standard JSON format\n * @param {String} str \n */\n    function isJsonString(str) {\n        try {\n            if (typeof JSON.parse(str) == 'object') {\n                return true;\n            }\n        } catch (e) {\n        }\n        return false;\n    }    /**\n * extend two objects\n * @param {Object } jsonbject1\n * @param {Object } jsonbject2 \n */\n    /**\n * extend two objects\n * @param {Object } jsonbject1\n * @param {Object } jsonbject2 \n */\n    function common_extend(jsonbject1, jsonbject2) {\n        let resultJsonObject = {};\n        for (let attr in jsonbject1) {\n            resultJsonObject[attr] = jsonbject1[attr];\n        }\n        for (let attr in jsonbject2) {\n            // undefined is equivalent to no setting\n            if (jsonbject2[attr] == undefined) {\n                continue;\n            }\n            resultJsonObject[attr] = jsonbject2[attr];\n        }\n        return resultJsonObject;\n    }\n    ;    // 替换temp中的${xxx}为指定内容 ,temp:字符串，这里指html代码，dataarry：一个对象{\"xxx\":\"替换的内容\"}\n         // 例：luckysheet.replaceHtml(\"${image}\",{\"image\":\"abc\",\"jskdjslf\":\"abc\"})   ==>  abc\n    // 替换temp中的${xxx}为指定内容 ,temp:字符串，这里指html代码，dataarry：一个对象{\"xxx\":\"替换的内容\"}\n    // 例：luckysheet.replaceHtml(\"${image}\",{\"image\":\"abc\",\"jskdjslf\":\"abc\"})   ==>  abc\n    function replaceHtml(temp, dataarry) {\n        return temp.replace(/\\$\\{([\\w]+)\\}/g, function (s1, s2) {\n            let s = dataarry[s2];\n            if (typeof s != 'undefined') {\n                return s;\n            } else {\n                return s1;\n            }\n        });\n    }\n    ;    //获取数据类型\n    //获取数据类型\n    function getObjType(obj) {\n        let toString = Object.prototype.toString;\n        let map = {\n            '[object Boolean]': 'boolean',\n            '[object Number]': 'number',\n            '[object String]': 'string',\n            '[object Function]': 'function',\n            '[object Array]': 'array',\n            '[object Date]': 'date',\n            '[object RegExp]': 'regExp',\n            '[object Undefined]': 'undefined',\n            '[object Null]': 'null',\n            '[object Object]': 'object'\n        };    // if(obj instanceof Element){\n              //     return 'element';\n              // }\n        // if(obj instanceof Element){\n        //     return 'element';\n        // }\n        return map[toString.call(obj)];\n    }   \n     //获取当前日期时间\n    //获取当前日期时间\n    function getNowDateTime(format) {\n        let now = new Date();\n        let year = now.getFullYear();    //得到年份\n        //得到年份\n        let month = now.getMonth();    //得到月份\n        //得到月份\n        let date = now.getDate();    //得到日期\n        //得到日期\n        let day = now.getDay();    //得到周几\n        //得到周几\n        let hour = now.getHours();    //得到小时\n        //得到小时\n        let minu = now.getMinutes();    //得到分钟\n        //得到分钟\n        let sec = now.getSeconds();    //得到秒\n        //得到秒\n        month = month + 1;\n        if (month < 10)\n            month = '0' + month;\n        if (date < 10)\n            date = '0' + date;\n        if (hour < 10)\n            hour = '0' + hour;\n        if (minu < 10)\n            minu = '0' + minu;\n        if (sec < 10)\n            sec = '0' + sec;\n        let time = '';    //日期\n        //日期\n        if (format == 1) {\n            time = year + '-' + month + '-' + date;\n        }    //日期时间\n        else //日期时间\n        if (format == 2) {\n            time = year + '-' + month + '-' + date + ' ' + hour + ':' + minu + ':' + sec;\n        }\n        return time;\n    }    //颜色 16进制转rgb\n    //颜色 16进制转rgb\n    function hexToRgb(hex) {\n        let color = [], rgb = [];\n        hex = hex.replace(/#/, '');\n        if (hex.length == 3) {\n            // 处理 \"#abc\" 成 \"#aabbcc\"\n            let tmp = [];\n            for (let i = 0; i < 3; i++) {\n                tmp.push(hex.charAt(i) + hex.charAt(i));\n            }\n            hex = tmp.join('');\n        }\n        for (let i = 0; i < 3; i++) {\n            color[i] = '0x' + hex.substr(i + 2, 2);\n            rgb.push(parseInt(Number(color[i])));\n        }\n        return 'rgb(' + rgb.join(',') + ')';\n    }\n    ;    //颜色 rgb转16进制\n    //颜色 rgb转16进制\n    function rgbTohex(color) {\n        let rgb;\n        if (color.indexOf('rgba') > -1) {\n            rgb = color.replace('rgba(', '').replace(')', '').split(',');\n        } else {\n            rgb = color.replace('rgb(', '').replace(')', '').split(',');\n        }\n        let r = parseInt(rgb[0]);\n        let g = parseInt(rgb[1]);\n        let b = parseInt(rgb[2]);\n        let hex = '#' + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);\n        return hex;\n    }\n    ;    //列下标  字母转数字\n    //列下标  字母转数字\n    function ABCatNum(a) {\n        // abc = abc.toUpperCase();\n        // let abc_len = abc.length;\n        // if (abc_len == 0) {\n        //     return NaN;\n        // }\n        // let abc_array = abc.split(\"\");\n        // let wordlen = columeHeader_word.length;\n        // let ret = 0;\n        // for (let i = abc_len - 1; i >= 0; i--) {\n        //     if (i == abc_len - 1) {\n        //         ret += columeHeader_word_index[abc_array[i]];\n        //     }\n        //     else {\n        //         ret += Math.pow(wordlen, abc_len - i - 1) * (columeHeader_word_index[abc_array[i]] + 1);\n        //     }\n        // }\n        // return ret;\n        if (a == null || a.length == 0) {\n            return NaN;\n        }\n        var str = a.toLowerCase().split('');\n        var num = 0;\n        var al = str.length;\n        var getCharNumber = function (charx) {\n            return charx.charCodeAt() - 96;\n        };\n        var numout = 0;\n        var charnum = 0;\n        for (var i = 0; i < al; i++) {\n            charnum = getCharNumber(str[i]);\n            numout += charnum * Math.pow(26, al - i - 1);\n        }\n        ;    // console.log(a, numout-1);\n        // console.log(a, numout-1);\n        if (numout == 0) {\n            return NaN;\n        }\n        return numout - 1;\n    }\n    ;    //列下标  数字转字母\n    //列下标  数字转字母\n    function chatatABC(n) {\n        // let wordlen = columeHeader_word.length;\n        // if (index < wordlen) {\n        //     return columeHeader_word[index];\n        // }\n        // else {\n        //     let last = 0, pre = 0, ret = \"\";\n        //     let i = 1, n = 0;\n        //     while (index >= (wordlen / (wordlen - 1)) * (Math.pow(wordlen, i++) - 1)) {\n        //         n = i;\n        //     }\n        //     let index_ab = index - (wordlen / (wordlen - 1)) * (Math.pow(wordlen, n - 1) - 1);//970\n        //     last = index_ab + 1;\n        //     for (let x = n; x > 0; x--) {\n        //         let last1 = last, x1 = x;//-702=268, 3\n        //         if (x == 1) {\n        //             last1 = last1 % wordlen;\n        //             if (last1 == 0) {\n        //                 last1 = 26;\n        //             }\n        //             return ret + columeHeader_word[last1 - 1];\n        //         }\n        //         last1 = Math.ceil(last1 / Math.pow(wordlen, x - 1));\n        //         //last1 = last1 % wordlen;\n        //         ret += columeHeader_word[last1 - 1];\n        //         if (x > 1) {\n        //             last = last - (last1 - 1) * wordlen;\n        //         }\n        //     }\n        // }\n        var orda = 'a'.charCodeAt(0);\n        var ordz = 'z'.charCodeAt(0);\n        var len = ordz - orda + 1;\n        var s = '';\n        while (n >= 0) {\n            s = String.fromCharCode(n % len + orda) + s;\n            n = Math.floor(n / len) - 1;\n        }\n        return s.toUpperCase();\n    }\n    ;\n    function ceateABC(index) {\n        let wordlen = columeHeader_word.length;\n        if (index < wordlen) {\n            return columeHeader_word;\n        } else {\n            let relist = [];\n            let i = 2, n = 0;\n            while (index < wordlen / (wordlen - 1) * (Math.pow(wordlen, i) - 1)) {\n                n = i;\n                i++;\n            }\n            for (let x = 0; x < n; x++) {\n                if (x == 0) {\n                    relist = relist.concat(columeHeader_word);\n                } else {\n                    relist = relist.concat(createABCdim(x), index);\n                }\n            }\n        }\n    }\n    ;\n    function createABCdim(x, count) {\n        let chwl = columeHeader_word.length;\n        if (x == 1) {\n            let ret = [];\n            let c = 0, con = true;\n            for (let i = 0; i < chwl; i++) {\n                let b = columeHeader_word[i];\n                for (let n = 0; n < chwl; n++) {\n                    let bq = b + columeHeader_word[n];\n                    ret.push(bq);\n                    c++;\n                    if (c > index) {\n                        return ret;\n                    }\n                }\n            }\n        } else if (x == 2) {\n            let ret = [];\n            let c = 0, con = true;\n            for (let i = 0; i < chwl; i++) {\n                let bb = columeHeader_word[i];\n                for (let w = 0; w < chwl; w++) {\n                    let aa = columeHeader_word[w];\n                    for (let n = 0; n < chwl; n++) {\n                        let bqa = bb + aa + columeHeader_word[n];\n                        ret.push(bqa);\n                        c++;\n                        if (c > index) {\n                            return ret;\n                        }\n                    }\n                }\n            }\n        }\n    }\n    ;    /**\n * 计算字符串字节长度\n * @param {*} val 字符串\n * @param {*} subLen 要截取的字符串长度\n */\n    /**\n * 计算字符串字节长度\n * @param {*} val 字符串\n * @param {*} subLen 要截取的字符串长度\n */\n    function getByteLen(val, subLen) {\n        if (subLen === 0) {\n            return '';\n        }\n        if (val == null) {\n            return 0;\n        }\n        let len = 0;\n        for (let i = 0; i < val.length; i++) {\n            let a = val.charAt(i);\n            if (a.match(/[^\\x00-\\xff]/ig) != null) {\n                len += 2;\n            } else {\n                len += 1;\n            }\n            if (isRealNum(subLen) && len === ~~subLen) {\n                return val.substring(0, i);\n            }\n        }\n        return len;\n    }\n    ;    //数组去重\n    //数组去重\n    function ArrayUnique(dataArr) {\n        let result = [];\n        let obj = {};\n        if (dataArr.length > 0) {\n            for (let i = 0; i < dataArr.length; i++) {\n                let item = dataArr[i];\n                if (!obj[item]) {\n                    result.push(item);\n                    obj[item] = 1;\n                }\n            }\n        }\n        return result;\n    }    //获取字体配置\n    //获取字体配置\n    function luckysheetfontformat(format) {\n        let fontarray = locale().fontarray;\n        if (getObjType(format) == 'object') {\n            let font = '';    //font-style\n            //font-style\n            if (format.it == '0' || format.it == null) {\n                font += 'normal ';\n            } else {\n                font += 'italic ';\n            }    //font-variant\n            //font-variant\n            font += 'normal ';    //font-weight\n            //font-weight\n            if (format.bl == '0' || format.bl == null) {\n                font += 'normal ';\n            } else {\n                font += 'bold ';\n            }    //font-size/line-height\n            //font-size/line-height\n            if (!format.fs) {\n                font += Store.defaultFontSize + 'pt ';\n            } else {\n                font += Math.ceil(format.fs) + 'pt ';\n            }\n            if (!format.ff) {\n                font += fontarray[0] + ', \"Helvetica Neue\", Helvetica, Arial, \"PingFang SC\", \"Hiragino Sans GB\", \"Heiti SC\", \"Microsoft YaHei\", \"WenQuanYi Micro Hei\", sans-serif';\n            } else {\n                let fontfamily = null;\n                let fontjson = locale().fontjson;\n                if (isdatatypemulti(format.ff)['num']) {\n                    fontfamily = fontarray[parseInt(format.ff)];\n                } else {\n                    // fontfamily = fontarray[fontjson[format.ff]];\n                    fontfamily = format.ff;\n                    fontfamily = fontfamily.replace(/\"/g, '').replace(/'/g, '');\n                    if (fontfamily.indexOf(' ') > -1) {\n                        fontfamily = '\"' + fontfamily + '\"';\n                    }\n                    if (fontfamily != null && document.fonts && !document.fonts.check('12px ' + fontfamily)) {\n                        ////menuButton.addFontTolist(fontfamily); //TODO : lwf\n                    }\n                }\n                if (fontfamily == null) {\n                    fontfamily = fontarray[0];\n                }\n                font += fontfamily + ', \"Helvetica Neue\", Helvetica, Arial, \"PingFang SC\", \"Hiragino Sans GB\", \"Heiti SC\", \"Microsoft YaHei\", \"WenQuanYi Micro Hei\", sans-serif';\n            }\n            return font;\n        } else {\n            return luckysheetdefaultFont();\n        }\n    }    //右键菜单\n    //右键菜单\n    function showrightclickmenu($menu, x, y) {\n        let winH = $(window).height(), winW = $(window).width();\n        let menuW = $menu.width(), menuH = $menu.height();\n        let top = y, left = x;\n        if (x + menuW > winW) {\n            left = x - menuW;\n        }\n        if (y + menuH > winH) {\n            top = y - menuH;\n        }\n        if (top < 0) {\n            top = 0;\n        }\n        $menu.css({\n            'top': top,\n            'left': left\n        }).show();\n    }    //单元格编辑聚焦\n    //单元格编辑聚焦\n    function luckysheetactiveCell() {\n        if (!!Store.fullscreenmode) {\n            setTimeout(function () {\n                $('#luckysheet-rich-text-editor').focus().select();\n            }, 50);\n        }\n    }    //单元格编辑聚焦\n    //单元格编辑聚焦\n    function luckysheetContainerFocus() {\n        // $(\"#\" + Store.container).focus({ \n        //     preventScroll: true \n        // });\n        // fix jquery error: Uncaught TypeError: ((n.event.special[g.origType] || {}).handle || g.handler).apply is not a function\n        $('#' + Store.container).attr('tabindex', 0).focus();\n    }    //数字格式\n    //数字格式\n    function numFormat(num, type) {\n        if (num == null || isNaN(parseFloat(num)) || hasChinaword(num) || num == -Infinity || num == Infinity) {\n            return null;\n        }\n        let floatlen = 6, ismustfloat = false;\n        if (type == null || type == 'auto') {\n            if (num < 1) {\n                floatlen = 6;\n            } else {\n                floatlen = 1;\n            }\n        } else {\n            if (isdatatype(type) == 'num') {\n                floatlen = parseInt(type);\n                ismustfloat = true;\n            } else {\n                floatlen = 6;\n            }\n        }\n        let format = '', value = null;\n        for (let i = 0; i < floatlen; i++) {\n            format += '0';\n        }\n        if (!ismustfloat) {\n            format = '[' + format + ']';\n        }\n        if (num >= 1e+21) {\n            value = parseFloat(numeral(num).value());\n        } else {\n            value = parseFloat(numeral(num).format('0.' + format));\n        }\n        return value;\n    }\n    function numfloatlen(n) {\n        if (n != null && !isNaN(parseFloat(n)) && !hasChinaword(n)) {\n            let value = numeral(n).value();\n            let lens = value.toString().split('.');\n            if (lens.length == 1) {\n                lens = 0;\n            } else {\n                lens = lens[1].length;\n            }\n            return lens;\n        } else {\n            return null;\n        }\n    }    //二级菜单显示位置\n    //二级菜单显示位置\n    function mouseclickposition($menu, x, y, p) {\n        let winH = $(window).height(), winW = $(window).width();\n        let menuW = $menu.width(), menuH = $menu.height();\n        let top = y, left = x;\n        if (p == null) {\n            p = 'lefttop';\n        }\n        if (p == 'lefttop') {\n            $menu.css({\n                'top': y,\n                'left': x\n            }).show();\n        } else if (p == 'righttop') {\n            $menu.css({\n                'top': y,\n                'left': x - menuW\n            }).show();\n        } else if (p == 'leftbottom') {\n            $menu.css({\n                'bottom': winH - y - 12,\n                'left': x\n            }).show();\n        } else if (p == 'rightbottom') {\n            $menu.css({\n                'bottom': winH - y - 12,\n                'left': x - menuW\n            }).show();\n        }\n    }    /**\n * 元素选择器\n * @param {String}  selector css选择器\n * @param {String}  context  指定父级DOM\n */\n    /**\n * 元素选择器\n * @param {String}  selector css选择器\n * @param {String}  context  指定父级DOM\n */\n    function $$(selector, context) {\n        context = context || document;\n        var elements = context.querySelectorAll(selector);\n        return elements.length == 1 ? Array.prototype.slice.call(elements)[0] : Array.prototype.slice.call(elements);\n    }    /** \n * 串行加载指定的脚本\n * 串行加载[异步]逐个加载，每个加载完成后加载下一个\n * 全部加载完成后执行回调\n * @param {Array|String}  scripts 指定要加载的脚本\n * @param {Object} options 属性设置\n * @param {Function} callback 成功后回调的函数\n * @return {Array} 所有生成的脚本元素对象数组\n */\n    /** \n * 串行加载指定的脚本\n * 串行加载[异步]逐个加载，每个加载完成后加载下一个\n * 全部加载完成后执行回调\n * @param {Array|String}  scripts 指定要加载的脚本\n * @param {Object} options 属性设置\n * @param {Function} callback 成功后回调的函数\n * @return {Array} 所有生成的脚本元素对象数组\n */\n    function seriesLoadScripts(scripts, options, callback) {\n        if (typeof scripts !== 'object') {\n            var scripts = [scripts];\n        }\n        var HEAD = document.getElementsByTagName('head')[0] || document.documentElement;\n        var s = [];\n        var last = scripts.length - 1;    //递归\n        //递归\n        var recursiveLoad = function (i) {\n            s[i] = document.createElement('script');\n            s[i].setAttribute('type', 'text/javascript');    // Attach handlers for all browsers\n                                                             // 异步\n            // Attach handlers for all browsers\n            // 异步\n            s[i].onload = s[i].onreadystatechange = function () {\n                if (!/*@cc_on!@*/\n                    0 || this.readyState === 'loaded' || this.readyState === 'complete') {\n                    this.onload = this.onreadystatechange = null;\n                    this.parentNode.removeChild(this);\n                    if (i !== last) {\n                        recursiveLoad(i + 1);\n                    } else if (typeof callback === 'function') {\n                        callback();\n                    }\n                    ;\n                }\n            };    // 同步\n            // 同步\n            s[i].setAttribute('src', scripts[i]);    // 设置属性\n            // 设置属性\n            if (typeof options === 'object') {\n                for (var attr in options) {\n                    s[i].setAttribute(attr, options[attr]);\n                }\n            }\n            HEAD.appendChild(s[i]);\n        };\n        recursiveLoad(0);\n    }    /**\n * 并行加载指定的脚本\n * 并行加载[同步]同时加载，不管上个是否加载完成，直接加载全部\n * 全部加载完成后执行回调\n * @param {Array|String}  scripts 指定要加载的脚本\n * @param {Object} options 属性设置\n * @param {Function} callback 成功后回调的函数\n * @return {Array} 所有生成的脚本元素对象数组\n */\n    /**\n * 并行加载指定的脚本\n * 并行加载[同步]同时加载，不管上个是否加载完成，直接加载全部\n * 全部加载完成后执行回调\n * @param {Array|String}  scripts 指定要加载的脚本\n * @param {Object} options 属性设置\n * @param {Function} callback 成功后回调的函数\n * @return {Array} 所有生成的脚本元素对象数组\n */\n    function parallelLoadScripts(scripts, options, callback) {\n        if (typeof scripts !== 'object') {\n            var scripts = [scripts];\n        }\n        var HEAD = document.getElementsByTagName('head')[0] || document.documentElement;\n        var s = [];\n        var loaded = 0;\n        for (var i = 0; i < scripts.length; i++) {\n            s[i] = document.createElement('script');\n            s[i].setAttribute('type', 'text/javascript');    // Attach handlers for all browsers\n                                                             // 异步\n            // Attach handlers for all browsers\n            // 异步\n            s[i].onload = s[i].onreadystatechange = function () {\n                if (!/*@cc_on!@*/\n                    0 || this.readyState === 'loaded' || this.readyState === 'complete') {\n                    loaded++;\n                    this.onload = this.onreadystatechange = null;\n                    this.parentNode.removeChild(this);\n                    if (loaded === scripts.length && typeof callback === 'function')\n                        callback();\n                }\n            };    // 同步\n            // 同步\n            s[i].setAttribute('src', scripts[i]);    // 设置属性\n            // 设置属性\n            if (typeof options === 'object') {\n                for (var attr in options) {\n                    s[i].setAttribute(attr, options[attr]);\n                }\n            }\n            HEAD.appendChild(s[i]);\n        }\n    }    /**\n* 动态添加css\n* @param {String}  url 指定要加载的css地址\n*/\n    /**\n* 动态添加css\n* @param {String}  url 指定要加载的css地址\n*/\n    function loadLink(url) {\n        var doc = document;\n        var link = doc.createElement('link');\n        link.setAttribute('rel', 'stylesheet');\n        link.setAttribute('type', 'text/css');\n        link.setAttribute('href', url);\n        var heads = doc.getElementsByTagName('head');\n        if (heads.length) {\n            heads[0].appendChild(link);\n        } else {\n            doc.documentElement.appendChild(link);\n        }\n    }    /**\n* 动态添加一组css\n* @param {String}  url 指定要加载的css地址\n*/\n    /**\n* 动态添加一组css\n* @param {String}  url 指定要加载的css地址\n*/\n    function loadLinks(urls) {\n        if (typeof urls !== 'object') {\n            urls = [urls];\n        }\n        if (urls.length) {\n            urls.forEach(url => {\n                loadLink(url);\n            });\n        }\n    }\n    function transformRangeToAbsolute(txt1) {\n        if (txt1 == null || txt1.length == 0) {\n            return null;\n        }\n        let txtArray = txt1.split(',');\n        let ret = '';\n        for (let i = 0; i < txtArray.length; i++) {\n            let txt = txtArray[i];\n            let txtSplit = txt.split('!'), sheetName = '', rangeTxt = '';\n            if (txtSplit.length > 1) {\n                sheetName = txtSplit[0];\n                rangeTxt = txtSplit[1];\n            } else {\n                rangeTxt = txtSplit[0];\n            }\n            let rangeTxtArray = rangeTxt.split(':');\n            let rangeRet = '';\n            for (let a = 0; a < rangeTxtArray.length; a++) {\n                let t = rangeTxtArray[a];\n                let row = t.replace(/[^0-9]/g, '');\n                let col = t.replace(/[^A-Za-z]/g, '');\n                let rangeTT = '';\n                if (col != '') {\n                    rangeTT += '$' + col;\n                }\n                if (row != '') {\n                    rangeTT += '$' + row;\n                }\n                rangeRet += rangeTT + ':';\n            }\n            rangeRet = rangeRet.substr(0, rangeRet.length - 1);\n            ret += sheetName + rangeRet + ',';\n        }\n        return ret.substr(0, ret.length - 1);\n    }\n    function openSelfModel(id, isshowMask = true) {\n        let $t = $('#' + id).find('.luckysheet-modal-dialog-content').css('min-width', 300).end(), myh = $t.outerHeight(), myw = $t.outerWidth();\n        let winw = $(window).width(), winh = $(window).height();\n        let scrollLeft = $(document).scrollLeft(), scrollTop = $(document).scrollTop();\n        $t.css({\n            'left': (winw + scrollLeft - myw) / 2,\n            'top': (winh + scrollTop - myh) / 3\n        }).show();\n        if (isshowMask) {\n            $('#luckysheet-modal-dialog-mask').show();\n        }\n    }    /**\n * 监控对象变更\n * @param {*} data \n */\n         // const createProxy = (data,list=[]) => {\n         //     if (typeof data === 'object' && data.toString() === '[object Object]') {\n         //       for (let k in data) {\n         //         if(list.includes(k)){\n         //             if (typeof data[k] === 'object') {\n         //               defineObjectReactive(data, k, data[k])\n         //             } else {\n         //               defineBasicReactive(data, k, data[k])\n         //             }\n         //         }\n         //       }\n         //     }\n         // }\n    /**\n * 监控对象变更\n * @param {*} data \n */\n    // const createProxy = (data,list=[]) => {\n    //     if (typeof data === 'object' && data.toString() === '[object Object]') {\n    //       for (let k in data) {\n    //         if(list.includes(k)){\n    //             if (typeof data[k] === 'object') {\n    //               defineObjectReactive(data, k, data[k])\n    //             } else {\n    //               defineBasicReactive(data, k, data[k])\n    //             }\n    //         }\n    //       }\n    //     }\n    // }\n    const createProxy = (data, k, callback) => {\n        if (!data.hasOwnProperty(k)) {\n            console.info('No %s in data', k);\n            return;\n        }\n        ;\n        if (getObjType(data) === 'object') {\n            if (getObjType(data[k]) === 'object' || getObjType(data[k]) === 'array') {\n                defineObjectReactive(data, k, data[k], callback);\n            } else {\n                defineBasicReactive(data, k, data[k], callback);\n            }\n        }\n    };\n    function defineObjectReactive(obj, key, value, callback) {\n        // 递归\n        obj[key] = new Proxy(value, {\n            set(target, property, val, receiver) {\n                setTimeout(() => {\n                    callback(target, property, val, receiver);\n                }, 0);\n                return Reflect.set(target, property, val, receiver);\n            }\n        });\n    }\n    function defineBasicReactive(obj, key, value, callback) {\n        Object.defineProperty(obj, key, {\n            enumerable: true,\n            configurable: false,\n            get() {\n                return value;\n            },\n            set(newValue) {\n                if (value === newValue)\n                    return;\n                console.log(`发现 ${ key } 属性 ${ value } -> ${ newValue }`);\n                setTimeout(() => {\n                    callback(value, newValue);\n                }, 0);\n                value = newValue;\n            }\n        });\n    }    /**\n * Remove an item in the specified array\n * @param {array} array Target array \n * @param {string} item What needs to be removed\n */\n    /**\n * Remove an item in the specified array\n * @param {array} array Target array \n * @param {string} item What needs to be removed\n */\n    function arrayRemoveItem(array, item) {\n        array.some((curr, index, arr) => {\n            if (curr === item) {\n                arr.splice(index, 1);\n                return curr === item;\n            }\n        });\n    }\n    return {\n        isJsonString,\n        common_extend,\n        replaceHtml,\n        getObjType,\n        getNowDateTime,\n        hexToRgb,\n        rgbTohex,\n        ABCatNum,\n        chatatABC,\n        ceateABC,\n        createABCdim,\n        getByteLen,\n        ArrayUnique,\n        luckysheetfontformat,\n        showrightclickmenu,\n        luckysheetactiveCell,\n        numFormat,\n        numfloatlen,\n        mouseclickposition,\n        $$,\n        seriesLoadScripts,\n        parallelLoadScripts,\n        loadLinks,\n        luckysheetContainerFocus,\n        transformRangeToAbsolute,\n        openSelfModel,\n        createProxy,\n        arrayRemoveItem,\n\n        //from ../global/validate\n        isRealNull,\n        isRealNum,\n        hasChinaword,\n\n        //from ../global/datecontroll\n        isdatetime,\n        isdatatype,\n        isdatatypemulti,\n\n        //from ../global/getdata\n        textTrim,\n\n        //from ../controllers/inlineString\n        convertCssToStyleList,\n        convertSpanToShareString\n    };\n});"]}