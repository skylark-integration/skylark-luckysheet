{"version":3,"sources":["vendors/jquery.mousewheel.js"],"names":["define","$","nullLowestDeltaTimeout","lowestDelta","toFix","toBind","window","document","documentMode","slice","Array","prototype","event","fixHooks","i","length","mouseHooks","special","mousewheel","version","setup","this","addEventListener","handler","onmousewheel","data","getLineHeight","getPageHeight","teardown","removeEventListener","removeData","elem","$elem","$parent","fn","parseInt","css","height","settings","adjustOldDeltas","normalizeOffset","absDelta","orgEvent","args","call","arguments","delta","deltaX","deltaY","fix","type","detail","wheelDelta","wheelDeltaY","wheelDeltaX","axis","HORIZONTAL_AXIS","deltaMode","lineHeight","pageHeight","Math","max","abs","shouldAdjustOldDeltas","getBoundingClientRect","boundingRect","offsetX","clientX","left","offsetY","clientY","top","deltaFactor","unshift","clearTimeout","setTimeout","nullLowestDelta","dispatch","handle","apply","extend","on","trigger","unmousewheel","off"],"mappings":"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","file":"../../vendors/jquery.mousewheel.js","sourcesContent":["define([\"skylark-jquery\"], function( $ ) {\r\n\r\n/*!\r\n * jQuery Mousewheel 3.1.13\r\n * Copyright OpenJS Foundation and other contributors\r\n */\r\n    var toFix  = [ \"wheel\", \"mousewheel\", \"DOMMouseScroll\", \"MozMousePixelScroll\" ],\r\n        toBind = ( \"onwheel\" in window.document || window.document.documentMode >= 9 ) ?\r\n                    [ \"wheel\" ] : [ \"mousewheel\", \"DomMouseScroll\", \"MozMousePixelScroll\" ],\r\n        slice  = Array.prototype.slice,\r\n        nullLowestDeltaTimeout, lowestDelta;\r\n\r\n    if ( $.event.fixHooks ) {\r\n        for ( var i = toFix.length; i; ) {\r\n            $.event.fixHooks[ toFix[ --i ] ] = $.event.mouseHooks;\r\n        }\r\n    }\r\n\r\n    var special = $.event.special.mousewheel = {\r\n        version: \"3.1.12\",\r\n\r\n        setup: function() {\r\n            if ( this.addEventListener ) {\r\n                for ( var i = toBind.length; i; ) {\r\n                    this.addEventListener( toBind[ --i ], handler, false );\r\n                }\r\n            } else {\r\n                this.onmousewheel = handler;\r\n            }\r\n\r\n            // Store the line height and page height for this particular element\r\n            $.data( this, \"mousewheel-line-height\", special.getLineHeight( this ) );\r\n            $.data( this, \"mousewheel-page-height\", special.getPageHeight( this ) );\r\n        },\r\n\r\n        teardown: function() {\r\n            if ( this.removeEventListener ) {\r\n                for ( var i = toBind.length; i; ) {\r\n                    this.removeEventListener( toBind[ --i ], handler, false );\r\n                }\r\n            } else {\r\n                this.onmousewheel = null;\r\n            }\r\n\r\n            // Clean up the data we added to the element\r\n            $.removeData( this, \"mousewheel-line-height\" );\r\n            $.removeData( this, \"mousewheel-page-height\" );\r\n        },\r\n\r\n        getLineHeight: function( elem ) {\r\n            var $elem = $( elem ),\r\n                $parent = $elem[ \"offsetParent\" in $.fn ? \"offsetParent\" : \"parent\" ]();\r\n            if ( !$parent.length ) {\r\n                $parent = $( \"body\" );\r\n            }\r\n            return parseInt( $parent.css( \"fontSize\" ), 10 ) ||\r\n                parseInt( $elem.css( \"fontSize\" ), 10 ) || 16;\r\n        },\r\n\r\n        getPageHeight: function( elem ) {\r\n            return $( elem ).height();\r\n        },\r\n\r\n        settings: {\r\n            adjustOldDeltas: true, // see shouldAdjustOldDeltas() below\r\n            normalizeOffset: true  // calls getBoundingClientRect for each event\r\n        }\r\n    };\r\n\r\n    $.fn.extend( {\r\n        mousewheel: function( fn ) {\r\n            return fn ? this.on( \"mousewheel\", fn ) : this.trigger( \"mousewheel\" );\r\n        },\r\n\r\n        unmousewheel: function( fn ) {\r\n            return this.off( \"mousewheel\", fn );\r\n        }\r\n    } );\r\n\r\n\r\n    function handler( event ) {\r\n        var orgEvent   = event || window.event,\r\n            args       = slice.call( arguments, 1 ),\r\n            delta      = 0,\r\n            deltaX     = 0,\r\n            deltaY     = 0,\r\n            absDelta   = 0;\r\n        event = $.event.fix( orgEvent );\r\n        event.type = \"mousewheel\";\r\n\r\n        // Old school scrollwheel delta\r\n        if ( \"detail\" in orgEvent ) {\r\n            deltaY = orgEvent.detail * -1;\r\n        }\r\n        if ( \"wheelDelta\" in orgEvent ) {\r\n            deltaY = orgEvent.wheelDelta;\r\n        }\r\n        if ( \"wheelDeltaY\" in orgEvent ) {\r\n            deltaY = orgEvent.wheelDeltaY;\r\n        }\r\n        if ( \"wheelDeltaX\" in orgEvent ) {\r\n            deltaX = orgEvent.wheelDeltaX * -1;\r\n        }\r\n\r\n        // Firefox < 17 horizontal scrolling related to DOMMouseScroll event\r\n        if ( \"axis\" in orgEvent && orgEvent.axis === orgEvent.HORIZONTAL_AXIS ) {\r\n            deltaX = deltaY * -1;\r\n            deltaY = 0;\r\n        }\r\n\r\n        // Set delta to be deltaY or deltaX if deltaY is 0 for backwards compatabilitiy\r\n        delta = deltaY === 0 ? deltaX : deltaY;\r\n\r\n        // New school wheel delta (wheel event)\r\n        if ( \"deltaY\" in orgEvent ) {\r\n            deltaY = orgEvent.deltaY * -1;\r\n            delta  = deltaY;\r\n        }\r\n        if ( \"deltaX\" in orgEvent ) {\r\n            deltaX = orgEvent.deltaX;\r\n            if ( deltaY === 0 ) {\r\n                delta  = deltaX * -1;\r\n            }\r\n        }\r\n\r\n        // No change actually happened, no reason to go any further\r\n        if ( deltaY === 0 && deltaX === 0 ) {\r\n            return;\r\n        }\r\n\r\n        // Need to convert lines and pages to pixels if we aren't already in pixels\r\n        // There are three delta modes:\r\n        //   * deltaMode 0 is by pixels, nothing to do\r\n        //   * deltaMode 1 is by lines\r\n        //   * deltaMode 2 is by pages\r\n        if ( orgEvent.deltaMode === 1 ) {\r\n            var lineHeight = $.data( this, \"mousewheel-line-height\" );\r\n            delta  *= lineHeight;\r\n            deltaY *= lineHeight;\r\n            deltaX *= lineHeight;\r\n        } else if ( orgEvent.deltaMode === 2 ) {\r\n            var pageHeight = $.data( this, \"mousewheel-page-height\" );\r\n            delta  *= pageHeight;\r\n            deltaY *= pageHeight;\r\n            deltaX *= pageHeight;\r\n        }\r\n\r\n        // Store lowest absolute delta to normalize the delta values\r\n        absDelta = Math.max( Math.abs( deltaY ), Math.abs( deltaX ) );\r\n\r\n        if ( !lowestDelta || absDelta < lowestDelta ) {\r\n            lowestDelta = absDelta;\r\n\r\n            // Adjust older deltas if necessary\r\n            if ( shouldAdjustOldDeltas( orgEvent, absDelta ) ) {\r\n                lowestDelta /= 40;\r\n            }\r\n        }\r\n\r\n        // Adjust older deltas if necessary\r\n        if ( shouldAdjustOldDeltas( orgEvent, absDelta ) ) {\r\n\r\n            // Divide all the things by 40!\r\n            delta  /= 40;\r\n            deltaX /= 40;\r\n            deltaY /= 40;\r\n        }\r\n\r\n        // Get a whole, normalized value for the deltas\r\n        delta  = Math[ delta  >= 1 ? \"floor\" : \"ceil\" ]( delta  / lowestDelta );\r\n        deltaX = Math[ deltaX >= 1 ? \"floor\" : \"ceil\" ]( deltaX / lowestDelta );\r\n        deltaY = Math[ deltaY >= 1 ? \"floor\" : \"ceil\" ]( deltaY / lowestDelta );\r\n\r\n        // Normalise offsetX and offsetY properties\r\n        if ( special.settings.normalizeOffset && this.getBoundingClientRect ) {\r\n            var boundingRect = this.getBoundingClientRect();\r\n            event.offsetX = event.clientX - boundingRect.left;\r\n            event.offsetY = event.clientY - boundingRect.top;\r\n        }\r\n\r\n        // Add information to the event object\r\n        event.deltaX = deltaX;\r\n        event.deltaY = deltaY;\r\n        event.deltaFactor = lowestDelta;\r\n\r\n        // Go ahead and set deltaMode to 0 since we converted to pixels\r\n        // Although this is a little odd since we overwrite the deltaX/Y\r\n        // properties with normalized deltas.\r\n        event.deltaMode = 0;\r\n\r\n        // Add event and delta to the front of the arguments\r\n        args.unshift( event, delta, deltaX, deltaY );\r\n\r\n        // Clearout lowestDelta after sometime to better\r\n        // handle multiple device types that give different\r\n        // a different lowestDelta\r\n        // Ex: trackpad = 3 and mouse wheel = 120\r\n        if ( nullLowestDeltaTimeout ) {\r\n            window.clearTimeout( nullLowestDeltaTimeout );\r\n        }\r\n        nullLowestDeltaTimeout = window.setTimeout( nullLowestDelta, 200 );\r\n\r\n        return ( $.event.dispatch || $.event.handle ).apply( this, args );\r\n    }\r\n\r\n    function nullLowestDelta() {\r\n        lowestDelta = null;\r\n    }\r\n\r\n    function shouldAdjustOldDeltas( orgEvent, absDelta ) {\r\n\r\n        // If this is an older event and the delta is divisable by 120,\r\n        // then we are assuming that the browser is treating this as an\r\n        // older mouse wheel event and that we should divide the deltas\r\n        // by 40 to try and get a more usable deltaFactor.\r\n        // Side note, this actually impacts the reported scroll distance\r\n        // in older browsers and can cause scrolling to be slower than native.\r\n        // Turn this off by setting $.event.special.mousewheel.settings.adjustOldDeltas to false.\r\n        return special.settings.adjustOldDeltas && orgEvent.type === \"mousewheel\" &&\r\n            absDelta % 120 === 0;\r\n    }\r\n\r\n});"]}