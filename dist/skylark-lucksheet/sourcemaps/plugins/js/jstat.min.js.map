{"version":3,"sources":["plugins/js/jstat.min.js"],"names":["window","factory","exports","module","define","amd","jStat","this","Math","undefined","concat","Array","prototype","slice","toString","Object","calcRdx","n","m","val","pow","log","LOG10E","isArray","arg","call","isFunction","isNumber","num","_init","arguments","retZero","retOne","retIdent","i","j","fn","args","map","length","seq","apply","toArray","constructor","utils","toVector","arr","_random_fn","random","setRandom","TypeError","extend","obj","rows","cols","dimensions","row","index","rowa","col","submat","arange","forEach","ind","column","cola","a","diag","nrow","res","antidiag","transpose","objArr","push","func","toAlter","ncol","cumreduce","alter","create","zeros","ones","rand","identity","symmetric","size","clear","min","max","cnt","hival","step","current","start","end","rl","_slice","list","copy","rcSlice","colSlice","rowSlice","sliceAssign","A","B","nl","ml","diagonal","diagArray","mat","t","jProto","sort","splice","funcs","passfunc","results","self","setTimeout","split","ascNum","b","clip","sum","sumsqrd","sumsqerr","tmp","mean","sumrow","product","prod","low","high","unique","hash","_arr","meansqerr","geomean","median","arrlen","cumsum","cumprod","diff","diffs","arrLen","rank","distinctNumbers","numberCounts","number","sortedDistinctNumbers","numberRanks","currentRank","count","mode","maxCount","numMaxCount","mode_arr","range","variance","flag","pooledvariance","reduce","samples","deviation","dev","stdev","sqrt","pooledstdev","meandev","abs","meddev","coeffvar","quartiles","round","quantiles","quantilesArray","alphap","betap","p","aleph","k","gamma","sortedArray","quantileVals","floor","percentile","exclusive","realIndex","parseInt","frac","percentileOfScore","score","kind","value","counter","len","strict","histogram","binCnt","first","binWidth","bins","covariance","arr1","arr2","u","v","arr1Len","sq_dev","corrcoeff","spearmancoeff","stanMoment","mu","sigma","skewSum","skewness","kurtosis","fullbool","tmpthis","callbackFunction","argsToPass","curriedFunction","vector","gammaln","x","xx","y","cof","ser","loggam","x0","x2","xp","gl","gl0","PI","gammafn","z","yi","q","fact","xden","xnum","Infinity","sin","gammap","lowRegGamma","an","aln","ap","del","c","d","h","ITMAX","NaN","exp","factorialln","factorial","combination","combinationln","permutation","betafn","betaln","betacf","m2","aa","qab","qap","qam","gammapinv","pp","lna1","afac","a1","gln","erf","ty","isneg","dd","erfc","erfcinv","err","ibetainv","lna","lnb","al","w","b1","ibeta","bt","randn","randg","shape","a2","oalph","betinc","eps","c9","a0","b0","m9","tukeyWprob","rr","cc","xleg","aleg","qsqz","wincr","pr_w","normal","cdf","blb","binc","bub","einsum","cc1","wi","elsum","jj","ac","qexpo","rinsum","callee","_a","_b","_c","newthis","data","sample","vals","fnfunc","beta","pdf","alpha","inv","centralF","df1","df2","binomial","cauchy","local","scale","atan","tan","chisquare","dof","exponential","rate","invgamma","kumaraswamy","Error","lognormal","noncentralt","ncp","studentt","flip","prob","lastvalue","std","pareto","SQRT2","dof2","weibull","uniform","betacdf","s","negbin","r","hypgeom","N","scaledPDF","samplesDone","scaledCDF","factor","poisson","l","sumarr","sampleSmall","L","sampleLarge","U","V","slam","loglam","invalpha","vr","us","lam","triangular","arcsine","asin","cos","laplace","tukey","nmeans","df","xlegq","alegq","Number","isFinite","ulen","f2","f2lf","f21","ff4","ans","otsum","twa1","t1","x1","ps","tukeyQinv","valx0","valx1","iter","isUsable","add","subtract","divide","multiply","nrescols","rescols","outer","dot","left","right","norm","nnorm","isNaN","angle","acos","aug","newarr","gauss_jordan","result","det","alen","alend","rowshift","colshift","mrow","mcol","gauss_elimination","maug","pivot","temp","y2","maxrow","triaUpSolve","parts","matrix_mode","triaLowSolve","lu","R","cholesky","T","gauss_jacobi","xv","xk","gauss_seidel","SOR","householder","QR","lstsq","array_mode","Q","attrs","Q1","RI","I","Aj","cAi","Ij","cIi","R_I","Q2","jacobi","maxim","theta","condition","e","ev","rungekutta","f","t_j","u_j","order","k1","k2","k3","romberg","h1","g","richardson","X","pos","y1","h_min","simpson","hermite","F","dF","dl","lagrange","cubic_spline","sq","gauss_quadrature","PCA","temp1","Bt","D","temp2","Y","C","Vt","differenceOfProportions","p1","n1","p2","n2","pooled","zscore","ztest","sides","tscore","ttest","anovafscore","expVar","sampMean","sampSampMean","tmpargs","unexpVar","anovaftest","ftest","fscore","anovaftes","qscore","mean1","mean2","sd","qtest","tukeyhsd","arrays","means","normalci","change","tci","significant","pvalue","oneSidedDifferenceOfProportions","twoSidedDifferenceOfProportions","models","ols","endog","exog","nobs","df_model","df_resid","coef","predict","resid","ybar","SSE","SSR","SST","R2","t_test","model","var_count","subModelList","endog_index","exog_index","filter","sigmaHat","seBetaHat","mod","tStatistic","pValue","leftppf","interval95","se","F_statistic","F_test","adjust_R2","buildxmatrix","matrixRows","builddxmatrix","buildjxmatrix","jMat","pass","buildymatrix","array","buildjymatrix","matrixmult","regress","jMatX","jMatY","innerinv","xtranspxinv","xtransp","next","regresst","compile","anova","jMatYBar","yBar","yAverage","residuals","ssr","msr","sse","mse","sst","mst","r2","fratio","rmse","r2adj","stats","sds","ts","covar","xtranspx","inner","matrixsubtract"],"mappings":"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","file":"../../../plugins/js/jstat.min.js","sourcesContent":["(function (window, factory) {\n    if (typeof exports === 'object') {\n        module.exports = factory();\n    } else if (typeof define === 'function' && define.amd) {\n        define(factory);\n    } else {\n        window.jStat = factory();\n    }\n}(this, function () {\n    var jStat = function (Math, undefined) {\n        var concat = Array.prototype.concat;\n        var slice = Array.prototype.slice;\n        var toString = Object.prototype.toString;\n        function calcRdx(n, m) {\n            var val = n > m ? n : m;\n            return Math.pow(10, 17 - ~~(Math.log(val > 0 ? val : -val) * Math.LOG10E));\n        }\n        var isArray = Array.isArray || function isArray(arg) {\n            return toString.call(arg) === '[object Array]';\n        };\n        function isFunction(arg) {\n            return toString.call(arg) === '[object Function]';\n        }\n        function isNumber(num) {\n            return typeof num === 'number' ? num - num === 0 : false;\n        }\n        function toVector(arr) {\n            return concat.apply([], arr);\n        }\n        function jStat() {\n            return new jStat._init(arguments);\n        }\n        jStat.fn = jStat.prototype;\n        jStat._init = function _init(args) {\n            if (isArray(args[0])) {\n                if (isArray(args[0][0])) {\n                    if (isFunction(args[1]))\n                        args[0] = jStat.map(args[0], args[1]);\n                    for (var i = 0; i < args[0].length; i++)\n                        this[i] = args[0][i];\n                    this.length = args[0].length;\n                } else {\n                    this[0] = isFunction(args[1]) ? jStat.map(args[0], args[1]) : args[0];\n                    this.length = 1;\n                }\n            } else if (isNumber(args[0])) {\n                this[0] = jStat.seq.apply(null, args);\n                this.length = 1;\n            } else if (args[0] instanceof jStat) {\n                return jStat(args[0].toArray());\n            } else {\n                this[0] = [];\n                this.length = 1;\n            }\n            return this;\n        };\n        jStat._init.prototype = jStat.prototype;\n        jStat._init.constructor = jStat;\n        jStat.utils = {\n            calcRdx: calcRdx,\n            isArray: isArray,\n            isFunction: isFunction,\n            isNumber: isNumber,\n            toVector: toVector\n        };\n        jStat._random_fn = Math.random;\n        jStat.setRandom = function setRandom(fn) {\n            if (typeof fn !== 'function')\n                throw new TypeError('fn is not a function');\n            jStat._random_fn = fn;\n        };\n        jStat.extend = function extend(obj) {\n            var i, j;\n            if (arguments.length === 1) {\n                for (j in obj)\n                    jStat[j] = obj[j];\n                return this;\n            }\n            for (i = 1; i < arguments.length; i++) {\n                for (j in arguments[i])\n                    obj[j] = arguments[i][j];\n            }\n            return obj;\n        };\n        jStat.rows = function rows(arr) {\n            return arr.length || 1;\n        };\n        jStat.cols = function cols(arr) {\n            return arr[0].length || 1;\n        };\n        jStat.dimensions = function dimensions(arr) {\n            return {\n                rows: jStat.rows(arr),\n                cols: jStat.cols(arr)\n            };\n        };\n        jStat.row = function row(arr, index) {\n            if (isArray(index)) {\n                return index.map(function (i) {\n                    return jStat.row(arr, i);\n                });\n            }\n            return arr[index];\n        };\n        jStat.rowa = function rowa(arr, i) {\n            return jStat.row(arr, i);\n        };\n        jStat.col = function col(arr, index) {\n            if (isArray(index)) {\n                var submat = jStat.arange(arr.length).map(function () {\n                    return new Array(index.length);\n                });\n                index.forEach(function (ind, i) {\n                    jStat.arange(arr.length).forEach(function (j) {\n                        submat[j][i] = arr[j][ind];\n                    });\n                });\n                return submat;\n            }\n            var column = new Array(arr.length);\n            for (var i = 0; i < arr.length; i++)\n                column[i] = [arr[i][index]];\n            return column;\n        };\n        jStat.cola = function cola(arr, i) {\n            return jStat.col(arr, i).map(function (a) {\n                return a[0];\n            });\n        };\n        jStat.diag = function diag(arr) {\n            var nrow = jStat.rows(arr);\n            var res = new Array(nrow);\n            for (var row = 0; row < nrow; row++)\n                res[row] = [arr[row][row]];\n            return res;\n        };\n        jStat.antidiag = function antidiag(arr) {\n            var nrow = jStat.rows(arr) - 1;\n            var res = new Array(nrow);\n            for (var i = 0; nrow >= 0; nrow--, i++)\n                res[i] = [arr[i][nrow]];\n            return res;\n        };\n        jStat.transpose = function transpose(arr) {\n            var obj = [];\n            var objArr, rows, cols, j, i;\n            if (!isArray(arr[0]))\n                arr = [arr];\n            rows = arr.length;\n            cols = arr[0].length;\n            for (i = 0; i < cols; i++) {\n                objArr = new Array(rows);\n                for (j = 0; j < rows; j++)\n                    objArr[j] = arr[j][i];\n                obj.push(objArr);\n            }\n            return obj.length === 1 ? obj[0] : obj;\n        };\n        jStat.map = function map(arr, func, toAlter) {\n            var row, nrow, ncol, res, col;\n            if (!isArray(arr[0]))\n                arr = [arr];\n            nrow = arr.length;\n            ncol = arr[0].length;\n            res = toAlter ? arr : new Array(nrow);\n            for (row = 0; row < nrow; row++) {\n                if (!res[row])\n                    res[row] = new Array(ncol);\n                for (col = 0; col < ncol; col++)\n                    res[row][col] = func(arr[row][col], row, col);\n            }\n            return res.length === 1 ? res[0] : res;\n        };\n        jStat.cumreduce = function cumreduce(arr, func, toAlter) {\n            var row, nrow, ncol, res, col;\n            if (!isArray(arr[0]))\n                arr = [arr];\n            nrow = arr.length;\n            ncol = arr[0].length;\n            res = toAlter ? arr : new Array(nrow);\n            for (row = 0; row < nrow; row++) {\n                if (!res[row])\n                    res[row] = new Array(ncol);\n                if (ncol > 0)\n                    res[row][0] = arr[row][0];\n                for (col = 1; col < ncol; col++)\n                    res[row][col] = func(res[row][col - 1], arr[row][col]);\n            }\n            return res.length === 1 ? res[0] : res;\n        };\n        jStat.alter = function alter(arr, func) {\n            return jStat.map(arr, func, true);\n        };\n        jStat.create = function create(rows, cols, func) {\n            var res = new Array(rows);\n            var i, j;\n            if (isFunction(cols)) {\n                func = cols;\n                cols = rows;\n            }\n            for (i = 0; i < rows; i++) {\n                res[i] = new Array(cols);\n                for (j = 0; j < cols; j++)\n                    res[i][j] = func(i, j);\n            }\n            return res;\n        };\n        function retZero() {\n            return 0;\n        }\n        jStat.zeros = function zeros(rows, cols) {\n            if (!isNumber(cols))\n                cols = rows;\n            return jStat.create(rows, cols, retZero);\n        };\n        function retOne() {\n            return 1;\n        }\n        jStat.ones = function ones(rows, cols) {\n            if (!isNumber(cols))\n                cols = rows;\n            return jStat.create(rows, cols, retOne);\n        };\n        jStat.rand = function rand(rows, cols) {\n            if (!isNumber(cols))\n                cols = rows;\n            return jStat.create(rows, cols, jStat._random_fn);\n        };\n        function retIdent(i, j) {\n            return i === j ? 1 : 0;\n        }\n        jStat.identity = function identity(rows, cols) {\n            if (!isNumber(cols))\n                cols = rows;\n            return jStat.create(rows, cols, retIdent);\n        };\n        jStat.symmetric = function symmetric(arr) {\n            var size = arr.length;\n            var row, col;\n            if (arr.length !== arr[0].length)\n                return false;\n            for (row = 0; row < size; row++) {\n                for (col = 0; col < size; col++)\n                    if (arr[col][row] !== arr[row][col])\n                        return false;\n            }\n            return true;\n        };\n        jStat.clear = function clear(arr) {\n            return jStat.alter(arr, retZero);\n        };\n        jStat.seq = function seq(min, max, length, func) {\n            if (!isFunction(func))\n                func = false;\n            var arr = [];\n            var hival = calcRdx(min, max);\n            var step = (max * hival - min * hival) / ((length - 1) * hival);\n            var current = min;\n            var cnt;\n            for (cnt = 0; current <= max && cnt < length; cnt++, current = (min * hival + step * hival * cnt) / hival) {\n                arr.push(func ? func(current, cnt) : current);\n            }\n            return arr;\n        };\n        jStat.arange = function arange(start, end, step) {\n            var rl = [];\n            var i;\n            step = step || 1;\n            if (end === undefined) {\n                end = start;\n                start = 0;\n            }\n            if (start === end || step === 0) {\n                return [];\n            }\n            if (start < end && step < 0) {\n                return [];\n            }\n            if (start > end && step > 0) {\n                return [];\n            }\n            if (step > 0) {\n                for (i = start; i < end; i += step) {\n                    rl.push(i);\n                }\n            } else {\n                for (i = start; i > end; i += step) {\n                    rl.push(i);\n                }\n            }\n            return rl;\n        };\n        jStat.slice = function () {\n            function _slice(list, start, end, step) {\n                var i;\n                var rl = [];\n                var length = list.length;\n                if (start === undefined && end === undefined && step === undefined) {\n                    return jStat.copy(list);\n                }\n                start = start || 0;\n                end = end || list.length;\n                start = start >= 0 ? start : length + start;\n                end = end >= 0 ? end : length + end;\n                step = step || 1;\n                if (start === end || step === 0) {\n                    return [];\n                }\n                if (start < end && step < 0) {\n                    return [];\n                }\n                if (start > end && step > 0) {\n                    return [];\n                }\n                if (step > 0) {\n                    for (i = start; i < end; i += step) {\n                        rl.push(list[i]);\n                    }\n                } else {\n                    for (i = start; i > end; i += step) {\n                        rl.push(list[i]);\n                    }\n                }\n                return rl;\n            }\n            function slice(list, rcSlice) {\n                var colSlice, rowSlice;\n                rcSlice = rcSlice || {};\n                if (isNumber(rcSlice.row)) {\n                    if (isNumber(rcSlice.col))\n                        return list[rcSlice.row][rcSlice.col];\n                    var row = jStat.rowa(list, rcSlice.row);\n                    colSlice = rcSlice.col || {};\n                    return _slice(row, colSlice.start, colSlice.end, colSlice.step);\n                }\n                if (isNumber(rcSlice.col)) {\n                    var col = jStat.cola(list, rcSlice.col);\n                    rowSlice = rcSlice.row || {};\n                    return _slice(col, rowSlice.start, rowSlice.end, rowSlice.step);\n                }\n                rowSlice = rcSlice.row || {};\n                colSlice = rcSlice.col || {};\n                var rows = _slice(list, rowSlice.start, rowSlice.end, rowSlice.step);\n                return rows.map(function (row) {\n                    return _slice(row, colSlice.start, colSlice.end, colSlice.step);\n                });\n            }\n            return slice;\n        }();\n        jStat.sliceAssign = function sliceAssign(A, rcSlice, B) {\n            var nl, ml;\n            if (isNumber(rcSlice.row)) {\n                if (isNumber(rcSlice.col))\n                    return A[rcSlice.row][rcSlice.col] = B;\n                rcSlice.col = rcSlice.col || {};\n                rcSlice.col.start = rcSlice.col.start || 0;\n                rcSlice.col.end = rcSlice.col.end || A[0].length;\n                rcSlice.col.step = rcSlice.col.step || 1;\n                nl = jStat.arange(rcSlice.col.start, Math.min(A.length, rcSlice.col.end), rcSlice.col.step);\n                var m = rcSlice.row;\n                nl.forEach(function (n, i) {\n                    A[m][n] = B[i];\n                });\n                return A;\n            }\n            if (isNumber(rcSlice.col)) {\n                rcSlice.row = rcSlice.row || {};\n                rcSlice.row.start = rcSlice.row.start || 0;\n                rcSlice.row.end = rcSlice.row.end || A.length;\n                rcSlice.row.step = rcSlice.row.step || 1;\n                ml = jStat.arange(rcSlice.row.start, Math.min(A[0].length, rcSlice.row.end), rcSlice.row.step);\n                var n = rcSlice.col;\n                ml.forEach(function (m, j) {\n                    A[m][n] = B[j];\n                });\n                return A;\n            }\n            if (B[0].length === undefined) {\n                B = [B];\n            }\n            rcSlice.row.start = rcSlice.row.start || 0;\n            rcSlice.row.end = rcSlice.row.end || A.length;\n            rcSlice.row.step = rcSlice.row.step || 1;\n            rcSlice.col.start = rcSlice.col.start || 0;\n            rcSlice.col.end = rcSlice.col.end || A[0].length;\n            rcSlice.col.step = rcSlice.col.step || 1;\n            ml = jStat.arange(rcSlice.row.start, Math.min(A.length, rcSlice.row.end), rcSlice.row.step);\n            nl = jStat.arange(rcSlice.col.start, Math.min(A[0].length, rcSlice.col.end), rcSlice.col.step);\n            ml.forEach(function (m, i) {\n                nl.forEach(function (n, j) {\n                    A[m][n] = B[i][j];\n                });\n            });\n            return A;\n        };\n        jStat.diagonal = function diagonal(diagArray) {\n            var mat = jStat.zeros(diagArray.length, diagArray.length);\n            diagArray.forEach(function (t, i) {\n                mat[i][i] = t;\n            });\n            return mat;\n        };\n        jStat.copy = function copy(A) {\n            return A.map(function (row) {\n                if (isNumber(row))\n                    return row;\n                return row.map(function (t) {\n                    return t;\n                });\n            });\n        };\n        var jProto = jStat.prototype;\n        jProto.length = 0;\n        jProto.push = Array.prototype.push;\n        jProto.sort = Array.prototype.sort;\n        jProto.splice = Array.prototype.splice;\n        jProto.slice = Array.prototype.slice;\n        jProto.toArray = function toArray() {\n            return this.length > 1 ? slice.call(this) : slice.call(this)[0];\n        };\n        jProto.map = function map(func, toAlter) {\n            return jStat(jStat.map(this, func, toAlter));\n        };\n        jProto.cumreduce = function cumreduce(func, toAlter) {\n            return jStat(jStat.cumreduce(this, func, toAlter));\n        };\n        jProto.alter = function alter(func) {\n            jStat.alter(this, func);\n            return this;\n        };\n        (function (funcs) {\n            for (var i = 0; i < funcs.length; i++)\n                (function (passfunc) {\n                    jProto[passfunc] = function (func) {\n                        var self = this, results;\n                        if (func) {\n                            setTimeout(function () {\n                                func.call(self, jProto[passfunc].call(self));\n                            });\n                            return this;\n                        }\n                        results = jStat[passfunc](this);\n                        return isArray(results) ? jStat(results) : results;\n                    };\n                }(funcs[i]));\n        }('transpose clear symmetric rows cols dimensions diag antidiag'.split(' ')));\n        (function (funcs) {\n            for (var i = 0; i < funcs.length; i++)\n                (function (passfunc) {\n                    jProto[passfunc] = function (index, func) {\n                        var self = this;\n                        if (func) {\n                            setTimeout(function () {\n                                func.call(self, jProto[passfunc].call(self, index));\n                            });\n                            return this;\n                        }\n                        return jStat(jStat[passfunc](this, index));\n                    };\n                }(funcs[i]));\n        }('row col'.split(' ')));\n        (function (funcs) {\n            for (var i = 0; i < funcs.length; i++)\n                (function (passfunc) {\n                    jProto[passfunc] = function () {\n                        return jStat(jStat[passfunc].apply(null, arguments));\n                    };\n                }(funcs[i]));\n        }('create zeros ones rand identity'.split(' ')));\n        return jStat;\n    }(Math);\n    (function (jStat, Math) {\n        var isFunction = jStat.utils.isFunction;\n        function ascNum(a, b) {\n            return a - b;\n        }\n        function clip(arg, min, max) {\n            return Math.max(min, Math.min(arg, max));\n        }\n        jStat.sum = function sum(arr) {\n            var sum = 0;\n            var i = arr.length;\n            while (--i >= 0)\n                sum += arr[i];\n            return sum;\n        };\n        jStat.sumsqrd = function sumsqrd(arr) {\n            var sum = 0;\n            var i = arr.length;\n            while (--i >= 0)\n                sum += arr[i] * arr[i];\n            return sum;\n        };\n        jStat.sumsqerr = function sumsqerr(arr) {\n            var mean = jStat.mean(arr);\n            var sum = 0;\n            var i = arr.length;\n            var tmp;\n            while (--i >= 0) {\n                tmp = arr[i] - mean;\n                sum += tmp * tmp;\n            }\n            return sum;\n        };\n        jStat.sumrow = function sumrow(arr) {\n            var sum = 0;\n            var i = arr.length;\n            while (--i >= 0)\n                sum += arr[i];\n            return sum;\n        };\n        jStat.product = function product(arr) {\n            var prod = 1;\n            var i = arr.length;\n            while (--i >= 0)\n                prod *= arr[i];\n            return prod;\n        };\n        jStat.min = function min(arr) {\n            var low = arr[0];\n            var i = 0;\n            while (++i < arr.length)\n                if (arr[i] < low)\n                    low = arr[i];\n            return low;\n        };\n        jStat.max = function max(arr) {\n            var high = arr[0];\n            var i = 0;\n            while (++i < arr.length)\n                if (arr[i] > high)\n                    high = arr[i];\n            return high;\n        };\n        jStat.unique = function unique(arr) {\n            var hash = {}, _arr = [];\n            for (var i = 0; i < arr.length; i++) {\n                if (!hash[arr[i]]) {\n                    hash[arr[i]] = true;\n                    _arr.push(arr[i]);\n                }\n            }\n            return _arr;\n        };\n        jStat.mean = function mean(arr) {\n            return jStat.sum(arr) / arr.length;\n        };\n        jStat.meansqerr = function meansqerr(arr) {\n            return jStat.sumsqerr(arr) / arr.length;\n        };\n        jStat.geomean = function geomean(arr) {\n            return Math.pow(jStat.product(arr), 1 / arr.length);\n        };\n        jStat.median = function median(arr) {\n            var arrlen = arr.length;\n            var _arr = arr.slice().sort(ascNum);\n            return !(arrlen & 1) ? (_arr[arrlen / 2 - 1] + _arr[arrlen / 2]) / 2 : _arr[arrlen / 2 | 0];\n        };\n        jStat.cumsum = function cumsum(arr) {\n            return jStat.cumreduce(arr, function (a, b) {\n                return a + b;\n            });\n        };\n        jStat.cumprod = function cumprod(arr) {\n            return jStat.cumreduce(arr, function (a, b) {\n                return a * b;\n            });\n        };\n        jStat.diff = function diff(arr) {\n            var diffs = [];\n            var arrLen = arr.length;\n            var i;\n            for (i = 1; i < arrLen; i++)\n                diffs.push(arr[i] - arr[i - 1]);\n            return diffs;\n        };\n        jStat.rank = function (arr) {\n            var i;\n            var distinctNumbers = [];\n            var numberCounts = {};\n            for (i = 0; i < arr.length; i++) {\n                var number = arr[i];\n                if (numberCounts[number]) {\n                    numberCounts[number]++;\n                } else {\n                    numberCounts[number] = 1;\n                    distinctNumbers.push(number);\n                }\n            }\n            var sortedDistinctNumbers = distinctNumbers.sort(ascNum);\n            var numberRanks = {};\n            var currentRank = 1;\n            for (i = 0; i < sortedDistinctNumbers.length; i++) {\n                var number = sortedDistinctNumbers[i];\n                var count = numberCounts[number];\n                var first = currentRank;\n                var last = currentRank + count - 1;\n                var rank = (first + last) / 2;\n                numberRanks[number] = rank;\n                currentRank += count;\n            }\n            return arr.map(function (number) {\n                return numberRanks[number];\n            });\n        };\n        jStat.mode = function mode(arr) {\n            var arrLen = arr.length;\n            var _arr = arr.slice().sort(ascNum);\n            var count = 1;\n            var maxCount = 0;\n            var numMaxCount = 0;\n            var mode_arr = [];\n            var i;\n            for (i = 0; i < arrLen; i++) {\n                if (_arr[i] === _arr[i + 1]) {\n                    count++;\n                } else {\n                    if (count > maxCount) {\n                        mode_arr = [_arr[i]];\n                        maxCount = count;\n                        numMaxCount = 0;\n                    } else if (count === maxCount) {\n                        mode_arr.push(_arr[i]);\n                        numMaxCount++;\n                    }\n                    count = 1;\n                }\n            }\n            return numMaxCount === 0 ? mode_arr[0] : mode_arr;\n        };\n        jStat.range = function range(arr) {\n            return jStat.max(arr) - jStat.min(arr);\n        };\n        jStat.variance = function variance(arr, flag) {\n            return jStat.sumsqerr(arr) / (arr.length - (flag ? 1 : 0));\n        };\n        jStat.pooledvariance = function pooledvariance(arr) {\n            var sumsqerr = arr.reduce(function (a, samples) {\n                return a + jStat.sumsqerr(samples);\n            }, 0);\n            var count = arr.reduce(function (a, samples) {\n                return a + samples.length;\n            }, 0);\n            return sumsqerr / (count - arr.length);\n        };\n        jStat.deviation = function (arr) {\n            var mean = jStat.mean(arr);\n            var arrlen = arr.length;\n            var dev = new Array(arrlen);\n            for (var i = 0; i < arrlen; i++) {\n                dev[i] = arr[i] - mean;\n            }\n            return dev;\n        };\n        jStat.stdev = function stdev(arr, flag) {\n            return Math.sqrt(jStat.variance(arr, flag));\n        };\n        jStat.pooledstdev = function pooledstdev(arr) {\n            return Math.sqrt(jStat.pooledvariance(arr));\n        };\n        jStat.meandev = function meandev(arr) {\n            var mean = jStat.mean(arr);\n            var a = [];\n            for (var i = arr.length - 1; i >= 0; i--) {\n                a.push(Math.abs(arr[i] - mean));\n            }\n            return jStat.mean(a);\n        };\n        jStat.meddev = function meddev(arr) {\n            var median = jStat.median(arr);\n            var a = [];\n            for (var i = arr.length - 1; i >= 0; i--) {\n                a.push(Math.abs(arr[i] - median));\n            }\n            return jStat.median(a);\n        };\n        jStat.coeffvar = function coeffvar(arr) {\n            return jStat.stdev(arr) / jStat.mean(arr);\n        };\n        jStat.quartiles = function quartiles(arr) {\n            var arrlen = arr.length;\n            var _arr = arr.slice().sort(ascNum);\n            return [\n                _arr[Math.round(arrlen / 4) - 1],\n                _arr[Math.round(arrlen / 2) - 1],\n                _arr[Math.round(arrlen * 3 / 4) - 1]\n            ];\n        };\n        jStat.quantiles = function quantiles(arr, quantilesArray, alphap, betap) {\n            var sortedArray = arr.slice().sort(ascNum);\n            var quantileVals = [quantilesArray.length];\n            var n = arr.length;\n            var i, p, m, aleph, k, gamma;\n            if (typeof alphap === 'undefined')\n                alphap = 3 / 8;\n            if (typeof betap === 'undefined')\n                betap = 3 / 8;\n            for (i = 0; i < quantilesArray.length; i++) {\n                p = quantilesArray[i];\n                m = alphap + p * (1 - alphap - betap);\n                aleph = n * p + m;\n                k = Math.floor(clip(aleph, 1, n - 1));\n                gamma = clip(aleph - k, 0, 1);\n                quantileVals[i] = (1 - gamma) * sortedArray[k - 1] + gamma * sortedArray[k];\n            }\n            return quantileVals;\n        };\n        jStat.percentile = function percentile(arr, k, exclusive) {\n            var _arr = arr.slice().sort(ascNum);\n            var realIndex = k * (_arr.length + (exclusive ? 1 : -1)) + (exclusive ? 0 : 1);\n            var index = parseInt(realIndex);\n            var frac = realIndex - index;\n            if (index + 1 < _arr.length) {\n                return _arr[index - 1] + frac * (_arr[index] - _arr[index - 1]);\n            } else {\n                return _arr[index - 1];\n            }\n        };\n        jStat.percentileOfScore = function percentileOfScore(arr, score, kind) {\n            var counter = 0;\n            var len = arr.length;\n            var strict = false;\n            var value, i;\n            if (kind === 'strict')\n                strict = true;\n            for (i = 0; i < len; i++) {\n                value = arr[i];\n                if (strict && value < score || !strict && value <= score) {\n                    counter++;\n                }\n            }\n            return counter / len;\n        };\n        jStat.histogram = function histogram(arr, binCnt) {\n            binCnt = binCnt || 4;\n            var first = jStat.min(arr);\n            var binWidth = (jStat.max(arr) - first) / binCnt;\n            var len = arr.length;\n            var bins = [];\n            var i;\n            for (i = 0; i < binCnt; i++)\n                bins[i] = 0;\n            for (i = 0; i < len; i++)\n                bins[Math.min(Math.floor((arr[i] - first) / binWidth), binCnt - 1)] += 1;\n            return bins;\n        };\n        jStat.covariance = function covariance(arr1, arr2) {\n            var u = jStat.mean(arr1);\n            var v = jStat.mean(arr2);\n            var arr1Len = arr1.length;\n            var sq_dev = new Array(arr1Len);\n            var i;\n            for (i = 0; i < arr1Len; i++)\n                sq_dev[i] = (arr1[i] - u) * (arr2[i] - v);\n            return jStat.sum(sq_dev) / (arr1Len - 1);\n        };\n        jStat.corrcoeff = function corrcoeff(arr1, arr2) {\n            return jStat.covariance(arr1, arr2) / jStat.stdev(arr1, 1) / jStat.stdev(arr2, 1);\n        };\n        jStat.spearmancoeff = function (arr1, arr2) {\n            arr1 = jStat.rank(arr1);\n            arr2 = jStat.rank(arr2);\n            return jStat.corrcoeff(arr1, arr2);\n        };\n        jStat.stanMoment = function stanMoment(arr, n) {\n            var mu = jStat.mean(arr);\n            var sigma = jStat.stdev(arr);\n            var len = arr.length;\n            var skewSum = 0;\n            for (var i = 0; i < len; i++)\n                skewSum += Math.pow((arr[i] - mu) / sigma, n);\n            return skewSum / arr.length;\n        };\n        jStat.skewness = function skewness(arr) {\n            return jStat.stanMoment(arr, 3);\n        };\n        jStat.kurtosis = function kurtosis(arr) {\n            return jStat.stanMoment(arr, 4) - 3;\n        };\n        var jProto = jStat.prototype;\n        (function (funcs) {\n            for (var i = 0; i < funcs.length; i++)\n                (function (passfunc) {\n                    jProto[passfunc] = function (fullbool, func) {\n                        var arr = [];\n                        var i = 0;\n                        var tmpthis = this;\n                        if (isFunction(fullbool)) {\n                            func = fullbool;\n                            fullbool = false;\n                        }\n                        if (func) {\n                            setTimeout(function () {\n                                func.call(tmpthis, jProto[passfunc].call(tmpthis, fullbool));\n                            });\n                            return this;\n                        }\n                        if (this.length > 1) {\n                            tmpthis = fullbool === true ? this : this.transpose();\n                            for (; i < tmpthis.length; i++)\n                                arr[i] = jStat[passfunc](tmpthis[i]);\n                            return arr;\n                        }\n                        return jStat[passfunc](this[0], fullbool);\n                    };\n                }(funcs[i]));\n        }('cumsum cumprod'.split(' ')));\n        (function (funcs) {\n            for (var i = 0; i < funcs.length; i++)\n                (function (passfunc) {\n                    jProto[passfunc] = function (fullbool, func) {\n                        var arr = [];\n                        var i = 0;\n                        var tmpthis = this;\n                        if (isFunction(fullbool)) {\n                            func = fullbool;\n                            fullbool = false;\n                        }\n                        if (func) {\n                            setTimeout(function () {\n                                func.call(tmpthis, jProto[passfunc].call(tmpthis, fullbool));\n                            });\n                            return this;\n                        }\n                        if (this.length > 1) {\n                            if (passfunc !== 'sumrow')\n                                tmpthis = fullbool === true ? this : this.transpose();\n                            for (; i < tmpthis.length; i++)\n                                arr[i] = jStat[passfunc](tmpthis[i]);\n                            return fullbool === true ? jStat[passfunc](jStat.utils.toVector(arr)) : arr;\n                        }\n                        return jStat[passfunc](this[0], fullbool);\n                    };\n                }(funcs[i]));\n        }(('sum sumsqrd sumsqerr sumrow product min max unique mean meansqerr ' + 'geomean median diff rank mode range variance deviation stdev meandev ' + 'meddev coeffvar quartiles histogram skewness kurtosis').split(' ')));\n        (function (funcs) {\n            for (var i = 0; i < funcs.length; i++)\n                (function (passfunc) {\n                    jProto[passfunc] = function () {\n                        var arr = [];\n                        var i = 0;\n                        var tmpthis = this;\n                        var args = Array.prototype.slice.call(arguments);\n                        var callbackFunction;\n                        if (isFunction(args[args.length - 1])) {\n                            callbackFunction = args[args.length - 1];\n                            var argsToPass = args.slice(0, args.length - 1);\n                            setTimeout(function () {\n                                callbackFunction.call(tmpthis, jProto[passfunc].apply(tmpthis, argsToPass));\n                            });\n                            return this;\n                        } else {\n                            callbackFunction = undefined;\n                            var curriedFunction = function curriedFunction(vector) {\n                                return jStat[passfunc].apply(tmpthis, [vector].concat(args));\n                            };\n                        }\n                        if (this.length > 1) {\n                            tmpthis = tmpthis.transpose();\n                            for (; i < tmpthis.length; i++)\n                                arr[i] = curriedFunction(tmpthis[i]);\n                            return arr;\n                        }\n                        return curriedFunction(this[0]);\n                    };\n                }(funcs[i]));\n        }('quantiles percentileOfScore'.split(' ')));\n    }(jStat, Math));\n    (function (jStat, Math) {\n        jStat.gammaln = function gammaln(x) {\n            var j = 0;\n            var cof = [\n                76.18009172947146,\n                -86.50532032941678,\n                24.01409824083091,\n                -1.231739572450155,\n                0.001208650973866179,\n                -0.000005395239384953\n            ];\n            var ser = 1.000000000190015;\n            var xx, y, tmp;\n            tmp = (y = xx = x) + 5.5;\n            tmp -= (xx + 0.5) * Math.log(tmp);\n            for (; j < 6; j++)\n                ser += cof[j] / ++y;\n            return Math.log(2.5066282746310007 * ser / xx) - tmp;\n        };\n        jStat.loggam = function loggam(x) {\n            var x0, x2, xp, gl, gl0;\n            var k, n;\n            var a = [\n                0.08333333333333333,\n                -0.002777777777777778,\n                0.0007936507936507937,\n                -0.0005952380952380952,\n                0.0008417508417508418,\n                -0.001917526917526918,\n                0.00641025641025641,\n                -0.02955065359477124,\n                0.1796443723688307,\n                -1.3924322169059\n            ];\n            x0 = x;\n            n = 0;\n            if (x == 1 || x == 2) {\n                return 0;\n            }\n            if (x <= 7) {\n                n = Math.floor(7 - x);\n                x0 = x + n;\n            }\n            x2 = 1 / (x0 * x0);\n            xp = 2 * Math.PI;\n            gl0 = a[9];\n            for (k = 8; k >= 0; k--) {\n                gl0 *= x2;\n                gl0 += a[k];\n            }\n            gl = gl0 / x0 + 0.5 * Math.log(xp) + (x0 - 0.5) * Math.log(x0) - x0;\n            if (x <= 7) {\n                for (k = 1; k <= n; k++) {\n                    gl -= Math.log(x0 - 1);\n                    x0 -= 1;\n                }\n            }\n            return gl;\n        };\n        jStat.gammafn = function gammafn(x) {\n            var p = [\n                -1.716185138865495,\n                24.76565080557592,\n                -379.80425647094563,\n                629.3311553128184,\n                866.9662027904133,\n                -31451.272968848367,\n                -36144.413418691176,\n                66456.14382024054\n            ];\n            var q = [\n                -30.8402300119739,\n                315.35062697960416,\n                -1015.1563674902192,\n                -3107.771671572311,\n                22538.11842098015,\n                4755.846277527881,\n                -134659.9598649693,\n                -115132.2596755535\n            ];\n            var fact = false;\n            var n = 0;\n            var xden = 0;\n            var xnum = 0;\n            var y = x;\n            var i, z, yi, res;\n            if (x > 171.6243769536076) {\n                return Infinity;\n            }\n            if (y <= 0) {\n                res = y % 1 + 3.6e-16;\n                if (res) {\n                    fact = (!(y & 1) ? 1 : -1) * Math.PI / Math.sin(Math.PI * res);\n                    y = 1 - y;\n                } else {\n                    return Infinity;\n                }\n            }\n            yi = y;\n            if (y < 1) {\n                z = y++;\n            } else {\n                z = (y -= n = (y | 0) - 1) - 1;\n            }\n            for (i = 0; i < 8; ++i) {\n                xnum = (xnum + p[i]) * z;\n                xden = xden * z + q[i];\n            }\n            res = xnum / xden + 1;\n            if (yi < y) {\n                res /= yi;\n            } else if (yi > y) {\n                for (i = 0; i < n; ++i) {\n                    res *= y;\n                    y++;\n                }\n            }\n            if (fact) {\n                res = fact / res;\n            }\n            return res;\n        };\n        jStat.gammap = function gammap(a, x) {\n            return jStat.lowRegGamma(a, x) * jStat.gammafn(a);\n        };\n        jStat.lowRegGamma = function lowRegGamma(a, x) {\n            var aln = jStat.gammaln(a);\n            var ap = a;\n            var sum = 1 / a;\n            var del = sum;\n            var b = x + 1 - a;\n            var c = 1 / 1e-30;\n            var d = 1 / b;\n            var h = d;\n            var i = 1;\n            var ITMAX = -~(Math.log(a >= 1 ? a : 1 / a) * 8.5 + a * 0.4 + 17);\n            var an;\n            if (x < 0 || a <= 0) {\n                return NaN;\n            } else if (x < a + 1) {\n                for (; i <= ITMAX; i++) {\n                    sum += del *= x / ++ap;\n                }\n                return sum * Math.exp(-x + a * Math.log(x) - aln);\n            }\n            for (; i <= ITMAX; i++) {\n                an = -i * (i - a);\n                b += 2;\n                d = an * d + b;\n                c = b + an / c;\n                d = 1 / d;\n                h *= d * c;\n            }\n            return 1 - h * Math.exp(-x + a * Math.log(x) - aln);\n        };\n        jStat.factorialln = function factorialln(n) {\n            return n < 0 ? NaN : jStat.gammaln(n + 1);\n        };\n        jStat.factorial = function factorial(n) {\n            return n < 0 ? NaN : jStat.gammafn(n + 1);\n        };\n        jStat.combination = function combination(n, m) {\n            return n > 170 || m > 170 ? Math.exp(jStat.combinationln(n, m)) : jStat.factorial(n) / jStat.factorial(m) / jStat.factorial(n - m);\n        };\n        jStat.combinationln = function combinationln(n, m) {\n            return jStat.factorialln(n) - jStat.factorialln(m) - jStat.factorialln(n - m);\n        };\n        jStat.permutation = function permutation(n, m) {\n            return jStat.factorial(n) / jStat.factorial(n - m);\n        };\n        jStat.betafn = function betafn(x, y) {\n            if (x <= 0 || y <= 0)\n                return undefined;\n            return x + y > 170 ? Math.exp(jStat.betaln(x, y)) : jStat.gammafn(x) * jStat.gammafn(y) / jStat.gammafn(x + y);\n        };\n        jStat.betaln = function betaln(x, y) {\n            return jStat.gammaln(x) + jStat.gammaln(y) - jStat.gammaln(x + y);\n        };\n        jStat.betacf = function betacf(x, a, b) {\n            var fpmin = 1e-30;\n            var m = 1;\n            var qab = a + b;\n            var qap = a + 1;\n            var qam = a - 1;\n            var c = 1;\n            var d = 1 - qab * x / qap;\n            var m2, aa, del, h;\n            if (Math.abs(d) < fpmin)\n                d = fpmin;\n            d = 1 / d;\n            h = d;\n            for (; m <= 100; m++) {\n                m2 = 2 * m;\n                aa = m * (b - m) * x / ((qam + m2) * (a + m2));\n                d = 1 + aa * d;\n                if (Math.abs(d) < fpmin)\n                    d = fpmin;\n                c = 1 + aa / c;\n                if (Math.abs(c) < fpmin)\n                    c = fpmin;\n                d = 1 / d;\n                h *= d * c;\n                aa = -(a + m) * (qab + m) * x / ((a + m2) * (qap + m2));\n                d = 1 + aa * d;\n                if (Math.abs(d) < fpmin)\n                    d = fpmin;\n                c = 1 + aa / c;\n                if (Math.abs(c) < fpmin)\n                    c = fpmin;\n                d = 1 / d;\n                del = d * c;\n                h *= del;\n                if (Math.abs(del - 1) < 3e-7)\n                    break;\n            }\n            return h;\n        };\n        jStat.gammapinv = function gammapinv(p, a) {\n            var j = 0;\n            var a1 = a - 1;\n            var EPS = 1e-8;\n            var gln = jStat.gammaln(a);\n            var x, err, t, u, pp, lna1, afac;\n            if (p >= 1)\n                return Math.max(100, a + 100 * Math.sqrt(a));\n            if (p <= 0)\n                return 0;\n            if (a > 1) {\n                lna1 = Math.log(a1);\n                afac = Math.exp(a1 * (lna1 - 1) - gln);\n                pp = p < 0.5 ? p : 1 - p;\n                t = Math.sqrt(-2 * Math.log(pp));\n                x = (2.30753 + t * 0.27061) / (1 + t * (0.99229 + t * 0.04481)) - t;\n                if (p < 0.5)\n                    x = -x;\n                x = Math.max(0.001, a * Math.pow(1 - 1 / (9 * a) - x / (3 * Math.sqrt(a)), 3));\n            } else {\n                t = 1 - a * (0.253 + a * 0.12);\n                if (p < t)\n                    x = Math.pow(p / t, 1 / a);\n                else\n                    x = 1 - Math.log(1 - (p - t) / (1 - t));\n            }\n            for (; j < 12; j++) {\n                if (x <= 0)\n                    return 0;\n                err = jStat.lowRegGamma(a, x) - p;\n                if (a > 1)\n                    t = afac * Math.exp(-(x - a1) + a1 * (Math.log(x) - lna1));\n                else\n                    t = Math.exp(-x + a1 * Math.log(x) - gln);\n                u = err / t;\n                x -= t = u / (1 - 0.5 * Math.min(1, u * ((a - 1) / x - 1)));\n                if (x <= 0)\n                    x = 0.5 * (x + t);\n                if (Math.abs(t) < EPS * x)\n                    break;\n            }\n            return x;\n        };\n        jStat.erf = function erf(x) {\n            var cof = [\n                -1.3026537197817094,\n                0.6419697923564902,\n                0.019476473204185836,\n                -0.00956151478680863,\n                -0.000946595344482036,\n                0.000366839497852761,\n                0.000042523324806907,\n                -0.000020278578112534,\n                -0.000001624290004647,\n                0.00000130365583558,\n                1.5626441722e-8,\n                -8.5238095915e-8,\n                6.529054439e-9,\n                5.059343495e-9,\n                -9.91364156e-10,\n                -2.27365122e-10,\n                9.6467911e-11,\n                2.394038e-12,\n                -6.886027e-12,\n                8.94487e-13,\n                3.13092e-13,\n                -1.12708e-13,\n                3.81e-16,\n                7.106e-15,\n                -1.523e-15,\n                -9.4e-17,\n                1.21e-16,\n                -2.8e-17\n            ];\n            var j = cof.length - 1;\n            var isneg = false;\n            var d = 0;\n            var dd = 0;\n            var t, ty, tmp, res;\n            if (x < 0) {\n                x = -x;\n                isneg = true;\n            }\n            t = 2 / (2 + x);\n            ty = 4 * t - 2;\n            for (; j > 0; j--) {\n                tmp = d;\n                d = ty * d - dd + cof[j];\n                dd = tmp;\n            }\n            res = t * Math.exp(-x * x + 0.5 * (cof[0] + ty * d) - dd);\n            return isneg ? res - 1 : 1 - res;\n        };\n        jStat.erfc = function erfc(x) {\n            return 1 - jStat.erf(x);\n        };\n        jStat.erfcinv = function erfcinv(p) {\n            var j = 0;\n            var x, err, t, pp;\n            if (p >= 2)\n                return -100;\n            if (p <= 0)\n                return 100;\n            pp = p < 1 ? p : 2 - p;\n            t = Math.sqrt(-2 * Math.log(pp / 2));\n            x = -0.70711 * ((2.30753 + t * 0.27061) / (1 + t * (0.99229 + t * 0.04481)) - t);\n            for (; j < 2; j++) {\n                err = jStat.erfc(x) - pp;\n                x += err / (1.1283791670955126 * Math.exp(-x * x) - x * err);\n            }\n            return p < 1 ? x : -x;\n        };\n        jStat.ibetainv = function ibetainv(p, a, b) {\n            var EPS = 1e-8;\n            var a1 = a - 1;\n            var b1 = b - 1;\n            var j = 0;\n            var lna, lnb, pp, t, u, err, x, al, h, w, afac;\n            if (p <= 0)\n                return 0;\n            if (p >= 1)\n                return 1;\n            if (a >= 1 && b >= 1) {\n                pp = p < 0.5 ? p : 1 - p;\n                t = Math.sqrt(-2 * Math.log(pp));\n                x = (2.30753 + t * 0.27061) / (1 + t * (0.99229 + t * 0.04481)) - t;\n                if (p < 0.5)\n                    x = -x;\n                al = (x * x - 3) / 6;\n                h = 2 / (1 / (2 * a - 1) + 1 / (2 * b - 1));\n                w = x * Math.sqrt(al + h) / h - (1 / (2 * b - 1) - 1 / (2 * a - 1)) * (al + 5 / 6 - 2 / (3 * h));\n                x = a / (a + b * Math.exp(2 * w));\n            } else {\n                lna = Math.log(a / (a + b));\n                lnb = Math.log(b / (a + b));\n                t = Math.exp(a * lna) / a;\n                u = Math.exp(b * lnb) / b;\n                w = t + u;\n                if (p < t / w)\n                    x = Math.pow(a * w * p, 1 / a);\n                else\n                    x = 1 - Math.pow(b * w * (1 - p), 1 / b);\n            }\n            afac = -jStat.gammaln(a) - jStat.gammaln(b) + jStat.gammaln(a + b);\n            for (; j < 10; j++) {\n                if (x === 0 || x === 1)\n                    return x;\n                err = jStat.ibeta(x, a, b) - p;\n                t = Math.exp(a1 * Math.log(x) + b1 * Math.log(1 - x) + afac);\n                u = err / t;\n                x -= t = u / (1 - 0.5 * Math.min(1, u * (a1 / x - b1 / (1 - x))));\n                if (x <= 0)\n                    x = 0.5 * (x + t);\n                if (x >= 1)\n                    x = 0.5 * (x + t + 1);\n                if (Math.abs(t) < EPS * x && j > 0)\n                    break;\n            }\n            return x;\n        };\n        jStat.ibeta = function ibeta(x, a, b) {\n            var bt = x === 0 || x === 1 ? 0 : Math.exp(jStat.gammaln(a + b) - jStat.gammaln(a) - jStat.gammaln(b) + a * Math.log(x) + b * Math.log(1 - x));\n            if (x < 0 || x > 1)\n                return false;\n            if (x < (a + 1) / (a + b + 2))\n                return bt * jStat.betacf(x, a, b) / a;\n            return 1 - bt * jStat.betacf(1 - x, b, a) / b;\n        };\n        jStat.randn = function randn(n, m) {\n            var u, v, x, y, q;\n            if (!m)\n                m = n;\n            if (n)\n                return jStat.create(n, m, function () {\n                    return jStat.randn();\n                });\n            do {\n                u = jStat._random_fn();\n                v = 1.7156 * (jStat._random_fn() - 0.5);\n                x = u - 0.449871;\n                y = Math.abs(v) + 0.386595;\n                q = x * x + y * (0.196 * y - 0.25472 * x);\n            } while (q > 0.27597 && (q > 0.27846 || v * v > -4 * Math.log(u) * u * u));\n            return v / u;\n        };\n        jStat.randg = function randg(shape, n, m) {\n            var oalph = shape;\n            var a1, a2, u, v, x, mat;\n            if (!m)\n                m = n;\n            if (!shape)\n                shape = 1;\n            if (n) {\n                mat = jStat.zeros(n, m);\n                mat.alter(function () {\n                    return jStat.randg(shape);\n                });\n                return mat;\n            }\n            if (shape < 1)\n                shape += 1;\n            a1 = shape - 1 / 3;\n            a2 = 1 / Math.sqrt(9 * a1);\n            do {\n                do {\n                    x = jStat.randn();\n                    v = 1 + a2 * x;\n                } while (v <= 0);\n                v = v * v * v;\n                u = jStat._random_fn();\n            } while (u > 1 - 0.331 * Math.pow(x, 4) && Math.log(u) > 0.5 * x * x + a1 * (1 - v + Math.log(v)));\n            if (shape == oalph)\n                return a1 * v;\n            do {\n                u = jStat._random_fn();\n            } while (u === 0);\n            return Math.pow(u, 1 / oalph) * a1 * v;\n        };\n        (function (funcs) {\n            for (var i = 0; i < funcs.length; i++)\n                (function (passfunc) {\n                    jStat.fn[passfunc] = function () {\n                        return jStat(jStat.map(this, function (value) {\n                            return jStat[passfunc](value);\n                        }));\n                    };\n                }(funcs[i]));\n        }('gammaln gammafn factorial factorialln'.split(' ')));\n        (function (funcs) {\n            for (var i = 0; i < funcs.length; i++)\n                (function (passfunc) {\n                    jStat.fn[passfunc] = function () {\n                        return jStat(jStat[passfunc].apply(null, arguments));\n                    };\n                }(funcs[i]));\n        }('randn'.split(' ')));\n    }(jStat, Math));\n    (function (jStat, Math) {\n        (function (list) {\n            for (var i = 0; i < list.length; i++)\n                (function (func) {\n                    jStat[func] = function (a, b, c) {\n                        if (!(this instanceof arguments.callee))\n                            return new arguments.callee(a, b, c);\n                        this._a = a;\n                        this._b = b;\n                        this._c = c;\n                        return this;\n                    };\n                    jStat.fn[func] = function (a, b, c) {\n                        var newthis = jStat[func](a, b, c);\n                        newthis.data = this;\n                        return newthis;\n                    };\n                    jStat[func].prototype.sample = function (arr) {\n                        var a = this._a;\n                        var b = this._b;\n                        var c = this._c;\n                        if (arr)\n                            return jStat.alter(arr, function () {\n                                return jStat[func].sample(a, b, c);\n                            });\n                        else\n                            return jStat[func].sample(a, b, c);\n                    };\n                    (function (vals) {\n                        for (var i = 0; i < vals.length; i++)\n                            (function (fnfunc) {\n                                jStat[func].prototype[fnfunc] = function (x) {\n                                    var a = this._a;\n                                    var b = this._b;\n                                    var c = this._c;\n                                    if (!x && x !== 0)\n                                        x = this.data;\n                                    if (typeof x !== 'number') {\n                                        return jStat.fn.map.call(x, function (x) {\n                                            return jStat[func][fnfunc](x, a, b, c);\n                                        });\n                                    }\n                                    return jStat[func][fnfunc](x, a, b, c);\n                                };\n                            }(vals[i]));\n                    }('pdf cdf inv'.split(' ')));\n                    (function (vals) {\n                        for (var i = 0; i < vals.length; i++)\n                            (function (fnfunc) {\n                                jStat[func].prototype[fnfunc] = function () {\n                                    return jStat[func][fnfunc](this._a, this._b, this._c);\n                                };\n                            }(vals[i]));\n                    }('mean median mode variance'.split(' ')));\n                }(list[i]));\n        }(('beta centralF cauchy chisquare exponential gamma invgamma kumaraswamy ' + 'laplace lognormal noncentralt normal pareto studentt weibull uniform ' + 'binomial negbin hypgeom poisson triangular tukey arcsine').split(' ')));\n        jStat.extend(jStat.beta, {\n            pdf: function pdf(x, alpha, beta) {\n                if (x > 1 || x < 0)\n                    return 0;\n                if (alpha == 1 && beta == 1)\n                    return 1;\n                if (alpha < 512 && beta < 512) {\n                    return Math.pow(x, alpha - 1) * Math.pow(1 - x, beta - 1) / jStat.betafn(alpha, beta);\n                } else {\n                    return Math.exp((alpha - 1) * Math.log(x) + (beta - 1) * Math.log(1 - x) - jStat.betaln(alpha, beta));\n                }\n            },\n            cdf: function cdf(x, alpha, beta) {\n                return x > 1 || x < 0 ? (x > 1) * 1 : jStat.ibeta(x, alpha, beta);\n            },\n            inv: function inv(x, alpha, beta) {\n                return jStat.ibetainv(x, alpha, beta);\n            },\n            mean: function mean(alpha, beta) {\n                return alpha / (alpha + beta);\n            },\n            median: function median(alpha, beta) {\n                return jStat.ibetainv(0.5, alpha, beta);\n            },\n            mode: function mode(alpha, beta) {\n                return (alpha - 1) / (alpha + beta - 2);\n            },\n            sample: function sample(alpha, beta) {\n                var u = jStat.randg(alpha);\n                return u / (u + jStat.randg(beta));\n            },\n            variance: function variance(alpha, beta) {\n                return alpha * beta / (Math.pow(alpha + beta, 2) * (alpha + beta + 1));\n            }\n        });\n        jStat.extend(jStat.centralF, {\n            pdf: function pdf(x, df1, df2) {\n                var p, q, f;\n                if (x < 0)\n                    return 0;\n                if (df1 <= 2) {\n                    if (x === 0 && df1 < 2) {\n                        return Infinity;\n                    }\n                    if (x === 0 && df1 === 2) {\n                        return 1;\n                    }\n                    return 1 / jStat.betafn(df1 / 2, df2 / 2) * Math.pow(df1 / df2, df1 / 2) * Math.pow(x, df1 / 2 - 1) * Math.pow(1 + df1 / df2 * x, -(df1 + df2) / 2);\n                }\n                p = df1 * x / (df2 + x * df1);\n                q = df2 / (df2 + x * df1);\n                f = df1 * q / 2;\n                return f * jStat.binomial.pdf((df1 - 2) / 2, (df1 + df2 - 2) / 2, p);\n            },\n            cdf: function cdf(x, df1, df2) {\n                if (x < 0)\n                    return 0;\n                return jStat.ibeta(df1 * x / (df1 * x + df2), df1 / 2, df2 / 2);\n            },\n            inv: function inv(x, df1, df2) {\n                return df2 / (df1 * (1 / jStat.ibetainv(x, df1 / 2, df2 / 2) - 1));\n            },\n            mean: function mean(df1, df2) {\n                return df2 > 2 ? df2 / (df2 - 2) : undefined;\n            },\n            mode: function mode(df1, df2) {\n                return df1 > 2 ? df2 * (df1 - 2) / (df1 * (df2 + 2)) : undefined;\n            },\n            sample: function sample(df1, df2) {\n                var x1 = jStat.randg(df1 / 2) * 2;\n                var x2 = jStat.randg(df2 / 2) * 2;\n                return x1 / df1 / (x2 / df2);\n            },\n            variance: function variance(df1, df2) {\n                if (df2 <= 4)\n                    return undefined;\n                return 2 * df2 * df2 * (df1 + df2 - 2) / (df1 * (df2 - 2) * (df2 - 2) * (df2 - 4));\n            }\n        });\n        jStat.extend(jStat.cauchy, {\n            pdf: function pdf(x, local, scale) {\n                if (scale < 0) {\n                    return 0;\n                }\n                return scale / (Math.pow(x - local, 2) + Math.pow(scale, 2)) / Math.PI;\n            },\n            cdf: function cdf(x, local, scale) {\n                return Math.atan((x - local) / scale) / Math.PI + 0.5;\n            },\n            inv: function (p, local, scale) {\n                return local + scale * Math.tan(Math.PI * (p - 0.5));\n            },\n            median: function median(local) {\n                return local;\n            },\n            mode: function mode(local) {\n                return local;\n            },\n            sample: function sample(local, scale) {\n                return jStat.randn() * Math.sqrt(1 / (2 * jStat.randg(0.5))) * scale + local;\n            }\n        });\n        jStat.extend(jStat.chisquare, {\n            pdf: function pdf(x, dof) {\n                if (x < 0)\n                    return 0;\n                return x === 0 && dof === 2 ? 0.5 : Math.exp((dof / 2 - 1) * Math.log(x) - x / 2 - dof / 2 * Math.log(2) - jStat.gammaln(dof / 2));\n            },\n            cdf: function cdf(x, dof) {\n                if (x < 0)\n                    return 0;\n                return jStat.lowRegGamma(dof / 2, x / 2);\n            },\n            inv: function (p, dof) {\n                return 2 * jStat.gammapinv(p, 0.5 * dof);\n            },\n            mean: function (dof) {\n                return dof;\n            },\n            median: function median(dof) {\n                return dof * Math.pow(1 - 2 / (9 * dof), 3);\n            },\n            mode: function mode(dof) {\n                return dof - 2 > 0 ? dof - 2 : 0;\n            },\n            sample: function sample(dof) {\n                return jStat.randg(dof / 2) * 2;\n            },\n            variance: function variance(dof) {\n                return 2 * dof;\n            }\n        });\n        jStat.extend(jStat.exponential, {\n            pdf: function pdf(x, rate) {\n                return x < 0 ? 0 : rate * Math.exp(-rate * x);\n            },\n            cdf: function cdf(x, rate) {\n                return x < 0 ? 0 : 1 - Math.exp(-rate * x);\n            },\n            inv: function (p, rate) {\n                return -Math.log(1 - p) / rate;\n            },\n            mean: function (rate) {\n                return 1 / rate;\n            },\n            median: function (rate) {\n                return 1 / rate * Math.log(2);\n            },\n            mode: function mode() {\n                return 0;\n            },\n            sample: function sample(rate) {\n                return -1 / rate * Math.log(jStat._random_fn());\n            },\n            variance: function (rate) {\n                return Math.pow(rate, -2);\n            }\n        });\n        jStat.extend(jStat.gamma, {\n            pdf: function pdf(x, shape, scale) {\n                if (x < 0)\n                    return 0;\n                return x === 0 && shape === 1 ? 1 / scale : Math.exp((shape - 1) * Math.log(x) - x / scale - jStat.gammaln(shape) - shape * Math.log(scale));\n            },\n            cdf: function cdf(x, shape, scale) {\n                if (x < 0)\n                    return 0;\n                return jStat.lowRegGamma(shape, x / scale);\n            },\n            inv: function (p, shape, scale) {\n                return jStat.gammapinv(p, shape) * scale;\n            },\n            mean: function (shape, scale) {\n                return shape * scale;\n            },\n            mode: function mode(shape, scale) {\n                if (shape > 1)\n                    return (shape - 1) * scale;\n                return undefined;\n            },\n            sample: function sample(shape, scale) {\n                return jStat.randg(shape) * scale;\n            },\n            variance: function variance(shape, scale) {\n                return shape * scale * scale;\n            }\n        });\n        jStat.extend(jStat.invgamma, {\n            pdf: function pdf(x, shape, scale) {\n                if (x <= 0)\n                    return 0;\n                return Math.exp(-(shape + 1) * Math.log(x) - scale / x - jStat.gammaln(shape) + shape * Math.log(scale));\n            },\n            cdf: function cdf(x, shape, scale) {\n                if (x <= 0)\n                    return 0;\n                return 1 - jStat.lowRegGamma(shape, scale / x);\n            },\n            inv: function (p, shape, scale) {\n                return scale / jStat.gammapinv(1 - p, shape);\n            },\n            mean: function (shape, scale) {\n                return shape > 1 ? scale / (shape - 1) : undefined;\n            },\n            mode: function mode(shape, scale) {\n                return scale / (shape + 1);\n            },\n            sample: function sample(shape, scale) {\n                return scale / jStat.randg(shape);\n            },\n            variance: function variance(shape, scale) {\n                if (shape <= 2)\n                    return undefined;\n                return scale * scale / ((shape - 1) * (shape - 1) * (shape - 2));\n            }\n        });\n        jStat.extend(jStat.kumaraswamy, {\n            pdf: function pdf(x, alpha, beta) {\n                if (x === 0 && alpha === 1)\n                    return beta;\n                else if (x === 1 && beta === 1)\n                    return alpha;\n                return Math.exp(Math.log(alpha) + Math.log(beta) + (alpha - 1) * Math.log(x) + (beta - 1) * Math.log(1 - Math.pow(x, alpha)));\n            },\n            cdf: function cdf(x, alpha, beta) {\n                if (x < 0)\n                    return 0;\n                else if (x > 1)\n                    return 1;\n                return 1 - Math.pow(1 - Math.pow(x, alpha), beta);\n            },\n            inv: function inv(p, alpha, beta) {\n                return Math.pow(1 - Math.pow(1 - p, 1 / beta), 1 / alpha);\n            },\n            mean: function (alpha, beta) {\n                return beta * jStat.gammafn(1 + 1 / alpha) * jStat.gammafn(beta) / jStat.gammafn(1 + 1 / alpha + beta);\n            },\n            median: function median(alpha, beta) {\n                return Math.pow(1 - Math.pow(2, -1 / beta), 1 / alpha);\n            },\n            mode: function mode(alpha, beta) {\n                if (!(alpha >= 1 && beta >= 1 && (alpha !== 1 && beta !== 1)))\n                    return undefined;\n                return Math.pow((alpha - 1) / (alpha * beta - 1), 1 / alpha);\n            },\n            variance: function variance() {\n                throw new Error('variance not yet implemented');\n            }\n        });\n        jStat.extend(jStat.lognormal, {\n            pdf: function pdf(x, mu, sigma) {\n                if (x <= 0)\n                    return 0;\n                return Math.exp(-Math.log(x) - 0.5 * Math.log(2 * Math.PI) - Math.log(sigma) - Math.pow(Math.log(x) - mu, 2) / (2 * sigma * sigma));\n            },\n            cdf: function cdf(x, mu, sigma) {\n                if (x < 0)\n                    return 0;\n                return 0.5 + 0.5 * jStat.erf((Math.log(x) - mu) / Math.sqrt(2 * sigma * sigma));\n            },\n            inv: function (p, mu, sigma) {\n                return Math.exp(-1.4142135623730951 * sigma * jStat.erfcinv(2 * p) + mu);\n            },\n            mean: function mean(mu, sigma) {\n                return Math.exp(mu + sigma * sigma / 2);\n            },\n            median: function median(mu) {\n                return Math.exp(mu);\n            },\n            mode: function mode(mu, sigma) {\n                return Math.exp(mu - sigma * sigma);\n            },\n            sample: function sample(mu, sigma) {\n                return Math.exp(jStat.randn() * sigma + mu);\n            },\n            variance: function variance(mu, sigma) {\n                return (Math.exp(sigma * sigma) - 1) * Math.exp(2 * mu + sigma * sigma);\n            }\n        });\n        jStat.extend(jStat.noncentralt, {\n            pdf: function pdf(x, dof, ncp) {\n                var tol = 1e-14;\n                if (Math.abs(ncp) < tol)\n                    return jStat.studentt.pdf(x, dof);\n                if (Math.abs(x) < tol) {\n                    return Math.exp(jStat.gammaln((dof + 1) / 2) - ncp * ncp / 2 - 0.5 * Math.log(Math.PI * dof) - jStat.gammaln(dof / 2));\n                }\n                return dof / x * (jStat.noncentralt.cdf(x * Math.sqrt(1 + 2 / dof), dof + 2, ncp) - jStat.noncentralt.cdf(x, dof, ncp));\n            },\n            cdf: function cdf(x, dof, ncp) {\n                var tol = 1e-14;\n                var min_iterations = 200;\n                if (Math.abs(ncp) < tol)\n                    return jStat.studentt.cdf(x, dof);\n                var flip = false;\n                if (x < 0) {\n                    flip = true;\n                    ncp = -ncp;\n                }\n                var prob = jStat.normal.cdf(-ncp, 0, 1);\n                var value = tol + 1;\n                var lastvalue = value;\n                var y = x * x / (x * x + dof);\n                var j = 0;\n                var p = Math.exp(-ncp * ncp / 2);\n                var q = Math.exp(-ncp * ncp / 2 - 0.5 * Math.log(2) - jStat.gammaln(3 / 2)) * ncp;\n                while (j < min_iterations || lastvalue > tol || value > tol) {\n                    lastvalue = value;\n                    if (j > 0) {\n                        p *= ncp * ncp / (2 * j);\n                        q *= ncp * ncp / (2 * (j + 1 / 2));\n                    }\n                    value = p * jStat.beta.cdf(y, j + 0.5, dof / 2) + q * jStat.beta.cdf(y, j + 1, dof / 2);\n                    prob += 0.5 * value;\n                    j++;\n                }\n                return flip ? 1 - prob : prob;\n            }\n        });\n        jStat.extend(jStat.normal, {\n            pdf: function pdf(x, mean, std) {\n                return Math.exp(-0.5 * Math.log(2 * Math.PI) - Math.log(std) - Math.pow(x - mean, 2) / (2 * std * std));\n            },\n            cdf: function cdf(x, mean, std) {\n                return 0.5 * (1 + jStat.erf((x - mean) / Math.sqrt(2 * std * std)));\n            },\n            inv: function (p, mean, std) {\n                return -1.4142135623730951 * std * jStat.erfcinv(2 * p) + mean;\n            },\n            mean: function (mean) {\n                return mean;\n            },\n            median: function median(mean) {\n                return mean;\n            },\n            mode: function (mean) {\n                return mean;\n            },\n            sample: function sample(mean, std) {\n                return jStat.randn() * std + mean;\n            },\n            variance: function (mean, std) {\n                return std * std;\n            }\n        });\n        jStat.extend(jStat.pareto, {\n            pdf: function pdf(x, scale, shape) {\n                if (x < scale)\n                    return 0;\n                return shape * Math.pow(scale, shape) / Math.pow(x, shape + 1);\n            },\n            cdf: function cdf(x, scale, shape) {\n                if (x < scale)\n                    return 0;\n                return 1 - Math.pow(scale / x, shape);\n            },\n            inv: function inv(p, scale, shape) {\n                return scale / Math.pow(1 - p, 1 / shape);\n            },\n            mean: function mean(scale, shape) {\n                if (shape <= 1)\n                    return undefined;\n                return shape * Math.pow(scale, shape) / (shape - 1);\n            },\n            median: function median(scale, shape) {\n                return scale * (shape * Math.SQRT2);\n            },\n            mode: function mode(scale) {\n                return scale;\n            },\n            variance: function (scale, shape) {\n                if (shape <= 2)\n                    return undefined;\n                return scale * scale * shape / (Math.pow(shape - 1, 2) * (shape - 2));\n            }\n        });\n        jStat.extend(jStat.studentt, {\n            pdf: function pdf(x, dof) {\n                dof = dof > 1e+100 ? 1e+100 : dof;\n                return 1 / (Math.sqrt(dof) * jStat.betafn(0.5, dof / 2)) * Math.pow(1 + x * x / dof, -((dof + 1) / 2));\n            },\n            cdf: function cdf(x, dof) {\n                var dof2 = dof / 2;\n                return jStat.ibeta((x + Math.sqrt(x * x + dof)) / (2 * Math.sqrt(x * x + dof)), dof2, dof2);\n            },\n            inv: function (p, dof) {\n                var x = jStat.ibetainv(2 * Math.min(p, 1 - p), 0.5 * dof, 0.5);\n                x = Math.sqrt(dof * (1 - x) / x);\n                return p > 0.5 ? x : -x;\n            },\n            mean: function mean(dof) {\n                return dof > 1 ? 0 : undefined;\n            },\n            median: function median() {\n                return 0;\n            },\n            mode: function mode() {\n                return 0;\n            },\n            sample: function sample(dof) {\n                return jStat.randn() * Math.sqrt(dof / (2 * jStat.randg(dof / 2)));\n            },\n            variance: function variance(dof) {\n                return dof > 2 ? dof / (dof - 2) : dof > 1 ? Infinity : undefined;\n            }\n        });\n        jStat.extend(jStat.weibull, {\n            pdf: function pdf(x, scale, shape) {\n                if (x < 0 || scale < 0 || shape < 0)\n                    return 0;\n                return shape / scale * Math.pow(x / scale, shape - 1) * Math.exp(-Math.pow(x / scale, shape));\n            },\n            cdf: function cdf(x, scale, shape) {\n                return x < 0 ? 0 : 1 - Math.exp(-Math.pow(x / scale, shape));\n            },\n            inv: function (p, scale, shape) {\n                return scale * Math.pow(-Math.log(1 - p), 1 / shape);\n            },\n            mean: function (scale, shape) {\n                return scale * jStat.gammafn(1 + 1 / shape);\n            },\n            median: function median(scale, shape) {\n                return scale * Math.pow(Math.log(2), 1 / shape);\n            },\n            mode: function mode(scale, shape) {\n                if (shape <= 1)\n                    return 0;\n                return scale * Math.pow((shape - 1) / shape, 1 / shape);\n            },\n            sample: function sample(scale, shape) {\n                return scale * Math.pow(-Math.log(jStat._random_fn()), 1 / shape);\n            },\n            variance: function variance(scale, shape) {\n                return scale * scale * jStat.gammafn(1 + 2 / shape) - Math.pow(jStat.weibull.mean(scale, shape), 2);\n            }\n        });\n        jStat.extend(jStat.uniform, {\n            pdf: function pdf(x, a, b) {\n                return x < a || x > b ? 0 : 1 / (b - a);\n            },\n            cdf: function cdf(x, a, b) {\n                if (x < a)\n                    return 0;\n                else if (x < b)\n                    return (x - a) / (b - a);\n                return 1;\n            },\n            inv: function (p, a, b) {\n                return a + p * (b - a);\n            },\n            mean: function mean(a, b) {\n                return 0.5 * (a + b);\n            },\n            median: function median(a, b) {\n                return jStat.mean(a, b);\n            },\n            mode: function mode() {\n                throw new Error('mode is not yet implemented');\n            },\n            sample: function sample(a, b) {\n                return a / 2 + b / 2 + (b / 2 - a / 2) * (2 * jStat._random_fn() - 1);\n            },\n            variance: function variance(a, b) {\n                return Math.pow(b - a, 2) / 12;\n            }\n        });\n        function betinc(x, a, b, eps) {\n            var a0 = 0;\n            var b0 = 1;\n            var a1 = 1;\n            var b1 = 1;\n            var m9 = 0;\n            var a2 = 0;\n            var c9;\n            while (Math.abs((a1 - a2) / a1) > eps) {\n                a2 = a1;\n                c9 = -(a + m9) * (a + b + m9) * x / (a + 2 * m9) / (a + 2 * m9 + 1);\n                a0 = a1 + c9 * a0;\n                b0 = b1 + c9 * b0;\n                m9 = m9 + 1;\n                c9 = m9 * (b - m9) * x / (a + 2 * m9 - 1) / (a + 2 * m9);\n                a1 = a0 + c9 * a1;\n                b1 = b0 + c9 * b1;\n                a0 = a0 / b1;\n                b0 = b0 / b1;\n                a1 = a1 / b1;\n                b1 = 1;\n            }\n            return a1 / a;\n        }\n        jStat.extend(jStat.binomial, {\n            pdf: function pdf(k, n, p) {\n                return p === 0 || p === 1 ? n * p === k ? 1 : 0 : jStat.combination(n, k) * Math.pow(p, k) * Math.pow(1 - p, n - k);\n            },\n            cdf: function cdf(x, n, p) {\n                var betacdf;\n                var eps = 1e-10;\n                if (x < 0)\n                    return 0;\n                if (x >= n)\n                    return 1;\n                if (p < 0 || p > 1 || n <= 0)\n                    return NaN;\n                x = Math.floor(x);\n                var z = p;\n                var a = x + 1;\n                var b = n - x;\n                var s = a + b;\n                var bt = Math.exp(jStat.gammaln(s) - jStat.gammaln(b) - jStat.gammaln(a) + a * Math.log(z) + b * Math.log(1 - z));\n                if (z < (a + 1) / (s + 2))\n                    betacdf = bt * betinc(z, a, b, eps);\n                else\n                    betacdf = 1 - bt * betinc(1 - z, b, a, eps);\n                return Math.round((1 - betacdf) * (1 / eps)) / (1 / eps);\n            }\n        });\n        jStat.extend(jStat.negbin, {\n            pdf: function pdf(k, r, p) {\n                if (k !== k >>> 0)\n                    return false;\n                if (k < 0)\n                    return 0;\n                return jStat.combination(k + r - 1, r - 1) * Math.pow(1 - p, k) * Math.pow(p, r);\n            },\n            cdf: function cdf(x, r, p) {\n                var sum = 0, k = 0;\n                if (x < 0)\n                    return 0;\n                for (; k <= x; k++) {\n                    sum += jStat.negbin.pdf(k, r, p);\n                }\n                return sum;\n            }\n        });\n        jStat.extend(jStat.hypgeom, {\n            pdf: function pdf(k, N, m, n) {\n                if (k !== k | 0) {\n                    return false;\n                } else if (k < 0 || k < m - (N - n)) {\n                    return 0;\n                } else if (k > n || k > m) {\n                    return 0;\n                } else if (m * 2 > N) {\n                    if (n * 2 > N) {\n                        return jStat.hypgeom.pdf(N - m - n + k, N, N - m, N - n);\n                    } else {\n                        return jStat.hypgeom.pdf(n - k, N, N - m, n);\n                    }\n                } else if (n * 2 > N) {\n                    return jStat.hypgeom.pdf(m - k, N, m, N - n);\n                } else if (m < n) {\n                    return jStat.hypgeom.pdf(k, N, n, m);\n                } else {\n                    var scaledPDF = 1;\n                    var samplesDone = 0;\n                    for (var i = 0; i < k; i++) {\n                        while (scaledPDF > 1 && samplesDone < n) {\n                            scaledPDF *= 1 - m / (N - samplesDone);\n                            samplesDone++;\n                        }\n                        scaledPDF *= (n - i) * (m - i) / ((i + 1) * (N - m - n + i + 1));\n                    }\n                    for (; samplesDone < n; samplesDone++) {\n                        scaledPDF *= 1 - m / (N - samplesDone);\n                    }\n                    return Math.min(1, Math.max(0, scaledPDF));\n                }\n            },\n            cdf: function cdf(x, N, m, n) {\n                if (x < 0 || x < m - (N - n)) {\n                    return 0;\n                } else if (x >= n || x >= m) {\n                    return 1;\n                } else if (m * 2 > N) {\n                    if (n * 2 > N) {\n                        return jStat.hypgeom.cdf(N - m - n + x, N, N - m, N - n);\n                    } else {\n                        return 1 - jStat.hypgeom.cdf(n - x - 1, N, N - m, n);\n                    }\n                } else if (n * 2 > N) {\n                    return 1 - jStat.hypgeom.cdf(m - x - 1, N, m, N - n);\n                } else if (m < n) {\n                    return jStat.hypgeom.cdf(x, N, n, m);\n                } else {\n                    var scaledCDF = 1;\n                    var scaledPDF = 1;\n                    var samplesDone = 0;\n                    for (var i = 0; i < x; i++) {\n                        while (scaledCDF > 1 && samplesDone < n) {\n                            var factor = 1 - m / (N - samplesDone);\n                            scaledPDF *= factor;\n                            scaledCDF *= factor;\n                            samplesDone++;\n                        }\n                        scaledPDF *= (n - i) * (m - i) / ((i + 1) * (N - m - n + i + 1));\n                        scaledCDF += scaledPDF;\n                    }\n                    for (; samplesDone < n; samplesDone++) {\n                        scaledCDF *= 1 - m / (N - samplesDone);\n                    }\n                    return Math.min(1, Math.max(0, scaledCDF));\n                }\n            }\n        });\n        jStat.extend(jStat.poisson, {\n            pdf: function pdf(k, l) {\n                if (l < 0 || k % 1 !== 0 || k < 0) {\n                    return 0;\n                }\n                return Math.pow(l, k) * Math.exp(-l) / jStat.factorial(k);\n            },\n            cdf: function cdf(x, l) {\n                var sumarr = [], k = 0;\n                if (x < 0)\n                    return 0;\n                for (; k <= x; k++) {\n                    sumarr.push(jStat.poisson.pdf(k, l));\n                }\n                return jStat.sum(sumarr);\n            },\n            mean: function (l) {\n                return l;\n            },\n            variance: function (l) {\n                return l;\n            },\n            sampleSmall: function sampleSmall(l) {\n                var p = 1, k = 0, L = Math.exp(-l);\n                do {\n                    k++;\n                    p *= jStat._random_fn();\n                } while (p > L);\n                return k - 1;\n            },\n            sampleLarge: function sampleLarge(l) {\n                var lam = l;\n                var k;\n                var U, V, slam, loglam, a, b, invalpha, vr, us;\n                slam = Math.sqrt(lam);\n                loglam = Math.log(lam);\n                b = 0.931 + 2.53 * slam;\n                a = -0.059 + 0.02483 * b;\n                invalpha = 1.1239 + 1.1328 / (b - 3.4);\n                vr = 0.9277 - 3.6224 / (b - 2);\n                while (1) {\n                    U = Math.random() - 0.5;\n                    V = Math.random();\n                    us = 0.5 - Math.abs(U);\n                    k = Math.floor((2 * a / us + b) * U + lam + 0.43);\n                    if (us >= 0.07 && V <= vr) {\n                        return k;\n                    }\n                    if (k < 0 || us < 0.013 && V > us) {\n                        continue;\n                    }\n                    if (Math.log(V) + Math.log(invalpha) - Math.log(a / (us * us) + b) <= -lam + k * loglam - jStat.loggam(k + 1)) {\n                        return k;\n                    }\n                }\n            },\n            sample: function sample(l) {\n                if (l < 10)\n                    return this.sampleSmall(l);\n                else\n                    return this.sampleLarge(l);\n            }\n        });\n        jStat.extend(jStat.triangular, {\n            pdf: function pdf(x, a, b, c) {\n                if (b <= a || c < a || c > b) {\n                    return NaN;\n                } else {\n                    if (x < a || x > b) {\n                        return 0;\n                    } else if (x < c) {\n                        return 2 * (x - a) / ((b - a) * (c - a));\n                    } else if (x === c) {\n                        return 2 / (b - a);\n                    } else {\n                        return 2 * (b - x) / ((b - a) * (b - c));\n                    }\n                }\n            },\n            cdf: function cdf(x, a, b, c) {\n                if (b <= a || c < a || c > b)\n                    return NaN;\n                if (x <= a)\n                    return 0;\n                else if (x >= b)\n                    return 1;\n                if (x <= c)\n                    return Math.pow(x - a, 2) / ((b - a) * (c - a));\n                else\n                    return 1 - Math.pow(b - x, 2) / ((b - a) * (b - c));\n            },\n            inv: function inv(p, a, b, c) {\n                if (b <= a || c < a || c > b) {\n                    return NaN;\n                } else {\n                    if (p <= (c - a) / (b - a)) {\n                        return a + (b - a) * Math.sqrt(p * ((c - a) / (b - a)));\n                    } else {\n                        return a + (b - a) * (1 - Math.sqrt((1 - p) * (1 - (c - a) / (b - a))));\n                    }\n                }\n            },\n            mean: function mean(a, b, c) {\n                return (a + b + c) / 3;\n            },\n            median: function median(a, b, c) {\n                if (c <= (a + b) / 2) {\n                    return b - Math.sqrt((b - a) * (b - c)) / Math.sqrt(2);\n                } else if (c > (a + b) / 2) {\n                    return a + Math.sqrt((b - a) * (c - a)) / Math.sqrt(2);\n                }\n            },\n            mode: function mode(a, b, c) {\n                return c;\n            },\n            sample: function sample(a, b, c) {\n                var u = jStat._random_fn();\n                if (u < (c - a) / (b - a))\n                    return a + Math.sqrt(u * (b - a) * (c - a));\n                return b - Math.sqrt((1 - u) * (b - a) * (b - c));\n            },\n            variance: function variance(a, b, c) {\n                return (a * a + b * b + c * c - a * b - a * c - b * c) / 18;\n            }\n        });\n        jStat.extend(jStat.arcsine, {\n            pdf: function pdf(x, a, b) {\n                if (b <= a)\n                    return NaN;\n                return x <= a || x >= b ? 0 : 2 / Math.PI * Math.pow(Math.pow(b - a, 2) - Math.pow(2 * x - a - b, 2), -0.5);\n            },\n            cdf: function cdf(x, a, b) {\n                if (x < a)\n                    return 0;\n                else if (x < b)\n                    return 2 / Math.PI * Math.asin(Math.sqrt((x - a) / (b - a)));\n                return 1;\n            },\n            inv: function (p, a, b) {\n                return a + (0.5 - 0.5 * Math.cos(Math.PI * p)) * (b - a);\n            },\n            mean: function mean(a, b) {\n                if (b <= a)\n                    return NaN;\n                return (a + b) / 2;\n            },\n            median: function median(a, b) {\n                if (b <= a)\n                    return NaN;\n                return (a + b) / 2;\n            },\n            mode: function mode() {\n                throw new Error('mode is not yet implemented');\n            },\n            sample: function sample(a, b) {\n                return (a + b) / 2 + (b - a) / 2 * Math.sin(2 * Math.PI * jStat.uniform.sample(0, 1));\n            },\n            variance: function variance(a, b) {\n                if (b <= a)\n                    return NaN;\n                return Math.pow(b - a, 2) / 8;\n            }\n        });\n        function laplaceSign(x) {\n            return x / Math.abs(x);\n        }\n        jStat.extend(jStat.laplace, {\n            pdf: function pdf(x, mu, b) {\n                return b <= 0 ? 0 : Math.exp(-Math.abs(x - mu) / b) / (2 * b);\n            },\n            cdf: function cdf(x, mu, b) {\n                if (b <= 0) {\n                    return 0;\n                }\n                if (x < mu) {\n                    return 0.5 * Math.exp((x - mu) / b);\n                } else {\n                    return 1 - 0.5 * Math.exp(-(x - mu) / b);\n                }\n            },\n            mean: function (mu) {\n                return mu;\n            },\n            median: function (mu) {\n                return mu;\n            },\n            mode: function (mu) {\n                return mu;\n            },\n            variance: function (mu, b) {\n                return 2 * b * b;\n            },\n            sample: function sample(mu, b) {\n                var u = jStat._random_fn() - 0.5;\n                return mu - b * laplaceSign(u) * Math.log(1 - 2 * Math.abs(u));\n            }\n        });\n        function tukeyWprob(w, rr, cc) {\n            var nleg = 12;\n            var ihalf = 6;\n            var C1 = -30;\n            var C2 = -50;\n            var C3 = 60;\n            var bb = 8;\n            var wlar = 3;\n            var wincr1 = 2;\n            var wincr2 = 3;\n            var xleg = [\n                0.9815606342467192,\n                0.9041172563704749,\n                0.7699026741943047,\n                0.5873179542866175,\n                0.3678314989981802,\n                0.1252334085114689\n            ];\n            var aleg = [\n                0.04717533638651183,\n                0.10693932599531843,\n                0.16007832854334622,\n                0.20316742672306592,\n                0.2334925365383548,\n                0.24914704581340277\n            ];\n            var qsqz = w * 0.5;\n            if (qsqz >= bb)\n                return 1;\n            var pr_w = 2 * jStat.normal.cdf(qsqz, 0, 1, 1, 0) - 1;\n            if (pr_w >= Math.exp(C2 / cc))\n                pr_w = Math.pow(pr_w, cc);\n            else\n                pr_w = 0;\n            var wincr;\n            if (w > wlar)\n                wincr = wincr1;\n            else\n                wincr = wincr2;\n            var blb = qsqz;\n            var binc = (bb - qsqz) / wincr;\n            var bub = blb + binc;\n            var einsum = 0;\n            var cc1 = cc - 1;\n            for (var wi = 1; wi <= wincr; wi++) {\n                var elsum = 0;\n                var a = 0.5 * (bub + blb);\n                var b = 0.5 * (bub - blb);\n                for (var jj = 1; jj <= nleg; jj++) {\n                    var j, xx;\n                    if (ihalf < jj) {\n                        j = nleg - jj + 1;\n                        xx = xleg[j - 1];\n                    } else {\n                        j = jj;\n                        xx = -xleg[j - 1];\n                    }\n                    var c = b * xx;\n                    var ac = a + c;\n                    var qexpo = ac * ac;\n                    if (qexpo > C3)\n                        break;\n                    var pplus = 2 * jStat.normal.cdf(ac, 0, 1, 1, 0);\n                    var pminus = 2 * jStat.normal.cdf(ac, w, 1, 1, 0);\n                    var rinsum = pplus * 0.5 - pminus * 0.5;\n                    if (rinsum >= Math.exp(C1 / cc1)) {\n                        rinsum = aleg[j - 1] * Math.exp(-(0.5 * qexpo)) * Math.pow(rinsum, cc1);\n                        elsum += rinsum;\n                    }\n                }\n                elsum *= 2 * b * cc / Math.sqrt(2 * Math.PI);\n                einsum += elsum;\n                blb = bub;\n                bub += binc;\n            }\n            pr_w += einsum;\n            if (pr_w <= Math.exp(C1 / rr))\n                return 0;\n            pr_w = Math.pow(pr_w, rr);\n            if (pr_w >= 1)\n                return 1;\n            return pr_w;\n        }\n        function tukeyQinv(p, c, v) {\n            var p0 = 0.322232421088;\n            var q0 = 0.099348462606;\n            var p1 = -1;\n            var q1 = 0.588581570495;\n            var p2 = -0.342242088547;\n            var q2 = 0.531103462366;\n            var p3 = -0.204231210125;\n            var q3 = 0.10353775285;\n            var p4 = -0.0000453642210148;\n            var q4 = 0.0038560700634;\n            var c1 = 0.8832;\n            var c2 = 0.2368;\n            var c3 = 1.214;\n            var c4 = 1.208;\n            var c5 = 1.4142;\n            var vmax = 120;\n            var ps = 0.5 - 0.5 * p;\n            var yi = Math.sqrt(Math.log(1 / (ps * ps)));\n            var t = yi + ((((yi * p4 + p3) * yi + p2) * yi + p1) * yi + p0) / ((((yi * q4 + q3) * yi + q2) * yi + q1) * yi + q0);\n            if (v < vmax)\n                t += (t * t * t + t) / v / 4;\n            var q = c1 - c2 * t;\n            if (v < vmax)\n                q += -c3 / v + c4 * t / v;\n            return t * (q * Math.log(c - 1) + c5);\n        }\n        jStat.extend(jStat.tukey, {\n            cdf: function cdf(q, nmeans, df) {\n                var rr = 1;\n                var cc = nmeans;\n                var nlegq = 16;\n                var ihalfq = 8;\n                var eps1 = -30;\n                var eps2 = 1e-14;\n                var dhaf = 100;\n                var dquar = 800;\n                var deigh = 5000;\n                var dlarg = 25000;\n                var ulen1 = 1;\n                var ulen2 = 0.5;\n                var ulen3 = 0.25;\n                var ulen4 = 0.125;\n                var xlegq = [\n                    0.9894009349916499,\n                    0.9445750230732326,\n                    0.8656312023878318,\n                    0.755404408355003,\n                    0.6178762444026438,\n                    0.45801677765722737,\n                    0.2816035507792589,\n                    0.09501250983763744\n                ];\n                var alegq = [\n                    0.027152459411754096,\n                    0.062253523938647894,\n                    0.09515851168249279,\n                    0.12462897125553388,\n                    0.14959598881657674,\n                    0.16915651939500254,\n                    0.18260341504492358,\n                    0.1894506104550685\n                ];\n                if (q <= 0)\n                    return 0;\n                if (df < 2 || rr < 1 || cc < 2)\n                    return NaN;\n                if (!Number.isFinite(q))\n                    return 1;\n                if (df > dlarg)\n                    return tukeyWprob(q, rr, cc);\n                var f2 = df * 0.5;\n                var f2lf = f2 * Math.log(df) - df * Math.log(2) - jStat.gammaln(f2);\n                var f21 = f2 - 1;\n                var ff4 = df * 0.25;\n                var ulen;\n                if (df <= dhaf)\n                    ulen = ulen1;\n                else if (df <= dquar)\n                    ulen = ulen2;\n                else if (df <= deigh)\n                    ulen = ulen3;\n                else\n                    ulen = ulen4;\n                f2lf += Math.log(ulen);\n                var ans = 0;\n                for (var i = 1; i <= 50; i++) {\n                    var otsum = 0;\n                    var twa1 = (2 * i - 1) * ulen;\n                    for (var jj = 1; jj <= nlegq; jj++) {\n                        var j, t1;\n                        if (ihalfq < jj) {\n                            j = jj - ihalfq - 1;\n                            t1 = f2lf + f21 * Math.log(twa1 + xlegq[j] * ulen) - (xlegq[j] * ulen + twa1) * ff4;\n                        } else {\n                            j = jj - 1;\n                            t1 = f2lf + f21 * Math.log(twa1 - xlegq[j] * ulen) + (xlegq[j] * ulen - twa1) * ff4;\n                        }\n                        var qsqz;\n                        if (t1 >= eps1) {\n                            if (ihalfq < jj) {\n                                qsqz = q * Math.sqrt((xlegq[j] * ulen + twa1) * 0.5);\n                            } else {\n                                qsqz = q * Math.sqrt((-(xlegq[j] * ulen) + twa1) * 0.5);\n                            }\n                            var wprb = tukeyWprob(qsqz, rr, cc);\n                            var rotsum = wprb * alegq[j] * Math.exp(t1);\n                            otsum += rotsum;\n                        }\n                    }\n                    if (i * ulen >= 1 && otsum <= eps2)\n                        break;\n                    ans += otsum;\n                }\n                if (otsum > eps2) {\n                    throw new Error('tukey.cdf failed to converge');\n                }\n                if (ans > 1)\n                    ans = 1;\n                return ans;\n            },\n            inv: function (p, nmeans, df) {\n                var rr = 1;\n                var cc = nmeans;\n                var eps = 0.0001;\n                var maxiter = 50;\n                if (df < 2 || rr < 1 || cc < 2)\n                    return NaN;\n                if (p < 0 || p > 1)\n                    return NaN;\n                if (p === 0)\n                    return 0;\n                if (p === 1)\n                    return Infinity;\n                var x0 = tukeyQinv(p, cc, df);\n                var valx0 = jStat.tukey.cdf(x0, nmeans, df) - p;\n                var x1;\n                if (valx0 > 0)\n                    x1 = Math.max(0, x0 - 1);\n                else\n                    x1 = x0 + 1;\n                var valx1 = jStat.tukey.cdf(x1, nmeans, df) - p;\n                var ans;\n                for (var iter = 1; iter < maxiter; iter++) {\n                    ans = x1 - valx1 * (x1 - x0) / (valx1 - valx0);\n                    valx0 = valx1;\n                    x0 = x1;\n                    if (ans < 0) {\n                        ans = 0;\n                        valx1 = -p;\n                    }\n                    valx1 = jStat.tukey.cdf(ans, nmeans, df) - p;\n                    x1 = ans;\n                    var xabs = Math.abs(x1 - x0);\n                    if (xabs < eps)\n                        return ans;\n                }\n                throw new Error('tukey.inv failed to converge');\n            }\n        });\n    }(jStat, Math));\n    (function (jStat, Math) {\n        var push = Array.prototype.push;\n        var isArray = jStat.utils.isArray;\n        function isUsable(arg) {\n            return isArray(arg) || arg instanceof jStat;\n        }\n        jStat.extend({\n            add: function add(arr, arg) {\n                if (isUsable(arg)) {\n                    if (!isUsable(arg[0]))\n                        arg = [arg];\n                    return jStat.map(arr, function (value, row, col) {\n                        return value + arg[row][col];\n                    });\n                }\n                return jStat.map(arr, function (value) {\n                    return value + arg;\n                });\n            },\n            subtract: function subtract(arr, arg) {\n                if (isUsable(arg)) {\n                    if (!isUsable(arg[0]))\n                        arg = [arg];\n                    return jStat.map(arr, function (value, row, col) {\n                        return value - arg[row][col] || 0;\n                    });\n                }\n                return jStat.map(arr, function (value) {\n                    return value - arg;\n                });\n            },\n            divide: function divide(arr, arg) {\n                if (isUsable(arg)) {\n                    if (!isUsable(arg[0]))\n                        arg = [arg];\n                    return jStat.multiply(arr, jStat.inv(arg));\n                }\n                return jStat.map(arr, function (value) {\n                    return value / arg;\n                });\n            },\n            multiply: function multiply(arr, arg) {\n                var row, col, nrescols, sum, nrow, ncol, res, rescols;\n                if (arr.length === undefined && arg.length === undefined) {\n                    return arr * arg;\n                }\n                nrow = arr.length, ncol = arr[0].length, res = jStat.zeros(nrow, nrescols = isUsable(arg) ? arg[0].length : ncol), rescols = 0;\n                if (isUsable(arg)) {\n                    for (; rescols < nrescols; rescols++) {\n                        for (row = 0; row < nrow; row++) {\n                            sum = 0;\n                            for (col = 0; col < ncol; col++)\n                                sum += arr[row][col] * arg[col][rescols];\n                            res[row][rescols] = sum;\n                        }\n                    }\n                    return nrow === 1 && rescols === 1 ? res[0][0] : res;\n                }\n                return jStat.map(arr, function (value) {\n                    return value * arg;\n                });\n            },\n            outer: function outer(A, B) {\n                return jStat.multiply(A.map(function (t) {\n                    return [t];\n                }), [B]);\n            },\n            dot: function dot(arr, arg) {\n                if (!isUsable(arr[0]))\n                    arr = [arr];\n                if (!isUsable(arg[0]))\n                    arg = [arg];\n                var left = arr[0].length === 1 && arr.length !== 1 ? jStat.transpose(arr) : arr, right = arg[0].length === 1 && arg.length !== 1 ? jStat.transpose(arg) : arg, res = [], row = 0, nrow = left.length, ncol = left[0].length, sum, col;\n                for (; row < nrow; row++) {\n                    res[row] = [];\n                    sum = 0;\n                    for (col = 0; col < ncol; col++)\n                        sum += left[row][col] * right[row][col];\n                    res[row] = sum;\n                }\n                return res.length === 1 ? res[0] : res;\n            },\n            pow: function pow(arr, arg) {\n                return jStat.map(arr, function (value) {\n                    return Math.pow(value, arg);\n                });\n            },\n            exp: function exp(arr) {\n                return jStat.map(arr, function (value) {\n                    return Math.exp(value);\n                });\n            },\n            log: function exp(arr) {\n                return jStat.map(arr, function (value) {\n                    return Math.log(value);\n                });\n            },\n            abs: function abs(arr) {\n                return jStat.map(arr, function (value) {\n                    return Math.abs(value);\n                });\n            },\n            norm: function norm(arr, p) {\n                var nnorm = 0, i = 0;\n                if (isNaN(p))\n                    p = 2;\n                if (isUsable(arr[0]))\n                    arr = arr[0];\n                for (; i < arr.length; i++) {\n                    nnorm += Math.pow(Math.abs(arr[i]), p);\n                }\n                return Math.pow(nnorm, 1 / p);\n            },\n            angle: function angle(arr, arg) {\n                return Math.acos(jStat.dot(arr, arg) / (jStat.norm(arr) * jStat.norm(arg)));\n            },\n            aug: function aug(a, b) {\n                var newarr = [];\n                var i;\n                for (i = 0; i < a.length; i++) {\n                    newarr.push(a[i].slice());\n                }\n                for (i = 0; i < newarr.length; i++) {\n                    push.apply(newarr[i], b[i]);\n                }\n                return newarr;\n            },\n            inv: function inv(a) {\n                var rows = a.length;\n                var cols = a[0].length;\n                var b = jStat.identity(rows, cols);\n                var c = jStat.gauss_jordan(a, b);\n                var result = [];\n                var i = 0;\n                var j;\n                for (; i < rows; i++) {\n                    result[i] = [];\n                    for (j = cols; j < c[0].length; j++)\n                        result[i][j - cols] = c[i][j];\n                }\n                return result;\n            },\n            det: function det(a) {\n                var alen = a.length, alend = alen * 2, vals = new Array(alend), rowshift = alen - 1, colshift = alend - 1, mrow = rowshift - alen + 1, mcol = colshift, i = 0, result = 0, j;\n                if (alen === 2) {\n                    return a[0][0] * a[1][1] - a[0][1] * a[1][0];\n                }\n                for (; i < alend; i++) {\n                    vals[i] = 1;\n                }\n                for (i = 0; i < alen; i++) {\n                    for (j = 0; j < alen; j++) {\n                        vals[mrow < 0 ? mrow + alen : mrow] *= a[i][j];\n                        vals[mcol < alen ? mcol + alen : mcol] *= a[i][j];\n                        mrow++;\n                        mcol--;\n                    }\n                    mrow = --rowshift - alen + 1;\n                    mcol = --colshift;\n                }\n                for (i = 0; i < alen; i++) {\n                    result += vals[i];\n                }\n                for (; i < alend; i++) {\n                    result -= vals[i];\n                }\n                return result;\n            },\n            gauss_elimination: function gauss_elimination(a, b) {\n                var i = 0, j = 0, n = a.length, m = a[0].length, factor = 1, sum = 0, x = [], maug, pivot, temp, k;\n                a = jStat.aug(a, b);\n                maug = a[0].length;\n                for (i = 0; i < n; i++) {\n                    pivot = a[i][i];\n                    j = i;\n                    for (k = i + 1; k < m; k++) {\n                        if (pivot < Math.abs(a[k][i])) {\n                            pivot = a[k][i];\n                            j = k;\n                        }\n                    }\n                    if (j != i) {\n                        for (k = 0; k < maug; k++) {\n                            temp = a[i][k];\n                            a[i][k] = a[j][k];\n                            a[j][k] = temp;\n                        }\n                    }\n                    for (j = i + 1; j < n; j++) {\n                        factor = a[j][i] / a[i][i];\n                        for (k = i; k < maug; k++) {\n                            a[j][k] = a[j][k] - factor * a[i][k];\n                        }\n                    }\n                }\n                for (i = n - 1; i >= 0; i--) {\n                    sum = 0;\n                    for (j = i + 1; j <= n - 1; j++) {\n                        sum = sum + x[j] * a[i][j];\n                    }\n                    x[i] = (a[i][maug - 1] - sum) / a[i][i];\n                }\n                return x;\n            },\n            gauss_jordan: function gauss_jordan(a, b) {\n                var m = jStat.aug(a, b);\n                var h = m.length;\n                var w = m[0].length;\n                var c = 0;\n                var x, y, y2;\n                for (y = 0; y < h; y++) {\n                    var maxrow = y;\n                    for (y2 = y + 1; y2 < h; y2++) {\n                        if (Math.abs(m[y2][y]) > Math.abs(m[maxrow][y]))\n                            maxrow = y2;\n                    }\n                    var tmp = m[y];\n                    m[y] = m[maxrow];\n                    m[maxrow] = tmp;\n                    for (y2 = y + 1; y2 < h; y2++) {\n                        c = m[y2][y] / m[y][y];\n                        for (x = y; x < w; x++) {\n                            m[y2][x] -= m[y][x] * c;\n                        }\n                    }\n                }\n                for (y = h - 1; y >= 0; y--) {\n                    c = m[y][y];\n                    for (y2 = 0; y2 < y; y2++) {\n                        for (x = w - 1; x > y - 1; x--) {\n                            m[y2][x] -= m[y][x] * m[y2][y] / c;\n                        }\n                    }\n                    m[y][y] /= c;\n                    for (x = h; x < w; x++) {\n                        m[y][x] /= c;\n                    }\n                }\n                return m;\n            },\n            triaUpSolve: function triaUpSolve(A, b) {\n                var size = A[0].length;\n                var x = jStat.zeros(1, size)[0];\n                var parts;\n                var matrix_mode = false;\n                if (b[0].length != undefined) {\n                    b = b.map(function (i) {\n                        return i[0];\n                    });\n                    matrix_mode = true;\n                }\n                jStat.arange(size - 1, -1, -1).forEach(function (i) {\n                    parts = jStat.arange(i + 1, size).map(function (j) {\n                        return x[j] * A[i][j];\n                    });\n                    x[i] = (b[i] - jStat.sum(parts)) / A[i][i];\n                });\n                if (matrix_mode)\n                    return x.map(function (i) {\n                        return [i];\n                    });\n                return x;\n            },\n            triaLowSolve: function triaLowSolve(A, b) {\n                var size = A[0].length;\n                var x = jStat.zeros(1, size)[0];\n                var parts;\n                var matrix_mode = false;\n                if (b[0].length != undefined) {\n                    b = b.map(function (i) {\n                        return i[0];\n                    });\n                    matrix_mode = true;\n                }\n                jStat.arange(size).forEach(function (i) {\n                    parts = jStat.arange(i).map(function (j) {\n                        return A[i][j] * x[j];\n                    });\n                    x[i] = (b[i] - jStat.sum(parts)) / A[i][i];\n                });\n                if (matrix_mode)\n                    return x.map(function (i) {\n                        return [i];\n                    });\n                return x;\n            },\n            lu: function lu(A) {\n                var size = A.length;\n                var L = jStat.identity(size);\n                var R = jStat.zeros(A.length, A[0].length);\n                var parts;\n                jStat.arange(size).forEach(function (t) {\n                    R[0][t] = A[0][t];\n                });\n                jStat.arange(1, size).forEach(function (l) {\n                    jStat.arange(l).forEach(function (i) {\n                        parts = jStat.arange(i).map(function (jj) {\n                            return L[l][jj] * R[jj][i];\n                        });\n                        L[l][i] = (A[l][i] - jStat.sum(parts)) / R[i][i];\n                    });\n                    jStat.arange(l, size).forEach(function (j) {\n                        parts = jStat.arange(l).map(function (jj) {\n                            return L[l][jj] * R[jj][j];\n                        });\n                        R[l][j] = A[parts.length][j] - jStat.sum(parts);\n                    });\n                });\n                return [\n                    L,\n                    R\n                ];\n            },\n            cholesky: function cholesky(A) {\n                var size = A.length;\n                var T = jStat.zeros(A.length, A[0].length);\n                var parts;\n                jStat.arange(size).forEach(function (i) {\n                    parts = jStat.arange(i).map(function (t) {\n                        return Math.pow(T[i][t], 2);\n                    });\n                    T[i][i] = Math.sqrt(A[i][i] - jStat.sum(parts));\n                    jStat.arange(i + 1, size).forEach(function (j) {\n                        parts = jStat.arange(i).map(function (t) {\n                            return T[i][t] * T[j][t];\n                        });\n                        T[j][i] = (A[i][j] - jStat.sum(parts)) / T[i][i];\n                    });\n                });\n                return T;\n            },\n            gauss_jacobi: function gauss_jacobi(a, b, x, r) {\n                var i = 0;\n                var j = 0;\n                var n = a.length;\n                var l = [];\n                var u = [];\n                var d = [];\n                var xv, c, h, xk;\n                for (; i < n; i++) {\n                    l[i] = [];\n                    u[i] = [];\n                    d[i] = [];\n                    for (j = 0; j < n; j++) {\n                        if (i > j) {\n                            l[i][j] = a[i][j];\n                            u[i][j] = d[i][j] = 0;\n                        } else if (i < j) {\n                            u[i][j] = a[i][j];\n                            l[i][j] = d[i][j] = 0;\n                        } else {\n                            d[i][j] = a[i][j];\n                            l[i][j] = u[i][j] = 0;\n                        }\n                    }\n                }\n                h = jStat.multiply(jStat.multiply(jStat.inv(d), jStat.add(l, u)), -1);\n                c = jStat.multiply(jStat.inv(d), b);\n                xv = x;\n                xk = jStat.add(jStat.multiply(h, x), c);\n                i = 2;\n                while (Math.abs(jStat.norm(jStat.subtract(xk, xv))) > r) {\n                    xv = xk;\n                    xk = jStat.add(jStat.multiply(h, xv), c);\n                    i++;\n                }\n                return xk;\n            },\n            gauss_seidel: function gauss_seidel(a, b, x, r) {\n                var i = 0;\n                var n = a.length;\n                var l = [];\n                var u = [];\n                var d = [];\n                var j, xv, c, h, xk;\n                for (; i < n; i++) {\n                    l[i] = [];\n                    u[i] = [];\n                    d[i] = [];\n                    for (j = 0; j < n; j++) {\n                        if (i > j) {\n                            l[i][j] = a[i][j];\n                            u[i][j] = d[i][j] = 0;\n                        } else if (i < j) {\n                            u[i][j] = a[i][j];\n                            l[i][j] = d[i][j] = 0;\n                        } else {\n                            d[i][j] = a[i][j];\n                            l[i][j] = u[i][j] = 0;\n                        }\n                    }\n                }\n                h = jStat.multiply(jStat.multiply(jStat.inv(jStat.add(d, l)), u), -1);\n                c = jStat.multiply(jStat.inv(jStat.add(d, l)), b);\n                xv = x;\n                xk = jStat.add(jStat.multiply(h, x), c);\n                i = 2;\n                while (Math.abs(jStat.norm(jStat.subtract(xk, xv))) > r) {\n                    xv = xk;\n                    xk = jStat.add(jStat.multiply(h, xv), c);\n                    i = i + 1;\n                }\n                return xk;\n            },\n            SOR: function SOR(a, b, x, r, w) {\n                var i = 0;\n                var n = a.length;\n                var l = [];\n                var u = [];\n                var d = [];\n                var j, xv, c, h, xk;\n                for (; i < n; i++) {\n                    l[i] = [];\n                    u[i] = [];\n                    d[i] = [];\n                    for (j = 0; j < n; j++) {\n                        if (i > j) {\n                            l[i][j] = a[i][j];\n                            u[i][j] = d[i][j] = 0;\n                        } else if (i < j) {\n                            u[i][j] = a[i][j];\n                            l[i][j] = d[i][j] = 0;\n                        } else {\n                            d[i][j] = a[i][j];\n                            l[i][j] = u[i][j] = 0;\n                        }\n                    }\n                }\n                h = jStat.multiply(jStat.inv(jStat.add(d, jStat.multiply(l, w))), jStat.subtract(jStat.multiply(d, 1 - w), jStat.multiply(u, w)));\n                c = jStat.multiply(jStat.multiply(jStat.inv(jStat.add(d, jStat.multiply(l, w))), b), w);\n                xv = x;\n                xk = jStat.add(jStat.multiply(h, x), c);\n                i = 2;\n                while (Math.abs(jStat.norm(jStat.subtract(xk, xv))) > r) {\n                    xv = xk;\n                    xk = jStat.add(jStat.multiply(h, xv), c);\n                    i++;\n                }\n                return xk;\n            },\n            householder: function householder(a) {\n                var m = a.length;\n                var n = a[0].length;\n                var i = 0;\n                var w = [];\n                var p = [];\n                var alpha, r, k, j, factor;\n                for (; i < m - 1; i++) {\n                    alpha = 0;\n                    for (j = i + 1; j < n; j++)\n                        alpha += a[j][i] * a[j][i];\n                    factor = a[i + 1][i] > 0 ? -1 : 1;\n                    alpha = factor * Math.sqrt(alpha);\n                    r = Math.sqrt((alpha * alpha - a[i + 1][i] * alpha) / 2);\n                    w = jStat.zeros(m, 1);\n                    w[i + 1][0] = (a[i + 1][i] - alpha) / (2 * r);\n                    for (k = i + 2; k < m; k++)\n                        w[k][0] = a[k][i] / (2 * r);\n                    p = jStat.subtract(jStat.identity(m, n), jStat.multiply(jStat.multiply(w, jStat.transpose(w)), 2));\n                    a = jStat.multiply(p, jStat.multiply(a, p));\n                }\n                return a;\n            },\n            QR: function () {\n                var sum = jStat.sum;\n                var range = jStat.arange;\n                function qr2(x) {\n                    var n = x.length;\n                    var p = x[0].length;\n                    var r = jStat.zeros(p, p);\n                    x = jStat.copy(x);\n                    var i, j, k;\n                    for (j = 0; j < p; j++) {\n                        r[j][j] = Math.sqrt(sum(range(n).map(function (i) {\n                            return x[i][j] * x[i][j];\n                        })));\n                        for (i = 0; i < n; i++) {\n                            x[i][j] = x[i][j] / r[j][j];\n                        }\n                        for (k = j + 1; k < p; k++) {\n                            r[j][k] = sum(range(n).map(function (i) {\n                                return x[i][j] * x[i][k];\n                            }));\n                            for (i = 0; i < n; i++) {\n                                x[i][k] = x[i][k] - x[i][j] * r[j][k];\n                            }\n                        }\n                    }\n                    return [\n                        x,\n                        r\n                    ];\n                }\n                return qr2;\n            }(),\n            lstsq: function () {\n                function R_I(A) {\n                    A = jStat.copy(A);\n                    var size = A.length;\n                    var I = jStat.identity(size);\n                    jStat.arange(size - 1, -1, -1).forEach(function (i) {\n                        jStat.sliceAssign(I, { row: i }, jStat.divide(jStat.slice(I, { row: i }), A[i][i]));\n                        jStat.sliceAssign(A, { row: i }, jStat.divide(jStat.slice(A, { row: i }), A[i][i]));\n                        jStat.arange(i).forEach(function (j) {\n                            var c = jStat.multiply(A[j][i], -1);\n                            var Aj = jStat.slice(A, { row: j });\n                            var cAi = jStat.multiply(jStat.slice(A, { row: i }), c);\n                            jStat.sliceAssign(A, { row: j }, jStat.add(Aj, cAi));\n                            var Ij = jStat.slice(I, { row: j });\n                            var cIi = jStat.multiply(jStat.slice(I, { row: i }), c);\n                            jStat.sliceAssign(I, { row: j }, jStat.add(Ij, cIi));\n                        });\n                    });\n                    return I;\n                }\n                function qr_solve(A, b) {\n                    var array_mode = false;\n                    if (b[0].length === undefined) {\n                        b = b.map(function (x) {\n                            return [x];\n                        });\n                        array_mode = true;\n                    }\n                    var QR = jStat.QR(A);\n                    var Q = QR[0];\n                    var R = QR[1];\n                    var attrs = A[0].length;\n                    var Q1 = jStat.slice(Q, { col: { end: attrs } });\n                    var R1 = jStat.slice(R, { row: { end: attrs } });\n                    var RI = R_I(R1);\n                    var Q2 = jStat.transpose(Q1);\n                    if (Q2[0].length === undefined) {\n                        Q2 = [Q2];\n                    }\n                    var x = jStat.multiply(jStat.multiply(RI, Q2), b);\n                    if (x.length === undefined) {\n                        x = [[x]];\n                    }\n                    if (array_mode)\n                        return x.map(function (i) {\n                            return i[0];\n                        });\n                    return x;\n                }\n                return qr_solve;\n            }(),\n            jacobi: function jacobi(a) {\n                var condition = 1;\n                var n = a.length;\n                var e = jStat.identity(n, n);\n                var ev = [];\n                var b, i, j, p, q, maxim, theta, s;\n                while (condition === 1) {\n                    maxim = a[0][1];\n                    p = 0;\n                    q = 1;\n                    for (i = 0; i < n; i++) {\n                        for (j = 0; j < n; j++) {\n                            if (i != j) {\n                                if (maxim < Math.abs(a[i][j])) {\n                                    maxim = Math.abs(a[i][j]);\n                                    p = i;\n                                    q = j;\n                                }\n                            }\n                        }\n                    }\n                    if (a[p][p] === a[q][q])\n                        theta = a[p][q] > 0 ? Math.PI / 4 : -Math.PI / 4;\n                    else\n                        theta = Math.atan(2 * a[p][q] / (a[p][p] - a[q][q])) / 2;\n                    s = jStat.identity(n, n);\n                    s[p][p] = Math.cos(theta);\n                    s[p][q] = -Math.sin(theta);\n                    s[q][p] = Math.sin(theta);\n                    s[q][q] = Math.cos(theta);\n                    e = jStat.multiply(e, s);\n                    b = jStat.multiply(jStat.multiply(jStat.inv(s), a), s);\n                    a = b;\n                    condition = 0;\n                    for (i = 1; i < n; i++) {\n                        for (j = 1; j < n; j++) {\n                            if (i != j && Math.abs(a[i][j]) > 0.001) {\n                                condition = 1;\n                            }\n                        }\n                    }\n                }\n                for (i = 0; i < n; i++)\n                    ev.push(a[i][i]);\n                return [\n                    e,\n                    ev\n                ];\n            },\n            rungekutta: function rungekutta(f, h, p, t_j, u_j, order) {\n                var k1, k2, u_j1, k3, k4;\n                if (order === 2) {\n                    while (t_j <= p) {\n                        k1 = h * f(t_j, u_j);\n                        k2 = h * f(t_j + h, u_j + k1);\n                        u_j1 = u_j + (k1 + k2) / 2;\n                        u_j = u_j1;\n                        t_j = t_j + h;\n                    }\n                }\n                if (order === 4) {\n                    while (t_j <= p) {\n                        k1 = h * f(t_j, u_j);\n                        k2 = h * f(t_j + h / 2, u_j + k1 / 2);\n                        k3 = h * f(t_j + h / 2, u_j + k2 / 2);\n                        k4 = h * f(t_j + h, u_j + k3);\n                        u_j1 = u_j + (k1 + 2 * k2 + 2 * k3 + k4) / 6;\n                        u_j = u_j1;\n                        t_j = t_j + h;\n                    }\n                }\n                return u_j;\n            },\n            romberg: function romberg(f, a, b, order) {\n                var i = 0;\n                var h = (b - a) / 2;\n                var x = [];\n                var h1 = [];\n                var g = [];\n                var m, a1, j, k, I;\n                while (i < order / 2) {\n                    I = f(a);\n                    for (j = a, k = 0; j <= b; j = j + h, k++)\n                        x[k] = j;\n                    m = x.length;\n                    for (j = 1; j < m - 1; j++) {\n                        I += (j % 2 !== 0 ? 4 : 2) * f(x[j]);\n                    }\n                    I = h / 3 * (I + f(b));\n                    g[i] = I;\n                    h /= 2;\n                    i++;\n                }\n                a1 = g.length;\n                m = 1;\n                while (a1 !== 1) {\n                    for (j = 0; j < a1 - 1; j++)\n                        h1[j] = (Math.pow(4, m) * g[j + 1] - g[j]) / (Math.pow(4, m) - 1);\n                    a1 = h1.length;\n                    g = h1;\n                    h1 = [];\n                    m++;\n                }\n                return g;\n            },\n            richardson: function richardson(X, f, x, h) {\n                function pos(X, x) {\n                    var i = 0;\n                    var n = X.length;\n                    var p;\n                    for (; i < n; i++)\n                        if (X[i] === x)\n                            p = i;\n                    return p;\n                }\n                var h_min = Math.abs(x - X[pos(X, x) + 1]);\n                var i = 0;\n                var g = [];\n                var h1 = [];\n                var y1, y2, m, a, j;\n                while (h >= h_min) {\n                    y1 = pos(X, x + h);\n                    y2 = pos(X, x);\n                    g[i] = (f[y1] - 2 * f[y2] + f[2 * y2 - y1]) / (h * h);\n                    h /= 2;\n                    i++;\n                }\n                a = g.length;\n                m = 1;\n                while (a != 1) {\n                    for (j = 0; j < a - 1; j++)\n                        h1[j] = (Math.pow(4, m) * g[j + 1] - g[j]) / (Math.pow(4, m) - 1);\n                    a = h1.length;\n                    g = h1;\n                    h1 = [];\n                    m++;\n                }\n                return g;\n            },\n            simpson: function simpson(f, a, b, n) {\n                var h = (b - a) / n;\n                var I = f(a);\n                var x = [];\n                var j = a;\n                var k = 0;\n                var i = 1;\n                var m;\n                for (; j <= b; j = j + h, k++)\n                    x[k] = j;\n                m = x.length;\n                for (; i < m - 1; i++) {\n                    I += (i % 2 !== 0 ? 4 : 2) * f(x[i]);\n                }\n                return h / 3 * (I + f(b));\n            },\n            hermite: function hermite(X, F, dF, value) {\n                var n = X.length;\n                var p = 0;\n                var i = 0;\n                var l = [];\n                var dl = [];\n                var A = [];\n                var B = [];\n                var j;\n                for (; i < n; i++) {\n                    l[i] = 1;\n                    for (j = 0; j < n; j++) {\n                        if (i != j)\n                            l[i] *= (value - X[j]) / (X[i] - X[j]);\n                    }\n                    dl[i] = 0;\n                    for (j = 0; j < n; j++) {\n                        if (i != j)\n                            dl[i] += 1 / (X[i] - X[j]);\n                    }\n                    A[i] = (1 - 2 * (value - X[i]) * dl[i]) * (l[i] * l[i]);\n                    B[i] = (value - X[i]) * (l[i] * l[i]);\n                    p += A[i] * F[i] + B[i] * dF[i];\n                }\n                return p;\n            },\n            lagrange: function lagrange(X, F, value) {\n                var p = 0;\n                var i = 0;\n                var j, l;\n                var n = X.length;\n                for (; i < n; i++) {\n                    l = F[i];\n                    for (j = 0; j < n; j++) {\n                        if (i != j)\n                            l *= (value - X[j]) / (X[i] - X[j]);\n                    }\n                    p += l;\n                }\n                return p;\n            },\n            cubic_spline: function cubic_spline(X, F, value) {\n                var n = X.length;\n                var i = 0, j;\n                var A = [];\n                var B = [];\n                var alpha = [];\n                var c = [];\n                var h = [];\n                var b = [];\n                var d = [];\n                for (; i < n - 1; i++)\n                    h[i] = X[i + 1] - X[i];\n                alpha[0] = 0;\n                for (i = 1; i < n - 1; i++) {\n                    alpha[i] = 3 / h[i] * (F[i + 1] - F[i]) - 3 / h[i - 1] * (F[i] - F[i - 1]);\n                }\n                for (i = 1; i < n - 1; i++) {\n                    A[i] = [];\n                    B[i] = [];\n                    A[i][i - 1] = h[i - 1];\n                    A[i][i] = 2 * (h[i - 1] + h[i]);\n                    A[i][i + 1] = h[i];\n                    B[i][0] = alpha[i];\n                }\n                c = jStat.multiply(jStat.inv(A), B);\n                for (j = 0; j < n - 1; j++) {\n                    b[j] = (F[j + 1] - F[j]) / h[j] - h[j] * (c[j + 1][0] + 2 * c[j][0]) / 3;\n                    d[j] = (c[j + 1][0] - c[j][0]) / (3 * h[j]);\n                }\n                for (j = 0; j < n; j++) {\n                    if (X[j] > value)\n                        break;\n                }\n                j -= 1;\n                return F[j] + (value - X[j]) * b[j] + jStat.sq(value - X[j]) * c[j] + (value - X[j]) * jStat.sq(value - X[j]) * d[j];\n            },\n            gauss_quadrature: function gauss_quadrature() {\n                throw new Error('gauss_quadrature not yet implemented');\n            },\n            PCA: function PCA(X) {\n                var m = X.length;\n                var n = X[0].length;\n                var i = 0;\n                var j, temp1;\n                var u = [];\n                var D = [];\n                var result = [];\n                var temp2 = [];\n                var Y = [];\n                var Bt = [];\n                var B = [];\n                var C = [];\n                var V = [];\n                var Vt = [];\n                for (i = 0; i < m; i++) {\n                    u[i] = jStat.sum(X[i]) / n;\n                }\n                for (i = 0; i < n; i++) {\n                    B[i] = [];\n                    for (j = 0; j < m; j++) {\n                        B[i][j] = X[j][i] - u[j];\n                    }\n                }\n                B = jStat.transpose(B);\n                for (i = 0; i < m; i++) {\n                    C[i] = [];\n                    for (j = 0; j < m; j++) {\n                        C[i][j] = jStat.dot([B[i]], [B[j]]) / (n - 1);\n                    }\n                }\n                result = jStat.jacobi(C);\n                V = result[0];\n                D = result[1];\n                Vt = jStat.transpose(V);\n                for (i = 0; i < D.length; i++) {\n                    for (j = i; j < D.length; j++) {\n                        if (D[i] < D[j]) {\n                            temp1 = D[i];\n                            D[i] = D[j];\n                            D[j] = temp1;\n                            temp2 = Vt[i];\n                            Vt[i] = Vt[j];\n                            Vt[j] = temp2;\n                        }\n                    }\n                }\n                Bt = jStat.transpose(B);\n                for (i = 0; i < m; i++) {\n                    Y[i] = [];\n                    for (j = 0; j < Bt.length; j++) {\n                        Y[i][j] = jStat.dot([Vt[i]], [Bt[j]]);\n                    }\n                }\n                return [\n                    X,\n                    D,\n                    Vt,\n                    Y\n                ];\n            }\n        });\n        (function (funcs) {\n            for (var i = 0; i < funcs.length; i++)\n                (function (passfunc) {\n                    jStat.fn[passfunc] = function (arg, func) {\n                        var tmpthis = this;\n                        if (func) {\n                            setTimeout(function () {\n                                func.call(tmpthis, jStat.fn[passfunc].call(tmpthis, arg));\n                            }, 15);\n                            return this;\n                        }\n                        if (typeof jStat[passfunc](this, arg) === 'number')\n                            return jStat[passfunc](this, arg);\n                        else\n                            return jStat(jStat[passfunc](this, arg));\n                    };\n                }(funcs[i]));\n        }('add divide multiply subtract dot pow exp log abs norm angle'.split(' ')));\n    }(jStat, Math));\n    (function (jStat, Math) {\n        var slice = [].slice;\n        var isNumber = jStat.utils.isNumber;\n        var isArray = jStat.utils.isArray;\n        jStat.extend({\n            zscore: function zscore() {\n                var args = slice.call(arguments);\n                if (isNumber(args[1])) {\n                    return (args[0] - args[1]) / args[2];\n                }\n                return (args[0] - jStat.mean(args[1])) / jStat.stdev(args[1], args[2]);\n            },\n            ztest: function ztest() {\n                var args = slice.call(arguments);\n                var z;\n                if (isArray(args[1])) {\n                    z = jStat.zscore(args[0], args[1], args[3]);\n                    return args[2] === 1 ? jStat.normal.cdf(-Math.abs(z), 0, 1) : jStat.normal.cdf(-Math.abs(z), 0, 1) * 2;\n                } else {\n                    if (args.length > 2) {\n                        z = jStat.zscore(args[0], args[1], args[2]);\n                        return args[3] === 1 ? jStat.normal.cdf(-Math.abs(z), 0, 1) : jStat.normal.cdf(-Math.abs(z), 0, 1) * 2;\n                    } else {\n                        z = args[0];\n                        return args[1] === 1 ? jStat.normal.cdf(-Math.abs(z), 0, 1) : jStat.normal.cdf(-Math.abs(z), 0, 1) * 2;\n                    }\n                }\n            }\n        });\n        jStat.extend(jStat.fn, {\n            zscore: function zscore(value, flag) {\n                return (value - this.mean()) / this.stdev(flag);\n            },\n            ztest: function ztest(value, sides, flag) {\n                var zscore = Math.abs(this.zscore(value, flag));\n                return sides === 1 ? jStat.normal.cdf(-zscore, 0, 1) : jStat.normal.cdf(-zscore, 0, 1) * 2;\n            }\n        });\n        jStat.extend({\n            tscore: function tscore() {\n                var args = slice.call(arguments);\n                return args.length === 4 ? (args[0] - args[1]) / (args[2] / Math.sqrt(args[3])) : (args[0] - jStat.mean(args[1])) / (jStat.stdev(args[1], true) / Math.sqrt(args[1].length));\n            },\n            ttest: function ttest() {\n                var args = slice.call(arguments);\n                var tscore;\n                if (args.length === 5) {\n                    tscore = Math.abs(jStat.tscore(args[0], args[1], args[2], args[3]));\n                    return args[4] === 1 ? jStat.studentt.cdf(-tscore, args[3] - 1) : jStat.studentt.cdf(-tscore, args[3] - 1) * 2;\n                }\n                if (isNumber(args[1])) {\n                    tscore = Math.abs(args[0]);\n                    return args[2] == 1 ? jStat.studentt.cdf(-tscore, args[1] - 1) : jStat.studentt.cdf(-tscore, args[1] - 1) * 2;\n                }\n                tscore = Math.abs(jStat.tscore(args[0], args[1]));\n                return args[2] == 1 ? jStat.studentt.cdf(-tscore, args[1].length - 1) : jStat.studentt.cdf(-tscore, args[1].length - 1) * 2;\n            }\n        });\n        jStat.extend(jStat.fn, {\n            tscore: function tscore(value) {\n                return (value - this.mean()) / (this.stdev(true) / Math.sqrt(this.cols()));\n            },\n            ttest: function ttest(value, sides) {\n                return sides === 1 ? 1 - jStat.studentt.cdf(Math.abs(this.tscore(value)), this.cols() - 1) : jStat.studentt.cdf(-Math.abs(this.tscore(value)), this.cols() - 1) * 2;\n            }\n        });\n        jStat.extend({\n            anovafscore: function anovafscore() {\n                var args = slice.call(arguments), expVar, sample, sampMean, sampSampMean, tmpargs, unexpVar, i, j;\n                if (args.length === 1) {\n                    tmpargs = new Array(args[0].length);\n                    for (i = 0; i < args[0].length; i++) {\n                        tmpargs[i] = args[0][i];\n                    }\n                    args = tmpargs;\n                }\n                sample = new Array();\n                for (i = 0; i < args.length; i++) {\n                    sample = sample.concat(args[i]);\n                }\n                sampMean = jStat.mean(sample);\n                expVar = 0;\n                for (i = 0; i < args.length; i++) {\n                    expVar = expVar + args[i].length * Math.pow(jStat.mean(args[i]) - sampMean, 2);\n                }\n                expVar /= args.length - 1;\n                unexpVar = 0;\n                for (i = 0; i < args.length; i++) {\n                    sampSampMean = jStat.mean(args[i]);\n                    for (j = 0; j < args[i].length; j++) {\n                        unexpVar += Math.pow(args[i][j] - sampSampMean, 2);\n                    }\n                }\n                unexpVar /= sample.length - args.length;\n                return expVar / unexpVar;\n            },\n            anovaftest: function anovaftest() {\n                var args = slice.call(arguments), df1, df2, n, i;\n                if (isNumber(args[0])) {\n                    return 1 - jStat.centralF.cdf(args[0], args[1], args[2]);\n                }\n                var anovafscore = jStat.anovafscore(args);\n                df1 = args.length - 1;\n                n = 0;\n                for (i = 0; i < args.length; i++) {\n                    n = n + args[i].length;\n                }\n                df2 = n - df1 - 1;\n                return 1 - jStat.centralF.cdf(anovafscore, df1, df2);\n            },\n            ftest: function ftest(fscore, df1, df2) {\n                return 1 - jStat.centralF.cdf(fscore, df1, df2);\n            }\n        });\n        jStat.extend(jStat.fn, {\n            anovafscore: function anovafscore() {\n                return jStat.anovafscore(this.toArray());\n            },\n            anovaftes: function anovaftes() {\n                var n = 0;\n                var i;\n                for (i = 0; i < this.length; i++) {\n                    n = n + this[i].length;\n                }\n                return jStat.ftest(this.anovafscore(), this.length - 1, n - this.length);\n            }\n        });\n        jStat.extend({\n            qscore: function qscore() {\n                var args = slice.call(arguments);\n                var mean1, mean2, n1, n2, sd;\n                if (isNumber(args[0])) {\n                    mean1 = args[0];\n                    mean2 = args[1];\n                    n1 = args[2];\n                    n2 = args[3];\n                    sd = args[4];\n                } else {\n                    mean1 = jStat.mean(args[0]);\n                    mean2 = jStat.mean(args[1]);\n                    n1 = args[0].length;\n                    n2 = args[1].length;\n                    sd = args[2];\n                }\n                return Math.abs(mean1 - mean2) / (sd * Math.sqrt((1 / n1 + 1 / n2) / 2));\n            },\n            qtest: function qtest() {\n                var args = slice.call(arguments);\n                var qscore;\n                if (args.length === 3) {\n                    qscore = args[0];\n                    args = args.slice(1);\n                } else if (args.length === 7) {\n                    qscore = jStat.qscore(args[0], args[1], args[2], args[3], args[4]);\n                    args = args.slice(5);\n                } else {\n                    qscore = jStat.qscore(args[0], args[1], args[2]);\n                    args = args.slice(3);\n                }\n                var n = args[0];\n                var k = args[1];\n                return 1 - jStat.tukey.cdf(qscore, k, n - k);\n            },\n            tukeyhsd: function tukeyhsd(arrays) {\n                var sd = jStat.pooledstdev(arrays);\n                var means = arrays.map(function (arr) {\n                    return jStat.mean(arr);\n                });\n                var n = arrays.reduce(function (n, arr) {\n                    return n + arr.length;\n                }, 0);\n                var results = [];\n                for (var i = 0; i < arrays.length; ++i) {\n                    for (var j = i + 1; j < arrays.length; ++j) {\n                        var p = jStat.qtest(means[i], means[j], arrays[i].length, arrays[j].length, sd, n, arrays.length);\n                        results.push([\n                            [\n                                i,\n                                j\n                            ],\n                            p\n                        ]);\n                    }\n                }\n                return results;\n            }\n        });\n        jStat.extend({\n            normalci: function normalci() {\n                var args = slice.call(arguments), ans = new Array(2), change;\n                if (args.length === 4) {\n                    change = Math.abs(jStat.normal.inv(args[1] / 2, 0, 1) * args[2] / Math.sqrt(args[3]));\n                } else {\n                    change = Math.abs(jStat.normal.inv(args[1] / 2, 0, 1) * jStat.stdev(args[2]) / Math.sqrt(args[2].length));\n                }\n                ans[0] = args[0] - change;\n                ans[1] = args[0] + change;\n                return ans;\n            },\n            tci: function tci() {\n                var args = slice.call(arguments), ans = new Array(2), change;\n                if (args.length === 4) {\n                    change = Math.abs(jStat.studentt.inv(args[1] / 2, args[3] - 1) * args[2] / Math.sqrt(args[3]));\n                } else {\n                    change = Math.abs(jStat.studentt.inv(args[1] / 2, args[2].length - 1) * jStat.stdev(args[2], true) / Math.sqrt(args[2].length));\n                }\n                ans[0] = args[0] - change;\n                ans[1] = args[0] + change;\n                return ans;\n            },\n            significant: function significant(pvalue, alpha) {\n                return pvalue < alpha;\n            }\n        });\n        jStat.extend(jStat.fn, {\n            normalci: function normalci(value, alpha) {\n                return jStat.normalci(value, alpha, this.toArray());\n            },\n            tci: function tci(value, alpha) {\n                return jStat.tci(value, alpha, this.toArray());\n            }\n        });\n        function differenceOfProportions(p1, n1, p2, n2) {\n            if (p1 > 1 || p2 > 1 || p1 <= 0 || p2 <= 0) {\n                throw new Error('Proportions should be greater than 0 and less than 1');\n            }\n            var pooled = (p1 * n1 + p2 * n2) / (n1 + n2);\n            var se = Math.sqrt(pooled * (1 - pooled) * (1 / n1 + 1 / n2));\n            return (p1 - p2) / se;\n        }\n        jStat.extend(jStat.fn, {\n            oneSidedDifferenceOfProportions: function oneSidedDifferenceOfProportions(p1, n1, p2, n2) {\n                var z = differenceOfProportions(p1, n1, p2, n2);\n                return jStat.ztest(z, 1);\n            },\n            twoSidedDifferenceOfProportions: function twoSidedDifferenceOfProportions(p1, n1, p2, n2) {\n                var z = differenceOfProportions(p1, n1, p2, n2);\n                return jStat.ztest(z, 2);\n            }\n        });\n    }(jStat, Math));\n    jStat.models = function () {\n        function sub_regress(exog) {\n            var var_count = exog[0].length;\n            var modelList = jStat.arange(var_count).map(function (endog_index) {\n                var exog_index = jStat.arange(var_count).filter(function (i) {\n                    return i !== endog_index;\n                });\n                return ols(jStat.col(exog, endog_index).map(function (x) {\n                    return x[0];\n                }), jStat.col(exog, exog_index));\n            });\n            return modelList;\n        }\n        function ols(endog, exog) {\n            var nobs = endog.length;\n            var df_model = exog[0].length - 1;\n            var df_resid = nobs - df_model - 1;\n            var coef = jStat.lstsq(exog, endog);\n            var predict = jStat.multiply(exog, coef.map(function (x) {\n                return [x];\n            })).map(function (p) {\n                return p[0];\n            });\n            var resid = jStat.subtract(endog, predict);\n            var ybar = jStat.mean(endog);\n            var SSE = jStat.sum(predict.map(function (f) {\n                return Math.pow(f - ybar, 2);\n            }));\n            var SSR = jStat.sum(endog.map(function (y, i) {\n                return Math.pow(y - predict[i], 2);\n            }));\n            var SST = SSE + SSR;\n            var R2 = SSE / SST;\n            return {\n                exog: exog,\n                endog: endog,\n                nobs: nobs,\n                df_model: df_model,\n                df_resid: df_resid,\n                coef: coef,\n                predict: predict,\n                resid: resid,\n                ybar: ybar,\n                SST: SST,\n                SSE: SSE,\n                SSR: SSR,\n                R2: R2\n            };\n        }\n        function t_test(model) {\n            var subModelList = sub_regress(model.exog);\n            var sigmaHat = Math.sqrt(model.SSR / model.df_resid);\n            var seBetaHat = subModelList.map(function (mod) {\n                var SST = mod.SST;\n                var R2 = mod.R2;\n                return sigmaHat / Math.sqrt(SST * (1 - R2));\n            });\n            var tStatistic = model.coef.map(function (coef, i) {\n                return (coef - 0) / seBetaHat[i];\n            });\n            var pValue = tStatistic.map(function (t) {\n                var leftppf = jStat.studentt.cdf(t, model.df_resid);\n                return (leftppf > 0.5 ? 1 - leftppf : leftppf) * 2;\n            });\n            var c = jStat.studentt.inv(0.975, model.df_resid);\n            var interval95 = model.coef.map(function (coef, i) {\n                var d = c * seBetaHat[i];\n                return [\n                    coef - d,\n                    coef + d\n                ];\n            });\n            return {\n                se: seBetaHat,\n                t: tStatistic,\n                p: pValue,\n                sigmaHat: sigmaHat,\n                interval95: interval95\n            };\n        }\n        function F_test(model) {\n            var F_statistic = model.R2 / model.df_model / ((1 - model.R2) / model.df_resid);\n            var fcdf = function (x, n1, n2) {\n                return jStat.beta.cdf(x / (n2 / n1 + x), n1 / 2, n2 / 2);\n            };\n            var pvalue = 1 - fcdf(F_statistic, model.df_model, model.df_resid);\n            return {\n                F_statistic: F_statistic,\n                pvalue: pvalue\n            };\n        }\n        function ols_wrap(endog, exog) {\n            var model = ols(endog, exog);\n            var ttest = t_test(model);\n            var ftest = F_test(model);\n            var adjust_R2 = 1 - (1 - model.R2) * ((model.nobs - 1) / model.df_resid);\n            model.t = ttest;\n            model.f = ftest;\n            model.adjust_R2 = adjust_R2;\n            return model;\n        }\n        return { ols: ols_wrap };\n    }();\n    jStat.extend({\n        buildxmatrix: function buildxmatrix() {\n            var matrixRows = new Array(arguments.length);\n            for (var i = 0; i < arguments.length; i++) {\n                var array = [1];\n                matrixRows[i] = array.concat(arguments[i]);\n            }\n            return jStat(matrixRows);\n        },\n        builddxmatrix: function builddxmatrix() {\n            var matrixRows = new Array(arguments[0].length);\n            for (var i = 0; i < arguments[0].length; i++) {\n                var array = [1];\n                matrixRows[i] = array.concat(arguments[0][i]);\n            }\n            return jStat(matrixRows);\n        },\n        buildjxmatrix: function buildjxmatrix(jMat) {\n            var pass = new Array(jMat.length);\n            for (var i = 0; i < jMat.length; i++) {\n                pass[i] = jMat[i];\n            }\n            return jStat.builddxmatrix(pass);\n        },\n        buildymatrix: function buildymatrix(array) {\n            return jStat(array).transpose();\n        },\n        buildjymatrix: function buildjymatrix(jMat) {\n            return jMat.transpose();\n        },\n        matrixmult: function matrixmult(A, B) {\n            var i, j, k, result, sum;\n            if (A.cols() == B.rows()) {\n                if (B.rows() > 1) {\n                    result = [];\n                    for (i = 0; i < A.rows(); i++) {\n                        result[i] = [];\n                        for (j = 0; j < B.cols(); j++) {\n                            sum = 0;\n                            for (k = 0; k < A.cols(); k++) {\n                                sum += A.toArray()[i][k] * B.toArray()[k][j];\n                            }\n                            result[i][j] = sum;\n                        }\n                    }\n                    return jStat(result);\n                }\n                result = [];\n                for (i = 0; i < A.rows(); i++) {\n                    result[i] = [];\n                    for (j = 0; j < B.cols(); j++) {\n                        sum = 0;\n                        for (k = 0; k < A.cols(); k++) {\n                            sum += A.toArray()[i][k] * B.toArray()[j];\n                        }\n                        result[i][j] = sum;\n                    }\n                }\n                return jStat(result);\n            }\n        },\n        regress: function regress(jMatX, jMatY) {\n            var innerinv = jStat.xtranspxinv(jMatX);\n            var xtransp = jMatX.transpose();\n            var next = jStat.matrixmult(jStat(innerinv), xtransp);\n            return jStat.matrixmult(next, jMatY);\n        },\n        regresst: function regresst(jMatX, jMatY, sides) {\n            var beta = jStat.regress(jMatX, jMatY);\n            var compile = {};\n            compile.anova = {};\n            var jMatYBar = jStat.jMatYBar(jMatX, beta);\n            compile.yBar = jMatYBar;\n            var yAverage = jMatY.mean();\n            compile.anova.residuals = jStat.residuals(jMatY, jMatYBar);\n            compile.anova.ssr = jStat.ssr(jMatYBar, yAverage);\n            compile.anova.msr = compile.anova.ssr / (jMatX[0].length - 1);\n            compile.anova.sse = jStat.sse(jMatY, jMatYBar);\n            compile.anova.mse = compile.anova.sse / (jMatY.length - (jMatX[0].length - 1) - 1);\n            compile.anova.sst = jStat.sst(jMatY, yAverage);\n            compile.anova.mst = compile.anova.sst / (jMatY.length - 1);\n            compile.anova.r2 = 1 - compile.anova.sse / compile.anova.sst;\n            if (compile.anova.r2 < 0)\n                compile.anova.r2 = 0;\n            compile.anova.fratio = compile.anova.msr / compile.anova.mse;\n            compile.anova.pvalue = jStat.anovaftest(compile.anova.fratio, jMatX[0].length - 1, jMatY.length - (jMatX[0].length - 1) - 1);\n            compile.anova.rmse = Math.sqrt(compile.anova.mse);\n            compile.anova.r2adj = 1 - compile.anova.mse / compile.anova.mst;\n            if (compile.anova.r2adj < 0)\n                compile.anova.r2adj = 0;\n            compile.stats = new Array(jMatX[0].length);\n            var covar = jStat.xtranspxinv(jMatX);\n            var sds, ts, ps;\n            for (var i = 0; i < beta.length; i++) {\n                sds = Math.sqrt(compile.anova.mse * Math.abs(covar[i][i]));\n                ts = Math.abs(beta[i] / sds);\n                ps = jStat.ttest(ts, jMatY.length - jMatX[0].length - 1, sides);\n                compile.stats[i] = [\n                    beta[i],\n                    sds,\n                    ts,\n                    ps\n                ];\n            }\n            compile.regress = beta;\n            return compile;\n        },\n        xtranspx: function xtranspx(jMatX) {\n            return jStat.matrixmult(jMatX.transpose(), jMatX);\n        },\n        xtranspxinv: function xtranspxinv(jMatX) {\n            var inner = jStat.matrixmult(jMatX.transpose(), jMatX);\n            var innerinv = jStat.inv(inner);\n            return innerinv;\n        },\n        jMatYBar: function jMatYBar(jMatX, beta) {\n            var yBar = jStat.matrixmult(jMatX, beta);\n            return new jStat(yBar);\n        },\n        residuals: function residuals(jMatY, jMatYBar) {\n            return jStat.matrixsubtract(jMatY, jMatYBar);\n        },\n        ssr: function ssr(jMatYBar, yAverage) {\n            var ssr = 0;\n            for (var i = 0; i < jMatYBar.length; i++) {\n                ssr += Math.pow(jMatYBar[i] - yAverage, 2);\n            }\n            return ssr;\n        },\n        sse: function sse(jMatY, jMatYBar) {\n            var sse = 0;\n            for (var i = 0; i < jMatY.length; i++) {\n                sse += Math.pow(jMatY[i] - jMatYBar[i], 2);\n            }\n            return sse;\n        },\n        sst: function sst(jMatY, yAverage) {\n            var sst = 0;\n            for (var i = 0; i < jMatY.length; i++) {\n                sst += Math.pow(jMatY[i] - yAverage, 2);\n            }\n            return sst;\n        },\n        matrixsubtract: function matrixsubtract(A, B) {\n            var ans = new Array(A.length);\n            for (var i = 0; i < A.length; i++) {\n                ans[i] = new Array(A[i].length);\n                for (var j = 0; j < A[i].length; j++) {\n                    ans[i][j] = A[i][j] - B[i][j];\n                }\n            }\n            return jStat(ans);\n        }\n    });\n    jStat.jStat = jStat;\n    return jStat;\n}));"]}