{"version":3,"sources":["data/chartJson.js"],"names":["define","m_chartUtil","deepCopy","baseComponent","fontSize","color","fontFamily","fontGroup","cusFontSize","prefix","suffix","ratio","digit","chartComponent","title","show","text","label","position","value","offsetX","offsetY","subtitle","distance","cusGap","config","grid","top","left","right","bottom","legend","selectMode","selected","seriesName","isShow","direction","width","cusSize","height","itemGap","tooltip","backgroundColor","triggerOn","triggerType","axisPointer","type","style","format","axis","axisType","xAxisUp","showTitle","nameGap","rotate","fzPosition","name","inverse","tickLine","tick","length","tickLabel","optimize","min","max","netLine","interval","cusNumber","netArea","colorOne","colorTwo","axisLine","onZero","xAxisDown","yAxisLeft","formatter","split","yAxisRight","positionOption","distanceOption","fontSizeOption","lineStyleOption","lineWeightOption","posOption","ratioOption","digitOption","sizeOption","fontSizeList","intervalOption","fontStyleIBV","bold","des","italic","vertical","fontStyleIB","chartOptions","chartAllType","defaultOption","chartData"],"mappings":"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","file":"../../data/chartJson.js","sourcesContent":["define(['../utils/chartUtil'], function (m_chartUtil) {\n    'use strict';\n    const {deepCopy} = m_chartUtil;\n    const baseComponent = {\n        label: {\n            fontSize: 12,\n            //字体大小 //fontSize为'custom'时,取cusFontSize的值\n            color: '#333',\n            //颜色\n            fontFamily: 'sans-serif',\n            //字体\n            fontGroup: [],\n            //字体, 加粗:选中:'bold',无:'normal'; 斜体: 选中:'italic',无:'normal';方向:选中:'vertical',无:'horizen'\n            cusFontSize: 12\n        },\n        //自定义文字大小\n        formatter: {\n            prefix: '',\n            //前缀\n            suffix: '',\n            //后缀\n            ratio: 1,\n            //数值比例\n            digit: 'auto'\n        }\n    };\n    //小数位数\n    const chartComponent = {\n        //标题设置\n        title: {\n            show: false,\n            //是否显示\n            text: '默认标题',\n            //标题内容\n            label: deepCopy(baseComponent.label),\n            position: {\n                value: 'left-top',\n                //custom:自定义 //left-top  为custom的时候,取offsetX, offsetY\n                offsetX: 40,\n                //自定义的X位置,单位百分比\n                offsetY: 50\n            }\n        },\n        //自定义的Y位置,单位百分比\n        //副标题\n        subtitle: {\n            show: false,\n            //是否显示\n            text: '',\n            //标题内容\n            label: deepCopy(baseComponent.label),\n            distance: {\n                value: 'auto',\n                //'auto': 默认, 'far': 远 // 'normal': 一般 'close':近 custom :取cusGap作为距离\n                cusGap: 40\n            }\n        },\n        //自定义距离\n        // 图表设置\n        config: {\n            color: 'transparent',\n            //默认颜色//'#333'\n            fontFamily: 'Sans-serif',\n            grid: {\n                value: 'normal',\n                //''normal':正常 'wide':宽 // 'narrow':窄 // 'slender':瘦长 'flat':扁平\n                top: 5,\n                left: 10,\n                right: 20,\n                bottom: 10\n            }\n        },\n        //图例设置\n        legend: {\n            show: true,\n            selectMode: 'multiple',\n            //'single':单选 //'多选':multiple //'禁用':'disable'\n            selected: [\n                //图例显示选择 //动态数据渲染 //分:初始化图表+后台加载使用数据结构中数据 /编辑时根据系列实时变化\n                {\n                    seriesName: '衣服',\n                    //\n                    isShow: true\n                },\n                {\n                    seriesName: '食材',\n                    //\n                    isShow: true\n                },\n                {\n                    seriesName: '图书',\n                    //\n                    isShow: true\n                }\n            ],\n            label: deepCopy(baseComponent.label),\n            //图例文字样式\n            position: {\n                value: 'left-top',\n                //custom:自定义 //left-top  为custom的时候,取offsetX, offsetY\n                offsetX: 40,\n                //自定义的X位置,单位百分比\n                offsetY: 50,\n                //自定义的Y位置,单位百分比\n                direction: 'horizontal'\n            },\n            //图例位置水平或者垂直 horizontal(水平)/vertical(垂直)\n            width: {\n                //图例图标大小\n                value: 'auto',\n                //'auto':默认/ 'big':大/'medium':中/'small':小/'custom':自定义\n                cusSize: 25\n            },\n            //图例自定义宽度 ,单位px\n            height: {\n                //图例图标大小\n                value: 'auto',\n                //'auto':默认/ 'big':大/'medium':中/'small':小/'custom':自定义\n                cusSize: 14\n            },\n            //图例自定义宽度 ,单位px\n            distance: {\n                value: 'auto',\n                //'auto':默认 /far':远 / 'general':一般 / 'near':近 /'custom':自定义\n                cusGap: 10\n            },\n            //自定义距离\n            itemGap: 10\n        },\n        //提示设置\n        tooltip: {\n            show: true,\n            //鼠标提示显示\n            label: deepCopy(baseComponent.label),\n            //文字样式\n            backgroundColor: 'rgba(50,50,50,0.7)',\n            // 鼠标提示框背景色\n            triggerOn: 'mousemove',\n            // 'mousemove':鼠标滑过 click':单击 触发条件\n            triggerType: 'item',\n            //触发类型 //'axis':坐标轴触发 'item':数据项图形触发\n            axisPointer: {\n                // 指示器配置\n                type: 'line',\n                // 'line':默认直线指示器 //'cross': 十字指示器配置 //'shadow': 阴影指示器配置\n                style: {\n                    // 指示器样式\n                    color: '#555',\n                    width: 'normal',\n                    //宽度:'normal':正常 'bold': 粗 'bolder':加粗\n                    type: 'solid'\n                }\n            },\n            //'solid': 实线 'dash': 虚线 'dot':点线\n            format: [\n                //鼠标提示后缀\n                {\n                    seriesName: '衣服',\n                    prefix: '',\n                    //前缀\n                    suffix: '',\n                    //后缀 (自定义单位)\n                    ratio: 1,\n                    //除以的数 // 1为默认, 0.1 /0.001 /...\n                    digit: 'auto'\n                },\n                //小数位数 'auto' :不处理 // 数值:0 , 1 ,2 ...\n                {\n                    seriesName: '食材',\n                    prefix: '',\n                    //前缀\n                    suffix: '',\n                    //后缀\n                    ratio: 1,\n                    digit: 'auto'\n                },\n                {\n                    seriesName: '图书',\n                    prefix: '',\n                    //前缀\n                    suffix: '',\n                    //后缀\n                    ratio: 1,\n                    digit: 'auto'\n                }\n            ],\n            position: 'auto'\n        },\n        // 鼠标提示位置 //'inside':中心位置 //'left'/'top'/'right'/'top'\n        // XY轴\n        axis: {\n            axisType: 'xAxisDown',\n            //要显示的坐标轴类型\n            xAxisUp: {\n                show: false,\n                //显示X轴\n                title: {\n                    showTitle: false,\n                    //显示X轴\n                    text: '',\n                    //标题内容\n                    nameGap: 15,\n                    //标题与轴线距离\n                    rotate: 0,\n                    //标题倾斜角度\n                    label: deepCopy(baseComponent.label),\n                    fzPosition: 'end'\n                },\n                //标题对齐方式,end: 尾部, middle: 中间\n                name: '显示X轴',\n                inverse: false,\n                //反向坐标轴 (echarts有)\n                //刻度线\n                tickLine: {\n                    show: true,\n                    //显示刻度线\n                    width: 1,\n                    //刻度线宽度\n                    color: 'auto'\n                },\n                //刻度线颜色\n                //刻度\n                tick: {\n                    show: true,\n                    //显示刻度\n                    position: 'outside',\n                    //刻度位置,默认: outside朝外 / inside: 朝内\n                    length: 5,\n                    //刻度长度\n                    width: 1,\n                    //刻度宽度\n                    color: 'auto'\n                },\n                //刻度颜色\n                //标签\n                tickLabel: {\n                    show: true,\n                    //显示刻度标签\n                    label: deepCopy(baseComponent.label),\n                    rotate: 0,\n                    //倾斜标签角度\n                    prefix: '',\n                    //标签前缀\n                    suffix: '',\n                    //标签后缀\n                    optimize: 0,\n                    distance: 0,\n                    //标签与轴线距离\n                    min: 'auto',\n                    //最小值\n                    max: 'auto',\n                    //最大值\n                    ratio: 1,\n                    digit: 'auto'\n                },\n                //网格线\n                netLine: {\n                    show: false,\n                    //显示网格线\n                    width: 1,\n                    //网格线宽度\n                    type: 'solid',\n                    //网格线类型\n                    color: 'auto',\n                    //网格线颜色\n                    interval: {\n                        //网格分割间隔数\n                        value: 'auto',\n                        cusNumber: 0\n                    }\n                },\n                //网格区域\n                netArea: {\n                    show: false,\n                    //显示网格区域\n                    interval: {\n                        //网格分割间隔数\n                        value: 'auto',\n                        cusNumber: 0\n                    },\n                    colorOne: 'auto',\n                    //网格第一颜色\n                    colorTwo: 'auto'\n                },\n                //网格第二颜色\n                axisLine: {\n                    //第二根X轴必需\n                    onZero: false\n                }\n            },\n            xAxisDown: {\n                show: true,\n                //显示X轴\n                title: {\n                    showTitle: false,\n                    //显示X轴\n                    text: '',\n                    //标题内容\n                    nameGap: 15,\n                    //标题与轴线距离\n                    rotate: 0,\n                    //标题倾斜角度\n                    label: deepCopy(baseComponent.label),\n                    fzPosition: 'end'\n                },\n                //标题对齐方式,end: 尾部, middle: 中间\n                name: '显示X轴',\n                inverse: false,\n                //反向坐标轴 (echarts有)\n                //刻度线\n                tickLine: {\n                    show: true,\n                    //显示刻度线\n                    width: 1,\n                    //刻度线宽度\n                    color: 'auto'\n                },\n                //刻度线颜色\n                //刻度\n                tick: {\n                    show: true,\n                    //显示刻度\n                    position: 'outside',\n                    //刻度位置,默认: outside朝外 / inside: 朝内\n                    length: 5,\n                    //刻度长度\n                    width: 1,\n                    //刻度宽度\n                    color: 'auto'\n                },\n                //刻度颜色\n                //标签\n                tickLabel: {\n                    show: true,\n                    //显示刻度标签\n                    label: deepCopy(baseComponent.label),\n                    rotate: 0,\n                    //倾斜标签角度\n                    prefix: '',\n                    //标签前缀\n                    suffix: '',\n                    //标签后缀\n                    optimize: 0,\n                    //标签间隔个数\n                    distance: 0,\n                    //标签与轴线距离\n                    min: null,\n                    //最小值\n                    max: null,\n                    //最大值\n                    ratio: 1,\n                    digit: 'auto'\n                },\n                //网格线\n                netLine: {\n                    show: false,\n                    //显示网格线\n                    width: 1,\n                    //网格线宽度\n                    type: 'solid',\n                    //网格线类型\n                    color: 'auto',\n                    //网格线颜色\n                    interval: {\n                        //网格分割间隔数\n                        value: 'auto',\n                        cusNumber: 0\n                    }\n                },\n                //网格区域\n                netArea: {\n                    show: false,\n                    //显示网格区域\n                    interval: {\n                        //网格分割间隔数\n                        value: 'auto',\n                        cusNumber: 0\n                    },\n                    colorOne: 'auto',\n                    //网格第一颜色\n                    colorTwo: 'auto'\n                }\n            },\n            //网格第二颜色\n            yAxisLeft: {\n                show: true,\n                //显示X轴\n                title: {\n                    showTitle: false,\n                    //显示X轴\n                    text: '',\n                    //标题内容\n                    nameGap: 15,\n                    //标题与轴线距离\n                    rotate: 0,\n                    //标题倾斜角度\n                    label: deepCopy(baseComponent.label),\n                    fzPosition: 'end'\n                },\n                //标题对齐方式,end: 尾部, middle: 中间\n                name: '显示Y轴',\n                inverse: false,\n                //反向坐标轴 (echarts有)\n                //刻度线\n                tickLine: {\n                    show: true,\n                    //显示刻度线\n                    width: 1,\n                    //刻度线宽度\n                    color: 'auto'\n                },\n                //刻度线颜色\n                //刻度\n                tick: {\n                    show: true,\n                    //显示刻度\n                    position: 'outside',\n                    //刻度位置,默认: outside朝外 / inside: 朝内\n                    length: 5,\n                    //刻度长度\n                    width: 1,\n                    //刻度宽度\n                    color: 'auto'\n                },\n                //刻度颜色\n                //标签\n                tickLabel: {\n                    show: true,\n                    //显示刻度标签\n                    label: deepCopy(baseComponent.label),\n                    rotate: 0,\n                    //倾斜标签角度\n                    formatter: deepCopy(baseComponent.formatter),\n                    split: 5,\n                    //分割段数\n                    min: null,\n                    //最小值\n                    max: null,\n                    //最大值\n                    prefix: '',\n                    //标签前缀\n                    suffix: '',\n                    //标签后缀\n                    ratio: 1,\n                    digit: 'auto',\n                    distance: 0\n                },\n                //标签与轴线距离\n                //网格线\n                netLine: {\n                    show: false,\n                    //显示网格线\n                    width: 1,\n                    //网格线宽度\n                    type: 'solid',\n                    //网格线类型\n                    color: 'auto',\n                    //网格线颜色\n                    interval: {\n                        //网格分割间隔数\n                        value: 'auto',\n                        cusNumber: 0\n                    }\n                },\n                //网格区域\n                netArea: {\n                    show: false,\n                    //显示网格区域\n                    interval: {\n                        //网格分割间隔数\n                        value: 'auto',\n                        cusNumber: 0\n                    },\n                    colorOne: 'auto',\n                    //网格第一颜色\n                    colorTwo: 'auto'\n                }\n            },\n            //网格第二颜色\n            yAxisRight: {\n                show: false,\n                //显示X轴\n                title: {\n                    showTitle: false,\n                    //显示X轴\n                    text: '',\n                    //标题内容\n                    nameGap: 15,\n                    //标题与轴线距离\n                    rotate: 0,\n                    //标题倾斜角度\n                    label: deepCopy(baseComponent.label),\n                    fzPosition: 'end'\n                },\n                //标题对齐方式,end: 尾部, middle: 中间\n                name: '显示Y轴',\n                inverse: false,\n                //反向坐标轴 (echarts有)\n                //刻度线\n                tickLine: {\n                    show: true,\n                    //显示刻度线\n                    width: 1,\n                    //刻度线宽度\n                    color: 'auto'\n                },\n                //刻度线颜色\n                //刻度\n                tick: {\n                    show: true,\n                    //显示刻度\n                    position: 'outside',\n                    //刻度位置,默认: outside朝外 / inside: 朝内\n                    length: 5,\n                    //刻度长度\n                    width: 1,\n                    //刻度宽度\n                    color: 'auto'\n                },\n                //刻度颜色\n                //标签\n                tickLabel: {\n                    show: true,\n                    //显示刻度标签\n                    label: deepCopy(baseComponent.label),\n                    rotate: 0,\n                    //倾斜标签角度\n                    formatter: deepCopy(baseComponent.formatter),\n                    split: 5,\n                    //分割段数\n                    min: null,\n                    //最小值\n                    max: null,\n                    //最大值\n                    prefix: '',\n                    //标签前缀\n                    suffix: '',\n                    //标签后缀\n                    ratio: 1,\n                    digit: 'auto',\n                    distance: 0\n                },\n                //标签与轴线距离\n                //网格线\n                netLine: {\n                    show: false,\n                    //显示网格线\n                    width: 1,\n                    //网格线宽度\n                    type: 'solid',\n                    //网格线类型\n                    color: 'auto',\n                    //网格线颜色\n                    interval: {\n                        //网格分割间隔数\n                        value: 'auto',\n                        cusNumber: 0\n                    }\n                },\n                //网格区域\n                netArea: {\n                    show: false,\n                    //显示网格区域\n                    interval: {\n                        //网格分割间隔数\n                        value: 'auto',\n                        cusNumber: 0\n                    },\n                    colorOne: 'auto',\n                    //网格第一颜色\n                    colorTwo: 'auto'\n                }\n            }\n        }\n    };    //此类数据抽出来作为模板数据,每次使用deepCopy一份即可\n          //注: 若页面展示的是语义化的参数,则此处也只定义语义化的参数,具体数值在引擎里做转换\n          //若界面选择的直接是用户期望的数值,则直接采用数值即可\n          /**\n *  位置信息\n *\n */\n    //网格第二颜色\n    //此类数据抽出来作为模板数据,每次使用deepCopy一份即可\n    //注: 若页面展示的是语义化的参数,则此处也只定义语义化的参数,具体数值在引擎里做转换\n    //若界面选择的直接是用户期望的数值,则直接采用数值即可\n    /**\n *  位置信息\n *\n */\n    const positionOption = [\n        {\n            value: 'left-top',\n            label: '左上'\n        },\n        {\n            value: 'left-middle',\n            label: '左中'\n        },\n        {\n            value: 'left-bottom',\n            label: '左下'\n        },\n        {\n            value: 'right-top',\n            label: '右上'\n        },\n        {\n            value: 'right-middle',\n            label: '右中'\n        },\n        {\n            value: 'right-bottom',\n            label: '右下'\n        },\n        {\n            value: 'center-top',\n            label: '中上'\n        },\n        {\n            value: 'center-middle',\n            label: '居中'\n        },\n        {\n            value: 'center-bottom',\n            label: '中下'\n        },\n        {\n            value: 'custom',\n            label: '自定义'\n        }\n    ];    //距离\n    //距离\n    const distanceOption = [\n        {\n            value: 'auto',\n            label: '默认'\n        },\n        {\n            value: 'far',\n            label: '远'\n        },\n        {\n            value: 'normal',\n            label: '一般'\n        },\n        {\n            value: 'close',\n            label: '近'\n        },\n        {\n            value: 'custom',\n            label: '自定义'\n        }\n    ];    // 字体大小集合\n    // 字体大小集合\n    const fontSizeOption = [\n        {\n            value: 6,\n            label: '6px'\n        },\n        {\n            value: 8,\n            label: '8px'\n        },\n        {\n            value: 10,\n            label: '10px'\n        },\n        {\n            value: 12,\n            label: '12px'\n        },\n        {\n            value: 14,\n            label: '14px'\n        },\n        {\n            value: 16,\n            label: '16px'\n        },\n        {\n            value: 18,\n            label: '18px'\n        },\n        {\n            value: 20,\n            label: '20px'\n        },\n        {\n            value: 22,\n            label: '22px'\n        },\n        {\n            value: 24,\n            label: '24px'\n        },\n        {\n            value: 30,\n            label: '30x'\n        },\n        {\n            value: 36,\n            label: '36px'\n        },\n        {\n            value: 'custom',\n            label: '自定义'\n        }\n    ];    // 线样式\n    // 线样式\n    const lineStyleOption = [\n        {\n            value: 'solid',\n            label: '实线'\n        },\n        {\n            value: 'dashed',\n            label: '虚线'\n        },\n        {\n            value: 'dotted',\n            label: '点线'\n        }\n    ];    // 线宽度\n    // 线宽度\n    const lineWeightOption = [\n        {\n            value: 'normal',\n            label: '正常'\n        },\n        {\n            value: 'bold',\n            label: '粗'\n        },\n        {\n            value: 'bolder',\n            label: '加粗'\n        }\n    ];    // 普通位置集合\n    // 普通位置集合\n    const posOption = [\n        {\n            value: 'auto',\n            label: '默认'\n        },\n        {\n            value: 'inside',\n            label: '中心位置'\n        },\n        {\n            value: 'top',\n            label: '上侧'\n        },\n        {\n            value: 'left',\n            label: '左侧'\n        },\n        {\n            value: 'right',\n            label: '右侧'\n        },\n        {\n            value: 'bottom',\n            label: '底侧'\n        }\n    ];    // 数值比例集合\n    // 数值比例集合\n    const ratioOption = [\n        {\n            value: 100,\n            label: '乘以100'\n        },\n        {\n            value: 10,\n            label: '乘以10'\n        },\n        {\n            value: 1,\n            label: '默认'\n        },\n        {\n            value: 0.1,\n            label: '除以10'\n        },\n        {\n            value: 0.01,\n            label: '除以100'\n        },\n        {\n            value: 0.001,\n            label: '除以1000'\n        },\n        {\n            value: 0.0001,\n            label: '除以一万'\n        },\n        {\n            value: 0.00001,\n            label: '除以10万'\n        },\n        {\n            value: 0.000001,\n            label: '除以一百万'\n        },\n        {\n            value: 1e-7,\n            label: '除以一千万'\n        },\n        {\n            value: 1e-8,\n            label: '除以一亿'\n        },\n        {\n            value: 1e-9,\n            label: '除以十亿'\n        }\n    ];    // 数值位数集合\n    // 数值位数集合\n    const digitOption = [\n        {\n            value: 'auto',\n            label: '自动显示'\n        },\n        {\n            value: 0,\n            label: '整数'\n        },\n        {\n            value: 1,\n            label: '1位小数'\n        },\n        {\n            value: 2,\n            label: '2位小数'\n        },\n        {\n            value: 3,\n            label: '3位小数'\n        },\n        {\n            value: 4,\n            label: '4位小数'\n        },\n        {\n            value: 5,\n            label: '5位小数'\n        },\n        {\n            value: 6,\n            label: '6位小数'\n        },\n        {\n            value: 7,\n            label: '7位小数'\n        },\n        {\n            value: 8,\n            label: '8位小数'\n        }\n    ];    // (图例)大小集合\n    // (图例)大小集合\n    const sizeOption = [\n        {\n            value: 'auto',\n            label: '默认'\n        },\n        {\n            value: 'big',\n            label: '大'\n        },\n        {\n            value: 'medium',\n            label: '中'\n        },\n        {\n            value: 'small',\n            label: '小'\n        },\n        {\n            value: 'custom',\n            label: '自定义'\n        }\n    ];    // 间隔集合\n    // 间隔集合\n    const intervalOption = [\n        {\n            value: 'auto',\n            label: '默认'\n        },\n        {\n            value: 0,\n            label: '每个刻度'\n        },\n        {\n            value: 1,\n            label: '间隔1个'\n        },\n        {\n            value: 2,\n            label: '间隔2个'\n        },\n        {\n            value: 3,\n            label: '间隔3个'\n        },\n        {\n            value: 'custom',\n            label: '自定义'\n        }\n    ];    //字体大小\n    //字体大小\n    const fontSizeList = [\n        {\n            label: '默认',\n            value: 'auto'\n        },\n        {\n            label: '6px',\n            value: 6\n        },\n        {\n            label: '8px',\n            value: 8\n        },\n        {\n            label: '10px',\n            value: 10\n        },\n        {\n            label: '12px',\n            value: 12\n        },\n        {\n            label: '14px',\n            value: 14\n        },\n        {\n            label: '16px',\n            value: 16\n        },\n        {\n            label: '18px',\n            value: 18\n        },\n        {\n            label: '24px',\n            value: 24\n        },\n        {\n            label: '28px',\n            value: 28\n        },\n        {\n            label: '36px',\n            value: 36\n        },\n        {\n            label: '自定义',\n            value: 'custom'\n        }\n    ];    //label字体样式 1 // 'bold','italic','vertical'\n    //label字体样式 1 // 'bold','italic','vertical'\n    const fontStyleIBV = {\n        bold: {\n            des: '加粗',\n            text: 'B'\n        },\n        italic: {\n            des: '斜体',\n            text: 'I'\n        },\n        vertical: {\n            des: '文字方向',\n            text: '垂直'\n        }\n    };    //label字体样式 2 // 'italic','bold'\n    //label字体样式 2 // 'italic','bold'\n    const fontStyleIB = {\n        bold: {\n            des: '加粗',\n            text: 'B'\n        },\n        italic: {\n            des: '斜体',\n            text: 'I'\n        }\n    };    // model data\n    // model data\n    const chartModelData = [\n        [\n            '地区',\n            '衣服',\n            '食材',\n            '图书'\n        ],\n        [\n            '上海',\n            134,\n            345,\n            51\n        ],\n        [\n            '北京',\n            345,\n            421,\n            234\n        ],\n        [\n            '广州',\n            453,\n            224,\n            156\n        ],\n        [\n            '杭州',\n            321,\n            634,\n            213\n        ],\n        [\n            '南京',\n            654,\n            542,\n            231\n        ]\n    ];    // base chart option\n    // base chart option\n    const chartOptions = {\n        //图表类型设置集合\n        chartAllType: 'echarts|line|default',\n        //图表配置\n        defaultOption: deepCopy(chartComponent),\n        //图表数据\n        chartData: deepCopy(chartModelData)\n    };    //图表设置项\n    return {\n        chartComponent,\n        positionOption,\n        distanceOption,\n        fontSizeOption,\n        lineStyleOption,\n        lineWeightOption,\n        posOption,\n        ratioOption,\n        digitOption,\n        sizeOption,\n        fontSizeList,\n        intervalOption,\n        fontStyleIBV,\n        fontStyleIB,\n        chartOptions\n    };\n});"]}