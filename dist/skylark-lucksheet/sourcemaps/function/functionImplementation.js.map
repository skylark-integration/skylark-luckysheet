{"version":3,"sources":["function/functionImplementation.js"],"names":["define","m_func","m_matrix_methods","m_get","cells","luckysheetSparkline","formula","func_methods","m_datecontroll","m_validate","m_format","m_sort","m_getdata","m_util","Store","dayjs","numeral","luckysheet_getcelldata","luckysheet_parseData","luckysheet_getValue","inverse","getSheetIndex","getluckysheetfile","getRangetxt","isdatetime","diff","isdatatype","isRealNum","isRealNull","valueIsError","error","genarate","update","orderbydata","getcellvalue","getObjType","ABCatNum","chatatABC","numFormat","SUM","arguments","length","this","m","na","i","errorParamCheck","p","v","dataArr","data","isDyadicArr","concat","getDataArr","startCell","getCellDataArr","push","toString","toLowerCase","sum","luckysheet_calcADPMM","e","err","errorInfo","AVERAGE","count","d","COUNT","COUNTA","MAX","max","parseFloat","MIN","min","AGE_BY_IDCARD","UUserCard","getFirstValue","window","luckysheet_function","ISIDCARD","f","birthday","BIRTHDAY_BY_IDCARD","cuurentdate","age","SEX_BY_IDCARD","parseInt","substr","substring","datetype","format","PROVINCE_BY_IDCARD","native","provinceArray","classlist","province","CITY_BY_IDCARD","dataNum","cityData","code","title","STAR_BY_IDCARD","month","Date","getMonth","day","getDate","arr","ANIMAL_BY_IDCARD","list","Array","index","getFullYear","isNaN","idcard","test","DM_TEXT_CUTWORD","cell_r","luckysheetCurrentRow","cell_c","luckysheetCurrentColumn","cell_fp","luckysheetCurrentFunction","text","$","post","type","flowdata","execFunctionGroup","refreshRange","row","column","DM_TEXT_TFIDF","set","deepCopyFlowData","DM_TEXT_TEXTRANK","DATA_CN_STOCK_CLOSE","stockcode","date","data_date","ct","t","price","stockCode","DATA_CN_STOCK_OPEN","DATA_CN_STOCK_MAX","DATA_CN_STOCK_MIN","DATA_CN_STOCK_VOLUMN","DATA_CN_STOCK_AMOUNT","ISDATE","SUMIF","rangeData","rangeRow","rowl","rangeCol","coll","criteria","getRangeArray","sumRangeData","sumRangeStart","sumRangeRow","sumRangeCol","sumRangeSheet","sheetName","col","replace","real_ABC","real_Num","acompareb","TAN","number","Math","tan","TANH","e2","exp","CEILING","significance","nm","ceil","ATAN","atan","ASINH","log","sqrt","ABS","abs","ACOS","acos","ACOSH","MULTINOMIAL","divisor","factorial","ATANH","ATAN2","number_x","number_y","atan2","COUNTBLANK","r","c","COSH","INT","floor","str","getcellrange","cell","ISEVEN","ISODD","LCM","o","y","j","n","undefined","pop","splice","pow","LN","LOG","base","LOG10","MOD","modulus","MROUND","multiple","round","ODD","temp","SUMSQ","COMBIN","number_chosen","SUBTOTAL","function_num","data_function_num","rowArr","prototype","slice","apply","shift","result","value","compute","PRODUCT","STDEVA","STDEVP","VAR_S","VAR_P","ASIN","asin","COUNTIF","range","data_range","data_criteria","getCriteriaResult","criter","matches","indexOf","isWildcard","Function","RADIANS","PI","RAND","random","COUNTUNIQUE","UNIQUE","DEGREES","ERFC","jStat","erfc","EVEN","EXP","FACT","FACTDOUBLE","factorialDouble","FLOOR","precision","GCD","x","RANDBETWEEN","bottom","top","ROUND","digits","ROUNDDOWN","ROUNDUP","SERIESSUM","data_coefficients","coefficients","SIGN","SIN","sin","SINH","SQRT","SQRTPI","GAMMALN","gammaln","COS","cos","TRUNC","QUOTIENT","numerator","denominator","POWER","power","SUMIFS","args","results","COUNTIFS","HARMEAN","den","len","HYPGEOMDIST","sample_s","number_sample","population_s","number_pop","cumulative","getCellBoolen","pdf","M","N","cdf","INTERCEPT","data_known_y","known_y","data_known_x","known_x","data_y","data_x","num_y","num_x","variance_s","xmean","mean","ymean","num","b","KURT","dataArr_n","standardDeviation_s","sigma","stdev","LARGE","sort","a","standardDeviation","GEOMEAN","geomean","RANK_EQ","data_ref","ref","ref_n","order","RANK_AVG","PERCENTRANK_EXC","uniques","match","lastIndexOf","PERCENTRANK_INC","FORECAST","FISHERINV","e2y","FISHER","MODE_SNGL","currentItem","maxItems","resultIndex","WEIBULL_DIST","alpha","beta","AVEDEV","subtract","AVERAGEA","BINOM_DIST","number_s","trials","probability_s","binomial","BINOM_INV","CONFIDENCE_NORM","standard_dev","size","normalci","CORREL","corrcoeff","COVARIANCE_P","mean1","mean2","COVARIANCE_S","covariance","DEVSQ","EXPON_DIST","lambda","exponential","AVERAGEIF","vnow","AVERAGEIFS","PERMUT","TRIMMEAN","data_dataArr","percent","trim","array","idx","initial","PERCENTILE_EXC","k","l","fl","PERCENTILE_INC","PEARSON","den1","den2","NORM_S_INV","probability","normal","inv","NORM_S_DIST","z","NORM_INV","NORM_DIST","NEGBINOM_DIST","number_f","negbin","MINA","MEDIAN","median","MAXA","LOGNORM_INV","lognormal","LOGNORM_DIST","Z_TEST","PROB","data_x_range","data_prob_range","x_range","prob_range","prob_range_sum","num_x_range","num_prob_range","lower_limit","upper_limit","QUARTILE_EXC","data_array","quart","QUARTILE_INC","POISSON_DIST","poisson","RSQ","T_DIST","degrees_freedom","studentt","T_DIST_2T","T_DIST_RT","T_INV","deg_freedom","T_INV_2T","T_TEST","tails","df","diff_arr","mean_x","mean_y","s_x","s_y","F_DIST","degrees_freedom1","degrees_freedom2","centralF","F_DIST_RT","VARA","VARPA","STEYX","lft","STANDARDIZE","SMALL","SLOPE","SKEW","SKEW_P","m2","m3","ADDRESS","row_num","column_num","abs_num","A1","sheet_text","INDIRECT","ref_text","currentSheet","calculateSheetIndex","sheetdata","iscelldata","cellrange","execFunctionGlobalData","ef","name","ROW","reference","ROWS","COLUMN","COLUMNS","OFFSET","rows","cols","height","width","cellRow0","cellCol0","cellRow1","cellCol1","MATCH","lookup_value","data_lookup_array","lookup_array","indexValue","match_type","VLOOKUP","data_table_array","table_array","getCellDataDyadicArr","col_index_num","range_lookup","localeCompare","HLOOKUP","searchkey","isaccurate","matchv","showv","LOOKUP","range2","rangeNow","mat","INDEX","isReference","getDataDyadicArr","rowlen","collen","row_index","column_index","GETPIVOTDATA","CHOOSE","index_num","data_result","HYPERLINK","TIME","hour","minute","second","time","TIMEVALUE","time_text","getCellDate","isValid","get","EOMONTH","start_date","months","add","EDATE","SECOND","seconds","MINUTE","minutes","HOUR","hours","NOW","NETWORKDAYS","NETWORKDAYS_INTL","WEEKEND_TYPES","end_date","weekend","holidays","getCellrangeDate","days","total","weekday","dec","charAt","ISOWEEKNUM","isoWeeks","WEEKNUM","WEEK_STARTS","serial_number","return_type","week_start","inc","isoWeekday","WEEKDAY","DAY","DAYS","DAYS360","method","sd","ed","sm","em","smd","year","emd","DATE","DATEVALUE","date_text","DATEDIF","moment","fromOADate","startDate","endDate","unit","startM","endM","WORKDAY","WORKDAY_INTL","YEAR","YEARFRAC","basis","sy","ey","ylength","isLeapYear","feb29Between","years","average","TODAY","MONTH","EFFECT","nominal_rate","npery","DOLLAR","decimals","DOLLARDE","fractional_dollar","fraction","LN10","LN2","DOLLARFR","decimal_dollar","DB","cost","salvage","life","period","rate","toFixed","current","ceiling","DDB","factor","RATE","nper","pmt","pv","fv","guess","iter","close","t1","t2","newRate","CUMPRINC","start_period","end_period","payment","PMT","principal","FV","COUPNUM","settlement","maturity","frequency","SYD","TBILLEQ","discount","TBILLYIELD","pr","TBILLPRICE","PV","ACCRINT","issue","first_interest","par","calc_method","ACCRINTM","COUPDAYBS","interest","maxCount","di","COUPDAYS","d1","d2","COUPDAYSNC","COUPNCD","COUPPCD","term","FVSCHEDULE","data_schedule","schedule","schedule_n","future","YIELD","redemption","yld","PRICE","DSR","E","T2","YIELDDISC","NOMINAL","effect_rate","XIRR","data_values","values","values_n","dates","positive","negative","epsRate","resultValue","irrResult","irrResultDeriv","frac","resultRate","contLoop","MIRR","finance_rate","reinvest_rate","payments","incomes","NPV","IRR","XNPV","CUMIPMT","IPMT","per","PPMT","INTRATE","investment","DSC","A","T1","PRICEDISC","PRICEMAT","td","tm","ty","B","DSM","DIM","RECEIVED","DISC","NPER","SLN","DURATION","coupon","sum1","sum2","MDURATION","BIN2DEC","stringified","BIN2HEX","places","toUpperCase","join","BIN2OCT","DEC2BIN","DEC2HEX","DEC2OCT","HEX2BIN","decimal","HEX2DEC","HEX2OCT","OCT2BIN","OCT2DEC","OCT2HEX","COMPLEX","real_num","i_num","suffix","sign","IMREAL","inumber","plus","minus","last","Number","IMAGINARY","IMCONJUGATE","IMABS","DELTA","number1","number2","IMSUM","IMSUB","inumber1","inumber2","unit1","unit2","IMPRODUCT","IMDIV","NOT","logical","TRUE","FALSE","AND","IFERROR","value_if_error","IF","logical_test","value_if_true","value_if_false","OR","NE","value1","value2","EQ","GT","GTE","LT","LTE","ADD","MINUS","MULTIPLY","DIVIDE","CONCAT","UNARY_PERCENT","CONCATENATE","CODE","charCodeAt","CHAR","String","fromCharCode","ARABIC","CM","D","CD","C","XC","L","XL","X","IX","V","IV","I","ROMAN","REGEXEXTRACT","regular_expression","RegExp","REGEXMATCH","REGEXREPLACE","replacement","T","FIXED","no_commas","FIND","find_text","within_text","start_num","FINDB","strArr","split","JOIN","separator","LEFT","num_chars","RIGHT","MID","LEN","LENB","LOWER","UPPER","EXACT","text1","text2","REPLACE","old_text","new_text","REPT","number_times","SEARCH","foundAt","SUBSTITUTE","instance_num","reg","CLEAN","textArr","TEXT","format_text","TRIM","VALUE","PROPER","word","CONVERT","from_unit","to_unit","alt","units","binary_prefixes","Yi","Zi","Ei","Pi","Ti","Gi","Mi","ki","unit_prefixes","Y","Z","P","G","h","u","from","to","base_from_unit","base_to_unit","from_multiplier","to_multiplier","from_binary_prefix","from_unit_prefix","to_binary_prefix","to_unit_prefix","SUMX2MY2","data_array_x","array_x","data_array_y","array_y","SUMX2PY2","SUMXMY2","TRANSPOSE","map","TREND","known_y_rowlen","known_y_collen","known_x_rowlen","known_x_collen","new_x","data_new_x","const_b","ls","arr_x","arr_y","xSum","ySum","xySum","x2Sum","xMean","yMean","leastSquare","FREQUENCY","data_data_array","data_array_n","data_bins_array","bins_array","bins_array_n","count1","count2","GROWTH","LINEST","LOGEST","MDETERM","callee","Ma","MINVERSE","MMULT","data_array1","array1","data_array2","array2","SUMPRODUCT","ISFORMULA","data_cell","CELL","info_type","data_info_type","data_reference","file","currentSheetIndex","col_index","Object","fa","ht","cfg","config","defaultcollen","NA","ERROR_TYPE","error_val","data_error_val","error_obj","#NULL!","#DIV/0!","#VALUE!","#REF!","#NAME?","#NUM!","#N/A","#GETTING_DATA","ISBLANK","ISERR","data_value","ISERROR","ISLOGICAL","ISNA","ISNONTEXT","ISNUMBER","ISREF","ISTEXT","TYPE","TO_DATE","TO_PURE_NUMBER","TO_TEXT","TO_DOLLARS","TO_PERCENT","DGET","data_database","database","field","resultIndexes","findResultIndex","targetFields","findField","rest","DMAX","maxValue","DMIN","minValue","DAVERAGE","DCOUNT","targetValues","DCOUNTA","DPRODUCT","compact","DSTDEV","DSTDEVP","DSUM","DVAR","DVARP","LINESPLINES","colorList","rangeValue","lineColor","lineWidth","normalValue","normalColor","maxSpot","minSpot","spotRadius","dataformat","readCellDataToOneArray","cellSize","getCellRealSize","sparksetting","sparkColorSetting","attr","nv","init","AREASPLINES","fillColor","COLUMNSPLINES","barSpacing","barColor","negBarColor","chartRangeMax","colorLists","sparklinesColorMap","STACKCOLUMNSPLINES","getPureValueByData","stackconfig","colstr","rowstr","BARSPLINES","STACKBARSPLINES","DISCRETESPLINES","thresholdValue","TRISTATESPLINES","zeroBarColor","PIESPLINES","offset","borderWidth","borderColor","BOXSPLINES","outlierIQR","target","BULLETSPLINES","data1","getValueByFuncData","data2","SORT","sort_index","sort_order","by_col","asc","desc","FILTER","data_include","include","txt","if_empty","occurs_once","strObj","allUnique","oneUnique","RANDARRAY","result_row","SEQUENCE","start","step","EVALUATE","sheetindex_now","luckysheetCurrentIndex","strtext","execstringformula"],"mappings":"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,cAAcpC,UAAU,GAAI,QACvD,GAAIX,EAAak2B,GACb,OAAOA,EAEXA,EAAUA,EAAQt0B,WAElB,IA89CIu0B,EA99CAC,IAEI,iBACA,IACA,KACA,UACA,GACA,EACA,uBAGA,iBACA,IACA,KACA,mBACA,GACA,EACA,uBAGA,iBACA,KACA,KACA,UACA,GACA,EACA,uBAGA,iBACA,KACA,KACA,UACA,GACA,EACA,uBAGA,eACA,KACA,KACA,QACA,GACA,EACA,uBAGA,eACA,OACA,KACA,QACA,GACA,EACA,uBAGA,iBACA,QACA,KACA,SACA,GACA,EACA,aAGA,SACA,IACA,KACA,oBACA,GACA,EACA,IAGA,mBACA,MACA,KACA,4BACA,GACA,EACA,IAGA,WACA,KACC,OACD,UACA,GACA,EACA,QAGA,MACA,KACA,KACA,QACA,GACA,EACA,MAGA,oBACA,KACA,KACA,UACA,GACA,EACA,uBAGA,MACA,MACA,KACA,YACA,GACA,EACA,MAGA,OACA,IACA,KACA,QACA,GACA,EACA,QAGA,YACA,KACA,KACA,iBACA,GACA,EACA,IAGA,MACA,OACC,KACD,eACA,GACA,EACA,IAGA,MACA,OACC,OACD,UACA,GACA,EACA,gBAGA,OACA,OACA,KACA,eACA,GACA,EACA,IAGA,UACA,KACA,KACA,sBACA,GACA,EACA,IAGA,2BACA,QACA,KACA,aACA,GACA,EACA,IAGA,UACA,IACA,KACA,mBACA,GACA,EACA,IAGA,iBACA,QACC,SACD,UACA,GACA,EACA,QAGA,aACA,OACC,QACD,UACA,GACA,EACA,gBAGA,aACA,OACC,QACD,UACA,GACA,EACA,eAGA,mBACA,OACC,QACD,UACA,GACA,EACA,uBAGA,cACA,KACA,KACA,UACA,GACA,EACA,IAGA,aACA,OACC,QACD,UACA,GACA,EACA,mBAGA,sBACA,QACC,SACD,UACA,GACA,EACA,aAGA,aACA,SAEI,UACA,SACA,YAEJ,UACA,GACA,EACA,sBAGA,aACA,OACC,QACD,UACA,GACA,EACA,gBAGA,MACA,MACA,KACA,UACA,GACA,EACA,iBAGA,SACA,MACC,KACD,QACA,GACA,EACA,uBAGA,MACA,KACC,OACD,QACA,GACA,EACA,QAGA,SACA,IACA,KACA,SACA,GACA,EACA,oBAGA,kBACA,OACA,KACA,eACA,GACA,EACA,mBAGA,OACA,OACC,MACD,SACA,GACA,EACA,OAGA,eACA,MACC,MACD,UACA,GACA,EACA,mBAGA,MACA,MACA,KACA,UACA,GACA,EACA,QAGA,MACA,OACC,KACD,UACA,GACA,EACA,OAGA,QACA,IACA,KACA,wBACA,GACA,EACA,IAGA,cACA,KACA,KACA,UACA,GACA,EACA,mBAGA,OACA,KACA,KACA,UACA,GACA,EACA,QAGA,aACA,MACA,KACA,UACA,GACA,EACA,kBAGA,MACA,MACA,KACA,gBACA,GACA,EACA,MAGA,SACA,MACA,KACA,UACA,GACA,EACA,gBAGA,QACA,KACC,MACD,yBACA,GACA,EACA,IAGA,QACA,QACA,KACA,QACA,GACA,EACA,aAGA,OACA,IACA,KACA,QACA,GACA,EACA,OAGA,OACA,KACA,KACA,iBACA,GACA,EACA,IAGA,uBACA,OACC,UACD,UACA,GACA,EACA,eAGA,UACA,KACA,KACA,QACA,GACA,EACA,MAGA,QACA,IACA,KACA,cACA,GACA,EACA,IAGA,QACA,KACA,KACA,aACA,GACA,EACA,IAGA,aACA,MACC,KACD,SACA,GACA,EACA,kBAGA,kBACA,OAEI,KACA,OAEJ,UACA,GACA,EACA,cAGA,OACA,KACC,MACD,QACA,GACA,EACA,OAGA,yBACA,SACA,KACA,UACA,GACA,EACA,YAGA,yBACA,QAEI,SACA,WAEJ,QACA,GACA,EACA,YAGA,uBACA,QACA,KACA,UACA,GACA,EACA,cAGA,eACA,SAEI,SACA,QAEJ,QACA,GACA,EACA,cAGA,OACA,KACA,KACA,UACA,GACA,EACA,QAGA,qBACA,UACA,KACA,QACA,GACA,EACA,eAGA,aACA,MACA,KACA,UACA,GACA,EACA,SAGA,QACA,IACA,KACA,UACA,GACA,EACA,IAGA,QACA,MACA,KACA,sBACA,GACA,EACA,IAGA,SACA,KACC,OACD,eACA,GACA,EACA,IAGA,WACA,KACA,KACA,QACA,GACA,EACA,IAGA,OACA,KACA,KACA,SACA,GACA,EACA,mBAGA,aACA,KACA,KACA,UACA,GACA,EACA,mBAGA,QACA,KAEI,IACA,MAEJ,UACA,GACA,EACA,OAGA,QACA,KACA,KACA,iBACA,GACA,EACA,IAGA,MACA,KACA,KACA,eACA,GACA,EACA,IAGA,UACA,KACA,KACA,iBACA,GACA,EACA,QAGA,kBACA,OACA,KACA,UACA,GACA,EACA,gBAGA,iBACA,OACC,QACD,SACA,GACA,EACA,qBAGA,mBACA,OACC,SACD,SACA,GACA,EACA,IAGA,2BACA,QACA,KACA,gBACA,GACA,EACA,IAGA,SACA,MACC,UACD,UACA,GACA,EACA,mBAGA,2BACA,OACA,KACA,uBACA,GACA,EACA,IAGA,QACA,IACA,KACA,UACA,GACA,EACA,IAGA,iBACA,MACA,KACA,SACA,GACA,EACA,SAGA,wBACA,OACA,KACA,YACA,GACA,EACA,UAGA,SACA,IACA,KACA,SACA,GACA,EACA,sBAGA,SACA,OACC,MACD,QACA,GACA,EACA,KAGA,kBACA,OACA,KACA,UACA,GACA,EACA,OAGA,OACA,MACA,KACA,uBACA,GACA,EACA,IAGA,SACA,SACA,KACA,QACA,GACA,EACA,OAGA,iBACA,IACA,KACA,UACA,GACA,EACA,uBAGA,eACA,KACA,KACA,QACA,GACA,EACA,uBAGA,gBACA,KACA,KACA,SACA,GACA,EACA,YAGA,eACA,aACA,KACA,QACA,GACA,EACA,uBAGA,gBACA,KACC,OACD,UACA,GACA,EACA,OAGA,SACA,IACA,KACA,SACA,GACA,EACA,IAGA,SACA,MACA,KACA,4BACA,GACA,EACA,mBAGA,MACA,IACA,KACA,uBACA,GACA,EACA,IAGA,aACA,MACA,KACA,QACA,GACA,EACA,gBAGA,SACA,KACA,KACA,YACA,GACA,EACA,IAGA,gBACA,OACA,KACA,qBACA,GACA,EACA,IAGA,eACA,KACA,KACA,SACA,GACA,EACA,YAGA,OACA,KACA,KACA,eACA,GACA,EACA,OAGA,kBACA,OACA,KACA,UACA,GACA,EACA,qBAGA,mBACA,QACC,UACD,UACA,GACA,EACA,qBAGA,QACA,IACA,KACA,qBACA,GACA,EACA,KAGA,OACA,OACA,KACA,SACA,GACA,EACA,YAGA,cACA,MACA,KACA,SACA,GACA,EACA,kBAGA,aACA,MACA,KACA,QACA,GACA,EACA,YAGA,QACA,KACA,KACA,UACA,GACA,EACA,gBAGA,SACA,MACA,KACA,SACA,GACA,EACA,IAGA,SACA,IACA,KACA,SACA,GACA,EACA,sBAGA,SACA,KACC,OACD,QACA,GACA,EACA,IAGA,sBACA,OACC,YACD,QACA,GACA,EACA,YAGA,UACA,IACA,KACA,0BACA,GACA,EACA,IAGA,UACA,KACA,KACA,mBACA,GACA,EACA,IAGA,OACA,KACA,KACA,QACA,GACA,EACA,cAGA,kBACA,QACC,SACD,QACA,GACA,EACA,QAGA,cACA,OACC,QACD,QACA,GACA,EACA,YAGA,cACA,OACC,QACD,QACA,GACA,EACA,WAGA,oBACA,OACC,QACD,QACA,GACA,EACA,sBAGA,eACA,KACA,KACA,QACA,GACA,EACA,IAGA,cACA,OACC,QACD,QACA,GACA,EACA,iBAGA,uBACA,QACC,SACD,QACA,GACA,EACA,UAGA,cACA,SAEI,UACA,SACA,YAEJ,QACA,GACA,EACA,oBAGA,cACA,OACC,QACD,QACA,GACA,EACA,YAGA,eACA,KACA,KACA,UACA,GACA,EACA,WAGA,YACA,KACA,KACA,eACA,GACA,EACA,IAGA,QACA,KACA,KACA,aACA,GACA,EACA,OAGA,SACA,KACA,KACA,uBACA,GACA,EACA,OAGA,QACA,QACA,KACA,QACA,GACA,EACA,aAGA,aACA,MACA,KACA,UACA,GACA,EACA,aAGA,WACA,MACA,KACA,UACA,GACA,EACA,aAGA,QACA,IACA,KACA,yBACA,GACA,EACA,IAGA,wBACA,IACA,KACA,UACA,GACA,EACA,QAGA,MACA,MACA,KACA,QACA,GACA,EACA,YAGA,QACA,IACA,KACA,QACA,GACA,EACA,MAGA,YACA,QACA,KACA,UACA,GACA,EACA,eAGA,cACA,SACA,KACA,UACA,GACA,EACA,YAGA,kBACA,SACA,KACA,UACA,GACA,EACA,aAGA,YACA,MACC,SACD,UACA,GACA,EACA,gBAGA,mBACA,YACA,KACA,UACA,GACA,EACA,cAGA,2BACA,UACA,KACA,QACA,GACA,EACA,aAGA,OACA,IACA,KACA,WACA,GACA,EACA,IAGA,OACA,IACA,KACA,SACA,GACA,EACA,IAGA,YACA,MACC,MACD,UACA,GACA,EACA,OAGA,QACA,KACA,KACA,iBACA,GACA,EACA,IAGA,OACA,KACA,KACA,UACA,GACA,EACA,QAGA,OACA,KACA,KACA,QACA,GACA,EACA,WAGJC,GACAC,IACI,OACA,GACA,sBACA,KACA,SAEJC,IACI,OACA,GACA,qBACA,KACA,SAEJC,IACI,OACA,GACA,mBACA,KACA,OAEJC,IACI,OACA,GACA,gBACA,KACA,QAEJC,IACI,OACA,GACA,cACA,KACA,QAEJC,IACI,OACA,GACA,WACA,KACA,QAEJC,IACI,OACA,GACA,QACA,KACA,QAEJC,IACI,OACA,GACA,KACA,KACA,SAGJC,GACAC,GACI,QACA,KACA,KAEJC,GACI,QACA,KACA,KAEJ5M,GACI,MACA,KACA,KAEJ6M,GACI,OACA,KACA,KAEJ1D,GACI,OACA,KACA,KAEJ2D,GACI,OACA,IACA,KAEJ/kB,GACI,OACA,IACA,KAEJuF,GACI,OACA,IACA,KAEJyf,GACI,QACA,IACA,KAEJn1B,GACI,QACA,GACA,KAEJK,GACI,OACA,GACA,KAEJsI,GACI,QACA,IACA,KAEJ7J,GACI,QACA,KACA,KAEJs2B,GACI,QACA,KACA,KAEJ5rB,GACI,OACA,KACA,KAEJtK,GACI,OACA,MACA,KAEJiC,GACI,QACA,MACA,KAEJyQ,GACI,OACA,MACA,KAEJ0E,GACI,QACA,MACA,KAEJhN,GACI,QACA,MACA,MAGJ+rB,EAAO,KACPC,EAAK,KACLC,EAAiBtB,EACjBuB,EAAetB,EACfuB,EAAkB,EAClBC,EAAgB,EAEpB,IAAS12B,EAAI,EAAGA,EAAIo1B,EAAMx1B,OAAQI,IAC9Bm1B,EAAsB,OAAhBC,EAAMp1B,GAAG,MAAmBo1B,EAAMp1B,GAAG,IACvCo1B,EAAMp1B,GAAG,KAAOu2B,GAAkBpB,EAAI/nB,QAAQmpB,IAAmB,KACjEF,EAAOjB,EAAMp1B,KAEbo1B,EAAMp1B,GAAG,KAAOw2B,GAAgBrB,EAAI/nB,QAAQopB,IAAiB,KAC7DF,EAAKlB,EAAMp1B,IAGnB,GAAa,OAATq2B,EAAe,CACf,IAAIM,EAAqBtB,EAAgBJ,EAAUtyB,UAAU,EAAG,IAC5Di0B,EAAmBd,EAAcb,EAAUtyB,UAAU,EAAG,IAC1B,OAA9BsyB,EAAUtyB,UAAU,EAAG,KACvBi0B,GACI,QACA,GACA,OAGJD,GACAF,EAAkBE,EAAmB,GACrCJ,EAAiBtB,EAAUtyB,UAAU,IAC9Bi0B,IACPH,EAAkBG,EAAiB,GACnCL,EAAiBtB,EAAUtyB,UAAUi0B,EAAiB,GAAGh3B,SAE7D,IAAK,IAAI2K,EAAI,EAAGA,EAAI6qB,EAAMx1B,OAAQ2K,IAC9B4qB,EAAsB,OAAhBC,EAAM7qB,GAAG,MAAmB6qB,EAAM7qB,GAAG,IACvC6qB,EAAM7qB,GAAG,KAAOgsB,GAAkBpB,EAAI/nB,QAAQmpB,IAAmB,KACjEF,EAAOjB,EAAM7qB,IAIzB,GAAW,OAAP+rB,EAAa,CACb,IAAIO,EAAmBxB,EAAgBH,EAAQvyB,UAAU,EAAG,IACxDm0B,EAAiBhB,EAAcZ,EAAQvyB,UAAU,EAAG,IACxB,OAA5BuyB,EAAQvyB,UAAU,EAAG,KACrBm0B,GACI,QACA,GACA,OAGJD,GACAH,EAAgBG,EAAiB,GACjCL,EAAetB,EAAQvyB,UAAU,IAC1Bm0B,IACPJ,EAAgBI,EAAe,GAC/BN,EAAetB,EAAQvyB,UAAUm0B,EAAe,GAAGl3B,SAEvD,IAAK,IAAI8W,EAAI,EAAGA,EAAI0e,EAAMx1B,OAAQ8W,IAC9Bye,EAAsB,OAAhBC,EAAM1e,GAAG,MAAmB0e,EAAM1e,GAAG,IACvC0e,EAAM1e,GAAG,KAAO8f,GAAgBrB,EAAI/nB,QAAQopB,IAAiB,KAC7DF,EAAKlB,EAAM1e,IAIvB,OAAa,OAAT2f,GAAwB,OAAPC,EACV74B,EAAQwB,MAAMc,GAErBs2B,EAAK,KAAOC,EAAG,GACR74B,EAAQwB,MAAMc,GAElB8H,EAASwuB,EAAK,GAAKI,GAAmBH,EAAG,GAAKI,GACvD,MAAO11B,GACL,IAAIC,EAAMD,EAEV,OADAC,EAAMxD,EAAQyD,UAAUD,IAEpBxD,EAAQwB,MAAMkB,EACdc,KAIZ81B,SAAY,WAER,GAAIp3B,UAAUC,OAASC,KAAKC,EAAE,IAAMH,UAAUC,OAASC,KAAKC,EAAE,GAC1D,OAAOrC,EAAQwB,MAAMc,GAGzB,IAAK,IAAIC,EAAI,EAAGA,EAAIL,UAAUC,OAAQI,IAAK,CAEvC,IADQvC,EAAQwC,gBAAgBJ,KAAKK,EAAGP,UAAUK,GAAIA,GAC/C,GACH,OAAOvC,EAAQwB,MAAMkB,EAG7B,IAEI,IAAI62B,EAAer3B,UAAU,GACzBs3B,KACJ,GAAgC,SAA5B33B,EAAW03B,GAA0B,CACrC,GAAmC,SAA/B13B,EAAW03B,EAAa,MAAmBt5B,EAAa4C,YAAY02B,GACpE,OAAOv5B,EAAQwB,MAAMkB,EAEzB82B,EAAUA,EAAQ12B,OAAO7C,EAAa8C,WAAWw2B,GAAc,QAC5B,UAA5B13B,EAAW03B,IAAuD,MAA1BA,EAAav2B,UAC5Dw2B,EAAUA,EAAQ12B,OAAO7C,EAAagD,eAAes2B,EAAc,QAAQ,IAE3EC,EAAQt2B,KAAKq2B,GAGjB,IAAIE,EAAev3B,UAAU,GACzBw3B,KACJ,GAAgC,SAA5B73B,EAAW43B,GAA0B,CACrC,GAAmC,SAA/B53B,EAAW43B,EAAa,MAAmBx5B,EAAa4C,YAAY42B,GACpE,OAAOz5B,EAAQwB,MAAMkB,EAEzBg3B,EAAUA,EAAQ52B,OAAO7C,EAAa8C,WAAW02B,GAAc,QAC5B,UAA5B53B,EAAW43B,IAAuD,MAA1BA,EAAaz2B,UAC5D02B,EAAUA,EAAQ52B,OAAO7C,EAAagD,eAAew2B,EAAc,QAAQ,IAE3EC,EAAQx2B,KAAKu2B,GAEjB,GAAID,EAAQr3B,QAAUu3B,EAAQv3B,OAC1B,OAAOnC,EAAQwB,MAAMc,GAGzB,IAAI6R,KAAaD,KACjB,IAAS3R,EAAI,EAAGA,EAAIi3B,EAAQr3B,OAAQI,IAAK,CACrC,IAAI8R,EAAQmlB,EAAQj3B,GAChB6R,EAAQslB,EAAQn3B,GAChBlB,EAAUgT,IAAUhT,EAAU+S,KAC9BD,EAAOjR,KAAKe,WAAWoQ,IACvBH,EAAOhR,KAAKe,WAAWmQ,KAI/B,IAAI/Q,EAAM,EACV,IAASd,EAAI,EAAGA,EAAI4R,EAAOhS,OAAQI,IAC/Bc,GAAOgH,KAAK8C,IAAIgH,EAAO5R,GAAI,GAAK8H,KAAK8C,IAAI+G,EAAO3R,GAAI,GAExD,OAAOc,EACT,MAAOE,GACL,IAAIC,EAAMD,EAEV,OADAC,EAAMxD,EAAQyD,UAAUD,IAEpBxD,EAAQwB,MAAMkB,EACdc,KAIZm2B,SAAY,WAER,GAAIz3B,UAAUC,OAASC,KAAKC,EAAE,IAAMH,UAAUC,OAASC,KAAKC,EAAE,GAC1D,OAAOrC,EAAQwB,MAAMc,GAGzB,IAAK,IAAIC,EAAI,EAAGA,EAAIL,UAAUC,OAAQI,IAAK,CAEvC,IADQvC,EAAQwC,gBAAgBJ,KAAKK,EAAGP,UAAUK,GAAIA,GAC/C,GACH,OAAOvC,EAAQwB,MAAMkB,EAG7B,IAEI,IAAI62B,EAAer3B,UAAU,GACzBs3B,KACJ,GAAgC,SAA5B33B,EAAW03B,GAA0B,CACrC,GAAmC,SAA/B13B,EAAW03B,EAAa,MAAmBt5B,EAAa4C,YAAY02B,GACpE,OAAOv5B,EAAQwB,MAAMkB,EAEzB82B,EAAUA,EAAQ12B,OAAO7C,EAAa8C,WAAWw2B,GAAc,QAC5B,UAA5B13B,EAAW03B,IAAuD,MAA1BA,EAAav2B,UAC5Dw2B,EAAUA,EAAQ12B,OAAO7C,EAAagD,eAAes2B,EAAc,QAAQ,IAE3EC,EAAQt2B,KAAKq2B,GAGjB,IAAIE,EAAev3B,UAAU,GACzBw3B,KACJ,GAAgC,SAA5B73B,EAAW43B,GAA0B,CACrC,GAAmC,SAA/B53B,EAAW43B,EAAa,MAAmBx5B,EAAa4C,YAAY42B,GACpE,OAAOz5B,EAAQwB,MAAMkB,EAEzBg3B,EAAUA,EAAQ52B,OAAO7C,EAAa8C,WAAW02B,GAAc,QAC5B,UAA5B53B,EAAW43B,IAAuD,MAA1BA,EAAaz2B,UAC5D02B,EAAUA,EAAQ52B,OAAO7C,EAAagD,eAAew2B,EAAc,QAAQ,IAE3EC,EAAQx2B,KAAKu2B,GAEjB,GAAID,EAAQr3B,QAAUu3B,EAAQv3B,OAC1B,OAAOnC,EAAQwB,MAAMc,GAGzB,IAAI6R,KAAaD,KACjB,IAAS3R,EAAI,EAAGA,EAAIi3B,EAAQr3B,OAAQI,IAAK,CACrC,IAAI8R,EAAQmlB,EAAQj3B,GAChB6R,EAAQslB,EAAQn3B,GAChBlB,EAAUgT,IAAUhT,EAAU+S,KAC9BD,EAAOjR,KAAKe,WAAWoQ,IACvBH,EAAOhR,KAAKe,WAAWmQ,KAI/B,IAAI/Q,EAAM,EACV,IAASd,EAAI,EAAGA,EAAI4R,EAAOhS,OAAQI,IAC/Bc,GAAOgH,KAAK8C,IAAIgH,EAAO5R,GAAI,GAAK8H,KAAK8C,IAAI+G,EAAO3R,GAAI,GAExD,OAAOc,EACT,MAAOE,GACL,IAAIC,EAAMD,EAEV,OADAC,EAAMxD,EAAQyD,UAAUD,IAEpBxD,EAAQwB,MAAMkB,EACdc,KAIZo2B,QAAW,WAEP,GAAI13B,UAAUC,OAASC,KAAKC,EAAE,IAAMH,UAAUC,OAASC,KAAKC,EAAE,GAC1D,OAAOrC,EAAQwB,MAAMc,GAGzB,IAAK,IAAIC,EAAI,EAAGA,EAAIL,UAAUC,OAAQI,IAAK,CAEvC,IADQvC,EAAQwC,gBAAgBJ,KAAKK,EAAGP,UAAUK,GAAIA,GAC/C,GACH,OAAOvC,EAAQwB,MAAMkB,EAG7B,IAEI,IAAI62B,EAAer3B,UAAU,GACzBs3B,KACJ,GAAgC,SAA5B33B,EAAW03B,GAA0B,CACrC,GAAmC,SAA/B13B,EAAW03B,EAAa,MAAmBt5B,EAAa4C,YAAY02B,GACpE,OAAOv5B,EAAQwB,MAAMkB,EAEzB82B,EAAUA,EAAQ12B,OAAO7C,EAAa8C,WAAWw2B,GAAc,QAC5B,UAA5B13B,EAAW03B,IAAuD,MAA1BA,EAAav2B,UAC5Dw2B,EAAUA,EAAQ12B,OAAO7C,EAAagD,eAAes2B,EAAc,QAAQ,IAE3EC,EAAQt2B,KAAKq2B,GAGjB,IAAIE,EAAev3B,UAAU,GACzBw3B,KACJ,GAAgC,SAA5B73B,EAAW43B,GAA0B,CACrC,GAAmC,SAA/B53B,EAAW43B,EAAa,MAAmBx5B,EAAa4C,YAAY42B,GACpE,OAAOz5B,EAAQwB,MAAMkB,EAEzBg3B,EAAUA,EAAQ52B,OAAO7C,EAAa8C,WAAW02B,GAAc,QAC5B,UAA5B53B,EAAW43B,IAAuD,MAA1BA,EAAaz2B,UAC5D02B,EAAUA,EAAQ52B,OAAO7C,EAAagD,eAAew2B,EAAc,QAAQ,IAE3EC,EAAQx2B,KAAKu2B,GAEjB,GAAID,EAAQr3B,QAAUu3B,EAAQv3B,OAC1B,OAAOnC,EAAQwB,MAAMc,GAGzB,IAAI6R,KAAaD,KACjB,IAAS3R,EAAI,EAAGA,EAAIi3B,EAAQr3B,OAAQI,IAAK,CACrC,IAAI8R,EAAQmlB,EAAQj3B,GAChB6R,EAAQslB,EAAQn3B,GAChBlB,EAAUgT,IAAUhT,EAAU+S,KAC9BD,EAAOjR,KAAKe,WAAWoQ,IACvBH,EAAOhR,KAAKe,WAAWmQ,KAI/B,IAAI/Q,EAAM,EACV,IAASd,EAAI,EAAGA,EAAI4R,EAAOhS,OAAQI,IAC/Bc,GAAOgH,KAAK8C,IAAIgH,EAAO5R,GAAK2R,EAAO3R,GAAI,GAE3C,OAAOc,EACT,MAAOE,GACL,IAAIC,EAAMD,EAEV,OADAC,EAAMxD,EAAQyD,UAAUD,IAEpBxD,EAAQwB,MAAMkB,EACdc,KAIZq2B,UAAa,WAET,GAAI33B,UAAUC,OAASC,KAAKC,EAAE,IAAMH,UAAUC,OAASC,KAAKC,EAAE,GAC1D,OAAOrC,EAAQwB,MAAMc,GAGzB,IAAK,IAAIC,EAAI,EAAGA,EAAIL,UAAUC,OAAQI,IAAK,CAEvC,IADQvC,EAAQwC,gBAAgBJ,KAAKK,EAAGP,UAAUK,GAAIA,GAC/C,GACH,OAAOvC,EAAQwB,MAAMkB,EAG7B,IAEI,IAAI4Y,EAAapZ,UAAU,GACvB2W,KACJ,GAA8B,SAA1BhX,EAAWyZ,GAAwB,CACnC,GAAiC,SAA7BzZ,EAAWyZ,EAAW,MAAmBrb,EAAa4C,YAAYyY,GAClE,OAAOtb,EAAQwB,MAAMkB,EAEzBmW,EAAQ5Y,EAAaihB,iBAAiB5F,OACL,UAA1BzZ,EAAWyZ,IAAmD,MAAxBA,EAAWtY,YACxD6V,EAAQ5Y,EAAakgB,qBAAqB7E,EAAY,WAO1D,OALAzC,EAAQA,EAAM,GAAGihB,IAAI,SAAUhwB,EAAKqL,GAChC,OAAO0D,EAAMihB,IAAI,SAAUlyB,GACvB,OAAOA,EAAIuN,OAIrB,MAAO5R,GACL,IAAIC,EAAMD,EAEV,OADAC,EAAMxD,EAAQyD,UAAUD,IAEpBxD,EAAQwB,MAAMkB,EACdc,KAIZu2B,MAAS,WAEL,GAAI73B,UAAUC,OAASC,KAAKC,EAAE,IAAMH,UAAUC,OAASC,KAAKC,EAAE,GAC1D,OAAOrC,EAAQwB,MAAMc,GAGzB,IAAK,IAAIC,EAAI,EAAGA,EAAIL,UAAUC,OAAQI,IAAK,CAEvC,IADQvC,EAAQwC,gBAAgBJ,KAAKK,EAAGP,UAAUK,GAAIA,GAC/C,GACH,OAAOvC,EAAQwB,MAAMkB,EAG7B,IAEI,IAAIoR,EAAe5R,UAAU,GACzB6R,KACJ,GAAgC,SAA5BlS,EAAWiS,GAA0B,CACrC,GAAmC,SAA/BjS,EAAWiS,EAAa,MAAmB7T,EAAa4C,YAAYiR,GACpE,OAAO9T,EAAQwB,MAAMkB,EAEzBqR,EAAU9T,EAAaihB,iBAAiBpN,QACrC,GAAgC,UAA5BjS,EAAWiS,IAAuD,MAA1BA,EAAa9Q,UAC5D+Q,EAAU9T,EAAakgB,qBAAqBrM,EAAc,YACvD,CACH,IAAKzS,EAAUyS,GACX,OAAO9T,EAAQwB,MAAMkB,GAErB2L,MACGnL,KAAKe,WAAW6P,IACvBC,EAAQ7Q,KAAKmL,GAEjB,IAAI2rB,EAAiBjmB,EAAQ5R,OACzB83B,EAAiBlmB,EAAQ,GAAG5R,OAChC,IAASI,EAAI,EAAGA,EAAIy3B,EAAgBz3B,IAChC,IAAK,IAAIuK,EAAI,EAAGA,EAAImtB,EAAgBntB,IAAK,CACrC,IAAKzL,EAAU0S,EAAQxR,GAAGuK,IACtB,OAAO9M,EAAQwB,MAAMkB,EAEzBqR,EAAQxR,GAAGuK,GAAK7I,WAAW8P,EAAQxR,GAAGuK,IAI9C,IAAImH,KACJ,IAAS1R,EAAI,EAAGA,GAAKy3B,EAAgBz3B,IACjC,IAASuK,EAAI,EAAGA,GAAKmtB,EAAgBntB,IAAK,CACtC,IAAI1C,GAAU7H,EAAI,GAAK03B,EAAiBntB,EACxCmH,EAAQ/Q,KAAKkH,GAGrB,GAAIlI,UAAUC,QAAU,EAAG,CACvB,IAAI6R,EAAe9R,UAAU,GAE7B,GADA+R,KACgC,SAA5BpS,EAAWmS,GAA0B,CACrC,GAAmC,SAA/BnS,EAAWmS,EAAa,MAAmB/T,EAAa4C,YAAYmR,GACpE,OAAOhU,EAAQwB,MAAMkB,EAEzBuR,EAAUhU,EAAaihB,iBAAiBlN,QACrC,GAAgC,UAA5BnS,EAAWmS,IAAuD,MAA1BA,EAAahR,UAC5DiR,EAAUhU,EAAakgB,qBAAqBnM,EAAc,YACvD,CACH,IAAK3S,EAAU2S,GACX,OAAOhU,EAAQwB,MAAMkB,GAErB2L,MACGnL,KAAKe,WAAW+P,IACvBC,EAAQ/Q,KAAKmL,GAEjB,IAAS9L,EAAI,EAAGA,EAAI0R,EAAQ9R,OAAQI,IAChC,IAASuK,EAAI,EAAGA,EAAImH,EAAQ,GAAG9R,OAAQ2K,IAAK,CACxC,IAAKzL,EAAU4S,EAAQ1R,GAAGuK,IACtB,OAAO9M,EAAQwB,MAAMkB,EAEzBuR,EAAQ1R,GAAGuK,GAAK7I,WAAWgQ,EAAQ1R,GAAGuK,KAIlD,IAAIotB,EAAiBjmB,EAAQ9R,OACzBg4B,EAAiBlmB,EAAQ,GAAG9R,OAE5Bi4B,EAAQnmB,EACZ,GAAI/R,UAAUC,QAAU,EAAG,CACvB,IAAIk4B,EAAan4B,UAAU,GAE3B,GADAk4B,KAC8B,SAA1Bv4B,EAAWw4B,GAAwB,CACnC,GAAiC,SAA7Bx4B,EAAWw4B,EAAW,MAAmBp6B,EAAa4C,YAAYw3B,GAClE,OAAOr6B,EAAQwB,MAAMkB,EAEzB03B,EAAQn6B,EAAaihB,iBAAiBmZ,QACnC,GAA8B,UAA1Bx4B,EAAWw4B,IAAmD,MAAxBA,EAAWr3B,UACxDo3B,EAAQn6B,EAAakgB,qBAAqBka,EAAY,YACnD,CACH,IAAKh5B,EAAUg5B,GACX,OAAOr6B,EAAQwB,MAAMkB,EAEzB,IAAI2L,GAAAA,MACGnL,KAAKe,WAAWo2B,IACvBD,EAAMl3B,KAAKmL,GAEf,IAAS9L,EAAI,EAAGA,EAAI63B,EAAMj4B,OAAQI,IAC9B,IAASuK,EAAI,EAAGA,EAAIstB,EAAM,GAAGj4B,OAAQ2K,IAAK,CACtC,IAAKzL,EAAU+4B,EAAM73B,GAAGuK,IACpB,OAAO9M,EAAQwB,MAAMkB,EAEzB03B,EAAM73B,GAAGuK,GAAK7I,WAAWm2B,EAAM73B,GAAGuK,KAK9C,IAAIwtB,GAAU,EACd,GAAwB,GAApBp4B,UAAUC,SACVm4B,EAAUr6B,EAAauT,cAActR,UAAU,IAC3CX,EAAa+4B,IACb,OAAOA,EAGf,GAAIN,GAAkBE,GAAkBD,GAAkBE,EACtD,OAAOn6B,EAAQwB,MAAMyK,EAyBzB,IAAIsuB,EAtBJ,SAAqBC,EAAOC,GAExB,IADA,IAAIC,EAAO,EAAGC,EAAO,EAAGC,EAAQ,EAAGC,EAAQ,EAClCt4B,EAAI,EAAGA,EAAIi4B,EAAMr4B,OAAQI,IAC9B,IAAK,IAAIuK,EAAI,EAAGA,EAAI0tB,EAAMj4B,GAAGJ,OAAQ2K,IACjC4tB,GAAQF,EAAMj4B,GAAGuK,GACjB6tB,GAAQF,EAAMl4B,GAAGuK,GACjB8tB,GAASJ,EAAMj4B,GAAGuK,GAAK2tB,EAAMl4B,GAAGuK,GAChC+tB,GAASL,EAAMj4B,GAAGuK,GAAK0tB,EAAMj4B,GAAGuK,GAGxC,IAAIC,EAAIytB,EAAMr4B,OAASq4B,EAAM,GAAGr4B,OAC5B24B,EAAQJ,EAAO3tB,EACfguB,EAAQJ,EAAO5tB,EAGf1K,GAFSu4B,EAAQ7tB,EAEH+tB,EAAQC,IADbF,EAAQ9tB,EACwB+tB,EAAQA,GAErD,OACIz4B,EAFI04B,EAAQ14B,EAAIy4B,GAMfE,CAAY/mB,EAASF,GAC1B1R,EAAIk4B,EAAG,GACX,GAAID,EACA,IAAI3lB,EAAI4lB,EAAG,QAEP5lB,EAAI,EAEZ,IAAIjG,KACJ,IAASnM,EAAI,EAAGA,EAAI63B,EAAMj4B,OAAQI,IAC9B,IAASuK,EAAI,EAAGA,EAAIstB,EAAM73B,GAAGJ,OAAQ2K,IAAK,CACtC,IACID,EAAIxK,EADA+3B,EAAM73B,GAAGuK,GACD6H,EAChBjG,EAAOxL,KAAKmH,KAAKuD,MAAU,IAAJf,GAAkB,KAGjD,OAAO6B,EACT,MAAOnL,GACL,IAAIC,EAAMD,EAEV,OADAC,EAAMxD,EAAQyD,UAAUD,IAEpBxD,EAAQwB,MAAMkB,EACdc,KAIZy3B,UAAa,WAET,GAAI/4B,UAAUC,OAASC,KAAKC,EAAE,IAAMH,UAAUC,OAASC,KAAKC,EAAE,GAC1D,OAAOrC,EAAQwB,MAAMc,GAGzB,IAAK,IAAIC,EAAI,EAAGA,EAAIL,UAAUC,OAAQI,IAAK,CAEvC,IADQvC,EAAQwC,gBAAgBJ,KAAKK,EAAGP,UAAUK,GAAIA,GAC/C,GACH,OAAOvC,EAAQwB,MAAMkB,EAG7B,IAEI,IAAIw4B,EAAkBh5B,UAAU,GAC5BoZ,KACJ,GAAmC,SAA/BzZ,EAAWq5B,GAA6B,CACxC,GAAsC,SAAlCr5B,EAAWq5B,EAAgB,MAAmBj7B,EAAa4C,YAAYq4B,GACvE,OAAOl7B,EAAQwB,MAAMkB,EAEzB4Y,EAAaA,EAAWxY,OAAO7C,EAAa8C,WAAWm4B,GAAiB,SACrE,GAAmC,UAA/Br5B,EAAWq5B,IAA6D,MAA7BA,EAAgBl4B,UAClEsY,EAAaA,EAAWxY,OAAO7C,EAAagD,eAAei4B,EAAiB,UAAU,QACnF,CACH,IAAK75B,EAAU65B,GACX,OAAOl7B,EAAQwB,MAAMkB,EAEzB4Y,EAAWpY,KAAKg4B,GAEpB,IAAIC,KACJ,IAAS54B,EAAI,EAAGA,EAAI+Y,EAAWnZ,OAAQI,IAC/BlB,EAAUia,EAAW/Y,KACrB44B,EAAaj4B,KAAKe,WAAWqX,EAAW/Y,KAIhD,IAAI64B,EAAkBl5B,UAAU,GAC5Bm5B,KACJ,GAAmC,SAA/Bx5B,EAAWu5B,GAA6B,CACxC,GAAsC,SAAlCv5B,EAAWu5B,EAAgB,MAAmBn7B,EAAa4C,YAAYu4B,GACvE,OAAOp7B,EAAQwB,MAAMkB,EAEzB24B,EAAaA,EAAWv4B,OAAO7C,EAAa8C,WAAWq4B,GAAiB,SACrE,GAAmC,UAA/Bv5B,EAAWu5B,IAA6D,MAA7BA,EAAgBp4B,UAClEq4B,EAAaA,EAAWv4B,OAAO7C,EAAagD,eAAem4B,EAAiB,UAAU,QACnF,CACH,IAAK/5B,EAAU+5B,GACX,OAAOp7B,EAAQwB,MAAMkB,EAEzB24B,EAAWn4B,KAAKk4B,GAEpB,IAAIE,KACJ,IAAS/4B,EAAI,EAAGA,EAAI84B,EAAWl5B,OAAQI,IAC/BlB,EAAUg6B,EAAW94B,KACrB+4B,EAAap4B,KAAKe,WAAWo3B,EAAW94B,KAIhD,GAA2B,GAAvB44B,EAAah5B,QAAsC,GAAvBm5B,EAAan5B,OACzC,QACK,IACA,IAEF,GAA2B,GAAvBg5B,EAAah5B,OAAa,CACjC,IAAIuM,IAAW,IACf,IAASnM,EAAI,EAAGA,EAAI+4B,EAAan5B,OAAQI,IACrCmM,EAAOxL,MAAM,IAEjB,OAAOwL,EACJ,GAA2B,GAAvB4sB,EAAan5B,OACpB,QACK,IACAg5B,EAAah5B,SAGlBm5B,EAAapmB,KAAK,SAAUC,EAAGR,GAC3B,OAAOQ,EAAIR,IAGf,IADIjG,KACKnM,EAAI,EAAGA,EAAI+4B,EAAan5B,OAAQI,IACrC,GAAS,GAALA,EAAQ,CAER,IADA,IAAIoB,EAAQ,EACHmJ,EAAI,EAAGA,EAAIquB,EAAah5B,OAAQ2K,IACjCquB,EAAaruB,IAAMwuB,EAAa,IAChC33B,IAGR+K,EAAOxL,MAAMS,SACV,GAAIpB,GAAK+4B,EAAan5B,OAAS,EAAG,CACrC,IAAIo5B,EAAS,EAAGC,EAAS,EACzB,IAAS1uB,EAAI,EAAGA,EAAIquB,EAAah5B,OAAQ2K,IACjCquB,EAAaruB,IAAMwuB,EAAa/4B,IAAM44B,EAAaruB,GAAKwuB,EAAa/4B,EAAI,IACzEg5B,IAEAJ,EAAaruB,GAAKwuB,EAAa/4B,IAC/Bi5B,IAGR9sB,EAAOxL,MAAMq4B,IACb7sB,EAAOxL,MAAMs4B,QACV,CAEH,IADI73B,EAAQ,EACHmJ,EAAI,EAAGA,EAAIquB,EAAah5B,OAAQ2K,IACjCquB,EAAaruB,IAAMwuB,EAAa/4B,IAAM44B,EAAaruB,GAAKwuB,EAAa/4B,EAAI,IACzEoB,IAGR+K,EAAOxL,MAAMS,IAGrB,OAAO+K,EAEb,MAAOnL,GACL,IAAIC,EAAMD,EAEV,OADAC,EAAMxD,EAAQyD,UAAUD,IAEpBxD,EAAQwB,MAAMkB,EACdc,KAIZi4B,OAAU,WAEN,GAAIv5B,UAAUC,OAASC,KAAKC,EAAE,IAAMH,UAAUC,OAASC,KAAKC,EAAE,GAC1D,OAAOrC,EAAQwB,MAAMc,GAGzB,IAAK,IAAIC,EAAI,EAAGA,EAAIL,UAAUC,OAAQI,IAAK,CAEvC,IADQvC,EAAQwC,gBAAgBJ,KAAKK,EAAGP,UAAUK,GAAIA,GAC/C,GACH,OAAOvC,EAAQwB,MAAMkB,EAG7B,IAEI,IAAIoR,EAAe5R,UAAU,GACzB6R,KACJ,GAAgC,SAA5BlS,EAAWiS,GAA0B,CACrC,GAAmC,SAA/BjS,EAAWiS,EAAa,MAAmB7T,EAAa4C,YAAYiR,GACpE,OAAO9T,EAAQwB,MAAMkB,EAEzBqR,EAAU9T,EAAaihB,iBAAiBpN,QACrC,GAAgC,UAA5BjS,EAAWiS,IAAuD,MAA1BA,EAAa9Q,UAC5D+Q,EAAU9T,EAAakgB,qBAAqBrM,EAAc,YACvD,CACH,IAAKzS,EAAUyS,GACX,OAAO9T,EAAQwB,MAAMkB,GAErB2L,MACGnL,KAAKe,WAAW6P,IACvBC,EAAQ7Q,KAAKmL,GAEjB,IAAI2rB,EAAiBjmB,EAAQ5R,OACzB83B,EAAiBlmB,EAAQ,GAAG5R,OAChC,IAASI,EAAI,EAAGA,EAAIy3B,EAAgBz3B,IAChC,IAAK,IAAIuK,EAAI,EAAGA,EAAImtB,EAAgBntB,IAAK,CACrC,IAAKzL,EAAU0S,EAAQxR,GAAGuK,IACtB,OAAO9M,EAAQwB,MAAMkB,EAEzBqR,EAAQxR,GAAGuK,GAAK7I,WAAW8P,EAAQxR,GAAGuK,IAI9C,IAAImH,KACJ,IAAS1R,EAAI,EAAGA,GAAKy3B,EAAgBz3B,IACjC,IAASuK,EAAI,EAAGA,GAAKmtB,EAAgBntB,IAAK,CACtC,IAAI1C,GAAU7H,EAAI,GAAK03B,EAAiBntB,EACxCmH,EAAQ/Q,KAAKkH,GAGrB,GAAIlI,UAAUC,QAAU,EAAG,CACvB,IAAI6R,EAAe9R,UAAU,GAE7B,GADA+R,KACgC,SAA5BpS,EAAWmS,GAA0B,CACrC,GAAmC,SAA/BnS,EAAWmS,EAAa,MAAmB/T,EAAa4C,YAAYmR,GACpE,OAAOhU,EAAQwB,MAAMkB,EAEzBuR,EAAUhU,EAAaihB,iBAAiBlN,QACrC,GAAgC,UAA5BnS,EAAWmS,IAAuD,MAA1BA,EAAahR,UAC5DiR,EAAUhU,EAAakgB,qBAAqBnM,EAAc,YACvD,CACH,IAAK3S,EAAU2S,GACX,OAAOhU,EAAQwB,MAAMkB,GAErB2L,MACGnL,KAAKe,WAAW+P,IACvBC,EAAQ/Q,KAAKmL,GAEjB,IAAS9L,EAAI,EAAGA,EAAI0R,EAAQ9R,OAAQI,IAChC,IAASuK,EAAI,EAAGA,EAAImH,EAAQ,GAAG9R,OAAQ2K,IAAK,CACxC,IAAKzL,EAAU4S,EAAQ1R,GAAGuK,IACtB,OAAO9M,EAAQwB,MAAMkB,EAEzBuR,EAAQ1R,GAAGuK,GAAK7I,WAAWgQ,EAAQ1R,GAAGuK,KAIlD,IAAIotB,EAAiBjmB,EAAQ9R,OACzBg4B,EAAiBlmB,EAAQ,GAAG9R,OAE5Bi4B,EAAQnmB,EACZ,GAAI/R,UAAUC,QAAU,EAAG,CACvB,IAAIk4B,EAAan4B,UAAU,GAE3B,GADAk4B,KAC8B,SAA1Bv4B,EAAWw4B,GAAwB,CACnC,GAAiC,SAA7Bx4B,EAAWw4B,EAAW,MAAmBp6B,EAAa4C,YAAYw3B,GAClE,OAAOr6B,EAAQwB,MAAMkB,EAEzB03B,EAAQn6B,EAAaihB,iBAAiBmZ,QACnC,GAA8B,UAA1Bx4B,EAAWw4B,IAAmD,MAAxBA,EAAWr3B,UACxDo3B,EAAQn6B,EAAakgB,qBAAqBka,EAAY,YACnD,CACH,IAAKh5B,EAAUg5B,GACX,OAAOr6B,EAAQwB,MAAMkB,EAEzB,IAAI2L,GAAAA,MACGnL,KAAKe,WAAWo2B,IACvBD,EAAMl3B,KAAKmL,GAEf,IAAS9L,EAAI,EAAGA,EAAI63B,EAAMj4B,OAAQI,IAC9B,IAASuK,EAAI,EAAGA,EAAIstB,EAAM,GAAGj4B,OAAQ2K,IAAK,CACtC,IAAKzL,EAAU+4B,EAAM73B,GAAGuK,IACpB,OAAO9M,EAAQwB,MAAMkB,EAEzB03B,EAAM73B,GAAGuK,GAAK7I,WAAWm2B,EAAM73B,GAAGuK,KAK9C,IAAIwtB,GAAU,EACd,GAAwB,GAApBp4B,UAAUC,SACVm4B,EAAUr6B,EAAauT,cAActR,UAAU,IAC3CX,EAAa+4B,IACb,OAAOA,EAGf,GAAIN,GAAkBE,GAAkBD,GAAkBE,EACtD,OAAOn6B,EAAQwB,MAAMyK,EA2BzB,IAAIsuB,EAxBJ,SAAqBC,EAAOC,GAExB,IADA,IAAIC,EAAO,EAAGC,EAAO,EAAGC,EAAQ,EAAGC,EAAQ,EAClCt4B,EAAI,EAAGA,EAAIi4B,EAAMr4B,OAAQI,IAC9B,IAAK,IAAIuK,EAAI,EAAGA,EAAI0tB,EAAMj4B,GAAGJ,OAAQ2K,IACjC4tB,GAAQF,EAAMj4B,GAAGuK,GAEjB6tB,GAAQtwB,KAAKY,IAAIwvB,EAAMl4B,GAAGuK,IAE1B8tB,GAASJ,EAAMj4B,GAAGuK,GAAKzC,KAAKY,IAAIwvB,EAAMl4B,GAAGuK,IACzC+tB,GAASL,EAAMj4B,GAAGuK,GAAK0tB,EAAMj4B,GAAGuK,GAGxC,IAAIC,EAAIytB,EAAMr4B,OAASq4B,EAAM,GAAGr4B,OAC5B24B,EAAQJ,EAAO3tB,EACfguB,EAAQJ,EAAO5tB,EAGf1K,GAFSu4B,EAAQ7tB,EAEH+tB,EAAQC,IADbF,EAAQ9tB,EACwB+tB,EAAQA,GACjDnmB,EAAIomB,EAAQ14B,EAAIy4B,EACpB,OACIzwB,KAAKI,IAAIpI,GACTgI,KAAKI,IAAIkK,IAGRqmB,CAAY/mB,EAASF,GAC1B1R,EAAIk4B,EAAG,GACX,GAAID,EACA,IAAI3lB,EAAI4lB,EAAG,QAEP5lB,EAAI,EAEZ,IAAIjG,KACJ,IAASnM,EAAI,EAAGA,EAAI63B,EAAMj4B,OAAQI,IAC9B,IAASuK,EAAI,EAAGA,EAAIstB,EAAM73B,GAAGJ,OAAQ2K,IAAK,CACtC,IAAIkE,EAAIopB,EAAM73B,GAAGuK,GACbD,EAAI8H,EAAItK,KAAK8C,IAAI9K,EAAG2O,GAExBtC,EAAOxL,KAAKmH,KAAKuD,MAAU,IAAJf,GAAkB,KAGjD,OAAO6B,EACT,MAAOnL,GACL,IAAIC,EAAMD,EAEV,OADAC,EAAMxD,EAAQyD,UAAUD,IAEpBxD,EAAQwB,MAAMkB,EACdc,KAIZk4B,OAAU,WAEN,GAAIx5B,UAAUC,OAASC,KAAKC,EAAE,IAAMH,UAAUC,OAASC,KAAKC,EAAE,GAC1D,OAAOrC,EAAQwB,MAAMc,GAGzB,IAAK,IAAIC,EAAI,EAAGA,EAAIL,UAAUC,OAAQI,IAAK,CAEvC,IADQvC,EAAQwC,gBAAgBJ,KAAKK,EAAGP,UAAUK,GAAIA,GAC/C,GACH,OAAOvC,EAAQwB,MAAMkB,EAG7B,IACI,OAAO1C,EAAQwB,MAAMkB,EACvB,MAAOa,GACL,IAAIC,EAAMD,EAEV,OADAC,EAAMxD,EAAQyD,UAAUD,IAEpBxD,EAAQwB,MAAMkB,EACdc,KAIZm4B,OAAU,WAEN,GAAIz5B,UAAUC,OAASC,KAAKC,EAAE,IAAMH,UAAUC,OAASC,KAAKC,EAAE,GAC1D,OAAOrC,EAAQwB,MAAMc,GAGzB,IAAK,IAAIC,EAAI,EAAGA,EAAIL,UAAUC,OAAQI,IAAK,CAEvC,IADQvC,EAAQwC,gBAAgBJ,KAAKK,EAAGP,UAAUK,GAAIA,GAC/C,GACH,OAAOvC,EAAQwB,MAAMkB,EAG7B,IACI,OAAO1C,EAAQwB,MAAMkB,EACvB,MAAOa,GACL,IAAIC,EAAMD,EAEV,OADAC,EAAMxD,EAAQyD,UAAUD,IAEpBxD,EAAQwB,MAAMkB,EACdc,KAIZo4B,QAAW,WAEP,GAAI15B,UAAUC,OAASC,KAAKC,EAAE,IAAMH,UAAUC,OAASC,KAAKC,EAAE,GAC1D,OAAOrC,EAAQwB,MAAMc,GAGzB,IAAK,IAAIC,EAAI,EAAGA,EAAIL,UAAUC,OAAQI,IAAK,CAEvC,IADQvC,EAAQwC,gBAAgBJ,KAAKK,EAAGP,UAAUK,GAAIA,GAC/C,GACH,OAAOvC,EAAQwB,MAAMkB,EAG7B,IAEI,IAAI4Y,EAAapZ,UAAU,GACvB2W,KACJ,GAA8B,SAA1BhX,EAAWyZ,GAAwB,CACnC,GAAiC,SAA7BzZ,EAAWyZ,EAAW,MAAmBrb,EAAa4C,YAAYyY,GAClE,OAAOtb,EAAQwB,MAAMkB,EAEzBmW,EAAQ5Y,EAAaihB,iBAAiB5F,QACnC,GAA8B,UAA1BzZ,EAAWyZ,IAAmD,MAAxBA,EAAWtY,UACxD6V,EAAQ5Y,EAAakgB,qBAAqB7E,EAAY,YACnD,CACH,IAAIjN,KACJA,EAAOnL,KAAKoY,GACZzC,EAAM3V,KAAKmL,GAEf,IAAS9L,EAAI,EAAGA,EAAIsW,EAAM1W,OAAQI,IAC9B,IAAK,IAAIuK,EAAI,EAAGA,EAAI+L,EAAMtW,GAAGJ,OAAQ2K,IAAK,CACtC,IAAKzL,EAAUwX,EAAMtW,GAAGuK,IACpB,OAAO9M,EAAQwB,MAAMkB,EAEzBmW,EAAMtW,GAAGuK,GAAK7I,WAAW4U,EAAMtW,GAAGuK,IAG1C,GAAI+L,EAAM1W,QAAU0W,EAAM,GAAG1W,OACzB,OAAOnC,EAAQwB,MAAMkB,EA4CzB,OAzCA,SAAYyS,EAAGpI,GACX,IAAI8gB,EACAlZ,EAAI,IAAInO,MACZ,GAAS,GAALuG,EAEA,OADA8gB,EAAI1Y,EAAE,GAAG,GAEN,GAAS,GAALpI,EAEP,OADA8gB,EAAI1Y,EAAE,GAAG,GAAKA,EAAE,GAAG,GAAKA,EAAE,GAAG,GAAKA,EAAE,GAAG,GAEpC,GAAS,GAALpI,EAEP,OADA8gB,EAAI1Y,EAAE,GAAG,GAAKA,EAAE,GAAG,GAAKA,EAAE,GAAG,GAAKA,EAAE,GAAG,GAAKA,EAAE,GAAG,GAAKA,EAAE,GAAG,GAAKA,EAAE,GAAG,GAAKA,EAAE,GAAG,GAAKA,EAAE,GAAG,GAAKA,EAAE,GAAG,GAAKA,EAAE,GAAG,GAAKA,EAAE,GAAG,GAAKA,EAAE,GAAG,GAAKA,EAAE,GAAG,GAAKA,EAAE,GAAG,GAAKA,EAAE,GAAG,GAAKA,EAAE,GAAG,GAAKA,EAAE,GAAG,GAGnL0Y,EAAI,EAGJ,IAFA,IAAI3hB,EAAI,IAAI1F,MACRjD,EAAI,IAAIiD,MACHjE,EAAI,EAAGA,EAAIwK,EAAGxK,IACnBoS,EAAEpS,GAAK4S,EAAE5S,GAAG,GAAK8H,KAAK8C,KAAK,EAAG5K,EAAI,EAAI,GAE1C,IAASA,EAAI,EAAGA,EAAIwK,EAAGxK,IAAK,CACxBgB,EAAEhB,GAAK,IAAIiE,MACX,IAAK,IAAIsG,EAAI,EAAGA,EAAIC,EAAI,EAAGD,IACvBvJ,EAAEhB,GAAGuK,GAAKqI,EAAE5S,GAAGuK,EAAI,GAG3B,IAASvK,EAAI,EAAGA,EAAIwK,EAAGxK,IAAK,CACxB,IAASuK,EAAI,EAAGA,EAAIC,EAAGD,IAAK,CACxBZ,EAAEY,GAAK,IAAItG,MACX,IAAK,IAAIyS,EAAI,EAAGA,EAAIlM,EAAI,EAAGkM,IACnB1W,EAAIuK,EACJZ,EAAEY,GAAGmM,GAAK1V,EAAEuJ,GAAGmM,GACR1W,EAAIuK,IACXZ,EAAEY,EAAI,GAAGmM,GAAK1V,EAAEuJ,GAAGmM,IAI/B4U,GAAKlZ,EAAEpS,GAAKL,UAAU25B,OAAO3vB,EAAGa,EAAI,GAExC,OAAO8gB,EAGRiO,CAAGjjB,EAAOA,EAAM1W,QACzB,MAAOoB,GACL,IAAIC,EAAMD,EAEV,OADAC,EAAMxD,EAAQyD,UAAUD,IAEpBxD,EAAQwB,MAAMkB,EACdc,KAIZu4B,SAAY,WAER,GAAI75B,UAAUC,OAASC,KAAKC,EAAE,IAAMH,UAAUC,OAASC,KAAKC,EAAE,GAC1D,OAAOrC,EAAQwB,MAAMc,GAGzB,IAAK,IAAIC,EAAI,EAAGA,EAAIL,UAAUC,OAAQI,IAAK,CAEvC,IADQvC,EAAQwC,gBAAgBJ,KAAKK,EAAGP,UAAUK,GAAIA,GAC/C,GACH,OAAOvC,EAAQwB,MAAMkB,EAG7B,IAEI,IAAI4Y,EAAapZ,UAAU,GACvB2W,KACJ,GAA8B,SAA1BhX,EAAWyZ,GAAwB,CACnC,GAAiC,SAA7BzZ,EAAWyZ,EAAW,MAAmBrb,EAAa4C,YAAYyY,GAClE,OAAOtb,EAAQwB,MAAMkB,EAEzBmW,EAAQ5Y,EAAaihB,iBAAiB5F,QACnC,GAA8B,UAA1BzZ,EAAWyZ,IAAmD,MAAxBA,EAAWtY,UACxD6V,EAAQ5Y,EAAakgB,qBAAqB7E,EAAY,YACnD,CACH,IAAIjN,KACJA,EAAOnL,KAAKoY,GACZzC,EAAM3V,KAAKmL,GAEf,IAAS9L,EAAI,EAAGA,EAAIsW,EAAM1W,OAAQI,IAC9B,IAAK,IAAIuK,EAAI,EAAGA,EAAI+L,EAAMtW,GAAGJ,OAAQ2K,IAAK,CACtC,IAAKzL,EAAUwX,EAAMtW,GAAGuK,IACpB,OAAO9M,EAAQwB,MAAMkB,EAEzBmW,EAAMtW,GAAGuK,GAAK7I,WAAW4U,EAAMtW,GAAGuK,IAG1C,OAAI+L,EAAM1W,QAAU0W,EAAM,GAAG1W,OAClBnC,EAAQwB,MAAMkB,EAGlB5B,EAAQ+X,GACjB,MAAOtV,GACL,IAAIC,EAAMD,EAEV,OADAC,EAAMxD,EAAQyD,UAAUD,IAEpBxD,EAAQwB,MAAMkB,EACdc,KAIZw4B,MAAS,WAEL,GAAI95B,UAAUC,OAASC,KAAKC,EAAE,IAAMH,UAAUC,OAASC,KAAKC,EAAE,GAC1D,OAAOrC,EAAQwB,MAAMc,GAGzB,IAAK,IAAIC,EAAI,EAAGA,EAAIL,UAAUC,OAAQI,IAAK,CAEvC,KADIE,EAAIzC,EAAQwC,gBAAgBJ,KAAKK,EAAGP,UAAUK,GAAIA,IAC/C,GACH,OAAOvC,EAAQwB,MAAMkB,EAG7B,IAEI,IAAIu5B,EAAc/5B,UAAU,GACxBg6B,KACJ,GAA+B,SAA3Br6B,EAAWo6B,GAAyB,CACpC,GAAkC,SAA9Bp6B,EAAWo6B,EAAY,MAAmBh8B,EAAa4C,YAAYo5B,GACnE,OAAOj8B,EAAQwB,MAAMkB,EAEzBw5B,EAASj8B,EAAaihB,iBAAiB+a,QACpC,GAA+B,UAA3Bp6B,EAAWo6B,IAAqD,MAAzBA,EAAYj5B,UAC1Dk5B,EAASj8B,EAAakgB,qBAAqB8b,EAAa,YACrD,EACC5tB,MACGnL,KAAK+4B,GACZC,EAAOh5B,KAAKmL,GAEhB,IAAS9L,EAAI,EAAGA,EAAI25B,EAAO/5B,OAAQI,IAC/B,IAAK,IAAIuK,EAAI,EAAGA,EAAIovB,EAAO35B,GAAGJ,OAAQ2K,IAAK,CACvC,IAAKzL,EAAU66B,EAAO35B,GAAGuK,IACrB,OAAO9M,EAAQwB,MAAMkB,EAEzBw5B,EAAO35B,GAAGuK,GAAK7I,WAAWi4B,EAAO35B,GAAGuK,IAI5C,IAAIqvB,EAAcj6B,UAAU,GACxBk6B,KACJ,GAA+B,SAA3Bv6B,EAAWs6B,GAAyB,CACpC,GAAkC,SAA9Bt6B,EAAWs6B,EAAY,MAAmBl8B,EAAa4C,YAAYs5B,GACnE,OAAOn8B,EAAQwB,MAAMkB,EAEzB05B,EAASn8B,EAAaihB,iBAAiBib,QACpC,GAA+B,UAA3Bt6B,EAAWs6B,IAAqD,MAAzBA,EAAYn5B,UAC1Do5B,EAASn8B,EAAakgB,qBAAqBgc,EAAa,YACrD,EACC9tB,MACGnL,KAAKi5B,GACZC,EAAOl5B,KAAKmL,GAEhB,IAAS9L,EAAI,EAAGA,EAAI65B,EAAOj6B,OAAQI,IAC/B,IAASuK,EAAI,EAAGA,EAAIsvB,EAAO75B,GAAGJ,OAAQ2K,IAAK,CACvC,IAAKzL,EAAU+6B,EAAO75B,GAAGuK,IACrB,OAAO9M,EAAQwB,MAAMkB,EAEzB05B,EAAO75B,GAAGuK,GAAK7I,WAAWm4B,EAAO75B,GAAGuK,IAI5C,GAAIovB,EAAO,GAAG/5B,QAAUi6B,EAAOj6B,OAC3B,OAAOnC,EAAQwB,MAAMkB,EAKzB,IAHA,IAAIye,EAAS+a,EAAO/5B,OAChBif,EAASgb,EAAO,GAAGj6B,OACnBuM,KACKrM,EAAI,EAAGA,EAAI8e,EAAQ9e,IAAK,CAE7B,IADA,IAAIgM,KACKtB,EAAI,EAAGA,EAAIqU,EAAQrU,IAAK,CAE7B,IADA,IAAI4B,EAAQ,EACHlM,EAAI,EAAGA,EAAIy5B,EAAO,GAAG/5B,OAAQM,IAClCkM,GAASutB,EAAO75B,GAAGI,GAAK25B,EAAO35B,GAAGsK,GAEtCsB,EAAOnL,KAAKyL,GAEhBD,EAAOxL,KAAKmL,GAEhB,OAAOK,EACT,MAAOnL,GACL,IAAIC,EAAMD,EAEV,OADAC,EAAMxD,EAAQyD,UAAUD,IAEpBxD,EAAQwB,MAAMkB,EACdc,KAIZ64B,WAAc,WAEV,GAAIn6B,UAAUC,OAASC,KAAKC,EAAE,IAAMH,UAAUC,OAASC,KAAKC,EAAE,GAC1D,OAAOrC,EAAQwB,MAAMc,GAGzB,IAAK,IAAIC,EAAI,EAAGA,EAAIL,UAAUC,OAAQI,IAAK,CAEvC,IADQvC,EAAQwC,gBAAgBJ,KAAKK,EAAGP,UAAUK,GAAIA,GAC/C,GACH,OAAOvC,EAAQwB,MAAMkB,EAG7B,IAGI,IAAIu5B,EAAc/5B,UAAU,GACxBg6B,KACJ,GAA+B,SAA3Br6B,EAAWo6B,GAAyB,CACpC,GAAkC,SAA9Bp6B,EAAWo6B,EAAY,MAAmBh8B,EAAa4C,YAAYo5B,GACnE,OAAOj8B,EAAQwB,MAAMkB,EAEzBw5B,EAASj8B,EAAaihB,iBAAiB+a,QACpC,GAA+B,UAA3Bp6B,EAAWo6B,IAAqD,MAAzBA,EAAYj5B,UAC1Dk5B,EAASj8B,EAAakgB,qBAAqB8b,EAAa,YACrD,EACC5tB,MACGnL,KAAK+4B,GACZC,EAAOh5B,KAAKmL,GAEhB,IAAS9L,EAAI,EAAGA,EAAI25B,EAAO/5B,OAAQI,IAC/B,IAAK,IAAIuK,EAAI,EAAGA,EAAIovB,EAAO35B,GAAGJ,OAAQ2K,IAC7BzL,EAAU66B,EAAO35B,GAAGuK,IAGrBovB,EAAO35B,GAAGuK,GAAK7I,WAAWi4B,EAAO35B,GAAGuK,IAFpCovB,EAAO35B,GAAGuK,GAAK,EAM3B,IAAIqU,EAAS+a,EAAO/5B,OAChBif,EAAS8a,EAAO,GAAG/5B,OACvB,GAAID,UAAUC,QAAU,EACpB,IAASI,EAAI,EAAGA,EAAIL,UAAUC,OAAQI,IAAK,CACvC,IAAIK,EAAOV,UAAUK,GACjB8D,KACJ,GAAwB,SAApBxE,EAAWe,GAAkB,CAC7B,GAA2B,SAAvBf,EAAWe,EAAK,MAAmB3C,EAAa4C,YAAYD,GAC5D,OAAO5C,EAAQwB,MAAMkB,EAEzB2D,EAAMpG,EAAaihB,iBAAiBte,QACjC,GAAwB,UAApBf,EAAWe,IAAuC,MAAlBA,EAAKI,UAC5CqD,EAAMpG,EAAakgB,qBAAqBvd,EAAM,YAC3C,CACH,IAAIyL,GAAAA,MACGnL,KAAKN,GACZyD,EAAInD,KAAKmL,GAEb,GAAIhI,EAAIlE,QAAUgf,GAAU9a,EAAI,GAAGlE,QAAUif,EACzC,OAAOphB,EAAQwB,MAAMkB,EAEzB,IAAK,IAAIL,EAAI,EAAGA,EAAI8e,EAAQ9e,IACxB,IAAK,IAAI0K,EAAI,EAAGA,EAAIqU,EAAQrU,IACnB1L,EAAUgF,EAAIhE,GAAG0K,IAGlBmvB,EAAO75B,GAAG0K,GAAKmvB,EAAO75B,GAAG0K,GAAK9I,WAAWoC,EAAIhE,GAAG0K,IAFhDmvB,EAAO75B,GAAG0K,GAAK,EAQnC,IAAI1J,EAAM,EACV,IAAShB,EAAI,EAAGA,EAAI8e,EAAQ9e,IACxB,IAAS0K,EAAI,EAAGA,EAAIqU,EAAQrU,IACxB1J,GAAO64B,EAAO75B,GAAG0K,GAGzB,OAAO1J,EACT,MAAOE,GACL,IAAIC,EAAMD,EAEV,OADAC,EAAMxD,EAAQyD,UAAUD,IAEpBxD,EAAQwB,MAAMkB,EACdc,KAIZ84B,UAAa,WAET,GAAIp6B,UAAUC,OAASC,KAAKC,EAAE,IAAMH,UAAUC,OAASC,KAAKC,EAAE,GAC1D,OAAOrC,EAAQwB,MAAMc,GAGzB,IAAK,IAAIC,EAAI,EAAGA,EAAIL,UAAUC,OAAQI,IAAK,CAEvC,IADQvC,EAAQwC,gBAAgBJ,KAAKK,EAAGP,UAAUK,GAAIA,GAC/C,GACH,OAAOvC,EAAQwB,MAAMkB,EAG7B,IACI,IACI8J,EADA+vB,EAAYr6B,UAAU,GAE1B,MAA6B,UAAzBL,EAAW06B,IAAiD,MAAvBA,EAAUv5B,UACzB,MAAlBu5B,EAAU35B,OAQF,OAJR4J,EAD8B,SAA9B3K,EAAW06B,EAAU35B,MACd25B,EAAU35B,KAAK,GAAG,GAElB25B,EAAU35B,OAES,MAAV4J,EAAK9H,GAMlB1E,EAAQwB,MAAMkB,EAE3B,MAAOa,GACL,IAAIC,EAAMD,EAEV,OADAC,EAAMxD,EAAQyD,UAAUD,IAEpBxD,EAAQwB,MAAMkB,EACdc,KAIZg5B,KAAQ,WAEJ,GAAIt6B,UAAUC,OAASC,KAAKC,EAAE,IAAMH,UAAUC,OAASC,KAAKC,EAAE,GAC1D,OAAOrC,EAAQwB,MAAMc,GAGzB,IAAK,IAAIC,EAAI,EAAGA,EAAIL,UAAUC,OAAQI,IAAK,CAEvC,IADQvC,EAAQwC,gBAAgBJ,KAAKK,EAAGP,UAAUK,GAAIA,GAC/C,GACH,OAAOvC,EAAQwB,MAAMkB,EAG7B,IAEI,IACI+5B,EADAC,EAAiBx6B,UAAU,GAE/B,GAAkC,SAA9BL,EAAW66B,GACX,GAAqC,SAAjC76B,EAAW66B,EAAe,IAAgB,CAC1C,IAAKz8B,EAAa4C,YAAY65B,GAC1B,OAAO18B,EAAQwB,MAAMkB,EAEzB+5B,EAAYC,EAAe,GAAG,QAE9BD,EAAYC,EAAe,QAE5B,GAAkC,UAA9B76B,EAAW66B,IAA2D,MAA5BA,EAAe15B,UAAmB,CACnF,GAA2B,MAAvB05B,EAAe95B,KACf,OAAO5C,EAAQwB,MAAMkB,EAErB,GAAuC,SAAnCb,EAAW66B,EAAe95B,MAC1B,OAAO5C,EAAQwB,MAAMkB,EAGzB,GADA+5B,EAAYC,EAAe95B,KAAKF,EAC5BpB,EAAWm7B,GACX,OAAOz8B,EAAQwB,MAAMkB,OAI7B+5B,EAAYC,EAGhB,IACI7d,EADA8d,EAAiBz6B,UAAU,GAE/B,GAAkC,UAA9BL,EAAW86B,IAA2D,MAA5BA,EAAe35B,UAGzD,OAAOhD,EAAQwB,MAAMkB,EAEzB,GAJImc,EAAY8d,EAAe35B,WAiBF,IAZrB,UACA,MACA,QACA,WACA,WACA,SACA,cACA,SACA,UACA,MACA,OACA,SACF2M,QAAQ8sB,GACV,OAAOz8B,EAAQwB,MAAMkB,EAEzB,IAAIk6B,EAAO57B,IAAoBD,EAAcP,EAAMq8B,oBAC/Cre,EAAYxe,EAAQuM,aAAasS,GACjCwC,EAAY7C,EAAU5W,IAAI,GAC1Bk1B,EAAYte,EAAU3W,OAAO,GAUjC,IAGI8G,EADA2P,EAFiBtd,IACTD,EAAcP,EAAM6d,sBACMzb,KAYtC,OAVsC,MAAlC5C,EAAQye,wBAAmI,MAAjGze,EAAQye,uBAAuB4C,EAAY,IAAMyb,EAAY,IAAMt8B,EAAM6d,qBACnH1P,EAAQ3O,EAAQye,uBAAuB4C,EAAY,IAAMyb,EAAY,IAAMt8B,EAAM6d,qBAAqB3b,EAC5D,MAAnC4b,EAAU+C,GAAWyb,IAA2D,MAArCxe,EAAU+C,GAAWyb,GAAWp6B,GAAkD,IAArC4b,EAAU+C,GAAWyb,GAAWp6B,GAC/HiM,EAAQ2P,EAAU+C,GAAWyb,cACRC,SACjBpuB,EAAQA,EAAMjM,GAGlBiM,EAAQ,EAEJ8tB,GACR,IAAK,UACD,OAAO5d,EAEX,IAAK,MACD,OAAOie,EAAY,EAEvB,IAAK,QACD,OAAO,EAEX,IAAK,WAID,OAAOnuB,EAEX,IAAK,WACD,OAAOiuB,EAAKje,KAEhB,IAAK,SACD,OAAuC,MAAnCL,EAAU+C,GAAWyb,IAA4D,MAAtCxe,EAAU+C,GAAWyb,GAAWx0B,GACpE,IAEJgW,EAAU+C,GAAWyb,GAAWx0B,GAAG00B,GAE9C,IAAK,cACD,OAAuC,MAAnC1e,EAAU+C,GAAWyb,IAA2D,MAArCxe,EAAU+C,GAAWyb,GAAWp6B,GAAkD,IAArC4b,EAAU+C,GAAWyb,GAAWp6B,EACjH,EAEP4b,EAAU+C,GAAWyb,GAAWp6B,EAAI,EAC7B,EAEA,EAGf,IAAK,SACD,OAAa,GAATiM,EACO,GAE+B,GAAtC2P,EAAU+C,GAAWyb,GAAWG,GAEzB,IACsC,GAAtC3e,EAAU+C,GAAWyb,GAAWG,GAEhC,IACsC,GAAtC3e,EAAU+C,GAAWyb,GAAWG,GAEhC,IAEA,GAGf,IAAK,UACD,OAAO,EAEX,IAAK,MACD,OAAO5b,EAAY,EAEvB,IAAK,OACD,OAAa,GAAT1S,EACO,IAEJ,IAEX,IAAK,QACD,IAAIuuB,EAAMN,EAAKO,OACf,OAAwB,MAApBD,EAAe,WAAaJ,KAAaI,EAAe,UACjDA,EAAe,UAAEJ,GAErBt8B,EAAM48B,eAGnB,MAAO75B,GACL,IAAIC,EAAMD,EAEV,OADAC,EAAMxD,EAAQyD,UAAUD,IAEpBxD,EAAQwB,MAAMkB,EACdc,KAIZ65B,GAAM,WAEF,GAAIn7B,UAAUC,OAASC,KAAKC,EAAE,IAAMH,UAAUC,OAASC,KAAKC,EAAE,GAC1D,OAAOrC,EAAQwB,MAAMc,GAGzB,IAAK,IAAIC,EAAI,EAAGA,EAAIL,UAAUC,OAAQI,IAAK,CAEvC,IADQvC,EAAQwC,gBAAgBJ,KAAKK,EAAGP,UAAUK,GAAIA,GAC/C,GACH,OAAOvC,EAAQwB,MAAMkB,EAG7B,IACI,OAAO1C,EAAQwB,MAAMc,GACvB,MAAOiB,GACL,IAAIC,EAAMD,EAEV,OADAC,EAAMxD,EAAQyD,UAAUD,IAEpBxD,EAAQwB,MAAMkB,EACdc,KAIZ85B,WAAc,WAEV,GAAIp7B,UAAUC,OAASC,KAAKC,EAAE,IAAMH,UAAUC,OAASC,KAAKC,EAAE,GAC1D,OAAOrC,EAAQwB,MAAMc,GAGzB,IAAK,IAAIC,EAAI,EAAGA,EAAIL,UAAUC,OAAQI,IAAK,CAEvC,IADQvC,EAAQwC,gBAAgBJ,KAAKK,EAAGP,UAAUK,GAAIA,GAC/C,GACH,OAAOvC,EAAQwB,MAAMkB,EAG7B,IAEI,IACI66B,EADAC,EAAiBt7B,UAAU,GAE/B,GAAkC,SAA9BL,EAAW27B,GACX,GAAqC,SAAjC37B,EAAW27B,EAAe,IAAgB,CAC1C,IAAKv9B,EAAa4C,YAAY26B,GAC1B,OAAOx9B,EAAQwB,MAAMkB,EAEzB66B,EAAYC,EAAe,GAAG,QAE9BD,EAAYC,EAAe,QAE5B,GAAkC,UAA9B37B,EAAW27B,IAA2D,MAA5BA,EAAex6B,UAAmB,CACnF,GAA2B,MAAvBw6B,EAAe56B,KACf,OAAO5C,EAAQwB,MAAMc,GAEzB,GAAuC,SAAnCT,EAAW27B,EAAe56B,MAAkB,CAE5C,GAAiB,OADjB26B,EAAYC,EAAe56B,KAAK,GAAG,KACVtB,EAAWi8B,EAAU76B,GAC1C,OAAO1C,EAAQwB,MAAMc,GAEzBi7B,EAAYA,EAAU76B,MACnB,CACH,GAAIpB,EAAWk8B,EAAe56B,KAAKF,GAC/B,OAAO1C,EAAQwB,MAAMc,GAEzBi7B,EAAYC,EAAe56B,KAAKF,QAGpC66B,EAAYC,EAEhB,IAAIC,GACAC,SAAU,EACVC,UAAW,EACXC,UAAW,EACXC,QAAS,EACTC,SAAU,EACVC,QAAS,EACTC,OAAQ,EACRC,gBAAiB,GAErB,OAAIV,KAAaE,EACNA,EAAUF,GAEVv9B,EAAQwB,MAAMc,GAE3B,MAAOiB,GACL,IAAIC,EAAMD,EAEV,OADAC,EAAMxD,EAAQyD,UAAUD,IAEpBxD,EAAQwB,MAAMkB,EACdc,KAIZ06B,QAAW,WAEP,GAAIh8B,UAAUC,OAASC,KAAKC,EAAE,IAAMH,UAAUC,OAASC,KAAKC,EAAE,GAC1D,OAAOrC,EAAQwB,MAAMc,GAGzB,IAAK,IAAIC,EAAI,EAAGA,EAAIL,UAAUC,OAAQI,IAAK,CAEvC,IADQvC,EAAQwC,gBAAgBJ,KAAKK,EAAGP,UAAUK,GAAIA,GAC/C,GACH,OAAOvC,EAAQwB,MAAMkB,EAG7B,IAEI,IAAI86B,EAAiBt7B,UAAU,GAE/B,MAAkC,UAA9BL,EAAW27B,IAA2D,MAA5BA,EAAex6B,WAC9B,MAAvBw6B,EAAe56B,KAQzB,MAAOW,GACL,IAAIC,EAAMD,EAEV,OADAC,EAAMxD,EAAQyD,UAAUD,IAEpBxD,EAAQwB,MAAMkB,EACdc,KAIZ26B,MAAS,WAEL,GAAIj8B,UAAUC,OAASC,KAAKC,EAAE,IAAMH,UAAUC,OAASC,KAAKC,EAAE,GAC1D,OAAOrC,EAAQwB,MAAMc,GAGzB,IAAK,IAAIC,EAAI,EAAGA,EAAIL,UAAUC,OAAQI,IAAK,CAEvC,IADQvC,EAAQwC,gBAAgBJ,KAAKK,EAAGP,UAAUK,GAAIA,GAC/C,GACH,OAAOvC,EAAQwB,MAAMkB,EAG7B,IAEI,IACIiM,EADAyvB,EAAal8B,UAAU,GAE3B,GAA8B,SAA1BL,EAAWu8B,GACX,GAAiC,SAA7Bv8B,EAAWu8B,EAAW,IAAgB,CACtC,IAAKn+B,EAAa4C,YAAYu7B,GAC1B,OAAOp+B,EAAQwB,MAAMkB,EAEzBiM,EAAQyvB,EAAW,GAAG,QAEtBzvB,EAAQyvB,EAAW,QAEpB,GAA8B,UAA1Bv8B,EAAWu8B,IAAmD,MAAxBA,EAAWp7B,UAAmB,CAC3E,GAAmC,SAA/BnB,EAAWu8B,EAAWx7B,MACtB,OAAO,EAEX,GAAuB,MAAnBw7B,EAAWx7B,MAAgBtB,EAAW88B,EAAWx7B,KAAKF,GACtD,OAAO,EAEXiM,EAAQyvB,EAAWx7B,KAAKF,OAExBiM,EAAQyvB,EAEZ,OACQ,UACA,QACA,UACA,QACA,SACA,UACFzuB,QAAQhB,IAAU,EAK1B,MAAOpL,GACL,IAAIC,EAAMD,EAEV,OADAC,EAAMxD,EAAQyD,UAAUD,IAEpBxD,EAAQwB,MAAMkB,EACdc,KAIZ66B,QAAW,WAEP,GAAIn8B,UAAUC,OAASC,KAAKC,EAAE,IAAMH,UAAUC,OAASC,KAAKC,EAAE,GAC1D,OAAOrC,EAAQwB,MAAMc,GAGzB,IAAK,IAAIC,EAAI,EAAGA,EAAIL,UAAUC,OAAQI,IAAK,CAEvC,IADQvC,EAAQwC,gBAAgBJ,KAAKK,EAAGP,UAAUK,GAAIA,GAC/C,GACH,OAAOvC,EAAQwB,MAAMkB,EAG7B,IAEI,IACIiM,EADAyvB,EAAal8B,UAAU,GAE3B,GAA8B,SAA1BL,EAAWu8B,GACX,GAAiC,SAA7Bv8B,EAAWu8B,EAAW,IAAgB,CACtC,IAAKn+B,EAAa4C,YAAYu7B,GAC1B,OAAOp+B,EAAQwB,MAAMkB,EAEzBiM,EAAQyvB,EAAW,GAAG,QAEtBzvB,EAAQyvB,EAAW,QAEpB,GAA8B,UAA1Bv8B,EAAWu8B,IAAmD,MAAxBA,EAAWp7B,UAAmB,CAC3E,GAAmC,SAA/BnB,EAAWu8B,EAAWx7B,MACtB,OAAO,EAEX,GAAuB,MAAnBw7B,EAAWx7B,MAAgBtB,EAAW88B,EAAWx7B,KAAKF,GACtD,OAAO,EAEXiM,EAAQyvB,EAAWx7B,KAAKF,OAExBiM,EAAQyvB,EAEZ,OACQ,OACA,UACA,QACA,UACA,QACA,SACA,UACFzuB,QAAQhB,IAAU,EAK1B,MAAOpL,GACL,IAAIC,EAAMD,EAEV,OADAC,EAAMxD,EAAQyD,UAAUD,IAEpBxD,EAAQwB,MAAMkB,EACdc,KAIZ86B,UAAa,WAET,GAAIp8B,UAAUC,OAASC,KAAKC,EAAE,IAAMH,UAAUC,OAASC,KAAKC,EAAE,GAC1D,OAAOrC,EAAQwB,MAAMc,GAGzB,IAAK,IAAIC,EAAI,EAAGA,EAAIL,UAAUC,OAAQI,IAAK,CAEvC,IADQvC,EAAQwC,gBAAgBJ,KAAKK,EAAGP,UAAUK,GAAIA,GAC/C,GACH,OAAOvC,EAAQwB,MAAMkB,EAG7B,IAEI,IACIiM,EADAyvB,EAAal8B,UAAU,GAE3B,GAA8B,SAA1BL,EAAWu8B,GACX,GAAiC,SAA7Bv8B,EAAWu8B,EAAW,IAAgB,CACtC,IAAKn+B,EAAa4C,YAAYu7B,GAC1B,OAAOp+B,EAAQwB,MAAMkB,EAEzBiM,EAAQyvB,EAAW,GAAG,QAEtBzvB,EAAQyvB,EAAW,QAEpB,GAA8B,UAA1Bv8B,EAAWu8B,IAAmD,MAAxBA,EAAWp7B,UAAmB,CAC3E,GAAmC,SAA/BnB,EAAWu8B,EAAWx7B,MACtB,OAAO,EAEX,GAAuB,MAAnBw7B,EAAWx7B,MAAgBtB,EAAW88B,EAAWx7B,KAAKF,GACtD,OAAO,EAEXiM,EAAQyvB,EAAWx7B,KAAKF,OAExBiM,EAAQyvB,EAEZ,MAAsC,QAAlCzvB,EAAMxL,WAAWC,eAA6D,SAAlCuL,EAAMxL,WAAWC,cAKnE,MAAOG,GACL,IAAIC,EAAMD,EAEV,OADAC,EAAMxD,EAAQyD,UAAUD,IAEpBxD,EAAQwB,MAAMkB,EACdc,KAIZ+6B,KAAQ,WAEJ,GAAIr8B,UAAUC,OAASC,KAAKC,EAAE,IAAMH,UAAUC,OAASC,KAAKC,EAAE,GAC1D,OAAOrC,EAAQwB,MAAMc,GAGzB,IAAK,IAAIC,EAAI,EAAGA,EAAIL,UAAUC,OAAQI,IAAK,CAEvC,IADQvC,EAAQwC,gBAAgBJ,KAAKK,EAAGP,UAAUK,GAAIA,GAC/C,GACH,OAAOvC,EAAQwB,MAAMkB,EAG7B,IAEI,IACIiM,EADAyvB,EAAal8B,UAAU,GAE3B,GAA8B,SAA1BL,EAAWu8B,GACX,GAAiC,SAA7Bv8B,EAAWu8B,EAAW,IAAgB,CACtC,IAAKn+B,EAAa4C,YAAYu7B,GAC1B,OAAOp+B,EAAQwB,MAAMkB,EAEzBiM,EAAQyvB,EAAW,GAAG,QAEtBzvB,EAAQyvB,EAAW,QAEpB,GAA8B,UAA1Bv8B,EAAWu8B,IAAmD,MAAxBA,EAAWp7B,UAAmB,CAC3E,GAAmC,SAA/BnB,EAAWu8B,EAAWx7B,MACtB,OAAO,EAEX,GAAuB,MAAnBw7B,EAAWx7B,MAAgBtB,EAAW88B,EAAWx7B,KAAKF,GACtD,OAAO,EAEXiM,EAAQyvB,EAAWx7B,KAAKF,OAExBiM,EAAQyvB,EAEZ,MAAwB,QAApBzvB,EAAMxL,WAKZ,MAAOI,GACL,IAAIC,EAAMD,EAEV,OADAC,EAAMxD,EAAQyD,UAAUD,IAEpBxD,EAAQwB,MAAMkB,EACdc,KAIZg7B,UAAa,WAET,GAAIt8B,UAAUC,OAASC,KAAKC,EAAE,IAAMH,UAAUC,OAASC,KAAKC,EAAE,GAC1D,OAAOrC,EAAQwB,MAAMc,GAGzB,IAAK,IAAIC,EAAI,EAAGA,EAAIL,UAAUC,OAAQI,IAAK,CAEvC,IADQvC,EAAQwC,gBAAgBJ,KAAKK,EAAGP,UAAUK,GAAIA,GAC/C,GACH,OAAOvC,EAAQwB,MAAMkB,EAG7B,IAEI,IACIiM,EADAyvB,EAAal8B,UAAU,GAE3B,GAA8B,SAA1BL,EAAWu8B,GACX,GAAiC,SAA7Bv8B,EAAWu8B,EAAW,IAAgB,CACtC,IAAKn+B,EAAa4C,YAAYu7B,GAC1B,OAAOp+B,EAAQwB,MAAMkB,EAEzBiM,EAAQyvB,EAAW,GAAG,QAEtBzvB,EAAQyvB,EAAW,QAEpB,GAA8B,UAA1Bv8B,EAAWu8B,IAAmD,MAAxBA,EAAWp7B,UAAmB,CAC3E,GAAmC,SAA/BnB,EAAWu8B,EAAWx7B,MACtB,OAAO,EAEX,GAAuB,MAAnBw7B,EAAWx7B,MAAgBtB,EAAW88B,EAAWx7B,KAAKF,GACtD,OAAO,EAEXiM,EAAQyvB,EAAWx7B,KAAKF,OAExBiM,EAAQyvB,EAEZ,OACQ,OACA,UACA,QACA,UACA,QACA,SACA,UACFzuB,QAAQhB,IAAU,IAEqB,QAAlCA,EAAMxL,WAAWC,eAA6D,SAAlCuL,EAAMxL,WAAWC,iBAE7D/B,EAAUsN,IAKvB,MAAOpL,GACL,IAAIC,EAAMD,EAEV,OADAC,EAAMxD,EAAQyD,UAAUD,IAEpBxD,EAAQwB,MAAMkB,EACdc,KAIZi7B,SAAY,WAER,GAAIv8B,UAAUC,OAASC,KAAKC,EAAE,IAAMH,UAAUC,OAASC,KAAKC,EAAE,GAC1D,OAAOrC,EAAQwB,MAAMc,GAGzB,IAAK,IAAIC,EAAI,EAAGA,EAAIL,UAAUC,OAAQI,IAAK,CAEvC,IADQvC,EAAQwC,gBAAgBJ,KAAKK,EAAGP,UAAUK,GAAIA,GAC/C,GACH,OAAOvC,EAAQwB,MAAMkB,EAG7B,IAEI,IACIiM,EADAyvB,EAAal8B,UAAU,GAE3B,GAA8B,SAA1BL,EAAWu8B,GACX,GAAiC,SAA7Bv8B,EAAWu8B,EAAW,IAAgB,CACtC,IAAKn+B,EAAa4C,YAAYu7B,GAC1B,OAAOp+B,EAAQwB,MAAMkB,EAEzBiM,EAAQyvB,EAAW,GAAG,QAEtBzvB,EAAQyvB,EAAW,QAEpB,GAA8B,UAA1Bv8B,EAAWu8B,IAAmD,MAAxBA,EAAWp7B,UAAmB,CAC3E,GAAmC,SAA/BnB,EAAWu8B,EAAWx7B,MACtB,OAAO,EAEX,GAAuB,MAAnBw7B,EAAWx7B,MAAgBtB,EAAW88B,EAAWx7B,KAAKF,GACtD,OAAO,EAEXiM,EAAQyvB,EAAWx7B,KAAKF,OAExBiM,EAAQyvB,EAEZ,QAAI/8B,EAAUsN,GAKhB,MAAOpL,GACL,IAAIC,EAAMD,EAEV,OADAC,EAAMxD,EAAQyD,UAAUD,IAEpBxD,EAAQwB,MAAMkB,EACdc,KAIZk7B,MAAS,WAEL,GAAIx8B,UAAUC,OAASC,KAAKC,EAAE,IAAMH,UAAUC,OAASC,KAAKC,EAAE,GAC1D,OAAOrC,EAAQwB,MAAMc,GAGzB,IAAK,IAAIC,EAAI,EAAGA,EAAIL,UAAUC,OAAQI,IAAK,CAEvC,IADQvC,EAAQwC,gBAAgBJ,KAAKK,EAAGP,UAAUK,GAAIA,GAC/C,GACH,OAAOvC,EAAQwB,MAAMkB,EAG7B,IACI,MAAgC,UAA5Bb,EAAWK,UAAU,KAA6C,MAA1BA,UAAU,GAAGc,UAK3D,MAAOO,GACL,IAAIC,EAAMD,EAEV,OADAC,EAAMxD,EAAQyD,UAAUD,IAEpBxD,EAAQwB,MAAMkB,EACdc,KAIZm7B,OAAU,WAEN,GAAIz8B,UAAUC,OAASC,KAAKC,EAAE,IAAMH,UAAUC,OAASC,KAAKC,EAAE,GAC1D,OAAOrC,EAAQwB,MAAMc,GAGzB,IAAK,IAAIC,EAAI,EAAGA,EAAIL,UAAUC,OAAQI,IAAK,CAEvC,IADQvC,EAAQwC,gBAAgBJ,KAAKK,EAAGP,UAAUK,GAAIA,GAC/C,GACH,OAAOvC,EAAQwB,MAAMkB,EAG7B,IAEI,IACIiM,EADAyvB,EAAal8B,UAAU,GAE3B,GAA8B,SAA1BL,EAAWu8B,GACX,GAAiC,SAA7Bv8B,EAAWu8B,EAAW,IAAgB,CACtC,IAAKn+B,EAAa4C,YAAYu7B,GAC1B,OAAOp+B,EAAQwB,MAAMkB,EAEzBiM,EAAQyvB,EAAW,GAAG,QAEtBzvB,EAAQyvB,EAAW,QAEpB,GAA8B,UAA1Bv8B,EAAWu8B,IAAmD,MAAxBA,EAAWp7B,UAAmB,CAC3E,GAAmC,SAA/BnB,EAAWu8B,EAAWx7B,MACtB,OAAO,EAEX,GAAuB,MAAnBw7B,EAAWx7B,MAAgBtB,EAAW88B,EAAWx7B,KAAKF,GACtD,OAAO,EAEXiM,EAAQyvB,EAAWx7B,KAAKF,OAExBiM,EAAQyvB,EAEZ,SACQ,OACA,UACA,QACA,UACA,QACA,SACA,UACFzuB,QAAQhB,IAAU,KAEqB,QAAlCA,EAAMxL,WAAWC,eAA6D,SAAlCuL,EAAMxL,WAAWC,gBAE7D/B,EAAUsN,IAKvB,MAAOpL,GACL,IAAIC,EAAMD,EAEV,OADAC,EAAMxD,EAAQyD,UAAUD,IAEpBxD,EAAQwB,MAAMkB,EACdc,KAIZo7B,KAAQ,WAEJ,GAAI18B,UAAUC,OAASC,KAAKC,EAAE,IAAMH,UAAUC,OAASC,KAAKC,EAAE,GAC1D,OAAOrC,EAAQwB,MAAMc,GAGzB,IAAK,IAAIC,EAAI,EAAGA,EAAIL,UAAUC,OAAQI,IAAK,CAEvC,IADQvC,EAAQwC,gBAAgBJ,KAAKK,EAAGP,UAAUK,GAAIA,GAC/C,GACH,OAAOvC,EAAQwB,MAAMkB,EAG7B,IAEI,IACIiM,EADAyvB,EAAal8B,UAAU,GAE3B,GAA8B,SAA1BL,EAAWu8B,GACX,OAAO,GACJ,GAA8B,UAA1Bv8B,EAAWu8B,IAAmD,MAAxBA,EAAWp7B,UAAmB,CAC3E,GAAmC,SAA/BnB,EAAWu8B,EAAWx7B,MACtB,OAAO,GAEX,GAAuB,MAAnBw7B,EAAWx7B,MAAgBtB,EAAW88B,EAAWx7B,KAAKF,GACtD,OAAO,EAEXiM,EAAQyvB,EAAWx7B,KAAKF,OAExBiM,EAAQyvB,EAEZ,OACQ,OACA,UACA,QACA,UACA,QACA,SACA,UACFzuB,QAAQhB,IAAU,EACb,GACkC,QAAlCA,EAAMxL,WAAWC,eAA6D,SAAlCuL,EAAMxL,WAAWC,cAC7D,EACA/B,EAAUsN,GACV,EAEA,EAEb,MAAOpL,GACL,IAAIC,EAAMD,EAEV,OADAC,EAAMxD,EAAQyD,UAAUD,IAEpBxD,EAAQwB,MAAMkB,EACdc,KAIZmQ,EAAK,WAED,GAAIzR,UAAUC,OAASC,KAAKC,EAAE,IAAMH,UAAUC,OAASC,KAAKC,EAAE,GAC1D,OAAOrC,EAAQwB,MAAMc,GAGzB,IAAK,IAAIC,EAAI,EAAGA,EAAIL,UAAUC,OAAQI,IAAK,CAEvC,IADQvC,EAAQwC,gBAAgBJ,KAAKK,EAAGP,UAAUK,GAAIA,GAC/C,GACH,OAAOvC,EAAQwB,MAAMkB,EAG7B,IAEI,IACIiM,EADAyvB,EAAal8B,UAAU,GAE3B,GAA8B,SAA1BL,EAAWu8B,GACX,GAAiC,SAA7Bv8B,EAAWu8B,EAAW,IAAgB,CACtC,IAAKn+B,EAAa4C,YAAYu7B,GAC1B,OAAOp+B,EAAQwB,MAAMkB,EAEzBiM,EAAQyvB,EAAW,GAAG,QAEtBzvB,EAAQyvB,EAAW,QAEpB,GAA8B,UAA1Bv8B,EAAWu8B,IAAmD,MAAxBA,EAAWp7B,UACxD,GAAmC,SAA/BnB,EAAWu8B,EAAWx7B,MAAkB,CAExC,GAAa,OADb+L,EAAQyvB,EAAWx7B,KAAK,GAAG,KACNtB,EAAWqN,EAAMjM,GAClC,OAAO,EAEXiM,EAAQA,EAAMjM,MACX,CACH,GAAuB,MAAnB07B,EAAWx7B,MAAgBtB,EAAW88B,EAAWx7B,KAAKF,GACtD,OAAO,EAEXiM,EAAQyvB,EAAWx7B,KAAKF,OAG5BiM,EAAQyvB,EAEZ,OACQ,OACA,UACA,QACA,UACA,QACA,SACA,UACFzuB,QAAQhB,IAAU,EACbA,EACkC,QAAlCA,EAAMxL,WAAWC,eAA6D,SAAlCuL,EAAMxL,WAAWC,cAC9B,QAAlCuL,EAAMxL,WAAWC,cACV,EAEA,EAEJ/B,EAAUsN,GACV1K,WAAW0K,GAEX,EAEb,MAAOpL,GACL,IAAIC,EAAMD,EAEV,OADAC,EAAMxD,EAAQyD,UAAUD,IAEpBxD,EAAQwB,MAAMkB,EACdc,KAIZq7B,QAAW,WAEP,GAAI38B,UAAUC,OAASC,KAAKC,EAAE,IAAMH,UAAUC,OAASC,KAAKC,EAAE,GAC1D,OAAOrC,EAAQwB,MAAMc,GAGzB,IAAK,IAAIC,EAAI,EAAGA,EAAIL,UAAUC,OAAQI,IAAK,CAEvC,IADQvC,EAAQwC,gBAAgBJ,KAAKK,EAAGP,UAAUK,GAAIA,GAC/C,GACH,OAAOvC,EAAQwB,MAAMkB,EAG7B,IAEI,IAAIiM,EAAQ1O,EAAaqE,cAAcpC,UAAU,IACjD,OAAIX,EAAaoN,GACNA,EAENtN,EAAUsN,IAGfA,EAAQ1K,WAAW0K,GACZjN,EAAO,aAAciN,IAHjB3O,EAAQwB,MAAMkB,EAI3B,MAAOa,GACL,IAAIC,EAAMD,EAEV,OADAC,EAAMxD,EAAQyD,UAAUD,IAEpBxD,EAAQwB,MAAMkB,EACdc,KAIZs7B,eAAkB,WAEd,GAAI58B,UAAUC,OAASC,KAAKC,EAAE,IAAMH,UAAUC,OAASC,KAAKC,EAAE,GAC1D,OAAOrC,EAAQwB,MAAMc,GAGzB,IAAK,IAAIC,EAAI,EAAGA,EAAIL,UAAUC,OAAQI,IAAK,CAEvC,IADQvC,EAAQwC,gBAAgBJ,KAAKK,EAAGP,UAAUK,GAAIA,GAC/C,GACH,OAAOvC,EAAQwB,MAAMkB,EAG7B,IACI,IAAIiM,EAAQ1O,EAAaqE,cAAcpC,UAAU,GAAI,QACrD,OAAIX,EAAaoN,GACNA,EAEPlO,EAAMkO,GAAOyT,UACN3gB,EAASkN,GAAO,GAEU,MAA1BjO,EAAQiO,GAAOA,QAAkBA,EAAQjO,EAAQiO,GAAOA,QAErE,MAAOpL,GACL,IAAIC,EAAMD,EAEV,OADAC,EAAMxD,EAAQyD,UAAUD,IAEpBxD,EAAQwB,MAAMkB,EACdc,KAIZu7B,QAAW,WAEP,GAAI78B,UAAUC,OAASC,KAAKC,EAAE,IAAMH,UAAUC,OAASC,KAAKC,EAAE,GAC1D,OAAOrC,EAAQwB,MAAMc,GAGzB,IAAK,IAAIC,EAAI,EAAGA,EAAIL,UAAUC,OAAQI,IAAK,CAEvC,IADQvC,EAAQwC,gBAAgBJ,KAAKK,EAAGP,UAAUK,GAAIA,GAC/C,GACH,OAAOvC,EAAQwB,MAAMkB,EAG7B,IACI,IAAIiM,EAAQ1O,EAAaqE,cAAcpC,UAAU,GAAI,QACrD,OAAIX,EAAaoN,GACNA,EAEJjN,EAAO,IAAKiN,GACrB,MAAOpL,GACL,IAAIC,EAAMD,EAEV,OADAC,EAAMxD,EAAQyD,UAAUD,IAEpBxD,EAAQwB,MAAMkB,EACdc,KAIZw7B,WAAc,WAEV,GAAI98B,UAAUC,OAASC,KAAKC,EAAE,IAAMH,UAAUC,OAASC,KAAKC,EAAE,GAC1D,OAAOrC,EAAQwB,MAAMc,GAGzB,IAAK,IAAIC,EAAI,EAAGA,EAAIL,UAAUC,OAAQI,IAAK,CAEvC,IADQvC,EAAQwC,gBAAgBJ,KAAKK,EAAGP,UAAUK,GAAIA,GAC/C,GACH,OAAOvC,EAAQwB,MAAMkB,EAG7B,IAEI,IAAIiM,EAAQ1O,EAAaqE,cAAcpC,UAAU,IACjD,OAAIX,EAAaoN,GACNA,EAENtN,EAAUsN,IAGfA,EAAQ1K,WAAW0K,GACZjN,EAAO,SAAUiN,IAHb3O,EAAQwB,MAAMkB,EAI3B,MAAOa,GACL,IAAIC,EAAMD,EAEV,OADAC,EAAMxD,EAAQyD,UAAUD,IAEpBxD,EAAQwB,MAAMkB,EACdc,KAIZy7B,WAAc,WAEV,GAAI/8B,UAAUC,OAASC,KAAKC,EAAE,IAAMH,UAAUC,OAASC,KAAKC,EAAE,GAC1D,OAAOrC,EAAQwB,MAAMc,GAGzB,IAAK,IAAIC,EAAI,EAAGA,EAAIL,UAAUC,OAAQI,IAAK,CAEvC,IADQvC,EAAQwC,gBAAgBJ,KAAKK,EAAGP,UAAUK,GAAIA,GAC/C,GACH,OAAOvC,EAAQwB,MAAMkB,EAG7B,IAEI,IAAIiM,EAAQ1O,EAAaqE,cAAcpC,UAAU,IACjD,OAAIX,EAAaoN,GACNA,EAENtN,EAAUsN,IAGfA,EAAQ1K,WAAW0K,GACZjN,EAAO,KAAMiN,IAHT3O,EAAQwB,MAAMkB,EAI3B,MAAOa,GACL,IAAIC,EAAMD,EAEV,OADAC,EAAMxD,EAAQyD,UAAUD,IAEpBxD,EAAQwB,MAAMkB,EACdc,KAIZ07B,KAAQ,WAEJ,GAAIh9B,UAAUC,OAASC,KAAKC,EAAE,IAAMH,UAAUC,OAASC,KAAKC,EAAE,GAC1D,OAAOrC,EAAQwB,MAAMc,GAGzB,IAAK,IAAIC,EAAI,EAAGA,EAAIL,UAAUC,OAAQI,IAAK,CAEvC,IADQvC,EAAQwC,gBAAgBJ,KAAKK,EAAGP,UAAUK,GAAIA,GAC/C,GACH,OAAOvC,EAAQwB,MAAMkB,EAG7B,IAEI,IAAIy8B,EAAgBj9B,UAAU,GAC1Bk9B,KACJ,GAAiC,UAA7Bv9B,EAAWs9B,IAAyD,MAA3BA,EAAcn8B,UAMvD,OAAOhD,EAAQwB,MAAMkB,EALrB,GAA0B,MAAtBy8B,EAAcv8B,KACd,OAAO5C,EAAQwB,MAAMkB,EAEzB08B,EAAWn/B,EAAakgB,qBAAqBgf,EAAe,QAKhE,IAAIE,EAAQp/B,EAAaqE,cAAcpC,UAAU,GAAI,QACrD,GAAIX,EAAa89B,GACb,OAAOA,EAEX,GAAI/9B,EAAW+9B,GACX,OAAOr/B,EAAQwB,MAAMkB,EAGzB,IAAI6M,EAAgBrN,UAAU,GAC1BoH,KACJ,GAAiC,UAA7BzH,EAAW0N,IAAyD,MAA3BA,EAAcvM,UAMvD,OAAOhD,EAAQwB,MAAMkB,EALrB,GAA0B,MAAtB6M,EAAc3M,KACd,OAAO5C,EAAQwB,MAAMkB,EAM7B,GAJI4G,EAAWrJ,EAAakgB,qBAAqB5Q,EAAe,SAI3DlO,EAAUg+B,IAAgC,WAAtBx9B,EAAWw9B,GAChC,OAAOr/B,EAAQwB,MAAMkB,EAEzB,IAAI48B,EAAgBr/B,EAAas/B,gBAAgBH,EAAU91B,GACvDk2B,KACJ,GAA0B,WAAtB39B,EAAWw9B,GAAqB,CAChC,IAAI54B,EAAQxG,EAAaw/B,UAAUL,EAAUC,GAC7CG,EAAev/B,EAAay/B,KAAKN,EAAS34B,SAE1C+4B,EAAev/B,EAAay/B,KAAKN,EAASC,IAE9C,OAA6B,IAAzBC,EAAcn9B,OACPnC,EAAQwB,MAAMkB,EAErB48B,EAAcn9B,OAAS,EAChBnC,EAAQwB,MAAMoJ,GAElB40B,EAAaF,EAAc,IACpC,MAAO/7B,GACL,IAAIC,EAAMD,EAEV,OADAC,EAAMxD,EAAQyD,UAAUD,IAEpBxD,EAAQwB,MAAMkB,EACdc,KAIZm8B,KAAQ,WAEJ,GAAIz9B,UAAUC,OAASC,KAAKC,EAAE,IAAMH,UAAUC,OAASC,KAAKC,EAAE,GAC1D,OAAOrC,EAAQwB,MAAMc,GAGzB,IAAK,IAAIC,EAAI,EAAGA,EAAIL,UAAUC,OAAQI,IAAK,CAEvC,IADQvC,EAAQwC,gBAAgBJ,KAAKK,EAAGP,UAAUK,GAAIA,GAC/C,GACH,OAAOvC,EAAQwB,MAAMkB,EAG7B,IAEI,IAAIy8B,EAAgBj9B,UAAU,GAC1Bk9B,KACJ,GAAiC,UAA7Bv9B,EAAWs9B,IAAyD,MAA3BA,EAAcn8B,UAMvD,OAAOhD,EAAQwB,MAAMkB,EALrB,GAA0B,MAAtBy8B,EAAcv8B,KACd,OAAO5C,EAAQwB,MAAMkB,EAEzB08B,EAAWn/B,EAAakgB,qBAAqBgf,EAAe,QAKhE,IAAIE,EAAQp/B,EAAaqE,cAAcpC,UAAU,GAAI,QACrD,GAAIX,EAAa89B,GACb,OAAOA,EAEX,GAAI/9B,EAAW+9B,GACX,OAAOr/B,EAAQwB,MAAMkB,EAGzB,IAAI6M,EAAgBrN,UAAU,GAC1BoH,KACJ,GAAiC,UAA7BzH,EAAW0N,IAAyD,MAA3BA,EAAcvM,UAMvD,OAAOhD,EAAQwB,MAAMkB,EALrB,GAA0B,MAAtB6M,EAAc3M,KACd,OAAO5C,EAAQwB,MAAMkB,EAM7B,GAJI4G,EAAWrJ,EAAakgB,qBAAqB5Q,EAAe,SAI3DlO,EAAUg+B,IAAgC,WAAtBx9B,EAAWw9B,GAChC,OAAOr/B,EAAQwB,MAAMkB,EAEzB,IAAI48B,EAAgBr/B,EAAas/B,gBAAgBH,EAAU91B,GACvDk2B,KACJ,GAA0B,WAAtB39B,EAAWw9B,GAAqB,CAChC,IAAI54B,EAAQxG,EAAaw/B,UAAUL,EAAUC,GAC7CG,EAAev/B,EAAay/B,KAAKN,EAAS34B,SAE1C+4B,EAAev/B,EAAay/B,KAAKN,EAASC,IAE9C,IAAIO,EAAWJ,EAAaF,EAAc,IAC1C,IAAS/8B,EAAI,EAAGA,EAAI+8B,EAAcn9B,OAAQI,IAClCq9B,EAAWJ,EAAaF,EAAc/8B,MACtCq9B,EAAWJ,EAAaF,EAAc/8B,KAG9C,OAAOq9B,EACT,MAAOr8B,GACL,IAAIC,EAAMD,EAEV,OADAC,EAAMxD,EAAQyD,UAAUD,IAEpBxD,EAAQwB,MAAMkB,EACdc,KAIZq8B,KAAQ,WAEJ,GAAI39B,UAAUC,OAASC,KAAKC,EAAE,IAAMH,UAAUC,OAASC,KAAKC,EAAE,GAC1D,OAAOrC,EAAQwB,MAAMc,GAGzB,IAAK,IAAIC,EAAI,EAAGA,EAAIL,UAAUC,OAAQI,IAAK,CAEvC,IADQvC,EAAQwC,gBAAgBJ,KAAKK,EAAGP,UAAUK,GAAIA,GAC/C,GACH,OAAOvC,EAAQwB,MAAMkB,EAG7B,IAEI,IAAIy8B,EAAgBj9B,UAAU,GAC1Bk9B,KACJ,GAAiC,UAA7Bv9B,EAAWs9B,IAAyD,MAA3BA,EAAcn8B,UAMvD,OAAOhD,EAAQwB,MAAMkB,EALrB,GAA0B,MAAtBy8B,EAAcv8B,KACd,OAAO5C,EAAQwB,MAAMkB,EAEzB08B,EAAWn/B,EAAakgB,qBAAqBgf,EAAe,QAKhE,IAAIE,EAAQp/B,EAAaqE,cAAcpC,UAAU,GAAI,QACrD,GAAIX,EAAa89B,GACb,OAAOA,EAEX,GAAI/9B,EAAW+9B,GACX,OAAOr/B,EAAQwB,MAAMkB,EAGzB,IAAI6M,EAAgBrN,UAAU,GAC1BoH,KACJ,GAAiC,UAA7BzH,EAAW0N,IAAyD,MAA3BA,EAAcvM,UAMvD,OAAOhD,EAAQwB,MAAMkB,EALrB,GAA0B,MAAtB6M,EAAc3M,KACd,OAAO5C,EAAQwB,MAAMkB,EAM7B,GAJI4G,EAAWrJ,EAAakgB,qBAAqB5Q,EAAe,SAI3DlO,EAAUg+B,IAAgC,WAAtBx9B,EAAWw9B,GAChC,OAAOr/B,EAAQwB,MAAMkB,EAEzB,IAAI48B,EAAgBC,gBAAgBH,EAAU91B,GAC1Ck2B,KACJ,GAA0B,WAAtB39B,EAAWw9B,GAAqB,CAChC,IAAI54B,EAAQg5B,UAAUL,EAAUC,GAChCG,EAAeE,KAAKN,EAAS34B,SAE7B+4B,EAAeE,KAAKN,EAASC,IAEjC,IAAIS,EAAWN,EAAaF,EAAc,IAC1C,IAAS/8B,EAAI,EAAGA,EAAI+8B,EAAcn9B,OAAQI,IAClCu9B,EAAWN,EAAaF,EAAc/8B,MACtCu9B,EAAWN,EAAaF,EAAc/8B,KAG9C,OAAOu9B,EACT,MAAOv8B,GACL,IAAIC,EAAMD,EAEV,OADAC,EAAMxD,EAAQyD,UAAUD,IAEpBxD,EAAQwB,MAAMkB,EACdc,KAIZu8B,SAAY,WAER,GAAI79B,UAAUC,OAASC,KAAKC,EAAE,IAAMH,UAAUC,OAASC,KAAKC,EAAE,GAC1D,OAAOrC,EAAQwB,MAAMc,GAGzB,IAAK,IAAIC,EAAI,EAAGA,EAAIL,UAAUC,OAAQI,IAAK,CAEvC,IADQvC,EAAQwC,gBAAgBJ,KAAKK,EAAGP,UAAUK,GAAIA,GAC/C,GACH,OAAOvC,EAAQwB,MAAMkB,EAG7B,IAEI,IAAIy8B,EAAgBj9B,UAAU,GAC1Bk9B,KACJ,GAAiC,UAA7Bv9B,EAAWs9B,IAAyD,MAA3BA,EAAcn8B,UAMvD,OAAOhD,EAAQwB,MAAMkB,EALrB,GAA0B,MAAtBy8B,EAAcv8B,KACd,OAAO5C,EAAQwB,MAAMkB,EAEzB08B,EAAWn/B,EAAakgB,qBAAqBgf,EAAe,QAKhE,IAAIE,EAAQp/B,EAAaqE,cAAcpC,UAAU,GAAI,QACrD,GAAIX,EAAa89B,GACb,OAAOA,EAEX,GAAI/9B,EAAW+9B,GACX,OAAOr/B,EAAQwB,MAAMkB,EAGzB,IAAI6M,EAAgBrN,UAAU,GAC1BoH,KACJ,GAAiC,UAA7BzH,EAAW0N,IAAyD,MAA3BA,EAAcvM,UAMvD,OAAOhD,EAAQwB,MAAMkB,EALrB,GAA0B,MAAtB6M,EAAc3M,KACd,OAAO5C,EAAQwB,MAAMkB,EAM7B,GAJI4G,EAAWrJ,EAAakgB,qBAAqB5Q,EAAe,SAI3DlO,EAAUg+B,IAAgC,WAAtBx9B,EAAWw9B,GAChC,OAAOr/B,EAAQwB,MAAMkB,EAEzB,IAAI48B,EAAgBr/B,EAAas/B,gBAAgBH,EAAU91B,GACvDk2B,KACJ,GAA0B,WAAtB39B,EAAWw9B,GAAqB,CAChC,IAAI54B,EAAQxG,EAAaw/B,UAAUL,EAAUC,GAC7CG,EAAev/B,EAAay/B,KAAKN,EAAS34B,SAE1C+4B,EAAev/B,EAAay/B,KAAKN,EAASC,IAE9C,IAAIh8B,EAAM,EACV,IAASd,EAAI,EAAGA,EAAI+8B,EAAcn9B,OAAQI,IACtCc,GAAOm8B,EAAaF,EAAc/8B,IAEtC,OAAgC,IAAzB+8B,EAAcn9B,OAAenC,EAAQwB,MAAMoC,EAAIP,EAAMi8B,EAAcn9B,OAC5E,MAAOoB,GACL,IAAIC,EAAMD,EAEV,OADAC,EAAMxD,EAAQyD,UAAUD,IAEpBxD,EAAQwB,MAAMkB,EACdc,KAIZw8B,OAAU,WAEN,GAAI99B,UAAUC,OAASC,KAAKC,EAAE,IAAMH,UAAUC,OAASC,KAAKC,EAAE,GAC1D,OAAOrC,EAAQwB,MAAMc,GAGzB,IAAK,IAAIC,EAAI,EAAGA,EAAIL,UAAUC,OAAQI,IAAK,CAEvC,IADQvC,EAAQwC,gBAAgBJ,KAAKK,EAAGP,UAAUK,GAAIA,GAC/C,GACH,OAAOvC,EAAQwB,MAAMkB,EAG7B,IAEI,IAAIy8B,EAAgBj9B,UAAU,GAC1Bk9B,KACJ,GAAiC,UAA7Bv9B,EAAWs9B,IAAyD,MAA3BA,EAAcn8B,UAMvD,OAAOhD,EAAQwB,MAAMkB,EALrB,GAA0B,MAAtBy8B,EAAcv8B,KACd,OAAO5C,EAAQwB,MAAMkB,EAEzB08B,EAAWn/B,EAAakgB,qBAAqBgf,EAAe,QAKhE,IAAIE,EAAQp/B,EAAaqE,cAAcpC,UAAU,GAAI,QACrD,GAAIX,EAAa89B,GACb,OAAOA,EAEX,GAAI/9B,EAAW+9B,GACX,OAAOr/B,EAAQwB,MAAMkB,EAGzB,IAAI6M,EAAgBrN,UAAU,GAC1BoH,KACJ,GAAiC,UAA7BzH,EAAW0N,IAAyD,MAA3BA,EAAcvM,UAMvD,OAAOhD,EAAQwB,MAAMkB,EALrB,GAA0B,MAAtB6M,EAAc3M,KACd,OAAO5C,EAAQwB,MAAMkB,EAM7B,GAJI4G,EAAWrJ,EAAakgB,qBAAqB5Q,EAAe,SAI3DlO,EAAUg+B,IAAgC,WAAtBx9B,EAAWw9B,GAChC,OAAOr/B,EAAQwB,MAAMkB,EAEzB,IAAI48B,EAAgBr/B,EAAas/B,gBAAgBH,EAAU91B,GACvDk2B,KACJ,GAA0B,WAAtB39B,EAAWw9B,GAAqB,CAChC,IAAI54B,EAAQxG,EAAaw/B,UAAUL,EAAUC,GAC7CG,EAAev/B,EAAay/B,KAAKN,EAAS34B,SAE1C+4B,EAAev/B,EAAay/B,KAAKN,EAASC,IAE9C,IAAIY,KACJ,IAAS19B,EAAI,EAAGA,EAAI+8B,EAAcn9B,OAAQI,IACtC09B,EAAa19B,GAAKi9B,EAAaF,EAAc/8B,IAEjD,OAAOgC,OAAOC,oBAAoBX,MAAMa,EAAE8J,MAAMjK,OAAOC,oBAAoBX,MAAOo8B,GACpF,MAAO18B,GACL,IAAIC,EAAMD,EAEV,OADAC,EAAMxD,EAAQyD,UAAUD,IAEpBxD,EAAQwB,MAAMkB,EACdc,KAIZ08B,QAAW,WAEP,GAAIh+B,UAAUC,OAASC,KAAKC,EAAE,IAAMH,UAAUC,OAASC,KAAKC,EAAE,GAC1D,OAAOrC,EAAQwB,MAAMc,GAGzB,IAAK,IAAIC,EAAI,EAAGA,EAAIL,UAAUC,OAAQI,IAAK,CAEvC,IADQvC,EAAQwC,gBAAgBJ,KAAKK,EAAGP,UAAUK,GAAIA,GAC/C,GACH,OAAOvC,EAAQwB,MAAMkB,EAG7B,IAEI,IAAIy8B,EAAgBj9B,UAAU,GAC1Bk9B,KACJ,GAAiC,UAA7Bv9B,EAAWs9B,IAAyD,MAA3BA,EAAcn8B,UAMvD,OAAOhD,EAAQwB,MAAMkB,EALrB,GAA0B,MAAtBy8B,EAAcv8B,KACd,OAAO5C,EAAQwB,MAAMkB,EAEzB08B,EAAWn/B,EAAakgB,qBAAqBgf,EAAe,QAKhE,IAAIE,EAAQp/B,EAAaqE,cAAcpC,UAAU,GAAI,QACrD,GAAIX,EAAa89B,GACb,OAAOA,EAEX,GAAI/9B,EAAW+9B,GACX,OAAOr/B,EAAQwB,MAAMkB,EAGzB,IAAI6M,EAAgBrN,UAAU,GAC1BoH,KACJ,GAAiC,UAA7BzH,EAAW0N,IAAyD,MAA3BA,EAAcvM,UAMvD,OAAOhD,EAAQwB,MAAMkB,EALrB,GAA0B,MAAtB6M,EAAc3M,KACd,OAAO5C,EAAQwB,MAAMkB,EAM7B,GAJI4G,EAAWrJ,EAAakgB,qBAAqB5Q,EAAe,SAI3DlO,EAAUg+B,IAAgC,WAAtBx9B,EAAWw9B,GAChC,OAAOr/B,EAAQwB,MAAMkB,EAEzB,IAAI48B,EAAgBr/B,EAAas/B,gBAAgBH,EAAU91B,GACvDk2B,KACJ,GAA0B,WAAtB39B,EAAWw9B,GAAqB,CAChC,IAAI54B,EAAQxG,EAAaw/B,UAAUL,EAAUC,GAC7CG,EAAev/B,EAAay/B,KAAKN,EAAS34B,SAE1C+4B,EAAev/B,EAAay/B,KAAKN,EAASC,IAE9C,IAAIY,KACJ,IAAS19B,EAAI,EAAGA,EAAI+8B,EAAcn9B,OAAQI,IACtC09B,EAAa19B,GAAKi9B,EAAaF,EAAc/8B,IAEjD,OAAOgC,OAAOC,oBAAoBV,OAAOY,EAAE8J,MAAMjK,OAAOC,oBAAoBV,OAAQm8B,GACtF,MAAO18B,GACL,IAAIC,EAAMD,EAEV,OADAC,EAAMxD,EAAQyD,UAAUD,IAEpBxD,EAAQwB,MAAMkB,EACdc,KAIZ28B,SAAY,WAER,GAAIj+B,UAAUC,OAASC,KAAKC,EAAE,IAAMH,UAAUC,OAASC,KAAKC,EAAE,GAC1D,OAAOrC,EAAQwB,MAAMc,GAGzB,IAAK,IAAIC,EAAI,EAAGA,EAAIL,UAAUC,OAAQI,IAAK,CAEvC,IADQvC,EAAQwC,gBAAgBJ,KAAKK,EAAGP,UAAUK,GAAIA,GAC/C,GACH,OAAOvC,EAAQwB,MAAMkB,EAG7B,IAEI,IAAIy8B,EAAgBj9B,UAAU,GAC1Bk9B,KACJ,GAAiC,UAA7Bv9B,EAAWs9B,IAAyD,MAA3BA,EAAcn8B,UAMvD,OAAOhD,EAAQwB,MAAMkB,EALrB,GAA0B,MAAtBy8B,EAAcv8B,KACd,OAAO5C,EAAQwB,MAAMkB,EAEzB08B,EAAWn/B,EAAakgB,qBAAqBgf,EAAe,QAKhE,IAAIE,EAAQp/B,EAAaqE,cAAcpC,UAAU,GAAI,QACrD,GAAIX,EAAa89B,GACb,OAAOA,EAEX,GAAI/9B,EAAW+9B,GACX,OAAOr/B,EAAQwB,MAAMkB,EAGzB,IAAI6M,EAAgBrN,UAAU,GAC1BoH,KACJ,GAAiC,UAA7BzH,EAAW0N,IAAyD,MAA3BA,EAAcvM,UAMvD,OAAOhD,EAAQwB,MAAMkB,EALrB,GAA0B,MAAtB6M,EAAc3M,KACd,OAAO5C,EAAQwB,MAAMkB,EAM7B,GAJI4G,EAAWrJ,EAAakgB,qBAAqB5Q,EAAe,SAI3DlO,EAAUg+B,IAAgC,WAAtBx9B,EAAWw9B,GAChC,OAAOr/B,EAAQwB,MAAMkB,EAEzB,IAAI48B,EAAgBr/B,EAAas/B,gBAAgBH,EAAU91B,GACvDk2B,KACJ,GAA0B,WAAtB39B,EAAWw9B,GAAqB,CAChC,IAAI54B,EAAQxG,EAAaw/B,UAAUL,EAAUC,GAC7CG,EAAev/B,EAAay/B,KAAKN,EAAS34B,SAE1C+4B,EAAev/B,EAAay/B,KAAKN,EAASC,IAE9C,IAAIY,KACJ,IAAS19B,EAAI,EAAGA,EAAI+8B,EAAcn9B,OAAQI,IACtC09B,EAAa19B,GAAKi9B,EAAaF,EAAc/8B,IAEjD09B,EAAehgC,EAAamgC,QAAQH,GACpC,IAAIvxB,EAAS,EACb,IAAKnM,EAAI,EAAGA,EAAI09B,EAAa99B,OAAQI,IACjCmM,GAAUuxB,EAAa19B,GAE3B,OAAOmM,EACT,MAAOnL,GACL,IAAIC,EAAMD,EAEV,OADAC,EAAMxD,EAAQyD,UAAUD,IAEpBxD,EAAQwB,MAAMkB,EACdc,KAIZ68B,OAAU,WAEN,GAAIn+B,UAAUC,OAASC,KAAKC,EAAE,IAAMH,UAAUC,OAASC,KAAKC,EAAE,GAC1D,OAAOrC,EAAQwB,MAAMc,GAGzB,IAAK,IAAIC,EAAI,EAAGA,EAAIL,UAAUC,OAAQI,IAAK,CAEvC,IADQvC,EAAQwC,gBAAgBJ,KAAKK,EAAGP,UAAUK,GAAIA,GAC/C,GACH,OAAOvC,EAAQwB,MAAMkB,EAG7B,IAEI,IAAIy8B,EAAgBj9B,UAAU,GAC1Bk9B,KACJ,GAAiC,UAA7Bv9B,EAAWs9B,IAAyD,MAA3BA,EAAcn8B,UAMvD,OAAOhD,EAAQwB,MAAMkB,EALrB,GAA0B,MAAtBy8B,EAAcv8B,KACd,OAAO5C,EAAQwB,MAAMkB,EAEzB08B,EAAWn/B,EAAakgB,qBAAqBgf,EAAe,QAKhE,IAAIE,EAAQp/B,EAAaqE,cAAcpC,UAAU,GAAI,QACrD,GAAIX,EAAa89B,GACb,OAAOA,EAEX,GAAI/9B,EAAW+9B,GACX,OAAOr/B,EAAQwB,MAAMkB,EAGzB,IAAI6M,EAAgBrN,UAAU,GAC1BoH,KACJ,GAAiC,UAA7BzH,EAAW0N,IAAyD,MAA3BA,EAAcvM,UAMvD,OAAOhD,EAAQwB,MAAMkB,EALrB,GAA0B,MAAtB6M,EAAc3M,KACd,OAAO5C,EAAQwB,MAAMkB,EAM7B,GAJI4G,EAAWrJ,EAAakgB,qBAAqB5Q,EAAe,SAI3DlO,EAAUg+B,IAAgC,WAAtBx9B,EAAWw9B,GAChC,OAAOr/B,EAAQwB,MAAMkB,EAEzB,IAAI48B,EAAgBr/B,EAAas/B,gBAAgBH,EAAU91B,GACvDk2B,KACJ,GAA0B,WAAtB39B,EAAWw9B,GAAqB,CAChC,IAAI54B,EAAQxG,EAAaw/B,UAAUL,EAAUC,GAC7CG,EAAev/B,EAAay/B,KAAKN,EAAS34B,SAE1C+4B,EAAev/B,EAAay/B,KAAKN,EAASC,IAE9C,IAAIY,KACJ,IAAS19B,EAAI,EAAGA,EAAI+8B,EAAcn9B,OAAQI,IACtC09B,EAAa19B,GAAKi9B,EAAaF,EAAc/8B,IAGjD,OADA09B,EAAehgC,EAAamgC,QAAQH,GAC7B17B,OAAOC,oBAAoBsK,OAAOpK,EAAE8J,MAAMjK,OAAOC,oBAAoBsK,OAAQmxB,GACtF,MAAO18B,GACL,IAAIC,EAAMD,EAEV,OADAC,EAAMxD,EAAQyD,UAAUD,IAEpBxD,EAAQwB,MAAMkB,EACdc,KAIZ88B,QAAW,WAEP,GAAIp+B,UAAUC,OAASC,KAAKC,EAAE,IAAMH,UAAUC,OAASC,KAAKC,EAAE,GAC1D,OAAOrC,EAAQwB,MAAMc,GAGzB,IAAK,IAAIC,EAAI,EAAGA,EAAIL,UAAUC,OAAQI,IAAK,CAEvC,IADQvC,EAAQwC,gBAAgBJ,KAAKK,EAAGP,UAAUK,GAAIA,GAC/C,GACH,OAAOvC,EAAQwB,MAAMkB,EAG7B,IAEI,IAAIy8B,EAAgBj9B,UAAU,GAC1Bk9B,KACJ,GAAiC,UAA7Bv9B,EAAWs9B,IAAyD,MAA3BA,EAAcn8B,UAMvD,OAAOhD,EAAQwB,MAAMkB,EALrB,GAA0B,MAAtBy8B,EAAcv8B,KACd,OAAO5C,EAAQwB,MAAMkB,EAEzB08B,EAAWn/B,EAAakgB,qBAAqBgf,EAAe,QAKhE,IAAIE,EAAQp/B,EAAaqE,cAAcpC,UAAU,GAAI,QACrD,GAAIX,EAAa89B,GACb,OAAOA,EAEX,GAAI/9B,EAAW+9B,GACX,OAAOr/B,EAAQwB,MAAMkB,EAGzB,IAAI6M,EAAgBrN,UAAU,GAC1BoH,KACJ,GAAiC,UAA7BzH,EAAW0N,IAAyD,MAA3BA,EAAcvM,UAMvD,OAAOhD,EAAQwB,MAAMkB,EALrB,GAA0B,MAAtB6M,EAAc3M,KACd,OAAO5C,EAAQwB,MAAMkB,EAM7B,GAJI4G,EAAWrJ,EAAakgB,qBAAqB5Q,EAAe,SAI3DlO,EAAUg+B,IAAgC,WAAtBx9B,EAAWw9B,GAChC,OAAOr/B,EAAQwB,MAAMkB,EAEzB,IAAI48B,EAAgBr/B,EAAas/B,gBAAgBH,EAAU91B,GACvDk2B,KACJ,GAA0B,WAAtB39B,EAAWw9B,GAAqB,CAChC,IAAI54B,EAAQxG,EAAaw/B,UAAUL,EAAUC,GAC7CG,EAAev/B,EAAay/B,KAAKN,EAAS34B,SAE1C+4B,EAAev/B,EAAay/B,KAAKN,EAASC,IAE9C,IAAIY,KACJ,IAAS19B,EAAI,EAAGA,EAAI+8B,EAAcn9B,OAAQI,IACtC09B,EAAa19B,GAAKi9B,EAAaF,EAAc/8B,IAGjD,OADA09B,EAAehgC,EAAamgC,QAAQH,GAC7B17B,OAAOC,oBAAoBuK,OAAOrK,EAAE8J,MAAMjK,OAAOC,oBAAoBuK,OAAQkxB,GACtF,MAAO18B,GACL,IAAIC,EAAMD,EAEV,OADAC,EAAMxD,EAAQyD,UAAUD,IAEpBxD,EAAQwB,MAAMkB,EACdc,KAIZ+8B,KAAQ,WAEJ,GAAIr+B,UAAUC,OAASC,KAAKC,EAAE,IAAMH,UAAUC,OAASC,KAAKC,EAAE,GAC1D,OAAOrC,EAAQwB,MAAMc,GAGzB,IAAK,IAAIC,EAAI,EAAGA,EAAIL,UAAUC,OAAQI,IAAK,CAEvC,IADQvC,EAAQwC,gBAAgBJ,KAAKK,EAAGP,UAAUK,GAAIA,GAC/C,GACH,OAAOvC,EAAQwB,MAAMkB,EAG7B,IAEI,IAAIy8B,EAAgBj9B,UAAU,GAC1Bk9B,KACJ,GAAiC,UAA7Bv9B,EAAWs9B,IAAyD,MAA3BA,EAAcn8B,UAMvD,OAAOhD,EAAQwB,MAAMkB,EALrB,GAA0B,MAAtBy8B,EAAcv8B,KACd,OAAO5C,EAAQwB,MAAMkB,EAEzB08B,EAAWn/B,EAAakgB,qBAAqBgf,EAAe,QAKhE,IAAIE,EAAQp/B,EAAaqE,cAAcpC,UAAU,GAAI,QACrD,GAAIX,EAAa89B,GACb,OAAOA,EAEX,GAAI/9B,EAAW+9B,GACX,OAAOr/B,EAAQwB,MAAMkB,EAGzB,IAAI6M,EAAgBrN,UAAU,GAC1BoH,KACJ,GAAiC,UAA7BzH,EAAW0N,IAAyD,MAA3BA,EAAcvM,UAMvD,OAAOhD,EAAQwB,MAAMkB,EALrB,GAA0B,MAAtB6M,EAAc3M,KACd,OAAO5C,EAAQwB,MAAMkB,EAM7B,GAJI4G,EAAWrJ,EAAakgB,qBAAqB5Q,EAAe,SAI3DlO,EAAUg+B,IAAgC,WAAtBx9B,EAAWw9B,GAChC,OAAOr/B,EAAQwB,MAAMkB,EAEzB,IAAI48B,EAAgBr/B,EAAas/B,gBAAgBH,EAAU91B,GACvDk2B,KACJ,GAA0B,WAAtB39B,EAAWw9B,GAAqB,CAChC,IAAI54B,EAAQxG,EAAaw/B,UAAUL,EAAUC,GAC7CG,EAAev/B,EAAay/B,KAAKN,EAAS34B,SAE1C+4B,EAAev/B,EAAay/B,KAAKN,EAASC,IAE9C,IAAIY,KACJ,IAAS19B,EAAI,EAAGA,EAAI+8B,EAAcn9B,OAAQI,IACtC09B,EAAa19B,GAAKi9B,EAAaF,EAAc/8B,IAEjD09B,EAAehgC,EAAamgC,QAAQH,GACpC,IAAIvxB,EAAS,EACb,IAAKnM,EAAI,EAAGA,EAAI09B,EAAa99B,OAAQI,IACjCmM,GAAUuxB,EAAa19B,GAE3B,OAAOmM,EACT,MAAOnL,GACL,IAAIC,EAAMD,EAEV,OADAC,EAAMxD,EAAQyD,UAAUD,IAEpBxD,EAAQwB,MAAMkB,EACdc,KAIZg9B,KAAQ,WAEJ,GAAIt+B,UAAUC,OAASC,KAAKC,EAAE,IAAMH,UAAUC,OAASC,KAAKC,EAAE,GAC1D,OAAOrC,EAAQwB,MAAMc,GAGzB,IAAK,IAAIC,EAAI,EAAGA,EAAIL,UAAUC,OAAQI,IAAK,CAEvC,IADQvC,EAAQwC,gBAAgBJ,KAAKK,EAAGP,UAAUK,GAAIA,GAC/C,GACH,OAAOvC,EAAQwB,MAAMkB,EAG7B,IAEI,IAAIy8B,EAAgBj9B,UAAU,GAC1Bk9B,KACJ,GAAiC,UAA7Bv9B,EAAWs9B,IAAyD,MAA3BA,EAAcn8B,UAMvD,OAAOhD,EAAQwB,MAAMkB,EALrB,GAA0B,MAAtBy8B,EAAcv8B,KACd,OAAO5C,EAAQwB,MAAMkB,EAEzB08B,EAAWn/B,EAAakgB,qBAAqBgf,EAAe,QAKhE,IAAIE,EAAQp/B,EAAaqE,cAAcpC,UAAU,GAAI,QACrD,GAAIX,EAAa89B,GACb,OAAOA,EAEX,GAAI/9B,EAAW+9B,GACX,OAAOr/B,EAAQwB,MAAMkB,EAGzB,IAAI6M,EAAgBrN,UAAU,GAC1BoH,KACJ,GAAiC,UAA7BzH,EAAW0N,IAAyD,MAA3BA,EAAcvM,UAMvD,OAAOhD,EAAQwB,MAAMkB,EALrB,GAA0B,MAAtB6M,EAAc3M,KACd,OAAO5C,EAAQwB,MAAMkB,EAM7B,GAJI4G,EAAWrJ,EAAakgB,qBAAqB5Q,EAAe,SAI3DlO,EAAUg+B,IAAgC,WAAtBx9B,EAAWw9B,GAChC,OAAOr/B,EAAQwB,MAAMkB,EAEzB,IAAI48B,EAAgBr/B,EAAas/B,gBAAgBH,EAAU91B,GACvDk2B,KACJ,GAA0B,WAAtB39B,EAAWw9B,GAAqB,CAChC,IAAI54B,EAAQxG,EAAaw/B,UAAUL,EAAUC,GAC7CG,EAAev/B,EAAay/B,KAAKN,EAAS34B,SAE1C+4B,EAAev/B,EAAay/B,KAAKN,EAASC,IAE9C,IAAIY,KACJ,IAAS19B,EAAI,EAAGA,EAAI+8B,EAAcn9B,OAAQI,IACtC09B,EAAa19B,GAAKi9B,EAAaF,EAAc/8B,IAGjD,OADA09B,EAAehgC,EAAamgC,QAAQH,GAC7B17B,OAAOC,oBAAoBwK,MAAMtK,EAAE8J,MAAMjK,OAAOC,oBAAoBwK,MAAOixB,GACpF,MAAO18B,GACL,IAAIC,EAAMD,EAEV,OADAC,EAAMxD,EAAQyD,UAAUD,IAEpBxD,EAAQwB,MAAMkB,EACdc,KAIZi9B,MAAS,WAEL,GAAIv+B,UAAUC,OAASC,KAAKC,EAAE,IAAMH,UAAUC,OAASC,KAAKC,EAAE,GAC1D,OAAOrC,EAAQwB,MAAMc,GAGzB,IAAK,IAAIC,EAAI,EAAGA,EAAIL,UAAUC,OAAQI,IAAK,CAEvC,IADQvC,EAAQwC,gBAAgBJ,KAAKK,EAAGP,UAAUK,GAAIA,GAC/C,GACH,OAAOvC,EAAQwB,MAAMkB,EAG7B,IAEI,IAAIy8B,EAAgBj9B,UAAU,GAC1Bk9B,KACJ,GAAiC,UAA7Bv9B,EAAWs9B,IAAyD,MAA3BA,EAAcn8B,UAMvD,OAAOhD,EAAQwB,MAAMkB,EALrB,GAA0B,MAAtBy8B,EAAcv8B,KACd,OAAO5C,EAAQwB,MAAMkB,EAEzB08B,EAAWn/B,EAAakgB,qBAAqBgf,EAAe,QAKhE,IAAIE,EAAQp/B,EAAaqE,cAAcpC,UAAU,GAAI,QACrD,GAAIX,EAAa89B,GACb,OAAOA,EAEX,GAAI/9B,EAAW+9B,GACX,OAAOr/B,EAAQwB,MAAMkB,EAGzB,IAAI6M,EAAgBrN,UAAU,GAC1BoH,KACJ,GAAiC,UAA7BzH,EAAW0N,IAAyD,MAA3BA,EAAcvM,UAMvD,OAAOhD,EAAQwB,MAAMkB,EALrB,GAA0B,MAAtB6M,EAAc3M,KACd,OAAO5C,EAAQwB,MAAMkB,EAM7B,GAJI4G,EAAWrJ,EAAakgB,qBAAqB5Q,EAAe,SAI3DlO,EAAUg+B,IAAgC,WAAtBx9B,EAAWw9B,GAChC,OAAOr/B,EAAQwB,MAAMkB,EAEzB,IAAI48B,EAAgBr/B,EAAas/B,gBAAgBH,EAAU91B,GACvDk2B,KACJ,GAA0B,WAAtB39B,EAAWw9B,GAAqB,CAChC,IAAI54B,EAAQxG,EAAaw/B,UAAUL,EAAUC,GAC7CG,EAAev/B,EAAay/B,KAAKN,EAAS34B,SAE1C+4B,EAAev/B,EAAay/B,KAAKN,EAASC,IAE9C,IAAIY,KACJ,IAAS19B,EAAI,EAAGA,EAAI+8B,EAAcn9B,OAAQI,IACtC09B,EAAa19B,GAAKi9B,EAAaF,EAAc/8B,IAGjD,OADA09B,EAAehgC,EAAamgC,QAAQH,GAC7B17B,OAAOC,oBAAoByK,MAAMvK,EAAE8J,MAAMjK,OAAOC,oBAAoByK,MAAOgxB,GACpF,MAAO18B,GACL,IAAIC,EAAMD,EAEV,OADAC,EAAMxD,EAAQyD,UAAUD,IAEpBxD,EAAQwB,MAAMkB,EACdc,KAIZk9B,YAAe,WAEX,GAAIx+B,UAAUC,OAASC,KAAKC,EAAE,IAAMH,UAAUC,OAASC,KAAKC,EAAE,GAC1D,OAAOrC,EAAQwB,MAAMc,GAGzB,IAAK,IAAIC,EAAI,EAAGA,EAAIL,UAAUC,OAAQI,IAAK,CAEvC,IADQvC,EAAQwC,gBAAgBJ,KAAKK,EAAGP,UAAUK,GAAIA,GAC/C,GACH,OAAOvC,EAAQwB,MAAMkB,EAG7B,IACI,IAAIqE,EAASxC,OAAOyC,qBAChBC,EAAS1C,OAAO2C,wBAGhBy5B,GAFUp8B,OAAO6C,0BAELpH,EAAQ2gC,WACpBC,EAAa1+B,UAAU,GACvB2+B,EAAY3+B,UAAU,GACtB4+B,EAAY5+B,UAAU,GACtB6+B,EAAc7+B,UAAU,GACxB8+B,EAAc9+B,UAAU,GACxB++B,EAAU/+B,UAAU,GACpBg/B,EAAUh/B,UAAU,GACpBi/B,EAAaj/B,UAAU,GAC3B,IAEIoc,EAFiBtd,IACTD,EAAcP,EAAM6d,sBACMzb,KAEtC,IAAIw+B,EAAaphC,EAAQqhC,uBAAuBT,GAE5CU,EAAWxhC,EAAMyhC,gBAAgBjjB,EAAWvX,EAAQE,GACpDoY,EAAQiiB,EAAS,GACjBliB,EAASkiB,EAAS,GAElBE,KACa,MAAbV,IACAA,EAAY,GAEhBU,EAAwB,UAAIV,EAE5BU,EAAsB,QAAIV,EAAY,EACtCU,EAAapiB,OAASA,GAAU0hB,EAAY,GAC5CU,EAAaniB,MAAQA,EAErB,IAAIoiB,EAAoB,SAAUC,EAAM/yB,GAC9BA,IACkB,iBAATA,IACHA,EAAQ,KACRA,GAAgB,IAEpBA,EAAQgyB,EAAUhyB,IAEtB6yB,EAAaE,GAAQ/yB,IAU7B,GAPiB,MAAbkyB,IACAA,EAAY,WAEhBY,EAAkB,YAAaZ,GAE/BW,EAAwB,UAAI,EAEtBT,EACF,GAA0B,iBAAfA,EAAyB,CAEhC,IAAIY,EAAK,KACU,QAFnBZ,EAAcA,EAAY39B,eAGtBu+B,EAAKp9B,OAAOC,oBAAoBN,IAAIQ,GAAI9B,KAAQw+B,IAC1B,OAAfL,EACPY,EAAKp9B,OAAOC,oBAAoBT,IAAIW,GAAI9B,KAAQw+B,IAC1B,OAAfL,GAAuC,QAAfA,EAC/BY,EAAKp9B,OAAOC,oBAAoBd,QAAQgB,GAAI9B,KAAQw+B,IAC9B,UAAfL,IACPY,EAAKp9B,OAAOC,oBAAoB4V,OAAO1V,GAAI9B,KAAQw+B,KAEjDO,IACFH,EAA6B,eAAIG,EACjCH,EAA6B,eAAIG,QAGrCH,EAA6B,eAAIT,EACjCS,EAA6B,eAAIT,EAczC,OAXmB,MAAfC,IACAA,EAAc,QAElBS,EAAkB,mBAAoBT,GACtCS,EAAkB,eAAgBR,GAClCQ,EAAkB,eAAgBP,GAChB,MAAdC,IACAA,EAAa,OAEjBK,EAAyB,WAAIL,EACjBphC,EAAoB6hC,KAAKR,EAAYI,GAiBrD,MAAOj+B,GACH,IAAIC,EAAMD,EAGV,OADAC,EAAMxD,EAAQyD,UAAUD,IAEpBxD,EAAQwB,MAAMkB,EACdc,KAIZq+B,YAAe,WAEX,GAAI3/B,UAAUC,OAASC,KAAKC,EAAE,IAAMH,UAAUC,OAASC,KAAKC,EAAE,GAC1D,OAAOrC,EAAQwB,MAAMc,GAGzB,IAAK,IAAIC,EAAI,EAAGA,EAAIL,UAAUC,OAAQI,IAAK,CAEvC,IADQvC,EAAQwC,gBAAgBJ,KAAKK,EAAGP,UAAUK,GAAIA,GAC/C,GACH,OAAOvC,EAAQwB,MAAMkB,EAG7B,IACI,IAAIqE,EAASxC,OAAOyC,qBAChBC,EAAS1C,OAAO2C,wBAGhBy5B,GAFUp8B,OAAO6C,0BAELpH,EAAQ2gC,WACpBC,EAAa1+B,UAAU,GACvB2+B,EAAY3+B,UAAU,GACtB4/B,EAAY5/B,UAAU,GACtB4+B,EAAY5+B,UAAU,GACtB6+B,EAAc7+B,UAAU,GACxB8+B,EAAc9+B,UAAU,GAQxBk/B,EAAaphC,EAAQqhC,uBAAuBT,GAChD,IAEItiB,EAFiBtd,IACTD,EAAcP,EAAM6d,sBACMzb,KAEtC,IAAI0+B,EAAWxhC,EAAMyhC,gBAAgBjjB,EAAWvX,EAAQE,GACpDoY,EAAQiiB,EAAS,GACjBliB,EAASkiB,EAAS,GAElBE,KACa,MAAbV,IACAA,EAAY,GAEhBU,EAAwB,UAAIV,EAE5BU,EAAsB,QAAIV,EAAY,EACtCU,EAAapiB,OAASA,GAAU0hB,EAAY,GAC5CU,EAAaniB,MAAQA,EAErB,IAAIoiB,EAAoB,SAAUC,EAAM/yB,GAC9BA,IACkB,iBAATA,IACHA,EAAQ,KACRA,GAAgB,IAEpBA,EAAQgyB,EAAUhyB,IAEtB6yB,EAAaE,GAAQ/yB,IAc7B,GAXiB,MAAbkyB,IACAA,EAAY,WAEhBY,EAAkB,YAAaZ,GAC/BY,EAAkB,YAAaK,GAEd,MAAbhB,IACAA,EAAY,KAEhBU,EAAwB,UAAIV,EAEtBC,EACF,GAA0B,iBAAfA,EAAyB,CAEhC,IAAIY,EAAK,KACU,QAFnBZ,EAAcA,EAAY39B,eAGtBu+B,EAAKp9B,OAAOC,oBAAoBN,IAAIQ,GAAI9B,KAAQw+B,IAC1B,OAAfL,EACPY,EAAKp9B,OAAOC,oBAAoBT,IAAIW,GAAI9B,KAAQw+B,IAC1B,OAAfL,GAAuC,QAAfA,EAC/BY,EAAKp9B,OAAOC,oBAAoBd,QAAQgB,GAAI9B,KAAQw+B,IAC9B,UAAfL,IACPY,EAAKp9B,OAAOC,oBAAoB4V,OAAO1V,GAAI9B,KAAQw+B,KAEjDO,IACFH,EAA6B,eAAIG,EACjCH,EAA6B,eAAIG,QAGrCH,EAA6B,eAAIT,EACjCS,EAA6B,eAAIT,EAmBzC,OAhBmB,MAAfC,IACAA,EAAc,QAElBS,EAAkB,mBAAoBT,GAY1BjhC,EAAoB6hC,KAAKR,EAAYI,GAiBrD,MAAOj+B,GACH,IAAIC,EAAMD,EAGV,OADAC,EAAMxD,EAAQyD,UAAUD,IAEpBxD,EAAQwB,MAAMkB,EACdc,KAIZu+B,cAAiB,WAEb,GAAI7/B,UAAUC,OAASC,KAAKC,EAAE,IAAMH,UAAUC,OAASC,KAAKC,EAAE,GAC1D,OAAOrC,EAAQwB,MAAMc,GAGzB,IAAK,IAAIC,EAAI,EAAGA,EAAIL,UAAUC,OAAQI,IAAK,CAEvC,IADQvC,EAAQwC,gBAAgBJ,KAAKK,EAAGP,UAAUK,GAAIA,GAC/C,GACH,OAAOvC,EAAQwB,MAAMkB,EAG7B,IACI,IAAIqE,EAASxC,OAAOyC,qBAChBC,EAAS1C,OAAO2C,wBAGhBy5B,GAFUp8B,OAAO6C,0BAELpH,EAAQ2gC,WACpBC,EAAa1+B,UAAU,GAEvBk/B,EAAaphC,EAAQqhC,uBAAuBT,GAChD,IAEItiB,EAFiBtd,IACTD,EAAcP,EAAM6d,sBACMzb,KAEtC,IAAI0+B,EAAWxhC,EAAMyhC,gBAAgBjjB,EAAWvX,EAAQE,GACpDoY,EAAQiiB,EAAS,GACjBliB,EAASkiB,EAAS,GAElBE,KAEJA,EAAapiB,OAASA,EACtBoiB,EAAaniB,MAAQA,EAErB,IAAIoiB,EAAoB,SAAUC,EAAM/yB,GAC9BA,IACkB,iBAATA,IACHA,EAAQ,KACRA,GAAgB,IAEpBA,EAAQgyB,EAAUhyB,IAEtB6yB,EAAaE,GAAQ/yB,IAGzBqzB,EAAa9/B,UAAU,GACvB+/B,EAAW//B,UAAU,GACrBggC,EAAchgC,UAAU,GACxBigC,EAAgBjgC,UAAU,GAE9Bs/B,EAAmB,KAAI,SACL,MAAdQ,IACAA,EAAa,KAEjBR,EAAyB,WAAIQ,EACb,MAAZC,IACAA,EAAW,WAEfR,EAAkB,WAAYQ,GACX,MAAfC,IACAA,EAAc,WAElBT,EAAkB,cAAeS,GAE7BV,EAA4B,cADX,MAAjBW,IAA2C,IAAlBA,GAAmD,iBAAjBA,OAC3Bn1B,EAEAm1B,EAEpC,IAAIC,EAAapiC,EAAQqiC,mBAAmBngC,WAM5C,OALMkgC,IACFZ,EAAuB,SAAIY,GAGnBriC,EAAoB6hC,KAAKR,EAAYI,GAEnD,MAAOj+B,GACL,IAAIC,EAAMD,EAGV,OADAC,EAAMxD,EAAQyD,UAAUD,IAEpBxD,EAAQwB,MAAMkB,EACdc,KAIZ8+B,mBAAsB,WAElB,GAAIpgC,UAAUC,OAASC,KAAKC,EAAE,IAAMH,UAAUC,OAASC,KAAKC,EAAE,GAC1D,OAAOrC,EAAQwB,MAAMc,GAGzB,IAAK,IAAIC,EAAI,EAAGA,EAAIL,UAAUC,OAAQI,IAAK,CAEvC,IADQvC,EAAQwC,gBAAgBJ,KAAKK,EAAGP,UAAUK,GAAIA,GAC/C,GACH,OAAOvC,EAAQwB,MAAMkB,EAG7B,IACI,IAAIqE,EAASxC,OAAOyC,qBAChBC,EAAS1C,OAAO2C,wBAIhB05B,GAHUr8B,OAAO6C,0BAELpH,EAAQ2gC,UACPz+B,UAAU,IAIvBk/B,KACAx+B,KAIJ,GAHkB,MAAdg+B,GAAyC,MAAnBA,EAAWh+B,OACjCA,EAAOg+B,EAAWh+B,MAEE,SAApBf,EAAWe,GACXA,EAAO5C,EAAQuiC,mBAAmB3/B,OAC/B,CAAA,GAAwB,UAApBf,EAAWe,GAElB,OADAA,EAAOA,EAAKF,GAGR,UAAUmE,KAAKjE,KACfA,EAAOA,EAAKmH,QAAQ,MAAO,KAAKA,QAAQ,MAAO,MAEnDnH,EAAO,IAAIiN,SAAS,UAAYjN,EAAzB,GAEX,IAAI4/B,EAActgC,UAAU,GACdU,EAAKT,OACnB,GAAmB,MAAfqgC,GAAyBA,EACzB,IAAK,IAAIt2B,EAAI,EAAGA,EAAItJ,EAAK,GAAGT,OAAQ+J,IAAK,CAErC,IADA,IAAIu2B,EAAS,GACJx2B,EAAI,EAAGA,EAAIrJ,EAAKT,OAAQ8J,IAC7Bw2B,GAAU7/B,EAAKqJ,GAAGC,GAAK,IAE3Bu2B,EAASA,EAAOx9B,OAAO,EAAGw9B,EAAOtgC,OAAS,GAC1Ci/B,EAAWl+B,KAAKu/B,OAEjB,CACH,IAASx2B,EAAI,EAAGA,EAAIrJ,EAAKT,OAAQ8J,IAAK,CAClC,IAAIy2B,EAAS,GACb,IAASx2B,EAAI,EAAGA,EAAItJ,EAAK,GAAGT,OAAQ+J,IAChCw2B,GAAU9/B,EAAKqJ,GAAGC,GAAK,IAE3Bw2B,EAASA,EAAOz9B,OAAO,EAAGy9B,EAAOvgC,OAAS,GAC1Ci/B,EAAWl+B,KAAKw/B,GAEN9/B,EAAK,GAAGT,OAE1B,IAEImc,EAFiBtd,IACTD,EAAcP,EAAM6d,sBACMzb,KAEtC,IAAI0+B,EAAWxhC,EAAMyhC,gBAAgBjjB,EAAWvX,EAAQE,GACpDoY,EAAQiiB,EAAS,GACjBliB,EAASkiB,EAAS,GAElBE,KAEJA,EAAapiB,OAASA,EACtBoiB,EAAaniB,MAAQA,EAIrB,IAWI2iB,EAAa9/B,UAAU,GACvBigC,EAAgBjgC,UAAU,GAE9Bs/B,EAAmB,KAAI,SACL,MAAdQ,IACAA,EAAa,KAEjBR,EAAyB,WAAIQ,EAEzBR,EAA4B,cADX,MAAjBW,IAA2C,IAAlBA,GAAmD,iBAAjBA,OAC3Bn1B,EAEAm1B,EAEpC,IAAIC,EAAapiC,EAAQqiC,mBAAmBngC,UAAW,GAMvD,OALMkgC,IACFZ,EAAuB,SAAIY,GAGnBriC,EAAoB6hC,KAAKR,EAAYI,GAEnD,MAAOj+B,GACL,IAAIC,EAAMD,EAGV,OADAC,EAAMxD,EAAQyD,UAAUD,IAEpBxD,EAAQwB,MAAMkB,EACdc,KAIZm/B,WAAc,WAEV,GAAIzgC,UAAUC,OAASC,KAAKC,EAAE,IAAMH,UAAUC,OAASC,KAAKC,EAAE,GAC1D,OAAOrC,EAAQwB,MAAMc,GAGzB,IAAK,IAAIC,EAAI,EAAGA,EAAIL,UAAUC,OAAQI,IAAK,CAEvC,IADQvC,EAAQwC,gBAAgBJ,KAAKK,EAAGP,UAAUK,GAAIA,GAC/C,GACH,OAAOvC,EAAQwB,MAAMkB,EAG7B,IACI,IAAIqE,EAASxC,OAAOyC,qBAChBC,EAAS1C,OAAO2C,wBAGhBy5B,GAFUp8B,OAAO6C,0BAELpH,EAAQ2gC,WACpBC,EAAa1+B,UAAU,GAEvBk/B,EAAaphC,EAAQqhC,uBAAuBT,GAChD,IAEItiB,EAFiBtd,IACTD,EAAcP,EAAM6d,sBACMzb,KAEtC,IAAI0+B,EAAWxhC,EAAMyhC,gBAAgBjjB,EAAWvX,EAAQE,GACpDoY,EAAQiiB,EAAS,GACjBliB,EAASkiB,EAAS,GAElBE,KAEJA,EAAapiB,OAASA,EACtBoiB,EAAaniB,MAAQA,EAErB,IAAIoiB,EAAoB,SAAUC,EAAM/yB,GAC9BA,IACkB,iBAATA,IACHA,EAAQ,KACRA,GAAgB,IAEpBA,EAAQgyB,EAAUhyB,IAEtB6yB,EAAaE,GAAQ/yB,IAGzBqzB,EAAa9/B,UAAU,GACvB+/B,EAAW//B,UAAU,GACrBggC,EAAchgC,UAAU,GACxBigC,EAAgBjgC,UAAU,GAE9Bs/B,EAAmB,KAAI,MACL,MAAdQ,IACAA,EAAa,KAEjBR,EAAyB,WAAIQ,EACb,MAAZC,IACAA,EAAW,WAEfR,EAAkB,WAAYQ,GACX,MAAfC,IACAA,EAAc,WAElBT,EAAkB,cAAeS,GAE7BV,EAA4B,cADX,MAAjBW,IAA2C,IAAlBA,GAAmD,iBAAjBA,OAC3Bn1B,EAEAm1B,EAEpC,IAAIC,EAAapiC,EAAQqiC,mBAAmBngC,WAM5C,OALMkgC,IACFZ,EAAuB,SAAIY,GAGnBriC,EAAoB6hC,KAAKR,EAAYI,GAEnD,MAAOj+B,GACL,IAAIC,EAAMD,EAGV,OADAC,EAAMxD,EAAQyD,UAAUD,IAEpBxD,EAAQwB,MAAMkB,EACdc,KAIZo/B,gBAAmB,WAEf,GAAI1gC,UAAUC,OAASC,KAAKC,EAAE,IAAMH,UAAUC,OAASC,KAAKC,EAAE,GAC1D,OAAOrC,EAAQwB,MAAMc,GAGzB,IAAK,IAAIC,EAAI,EAAGA,EAAIL,UAAUC,OAAQI,IAAK,CAEvC,IADQvC,EAAQwC,gBAAgBJ,KAAKK,EAAGP,UAAUK,GAAIA,GAC/C,GACH,OAAOvC,EAAQwB,MAAMkB,EAG7B,IACI,IAAIqE,EAASxC,OAAOyC,qBAChBC,EAAS1C,OAAO2C,wBAIhB05B,GAHUr8B,OAAO6C,0BAELpH,EAAQ2gC,UACPz+B,UAAU,IAIvBk/B,KACAx+B,KAIJ,GAHkB,MAAdg+B,GAAyC,MAAnBA,EAAWh+B,OACjCA,EAAOg+B,EAAWh+B,MAEE,SAApBf,EAAWe,GACXA,EAAO5C,EAAQuiC,mBAAmB3/B,OAC/B,CAAA,GAAwB,UAApBf,EAAWe,GAElB,OADAA,EAAOA,EAAKF,GAGR,UAAUmE,KAAKjE,KACfA,EAAOA,EAAKmH,QAAQ,MAAO,KAAKA,QAAQ,MAAO,MAEnDnH,EAAO,IAAIiN,SAAS,UAAYjN,EAAzB,GAEX,IAAI4/B,EAActgC,UAAU,GACdU,EAAKT,OACnB,GAAmB,MAAfqgC,GAAyBA,EACzB,IAAK,IAAIt2B,EAAI,EAAGA,EAAItJ,EAAK,GAAGT,OAAQ+J,IAAK,CAErC,IADA,IAAIu2B,EAAS,GACJx2B,EAAI,EAAGA,EAAIrJ,EAAKT,OAAQ8J,IAC7Bw2B,GAAU7/B,EAAKqJ,GAAGC,GAAK,IAE3Bu2B,EAASA,EAAOx9B,OAAO,EAAGw9B,EAAOtgC,OAAS,GAC1Ci/B,EAAWl+B,KAAKu/B,OAEjB,CACH,IAASx2B,EAAI,EAAGA,EAAIrJ,EAAKT,OAAQ8J,IAAK,CAClC,IAAIy2B,EAAS,GACb,IAASx2B,EAAI,EAAGA,EAAItJ,EAAK,GAAGT,OAAQ+J,IAChCw2B,GAAU9/B,EAAKqJ,GAAGC,GAAK,IAE3Bw2B,EAASA,EAAOz9B,OAAO,EAAGy9B,EAAOvgC,OAAS,GAC1Ci/B,EAAWl+B,KAAKw/B,GAEN9/B,EAAK,GAAGT,OAE1B,IAEImc,EAFiBtd,IACTD,EAAcP,EAAM6d,sBACMzb,KAEtC,IAAI0+B,EAAWxhC,EAAMyhC,gBAAgBjjB,EAAWvX,EAAQE,GACpDoY,EAAQiiB,EAAS,GACjBliB,EAASkiB,EAAS,GAElBE,KAEJA,EAAapiB,OAASA,EACtBoiB,EAAaniB,MAAQA,EAIrB,IAWI2iB,EAAa9/B,UAAU,GACvBigC,EAAgBjgC,UAAU,GAE9Bs/B,EAAmB,KAAI,MACL,MAAdQ,IACAA,EAAa,KAEjBR,EAAyB,WAAIQ,EAEzBR,EAA4B,cADX,MAAjBW,IAA2C,IAAlBA,GAAmD,iBAAjBA,OAC3Bn1B,EAEAm1B,EAEpC,IAAIC,EAAapiC,EAAQqiC,mBAAmBngC,UAAW,GAMvD,OALMkgC,IACFZ,EAAuB,SAAIY,GAGnBriC,EAAoB6hC,KAAKR,EAAYI,GAEnD,MAAOj+B,GACL,IAAIC,EAAMD,EAGV,OADAC,EAAMxD,EAAQyD,UAAUD,IAEpBxD,EAAQwB,MAAMkB,EACdc,KAIZq/B,gBAAmB,WAEf,GAAI3gC,UAAUC,OAASC,KAAKC,EAAE,IAAMH,UAAUC,OAASC,KAAKC,EAAE,GAC1D,OAAOrC,EAAQwB,MAAMc,GAGzB,IAAK,IAAIC,EAAI,EAAGA,EAAIL,UAAUC,OAAQI,IAAK,CAEvC,IADQvC,EAAQwC,gBAAgBJ,KAAKK,EAAGP,UAAUK,GAAIA,GAC/C,GACH,OAAOvC,EAAQwB,MAAMkB,EAG7B,IACI,IAAIqE,EAASxC,OAAOyC,qBAChBC,EAAS1C,OAAO2C,wBAGhBy5B,GAFUp8B,OAAO6C,0BAELpH,EAAQ2gC,WACpBC,EAAa1+B,UAAU,GAEvBk/B,EAAaphC,EAAQqhC,uBAAuBT,GAChD,IAEItiB,EAFiBtd,IACTD,EAAcP,EAAM6d,sBACMzb,KAEtC,IAAI0+B,EAAWxhC,EAAMyhC,gBAAgBjjB,EAAWvX,EAAQE,GACpDoY,EAAQiiB,EAAS,GACjBliB,EAASkiB,EAAS,GAElBE,KAEJA,EAAapiB,OAASA,EACtBoiB,EAAaniB,MAAQA,EAErB,IAAIoiB,EAAoB,SAAUC,EAAM/yB,GAC9BA,IACkB,iBAATA,IACHA,EAAQ,KACRA,GAAgB,IAEpBA,EAAQgyB,EAAUhyB,IAEtB6yB,EAAaE,GAAQ/yB,IAGzBm0B,EAAiB5gC,UAAU,GAC3B+/B,EAAW//B,UAAU,GACrBggC,EAAchgC,UAAU,GAiB5B,OAfAs/B,EAAmB,KAAI,WACD,MAAlBsB,IACAA,EAAiB,GAErBtB,EAA6B,eAAIsB,EACjB,MAAZb,IACAA,EAAW,WAEfR,EAAkB,YAAaQ,GACZ,MAAfC,IACAA,EAAc,WAElBT,EAAkB,iBAAkBS,GAExBniC,EAAoB6hC,KAAKR,EAAYI,GAEnD,MAAOj+B,GACL,IAAIC,EAAMD,EAGV,OADAC,EAAMxD,EAAQyD,UAAUD,IAEpBxD,EAAQwB,MAAMkB,EACdc,KAIZu/B,gBAAmB,WAEf,GAAI7gC,UAAUC,OAASC,KAAKC,EAAE,IAAMH,UAAUC,OAASC,KAAKC,EAAE,GAC1D,OAAOrC,EAAQwB,MAAMc,GAGzB,IAAK,IAAIC,EAAI,EAAGA,EAAIL,UAAUC,OAAQI,IAAK,CAEvC,IADQvC,EAAQwC,gBAAgBJ,KAAKK,EAAGP,UAAUK,GAAIA,GAC/C,GACH,OAAOvC,EAAQwB,MAAMkB,EAG7B,IACI,IAAIqE,EAASxC,OAAOyC,qBAChBC,EAAS1C,OAAO2C,wBAGhBy5B,GAFUp8B,OAAO6C,0BAELpH,EAAQ2gC,WACpBC,EAAa1+B,UAAU,GAEvBk/B,EAAaphC,EAAQqhC,uBAAuBT,GAChD,IAEItiB,EAFiBtd,IACTD,EAAcP,EAAM6d,sBACMzb,KAEtC,IAAI0+B,EAAWxhC,EAAMyhC,gBAAgBjjB,EAAWvX,EAAQE,GACpDoY,EAAQiiB,EAAS,GACjBliB,EAASkiB,EAAS,GAElBE,KAEJA,EAAapiB,OAASA,EACtBoiB,EAAaniB,MAAQA,EAErB,IAAIoiB,EAAoB,SAAUC,EAAM/yB,GAC9BA,IACkB,iBAATA,IACHA,EAAQ,KACRA,GAAgB,IAEpBA,EAAQgyB,EAAUhyB,IAEtB6yB,EAAaE,GAAQ/yB,IAGzBqzB,EAAa9/B,UAAU,GACvB+/B,EAAW//B,UAAU,GACrBggC,EAAchgC,UAAU,GACxB8gC,EAAe9gC,UAAU,GAE7Bs/B,EAAmB,KAAI,WACL,MAAdQ,IACAA,EAAa,KAEjBR,EAAyB,WAAIQ,EACb,MAAZC,IACAA,EAAW,WAEfR,EAAkB,WAAYQ,GACX,MAAfC,IACAA,EAAc,WAElBT,EAAkB,cAAeS,GACb,MAAhBc,IACAA,EAAe,QAEnBvB,EAAkB,eAAgBuB,GAClC,IAAIZ,EAAapiC,EAAQqiC,mBAAmBngC,WAM5C,OALMkgC,IACFZ,EAAuB,SAAIY,GAGnBriC,EAAoB6hC,KAAKR,EAAYI,GAEnD,MAAOj+B,GACL,IAAIC,EAAMD,EAGV,OADAC,EAAMxD,EAAQyD,UAAUD,IAEpBxD,EAAQwB,MAAMkB,EACdc,KAIZy/B,WAAc,WAEV,GAAI/gC,UAAUC,OAASC,KAAKC,EAAE,IAAMH,UAAUC,OAASC,KAAKC,EAAE,GAC1D,OAAOrC,EAAQwB,MAAMc,GAGzB,IAAK,IAAIC,EAAI,EAAGA,EAAIL,UAAUC,OAAQI,IAAK,CAEvC,IADQvC,EAAQwC,gBAAgBJ,KAAKK,EAAGP,UAAUK,GAAIA,GAC/C,GACH,OAAOvC,EAAQwB,MAAMkB,EAG7B,IACI,IAAIqE,EAASxC,OAAOyC,qBAChBC,EAAS1C,OAAO2C,wBAGhBy5B,GAFUp8B,OAAO6C,0BAELpH,EAAQ2gC,WACpBC,EAAa1+B,UAAU,GAEvBk/B,EAAaphC,EAAQqhC,uBAAuBT,GAChD,IAEItiB,EAFiBtd,IACTD,EAAcP,EAAM6d,sBACMzb,KAEtC,IAAI0+B,EAAWxhC,EAAMyhC,gBAAgBjjB,EAAWvX,EAAQE,GACpDoY,EAAQiiB,EAAS,GACjBliB,EAASkiB,EAAS,GAElBE,KAEJA,EAAapiB,OAASA,EACtBoiB,EAAaniB,MAAQA,EAErB,IAAIoiB,EAAoB,SAAUC,EAAM/yB,GAC9BA,IACkB,iBAATA,IACHA,EAAQ,KACRA,GAAgB,IAEpBA,EAAQgyB,EAAUhyB,IAEtB6yB,EAAaE,GAAQ/yB,IAGzBu0B,EAAShhC,UAAU,GACnBihC,EAAcjhC,UAAU,GACxBkhC,EAAclhC,UAAU,GAE5Bs/B,EAAmB,KAAI,MACT,MAAV0B,IACAA,EAAS,GAEb1B,EAAqB,OAAI0B,EACN,MAAfC,IACAA,EAAc,GAElB1B,EAAkB,cAAe0B,GACd,MAAfC,IACAA,EAAc,WAElB3B,EAAkB,cAAe2B,GACjC,IAAIhB,EAAapiC,EAAQqiC,mBAAmBngC,UAAW,GAMvD,OALMkgC,IACFZ,EAAuB,SAAIY,GAGnBriC,EAAoB6hC,KAAKR,EAAYI,GAEnD,MAAOj+B,GACL,IAAIC,EAAMD,EAGV,OADAC,EAAMxD,EAAQyD,UAAUD,IAEpBxD,EAAQwB,MAAMkB,EACdc,KAIZ6/B,WAAc,WAEV,GAAInhC,UAAUC,OAASC,KAAKC,EAAE,IAAMH,UAAUC,OAASC,KAAKC,EAAE,GAC1D,OAAOrC,EAAQwB,MAAMc,GAGzB,IAAK,IAAIC,EAAI,EAAGA,EAAIL,UAAUC,OAAQI,IAAK,CAEvC,IADQvC,EAAQwC,gBAAgBJ,KAAKK,EAAGP,UAAUK,GAAIA,GAC/C,GACH,OAAOvC,EAAQwB,MAAMkB,EAG7B,IACI,IAAIqE,EAASxC,OAAOyC,qBAChBC,EAAS1C,OAAO2C,wBAGhBy5B,GAFUp8B,OAAO6C,0BAELpH,EAAQ2gC,WACpBC,EAAa1+B,UAAU,GAEvBk/B,EAAaphC,EAAQqhC,uBAAuBT,GAChD,IAEItiB,EAFiBtd,IACTD,EAAcP,EAAM6d,sBACMzb,KAEtC,IAAI0+B,EAAWxhC,EAAMyhC,gBAAgBjjB,EAAWvX,EAAQE,GACpDoY,EAAQiiB,EAAS,GACjBliB,EAASkiB,EAAS,GAElBE,KAEJA,EAAapiB,OAASA,EACtBoiB,EAAaniB,MAAQA,EAErB,IAAIoiB,EAAoB,SAAUC,EAAM/yB,GAC9BA,IACkB,iBAATA,IACHA,EAAQ,KACRA,GAAgB,IAEpBA,EAAQgyB,EAAUhyB,IAEtB6yB,EAAaE,GAAQ/yB,IAGzB20B,EAAaphC,UAAU,GACvBqhC,EAASrhC,UAAU,GACnBi/B,EAAaj/B,UAAU,GAkB3B,OAhBAs/B,EAAmB,KAAI,MACL,MAAd8B,IACAA,EAAa,KAEjB9B,EAAyB,WAAI8B,EACf,MAAVC,EACAA,EAAS,EAET9B,EAAkB,SAAU8B,GAEd,MAAdpC,IACAA,EAAa,KAEjBM,EAAkB,aAAcN,GAEpBphC,EAAoB6hC,KAAKR,EAAYI,GAEnD,MAAOj+B,GACL,IAAIC,EAAMD,EAGV,OADAC,EAAMxD,EAAQyD,UAAUD,IAEpBxD,EAAQwB,MAAMkB,EACdc,KAIZggC,cAAiB,WAEb,GAAIthC,UAAUC,OAASC,KAAKC,EAAE,IAAMH,UAAUC,OAASC,KAAKC,EAAE,GAC1D,OAAOrC,EAAQwB,MAAMc,GAGzB,IAAK,IAAIC,EAAI,EAAGA,EAAIL,UAAUC,OAAQI,IAAK,CAEvC,IADQvC,EAAQwC,gBAAgBJ,KAAKK,EAAGP,UAAUK,GAAIA,GAC/C,GACH,OAAOvC,EAAQwB,MAAMkB,EAG7B,IACI,IAAIqE,EAASxC,OAAOyC,qBAChBC,EAAS1C,OAAO2C,wBACN3C,OAAO6C,0BAELpH,EAAQ2gC,UAMxB,IAEIriB,EAFiBtd,IACTD,EAAcP,EAAM6d,sBACMzb,KAEtC,IAAI0+B,EAAWxhC,EAAMyhC,gBAAgBjjB,EAAWvX,EAAQE,GACpDoY,EAAQiiB,EAAS,GACjBliB,EAASkiB,EAAS,GAElBE,KAEJA,EAAapiB,OAASA,EACtBoiB,EAAaniB,MAAQA,EAErB,IAYI+hB,KACJvgC,EAAoBqB,WACpB,IAAIuhC,EAAQzjC,EAAQ0jC,mBAAmBxhC,UAAU,IAC7CyhC,EAAQ3jC,EAAQ0jC,mBAAmBxhC,UAAU,IACjDk/B,EAAWl+B,KAAKugC,GAChBrC,EAAWl+B,KAAKygC,GAChB,IAASphC,EAAI,EAAGA,EAAIL,UAAUC,OAAQI,IAClC6+B,EAAWl+B,KAAKlD,EAAQ0jC,mBAAmBxhC,UAAUK,KAKzD,OAHAi/B,EAAmB,KAAI,SAEXzhC,EAAoB6hC,KAAKR,EAAYI,GAEnD,MAAOj+B,GACL,IAAIC,EAAMD,EAGV,OADAC,EAAMxD,EAAQyD,UAAUD,IAEpBxD,EAAQwB,MAAMkB,EACdc,KAKZogC,KAAQ,WAEJ,GAAI1hC,UAAUC,OAASC,KAAKC,EAAE,IAAMH,UAAUC,OAASC,KAAKC,EAAE,GAC1D,OAAOrC,EAAQwB,MAAMc,GAGzB,IAAK,IAAIC,EAAI,EAAGA,EAAIL,UAAUC,OAAQI,IAAK,CAEvC,IADQvC,EAAQwC,gBAAgBJ,KAAKK,EAAGP,UAAUK,GAAIA,GAC/C,GACH,OAAOvC,EAAQwB,MAAMkB,EAG7B,IAEI,IAAI4Y,EAAapZ,UAAU,GACvB2W,KAAYsI,EAAS,EAAGC,EAAS,EACrC,GAA8B,SAA1Bvf,EAAWyZ,GACX,GAAiC,SAA7BzZ,EAAWyZ,EAAW,IAAgB,CACtC,IAAKrb,EAAa4C,YAAYyY,GAC1B,OAAOtb,EAAQwB,MAAMkB,EAEzB,IAASH,EAAI,EAAGA,EAAI+Y,EAAWnZ,OAAQI,IAAK,CAExC,IADA,IAAI8L,KACKvB,EAAI,EAAGA,EAAIwO,EAAW/Y,GAAGJ,OAAQ2K,IAAK,CAC3C,IAAI1C,EAASkR,EAAW/Y,GAAGuK,GAC3BuB,EAAOnL,KAAKkH,GAEhByO,EAAM3V,KAAKmL,GAEf8S,EAAStI,EAAM1W,OACfif,EAASvI,EAAM,GAAG1W,WACf,CACH,IAASI,EAAI,EAAGA,EAAI+Y,EAAWnZ,OAAQI,IAAK,CACpC6H,EAASkR,EAAW/Y,GACxBsW,EAAM3V,KAAKkH,GAEf+W,EAAStI,EAAM1W,YAEhB,GAA8B,UAA1BN,EAAWyZ,IAAmD,MAAxBA,EAAWtY,UACxD,GAAuB,MAAnBsY,EAAW1Y,KACX,GAAmC,SAA/Bf,EAAWyZ,EAAW1Y,MAAkB,CACxC,IAASL,EAAI,EAAGA,EAAI+Y,EAAW1Y,KAAKT,OAAQI,IAAK,CAE7C,IADI8L,KACKvB,EAAI,EAAGA,EAAIwO,EAAW1Y,KAAKL,GAAGJ,OAAQ2K,IAC3C,GAA6B,MAAzBwO,EAAW1Y,KAAKL,GAAGuK,GAAY,CAC3B1C,EAASkR,EAAW1Y,KAAKL,GAAGuK,GAAGpK,EAC/BpB,EAAW8I,KACXA,EAAS,GAEbiE,EAAOnL,KAAKkH,QAEZiE,EAAOnL,KAAK,GAGpB2V,EAAM3V,KAAKmL,GAEf8S,EAAStI,EAAM1W,OACfif,EAASvI,EAAM,GAAG1W,WACf,CACCiI,EAASkR,EAAW1Y,KAAKF,EACzBpB,EAAW8I,KACXA,EAAS,GAEbyO,EAAM3V,KAAKkH,QAGfyO,EAAM3V,KAAK,OAEZ,CACCkH,EAASkR,EACbzC,EAAM3V,KAAKkH,GAGf,IAAIy5B,EAAa,EACjB,GAAI3hC,UAAUC,QAAU,EAAG,CAEvB,GADA0hC,EAAa5jC,EAAaqE,cAAcpC,UAAU,IAC9CX,EAAasiC,GACb,OAAOA,EAEX,IAAKxiC,EAAUwiC,GACX,OAAO7jC,EAAQwB,MAAMkB,EAEzBmhC,EAAa7+B,SAAS6+B,GAG1B,IAAIC,EAAa,EACjB,GAAI5hC,UAAUC,QAAU,EAAG,CAEvB,GADA2hC,EAAa7jC,EAAaqE,cAAcpC,UAAU,IAC9CX,EAAauiC,GACb,OAAOA,EAEX,IAAKziC,EAAUyiC,GACX,OAAO9jC,EAAQwB,MAAMkB,EAEzBohC,EAAaz5B,KAAKgC,MAAMpI,WAAW6/B,IAGvC,IAAIC,GAAS,EACb,GAAwB,GAApB7hC,UAAUC,SACV4hC,EAAS9jC,EAAauT,cAActR,UAAU,IAC1CX,EAAawiC,IACb,OAAOA,EAGf,GAAIA,GACA,GAAIF,EAAa,GAAKA,EAAa1iB,EAC/B,OAAOnhB,EAAQwB,MAAMkB,OAGzB,GAAImhC,EAAa,GAAKA,EAAaziB,EAC/B,OAAOphB,EAAQwB,MAAMkB,EAG7B,GAAkB,GAAdohC,IAAkC,GAAfA,EACnB,OAAO9jC,EAAQwB,MAAMkB,EAGzB,IAAIshC,EAAM,SAAUhzB,EAAGnE,GAOnB,MANqB,SAAjBhL,EAAWmP,KACXA,EAAIA,EAAE6yB,EAAa,IAEF,SAAjBhiC,EAAWgL,KACXA,EAAIA,EAAEg3B,EAAa,IAElBl9B,MAAMqK,IAAOrK,MAAMkG,GAEZlG,MAAMqK,GAENrK,MAAMkG,GAGVmE,EAAInE,EACG,EACAmE,EAAInE,GACH,OADL,EAJA,GAFC,EAFDmE,EAAInE,GAafo3B,EAAO,SAAUjzB,EAAGnE,GAOpB,MANqB,SAAjBhL,EAAWmP,KACXA,EAAIA,EAAE6yB,EAAa,IAEF,SAAjBhiC,EAAWgL,KACXA,EAAIA,EAAEg3B,EAAa,IAElBl9B,MAAMqK,IAAOrK,MAAMkG,GAEZlG,MAAMqK,GAENrK,MAAMkG,GAGVmE,EAAInE,GACI,EACDmE,EAAInE,EACJ,OADJ,GAJC,EAFD,EAFAA,EAAImE,GAsCnB,OAzBI+yB,GACAlrB,EAAQA,EAAM,GAAGihB,IAAI,SAAUhwB,EAAKqL,GAChC,OAAO0D,EAAMihB,IAAI,SAAUlyB,GACvB,OAAOA,EAAIuN,OAGD,GAAd2uB,GACAjrB,EAAM3D,KAAK8uB,IAEI,GAAfF,GACAjrB,EAAM3D,KAAK+uB,GAEfprB,EAAQA,EAAM,GAAGihB,IAAI,SAAUhwB,EAAK6K,GAChC,OAAOkE,EAAMihB,IAAI,SAAUlyB,GACvB,OAAOA,EAAI+M,SAID,GAAdmvB,GACAjrB,EAAM3D,KAAK8uB,IAEI,GAAfF,GACAjrB,EAAM3D,KAAK+uB,IAGZprB,EACT,MAAOtV,GACL,IAAIC,EAAMD,EAEV,OADAC,EAAMxD,EAAQyD,UAAUD,IAEpBxD,EAAQwB,MAAMkB,EACdc,KAIZ0gC,OAAU,WAEN,GAAIhiC,UAAUC,OAASC,KAAKC,EAAE,IAAMH,UAAUC,OAASC,KAAKC,EAAE,GAC1D,OAAOrC,EAAQwB,MAAMc,GAGzB,IAAK,IAAIC,EAAI,EAAGA,EAAIL,UAAUC,OAAQI,IAAK,CAEvC,IADQvC,EAAQwC,gBAAgBJ,KAAKK,EAAGP,UAAUK,GAAIA,GAC/C,GACH,OAAOvC,EAAQwB,MAAMkB,EAG7B,IAEI,IAAI4Y,EAAapZ,UAAU,GACvB2W,KACJ,GAA8B,SAA1BhX,EAAWyZ,GAAwB,CACnC,GAAiC,SAA7BzZ,EAAWyZ,EAAW,MAAmBrb,EAAa4C,YAAYyY,GAClE,OAAOtb,EAAQwB,MAAMkB,EAEzBmW,EAAQ5Y,EAAaihB,iBAAiB5F,QACnC,GAA8B,UAA1BzZ,EAAWyZ,IAAmD,MAAxBA,EAAWtY,UACxD6V,EAAQ5Y,EAAakgB,qBAAqB7E,EAAY,cACnD,EACCjN,MACGnL,KAAKe,WAAWqX,IACvBzC,EAAM3V,KAAKmL,GAEFwK,EAAM1W,OAAiB0W,EAAM,GAAG1W,OAA7C,IAEIgiC,EAAejiC,UAAU,GACzBkiC,KACA58B,EAAO,MAEX,GAAgC,SAA5B3F,EAAWsiC,GACX,GAAmC,SAA/BtiC,EAAWsiC,EAAa,IAAgB,CACxC,IAAKlkC,EAAa4C,YAAYshC,GAC1B,OAAOnkC,EAAQwB,MAAMkB,EAEzB,GAAIyhC,EAAahiC,OAAS,GAAKgiC,EAAa,GAAGhiC,OAAS,EACpD,OAAOnC,EAAQwB,MAAMkB,EAEzB,GAAIyhC,EAAahiC,OAAS,EAAG,CACzB,GAAIgiC,EAAahiC,QAAU0W,EAAM1W,OAC7B,OAAOnC,EAAQwB,MAAMkB,EAEzB8E,EAAO,MACP,IAASjF,EAAI,EAAGA,EAAI4hC,EAAahiC,OAAQI,IAAK,CAC1C,IAAI8hC,EAAMF,EAAa5hC,GAAG,GAC1B,GAAuB,WAAnBV,EAAWwiC,SACR,GAAuB,UAAnBxiC,EAAWwiC,IAA0C,QAArBA,EAAIjhC,eAAgD,SAArBihC,EAAIjhC,cAMvE,CAAA,IAAI/B,EAAUgjC,GAIjB,OAAOrkC,EAAQwB,MAAMkB,EAFrB2hC,EAAa,IADbA,EAAMpgC,WAAWogC,QANQ,QAArBA,EAAIjhC,cACJihC,GAAM,EACsB,SAArBA,EAAIjhC,gBACXihC,GAAM,GAQdD,EAAQlhC,KAAKmhC,IAGrB,GAAIF,EAAa,GAAGhiC,OAAS,EAAG,CAC5B,GAAIgiC,EAAa,GAAGhiC,QAAU0W,EAAM,GAAG1W,OACnC,OAAOnC,EAAQwB,MAAMkB,EAEzB8E,EAAO,MACP,IAASjF,EAAI,EAAGA,EAAI4hC,EAAa,GAAGhiC,OAAQI,IAAK,CACzC8hC,EAAMF,EAAa,GAAG5hC,GAC1B,GAAuB,WAAnBV,EAAWwiC,SACR,GAAuB,UAAnBxiC,EAAWwiC,IAA0C,QAArBA,EAAIjhC,eAAgD,SAArBihC,EAAIjhC,cAMvE,CAAA,IAAI/B,EAAUgjC,GAIjB,OAAOrkC,EAAQwB,MAAMkB,EAFrB2hC,EAAa,IADbA,EAAMpgC,WAAWogC,QANQ,QAArBA,EAAIjhC,cACJihC,GAAM,EACsB,SAArBA,EAAIjhC,gBACXihC,GAAM,GAQdD,EAAQlhC,KAAKmhC,SAGlB,CACH,GAAIF,EAAahiC,QAAU0W,EAAM,GAAG1W,OAChC,OAAOnC,EAAQwB,MAAMkB,EAEzB8E,EAAO,MACP,IAASjF,EAAI,EAAGA,EAAI4hC,EAAahiC,OAAQI,IAAK,CACtC8hC,EAAMF,EAAa5hC,GACvB,GAAuB,WAAnBV,EAAWwiC,SACR,GAAuB,UAAnBxiC,EAAWwiC,IAA0C,QAArBA,EAAIjhC,eAAgD,SAArBihC,EAAIjhC,cAMvE,CAAA,IAAI/B,EAAUgjC,GAIjB,OAAOrkC,EAAQwB,MAAMkB,EAFrB2hC,EAAa,IADbA,EAAMpgC,WAAWogC,QANQ,QAArBA,EAAIjhC,cACJihC,GAAM,EACsB,SAArBA,EAAIjhC,gBACXihC,GAAM,GAQdD,EAAQlhC,KAAKmhC,QAGlB,CAAA,GAAgC,UAA5BxiC,EAAWsiC,IAAkD,MAArBA,EAAavhC,MAAiD,SAAjCf,EAAWsiC,EAAavhC,MAyDpG,OAAO5C,EAAQwB,MAAMkB,EAxDrB,GAAIyhC,EAAavhC,KAAKT,OAAS,GAAKgiC,EAAavhC,KAAK,GAAGT,OAAS,EAC9D,OAAOnC,EAAQwB,MAAMkB,EAEzB,GAAIyhC,EAAavhC,KAAKT,OAAS,EAAG,CAC9B,GAAIgiC,EAAavhC,KAAKT,QAAU0W,EAAM1W,OAClC,OAAOnC,EAAQwB,MAAMkB,EAEzB8E,EAAO,MACP,IAASjF,EAAI,EAAGA,EAAI4hC,EAAavhC,KAAKT,OAAQI,IAAK,CAC3C8hC,EAAMF,EAAavhC,KAAKL,GAAG,GAAGG,EAIlC,GAHIpB,EAAW+iC,KACXA,EAAM,GAEa,WAAnBxiC,EAAWwiC,SACR,GAAuB,UAAnBxiC,EAAWwiC,IAA0C,QAArBA,EAAIjhC,eAAgD,SAArBihC,EAAIjhC,cAMvE,CAAA,IAAI/B,EAAUgjC,GAIjB,OAAOrkC,EAAQwB,MAAMkB,EAFrB2hC,EAAa,IADbA,EAAMpgC,WAAWogC,QANQ,QAArBA,EAAIjhC,cACJihC,GAAM,EACsB,SAArBA,EAAIjhC,gBACXihC,GAAM,GAQdD,EAAQlhC,KAAKmhC,IAGrB,GAAIF,EAAavhC,KAAK,GAAGT,OAAS,EAAG,CACjC,GAAIgiC,EAAavhC,KAAK,GAAGT,QAAU0W,EAAM,GAAG1W,OACxC,OAAOnC,EAAQwB,MAAMkB,EAEzB8E,EAAO,MACP,IAASjF,EAAI,EAAGA,EAAI4hC,EAAavhC,KAAK,GAAGT,OAAQI,IAAK,CAC9C8hC,EAAMF,EAAavhC,KAAK,GAAGL,GAAGG,EAIlC,GAHIpB,EAAW+iC,KACXA,EAAM,GAEa,WAAnBxiC,EAAWwiC,SACR,GAAuB,UAAnBxiC,EAAWwiC,IAA0C,QAArBA,EAAIjhC,eAAgD,SAArBihC,EAAIjhC,cAMvE,CAAA,IAAI/B,EAAUgjC,GAIjB,OAAOrkC,EAAQwB,MAAMkB,EAFrB2hC,EAAa,IADbA,EAAMpgC,WAAWogC,QANQ,QAArBA,EAAIjhC,cACJihC,GAAM,EACsB,SAArBA,EAAIjhC,gBACXihC,GAAM,GAQdD,EAAQlhC,KAAKmhC,KAOzB,IAAIC,EAAW,GACf,GAAwB,GAApBpiC,UAAUC,SACVmiC,EAAWrkC,EAAaqE,cAAcpC,UAAU,GAAI,QAChDX,EAAa+iC,IACb,OAAOA,EAIf,IAAI51B,KACJ,GAAY,OAARlH,EACA,IAASjF,EAAI,EAAGA,EAAIsW,EAAM1W,OAAQI,IAC1B6hC,EAAQ7hC,IACRmM,EAAOxL,KAAK2V,EAAMtW,SAI1B,IAASA,EAAI,EAAGA,EAAIsW,EAAM1W,OAAQI,IAAK,CAEnC,IADA,IAAI8L,KACKvB,EAAI,EAAGA,EAAI+L,EAAM,GAAG1W,OAAQ2K,IAC7Bs3B,EAAQt3B,IACRuB,EAAOnL,KAAK2V,EAAMtW,GAAGuK,IAGzBuB,EAAOlM,OAAS,GAChBuM,EAAOxL,KAAKmL,GAIxB,OAAqB,GAAjBK,EAAOvM,OACAmiC,EAEJ51B,EACT,MAAOnL,GACL,IAAIC,EAAMD,EAEV,OADAC,EAAMxD,EAAQyD,UAAUD,IAEpBxD,EAAQwB,MAAMkB,EACdc,KAIZ2M,OAAU,WAEN,GAAIjO,UAAUC,OAASC,KAAKC,EAAE,IAAMH,UAAUC,OAASC,KAAKC,EAAE,GAC1D,OAAOrC,EAAQwB,MAAMc,GAGzB,IAAK,IAAIC,EAAI,EAAGA,EAAIL,UAAUC,OAAQI,IAAK,CAEvC,IADQvC,EAAQwC,gBAAgBJ,KAAKK,EAAGP,UAAUK,GAAIA,GAC/C,GACH,OAAOvC,EAAQwB,MAAMkB,EAG7B,IAEI,IAAI4Y,EAAapZ,UAAU,GACvB2W,KACJ,GAA8B,SAA1BhX,EAAWyZ,GAAwB,CACnC,GAAiC,SAA7BzZ,EAAWyZ,EAAW,MAAmBrb,EAAa4C,YAAYyY,GAClE,OAAOtb,EAAQwB,MAAMkB,EAEzBmW,EAAQ5Y,EAAaihB,iBAAiB5F,QACnC,GAA8B,UAA1BzZ,EAAWyZ,IAAmD,MAAxBA,EAAWtY,UACxD6V,EAAQ5Y,EAAakgB,qBAAqB7E,EAAY,cACnD,CACH,IAAIjN,KACJA,EAAOnL,KAAKe,WAAWqX,IACvBzC,EAAM3V,KAAKmL,GAGf,IAAI01B,GAAS,EACb,GAAI7hC,UAAUC,QAAU,IACpB4hC,EAAS9jC,EAAauT,cAActR,UAAU,IAC1CX,EAAawiC,IACb,OAAOA,EAIf,IAAIQ,GAAc,EAClB,GAAwB,GAApBriC,UAAUC,SACVoiC,EAActkC,EAAauT,cAActR,UAAU,IAC/CX,EAAagjC,IACb,OAAOA,EAIf,GAAIR,EAAQ,CACRlrB,EAAQA,EAAM,GAAGihB,IAAI,SAAUhwB,EAAKqL,GAChC,OAAO0D,EAAMihB,IAAI,SAAUlyB,GACvB,OAAOA,EAAIuN,OAGnB,IAAIqvB,KAAalP,KACbmP,KACJ,IAASliC,EAAI,EAAGA,EAAIsW,EAAM1W,OAAQI,IAAK,CAEnC,IADA,IAAI+J,EAAM,GACDQ,EAAI,EAAGA,EAAI+L,EAAMtW,GAAGJ,OAAQ2K,IACjCR,GAAOuM,EAAMtW,GAAGuK,GAAG3J,WAAa,MAEpCmyB,EAAOpyB,KAAKoJ,GACNA,KAAOk4B,IACTA,EAAOl4B,GAAO,EACdm4B,EAAUvhC,KAAK2V,EAAMtW,KAG7B,GAAIgiC,EAAa,CACb,IAAIG,KACJ,IAASniC,EAAI,EAAGA,EAAI+yB,EAAOnzB,OAAQI,IAC3B+yB,EAAO3lB,QAAQ2lB,EAAO/yB,KAAO+yB,EAAOtf,YAAYsf,EAAO/yB,KACvDmiC,EAAUxhC,KAAK2V,EAAMtW,IAQ7B,OALAmiC,EAAYA,EAAU,GAAG5K,IAAI,SAAUhwB,EAAKqL,GACxC,OAAOuvB,EAAU5K,IAAI,SAAUlyB,GAC3B,OAAOA,EAAIuN,OAUnB,OALAsvB,EAAYA,EAAU,GAAG3K,IAAI,SAAUhwB,EAAKqL,GACxC,OAAOsvB,EAAU3K,IAAI,SAAUlyB,GAC3B,OAAOA,EAAIuN,OAQvB,IAFIqvB,KAAalP,KACbmP,KACKliC,EAAI,EAAGA,EAAIsW,EAAM1W,OAAQI,IAAK,CAEnC,IADI+J,EAAM,GACDQ,EAAI,EAAGA,EAAI+L,EAAMtW,GAAGJ,OAAQ2K,IACjCR,GAAOuM,EAAMtW,GAAGuK,GAAG3J,WAAa,MAEpCmyB,EAAOpyB,KAAKoJ,GACNA,KAAOk4B,IACTA,EAAOl4B,GAAO,EACdm4B,EAAUvhC,KAAK2V,EAAMtW,KAG7B,GAAIgiC,EAAa,CAEb,IADIG,KACKniC,EAAI,EAAGA,EAAI+yB,EAAOnzB,OAAQI,IAC3B+yB,EAAO3lB,QAAQ2lB,EAAO/yB,KAAO+yB,EAAOtf,YAAYsf,EAAO/yB,KACvDmiC,EAAUxhC,KAAK2V,EAAMtW,IAG7B,OAAOmiC,EAEP,OAAOD,EAGjB,MAAOlhC,GACL,IAAIC,EAAMD,EAEV,OADAC,EAAMxD,EAAQyD,UAAUD,IAEpBxD,EAAQwB,MAAMkB,EACdc,KAIZmhC,UAAa,WAET,GAAIziC,UAAUC,OAASC,KAAKC,EAAE,IAAMH,UAAUC,OAASC,KAAKC,EAAE,GAC1D,OAAOrC,EAAQwB,MAAMc,GAGzB,IAAK,IAAIC,EAAI,EAAGA,EAAIL,UAAUC,OAAQI,IAAK,CAEvC,IADQvC,EAAQwC,gBAAgBJ,KAAKK,EAAGP,UAAUK,GAAIA,GAC/C,GACH,OAAOvC,EAAQwB,MAAMkB,EAG7B,IAEI,IAAIwc,EAAO,EACX,GAAIhd,UAAUC,QAAU,EAAG,CAEvB,GADA+c,EAAOjf,EAAaqE,cAAcpC,UAAU,IACxCX,EAAa2d,GACb,OAAOA,EAEX,IAAK7d,EAAU6d,GACX,OAAOlf,EAAQwB,MAAMkB,EAEzBwc,EAAOla,SAASka,GAGpB,IAAIC,EAAO,EACX,GAAwB,GAApBjd,UAAUC,OAAa,CAEvB,GADAgd,EAAOlf,EAAaqE,cAAcpC,UAAU,IACxCX,EAAa4d,GACb,OAAOA,EAEX,IAAK9d,EAAU8d,GACX,OAAOnf,EAAQwB,MAAMkB,EAEzByc,EAAOna,SAASma,GAEpB,GAAID,GAAQ,GAAKC,GAAQ,EACrB,OAAOnf,EAAQwB,MAAMkB,EAGzB,IAAIgM,KACJ,IAASnM,EAAI,EAAGA,EAAI2c,EAAM3c,IAAK,CAE3B,IADA,IAAIqiC,KACK93B,EAAI,EAAGA,EAAIqS,EAAMrS,IACtB83B,EAAW1hC,KAAKmH,KAAK4F,SAAS6X,QAAQ,IAE1CpZ,EAAOxL,KAAK0hC,GAEhB,OAAOl2B,EACT,MAAOnL,GACL,IAAIC,EAAMD,EAEV,OADAC,EAAMxD,EAAQyD,UAAUD,IAEpBxD,EAAQwB,MAAMkB,EACdc,KAIZqhC,SAAY,WAER,GAAI3iC,UAAUC,OAASC,KAAKC,EAAE,IAAMH,UAAUC,OAASC,KAAKC,EAAE,GAC1D,OAAOrC,EAAQwB,MAAMc,GAGzB,IAAK,IAAIC,EAAI,EAAGA,EAAIL,UAAUC,OAAQI,IAAK,CAEvC,IADQvC,EAAQwC,gBAAgBJ,KAAKK,EAAGP,UAAUK,GAAIA,GAC/C,GACH,OAAOvC,EAAQwB,MAAMkB,EAG7B,IAEI,IAAIwc,EAAOjf,EAAaqE,cAAcpC,UAAU,IAChD,GAAIX,EAAa2d,GACb,OAAOA,EAEX,IAAK7d,EAAU6d,GACX,OAAOlf,EAAQwB,MAAMkB,EAEzBwc,EAAOla,SAASka,GAEhB,IAAIC,EAAO,EACX,GAAIjd,UAAUC,QAAU,EAAG,CAEvB,GADAgd,EAAOlf,EAAaqE,cAAcpC,UAAU,IACxCX,EAAa4d,GACb,OAAOA,EAEX,IAAK9d,EAAU8d,GACX,OAAOnf,EAAQwB,MAAMkB,EAEzByc,EAAOna,SAASma,GAGpB,IAAI2lB,EAAQ,EACZ,GAAI5iC,UAAUC,QAAU,EAAG,CAEvB,GADA2iC,EAAQ7kC,EAAaqE,cAAcpC,UAAU,IACzCX,EAAaujC,GACb,OAAOA,EAEX,IAAKzjC,EAAUyjC,GACX,OAAO9kC,EAAQwB,MAAMkB,EAEzBoiC,EAAQ7gC,WAAW6gC,GAGvB,IAAIC,EAAO,EACX,GAAwB,GAApB7iC,UAAUC,OAAa,CAEvB,GADA4iC,EAAO9kC,EAAaqE,cAAcpC,UAAU,IACxCX,EAAawjC,GACb,OAAOA,EAEX,IAAK1jC,EAAU0jC,GACX,OAAO/kC,EAAQwB,MAAMkB,EAEzBqiC,EAAO9gC,WAAW8gC,GAEtB,GAAI7lB,GAAQ,GAAKC,GAAQ,EACrB,OAAOnf,EAAQwB,MAAMkB,EAGzB,IAAIgM,KACJ,IAASnM,EAAI,EAAGA,EAAI2c,EAAM3c,IAAK,CAE3B,IADA,IAAIqiC,KACK93B,EAAI,EAAGA,EAAIqS,EAAMrS,IAAK,CAC3B,IAAI1C,EAAS06B,EAAQC,GAAQj4B,EAAIqS,EAAO5c,GACxCqiC,EAAW1hC,KAAKkH,GAEpBsE,EAAOxL,KAAK0hC,GAEhB,OAAOl2B,EACT,MAAOnL,GACL,IAAIC,EAAMD,EAEV,OADAC,EAAMxD,EAAQyD,UAAUD,IAEpBxD,EAAQwB,MAAMkB,EACdc,KAIZwhC,SAAY,WAER,GAAI9iC,UAAUC,OAASC,KAAKC,EAAE,IAAMH,UAAUC,OAASC,KAAKC,EAAE,GAC1D,OAAOrC,EAAQwB,MAAMc,GAGzB,IAAK,IAAIC,EAAI,EAAGA,EAAIL,UAAUC,OAAQI,IAAK,CAEvC,IADQvC,EAAQwC,gBAAgBJ,KAAKK,EAAGP,UAAUK,GAAIA,GAC/C,GACH,OAAOvC,EAAQwB,MAAMkB,EAG7B,IACI,IAAIqE,EAASxC,OAAOyC,qBAChBC,EAAS1C,OAAO2C,wBAChB+9B,EAAiB1gC,OAAO2gC,uBAExBC,EAAUllC,EAAaqE,cAAcpC,UAAU,IAAIiB,WACvD,OAAI5B,EAAa4jC,GACNA,GAGwB,GAA/BA,EAAQvsB,OAAOjJ,QAAQ,OACvBw1B,EAAU,IAAMA,GAGFnlC,EAAQolC,kBAAkBD,EAASp+B,EAAQE,EAAQg+B,GAClD,IACrB,MAAO1hC,GACL,IAAIC,EAAMD,EAGV,OADAC,EAAMxD,EAAQyD,UAAUD,IAEpBxD,EAAQwB,MAAMkB,EACdc","file":"../../function/functionImplementation.js","sourcesContent":["define([\n    './func',\n    './matrix_methods',\n    '../methods/get',\n    '../methods/cells',\n    '../widgets/sparkline',\n    '../methods/formula_methods',\n    '../methods/func_methods',\n    '../methods/datecontroll',\n    '../methods/validate',\n    '../methods/format',\n    '../controllers/sort',\n    '../methods/getdata',\n    '../utils/util',\n    '../store',\n    'skylark-moment',\n    '../vendors/numeral'\n], function (m_func, m_matrix_methods, m_get, cells, luckysheetSparkline, formula, func_methods,  m_datecontroll, m_validate, m_format, m_sort, m_getdata, m_util, Store, dayjs, numeral) {\n    'use strict';\n    const {luckysheet_getcelldata, luckysheet_parseData, luckysheet_getValue} = m_func;\n    const {inverse} = m_matrix_methods;\n    const {getSheetIndex, getluckysheetfile, getRangetxt} = m_get;\n    const {isdatetime, diff, isdatatype} = m_datecontroll;\n    const {isRealNum, isRealNull, valueIsError, error} = m_validate;\n    const {genarate, update} = m_format;\n    const {orderbydata} = m_sort;\n    const {getcellvalue} = m_getdata;\n    const {getObjType, ABCatNum, chatatABC, numFormat} = m_util;\n    //公式函数计算\n    const functionImplementation = {\n        'SUM': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var dataArr = [];\n                for (var i = 0; i < arguments.length; i++) {\n                    var data = arguments[i];\n                    if (getObjType(data) == 'array') {\n                        if (getObjType(data[0]) == 'array' && !func_methods.isDyadicArr(data)) {\n                            return formula.error.v;\n                        }\n                        dataArr = dataArr.concat(func_methods.getDataArr(data, true));\n                    } else if (getObjType(data) == 'object' && data.startCell != null) {\n                        dataArr = dataArr.concat(func_methods.getCellDataArr(data, 'number', true));\n                    } else {\n                        if (!isRealNum(data)) {\n                            if (getObjType(data) == 'boolean') {\n                                if (data.toString().toLowerCase() == 'true') {\n                                    dataArr.push(1);\n                                } else if (data.toString().toLowerCase() == 'false') {\n                                    dataArr.push(0);\n                                }\n                            } else {\n                                return formula.error.v;\n                            }\n                        } else {\n                            dataArr.push(data);\n                        }\n                    }\n                }\n                var sum = 0;\n                if (dataArr.length > 0) {\n                    for (var i = 0; i < dataArr.length; i++) {\n                        if (valueIsError(dataArr[i])) {\n                            return dataArr[i];\n                        }\n                        if (!isRealNum(dataArr[i])) {\n                            continue;\n                        }\n                        sum = luckysheet_calcADPMM(sum, '+', dataArr[i]);    // parseFloat(dataArr[i]);\n                    }\n                }\n                // parseFloat(dataArr[i]);\n                return sum;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'AVERAGE': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var dataArr = [];\n                for (var i = 0; i < arguments.length; i++) {\n                    var data = arguments[i];\n                    if (getObjType(data) == 'array') {\n                        if (getObjType(data[0]) == 'array') {\n                            if (!func_methods.isDyadicArr(data)) {\n                                return formula.error.v;\n                            }\n                            dataArr = dataArr.concat(func_methods.getDataArr(data, true));\n                        } else {\n                            dataArr = dataArr.concat(data);\n                        }\n                    } else if (getObjType(data) == 'object' && data.startCell != null) {\n                        dataArr = dataArr.concat(func_methods.getCellDataArr(data, 'text', true));\n                    } else {\n                        dataArr.push(data);\n                    }\n                }\n                var sum = 0, count = 0;\n                for (var i = 0; i < dataArr.length; i++) {\n                    if (valueIsError(dataArr[i])) {\n                        return dataArr[i];\n                    } else if (!isRealNum(dataArr[i])) {\n                        return formula.error.v;\n                    }\n                    sum = luckysheet_calcADPMM(sum, '+', dataArr[i]);    // parseFloat(dataArr[i]);\n                    // parseFloat(dataArr[i]);\n                    count++;\n                }\n                if (count == 0) {\n                    return formula.error.d;\n                }\n                return luckysheet_calcADPMM(sum, '/', count);    // sum / count;\n            } // sum / count;\n            catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'COUNT': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var dataArr = [];\n                for (var i = 0; i < arguments.length; i++) {\n                    var data = arguments[i];\n                    if (getObjType(data) == 'array') {\n                        if (getObjType(data[0]) == 'array') {\n                            if (!func_methods.isDyadicArr(data)) {\n                                return formula.error.v;\n                            }\n                            dataArr = dataArr.concat(func_methods.getDataArr(data, true));\n                        } else {\n                            dataArr = dataArr.concat(data);\n                        }\n                    } else if (getObjType(data) == 'object' && data.startCell != null) {\n                        dataArr = dataArr.concat(func_methods.getCellDataArr(data, 'text', true));\n                    } else {\n                        if (getObjType(data) == 'boolean') {\n                            if (data.toString().toLowerCase() == 'true') {\n                                dataArr.push(1);\n                            } else if (data.toString().toLowerCase() == 'false') {\n                                dataArr.push(0);\n                            }\n                        } else {\n                            dataArr.push(data);\n                        }\n                    }\n                }\n                var count = 0;\n                for (var i = 0; i < dataArr.length; i++) {\n                    if (isRealNum(dataArr[i])) {\n                        count++;\n                    }\n                }\n                return count;\n            } catch (e) {\n                var err = e;    //计算错误检测\n                //计算错误检测\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'COUNTA': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var dataArr = [];\n                for (var i = 0; i < arguments.length; i++) {\n                    var data = arguments[i];\n                    if (getObjType(data) == 'array') {\n                        if (getObjType(data[0]) == 'array') {\n                            if (!func_methods.isDyadicArr(data)) {\n                                return formula.error.v;\n                            }\n                            dataArr = dataArr.concat(func_methods.getDataArr(data));\n                        } else {\n                            dataArr = dataArr.concat(data);\n                        }\n                    } else if (getObjType(data) == 'object' && data.startCell != null) {\n                        dataArr = dataArr.concat(func_methods.getCellDataArr(data, 'text', true));\n                    } else {\n                        dataArr.push(data);\n                    }\n                }\n                return dataArr.length;\n            } catch (err) {\n                //计算错误检测\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'MAX': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var dataArr = [];\n                for (var i = 0; i < arguments.length; i++) {\n                    var data = arguments[i];\n                    if (getObjType(data) == 'array') {\n                        if (getObjType(data[0]) == 'array') {\n                            if (!func_methods.isDyadicArr(data)) {\n                                return formula.error.v;\n                            }\n                            dataArr = dataArr.concat(func_methods.getDataArr(data, true));\n                        } else {\n                            dataArr = dataArr.concat(data);\n                        }\n                    } else if (getObjType(data) == 'object' && data.startCell != null) {\n                        dataArr = dataArr.concat(func_methods.getCellDataArr(data, 'number', true));\n                    } else {\n                        dataArr.push(data);\n                    }\n                }\n                var max = null;\n                for (var i = 0; i < dataArr.length; i++) {\n                    if (valueIsError(dataArr[i])) {\n                        return dataArr[i];\n                    }\n                    if (!isRealNum(dataArr[i])) {\n                        continue;\n                    }\n                    if (max == null || parseFloat(dataArr[i]) > max) {\n                        max = parseFloat(dataArr[i]);\n                    }\n                }\n                return max == null ? 0 : max;\n            } catch (e) {\n                var err = e;    //计算错误检测\n                //计算错误检测\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'MIN': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var dataArr = [];\n                for (var i = 0; i < arguments.length; i++) {\n                    var data = arguments[i];\n                    if (getObjType(data) == 'array') {\n                        if (getObjType(data[0]) == 'array') {\n                            if (!func_methods.isDyadicArr(data)) {\n                                return formula.error.v;\n                            }\n                            dataArr = dataArr.concat(func_methods.getDataArr(data, true));\n                        } else {\n                            dataArr = dataArr.concat(data);\n                        }\n                    } else if (getObjType(data) == 'object' && data.startCell != null) {\n                        dataArr = dataArr.concat(func_methods.getCellDataArr(data, 'number', true));\n                    } else {\n                        dataArr.push(data);\n                    }\n                }\n                var min = null;\n                for (var i = 0; i < dataArr.length; i++) {\n                    if (valueIsError(dataArr[i])) {\n                        return dataArr[i];\n                    }\n                    if (!isRealNum(dataArr[i])) {\n                        continue;\n                    }\n                    if (min == null || parseFloat(dataArr[i]) < min) {\n                        min = parseFloat(dataArr[i]);\n                    }\n                }\n                return min == null ? 0 : min;\n            } catch (e) {\n                var err = e;    //计算错误检测\n                //计算错误检测\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'AGE_BY_IDCARD': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //身份证号\n                var UUserCard = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(UUserCard)) {\n                    return UUserCard;\n                }\n                if (!window.luckysheet_function.ISIDCARD.f(UUserCard)) {\n                    return formula.error.v;\n                }\n                var birthday = window.luckysheet_function.BIRTHDAY_BY_IDCARD.f(UUserCard);\n                if (valueIsError(birthday)) {\n                    return birthday;\n                }\n                birthday = dayjs(birthday);\n                var cuurentdate = dayjs();\n                if (arguments.length == 2) {\n                    cuurentdate = func_methods.getFirstValue(arguments[1]);\n                    if (valueIsError(cuurentdate)) {\n                        return cuurentdate;\n                    }\n                    cuurentdate = dayjs(cuurentdate);\n                }\n                var age = cuurentdate.diff(birthday, 'years');\n                if (age < 0 || age.toString() == 'NaN') {\n                    return formula.error.v;\n                }\n                return age;\n            } catch (e) {\n                var err = e;    //计算错误检测\n                //计算错误检测\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'SEX_BY_IDCARD': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //身份证号\n                var UUserCard = func_methods.getFirstValue(arguments[0]).toString();\n                if (valueIsError(UUserCard)) {\n                    return UUserCard;\n                }\n                if (!window.luckysheet_function.ISIDCARD.f(UUserCard)) {\n                    return formula.error.v;\n                }\n                if (parseInt(UUserCard.substr(16, 1)) % 2 == 1) {\n                    return '男';\n                } else {\n                    return '女';\n                }\n            } catch (e) {\n                var err = e;    //计算错误检测\n                //计算错误检测\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'BIRTHDAY_BY_IDCARD': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //身份证号\n                var UUserCard = func_methods.getFirstValue(arguments[0]).toString();\n                if (valueIsError(UUserCard)) {\n                    return UUserCard;\n                }\n                if (!window.luckysheet_function.ISIDCARD.f(UUserCard)) {\n                    return formula.error.v;\n                }\n                var birthday = '';\n                if (UUserCard.length == 15) {\n                    var year = '19' + UUserCard.substring(6, 8) + '/' + UUserCard.substring(8, 10) + '/' + UUserCard.substring(10, 12);\n                    birthday = year;\n                } else if (UUserCard.length == 18) {\n                    var year = UUserCard.substring(6, 10) + '/' + UUserCard.substring(10, 12) + '/' + UUserCard.substring(12, 14);\n                    birthday = year;\n                }    //生日格式\n                //生日格式\n                var datetype = 0;\n                if (arguments[1] != null) {\n                    datetype = func_methods.getFirstValue(arguments[1]);\n                    if (valueIsError(datetype)) {\n                        return datetype;\n                    }\n                }\n                if (!isRealNum(datetype)) {\n                    return formula.error.v;\n                }\n                datetype = parseInt(datetype);\n                if (datetype < 0 || datetype > 2) {\n                    return formula.error.v;\n                }\n                if (parseInt(datetype) == 0) {\n                    return birthday;\n                } else if (parseInt(datetype) == 1) {\n                    return dayjs(birthday).format('YYYY-MM-DD');\n                } else if (parseInt(datetype) == 2) {\n                    return dayjs(birthday).format('YYYY年M月D日');\n                }\n            } catch (e) {\n                var err = e;    //计算错误检测\n                //计算错误检测\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'PROVINCE_BY_IDCARD': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //身份证号\n                var UUserCard = func_methods.getFirstValue(arguments[0]).toString();\n                if (valueIsError(UUserCard)) {\n                    return UUserCard;\n                }\n                if (!window.luckysheet_function.ISIDCARD.f(UUserCard)) {\n                    return formula.error.v;\n                }\n                var native = '未知';\n                var provinceArray = formula.classlist.province;\n                if (UUserCard.substring(0, 2) in provinceArray) {\n                    native = provinceArray[UUserCard.substring(0, 2)];\n                }\n                return native;\n            } catch (e) {\n                var err = e;    //计算错误检测\n                //计算错误检测\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'CITY_BY_IDCARD': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //身份证号\n                var UUserCard = func_methods.getFirstValue(arguments[0]).toString();\n                if (valueIsError(UUserCard)) {\n                    return UUserCard;\n                }\n                if (!window.luckysheet_function.ISIDCARD.f(UUserCard)) {\n                    return formula.error.v;\n                }\n                var dataNum = cityData.length, native = '未知';\n                for (var i = 0; i < dataNum; i++) {\n                    if (UUserCard.substring(0, 6) == cityData[i].code) {\n                        native = cityData[i].title;\n                        break;\n                    }\n                }\n                return native;\n            } catch (e) {\n                var err = e;    //计算错误检测\n                //计算错误检测\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'STAR_BY_IDCARD': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //身份证号\n                var UUserCard = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(UUserCard)) {\n                    return UUserCard;\n                }\n                if (!window.luckysheet_function.ISIDCARD.f(UUserCard)) {\n                    return formula.error.v;\n                }\n                var birthday = window.luckysheet_function.BIRTHDAY_BY_IDCARD.f(UUserCard);\n                if (valueIsError(birthday)) {\n                    return birthday;\n                }\n                birthday = new Date(birthday);\n                var month = birthday.getMonth(), day = birthday.getDate();\n                var d = new Date(1999, month, day, 0, 0, 0);\n                var arr = [];\n                arr.push([\n                    '魔羯座',\n                    new Date(1999, 0, 1, 0, 0, 0)\n                ]);\n                arr.push([\n                    '水瓶座',\n                    new Date(1999, 0, 20, 0, 0, 0)\n                ]);\n                arr.push([\n                    '双鱼座',\n                    new Date(1999, 1, 19, 0, 0, 0)\n                ]);\n                arr.push([\n                    '白羊座',\n                    new Date(1999, 2, 21, 0, 0, 0)\n                ]);\n                arr.push([\n                    '金牛座',\n                    new Date(1999, 3, 21, 0, 0, 0)\n                ]);\n                arr.push([\n                    '双子座',\n                    new Date(1999, 4, 21, 0, 0, 0)\n                ]);\n                arr.push([\n                    '巨蟹座',\n                    new Date(1999, 5, 22, 0, 0, 0)\n                ]);\n                arr.push([\n                    '狮子座',\n                    new Date(1999, 6, 23, 0, 0, 0)\n                ]);\n                arr.push([\n                    '处女座',\n                    new Date(1999, 7, 23, 0, 0, 0)\n                ]);\n                arr.push([\n                    '天秤座',\n                    new Date(1999, 8, 23, 0, 0, 0)\n                ]);\n                arr.push([\n                    '天蝎座',\n                    new Date(1999, 9, 23, 0, 0, 0)\n                ]);\n                arr.push([\n                    '射手座',\n                    new Date(1999, 10, 22, 0, 0, 0)\n                ]);\n                arr.push([\n                    '魔羯座',\n                    new Date(1999, 11, 22, 0, 0, 0)\n                ]);    //console.log(birthday, arr, i);\n                //console.log(birthday, arr, i);\n                for (var i = arr.length - 1; i >= 0; i--) {\n                    if (d >= arr[i][1]) {\n                        return arr[i][0];\n                    }\n                }\n                return '未找到匹配星座信息';\n            } catch (e) {\n                var err = e;    //计算错误检测\n                //计算错误检测\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'ANIMAL_BY_IDCARD': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //身份证号\n                var UUserCard = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(UUserCard)) {\n                    return UUserCard;\n                }\n                if (!window.luckysheet_function.ISIDCARD.f(UUserCard)) {\n                    return formula.error.v;\n                }\n                var birthday = window.luckysheet_function.BIRTHDAY_BY_IDCARD.f(UUserCard);\n                if (valueIsError(birthday)) {\n                    return birthday;\n                }\n                birthday = new Date(birthday);\n                var list = new Array('猪', '鼠', '牛', '虎', '兔', '龙', '蛇', '马', '羊', '猴', '鸡', '狗');\n                var index = (parseInt(birthday.getFullYear()) + 9) % 12;\n                if (index != null && !isNaN(index)) {\n                    return list[index];\n                } else {\n                    return '未找到匹配生肖信息';\n                }\n            } catch (e) {\n                var err = e;    //计算错误检测\n                //计算错误检测\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'ISIDCARD': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var idcard = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(idcard)) {\n                    return idcard;\n                }\n                var reg = /(^\\d{15}$)|(^\\d{18}$)|(^\\d{17}(\\d|X|x)$)/;\n                if (reg.test(idcard)) {\n                    return true;\n                } else {\n                    return false;\n                }\n            } catch (e) {\n                var err = e;    //计算错误检测\n                //计算错误检测\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'DM_TEXT_CUTWORD': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var cell_r = window.luckysheetCurrentRow;\n                var cell_c = window.luckysheetCurrentColumn;\n                var cell_fp = window.luckysheetCurrentFunction;    //任意需要分词的文本\n                //任意需要分词的文本\n                var text = func_methods.getFirstValue(arguments[0], 'text');\n                if (valueIsError(text)) {\n                    return text;\n                }    //分词模式\n                //分词模式\n                var datetype = 0;\n                if (arguments[1] != null) {\n                    datetype = func_methods.getFirstValue(arguments[1]);\n                    if (valueIsError(datetype)) {\n                        return datetype;\n                    }\n                }\n                if (!isRealNum(datetype)) {\n                    return formula.error.v;\n                }\n                datetype = parseInt(datetype);\n                if (datetype != 0 && datetype != 1 && datetype != 2) {\n                    return formula.error.v;\n                }\n                $.post('/dataqk/tu/api/cutword', {\n                    'text': text,\n                    'type': datetype\n                }, function (data) {\n                    var d = [].concat(Store.flowdata);\n                    formula.execFunctionGroup(cell_r, cell_c, data);\n                    d[cell_r][cell_c] = {\n                        'v': data,\n                        'f': cell_fp\n                    };\n                    Store.refreshRange(d, [{\n                            'row': [\n                                cell_r,\n                                cell_r\n                            ],\n                            'column': [\n                                cell_c,\n                                cell_c\n                            ]\n                        }]);\n                });\n                return 'loading...';\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'DM_TEXT_TFIDF': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var cell_r = window.luckysheetCurrentRow;\n                var cell_c = window.luckysheetCurrentColumn;\n                var cell_fp = window.luckysheetCurrentFunction;    //任意需要分词的文本\n                //任意需要分词的文本\n                var text = func_methods.getFirstValue(arguments[0], 'text');\n                if (valueIsError(text)) {\n                    return text;\n                }    //关键词个数\n                //关键词个数\n                var count = 20;\n                if (arguments[1] != null) {\n                    count = func_methods.getFirstValue(arguments[1]);\n                    if (valueIsError(count)) {\n                        return count;\n                    }\n                }\n                if (!isRealNum(count)) {\n                    return formula.error.v;\n                }\n                count = parseInt(count);    //语料库\n                //语料库\n                var set = 0;\n                if (arguments[2] != null) {\n                    set = func_methods.getFirstValue(arguments[2]);\n                    if (valueIsError(set)) {\n                        return set;\n                    }\n                }\n                if (!isRealNum(set)) {\n                    return formula.error.v;\n                }\n                set = parseInt(set);\n                if (count < 0) {\n                    return formula.error.v;\n                }\n                if (set != 0 && set != 1 && set != 2) {\n                    return formula.error.v;\n                }\n                $.post('/dataqk/tu/api/tfidf', {\n                    'text': text,\n                    'count': count,\n                    'set': set\n                }, function (data) {\n                    var d = Store.deepCopyFlowData(Store.flowdata);\n                    formula.execFunctionGroup(cell_r, cell_c, data);\n                    d[cell_r][cell_c] = {\n                        'v': data,\n                        'f': cell_fp\n                    };\n                    Store.refreshRange(d, [{\n                            'row': [\n                                cell_r,\n                                cell_r\n                            ],\n                            'column': [\n                                cell_c,\n                                cell_c\n                            ]\n                        }]);\n                });\n                return 'loading...';\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'DM_TEXT_TEXTRANK': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var cell_r = window.luckysheetCurrentRow;\n                var cell_c = window.luckysheetCurrentColumn;\n                var cell_fp = window.luckysheetCurrentFunction;    //任意需要分词的文本\n                //任意需要分词的文本\n                var text = func_methods.getFirstValue(arguments[0], 'text');\n                if (valueIsError(text)) {\n                    return text;\n                }    //关键词个数\n                //关键词个数\n                var count = 20;\n                if (arguments[1] != null) {\n                    count = func_methods.getFirstValue(arguments[1]);\n                    if (valueIsError(count)) {\n                        return count;\n                    }\n                }\n                if (!isRealNum(count)) {\n                    return formula.error.v;\n                }\n                count = parseInt(count);    //语料库\n                //语料库\n                var set = 0;\n                if (arguments[2] != null) {\n                    set = func_methods.getFirstValue(arguments[2]);\n                    if (valueIsError(set)) {\n                        return set;\n                    }\n                }\n                if (!isRealNum(set)) {\n                    return formula.error.v;\n                }\n                set = parseInt(set);\n                if (count < 0) {\n                    return formula.error.v;\n                }\n                if (set != 0 && set != 1 && set != 2) {\n                    return formula.error.v;\n                }\n                $.post('/dataqk/tu/api/tfidf', {\n                    'text': text,\n                    'count': count,\n                    'set': set\n                }, function (data) {\n                    var d = Store.deepCopyFlowData(Store.flowdata);\n                    formula.execFunctionGroup(cell_r, cell_c, data);\n                    d[cell_r][cell_c] = {\n                        'v': data,\n                        'f': cell_fp\n                    };\n                    Store.refreshRange(d, [{\n                            'row': [\n                                cell_r,\n                                cell_r\n                            ],\n                            'column': [\n                                cell_c,\n                                cell_c\n                            ]\n                        }]);\n                });\n                return 'loading...';\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'DATA_CN_STOCK_CLOSE': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var cell_r = window.luckysheetCurrentRow;\n                var cell_c = window.luckysheetCurrentColumn;\n                var cell_fp = window.luckysheetCurrentFunction;    //股票代码\n                //股票代码\n                var stockcode = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(stockcode)) {\n                    return stockcode;\n                }    //日期\n                //日期\n                var date = null;\n                if (arguments[1] != null) {\n                    var data_date = arguments[1];\n                    if (getObjType(data_date) == 'array') {\n                        return formula.error.v;\n                    } else if (getObjType(data_date) == 'object' && data_date.startCell != null) {\n                        if (data_date.data != null && getObjType(data_date.data) != 'array' && data_date.data.ct != null && data_date.data.ct.t == 'd') {\n                            date = update('yyyy-mm-dd', data_date.data.v);\n                        } else {\n                            return formula.error.v;\n                        }\n                    } else {\n                        date = data_date;\n                    }\n                    if (!isdatetime(date)) {\n                        return [\n                            formula.error.v,\n                            '日期错误'\n                        ];\n                    }\n                    date = dayjs(date).format('YYYY-MM-DD');\n                }    //复权除权\n                //复权除权\n                var price = 0;\n                if (arguments[2] != null) {\n                    price = func_methods.getFirstValue(arguments[2]);\n                    if (valueIsError(price)) {\n                        return price;\n                    }\n                }\n                if (!isRealNum(price)) {\n                    return formula.error.v;\n                }\n                price = parseInt(price);\n                if (price != 0 && price != 1 && price != 2) {\n                    return formula.error.v;\n                }\n                $.post('/dataqk/tu/api/getstockinfo', {\n                    'stockCode': stockcode,\n                    'date': date,\n                    'price': price,\n                    type: '0'\n                }, function (data) {\n                    var d = Store.deepCopyFlowData(Store.flowdata);\n                    var v = numFormat(data);\n                    if (v == null) {\n                        v = data;\n                    }\n                    formula.execFunctionGroup(cell_r, cell_c, v);\n                    d[cell_r][cell_c] = {\n                        'v': v,\n                        'f': cell_fp\n                    };\n                    Store.refreshRange(d, [{\n                            'row': [\n                                cell_r,\n                                cell_r\n                            ],\n                            'column': [\n                                cell_c,\n                                cell_c\n                            ]\n                        }]);\n                });\n                return 'loading...';\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'DATA_CN_STOCK_OPEN': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var cell_r = window.luckysheetCurrentRow;\n                var cell_c = window.luckysheetCurrentColumn;\n                var cell_fp = window.luckysheetCurrentFunction;    //股票代码\n                //股票代码\n                var stockcode = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(stockcode)) {\n                    return stockcode;\n                }    //日期\n                //日期\n                var date = null;\n                if (arguments[1] != null) {\n                    var data_date = arguments[1];\n                    if (getObjType(data_date) == 'array') {\n                        return formula.error.v;\n                    } else if (getObjType(data_date) == 'object' && data_date.startCell != null) {\n                        if (data_date.data != null && getObjType(data_date.data) != 'array' && data_date.data.ct != null && data_date.data.ct.t == 'd') {\n                            date = update('yyyy-mm-dd', data_date.data.v);\n                        } else {\n                            return formula.error.v;\n                        }\n                    } else {\n                        date = data_date;\n                    }\n                    if (!isdatetime(date)) {\n                        return [\n                            formula.error.v,\n                            '日期错误'\n                        ];\n                    }\n                    date = dayjs(date).format('YYYY-MM-DD');\n                }    //复权除权\n                //复权除权\n                var price = 0;\n                if (arguments[2] != null) {\n                    price = func_methods.getFirstValue(arguments[2]);\n                    if (valueIsError(price)) {\n                        return price;\n                    }\n                }\n                if (!isRealNum(price)) {\n                    return formula.error.v;\n                }\n                price = parseInt(price);\n                if (price != 0 && price != 1 && price != 2) {\n                    return formula.error.v;\n                }\n                $.post('/dataqk/tu/api/getstockinfo', {\n                    'stockCode': stockcode,\n                    'date': date,\n                    'price': price,\n                    type: '1'\n                }, function (data) {\n                    var d = Store.deepCopyFlowData(Store.flowdata);\n                    formula.execFunctionGroup(cell_r, cell_c, data);\n                    d[cell_r][cell_c] = {\n                        'v': data,\n                        'f': cell_fp\n                    };\n                    Store.refreshRange(d, [{\n                            'row': [\n                                cell_r,\n                                cell_r\n                            ],\n                            'column': [\n                                cell_c,\n                                cell_c\n                            ]\n                        }]);\n                });\n                return 'loading...';\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'DATA_CN_STOCK_MAX': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var cell_r = window.luckysheetCurrentRow;\n                var cell_c = window.luckysheetCurrentColumn;\n                var cell_fp = window.luckysheetCurrentFunction;    //股票代码\n                //股票代码\n                var stockcode = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(stockcode)) {\n                    return stockcode;\n                }    //日期\n                //日期\n                var date = null;\n                if (arguments[1] != null) {\n                    var data_date = arguments[1];\n                    if (getObjType(data_date) == 'array') {\n                        return formula.error.v;\n                    } else if (getObjType(data_date) == 'object' && data_date.startCell != null) {\n                        if (data_date.data != null && getObjType(data_date.data) != 'array' && data_date.data.ct != null && data_date.data.ct.t == 'd') {\n                            date = update('yyyy-mm-dd', data_date.data.v);\n                        } else {\n                            return formula.error.v;\n                        }\n                    } else {\n                        date = data_date;\n                    }\n                    if (!isdatetime(date)) {\n                        return [\n                            formula.error.v,\n                            '日期错误'\n                        ];\n                    }\n                    date = dayjs(date).format('YYYY-MM-DD');\n                }    //复权除权\n                //复权除权\n                var price = 0;\n                if (arguments[2] != null) {\n                    price = func_methods.getFirstValue(arguments[2]);\n                    if (valueIsError(price)) {\n                        return price;\n                    }\n                }\n                if (!isRealNum(price)) {\n                    return formula.error.v;\n                }\n                price = parseInt(price);\n                if (price != 0 && price != 1 && price != 2) {\n                    return formula.error.v;\n                }\n                $.post('/dataqk/tu/api/getstockinfo', {\n                    'stockCode': stockcode,\n                    'date': date,\n                    'price': price,\n                    type: '2'\n                }, function (data) {\n                    var d = Store.deepCopyFlowData(Store.flowdata);\n                    formula.execFunctionGroup(cell_r, cell_c, data);\n                    d[cell_r][cell_c] = {\n                        'v': data,\n                        'f': cell_fp\n                    };\n                    Store.refreshRange(d, [{\n                            'row': [\n                                cell_r,\n                                cell_r\n                            ],\n                            'column': [\n                                cell_c,\n                                cell_c\n                            ]\n                        }]);\n                });\n                return 'loading...';\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'DATA_CN_STOCK_MIN': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var cell_r = window.luckysheetCurrentRow;\n                var cell_c = window.luckysheetCurrentColumn;\n                var cell_fp = window.luckysheetCurrentFunction;    //股票代码\n                //股票代码\n                var stockcode = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(stockcode)) {\n                    return stockcode;\n                }    //日期\n                //日期\n                var date = null;\n                if (arguments[1] != null) {\n                    var data_date = arguments[1];\n                    if (getObjType(data_date) == 'array') {\n                        return formula.error.v;\n                    } else if (getObjType(data_date) == 'object' && data_date.startCell != null) {\n                        if (data_date.data != null && getObjType(data_date.data) != 'array' && data_date.data.ct != null && data_date.data.ct.t == 'd') {\n                            date = update('yyyy-mm-dd', data_date.data.v);\n                        } else {\n                            return formula.error.v;\n                        }\n                    } else {\n                        date = data_date;\n                    }\n                    if (!isdatetime(date)) {\n                        return [\n                            formula.error.v,\n                            '日期错误'\n                        ];\n                    }\n                    date = dayjs(date).format('YYYY-MM-DD');\n                }    //复权除权\n                //复权除权\n                var price = 0;\n                if (arguments[2] != null) {\n                    price = func_methods.getFirstValue(arguments[2]);\n                    if (valueIsError(price)) {\n                        return price;\n                    }\n                }\n                if (!isRealNum(price)) {\n                    return formula.error.v;\n                }\n                price = parseInt(price);\n                if (price != 0 && price != 1 && price != 2) {\n                    return formula.error.v;\n                }\n                $.post('/dataqk/tu/api/getstockinfo', {\n                    'stockCode': stockcode,\n                    'date': date,\n                    'price': price,\n                    type: '3'\n                }, function (data) {\n                    var d = Store.deepCopyFlowData(Store.flowdata);\n                    formula.execFunctionGroup(cell_r, cell_c, data);\n                    d[cell_r][cell_c] = {\n                        'v': data,\n                        'f': cell_fp\n                    };\n                    Store.refreshRange(d, [{\n                            'row': [\n                                cell_r,\n                                cell_r\n                            ],\n                            'column': [\n                                cell_c,\n                                cell_c\n                            ]\n                        }]);\n                });\n                return 'loading...';\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'DATA_CN_STOCK_VOLUMN': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var cell_r = window.luckysheetCurrentRow;\n                var cell_c = window.luckysheetCurrentColumn;\n                var cell_fp = window.luckysheetCurrentFunction;    //股票代码\n                //股票代码\n                var stockcode = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(stockcode)) {\n                    return stockcode;\n                }    //日期\n                //日期\n                var date = null;\n                if (arguments[1] != null) {\n                    var data_date = arguments[1];\n                    if (getObjType(data_date) == 'array') {\n                        return formula.error.v;\n                    } else if (getObjType(data_date) == 'object' && data_date.startCell != null) {\n                        if (data_date.data != null && getObjType(data_date.data) != 'array' && data_date.data.ct != null && data_date.data.ct.t == 'd') {\n                            date = update('yyyy-mm-dd', data_date.data.v);\n                        } else {\n                            return formula.error.v;\n                        }\n                    } else {\n                        date = data_date;\n                    }\n                    if (!isdatetime(date)) {\n                        return [\n                            formula.error.v,\n                            '日期错误'\n                        ];\n                    }\n                    date = dayjs(date).format('YYYY-MM-DD');\n                }    //复权除权\n                //复权除权\n                var price = 0;\n                if (arguments[2] != null) {\n                    price = func_methods.getFirstValue(arguments[2]);\n                    if (valueIsError(price)) {\n                        return price;\n                    }\n                }\n                if (!isRealNum(price)) {\n                    return formula.error.v;\n                }\n                price = parseInt(price);\n                if (price != 0 && price != 1 && price != 2) {\n                    return formula.error.v;\n                }\n                $.post('/dataqk/tu/api/getstockinfo', {\n                    'stockCode': stockcode,\n                    'date': date,\n                    'price': price,\n                    type: '4'\n                }, function (data) {\n                    var d = Store.deepCopyFlowData(Store.flowdata);\n                    formula.execFunctionGroup(cell_r, cell_c, data);\n                    d[cell_r][cell_c] = {\n                        'v': data,\n                        'f': cell_fp\n                    };\n                    Store.refreshRange(d, [{\n                            'row': [\n                                cell_r,\n                                cell_r\n                            ],\n                            'column': [\n                                cell_c,\n                                cell_c\n                            ]\n                        }]);\n                });\n                return 'loading...';\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'DATA_CN_STOCK_AMOUNT': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var cell_r = window.luckysheetCurrentRow;\n                var cell_c = window.luckysheetCurrentColumn;\n                var cell_fp = window.luckysheetCurrentFunction;    //股票代码\n                //股票代码\n                var stockcode = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(stockcode)) {\n                    return stockcode;\n                }    //日期\n                //日期\n                var date = null;\n                if (arguments[1] != null) {\n                    var data_date = arguments[1];\n                    if (getObjType(data_date) == 'array') {\n                        return formula.error.v;\n                    } else if (getObjType(data_date) == 'object' && data_date.startCell != null) {\n                        if (data_date.data != null && getObjType(data_date.data) != 'array' && data_date.data.ct != null && data_date.data.ct.t == 'd') {\n                            date = update('yyyy-mm-dd', data_date.data.v);\n                        } else {\n                            return formula.error.v;\n                        }\n                    } else {\n                        date = data_date;\n                    }\n                    if (!isdatetime(date)) {\n                        return [\n                            formula.error.v,\n                            '日期错误'\n                        ];\n                    }\n                    date = dayjs(date).format('YYYY-MM-DD');\n                }    //复权除权\n                //复权除权\n                var price = 0;\n                if (arguments[2] != null) {\n                    price = func_methods.getFirstValue(arguments[2]);\n                    if (valueIsError(price)) {\n                        return price;\n                    }\n                }\n                if (!isRealNum(price)) {\n                    return formula.error.v;\n                }\n                price = parseInt(price);\n                if (price != 0 && price != 1 && price != 2) {\n                    return formula.error.v;\n                }\n                $.post('/dataqk/tu/api/getstockinfo', {\n                    'stockCode': stockcode,\n                    'date': date,\n                    'price': price,\n                    type: '5'\n                }, function (data) {\n                    var d = Store.deepCopyFlowData(Store.flowdata);\n                    formula.execFunctionGroup(cell_r, cell_c, data);\n                    d[cell_r][cell_c] = {\n                        'v': data,\n                        'f': cell_fp\n                    };\n                    Store.refreshRange(d, [{\n                            'row': [\n                                cell_r,\n                                cell_r\n                            ],\n                            'column': [\n                                cell_c,\n                                cell_c\n                            ]\n                        }]);\n                });\n                return 'loading...';\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'ISDATE': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //日期\n                var date = func_methods.getFirstValue(arguments[0], 'text');\n                if (valueIsError(date)) {\n                    return date;\n                }\n                return isdatetime(date);\n            } catch (e) {\n                var err = e;    //计算错误检测\n                //计算错误检测\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'SUMIF': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //=SUMIF(A2:A5,\">1600000\",B2:B5)\n                //=SUMIF(A2:A5,\">1600000\")\n                //=SUMIF(A2:A5,3000000,B2:B5)\n                //找出range中匹配的字符串\n                var sum = 0;\n                var rangeData = arguments[0].data;\n                var rangeRow = arguments[0].rowl;\n                var rangeCol = arguments[0].coll;\n                var criteria = luckysheet_parseData(arguments[1]);\n                rangeData = formula.getRangeArray(rangeData)[0];    //如果有第三个参数\n                //如果有第三个参数\n                if (arguments[2]) {\n                    var sumRangeData = [];    //根据选择的目标的区域确定实际目标区域\n                                              //初始位置\n                    //根据选择的目标的区域确定实际目标区域\n                    //初始位置\n                    var sumRangeStart = arguments[2].startCell;\n                    var sumRangeRow = arguments[2].rowl;\n                    var sumRangeCol = arguments[2].coll;\n                    var sumRangeSheet = arguments[2].sheetName;\n                    if (rangeRow == sumRangeRow && rangeCol == sumRangeCol) {\n                        sumRangeData = arguments[2].data;\n                    } else {\n                        var row = [], col = [];\n                        var sumRangeEnd = '';\n                        var realSumRange = '';    //console.log(\"开始位置！！！\",sumRangeStart,typeof(sumRangeStart));\n                        //console.log(\"开始位置！！！\",sumRangeStart,typeof(sumRangeStart));\n                        row[0] = parseInt(sumRangeStart.replace(/[^0-9]/g, '')) - 1;\n                        col[0] = ABCatNum(sumRangeStart.replace(/[^A-Za-z]/g, ''));    //根据第一个范围的长宽确定目标范围的末尾位置\n                        //根据第一个范围的长宽确定目标范围的末尾位置\n                        row[1] = row[0] + rangeRow - 1;\n                        col[1] = col[0] + rangeCol - 1;    //console.log(row[0],col[0],row[1],col[1]);\n                                                           //末尾位置转化为sheet格式：如 F4\n                        //console.log(row[0],col[0],row[1],col[1]);\n                        //末尾位置转化为sheet格式：如 F4\n                        var real_ABC = chatatABC(col[1]);\n                        var real_Num = row[1] + 1;\n                        sumRangeEnd = real_ABC + real_Num;    //console.log(\"合成新的末尾位置：\" + sumRangeEnd);\n                        //console.log(\"合成新的末尾位置：\" + sumRangeEnd);\n                        realSumRange = sumRangeSheet + '!' + sumRangeStart + ':' + sumRangeEnd;\n                        sumRangeData = luckysheet_getcelldata(realSumRange).data;    //console.log(\"最终的目标范围：\",sumRangeData);\n                    }\n                    //console.log(\"最终的目标范围：\",sumRangeData);\n                    sumRangeData = formula.getRangeArray(sumRangeData)[0];    //循环遍历查找匹配项\n                    //循环遍历查找匹配项\n                    for (var i = 0; i < rangeData.length; i++) {\n                        var v = rangeData[i];\n                        if (!!v && formula.acompareb(v, criteria)) {\n                            if (!isRealNum(sumRangeData[i])) {\n                                continue;\n                            }\n                            sum = luckysheet_calcADPMM(sum, '+', sumRangeData[i]);    // parseFloat(sumRangeData[i]);\n                        }\n                    }\n                } else\n                    // parseFloat(sumRangeData[i]);\n                    {\n                        //循环遍历查找匹配项\n                        for (var i = 0; i < rangeData.length; i++) {\n                            var v = rangeData[i];\n                            if (!!v && formula.acompareb(v, criteria)) {\n                                if (!isRealNum(v)) {\n                                    continue;\n                                }\n                                sum = luckysheet_calcADPMM(sum, '', v);    // parseFloat(v);\n                            }\n                        }\n                    }\n                // parseFloat(v);\n                return sum;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'TAN': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var number = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number)) {\n                    return number;\n                }\n                if (!isRealNum(number)) {\n                    return formula.error.v;\n                }\n                number = parseFloat(number);\n                return Math.tan(number);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'TANH': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var number = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number)) {\n                    return number;\n                }\n                if (!isRealNum(number)) {\n                    return formula.error.v;\n                }\n                number = parseFloat(number);\n                var e2 = Math.exp(2 * number);\n                return (e2 - 1) / (e2 + 1);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'CEILING': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //number\n                var number = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number)) {\n                    return number;\n                }\n                if (!isRealNum(number)) {\n                    return formula.error.v;\n                }\n                number = parseFloat(number);    //significance\n                //significance\n                var significance = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(significance)) {\n                    return significance;\n                }\n                if (!isRealNum(significance)) {\n                    return formula.error.v;\n                }\n                significance = parseFloat(significance);\n                if (significance == 0) {\n                    return 0;\n                }\n                if (number > 0 && significance < 0) {\n                    return formula.error.nm;\n                }\n                return Math.ceil(number / significance) * significance;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'ATAN': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var number = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number)) {\n                    return number;\n                }\n                if (!isRealNum(number)) {\n                    return formula.error.v;\n                }\n                number = parseFloat(number);\n                return Math.atan(number);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'ASINH': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var number = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number)) {\n                    return number;\n                }\n                if (!isRealNum(number)) {\n                    return formula.error.v;\n                }\n                number = parseFloat(number);\n                return Math.log(number + Math.sqrt(number * number + 1));\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'ABS': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var number = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number)) {\n                    return number;\n                }\n                if (!isRealNum(number)) {\n                    return formula.error.v;\n                }\n                number = parseFloat(number);\n                return Math.abs(number);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'ACOS': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var number = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number)) {\n                    return number;\n                }\n                if (!isRealNum(number)) {\n                    return formula.error.v;\n                }\n                number = parseFloat(number);\n                if (number < -1 || number > 1) {\n                    return formula.error.nm;\n                }\n                return Math.acos(number);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'ACOSH': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var number = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number)) {\n                    return number;\n                }\n                if (!isRealNum(number)) {\n                    return formula.error.v;\n                }\n                number = parseFloat(number);\n                if (number < 1) {\n                    return formula.error.nm;\n                }\n                return Math.log(number + Math.sqrt(number * number - 1));\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'MULTINOMIAL': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var dataArr = [];\n                for (var i = 0; i < arguments.length; i++) {\n                    var data = arguments[i];\n                    if (getObjType(data) == 'array') {\n                        if (getObjType(data[0]) == 'array' && !func_methods.isDyadicArr(data)) {\n                            return formula.error.v;\n                        }\n                        dataArr = dataArr.concat(func_methods.getDataArr(data, true));\n                    } else if (getObjType(data) == 'object' && data.startCell != null) {\n                        dataArr = dataArr.concat(func_methods.getCellDataArr(data, 'number', true));\n                    } else {\n                        dataArr.push(data);\n                    }\n                }\n                var sum = 0, divisor = 1;\n                for (var i = 0; i < dataArr.length; i++) {\n                    var number = dataArr[i];\n                    if (!isRealNum(number)) {\n                        return formula.error.v;\n                    }\n                    number = parseFloat(number);\n                    if (number < 0) {\n                        return formula.error.nm;\n                    }\n                    sum += number;\n                    divisor *= func_methods.factorial(number);\n                }\n                return func_methods.factorial(sum) / divisor;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'ATANH': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var number = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number)) {\n                    return number;\n                }\n                if (!isRealNum(number)) {\n                    return formula.error.v;\n                }\n                number = parseFloat(number);\n                if (number <= -1 || number >= 1) {\n                    return formula.error.nm;\n                }\n                return Math.log((1 + number) / (1 - number)) / 2;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'ATAN2': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //要计算其与x轴夹角大小的线段的终点x坐标\n                var number_x = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number_x)) {\n                    return number_x;\n                }\n                if (!isRealNum(number_x)) {\n                    return formula.error.v;\n                }\n                number_x = parseFloat(number_x);    //要计算其与x轴夹角大小的线段的终点y坐标\n                //要计算其与x轴夹角大小的线段的终点y坐标\n                var number_y = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(number_y)) {\n                    return number_y;\n                }\n                if (!isRealNum(number_y)) {\n                    return formula.error.v;\n                }\n                number_y = parseFloat(number_y);\n                if (number_x == 0 && number_y == 0) {\n                    return formula.error.d;\n                }\n                return Math.atan2(number_y, number_x);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'COUNTBLANK': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var data = arguments[0];\n                var sum = 0;\n                if (getObjType(data) == 'object' && data.startCell != null) {\n                    if (data.data == null) {\n                        return 1;\n                    }\n                    if (getObjType(data.data) == 'array') {\n                        for (var r = 0; r < data.data.length; r++) {\n                            for (var c = 0; c < data.data[r].length; c++) {\n                                if (data.data[r][c] == null || isRealNull(data.data[r][c].v)) {\n                                    sum++;\n                                }\n                            }\n                        }\n                    } else {\n                        if (isRealNull(data.data.v)) {\n                            sum++;\n                        }\n                    }\n                }\n                return sum;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'COSH': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var number = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number)) {\n                    return number;\n                }\n                if (!isRealNum(number)) {\n                    return formula.error.v;\n                }\n                number = parseFloat(number);\n                return (Math.exp(number) + Math.exp(-number)) / 2;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'INT': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var data = arguments[0];\n                if (getObjType(data) == 'array') {\n                    if (getObjType(data[0]) == 'array') {\n                        if (!func_methods.isDyadicArr(data)) {\n                            return formula.error.v;\n                        }\n                        if (!isRealNum(data[0][0])) {\n                            return formula.error.v;\n                        }\n                        return Math.floor(parseFloat(data[0][0]));\n                    } else {\n                        if (!isRealNum(data[0])) {\n                            return formula.error.v;\n                        }\n                        return Math.floor(parseFloat(data[0]));\n                    }\n                } else if (getObjType(data) == 'object' && data.startCell != null) {\n                    if (data.coll > 1) {\n                        return formula.error.v;\n                    }\n                    if (data.rowl > 1) {\n                        var cellrange = formula.getcellrange(data.startCell);\n                        var str = cellrange.row[0];\n                        if (window.luckysheetCurrentRow < str || window.luckysheetCurrentRow > str + data.rowl - 1) {\n                            return formula.error.v;\n                        }\n                        var cell = data.data[window.luckysheetCurrentRow - str][0];\n                    } else {\n                        var cell = data.data;\n                    }\n                    if (cell == null || isRealNull(cell.v)) {\n                        return 0;\n                    }\n                    if (!isRealNum(cell.v)) {\n                        return formula.error.v;\n                    }\n                    return Math.floor(parseFloat(cell.v));\n                } else {\n                    if (getObjType(data) == 'boolean') {\n                        if (data.toString().toLowerCase() == 'true') {\n                            return 1;\n                        }\n                        if (data.toString().toLowerCase() == 'false') {\n                            return 0;\n                        }\n                    }\n                    if (!isRealNum(data)) {\n                        return formula.error.v;\n                    }\n                    return Math.floor(parseFloat(data));\n                }\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'ISEVEN': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var number = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number)) {\n                    return number;\n                }\n                if (!isRealNum(number)) {\n                    return formula.error.v;\n                }\n                number = parseInt(number);\n                return Math.abs(number) & 1 ? false : true;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'ISODD': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var number = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number)) {\n                    return number;\n                }\n                if (!isRealNum(number)) {\n                    return formula.error.v;\n                }\n                number = parseInt(number);\n                return Math.abs(number) & 1 ? true : false;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'LCM': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var o = [];\n                for (var i = 0; i < arguments.length; i++) {\n                    var data = arguments[i];\n                    if (getObjType(data) == 'array') {\n                        if (getObjType(data[0]) == 'array') {\n                            if (!func_methods.isDyadicArr(data)) {\n                                return formula.error.v;\n                            }\n                            o = o.concat(func_methods.getDataArr(data));\n                        } else {\n                            o = o.concat(data);\n                        }\n                    } else if (getObjType(data) == 'object' && data.startCell != null) {\n                        o = o.concat(func_methods.getCellDataArr(data, 'number', true));\n                    } else {\n                        o.push(data);\n                    }\n                }\n                for (var y = 0; y < o.length; y++) {\n                    var number = o[y];\n                    if (!isRealNum(number)) {\n                        return formula.error.v;\n                    }\n                    number = parseInt(number);\n                    if (number < 0) {\n                        return formula.error.nm;\n                    }\n                    o[y] = number;\n                }\n                for (var i, j, n, d, r = 1; (n = o.pop()) !== undefined;) {\n                    if (n == 0) {\n                        r = 0;\n                    }\n                    while (n > 1) {\n                        if (n % 2) {\n                            for (i = 3, j = Math.floor(Math.sqrt(n)); i <= j && n % i; i += 2) {\n                            }\n                            d = i <= j ? i : n;\n                        } else {\n                            d = 2;\n                        }\n                        for (n /= d, r *= d, i = o.length; i; o[--i] % d === 0 && (o[i] /= d) === 1 && o.splice(i, 1)) {\n                        }\n                    }\n                }\n                if (r >= Math.pow(2, 53)) {\n                    return formula.error.nm;\n                }\n                return r;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'LN': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var number = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number)) {\n                    return number;\n                }\n                if (!isRealNum(number)) {\n                    return formula.error.v;\n                }\n                number = parseFloat(number);\n                if (number <= 0) {\n                    return formula.error.nm;\n                }\n                return Math.log(number);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'LOG': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var number = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number)) {\n                    return number;\n                }\n                if (!isRealNum(number)) {\n                    return formula.error.v;\n                }\n                number = parseFloat(number);\n                if (number <= 0) {\n                    return formula.error.nm;\n                }\n                if (arguments.length == 2) {\n                    var base = func_methods.getFirstValue(arguments[1]);\n                    if (valueIsError(base)) {\n                        return base;\n                    }\n                    if (!isRealNum(base)) {\n                        return formula.error.v;\n                    }\n                    base = parseFloat(base);\n                    if (base <= 0) {\n                        return formula.error.nm;\n                    }\n                } else {\n                    var base = 10;\n                }\n                return Math.log(number) / Math.log(base);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'LOG10': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var number = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number)) {\n                    return number;\n                }\n                if (!isRealNum(number)) {\n                    return formula.error.v;\n                }\n                number = parseFloat(number);\n                if (number <= 0) {\n                    return formula.error.nm;\n                }\n                return Math.log(number) / Math.log(10);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'MOD': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //被除数\n                var number = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number)) {\n                    return number;\n                }\n                if (!isRealNum(number)) {\n                    return formula.error.v;\n                }\n                number = parseFloat(number);    //除数\n                //除数\n                var divisor = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(divisor)) {\n                    return divisor;\n                }\n                if (!isRealNum(divisor)) {\n                    return formula.error.v;\n                }\n                divisor = parseFloat(divisor);\n                if (divisor == 0) {\n                    return formula.error.d;\n                }    //计算结果\n                //计算结果\n                var modulus = Math.abs(number % divisor);\n                return divisor > 0 ? modulus : -modulus;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'MROUND': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //要舍入的值\n                var number = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number)) {\n                    return number;\n                }\n                if (!isRealNum(number)) {\n                    return formula.error.v;\n                }\n                number = parseFloat(number);    //要舍入到的倍数\n                //要舍入到的倍数\n                var multiple = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(multiple)) {\n                    return multiple;\n                }\n                if (!isRealNum(multiple)) {\n                    return formula.error.v;\n                }\n                multiple = parseFloat(multiple);\n                if (number * multiple < 0) {\n                    return formula.error.nm;\n                }    //计算结果\n                //计算结果\n                return Math.round(number / multiple) * multiple;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'ODD': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var number = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number)) {\n                    return number;\n                }\n                if (!isRealNum(number)) {\n                    return formula.error.v;\n                }\n                number = parseFloat(number);\n                var temp = Math.ceil(Math.abs(number));\n                temp = temp & 1 ? temp : temp + 1;\n                return number >= 0 ? temp : -temp;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'SUMSQ': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var dataArr = [];\n                for (var i = 0; i < arguments.length; i++) {\n                    var data = arguments[i];\n                    if (getObjType(data) == 'array') {\n                        if (getObjType(data[0]) == 'array' && !func_methods.isDyadicArr(data)) {\n                            return formula.error.v;\n                        }\n                        dataArr = dataArr.concat(func_methods.getDataArr(data, true));\n                    } else if (getObjType(data) == 'object' && data.startCell != null) {\n                        dataArr = dataArr.concat(func_methods.getCellDataArr(data, 'number', true));\n                    } else {\n                        dataArr.push(data);\n                    }\n                }\n                var sum = 0;\n                if (dataArr.length > 0) {\n                    for (var i = 0; i < dataArr.length; i++) {\n                        var number = dataArr[i];\n                        if (!isRealNum(number)) {\n                            return formula.error.v;\n                        }\n                        number = parseFloat(number);\n                        sum += number * number;\n                    }\n                }\n                return sum;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'COMBIN': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //项目的数量\n                var number = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number)) {\n                    return number;\n                }\n                if (!isRealNum(number)) {\n                    return formula.error.v;\n                }\n                number = parseInt(number);    //每一组合中项目的数量\n                //每一组合中项目的数量\n                var number_chosen = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(number_chosen)) {\n                    return number_chosen;\n                }\n                if (!isRealNum(number_chosen)) {\n                    return formula.error.v;\n                }\n                number_chosen = parseInt(number_chosen);\n                if (number < 0 || number_chosen < 0 || number < number_chosen) {\n                    return formula.error.nm;\n                }    //计算结果\n                //计算结果\n                return func_methods.factorial(number) / (func_methods.factorial(number_chosen) * func_methods.factorial(number - number_chosen));\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'SUBTOTAL': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //数字 1-11 或 101-111，用于指定要为分类汇总使用的函数\n                var data_function_num = arguments[0];\n                var function_num;\n                if (getObjType(data_function_num) == 'array') {\n                    if (getObjType(data_function_num[0]) == 'array') {\n                        if (!func_methods.isDyadicArr(data_function_num)) {\n                            return formula.error.v;\n                        }\n                        function_num = [];\n                        for (var i = 0; i < data_function_num.length; i++) {\n                            var rowArr = [];\n                            for (var j = 0; j < data_function_num[i].length; j++) {\n                                rowArr.push(data_function_num[i][j]);\n                            }\n                            function_num.push(rowArr);\n                        }\n                    } else {\n                        function_num = [];\n                        for (var i = 0; i < data_function_num.length; i++) {\n                            function_num.push(data_function_num[i]);\n                        }\n                    }\n                } else if (getObjType(data_function_num) == 'object' && data_function_num.startCell != null) {\n                    function_num = func_methods.getFirstValue(data_function_num);\n                } else {\n                    function_num = data_function_num;\n                }\n                var arr = Array.prototype.slice.apply(arguments);\n                arr.shift();    //计算结果\n                //计算结果\n                if (getObjType(function_num) == 'array') {\n                    var result = [];\n                    if (getObjType(function_num[0]) == 'array') {\n                        for (var i = 0; i < function_num.length; i++) {\n                            var rowArr = [];\n                            for (var j = 0; j < function_num[i].length; j++) {\n                                var value = function_num[i][j];\n                                if (valueIsError(value)) {\n                                    rowArr.push(value);\n                                } else if (!isRealNum(value)) {\n                                    rowArr.push(formula.error.v);\n                                } else {\n                                    value = parseInt(value);\n                                    if (value < 1 || value > 111 || value > 11 && value < 101) {\n                                        rowArr.push(formula.error.v);\n                                    } else {\n                                        rowArr.push(compute(value));\n                                    }\n                                }\n                            }\n                            result.push(rowArr);\n                        }\n                    } else {\n                        for (var i = 0; i < function_num.length; i++) {\n                            var value = function_num[i];\n                            if (valueIsError(value)) {\n                                result.push(value);\n                            } else if (!isRealNum(value)) {\n                                result.push(formula.error.v);\n                            } else {\n                                value = parseInt(value);\n                                if (value < 1 || value > 111 || value > 11 && value < 101) {\n                                    result.push(formula.error.v);\n                                } else {\n                                    result.push(compute(value));\n                                }\n                            }\n                        }\n                    }\n                    return result;\n                } else {\n                    if (valueIsError(function_num)) {\n                        return function_num;\n                    }\n                    if (!isRealNum(function_num)) {\n                        return formula.error.v;\n                    }\n                    function_num = parseInt(function_num);\n                    if (function_num < 1 || function_num > 111 || function_num > 11 && function_num < 101) {\n                        return formula.error.v;\n                    }\n                    return compute(function_num);\n                }\n                function compute(function_num) {\n                    switch (function_num) {\n                    case 1:    //AVERAGE\n                    //AVERAGE\n                    case 101:\n                        return window.luckysheet_function.AVERAGE.f.apply(window.luckysheet_function.AVERAGE, arr);\n                        break;\n                    case 2:    //COUNT\n                    //COUNT\n                    case 102:\n                        return window.luckysheet_function.COUNT.f.apply(window.luckysheet_function.COUNT, arr);\n                        break;\n                    case 3:    //COUNTA\n                    //COUNTA\n                    case 103:\n                        return window.luckysheet_function.COUNTA.f.apply(window.luckysheet_function.COUNTA, arr);\n                        break;\n                    case 4:    //MAX\n                    //MAX\n                    case 104:\n                        return window.luckysheet_function.MAX.f.apply(window.luckysheet_function.MAX, arr);\n                        break;\n                    case 5:    //MIN\n                    //MIN\n                    case 105:\n                        return window.luckysheet_function.MIN.f.apply(window.luckysheet_function.MIN, arr);\n                        break;\n                    case 6:    //PRODUCT\n                    //PRODUCT\n                    case 106:\n                        return window.luckysheet_function.PRODUCT.f.apply(window.luckysheet_function.PRODUCT, arr);\n                        break;\n                    case 7:    //STDEV\n                    //STDEV\n                    case 107:\n                        return window.luckysheet_function.STDEVA.f.apply(window.luckysheet_function.STDEVA, arr);\n                        break;\n                    case 8:    //STDEVP\n                    //STDEVP\n                    case 108:\n                        return window.luckysheet_function.STDEVP.f.apply(window.luckysheet_function.STDEVP, arr);\n                        break;\n                    case 9:    //SUM\n                    //SUM\n                    case 109:\n                        return window.luckysheet_function.SUM.f.apply(window.luckysheet_function.SUM, arr);\n                        break;\n                    case 10:    //VAR\n                    //VAR\n                    case 110:\n                        return window.luckysheet_function.VAR_S.f.apply(window.luckysheet_function.VAR_S, arr);\n                        break;\n                    case 11:    //VARP\n                    //VARP\n                    case 111:\n                        return window.luckysheet_function.VAR_P.f.apply(window.luckysheet_function.VAR_P, arr);\n                        break;\n                    }\n                }\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'ASIN': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var number = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number)) {\n                    return number;\n                }\n                if (!isRealNum(number)) {\n                    return formula.error.v;\n                }\n                number = parseFloat(number);\n                if (number < -1 || number > 1) {\n                    return formula.error.nm;\n                }\n                return Math.asin(number);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'COUNTIF': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //范围\n                var data_range = arguments[0];\n                var range;\n                if (getObjType(data_range) == 'object' && data_range.startCell != null) {\n                    range = data_range.data;\n                } else {\n                    return formula.error.v;\n                }    //条件\n                //条件\n                var data_criteria = arguments[1];\n                var criteria;\n                if (getObjType(data_criteria) == 'array') {\n                    criteria = [];\n                    if (getObjType(data_criteria[0]) == 'array') {\n                        if (!func_methods.isDyadicArr(data_criteria)) {\n                            return formula.error.v;\n                        }\n                        for (var i = 0; i < data_criteria.length; i++) {\n                            var rowArr = [];\n                            for (var j = 0; j < data_criteria[i].length; j++) {\n                                rowArr.push(data_criteria[i][j]);\n                            }\n                            criteria.push(rowArr);\n                        }\n                    } else {\n                        for (var i = 0; i < data_criteria.length; i++) {\n                            criteria.push(data_criteria[i]);\n                        }\n                    }\n                } else if (getObjType(data_criteria) == 'object' && data_criteria.startCell != null) {\n                    if (data_criteria.rowl > 1 || data_criteria.coll > 1) {\n                        return 0;\n                    }\n                    criteria = data_criteria.data.v;\n                } else {\n                    criteria = data_criteria;\n                }    //计算\n                //计算\n                if (getObjType(criteria) == 'array') {\n                    var result = [];\n                    if (getObjType(criteria[0]) == 'array') {\n                        for (var i = 0; i < criteria.length; i++) {\n                            var rowArr = [];\n                            for (var j = 0; j < criteria[i].length; j++) {\n                                rowArr.push(getCriteriaResult(range, criteria[i][j]));\n                            }\n                            result.push(rowArr);\n                        }\n                    } else {\n                        for (var i = 0; i < criteria.length; i++) {\n                            result.push(getCriteriaResult(range, criteria[i]));\n                        }\n                    }\n                    return result;\n                } else {\n                    return getCriteriaResult(range, criteria);\n                }\n                function getCriteriaResult(range, criter) {\n                    if (!/[<>=!*?]/.test(criter)) {\n                        criter = '==\"' + criter + '\"';\n                    }\n                    criter = criter.replace('<>', '!=');\n                    var matches = 0;\n                    if (getObjType(range) == 'array') {\n                        for (var i = 0; i < range.length; i++) {\n                            for (var j = 0; j < range[i].length; j++) {\n                                if (range[i][j] != null && !isRealNull(range[i][j].v)) {\n                                    var value = range[i][j].v;\n                                    if (criter.indexOf('*') > -1 || criter.indexOf('?') > -1) {\n                                        if (formula.isWildcard(value, criter)) {\n                                            matches++;\n                                        }\n                                    } else {\n                                        if (typeof value !== 'string') {\n                                            if (new Function('return ' + value + criter)()) {\n                                                matches++;\n                                            }\n                                        } else {\n                                            if (new Function('return ' + '\"' + value + '\"' + criter)()) {\n                                                matches++;\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    } else {\n                        if (range != null && !isRealNull(range.v)) {\n                            var value = range.v;\n                            if (criter.indexOf('*') > -1 || criter.indexOf('?') > -1) {\n                                if (formula.isWildcard(value, criter)) {\n                                    matches++;\n                                }\n                            } else {\n                                if (typeof value !== 'string') {\n                                    if (new Function('return ' + value + criter)()) {\n                                        matches++;\n                                    }\n                                } else {\n                                    if (new Function('return ' + '\"' + value + '\"' + criter)()) {\n                                        matches++;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    return matches;\n                }\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'RADIANS': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var number = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number)) {\n                    return number;\n                }\n                if (!isRealNum(number)) {\n                    return formula.error.v;\n                }\n                number = parseFloat(number);\n                return number * Math.PI / 180;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'RAND': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }\n            try {\n                return Math.floor(Math.random() * 1000000000) / 1000000000;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'COUNTUNIQUE': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var dataArr = [];\n                for (var i = 0; i < arguments.length; i++) {\n                    var data = arguments[i];\n                    if (getObjType(data) == 'array') {\n                        if (getObjType(data[0]) == 'array' && !func_methods.isDyadicArr(data)) {\n                            return formula.error.v;\n                        }\n                        dataArr = dataArr.concat(func_methods.getDataArr(data, true));\n                    } else if (getObjType(data) == 'object' && data.startCell != null) {\n                        dataArr = dataArr.concat(func_methods.getCellDataArr(data, 'text', true));\n                    } else {\n                        dataArr.push(data);\n                    }\n                }\n                return window.luckysheet_function.UNIQUE.f(dataArr);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'DEGREES': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var number = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number)) {\n                    return number;\n                }\n                if (!isRealNum(number)) {\n                    return formula.error.v;\n                }\n                number = parseFloat(number);\n                return number * 180 / Math.PI;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'ERFC': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var number = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number)) {\n                    return number;\n                }\n                if (!isRealNum(number)) {\n                    return formula.error.v;\n                }\n                number = parseFloat(number);\n                return jStat.erfc(number);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'EVEN': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var number = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number)) {\n                    return number;\n                }\n                if (!isRealNum(number)) {\n                    return formula.error.v;\n                }\n                number = parseFloat(number);\n                var temp = Math.ceil(Math.abs(number));\n                temp = temp & 1 ? temp + 1 : temp;\n                return number > 0 ? temp : -temp;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'EXP': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var number = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number)) {\n                    return number;\n                }\n                if (!isRealNum(number)) {\n                    return formula.error.v;\n                }\n                number = parseFloat(number);\n                return Math.exp(number);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'FACT': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var number = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number)) {\n                    return number;\n                }\n                if (!isRealNum(number)) {\n                    if (getObjType(number) == 'boolean') {\n                        if (number.toString().toLowerCase() == 'true') {\n                            number = 1;\n                        } else if (number.toString().toLowerCase() == 'false') {\n                            number = 0;\n                        }\n                    } else {\n                        return formula.error.v;\n                    }\n                }\n                number = parseInt(number);\n                if (number < 0) {\n                    return formula.error.nm;\n                }\n                return func_methods.factorial(number);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'FACTDOUBLE': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var number = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number)) {\n                    return number;\n                }\n                if (!isRealNum(number)) {\n                    if (getObjType(number) == 'boolean') {\n                        if (number.toString().toLowerCase() == 'true') {\n                            number = 1;\n                        } else if (number.toString().toLowerCase() == 'false') {\n                            number = 0;\n                        }\n                    } else {\n                        return formula.error.v;\n                    }\n                }\n                number = parseInt(number);\n                if (number < 0) {\n                    return formula.error.nm;\n                }\n                return func_methods.factorialDouble(number);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'PI': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }\n            try {\n                return Math.PI;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'FLOOR': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //number\n                var number = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number)) {\n                    return number;\n                }\n                if (!isRealNum(number)) {\n                    return formula.error.v;\n                }\n                number = parseFloat(number);    //significance\n                //significance\n                var significance = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(significance)) {\n                    return significance;\n                }\n                if (!isRealNum(significance)) {\n                    return formula.error.v;\n                }\n                significance = parseFloat(significance);\n                if (significance == 0) {\n                    return formula.error.d;\n                }\n                if (number > 0 && significance < 0) {\n                    return formula.error.nm;\n                }    //计算\n                //计算\n                var precision = -Math.floor(Math.log(Math.abs(significance)) / Math.log(10));\n                if (number >= 0) {\n                    return Math.floor(number / significance) * significance * Math.pow(10, precision) / Math.pow(10, precision);\n                } else {\n                    return -(Math.ceil(Math.abs(number) / significance) * significance * Math.pow(10, precision)) / Math.pow(10, precision);\n                }\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'GCD': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var dataArr = [];\n                for (var i = 0; i < arguments.length; i++) {\n                    var data = arguments[i];\n                    if (getObjType(data) == 'array') {\n                        if (getObjType(data[0]) == 'array' && !func_methods.isDyadicArr(data)) {\n                            return formula.error.v;\n                        }\n                        dataArr = dataArr.concat(func_methods.getDataArr(data, false));\n                    } else if (getObjType(data) == 'object' && data.startCell != null) {\n                        dataArr = dataArr.concat(func_methods.getCellDataArr(data, 'number', false));\n                    } else {\n                        dataArr.push(data);\n                    }\n                }\n                if (!isRealNum(dataArr[0])) {\n                    return formula.error.v;\n                }\n                var x = parseInt(dataArr[0]);\n                if (x < 0 || x >= Math.pow(2, 53)) {\n                    return formula.error.nm;\n                }\n                for (var i = 1; i < dataArr.length; i++) {\n                    var y = dataArr[i];\n                    if (!isRealNum(y)) {\n                        return formula.error.v;\n                    }\n                    y = parseInt(y);\n                    if (y < 0 || y >= Math.pow(2, 53)) {\n                        return formula.error.nm;\n                    }\n                    while (x && y) {\n                        if (x > y) {\n                            x %= y;\n                        } else {\n                            y %= x;\n                        }\n                    }\n                    x += y;\n                }\n                return x;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'RANDBETWEEN': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //下界\n                var bottom = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(bottom)) {\n                    return bottom;\n                }\n                if (!isRealNum(bottom)) {\n                    return formula.error.v;\n                }\n                bottom = parseInt(bottom);    //上界\n                //上界\n                var top = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(top)) {\n                    return top;\n                }\n                if (!isRealNum(top)) {\n                    return formula.error.v;\n                }\n                top = parseInt(top);\n                if (bottom > top) {\n                    return formula.error.nm;\n                }    //计算\n                //计算\n                return bottom + Math.ceil((top - bottom + 1) * Math.random()) - 1;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'ROUND': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //四舍五入的数字\n                var number = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number)) {\n                    return number;\n                }\n                if (!isRealNum(number)) {\n                    return formula.error.v;\n                }\n                number = parseFloat(number);    //位数\n                //位数\n                var digits = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(digits)) {\n                    return digits;\n                }\n                if (!isRealNum(digits)) {\n                    return formula.error.v;\n                }\n                digits = parseInt(digits);    //计算\n                //计算\n                var sign = number > 0 ? 1 : -1;\n                return sign * Math.round(Math.abs(number) * Math.pow(10, digits)) / Math.pow(10, digits);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'ROUNDDOWN': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //四舍五入的数字\n                var number = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number)) {\n                    return number;\n                }\n                if (!isRealNum(number)) {\n                    return formula.error.v;\n                }\n                number = parseFloat(number);    //位数\n                //位数\n                var digits = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(digits)) {\n                    return digits;\n                }\n                if (!isRealNum(digits)) {\n                    return formula.error.v;\n                }\n                digits = parseInt(digits);    //计算\n                //计算\n                var sign = number > 0 ? 1 : -1;\n                return sign * Math.floor(Math.abs(number) * Math.pow(10, digits)) / Math.pow(10, digits);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'ROUNDUP': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //四舍五入的数字\n                var number = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number)) {\n                    return number;\n                }\n                if (!isRealNum(number)) {\n                    return formula.error.v;\n                }\n                number = parseFloat(number);    //位数\n                //位数\n                var digits = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(digits)) {\n                    return digits;\n                }\n                if (!isRealNum(digits)) {\n                    return formula.error.v;\n                }\n                digits = parseInt(digits);    //计算\n                //计算\n                var sign = number > 0 ? 1 : -1;\n                return sign * Math.ceil(Math.abs(number) * Math.pow(10, digits)) / Math.pow(10, digits);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'SERIESSUM': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //幂级数的输入值\n                var x = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(x)) {\n                    return x;\n                }\n                if (!isRealNum(x)) {\n                    return formula.error.v;\n                }\n                x = parseFloat(x);    //x 的首项乘幂\n                //x 的首项乘幂\n                var n = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(n)) {\n                    return n;\n                }\n                if (!isRealNum(n)) {\n                    return formula.error.v;\n                }\n                n = parseFloat(n);    //级数中每一项的乘幂 n 的步长增加值\n                //级数中每一项的乘幂 n 的步长增加值\n                var m = func_methods.getFirstValue(arguments[2]);\n                if (valueIsError(m)) {\n                    return m;\n                }\n                if (!isRealNum(m)) {\n                    return formula.error.v;\n                }\n                m = parseFloat(m);    //与 x 的每个连续乘幂相乘的一组系数\n                //与 x 的每个连续乘幂相乘的一组系数\n                var data_coefficients = arguments[3];\n                var coefficients = [];\n                if (getObjType(data_coefficients) == 'array') {\n                    if (getObjType(data_coefficients[0]) == 'array' && !func_methods.isDyadicArr(data_coefficients)) {\n                        return formula.error.v;\n                    }\n                    coefficients = coefficients.concat(func_methods.getDataArr(data_coefficients, false));\n                } else if (getObjType(data_coefficients) == 'object' && data_coefficients.startCell != null) {\n                    coefficients = coefficients.concat(func_methods.getCellDataArr(data_coefficients, 'number', false));\n                } else {\n                    coefficients.push(data_coefficients);\n                }    //计算\n                //计算\n                if (!isRealNum(coefficients[0])) {\n                    return formula.error.v;\n                }\n                var result = parseFloat(coefficients[0]) * Math.pow(x, n);\n                for (var i = 1; i < coefficients.length; i++) {\n                    var number = coefficients[i];\n                    if (!isRealNum(number)) {\n                        return formula.error.v;\n                    }\n                    number = parseFloat(number);\n                    result += number * Math.pow(x, n + i * m);\n                }\n                return result;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'SIGN': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var number = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number)) {\n                    return number;\n                }\n                if (!isRealNum(number)) {\n                    return formula.error.v;\n                }\n                number = parseFloat(number);\n                if (number > 0) {\n                    return 1;\n                } else if (number == 0) {\n                    return 0;\n                } else if (number < 0) {\n                    return -1;\n                }\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'SIN': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var number = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number)) {\n                    return number;\n                }\n                if (!isRealNum(number)) {\n                    return formula.error.v;\n                }\n                number = parseFloat(number);\n                return Math.sin(number);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'SINH': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var number = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number)) {\n                    return number;\n                }\n                if (!isRealNum(number)) {\n                    return formula.error.v;\n                }\n                number = parseFloat(number);\n                return (Math.exp(number) - Math.exp(-number)) / 2;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'SQRT': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var number = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number)) {\n                    return number;\n                }\n                if (!isRealNum(number)) {\n                    return formula.error.v;\n                }\n                number = parseFloat(number);\n                if (number < 0) {\n                    return formula.error.nm;\n                }\n                return Math.sqrt(number);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'SQRTPI': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var number = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number)) {\n                    return number;\n                }\n                if (!isRealNum(number)) {\n                    return formula.error.v;\n                }\n                number = parseFloat(number);\n                if (number < 0) {\n                    return formula.error.nm;\n                }\n                return Math.sqrt(number * Math.PI);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'GAMMALN': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var number = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number)) {\n                    return number;\n                }\n                if (!isRealNum(number)) {\n                    return formula.error.v;\n                }\n                number = parseFloat(number);\n                if (number <= 0) {\n                    return formula.error.nm;\n                }\n                return jStat.gammaln(number);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'COS': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var number = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number)) {\n                    return number;\n                }\n                if (!isRealNum(number)) {\n                    return formula.error.v;\n                }\n                number = parseFloat(number);\n                return Math.cos(number);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'TRUNC': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //要截取的数据\n                var number = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number)) {\n                    return number;\n                }\n                if (!isRealNum(number)) {\n                    return formula.error.v;\n                }\n                number = parseFloat(number);    //位数\n                //位数\n                if (arguments.length == 2) {\n                    var digits = func_methods.getFirstValue(arguments[1]);\n                    if (valueIsError(digits)) {\n                        return digits;\n                    }\n                    if (!isRealNum(digits)) {\n                        return formula.error.v;\n                    }\n                    digits = parseInt(digits);\n                } else {\n                    var digits = 0;\n                }    //计算\n                //计算\n                var sign = number > 0 ? 1 : -1;\n                return sign * Math.floor(Math.abs(number) * Math.pow(10, digits)) / Math.pow(10, digits);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'QUOTIENT': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //被除数\n                var numerator = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(numerator)) {\n                    return numerator;\n                }\n                if (!isRealNum(numerator)) {\n                    return formula.error.v;\n                }\n                numerator = parseFloat(numerator);    //除数\n                //除数\n                var denominator = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(denominator)) {\n                    return denominator;\n                }\n                if (!isRealNum(denominator)) {\n                    return formula.error.v;\n                }\n                denominator = parseFloat(denominator);\n                if (denominator == 0) {\n                    return formula.error.d;\n                }    //计算\n                //计算\n                return parseInt(numerator / denominator, 10);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'POWER': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //底数\n                var number = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number)) {\n                    return number;\n                }\n                if (!isRealNum(number)) {\n                    return formula.error.v;\n                }\n                number = parseFloat(number);    //指数\n                //指数\n                var power = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(power)) {\n                    return power;\n                }\n                if (!isRealNum(power)) {\n                    return formula.error.v;\n                }\n                power = parseFloat(power);\n                if (number == 0 && power == 0) {\n                    return formula.error.nm;\n                }\n                if (number < 0 && power.toString().indexOf('.') > -1) {\n                    return formula.error.nm;\n                }\n                return Math.pow(number, power);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'SUMIFS': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var sum = 0;\n                var args = arguments;\n                luckysheet_getValue(args);\n                var rangeData = formula.getRangeArray(args[0])[0];\n                var results = new Array(rangeData.length);\n                for (var i = 0; i < results.length; i++) {\n                    results[i] = true;\n                }\n                for (var i = 1; i < args.length; i += 2) {\n                    var range = formula.getRangeArray(args[i])[0];\n                    var criteria = args[i + 1];\n                    for (var j = 0; j < range.length; j++) {\n                        var v = range[j];\n                        results[j] = results[j] && !!v && formula.acompareb(v, criteria);\n                    }\n                }\n                for (var i = 0; i < rangeData.length; i++) {\n                    if (results[i]) {\n                        sum = luckysheet_calcADPMM(sum, '+', rangeData[i]);    //parseFloat(rangeData[i]);\n                    }\n                }\n                //parseFloat(rangeData[i]);\n                return sum;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'COUNTIFS': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var args = arguments;\n                luckysheet_getValue(args);\n                var results = new Array(formula.getRangeArray(args[0])[0].length);\n                for (var i = 0; i < results.length; i++) {\n                    results[i] = true;\n                }\n                for (var i = 0; i < args.length; i += 2) {\n                    var range = formula.getRangeArray(args[i])[0];\n                    var criteria = args[i + 1];\n                    for (var j = 0; j < range.length; j++) {\n                        var v = range[j];\n                        results[j] = results[j] && !!v && formula.acompareb(v, criteria);\n                    }\n                }\n                var result = 0;\n                for (var i = 0; i < results.length; i++) {\n                    if (results[i]) {\n                        result++;\n                    }\n                }\n                return result;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'PRODUCT': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var dataArr = [];\n                for (var i = 0; i < arguments.length; i++) {\n                    var data = arguments[i];\n                    if (getObjType(data) == 'array') {\n                        if (getObjType(data[0]) == 'array' && !func_methods.isDyadicArr(data)) {\n                            return formula.error.v;\n                        }\n                        dataArr = dataArr.concat(func_methods.getDataArr(data, true));\n                    } else if (getObjType(data) == 'object' && data.startCell != null) {\n                        dataArr = dataArr.concat(func_methods.getCellDataArr(data, 'number', true));\n                    } else {\n                        dataArr.push(data);\n                    }\n                }\n                var result = 1;\n                for (var i = 0; i < dataArr.length; i++) {\n                    var number = dataArr[i];\n                    if (!isRealNum(number)) {\n                        return formula.error.v;\n                    }\n                    number = parseFloat(number);\n                    result *= number;\n                }\n                return result;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'HARMEAN': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var dataArr = [];\n                for (var i = 0; i < arguments.length; i++) {\n                    var data = arguments[i];\n                    if (getObjType(data) == 'array') {\n                        if (getObjType(data[0]) == 'array' && !func_methods.isDyadicArr(data)) {\n                            return formula.error.v;\n                        }\n                        dataArr = dataArr.concat(func_methods.getDataArr(data, true));\n                    } else if (getObjType(data) == 'object' && data.startCell != null) {\n                        dataArr = dataArr.concat(func_methods.getCellDataArr(data, 'number', true));\n                    } else {\n                        dataArr.push(data);\n                    }\n                }\n                var den = 0, len = 0;\n                for (var i = 0; i < dataArr.length; i++) {\n                    var number = dataArr[i];\n                    if (!isRealNum(number)) {\n                        return formula.error.v;\n                    }\n                    number = parseFloat(number);\n                    if (number <= 0) {\n                        return formula.error.nm;\n                    }\n                    den += 1 / number;\n                    len++;\n                }\n                return len / den;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'HYPGEOMDIST': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //样本中成功的次数\n                var sample_s = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(sample_s)) {\n                    return sample_s;\n                }\n                if (!isRealNum(sample_s)) {\n                    return formula.error.v;\n                }\n                sample_s = parseInt(sample_s);    //样本量\n                //样本量\n                var number_sample = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(number_sample)) {\n                    return number_sample;\n                }\n                if (!isRealNum(number_sample)) {\n                    return formula.error.v;\n                }\n                number_sample = parseInt(number_sample);    //总体中成功的次数\n                //总体中成功的次数\n                var population_s = func_methods.getFirstValue(arguments[2]);\n                if (valueIsError(population_s)) {\n                    return population_s;\n                }\n                if (!isRealNum(population_s)) {\n                    return formula.error.v;\n                }\n                population_s = parseInt(population_s);    //总体大小\n                //总体大小\n                var number_pop = func_methods.getFirstValue(arguments[3]);\n                if (valueIsError(number_pop)) {\n                    return number_pop;\n                }\n                if (!isRealNum(number_pop)) {\n                    return formula.error.v;\n                }\n                number_pop = parseInt(number_pop);    //决定函数形式的逻辑值\n                //决定函数形式的逻辑值\n                var cumulative = func_methods.getCellBoolen(arguments[4]);\n                if (valueIsError(cumulative)) {\n                    return cumulative;\n                }\n                if (sample_s < 0 || sample_s > Math.min(number_sample, population_s) || sample_s < Math.max(0, number_sample - number_pop + population_s)) {\n                    return formula.error.nm;\n                }\n                if (number_sample <= 0 || number_sample > number_pop) {\n                    return formula.error.nm;\n                }\n                if (population_s <= 0 || population_s > number_pop) {\n                    return formula.error.nm;\n                }\n                if (number_pop <= 0) {\n                    return formula.error.nm;\n                }    //计算\n                //计算\n                function pdf(x, n, M, N) {\n                    var a = func_methods.factorial(M) / (func_methods.factorial(x) * func_methods.factorial(M - x));\n                    var b = func_methods.factorial(N - M) / (func_methods.factorial(n - x) * func_methods.factorial(N - M - n + x));\n                    var c = func_methods.factorial(N) / (func_methods.factorial(n) * func_methods.factorial(N - n));\n                    return a * b / c;\n                }\n                function cdf(x, n, M, N) {\n                    var sum = 0;\n                    for (var i = 0; i <= x; i++) {\n                        sum += pdf(i, n, M, N);\n                    }\n                    return sum;\n                }\n                return cumulative ? cdf(sample_s, number_sample, population_s, number_pop) : pdf(sample_s, number_sample, population_s, number_pop);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'INTERCEPT': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //x轴上用于预测的值\n                var x = 0;    //代表因变量数据数组或矩阵的范围\n                //代表因变量数据数组或矩阵的范围\n                var data_known_y = arguments[0];\n                var known_y = [];\n                if (getObjType(data_known_y) == 'array') {\n                    if (getObjType(data_known_y[0]) == 'array' && !func_methods.isDyadicArr(data_known_y)) {\n                        return formula.error.v;\n                    }\n                    known_y = known_y.concat(func_methods.getDataArr(data_known_y, false));\n                } else if (getObjType(data_known_y) == 'object' && data_known_y.startCell != null) {\n                    known_y = known_y.concat(func_methods.getCellDataArr(data_known_y, 'text', false));\n                } else {\n                    known_y.push(data_known_y);\n                }    //代表自变量数据数组或矩阵的范围\n                //代表自变量数据数组或矩阵的范围\n                var data_known_x = arguments[1];\n                var known_x = [];\n                if (getObjType(data_known_x) == 'array') {\n                    if (getObjType(data_known_x[0]) == 'array' && !func_methods.isDyadicArr(data_known_x)) {\n                        return formula.error.v;\n                    }\n                    known_x = known_x.concat(func_methods.getDataArr(data_known_x, false));\n                } else if (getObjType(data_known_x) == 'object' && data_known_x.startCell != null) {\n                    known_x = known_x.concat(func_methods.getCellDataArr(data_known_x, 'text', false));\n                } else {\n                    known_x.push(data_known_x);\n                }\n                if (known_y.length != known_x.length) {\n                    return formula.error.na;\n                }    //known_y 和 known_x 只取数值\n                //known_y 和 known_x 只取数值\n                var data_y = [], data_x = [];\n                for (var i = 0; i < known_y.length; i++) {\n                    var num_y = known_y[i];\n                    var num_x = known_x[i];\n                    if (isRealNum(num_y) && isRealNum(num_x)) {\n                        data_y.push(parseFloat(num_y));\n                        data_x.push(parseFloat(num_x));\n                    }\n                }\n                if (func_methods.variance_s(data_x) == 0) {\n                    return formula.error.d;\n                }    //计算\n                //计算\n                var xmean = jStat.mean(data_x);\n                var ymean = jStat.mean(data_y);\n                var n = data_x.length;\n                var num = 0;\n                var den = 0;\n                for (var i = 0; i < n; i++) {\n                    num += (data_x[i] - xmean) * (data_y[i] - ymean);\n                    den += Math.pow(data_x[i] - xmean, 2);\n                }\n                var b = num / den;\n                var a = ymean - b * xmean;\n                return a + b * x;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'KURT': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var dataArr = [];\n                for (var i = 0; i < arguments.length; i++) {\n                    var data = arguments[i];\n                    if (getObjType(data) == 'array') {\n                        if (getObjType(data[0]) == 'array' && !func_methods.isDyadicArr(data)) {\n                            return formula.error.v;\n                        }\n                        dataArr = dataArr.concat(func_methods.getDataArr(data, true));\n                    } else if (getObjType(data) == 'object' && data.startCell != null) {\n                        dataArr = dataArr.concat(func_methods.getCellDataArr(data, 'text', true));\n                    } else {\n                        dataArr.push(data);\n                    }\n                }    //剔除不是数值类型的值\n                //剔除不是数值类型的值\n                var dataArr_n = [];\n                for (var j = 0; j < dataArr.length; j++) {\n                    var number = dataArr[j];\n                    if (!isRealNum(number)) {\n                        return formula.error.v;\n                    }\n                    number = parseFloat(number);\n                    dataArr_n.push(number);\n                }\n                if (dataArr_n.length < 4 || func_methods.standardDeviation_s(dataArr_n) == 0) {\n                    return formula.error.d;\n                }    //计算\n                //计算\n                var mean = jStat.mean(dataArr_n);\n                var n = dataArr_n.length;\n                var sigma = 0;\n                for (var i = 0; i < n; i++) {\n                    sigma += Math.pow(dataArr_n[i] - mean, 4);\n                }\n                sigma = sigma / Math.pow(jStat.stdev(dataArr_n, true), 4);\n                return n * (n + 1) / ((n - 1) * (n - 2) * (n - 3)) * sigma - 3 * (n - 1) * (n - 1) / ((n - 2) * (n - 3));\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'LARGE': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //数组或范围\n                var dataArr = [];\n                if (getObjType(arguments[0]) == 'array') {\n                    if (getObjType(arguments[0][0]) == 'array' && !func_methods.isDyadicArr(arguments[0])) {\n                        return formula.error.v;\n                    }\n                    dataArr = dataArr.concat(func_methods.getDataArr(arguments[0], true));\n                } else if (getObjType(arguments[0]) == 'object' && arguments[0].startCell != null) {\n                    dataArr = dataArr.concat(func_methods.getCellDataArr(arguments[0], 'text', true));\n                } else {\n                    dataArr.push(arguments[0]);\n                }\n                var dataArr_n = [];\n                for (var j = 0; j < dataArr.length; j++) {\n                    var number = dataArr[j];\n                    if (!isRealNum(number)) {\n                        return formula.error.v;\n                    }\n                    number = parseFloat(number);\n                    dataArr_n.push(number);\n                }    //要返回的元素的排行位置\n                //要返回的元素的排行位置\n                var n;\n                if (getObjType(arguments[1]) == 'array') {\n                    if (getObjType(arguments[1][0]) == 'array' && !func_methods.isDyadicArr(arguments[1])) {\n                        return formula.error.v;\n                    }\n                    n = func_methods.getDataArr(arguments[1]);\n                } else if (getObjType(arguments[1]) == 'object' && arguments[1].startCell != null) {\n                    if (arguments[1].rowl > 1 || arguments[1].coll > 1) {\n                        return formula.error.v;\n                    }\n                    var cell = arguments[1].data;\n                    if (cell == null || isRealNull(cell.v)) {\n                        var n = 0;\n                    } else {\n                        var n = cell.v;\n                    }\n                } else {\n                    n = arguments[1];\n                }    //计算\n                //计算\n                if (getObjType(n) == 'array') {\n                    if (dataArr_n.length == 0) {\n                        return formula.error.nm;\n                    }\n                    var result = [];\n                    for (var i = 0; i < n.length; i++) {\n                        if (!isRealNum(n[i])) {\n                            result.push(formula.error.v);\n                            continue;\n                        }\n                        n[i] = Math.ceil(parseFloat(n[i]));\n                        if (n[i] <= 0 || n[i] > dataArr_n.length) {\n                            result.push(formula.error.nm);\n                            continue;\n                        }\n                        result.push(dataArr.sort(function (a, b) {\n                            return b - a;\n                        })[n[i] - 1]);\n                    }\n                    return result;\n                } else {\n                    if (!isRealNum(n)) {\n                        return formula.error.v;\n                    }\n                    n = Math.ceil(parseFloat(n));\n                    if (dataArr_n.length == 0) {\n                        return formula.error.nm;\n                    }\n                    if (n <= 0 || n > dataArr_n.length) {\n                        return formula.error.nm;\n                    }\n                    return dataArr.sort(function (a, b) {\n                        return b - a;\n                    })[n - 1];\n                }\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'STDEVA': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var dataArr = [];\n                for (var i = 0; i < arguments.length; i++) {\n                    var data = arguments[i];\n                    if (getObjType(data) == 'array') {\n                        if (getObjType(data[0]) == 'array' && !func_methods.isDyadicArr(data)) {\n                            return formula.error.v;\n                        }\n                        dataArr = dataArr.concat(func_methods.getDataArr(data, false));\n                    } else if (getObjType(data) == 'object' && data.startCell != null) {\n                        dataArr = dataArr.concat(func_methods.getCellDataArr(data, 'text', false));\n                    } else {\n                        dataArr.push(data);\n                    }\n                }    //不是数值类型的值转化成数字（true为1，false和文本为0）\n                //不是数值类型的值转化成数字（true为1，false和文本为0）\n                var dataArr_n = [];\n                for (var j = 0; j < dataArr.length; j++) {\n                    var number = dataArr[j];\n                    if (!isRealNum(number)) {\n                        if (number.toString().toLowerCase() == 'true') {\n                            number = 1;\n                        } else {\n                            number = 0;\n                        }\n                    } else {\n                        number = parseFloat(number);\n                    }\n                    dataArr_n.push(number);\n                }\n                if (dataArr_n.length == 0) {\n                    return 0;\n                }\n                if (dataArr_n.length == 1) {\n                    return formula.error.d;\n                }\n                return func_methods.standardDeviation_s(dataArr_n);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'STDEVP': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var dataArr = [];\n                for (var i = 0; i < arguments.length; i++) {\n                    var data = arguments[i];\n                    if (getObjType(data) == 'array') {\n                        if (getObjType(data[0]) == 'array' && !func_methods.isDyadicArr(data)) {\n                            return formula.error.v;\n                        }\n                        dataArr = dataArr.concat(func_methods.getDataArr(data, true));\n                    } else if (getObjType(data) == 'object' && data.startCell != null) {\n                        dataArr = dataArr.concat(func_methods.getCellDataArr(data, 'text', true));\n                    } else {\n                        dataArr.push(data);\n                    }\n                }    //剔除不是数值类型的值\n                //剔除不是数值类型的值\n                var dataArr_n = [];\n                for (var j = 0; j < dataArr.length; j++) {\n                    var number = dataArr[j];\n                    if (!isRealNum(number)) {\n                        return formula.error.v;\n                    }\n                    number = parseFloat(number);\n                    dataArr_n.push(number);\n                }\n                if (dataArr_n.length == 0) {\n                    return 0;\n                }\n                if (dataArr_n.length == 1) {\n                    return formula.error.d;\n                }\n                return func_methods.standardDeviation(dataArr_n);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'GEOMEAN': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var dataArr = [];\n                for (var i = 0; i < arguments.length; i++) {\n                    var data = arguments[i];\n                    if (getObjType(data) == 'array') {\n                        if (getObjType(data[0]) == 'array' && !func_methods.isDyadicArr(data)) {\n                            return formula.error.v;\n                        }\n                        dataArr = dataArr.concat(func_methods.getDataArr(data, true));\n                    } else if (getObjType(data) == 'object' && data.startCell != null) {\n                        dataArr = dataArr.concat(func_methods.getCellDataArr(data, 'text', true));\n                    } else {\n                        if (getObjType(data) == 'boolean') {\n                            if (data.toString().toLowerCase() == 'true') {\n                                dataArr.push(1);\n                            } else if (data.toString().toLowerCase() == 'false') {\n                                dataArr.push(0);\n                            }\n                        } else if (isRealNum(data)) {\n                            dataArr.push(data);\n                        } else {\n                            return formula.error.v;\n                        }\n                    }\n                }    //剔除不是数值类型的值\n                //剔除不是数值类型的值\n                var dataArr_n = [];\n                for (var j = 0; j < dataArr.length; j++) {\n                    var number = dataArr[j];\n                    if (!isRealNum(number)) {\n                        continue;\n                    }\n                    number = parseFloat(number);\n                    if (number <= 0) {\n                        return formula.error.nm;\n                    }\n                    dataArr_n.push(number);\n                }\n                if (dataArr_n.length == 0) {\n                    return formula.error.nm;\n                }\n                return jStat.geomean(dataArr_n);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'RANK_EQ': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //要确定其排名的值\n                var number = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number)) {\n                    return number;\n                }\n                if (!isRealNum(number)) {\n                    return formula.error.v;\n                }\n                number = parseFloat(number);    //包含相关数据集的数组或范围\n                //包含相关数据集的数组或范围\n                var data_ref = arguments[1];\n                var ref = [];\n                if (getObjType(data_ref) == 'array') {\n                    if (getObjType(data_ref[0]) == 'array' && !func_methods.isDyadicArr(data_ref)) {\n                        return formula.error.v;\n                    }\n                    ref = ref.concat(func_methods.getDataArr(data_ref, true));\n                } else if (getObjType(data_ref) == 'object' && data_ref.startCell != null) {\n                    ref = ref.concat(func_methods.getCellDataArr(data_ref, 'number', true));\n                } else {\n                    ref.push(data_ref);\n                }\n                var ref_n = [];\n                for (var j = 0; j < ref.length; j++) {\n                    var num = ref[j];\n                    if (!isRealNum(num)) {\n                        return formula.error.v;\n                    }\n                    num = parseFloat(num);\n                    ref_n.push(num);\n                }    //要按升序还是按降序考虑“data”中的值\n                //要按升序还是按降序考虑“data”中的值\n                if (arguments.length == 3) {\n                    var order = func_methods.getCellBoolen(arguments[2]);\n                    if (valueIsError(order)) {\n                        return order;\n                    }\n                } else {\n                    var order = false;\n                }    //计算\n                //计算\n                var sort = order ? function (a, b) {\n                    return a - b;\n                } : function (a, b) {\n                    return b - a;\n                };\n                ref_n = ref_n.sort(sort);\n                var index = ref_n.indexOf(number);\n                if (index == -1) {\n                    return formula.error.na;\n                } else {\n                    return index + 1;\n                }\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'RANK_AVG': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //要确定其排名的值\n                var number = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number)) {\n                    return number;\n                }\n                if (!isRealNum(number)) {\n                    return formula.error.v;\n                }\n                number = parseFloat(number);    //包含相关数据集的数组或范围\n                //包含相关数据集的数组或范围\n                var data_ref = arguments[1];\n                var ref = [];\n                if (getObjType(data_ref) == 'array') {\n                    if (getObjType(data_ref[0]) == 'array' && !func_methods.isDyadicArr(data_ref)) {\n                        return formula.error.v;\n                    }\n                    ref = ref.concat(func_methods.getDataArr(data_ref, true));\n                } else if (getObjType(data_ref) == 'object' && data_ref.startCell != null) {\n                    ref = ref.concat(func_methods.getCellDataArr(data_ref, 'number', true));\n                } else {\n                    ref.push(data_ref);\n                }\n                var ref_n = [];\n                for (var j = 0; j < ref.length; j++) {\n                    var num = ref[j];\n                    if (!isRealNum(num)) {\n                        return formula.error.v;\n                    }\n                    num = parseFloat(num);\n                    ref_n.push(num);\n                }    //要按升序还是按降序考虑“data”中的值\n                //要按升序还是按降序考虑“data”中的值\n                if (arguments.length == 3) {\n                    var order = func_methods.getFirstValue(arguments[2]);\n                    if (valueIsError(order)) {\n                        return order;\n                    }\n                    if (getObjType(order) == 'boolean') {\n                    } else if (getObjType(order) == 'string' && (order.toLowerCase() == 'true' || order.toLowerCase() == 'false')) {\n                        if (order.toLowerCase() == 'true') {\n                            order = true;\n                        }\n                        if (order.toLowerCase() == 'false') {\n                            order = false;\n                        }\n                    } else if (isRealNum(order)) {\n                        order = parseFloat(order);\n                        order = order == 0 ? false : true;\n                    } else {\n                        return formula.error.v;\n                    }\n                } else {\n                    var order = false;\n                }    //计算\n                //计算\n                var sort = order ? function (a, b) {\n                    return a - b;\n                } : function (a, b) {\n                    return b - a;\n                };\n                ref_n = ref_n.sort(sort);\n                var count = 0;\n                for (var i = 0; i < ref_n.length; i++) {\n                    if (ref_n[i] == number) {\n                        count++;\n                    }\n                }\n                return count > 1 ? (2 * ref_n.indexOf(number) + count + 1) / 2 : ref_n.indexOf(number) + 1;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'PERCENTRANK_EXC': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //包含相关数据集的数组或范围\n                var data_ref = arguments[0];\n                var ref = [];\n                if (getObjType(data_ref) == 'array') {\n                    if (getObjType(data_ref[0]) == 'array' && !func_methods.isDyadicArr(data_ref)) {\n                        return formula.error.v;\n                    }\n                    ref = ref.concat(func_methods.getDataArr(data_ref, true));\n                } else if (getObjType(data_ref) == 'object' && data_ref.startCell != null) {\n                    ref = ref.concat(func_methods.getCellDataArr(data_ref, 'number', true));\n                } else {\n                    ref.push(data_ref);\n                }\n                var ref_n = [];\n                for (var j = 0; j < ref.length; j++) {\n                    var number = ref[j];\n                    if (!isRealNum(number)) {\n                        return formula.error.v;\n                    }\n                    number = parseFloat(number);\n                    ref_n.push(number);\n                }    //要确定其百分比排位的值\n                //要确定其百分比排位的值\n                var x = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(x)) {\n                    return x;\n                }\n                if (!isRealNum(x)) {\n                    return formula.error.v;\n                }\n                x = parseFloat(x);    //要在计算中使用的有效位数\n                //要在计算中使用的有效位数\n                if (arguments.length == 3) {\n                    var significance = func_methods.getFirstValue(arguments[2]);\n                    if (valueIsError(significance)) {\n                        return significance;\n                    }\n                    if (!isRealNum(significance)) {\n                        return formula.error.v;\n                    }\n                    significance = parseInt(significance);\n                } else {\n                    var significance = 3;\n                }\n                if (ref_n.length == 0) {\n                    return formula.error.nm;\n                }\n                if (significance < 1) {\n                    return formula.error.nm;\n                }    //计算\n                //计算\n                if (ref_n.length == 1 && ref_n[0] == x) {\n                    return 1;\n                }\n                ref_n = ref_n.sort(function (a, b) {\n                    return a - b;\n                });\n                var uniques = window.luckysheet_function.UNIQUE.f(ref_n)[0];\n                var n = ref_n.length;\n                var m = uniques.length;\n                var power = Math.pow(10, significance);\n                var result = 0;\n                var match = false;\n                var i = 0;\n                while (!match && i < m) {\n                    if (x === uniques[i]) {\n                        result = (ref_n.indexOf(uniques[i]) + 1) / (n + 1);\n                        match = true;\n                    } else if (x >= uniques[i] && (x < uniques[i + 1] || i === m - 1)) {\n                        result = (ref_n.lastIndexOf(uniques[i]) + 1 + (x - uniques[i]) / (uniques[i + 1] - uniques[i])) / (n + 1);\n                        match = true;\n                    }\n                    i++;\n                }\n                if (isNaN(result)) {\n                    return formula.error.na;\n                } else {\n                    return Math.floor(result * power) / power;\n                }\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'PERCENTRANK_INC': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //包含相关数据集的数组或范围\n                var data_ref = arguments[0];\n                var ref = [];\n                if (getObjType(data_ref) == 'array') {\n                    if (getObjType(data_ref[0]) == 'array' && !func_methods.isDyadicArr(data_ref)) {\n                        return formula.error.v;\n                    }\n                    ref = ref.concat(func_methods.getDataArr(data_ref, true));\n                } else if (getObjType(data_ref) == 'object' && data_ref.startCell != null) {\n                    ref = ref.concat(func_methods.getCellDataArr(data_ref, 'number', true));\n                } else {\n                    ref.push(data_ref);\n                }\n                var ref_n = [];\n                for (var j = 0; j < ref.length; j++) {\n                    var number = ref[j];\n                    if (!isRealNum(number)) {\n                        return formula.error.v;\n                    }\n                    number = parseFloat(number);\n                    ref_n.push(number);\n                }    //要确定其百分比排位的值\n                //要确定其百分比排位的值\n                var x = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(x)) {\n                    return x;\n                }\n                if (!isRealNum(x)) {\n                    return formula.error.v;\n                }\n                x = parseFloat(x);    //要在计算中使用的有效位数\n                //要在计算中使用的有效位数\n                if (arguments.length == 3) {\n                    var significance = func_methods.getFirstValue(arguments[2]);\n                    if (valueIsError(significance)) {\n                        return significance;\n                    }\n                    if (!isRealNum(significance)) {\n                        return formula.error.v;\n                    }\n                    significance = parseInt(significance);\n                } else {\n                    var significance = 3;\n                }\n                if (ref_n.length == 0) {\n                    return formula.error.nm;\n                }\n                if (significance < 1) {\n                    return formula.error.nm;\n                }    //计算\n                //计算\n                if (ref_n.length == 1 && ref_n[0] == x) {\n                    return 1;\n                }\n                ref_n = ref_n.sort(function (a, b) {\n                    return a - b;\n                });\n                var uniques = window.luckysheet_function.UNIQUE.f(ref_n)[0];\n                var n = ref_n.length;\n                var m = uniques.length;\n                var power = Math.pow(10, significance);\n                var result = 0;\n                var match = false;\n                var i = 0;\n                while (!match && i < m) {\n                    if (x === uniques[i]) {\n                        result = ref_n.indexOf(uniques[i]) / (n - 1);\n                        match = true;\n                    } else if (x >= uniques[i] && (x < uniques[i + 1] || i === m - 1)) {\n                        result = (ref_n.lastIndexOf(uniques[i]) + (x - uniques[i]) / (uniques[i + 1] - uniques[i])) / (n - 1);\n                        match = true;\n                    }\n                    i++;\n                }\n                if (isNaN(result)) {\n                    return formula.error.na;\n                } else {\n                    return Math.floor(result * power) / power;\n                }\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'FORECAST': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //x轴上用于预测的值\n                var x = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(x)) {\n                    return x;\n                }\n                if (!isRealNum(x)) {\n                    return formula.error.v;\n                }\n                x = parseFloat(x);    //代表因变量数据数组或矩阵的范围\n                //代表因变量数据数组或矩阵的范围\n                var data_known_y = arguments[1];\n                var known_y = [];\n                if (getObjType(data_known_y) == 'array') {\n                    if (getObjType(data_known_y[0]) == 'array' && !func_methods.isDyadicArr(data_known_y)) {\n                        return formula.error.v;\n                    }\n                    known_y = known_y.concat(func_methods.getDataArr(data_known_y, false));\n                } else if (getObjType(data_known_y) == 'object' && data_known_y.startCell != null) {\n                    known_y = known_y.concat(func_methods.getCellDataArr(data_known_y, 'text', false));\n                } else {\n                    known_y.push(data_known_y);\n                }    //代表自变量数据数组或矩阵的范围\n                //代表自变量数据数组或矩阵的范围\n                var data_known_x = arguments[2];\n                var known_x = [];\n                if (getObjType(data_known_x) == 'array') {\n                    if (getObjType(data_known_x[0]) == 'array' && !func_methods.isDyadicArr(data_known_x)) {\n                        return formula.error.v;\n                    }\n                    known_x = known_x.concat(func_methods.getDataArr(data_known_x, false));\n                } else if (getObjType(data_known_x) == 'object' && data_known_x.startCell != null) {\n                    known_x = known_x.concat(func_methods.getCellDataArr(data_known_x, 'text', false));\n                } else {\n                    known_x.push(data_known_x);\n                }\n                if (known_y.length != known_x.length) {\n                    return formula.error.na;\n                }    //known_y 和 known_x 只取数值\n                //known_y 和 known_x 只取数值\n                var data_y = [], data_x = [];\n                for (var i = 0; i < known_y.length; i++) {\n                    var num_y = known_y[i];\n                    var num_x = known_x[i];\n                    if (isRealNum(num_y) && isRealNum(num_x)) {\n                        data_y.push(parseFloat(num_y));\n                        data_x.push(parseFloat(num_x));\n                    }\n                }\n                if (func_methods.variance_s(data_x) == 0) {\n                    return formula.error.d;\n                }    //计算\n                //计算\n                var xmean = jStat.mean(data_x);\n                var ymean = jStat.mean(data_y);\n                var n = data_x.length;\n                var num = 0;\n                var den = 0;\n                for (var i = 0; i < n; i++) {\n                    num += (data_x[i] - xmean) * (data_y[i] - ymean);\n                    den += Math.pow(data_x[i] - xmean, 2);\n                }\n                var b = num / den;\n                var a = ymean - b * xmean;\n                return a + b * x;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'FISHERINV': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var y = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(y)) {\n                    return y;\n                }\n                if (!isRealNum(y)) {\n                    return formula.error.v;\n                }\n                y = parseFloat(y);\n                var e2y = Math.exp(2 * y);\n                return (e2y - 1) / (e2y + 1);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'FISHER': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var x = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(x)) {\n                    return x;\n                }\n                if (!isRealNum(x)) {\n                    return formula.error.v;\n                }\n                x = parseFloat(x);\n                if (x <= -1 || x >= 1) {\n                    return formula.error.nm;\n                }\n                return Math.log((1 + x) / (1 - x)) / 2;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'MODE_SNGL': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var dataArr = [];\n                for (var i = 0; i < arguments.length; i++) {\n                    var data = arguments[i];\n                    if (getObjType(data) == 'array') {\n                        if (getObjType(data[0]) == 'array' && !func_methods.isDyadicArr(data)) {\n                            return formula.error.v;\n                        }\n                        dataArr = dataArr.concat(func_methods.getDataArr(data, true));\n                    } else if (getObjType(data) == 'object' && data.startCell != null) {\n                        dataArr = dataArr.concat(func_methods.getCellDataArr(data, 'number', true));\n                    } else {\n                        if (!isRealNum(data)) {\n                            return formula.error.v;\n                        }\n                        dataArr.push(data);\n                    }\n                }\n                var dataArr_n = [];\n                for (var i = 0; i < dataArr.length; i++) {\n                    var number = dataArr[i];\n                    if (isRealNum(number)) {\n                        dataArr_n.push(parseFloat(number));\n                    }\n                }\n                var count = {};\n                var maxItems = [];\n                var max = 0;\n                var currentItem;\n                for (var i = 0; i < dataArr_n.length; i++) {\n                    currentItem = dataArr_n[i];\n                    count[currentItem] = count[currentItem] ? count[currentItem] + 1 : 1;\n                    if (count[currentItem] > max) {\n                        max = count[currentItem];\n                        maxItems = [];\n                    }\n                    if (count[currentItem] == max) {\n                        maxItems[maxItems.length] = currentItem;\n                    }\n                }\n                if (max <= 1) {\n                    return formula.error.na;\n                }\n                var resultIndex = dataArr_n.indexOf(maxItems[0]);\n                for (var j = 0; j < maxItems.length; j++) {\n                    var index = dataArr_n.indexOf(maxItems[j]);\n                    if (index < resultIndex) {\n                        resultIndex = index;\n                    }\n                }\n                return dataArr_n[resultIndex];\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'WEIBULL_DIST': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //WEIBULL 分布函数的输入值\n                var x = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(x)) {\n                    return x;\n                }\n                if (!isRealNum(x)) {\n                    return formula.error.v;\n                }\n                x = parseFloat(x);    //Weibull 分布函数的形状参数\n                //Weibull 分布函数的形状参数\n                var alpha = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(alpha)) {\n                    return alpha;\n                }\n                if (!isRealNum(alpha)) {\n                    return formula.error.v;\n                }\n                alpha = parseFloat(alpha);    //Weibull 分布函数的尺度参数\n                //Weibull 分布函数的尺度参数\n                var beta = func_methods.getFirstValue(arguments[2]);\n                if (valueIsError(beta)) {\n                    return beta;\n                }\n                if (!isRealNum(beta)) {\n                    return formula.error.v;\n                }\n                beta = parseFloat(beta);    //决定函数形式的逻辑值\n                //决定函数形式的逻辑值\n                var cumulative = func_methods.getCellBoolen(arguments[3]);\n                if (valueIsError(cumulative)) {\n                    return cumulative;\n                }\n                if (x < 0 || alpha <= 0 || beta <= 0) {\n                    return formula.error.nm;\n                }\n                return cumulative ? 1 - Math.exp(-Math.pow(x / beta, alpha)) : Math.pow(x, alpha - 1) * Math.exp(-Math.pow(x / beta, alpha)) * alpha / Math.pow(beta, alpha);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'AVEDEV': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var dataArr = [];\n                for (var i = 0; i < arguments.length; i++) {\n                    var data = arguments[i];\n                    if (getObjType(data) == 'array') {\n                        if (getObjType(data[0]) == 'array' && !func_methods.isDyadicArr(data)) {\n                            return formula.error.v;\n                        }\n                        dataArr = dataArr.concat(func_methods.getDataArr(data, true));\n                    } else if (getObjType(data) == 'object' && data.startCell != null) {\n                        dataArr = dataArr.concat(func_methods.getCellDataArr(data, 'number', true));\n                    } else {\n                        if (!isRealNum(data)) {\n                            return formula.error.v;\n                        }\n                        dataArr.push(data);\n                    }\n                }\n                var dataArr_n = [];\n                for (var i = 0; i < dataArr.length; i++) {\n                    var number = dataArr[i];\n                    if (isRealNum(number)) {\n                        dataArr_n.push(parseFloat(number));\n                    }\n                }\n                if (dataArr_n.length == 0) {\n                    return formula.error.nm;\n                }\n                return jStat.sum(jStat(dataArr_n).subtract(jStat.mean(dataArr_n)).abs()[0]) / dataArr_n.length;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'AVERAGEA': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var dataArr = [];\n                for (var i = 0; i < arguments.length; i++) {\n                    var data = arguments[i];\n                    if (getObjType(data) == 'array') {\n                        if (getObjType(data[0]) == 'array' && !func_methods.isDyadicArr(data)) {\n                            return formula.error.v;\n                        }\n                        dataArr = dataArr.concat(func_methods.getDataArr(data, false));\n                    } else if (getObjType(data) == 'object' && data.startCell != null) {\n                        dataArr = dataArr.concat(func_methods.getCellDataArr(data, 'number', true));\n                    } else {\n                        if (number.toString.toLowerCase() == 'true') {\n                            dataArr.push(1);\n                        } else if (number.toString.toLowerCase() == 'false') {\n                            dataArr.push(0);\n                        } else if (isRealNum(data)) {\n                            dataArr.push(data);\n                        } else {\n                            return formula.error.v;\n                        }\n                    }\n                }\n                var sum = 0, count = 0;\n                for (var i = 0; i < dataArr.length; i++) {\n                    var number = dataArr[i];\n                    if (isRealNum(number)) {\n                        sum += parseFloat(number);\n                    } else {\n                        if (number.toString().toLowerCase() == 'true') {\n                            sum += 1;\n                        } else {\n                            sum += 0;\n                        }\n                    }\n                    count++;\n                }\n                if (count == 0) {\n                    return formula.error.d;\n                }\n                return sum / count;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'BINOM_DIST': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //试验的成功次数\n                var number_s = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number_s)) {\n                    return number_s;\n                }\n                if (!isRealNum(number_s)) {\n                    return formula.error.v;\n                }\n                number_s = parseInt(number_s);    //独立检验的次数\n                //独立检验的次数\n                var trials = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(trials)) {\n                    return trials;\n                }\n                if (!isRealNum(trials)) {\n                    return formula.error.v;\n                }\n                trials = parseInt(trials);    //任一给定检验的成功概率\n                //任一给定检验的成功概率\n                var probability_s = func_methods.getFirstValue(arguments[2]);\n                if (valueIsError(probability_s)) {\n                    return probability_s;\n                }\n                if (!isRealNum(probability_s)) {\n                    return formula.error.v;\n                }\n                probability_s = parseFloat(probability_s);    //是否使用二项式累积分布\n                //是否使用二项式累积分布\n                var cumulative = func_methods.getCellBoolen(arguments[3]);\n                if (valueIsError(cumulative)) {\n                    return cumulative;\n                }\n                if (number_s < 0 || number_s > trials) {\n                    return formula.error.nm;\n                }\n                if (probability_s < 0 || probability_s > 1) {\n                    return formula.error.nm;\n                }\n                return cumulative ? jStat.binomial.cdf(number_s, trials, probability_s) : jStat.binomial.pdf(number_s, trials, probability_s);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'BINOM_INV': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //贝努利试验次数\n                var trials = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(trials)) {\n                    return trials;\n                }\n                if (!isRealNum(trials)) {\n                    return formula.error.v;\n                }\n                trials = parseInt(trials);    //任一次给定检验的成功概率\n                //任一次给定检验的成功概率\n                var probability_s = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(probability_s)) {\n                    return probability_s;\n                }\n                if (!isRealNum(probability_s)) {\n                    return formula.error.v;\n                }\n                probability_s = parseFloat(probability_s);    //期望的临界概率\n                //期望的临界概率\n                var alpha = func_methods.getFirstValue(arguments[2]);\n                if (valueIsError(alpha)) {\n                    return alpha;\n                }\n                if (!isRealNum(alpha)) {\n                    return formula.error.v;\n                }\n                alpha = parseFloat(alpha);\n                if (trials < 0) {\n                    return formula.error.nm;\n                }\n                if (probability_s < 0 || probability_s > 1) {\n                    return formula.error.nm;\n                }\n                if (alpha < 0 || alpha > 1) {\n                    return formula.error.nm;\n                }    //计算\n                //计算\n                var x = 0;\n                while (x <= trials) {\n                    if (jStat.binomial.cdf(x, trials, probability_s) >= alpha) {\n                        return x;\n                    }\n                    x++;\n                }\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'CONFIDENCE_NORM': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //置信水平\n                var alpha = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(alpha)) {\n                    return alpha;\n                }\n                if (!isRealNum(alpha)) {\n                    return formula.error.v;\n                }\n                alpha = parseFloat(alpha);    //数据区域的总体标准偏差\n                //数据区域的总体标准偏差\n                var standard_dev = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(standard_dev)) {\n                    return standard_dev;\n                }\n                if (!isRealNum(standard_dev)) {\n                    return formula.error.v;\n                }\n                standard_dev = parseFloat(standard_dev);    //样本总量的大小\n                //样本总量的大小\n                var size = func_methods.getFirstValue(arguments[2]);\n                if (valueIsError(size)) {\n                    return size;\n                }\n                if (!isRealNum(size)) {\n                    return formula.error.v;\n                }\n                size = parseInt(size);\n                if (alpha <= 0 || alpha >= 1) {\n                    return formula.error.nm;\n                }\n                if (standard_dev <= 0) {\n                    return formula.error.nm;\n                }\n                if (size < 1) {\n                    return formula.error.nm;\n                }\n                return jStat.normalci(1, alpha, standard_dev, size)[1] - 1;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'CORREL': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //代表因变量数据数组或矩阵的范围\n                var data_known_y = arguments[0];\n                var known_y = [];\n                if (getObjType(data_known_y) == 'array') {\n                    if (getObjType(data_known_y[0]) == 'array' && !func_methods.isDyadicArr(data_known_y)) {\n                        return formula.error.v;\n                    }\n                    known_y = known_y.concat(func_methods.getDataArr(data_known_y, false));\n                } else if (getObjType(data_known_y) == 'object' && data_known_y.startCell != null) {\n                    known_y = known_y.concat(func_methods.getCellDataArr(data_known_y, 'text', false));\n                } else {\n                    known_y.push(data_known_y);\n                }    //代表自变量数据数组或矩阵的范围\n                //代表自变量数据数组或矩阵的范围\n                var data_known_x = arguments[1];\n                var known_x = [];\n                if (getObjType(data_known_x) == 'array') {\n                    if (getObjType(data_known_x[0]) == 'array' && !func_methods.isDyadicArr(data_known_x)) {\n                        return formula.error.v;\n                    }\n                    known_x = known_x.concat(func_methods.getDataArr(data_known_x, false));\n                } else if (getObjType(data_known_x) == 'object' && data_known_x.startCell != null) {\n                    known_x = known_x.concat(func_methods.getCellDataArr(data_known_x, 'text', false));\n                } else {\n                    known_x.push(data_known_x);\n                }\n                if (known_y.length != known_x.length) {\n                    return formula.error.na;\n                }    //known_y 和 known_x 只取数值\n                //known_y 和 known_x 只取数值\n                var data_y = [], data_x = [];\n                for (var i = 0; i < known_y.length; i++) {\n                    var num_y = known_y[i];\n                    var num_x = known_x[i];\n                    if (isRealNum(num_y) && isRealNum(num_x)) {\n                        data_y.push(parseFloat(num_y));\n                        data_x.push(parseFloat(num_x));\n                    }\n                }\n                if (data_y.length == 0 || data_x.length == 0 || func_methods.standardDeviation(data_y) == 0 || func_methods.standardDeviation(data_x) == 0) {\n                    return formula.error.d;\n                }\n                return jStat.corrcoeff(data_y, data_x);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'COVARIANCE_P': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //代表自变量数据数组或矩阵的范围\n                var data_known_x = arguments[0];\n                var known_x = [];\n                if (getObjType(data_known_x) == 'array') {\n                    if (getObjType(data_known_x[0]) == 'array' && !func_methods.isDyadicArr(data_known_x)) {\n                        return formula.error.v;\n                    }\n                    known_x = known_x.concat(func_methods.getDataArr(data_known_x, false));\n                } else if (getObjType(data_known_x) == 'object' && data_known_x.startCell != null) {\n                    known_x = known_x.concat(func_methods.getCellDataArr(data_known_x, 'text', false));\n                } else {\n                    known_x.push(data_known_x);\n                }    //代表因变量数据数组或矩阵的范围\n                //代表因变量数据数组或矩阵的范围\n                var data_known_y = arguments[1];\n                var known_y = [];\n                if (getObjType(data_known_y) == 'array') {\n                    if (getObjType(data_known_y[0]) == 'array' && !func_methods.isDyadicArr(data_known_y)) {\n                        return formula.error.v;\n                    }\n                    known_y = known_y.concat(func_methods.getDataArr(data_known_y, false));\n                } else if (getObjType(data_known_y) == 'object' && data_known_y.startCell != null) {\n                    known_y = known_y.concat(func_methods.getCellDataArr(data_known_y, 'text', false));\n                } else {\n                    known_y.push(data_known_y);\n                }\n                if (known_x.length != known_y.length) {\n                    return formula.error.na;\n                }    //known_y 和 known_x 只取数值\n                //known_y 和 known_x 只取数值\n                var data_x = [], data_y = [];\n                for (var i = 0; i < known_x.length; i++) {\n                    var num_x = known_x[i];\n                    var num_y = known_y[i];\n                    if (isRealNum(num_x) && isRealNum(num_y)) {\n                        data_x.push(parseFloat(num_x));\n                        data_y.push(parseFloat(num_y));\n                    }\n                }\n                if (data_x.length == 0 || data_y.length == 0) {\n                    return formula.error.d;\n                }    //计算\n                //计算\n                var mean1 = jStat.mean(data_x);\n                var mean2 = jStat.mean(data_y);\n                var result = 0;\n                for (var i = 0; i < data_x.length; i++) {\n                    result += (data_x[i] - mean1) * (data_y[i] - mean2);\n                }\n                result = result / data_x.length;\n                return result;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'COVARIANCE_S': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //代表自变量数据数组或矩阵的范围\n                var data_known_x = arguments[0];\n                var known_x = [];\n                if (getObjType(data_known_x) == 'array') {\n                    if (getObjType(data_known_x[0]) == 'array' && !func_methods.isDyadicArr(data_known_x)) {\n                        return formula.error.v;\n                    }\n                    known_x = known_x.concat(func_methods.getDataArr(data_known_x, false));\n                } else if (getObjType(data_known_x) == 'object' && data_known_x.startCell != null) {\n                    known_x = known_x.concat(func_methods.getCellDataArr(data_known_x, 'text', false));\n                } else {\n                    known_x.push(data_known_x);\n                }    //代表因变量数据数组或矩阵的范围\n                //代表因变量数据数组或矩阵的范围\n                var data_known_y = arguments[1];\n                var known_y = [];\n                if (getObjType(data_known_y) == 'array') {\n                    if (getObjType(data_known_y[0]) == 'array' && !func_methods.isDyadicArr(data_known_y)) {\n                        return formula.error.v;\n                    }\n                    known_y = known_y.concat(func_methods.getDataArr(data_known_y, false));\n                } else if (getObjType(data_known_y) == 'object' && data_known_y.startCell != null) {\n                    known_y = known_y.concat(func_methods.getCellDataArr(data_known_y, 'text', false));\n                } else {\n                    known_y.push(data_known_y);\n                }\n                if (known_x.length != known_y.length) {\n                    return formula.error.na;\n                }    //known_y 和 known_x 只取数值\n                //known_y 和 known_x 只取数值\n                var data_x = [], data_y = [];\n                for (var i = 0; i < known_x.length; i++) {\n                    var num_x = known_x[i];\n                    var num_y = known_y[i];\n                    if (isRealNum(num_x) && isRealNum(num_y)) {\n                        data_x.push(parseFloat(num_x));\n                        data_y.push(parseFloat(num_y));\n                    }\n                }\n                if (data_x.length == 0 || data_y.length == 0) {\n                    return formula.error.d;\n                }\n                return jStat.covariance(data_x, data_y);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'DEVSQ': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var dataArr = [];\n                for (var i = 0; i < arguments.length; i++) {\n                    var data = arguments[i];\n                    if (getObjType(data) == 'array') {\n                        if (getObjType(data[0]) == 'array' && !func_methods.isDyadicArr(data)) {\n                            return formula.error.v;\n                        }\n                        dataArr = dataArr.concat(func_methods.getDataArr(data, true));\n                    } else if (getObjType(data) == 'object' && data.startCell != null) {\n                        dataArr = dataArr.concat(func_methods.getCellDataArr(data, 'number', true));\n                    } else {\n                        if (!isRealNum(data)) {\n                            if (getObjType(data) == 'boolean') {\n                                if (data.toString().toLowerCase() == 'true') {\n                                    dataArr.push(1);\n                                } else if (data.toString().toLowerCase() == 'false') {\n                                    dataArr.push(0);\n                                }\n                            } else {\n                                return formula.error.v;\n                            }\n                        } else {\n                            dataArr.push(data);\n                        }\n                    }\n                }\n                var dataArr_n = [];\n                for (var i = 0; i < dataArr.length; i++) {\n                    var number = dataArr[i];\n                    if (isRealNum(number)) {\n                        dataArr_n.push(parseFloat(number));\n                    }\n                }\n                var mean = jStat.mean(dataArr_n);\n                var result = 0;\n                for (var i = 0; i < dataArr_n.length; i++) {\n                    result += Math.pow(dataArr_n[i] - mean, 2);\n                }\n                return result;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'EXPON_DIST': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //指数分布函数的输入值\n                var x = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(x)) {\n                    return x;\n                }\n                if (!isRealNum(x)) {\n                    return formula.error.v;\n                }\n                x = parseFloat(x);    //用于指定指数分布函数的 lambda 值\n                //用于指定指数分布函数的 lambda 值\n                var lambda = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(lambda)) {\n                    return lambda;\n                }\n                if (!isRealNum(lambda)) {\n                    return formula.error.v;\n                }\n                lambda = parseFloat(lambda);    //是否使用指数累积分布\n                //是否使用指数累积分布\n                var cumulative = func_methods.getCellBoolen(arguments[2]);\n                if (valueIsError(cumulative)) {\n                    return cumulative;\n                }\n                if (x < 0) {\n                    return formula.error.nm;\n                }\n                if (lambda < 0) {\n                    return formula.error.nm;\n                }\n                return cumulative ? jStat.exponential.cdf(x, lambda) : jStat.exponential.pdf(x, lambda);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'AVERAGEIF': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var sum = 0;\n                var count = 0;\n                var rangeData = arguments[0].data;\n                var rangeRow = arguments[0].rowl;\n                var rangeCol = arguments[0].coll;\n                var criteria = luckysheet_parseData(arguments[1]);\n                var sumRangeData = [];    //如果有第三个参数\n                //如果有第三个参数\n                if (arguments[2]) {\n                    //根据选择的目标的区域确定实际目标区域\n                    //初始位置\n                    var sumRangeStart = arguments[2].startCell;\n                    var sumRangeRow = arguments[2].rowl;\n                    var sumRangeCol = arguments[2].coll;\n                    var sumRangeSheet = arguments[2].sheetName;\n                    if (rangeRow == sumRangeRow && rangeCol == sumRangeCol) {\n                        sumRangeData = arguments[2].data;\n                    } else {\n                        var row = [], col = [];\n                        var sumRangeEnd = '';\n                        var realSumRange = '';    //console.log(\"开始位置！！！\",sumRangeStart,typeof(sumRangeStart));\n                        //console.log(\"开始位置！！！\",sumRangeStart,typeof(sumRangeStart));\n                        row[0] = parseInt(sumRangeStart.replace(/[^0-9]/g, '')) - 1;\n                        col[0] = ABCatNum(sumRangeStart.replace(/[^A-Za-z]/g, ''));    //根据第一个范围的长宽确定目标范围的末尾位置\n                        //根据第一个范围的长宽确定目标范围的末尾位置\n                        row[1] = row[0] + rangeRow - 1;\n                        col[1] = col[0] + rangeCol - 1;    //console.log(row[0],col[0],row[1],col[1]);\n                                                           //末尾位置转化为sheet格式：如 F4\n                        //console.log(row[0],col[0],row[1],col[1]);\n                        //末尾位置转化为sheet格式：如 F4\n                        var real_ABC = chatatABC(col[1]);\n                        var real_Num = row[1] + 1;\n                        sumRangeEnd = real_ABC + real_Num;    //console.log(\"合成新的末尾位置：\" + sumRangeEnd);\n                        //console.log(\"合成新的末尾位置：\" + sumRangeEnd);\n                        realSumRange = sumRangeSheet + '!' + sumRangeStart + ':' + sumRangeEnd;\n                        sumRangeData = luckysheet_getcelldata(realSumRange).data;    //console.log(\"最终的目标范围：\",sumRangeData);\n                    }\n                    //console.log(\"最终的目标范围：\",sumRangeData);\n                    sumRangeData = formula.getRangeArray(sumRangeData)[0];\n                }\n                rangeData = formula.getRangeArray(rangeData)[0];    //循环遍历查找匹配项\n                //循环遍历查找匹配项\n                for (var i = 0; i < rangeData.length; i++) {\n                    var v = rangeData[i];\n                    if (!!v && formula.acompareb(v, criteria)) {\n                        var vnow = sumRangeData[i] || v;\n                        if (!isRealNum(vnow)) {\n                            continue;\n                        }\n                        sum += parseFloat(vnow);\n                        count++;\n                    }\n                }\n                if (sum == 0 || count == 0) {\n                    return formula.error.d;\n                } else {\n                    return numFormat(sum / count);\n                }\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'AVERAGEIFS': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var sum = 0;\n                var count = 0;\n                var args = arguments;\n                luckysheet_getValue(args);\n                var rangeData = formula.getRangeArray(args[0])[0];\n                var results = new Array(rangeData.length);\n                for (var i = 0; i < results.length; i++) {\n                    results[i] = true;\n                }\n                for (var i = 1; i < args.length; i += 2) {\n                    var range = formula.getRangeArray(args[i])[0];\n                    var criteria = args[i + 1];\n                    for (var j = 0; j < range.length; j++) {\n                        var v = range[j];\n                        results[j] = results[j] && !!v && formula.acompareb(v, criteria);\n                    }\n                }\n                for (var i = 0; i < rangeData.length; i++) {\n                    if (results[i] && isRealNum(rangeData[i])) {\n                        sum += parseFloat(rangeData[i]);\n                        count++;\n                    }\n                }\n                if (sum == 0 || count == 0) {\n                    return formula.error.d;\n                } else {\n                    return numFormat(sum / count);\n                }\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'PERMUT': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //表示对象个数的整数\n                var number = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number)) {\n                    return number;\n                }\n                if (!isRealNum(number)) {\n                    return formula.error.v;\n                }\n                number = parseInt(number);    //表示每个排列中对象个数的整数\n                //表示每个排列中对象个数的整数\n                var number_chosen = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(number_chosen)) {\n                    return number_chosen;\n                }\n                if (!isRealNum(number_chosen)) {\n                    return formula.error.v;\n                }\n                number_chosen = parseInt(number_chosen);\n                if (number <= 0 || number_chosen < 0) {\n                    return formula.error.nm;\n                }\n                if (number < number_chosen) {\n                    return formula.error.nm;\n                }\n                return func_methods.factorial(number) / func_methods.factorial(number - number_chosen);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'TRIMMEAN': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //包含相关数据集的数组或范围\n                var data_dataArr = arguments[0];\n                var dataArr = [];\n                if (getObjType(data_dataArr) == 'array') {\n                    if (getObjType(data_dataArr[0]) == 'array' && !func_methods.isDyadicArr(data_dataArr)) {\n                        return formula.error.v;\n                    }\n                    dataArr = dataArr.concat(func_methods.getDataArr(data_dataArr, false));\n                } else if (getObjType(data_dataArr) == 'object' && data_dataArr.startCell != null) {\n                    dataArr = dataArr.concat(func_methods.getCellDataArr(data_dataArr, 'number', false));\n                } else {\n                    dataArr.push(data_dataArr);\n                }\n                var dataArr_n = [];\n                for (var i = 0; i < dataArr.length; i++) {\n                    var number = dataArr[i];\n                    if (isRealNum(number)) {\n                        dataArr_n.push(parseFloat(number));\n                    }\n                }    //排除比例\n                //排除比例\n                var percent = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(percent)) {\n                    return percent;\n                }\n                if (!isRealNum(percent)) {\n                    return formula.error.v;\n                }\n                percent = parseFloat(percent);\n                if (dataArr_n.length == 0) {\n                    return formula.error.nm;\n                }\n                if (percent < 0 || percent > 1) {\n                    return formula.error.nm;\n                }    //计算\n                //计算\n                function rest(array, idx) {\n                    idx = idx || 1;\n                    if (!array || typeof array.slice !== 'function') {\n                        return array;\n                    }\n                    return array.slice(idx);\n                }\n                ;\n                function initial(array, idx) {\n                    idx = idx || 1;\n                    if (!array || typeof array.slice !== 'function') {\n                        return array;\n                    }\n                    return array.slice(0, array.length - idx);\n                }\n                ;\n                dataArr_n.sort(function (a, b) {\n                    return a - b;\n                });\n                var trim = window.luckysheet_function.FLOOR.f(dataArr_n.length * percent, 2) / 2;\n                var result = rest(dataArr_n, trim);\n                result = initial(result, trim);\n                result = jStat.mean(result);\n                return result;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'PERCENTILE_EXC': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //定义相对位置的数组或数据区域\n                var data_dataArr = arguments[0];\n                var dataArr = [];\n                if (getObjType(data_dataArr) == 'array') {\n                    if (getObjType(data_dataArr[0]) == 'array' && !func_methods.isDyadicArr(data_dataArr)) {\n                        return formula.error.v;\n                    }\n                    dataArr = dataArr.concat(func_methods.getDataArr(data_dataArr, false));\n                } else if (getObjType(data_dataArr) == 'object' && data_dataArr.startCell != null) {\n                    dataArr = dataArr.concat(func_methods.getCellDataArr(data_dataArr, 'number', false));\n                } else {\n                    dataArr.push(data_dataArr);\n                }\n                var dataArr_n = [];\n                for (var i = 0; i < dataArr.length; i++) {\n                    var number = dataArr[i];\n                    if (isRealNum(number)) {\n                        dataArr_n.push(parseFloat(number));\n                    }\n                }    //0 到 1 之间的百分点值，不包含 0 和 1\n                //0 到 1 之间的百分点值，不包含 0 和 1\n                var k = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(k)) {\n                    return k;\n                }\n                if (!isRealNum(k)) {\n                    return formula.error.v;\n                }\n                k = parseFloat(k);\n                if (dataArr_n.length == 0) {\n                    return formula.error.nm;\n                }\n                if (k <= 0 || k >= 1) {\n                    return formula.error.nm;\n                }    //计算\n                //计算\n                dataArr_n = dataArr_n.sort(function (a, b) {\n                    return a - b;\n                });\n                var n = dataArr_n.length;\n                if (k < 1 / (n + 1) || k > 1 - 1 / (n + 1)) {\n                    return formula.error.nm;\n                }\n                var l = k * (n + 1) - 1;\n                var fl = Math.floor(l);\n                return l === fl ? dataArr_n[l] : dataArr_n[fl] + (l - fl) * (dataArr_n[fl + 1] - dataArr_n[fl]);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'PERCENTILE_INC': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //定义相对位置的数组或数据区域\n                var data_dataArr = arguments[0];\n                var dataArr = [];\n                if (getObjType(data_dataArr) == 'array') {\n                    if (getObjType(data_dataArr[0]) == 'array' && !func_methods.isDyadicArr(data_dataArr)) {\n                        return formula.error.v;\n                    }\n                    dataArr = dataArr.concat(func_methods.getDataArr(data_dataArr, false));\n                } else if (getObjType(data_dataArr) == 'object' && data_dataArr.startCell != null) {\n                    dataArr = dataArr.concat(func_methods.getCellDataArr(data_dataArr, 'number', false));\n                } else {\n                    dataArr.push(data_dataArr);\n                }\n                var dataArr_n = [];\n                for (var i = 0; i < dataArr.length; i++) {\n                    var number = dataArr[i];\n                    if (isRealNum(number)) {\n                        dataArr_n.push(parseFloat(number));\n                    }\n                }    //0 到 1 之间的百分点值，不包含 0 和 1\n                //0 到 1 之间的百分点值，不包含 0 和 1\n                var k = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(k)) {\n                    return k;\n                }\n                if (!isRealNum(k)) {\n                    return formula.error.v;\n                }\n                k = parseFloat(k);\n                if (dataArr_n.length == 0) {\n                    return formula.error.nm;\n                }\n                if (k < 0 || k > 1) {\n                    return formula.error.nm;\n                }    //计算\n                //计算\n                dataArr_n = dataArr_n.sort(function (a, b) {\n                    return a - b;\n                });\n                var n = dataArr_n.length;\n                var l = k * (n - 1);\n                var fl = Math.floor(l);\n                return l === fl ? dataArr_n[l] : dataArr_n[fl] + (l - fl) * (dataArr_n[fl + 1] - dataArr_n[fl]);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'PEARSON': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //代表自变量数据数组或矩阵的范围\n                var data_known_x = arguments[0];\n                var known_x = [];\n                if (getObjType(data_known_x) == 'array') {\n                    if (getObjType(data_known_x[0]) == 'array' && !func_methods.isDyadicArr(data_known_x)) {\n                        return formula.error.v;\n                    }\n                    known_x = known_x.concat(func_methods.getDataArr(data_known_x, false));\n                } else if (getObjType(data_known_x) == 'object' && data_known_x.startCell != null) {\n                    known_x = known_x.concat(func_methods.getCellDataArr(data_known_x, 'text', false));\n                } else {\n                    known_x.push(data_known_x);\n                }    //代表因变量数据数组或矩阵的范围\n                //代表因变量数据数组或矩阵的范围\n                var data_known_y = arguments[1];\n                var known_y = [];\n                if (getObjType(data_known_y) == 'array') {\n                    if (getObjType(data_known_y[0]) == 'array' && !func_methods.isDyadicArr(data_known_y)) {\n                        return formula.error.v;\n                    }\n                    known_y = known_y.concat(func_methods.getDataArr(data_known_y, false));\n                } else if (getObjType(data_known_y) == 'object' && data_known_y.startCell != null) {\n                    known_y = known_y.concat(func_methods.getCellDataArr(data_known_y, 'text', false));\n                } else {\n                    known_y.push(data_known_y);\n                }\n                if (known_x.length != known_y.length) {\n                    return formula.error.na;\n                }    //known_y 和 known_x 只取数值\n                //known_y 和 known_x 只取数值\n                var data_x = [], data_y = [];\n                for (var i = 0; i < known_x.length; i++) {\n                    var num_x = known_x[i];\n                    var num_y = known_y[i];\n                    if (isRealNum(num_x) && isRealNum(num_y)) {\n                        data_x.push(parseFloat(num_x));\n                        data_y.push(parseFloat(num_y));\n                    }\n                }\n                if (data_y.length == 0 || data_x.length == 0) {\n                    return formula.error.d;\n                }    //计算\n                //计算\n                var xmean = jStat.mean(data_x);\n                var ymean = jStat.mean(data_y);\n                var n = data_x.length;\n                var num = 0;\n                var den1 = 0;\n                var den2 = 0;\n                for (var i = 0; i < n; i++) {\n                    num += (data_x[i] - xmean) * (data_y[i] - ymean);\n                    den1 += Math.pow(data_x[i] - xmean, 2);\n                    den2 += Math.pow(data_y[i] - ymean, 2);\n                }\n                return num / Math.sqrt(den1 * den2);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'NORM_S_INV': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //对应于正态分布的概率\n                var probability = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(probability)) {\n                    return probability;\n                }\n                if (!isRealNum(probability)) {\n                    return formula.error.v;\n                }\n                probability = parseFloat(probability);\n                if (probability <= 0 || probability >= 1) {\n                    return formula.error.nm;\n                }\n                return jStat.normal.inv(probability, 0, 1);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'NORM_S_DIST': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //需要计算其分布的数值\n                var z = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(z)) {\n                    return z;\n                }\n                if (!isRealNum(z)) {\n                    return formula.error.v;\n                }\n                z = parseFloat(z);    //决定函数形式的逻辑值\n                //决定函数形式的逻辑值\n                var cumulative = func_methods.getCellBoolen(arguments[1]);\n                if (valueIsError(cumulative)) {\n                    return cumulative;\n                }\n                return cumulative ? jStat.normal.cdf(z, 0, 1) : jStat.normal.pdf(z, 0, 1);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'NORM_INV': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //对应于正态分布的概率\n                var probability = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(probability)) {\n                    return probability;\n                }\n                if (!isRealNum(probability)) {\n                    if (getObjType(probability) == 'boolean') {\n                        if (probability.toString().toLowerCase() == 'true') {\n                            probability = 1;\n                        } else if (probability.toString().toLowerCase() == 'false') {\n                            probability = 0;\n                        }\n                    } else {\n                        return formula.error.v;\n                    }\n                }\n                probability = parseFloat(probability);    //分布的算术平均值\n                //分布的算术平均值\n                var mean = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(mean)) {\n                    return mean;\n                }\n                if (!isRealNum(mean)) {\n                    if (getObjType(mean) == 'boolean') {\n                        if (mean.toString().toLowerCase() == 'true') {\n                            mean = 1;\n                        } else if (mean.toString().toLowerCase() == 'false') {\n                            mean = 0;\n                        }\n                    } else {\n                        return formula.error.v;\n                    }\n                }\n                mean = parseFloat(mean);    //分布的标准偏差\n                //分布的标准偏差\n                var standard_dev = func_methods.getFirstValue(arguments[2]);\n                if (valueIsError(standard_dev)) {\n                    return standard_dev;\n                }\n                if (!isRealNum(standard_dev)) {\n                    if (getObjType(standard_dev) == 'boolean') {\n                        if (standard_dev.toString().toLowerCase() == 'true') {\n                            standard_dev = 1;\n                        } else if (standard_dev.toString().toLowerCase() == 'false') {\n                            standard_dev = 0;\n                        }\n                    } else {\n                        return formula.error.v;\n                    }\n                }\n                standard_dev = parseFloat(standard_dev);\n                if (probability <= 0 || probability >= 1) {\n                    return formula.error.nm;\n                }\n                if (standard_dev <= 0) {\n                    return formula.error.nm;\n                }    //计算\n                //计算\n                return jStat.normal.inv(probability, mean, standard_dev);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'NORM_DIST': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //需要计算其分布的数值\n                var x = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(x)) {\n                    return x;\n                }\n                if (!isRealNum(x)) {\n                    if (getObjType(x) == 'boolean') {\n                        if (x.toString().toLowerCase() == 'true') {\n                            x = 1;\n                        } else if (x.toString().toLowerCase() == 'false') {\n                            x = 0;\n                        }\n                    } else {\n                        return formula.error.v;\n                    }\n                }\n                x = parseFloat(x);    //分布的算术平均值\n                //分布的算术平均值\n                var mean = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(mean)) {\n                    return mean;\n                }\n                if (!isRealNum(mean)) {\n                    return formula.error.v;\n                }\n                mean = parseFloat(mean);    //分布的标准偏差\n                //分布的标准偏差\n                var standard_dev = func_methods.getFirstValue(arguments[2]);\n                if (valueIsError(standard_dev)) {\n                    return standard_dev;\n                }\n                if (!isRealNum(standard_dev)) {\n                    return formula.error.v;\n                }\n                standard_dev = parseFloat(standard_dev);    //决定函数形式的逻辑值\n                //决定函数形式的逻辑值\n                var cumulative = func_methods.getCellBoolen(arguments[3]);\n                if (valueIsError(cumulative)) {\n                    return cumulative;\n                }\n                if (standard_dev <= 0) {\n                    return formula.error.nm;\n                }\n                return cumulative ? jStat.normal.cdf(x, mean, standard_dev) : jStat.normal.pdf(x, mean, standard_dev);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'NEGBINOM_DIST': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //要模拟的失败次数\n                var number_f = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number_f)) {\n                    return number_f;\n                }\n                if (!isRealNum(number_f)) {\n                    return formula.error.v;\n                }\n                number_f = parseInt(number_f);    //要模拟的成功次数\n                //要模拟的成功次数\n                var number_s = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(number_s)) {\n                    return number_s;\n                }\n                if (!isRealNum(number_s)) {\n                    return formula.error.v;\n                }\n                number_s = parseInt(number_s);    //任一次给定检验的成功概率\n                //任一次给定检验的成功概率\n                var probability_s = func_methods.getFirstValue(arguments[2]);\n                if (valueIsError(probability_s)) {\n                    return probability_s;\n                }\n                if (!isRealNum(probability_s)) {\n                    return formula.error.v;\n                }\n                probability_s = parseFloat(probability_s);    //决定函数形式的逻辑值\n                //决定函数形式的逻辑值\n                var cumulative = func_methods.getCellBoolen(arguments[3]);\n                if (valueIsError(cumulative)) {\n                    return cumulative;\n                }\n                if (probability_s < 0 || probability_s > 1) {\n                    return formula.error.nm;\n                }\n                if (number_f < 0 || number_s < 1) {\n                    return formula.error.nm;\n                }\n                return cumulative ? jStat.negbin.cdf(number_f, number_s, probability_s) : jStat.negbin.pdf(number_f, number_s, probability_s);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'MINA': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var dataArr = [];\n                for (var i = 0; i < arguments.length; i++) {\n                    var data = arguments[i];\n                    if (getObjType(data) == 'array') {\n                        if (getObjType(data[0]) == 'array' && !func_methods.isDyadicArr(data)) {\n                            return formula.error.v;\n                        }\n                        dataArr = dataArr.concat(func_methods.getDataArr(data, false));\n                    } else if (getObjType(data) == 'object' && data.startCell != null) {\n                        dataArr = dataArr.concat(func_methods.getCellDataArr(data, 'number', true));\n                    } else {\n                        if (number.toString.toLowerCase() == 'true') {\n                            dataArr.push(1);\n                        } else if (number.toString.toLowerCase() == 'false') {\n                            dataArr.push(0);\n                        } else if (isRealNum(data)) {\n                            dataArr.push(data);\n                        } else {\n                            return formula.error.v;\n                        }\n                    }\n                }\n                var dataArr_n = [];\n                for (var i = 0; i < dataArr.length; i++) {\n                    var number = dataArr[i];\n                    if (isRealNum(number)) {\n                        dataArr_n.push(parseFloat(number));\n                    } else {\n                        if (number.toString().toLowerCase() == 'true') {\n                            dataArr_n.push(1);\n                        } else {\n                            dataArr_n.push(0);\n                        }\n                    }\n                }\n                return dataArr_n.length === 0 ? 0 : Math.min.apply(Math, dataArr_n);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'MEDIAN': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var dataArr = [];\n                for (var i = 0; i < arguments.length; i++) {\n                    var data = arguments[i];\n                    if (getObjType(data) == 'array') {\n                        if (getObjType(data[0]) == 'array' && !func_methods.isDyadicArr(data)) {\n                            return formula.error.v;\n                        }\n                        dataArr = dataArr.concat(func_methods.getDataArr(data, true));\n                    } else if (getObjType(data) == 'object' && data.startCell != null) {\n                        dataArr = dataArr.concat(func_methods.getCellDataArr(data, 'number', true));\n                    } else {\n                        if (!isRealNum(data)) {\n                            return formula.error.v;\n                        }\n                        dataArr.push(data);\n                    }\n                }\n                var dataArr_n = [];\n                for (var i = 0; i < dataArr.length; i++) {\n                    var number = dataArr[i];\n                    if (isRealNum(number)) {\n                        dataArr_n.push(parseFloat(number));\n                    }\n                }\n                return jStat.median(dataArr_n);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'MAXA': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var dataArr = [];\n                for (var i = 0; i < arguments.length; i++) {\n                    var data = arguments[i];\n                    if (getObjType(data) == 'array') {\n                        if (getObjType(data[0]) == 'array' && !func_methods.isDyadicArr(data)) {\n                            return formula.error.v;\n                        }\n                        dataArr = dataArr.concat(func_methods.getDataArr(data, false));\n                    } else if (getObjType(data) == 'object' && data.startCell != null) {\n                        dataArr = dataArr.concat(func_methods.getCellDataArr(data, 'number', true));\n                    } else {\n                        if (number.toString.toLowerCase() == 'true') {\n                            dataArr.push(1);\n                        } else if (number.toString.toLowerCase() == 'false') {\n                            dataArr.push(0);\n                        } else if (isRealNum(data)) {\n                            dataArr.push(data);\n                        } else {\n                            return formula.error.v;\n                        }\n                    }\n                }\n                var dataArr_n = [];\n                for (var i = 0; i < dataArr.length; i++) {\n                    var number = dataArr[i];\n                    if (isRealNum(number)) {\n                        dataArr_n.push(parseFloat(number));\n                    } else {\n                        if (number.toString().toLowerCase() == 'true') {\n                            dataArr_n.push(1);\n                        } else {\n                            dataArr_n.push(0);\n                        }\n                    }\n                }\n                return dataArr_n.length === 0 ? 0 : Math.max.apply(Math, dataArr_n);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'LOGNORM_INV': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //与对数分布相关的概率\n                var probability = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(probability)) {\n                    return probability;\n                }\n                if (!isRealNum(probability)) {\n                    return formula.error.v;\n                }\n                probability = parseFloat(probability);    //ln(x) 的平均值\n                //ln(x) 的平均值\n                var mean = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(mean)) {\n                    return mean;\n                }\n                if (!isRealNum(mean)) {\n                    return formula.error.v;\n                }\n                mean = parseFloat(mean);    //ln(x) 的标准偏差\n                //ln(x) 的标准偏差\n                var standard_dev = func_methods.getFirstValue(arguments[2]);\n                if (valueIsError(standard_dev)) {\n                    return standard_dev;\n                }\n                if (!isRealNum(standard_dev)) {\n                    return formula.error.v;\n                }\n                standard_dev = parseFloat(standard_dev);\n                if (probability <= 0 || probability >= 1) {\n                    return formula.error.nm;\n                }\n                if (standard_dev <= 0) {\n                    return formula.error.nm;\n                }\n                return jStat.lognormal.inv(probability, mean, standard_dev);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'LOGNORM_DIST': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //与对数分布相关的概率\n                var x = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(x)) {\n                    return x;\n                }\n                if (!isRealNum(x)) {\n                    return formula.error.v;\n                }\n                x = parseFloat(x);    //ln(x) 的平均值\n                //ln(x) 的平均值\n                var mean = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(mean)) {\n                    return mean;\n                }\n                if (!isRealNum(mean)) {\n                    return formula.error.v;\n                }\n                mean = parseFloat(mean);    //ln(x) 的标准偏差\n                //ln(x) 的标准偏差\n                var standard_dev = func_methods.getFirstValue(arguments[2]);\n                if (valueIsError(standard_dev)) {\n                    return standard_dev;\n                }\n                if (!isRealNum(standard_dev)) {\n                    return formula.error.v;\n                }\n                standard_dev = parseFloat(standard_dev);    //决定函数形式的逻辑值\n                //决定函数形式的逻辑值\n                var cumulative = func_methods.getCellBoolen(arguments[3]);\n                if (valueIsError(cumulative)) {\n                    return cumulative;\n                }\n                if (x <= 0 || standard_dev <= 0) {\n                    return formula.error.nm;\n                }\n                return cumulative ? jStat.lognormal.cdf(x, mean, standard_dev) : jStat.lognormal.pdf(x, mean, standard_dev);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'Z_TEST': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //用来检验 x 的数组或数据区域\n                var dataArr = [];\n                if (getObjType(arguments[0]) == 'array') {\n                    if (getObjType(arguments[0][0]) == 'array' && !func_methods.isDyadicArr(arguments[0])) {\n                        return formula.error.v;\n                    }\n                    dataArr = dataArr.concat(func_methods.getDataArr(arguments[0], true));\n                } else if (getObjType(arguments[0]) == 'object' && arguments[0].startCell != null) {\n                    dataArr = dataArr.concat(func_methods.getCellDataArr(arguments[0], 'text', true));\n                } else {\n                    dataArr.push(arguments[0]);\n                }\n                var dataArr_n = [];\n                for (var j = 0; j < dataArr.length; j++) {\n                    var number = dataArr[j];\n                    if (isRealNum(number)) {\n                        dataArr_n.push(parseFloat(number));\n                    }\n                }    //要测试的值\n                //要测试的值\n                var x = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(x)) {\n                    return x;\n                }\n                if (!isRealNum(x)) {\n                    return formula.error.v;\n                }\n                x = parseFloat(x);\n                if (dataArr_n.length == 0) {\n                    return formula.error.na;\n                }    //总体（已知）标准偏差。 如果省略，则使用样本标准偏差\n                //总体（已知）标准偏差。 如果省略，则使用样本标准偏差\n                var sigma = func_methods.standardDeviation_s(dataArr_n);\n                if (arguments.length == 3) {\n                    sigma = func_methods.getFirstValue(arguments[2]);\n                    if (valueIsError(sigma)) {\n                        return sigma;\n                    }\n                    if (!isRealNum(sigma)) {\n                        return formula.error.v;\n                    }\n                    sigma = parseFloat(sigma);\n                }    //计算\n                //计算\n                var n = dataArr_n.length;\n                var mean = window.luckysheet_function.AVERAGE.f.apply(window.luckysheet_function.AVERAGE, dataArr_n);\n                return 1 - window.luckysheet_function.NORM_S_DIST.f((mean - x) / (sigma / Math.sqrt(n)), 'true');\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'PROB': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //x_range\n                var data_x_range = [];\n                if (getObjType(arguments[0]) == 'array') {\n                    if (getObjType(arguments[0][0]) == 'array' && !func_methods.isDyadicArr(arguments[0])) {\n                        return formula.error.v;\n                    }\n                    data_x_range = data_x_range.concat(func_methods.getDataArr(arguments[0], false));\n                } else if (getObjType(arguments[0]) == 'object' && arguments[0].startCell != null) {\n                    data_x_range = data_x_range.concat(func_methods.getCellDataArr(arguments[0], 'text', false));\n                } else {\n                    data_x_range.push(arguments[0]);\n                }    //prob_range\n                //prob_range\n                var data_prob_range = [];\n                if (getObjType(arguments[1]) == 'array') {\n                    if (getObjType(arguments[1][0]) == 'array' && !func_methods.isDyadicArr(arguments[1])) {\n                        return formula.error.v;\n                    }\n                    data_prob_range = data_prob_range.concat(func_methods.getDataArr(arguments[1], false));\n                } else if (getObjType(arguments[1]) == 'object' && arguments[1].startCell != null) {\n                    data_prob_range = data_prob_range.concat(func_methods.getCellDataArr(arguments[1], 'text', false));\n                } else {\n                    data_prob_range.push(arguments[1]);\n                }\n                if (data_x_range.length != data_prob_range.length) {\n                    return formula.error.na;\n                }    //data_x_range 和 data_prob_range 只取数值\n                //data_x_range 和 data_prob_range 只取数值\n                var x_range = [], prob_range = [], prob_range_sum = 0;\n                for (var i = 0; i < data_x_range.length; i++) {\n                    var num_x_range = data_x_range[i];\n                    var num_prob_range = data_prob_range[i];\n                    if (isRealNum(num_x_range) && isRealNum(num_prob_range)) {\n                        x_range.push(parseFloat(num_x_range));\n                        prob_range.push(parseFloat(num_prob_range));\n                        prob_range_sum += parseFloat(num_prob_range);\n                        if (parseFloat(num_prob_range) <= 0 || parseFloat(num_prob_range) > 1) {\n                            return formula.error.nm;\n                        }\n                    }\n                }\n                if (prob_range_sum != 1) {\n                    return formula.error.nm;\n                }    //要计算其概率的数值下界\n                //要计算其概率的数值下界\n                var lower_limit = func_methods.getFirstValue(arguments[2]);\n                if (valueIsError(lower_limit)) {\n                    return lower_limit;\n                }\n                if (!isRealNum(lower_limit)) {\n                    return formula.error.v;\n                }\n                lower_limit = parseFloat(lower_limit);    //要计算其概率的数值上界\n                //要计算其概率的数值上界\n                var upper_limit = lower_limit;\n                if (arguments.length == 4) {\n                    upper_limit = func_methods.getFirstValue(arguments[3]);\n                    if (valueIsError(upper_limit)) {\n                        return upper_limit;\n                    }\n                    if (!isRealNum(upper_limit)) {\n                        return formula.error.v;\n                    }\n                    upper_limit = parseFloat(upper_limit);\n                }    //计算\n                //计算\n                var result = 0;\n                for (var i = 0; i < x_range.length; i++) {\n                    if (x_range[i] >= lower_limit && x_range[i] <= upper_limit) {\n                        result += prob_range[i];\n                    }\n                }\n                return result;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'QUARTILE_EXC': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //要求得四分位数值的数组或数字型单元格区域\n                var data_array = [];\n                if (getObjType(arguments[0]) == 'array') {\n                    if (getObjType(arguments[0][0]) == 'array' && !func_methods.isDyadicArr(arguments[0])) {\n                        return formula.error.v;\n                    }\n                    data_array = data_array.concat(func_methods.getDataArr(arguments[0], true));\n                } else if (getObjType(arguments[0]) == 'object' && arguments[0].startCell != null) {\n                    data_array = data_array.concat(func_methods.getCellDataArr(arguments[0], 'text', true));\n                } else {\n                    if (!isRealNum(arguments[0])) {\n                        return formula.error.v;\n                    }\n                    data_array.push(arguments[0]);\n                }\n                var array = [];\n                for (var i = 0; i < data_array.length; i++) {\n                    var number = data_array[i];\n                    if (isRealNum(number)) {\n                        array.push(parseFloat(number));\n                    }\n                }    //要返回第几个四分位值\n                //要返回第几个四分位值\n                var quart = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(quart)) {\n                    return quart;\n                }\n                if (!isRealNum(quart)) {\n                    return formula.error.v;\n                }\n                quart = parseInt(quart);\n                if (array.length == 0) {\n                    return formula.error.nm;\n                }\n                if (quart <= 0 || quart >= 4) {\n                    return formula.error.nm;\n                }    //计算\n                //计算\n                switch (quart) {\n                case 1:\n                    return window.luckysheet_function.PERCENTILE_EXC.f(array, 0.25);\n                case 2:\n                    return window.luckysheet_function.PERCENTILE_EXC.f(array, 0.5);\n                case 3:\n                    return window.luckysheet_function.PERCENTILE_EXC.f(array, 0.75);\n                }\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'QUARTILE_INC': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //要求得四分位数值的数组或数字型单元格区域\n                var data_array = [];\n                if (getObjType(arguments[0]) == 'array') {\n                    if (getObjType(arguments[0][0]) == 'array' && !func_methods.isDyadicArr(arguments[0])) {\n                        return formula.error.v;\n                    }\n                    data_array = data_array.concat(func_methods.getDataArr(arguments[0], true));\n                } else if (getObjType(arguments[0]) == 'object' && arguments[0].startCell != null) {\n                    data_array = data_array.concat(func_methods.getCellDataArr(arguments[0], 'text', true));\n                } else {\n                    if (!isRealNum(arguments[0])) {\n                        return formula.error.v;\n                    }\n                    data_array.push(arguments[0]);\n                }\n                var array = [];\n                for (var i = 0; i < data_array.length; i++) {\n                    var number = data_array[i];\n                    if (isRealNum(number)) {\n                        array.push(parseFloat(number));\n                    }\n                }    //要返回第几个四分位值\n                //要返回第几个四分位值\n                var quart = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(quart)) {\n                    return quart;\n                }\n                if (!isRealNum(quart)) {\n                    return formula.error.v;\n                }\n                quart = parseInt(quart);\n                if (array.length == 0) {\n                    return formula.error.nm;\n                }\n                if (quart < 0 || quart > 4) {\n                    return formula.error.nm;\n                }    //计算\n                //计算\n                switch (quart) {\n                case 0:\n                    return Math.min.apply(Math, array);\n                case 1:\n                    return window.luckysheet_function.PERCENTILE_INC.f(array, 0.25);\n                case 2:\n                    return window.luckysheet_function.PERCENTILE_INC.f(array, 0.5);\n                case 3:\n                    return window.luckysheet_function.PERCENTILE_INC.f(array, 0.75);\n                case 4:\n                    return Math.max.apply(Math, array);\n                }\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'POISSON_DIST': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //事件数\n                var x = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(x)) {\n                    return x;\n                }\n                if (!isRealNum(x)) {\n                    return formula.error.v;\n                }\n                x = parseInt(x);    //期望值\n                //期望值\n                var mean = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(mean)) {\n                    return mean;\n                }\n                if (!isRealNum(mean)) {\n                    return formula.error.v;\n                }\n                mean = parseFloat(mean);    //决定函数形式的逻辑值\n                //决定函数形式的逻辑值\n                var cumulative = func_methods.getCellBoolen(arguments[2]);\n                if (valueIsError(cumulative)) {\n                    return cumulative;\n                }\n                if (x < 0 || mean < 0) {\n                    return formula.error.nm;\n                }\n                return cumulative ? jStat.poisson.cdf(x, mean) : jStat.poisson.pdf(x, mean);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'RSQ': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //代表因变量数据数组或矩阵的范围\n                var data_known_y = arguments[0];\n                var known_y = [];\n                if (getObjType(data_known_y) == 'array') {\n                    if (getObjType(data_known_y[0]) == 'array' && !func_methods.isDyadicArr(data_known_y)) {\n                        return formula.error.v;\n                    }\n                    known_y = known_y.concat(func_methods.getDataArr(data_known_y, false));\n                } else if (getObjType(data_known_y) == 'object' && data_known_y.startCell != null) {\n                    known_y = known_y.concat(func_methods.getCellDataArr(data_known_y, 'text', false));\n                } else {\n                    if (!isRealNum(data_known_y)) {\n                        return formula.error.v;\n                    }\n                    known_y.push(data_known_y);\n                }    //代表自变量数据数组或矩阵的范围\n                //代表自变量数据数组或矩阵的范围\n                var data_known_x = arguments[1];\n                var known_x = [];\n                if (getObjType(data_known_x) == 'array') {\n                    if (getObjType(data_known_x[0]) == 'array' && !func_methods.isDyadicArr(data_known_x)) {\n                        return formula.error.v;\n                    }\n                    known_x = known_x.concat(func_methods.getDataArr(data_known_x, false));\n                } else if (getObjType(data_known_x) == 'object' && data_known_x.startCell != null) {\n                    known_x = known_x.concat(func_methods.getCellDataArr(data_known_x, 'text', false));\n                } else {\n                    if (!isRealNum(data_known_x)) {\n                        return formula.error.v;\n                    }\n                    known_x.push(data_known_x);\n                }\n                if (known_y.length != known_x.length) {\n                    return formula.error.na;\n                }    //known_y 和 known_x 只取数值\n                //known_y 和 known_x 只取数值\n                var data_y = [], data_x = [];\n                for (var i = 0; i < known_y.length; i++) {\n                    var num_y = known_y[i];\n                    var num_x = known_x[i];\n                    if (isRealNum(num_y) && isRealNum(num_x)) {\n                        data_y.push(parseFloat(num_y));\n                        data_x.push(parseFloat(num_x));\n                    }\n                }\n                if (data_y.length == 0 || data_x.length == 0) {\n                    return formula.error.d;\n                }\n                return Math.pow(window.luckysheet_function.PEARSON.f(data_y, data_x), 2);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'T_DIST': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //T-分布函数的输入\n                var x = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(x)) {\n                    return x;\n                }\n                if (!isRealNum(x)) {\n                    return formula.error.v;\n                }\n                x = parseFloat(x);    //自由度数值\n                //自由度数值\n                var degrees_freedom = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(degrees_freedom)) {\n                    return degrees_freedom;\n                }\n                if (!isRealNum(degrees_freedom)) {\n                    return formula.error.v;\n                }\n                degrees_freedom = parseInt(degrees_freedom);    //决定函数形式的逻辑值\n                //决定函数形式的逻辑值\n                var cumulative = func_methods.getCellBoolen(arguments[2]);\n                if (valueIsError(cumulative)) {\n                    return cumulative;\n                }\n                if (degrees_freedom < 1) {\n                    return formula.error.nm;\n                }\n                return cumulative ? jStat.studentt.cdf(x, degrees_freedom) : jStat.studentt.pdf(x, degrees_freedom);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'T_DIST_2T': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //T-分布函数的输入\n                var x = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(x)) {\n                    return x;\n                }\n                if (!isRealNum(x)) {\n                    return formula.error.v;\n                }\n                x = parseFloat(x);    //自由度数值\n                //自由度数值\n                var degrees_freedom = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(degrees_freedom)) {\n                    return degrees_freedom;\n                }\n                if (!isRealNum(degrees_freedom)) {\n                    return formula.error.v;\n                }\n                degrees_freedom = parseInt(degrees_freedom);\n                if (x < 0 || degrees_freedom < 1) {\n                    return formula.error.nm;\n                }\n                return (1 - jStat.studentt.cdf(x, degrees_freedom)) * 2;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'T_DIST_RT': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //T-分布函数的输入\n                var x = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(x)) {\n                    return x;\n                }\n                if (!isRealNum(x)) {\n                    return formula.error.v;\n                }\n                x = parseFloat(x);    //自由度数值\n                //自由度数值\n                var degrees_freedom = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(degrees_freedom)) {\n                    return degrees_freedom;\n                }\n                if (!isRealNum(degrees_freedom)) {\n                    return formula.error.v;\n                }\n                degrees_freedom = parseInt(degrees_freedom);\n                if (degrees_freedom < 1) {\n                    return formula.error.nm;\n                }\n                return 1 - jStat.studentt.cdf(x, degrees_freedom);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'T_INV': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //与学生的 t 分布相关的概率\n                var probability = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(probability)) {\n                    return probability;\n                }\n                if (!isRealNum(probability)) {\n                    return formula.error.v;\n                }\n                probability = parseFloat(probability);    //自由度数值\n                //自由度数值\n                var deg_freedom = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(deg_freedom)) {\n                    return deg_freedom;\n                }\n                if (!isRealNum(deg_freedom)) {\n                    return formula.error.v;\n                }\n                deg_freedom = parseInt(deg_freedom);\n                if (probability <= 0 || probability > 1) {\n                    return formula.error.nm;\n                }\n                if (deg_freedom < 1) {\n                    return formula.error.nm;\n                }\n                return jStat.studentt.inv(probability, deg_freedom);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'T_INV_2T': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //与学生的 t 分布相关的概率\n                var probability = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(probability)) {\n                    return probability;\n                }\n                if (!isRealNum(probability)) {\n                    return formula.error.v;\n                }\n                probability = parseFloat(probability);    //自由度数值\n                //自由度数值\n                var deg_freedom = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(deg_freedom)) {\n                    return deg_freedom;\n                }\n                if (!isRealNum(deg_freedom)) {\n                    return formula.error.v;\n                }\n                deg_freedom = parseInt(deg_freedom);\n                if (probability <= 0 || probability > 1) {\n                    return formula.error.nm;\n                }\n                if (deg_freedom < 1) {\n                    return formula.error.nm;\n                }\n                return Math.abs(jStat.studentt.inv(probability / 2, deg_freedom));\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'T_TEST': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //第一个数据集\n                var known_x = [];\n                if (getObjType(arguments[0]) == 'array') {\n                    if (getObjType(arguments[0][0]) == 'array' && !func_methods.isDyadicArr(arguments[0])) {\n                        return formula.error.v;\n                    }\n                    known_x = known_x.concat(func_methods.getDataArr(arguments[0], false));\n                } else if (getObjType(arguments[0]) == 'object' && arguments[0].startCell != null) {\n                    known_x = known_x.concat(func_methods.getCellDataArr(arguments[0], 'text', false));\n                } else {\n                    if (!isRealNum(arguments[0])) {\n                        return formula.error.v;\n                    }\n                    known_x.push(arguments[0]);\n                }    // var data_x = [];\n                // var data_x = [];\n                var data_x = known_x;    //第二个数据集\n                //第二个数据集\n                var known_y = [];\n                if (getObjType(arguments[1]) == 'array') {\n                    if (getObjType(arguments[1][0]) == 'array' && !func_methods.isDyadicArr(arguments[1])) {\n                        return formula.error.v;\n                    }\n                    known_y = known_y.concat(func_methods.getDataArr(arguments[1], false));\n                } else if (getObjType(arguments[1]) == 'object' && arguments[1].startCell != null) {\n                    known_y = known_y.concat(func_methods.getCellDataArr(arguments[1], 'text', false));\n                } else {\n                    if (!isRealNum(arguments[1])) {\n                        return formula.error.v;\n                    }\n                    known_y.push(arguments[1]);\n                }    // var data_y = [];\n                // var data_y = [];\n                var data_y = known_y;    //指定分布的尾数\n                //指定分布的尾数\n                var tails = func_methods.getFirstValue(arguments[2]);\n                if (valueIsError(tails)) {\n                    return tails;\n                }\n                if (!isRealNum(tails)) {\n                    return formula.error.v;\n                }\n                tails = parseInt(tails);    //指定 t 检验的类型\n                //指定 t 检验的类型\n                var type = func_methods.getFirstValue(arguments[3]);\n                if (valueIsError(type)) {\n                    return type;\n                }\n                if (!isRealNum(type)) {\n                    return formula.error.v;\n                }\n                type = parseInt(type);\n                if ([\n                        1,\n                        2\n                    ].indexOf(tails) == -1) {\n                    return formula.error.nm;\n                }\n                if ([\n                        1,\n                        2,\n                        3\n                    ].indexOf(type) == -1) {\n                    return formula.error.nm;\n                }    //计算\n                //计算\n                var t = null, df = null;\n                if (type == 1) {\n                    var diff_arr = [];\n                    for (i = 0; i < data_x.length; i++) {\n                        diff_arr.push(data_x[i] - data_y[i]);\n                    }\n                    var diff_mean = Math.abs(jStat.mean(diff_arr));\n                    var diff_sd = func_methods.standardDeviation_s(diff_arr);\n                    t = diff_mean / (diff_sd / Math.sqrt(data_x.length));\n                    df = data_x.length - 1;\n                } else {\n                    var mean_x = jStat.mean(data_x);\n                    var mean_y = jStat.mean(data_y);\n                    var s_x = func_methods.variance_s(data_x);\n                    var s_y = func_methods.variance_s(data_y);\n                    t = Math.abs(mean_x - mean_y) / Math.sqrt(s_x / data_x.length + s_y / data_y.length);\n                    switch (type) {\n                    case 2:\n                        df = data_x.length + data_y.length - 2;\n                        break;\n                    case 3:\n                        df = Math.pow(s_x / data_x.length + s_y / data_y.length, 2) / (Math.pow(s_x / data_x.length, 2) / (data_x.length - 1) + Math.pow(s_y / data_y.length, 2) / (data_y.length - 1));\n                        break;\n                    }\n                }\n                if (tails == 1) {\n                    var result = window.luckysheet_function.T_DIST_RT.f(t, df);\n                } else if (tails == 2) {\n                    var result = window.luckysheet_function.T_DIST_2T.f(t, df);\n                }\n                return result;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'F_DIST': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //用来计算函数的值\n                var x = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(x)) {\n                    return x;\n                }\n                if (!isRealNum(x)) {\n                    return formula.error.v;\n                }\n                x = parseFloat(x);    //分子自由度\n                //分子自由度\n                var degrees_freedom1 = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(degrees_freedom1)) {\n                    return degrees_freedom1;\n                }\n                if (!isRealNum(degrees_freedom1)) {\n                    return formula.error.v;\n                }\n                degrees_freedom1 = parseInt(degrees_freedom1);    //分母自由度\n                //分母自由度\n                var degrees_freedom2 = func_methods.getFirstValue(arguments[2]);\n                if (valueIsError(degrees_freedom2)) {\n                    return degrees_freedom2;\n                }\n                if (!isRealNum(degrees_freedom2)) {\n                    return formula.error.v;\n                }\n                degrees_freedom2 = parseInt(degrees_freedom2);    //用于确定函数形式的逻辑值\n                //用于确定函数形式的逻辑值\n                var cumulative = func_methods.getCellBoolen(arguments[3]);\n                if (valueIsError(cumulative)) {\n                    return cumulative;\n                }\n                if (x < 0) {\n                    return formula.error.nm;\n                }\n                if (degrees_freedom1 < 1) {\n                    return formula.error.nm;\n                }\n                if (degrees_freedom2 < 1) {\n                    return formula.error.nm;\n                }\n                return cumulative ? jStat.centralF.cdf(x, degrees_freedom1, degrees_freedom2) : jStat.centralF.pdf(x, degrees_freedom1, degrees_freedom2);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'F_DIST_RT': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //用来计算函数的值\n                var x = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(x)) {\n                    return x;\n                }\n                if (!isRealNum(x)) {\n                    return formula.error.v;\n                }\n                x = parseFloat(x);    //分子自由度\n                //分子自由度\n                var degrees_freedom1 = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(degrees_freedom1)) {\n                    return degrees_freedom1;\n                }\n                if (!isRealNum(degrees_freedom1)) {\n                    return formula.error.v;\n                }\n                degrees_freedom1 = parseInt(degrees_freedom1);    //分母自由度\n                //分母自由度\n                var degrees_freedom2 = func_methods.getFirstValue(arguments[2]);\n                if (valueIsError(degrees_freedom2)) {\n                    return degrees_freedom2;\n                }\n                if (!isRealNum(degrees_freedom2)) {\n                    return formula.error.v;\n                }\n                degrees_freedom2 = parseInt(degrees_freedom2);\n                if (x < 0) {\n                    return formula.error.nm;\n                }\n                if (degrees_freedom1 < 1) {\n                    return formula.error.nm;\n                }\n                if (degrees_freedom2 < 1) {\n                    return formula.error.nm;\n                }\n                return 1 - jStat.centralF.cdf(x, degrees_freedom1, degrees_freedom2);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'VAR_P': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var dataArr = [];\n                for (var i = 0; i < arguments.length; i++) {\n                    var data = arguments[i];\n                    if (getObjType(data) == 'array') {\n                        if (getObjType(data[0]) == 'array' && !func_methods.isDyadicArr(data)) {\n                            return formula.error.v;\n                        }\n                        dataArr = dataArr.concat(func_methods.getDataArr(data, true));\n                    } else if (getObjType(data) == 'object' && data.startCell != null) {\n                        dataArr = dataArr.concat(func_methods.getCellDataArr(data, 'number', true));\n                    } else {\n                        if (!isRealNum(data)) {\n                            return formula.error.v;\n                        }\n                        dataArr.push(data);\n                    }\n                }\n                var dataArr_n = [];\n                for (var i = 0; i < dataArr.length; i++) {\n                    var number = dataArr[i];\n                    if (isRealNum(number)) {\n                        dataArr_n.push(parseFloat(number));\n                    }\n                }\n                if (dataArr_n.length == 0) {\n                    return formula.error.d;\n                }\n                var n = dataArr_n.length;\n                var sigma = 0;\n                var mean = window.luckysheet_function.AVERAGE.f.apply(window.luckysheet_function.AVERAGE, dataArr_n);\n                for (var i = 0; i < n; i++) {\n                    sigma += Math.pow(dataArr_n[i] - mean, 2);\n                }\n                return sigma / n;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'VAR_S': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var dataArr = [];\n                for (var i = 0; i < arguments.length; i++) {\n                    var data = arguments[i];\n                    if (getObjType(data) == 'array') {\n                        if (getObjType(data[0]) == 'array' && !func_methods.isDyadicArr(data)) {\n                            return formula.error.v;\n                        }\n                        dataArr = dataArr.concat(func_methods.getDataArr(data, true));\n                    } else if (getObjType(data) == 'object' && data.startCell != null) {\n                        dataArr = dataArr.concat(func_methods.getCellDataArr(data, 'number', true));\n                    } else {\n                        if (!isRealNum(data)) {\n                            return formula.error.v;\n                        }\n                        dataArr.push(data);\n                    }\n                }\n                var dataArr_n = [];\n                for (var i = 0; i < dataArr.length; i++) {\n                    var number = dataArr[i];\n                    if (isRealNum(number)) {\n                        dataArr_n.push(parseFloat(number));\n                    }\n                }\n                if (dataArr_n.length == 0) {\n                    return formula.error.d;\n                }\n                var n = dataArr_n.length;\n                var sigma = 0;\n                var mean = window.luckysheet_function.AVERAGE.f.apply(window.luckysheet_function.AVERAGE, dataArr_n);\n                for (var i = 0; i < n; i++) {\n                    sigma += Math.pow(dataArr_n[i] - mean, 2);\n                }\n                return sigma / (n - 1);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'VARA': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var dataArr = [];\n                for (var i = 0; i < arguments.length; i++) {\n                    var data = arguments[i];\n                    if (getObjType(data) == 'array') {\n                        if (getObjType(data[0]) == 'array' && !func_methods.isDyadicArr(data)) {\n                            return formula.error.v;\n                        }\n                        dataArr = dataArr.concat(func_methods.getDataArr(data, false));\n                    } else if (getObjType(data) == 'object' && data.startCell != null) {\n                        dataArr = dataArr.concat(func_methods.getCellDataArr(data, 'number', true));\n                    } else {\n                        if (number.toString.toLowerCase() == 'true') {\n                            dataArr.push(1);\n                        } else if (number.toString.toLowerCase() == 'false') {\n                            dataArr.push(0);\n                        } else if (isRealNum(data)) {\n                            dataArr.push(data);\n                        } else {\n                            return formula.error.v;\n                        }\n                    }\n                }\n                var dataArr_n = [];\n                for (var i = 0; i < dataArr.length; i++) {\n                    var number = dataArr[i];\n                    if (isRealNum(number)) {\n                        dataArr_n.push(parseFloat(number));\n                    } else {\n                        if (number.toString().toLowerCase() == 'true') {\n                            dataArr_n.push(1);\n                        } else {\n                            dataArr_n.push(0);\n                        }\n                    }\n                }\n                var n = dataArr_n.length;\n                var sigma = 0;\n                var mean = window.luckysheet_function.AVERAGE.f.apply(window.luckysheet_function.AVERAGE, dataArr_n);\n                for (var i = 0; i < n; i++) {\n                    sigma += Math.pow(dataArr_n[i] - mean, 2);\n                }\n                return sigma / (n - 1);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'VARPA': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var dataArr = [];\n                for (var i = 0; i < arguments.length; i++) {\n                    var data = arguments[i];\n                    if (getObjType(data) == 'array') {\n                        if (getObjType(data[0]) == 'array' && !func_methods.isDyadicArr(data)) {\n                            return formula.error.v;\n                        }\n                        dataArr = dataArr.concat(func_methods.getDataArr(data, false));\n                    } else if (getObjType(data) == 'object' && data.startCell != null) {\n                        dataArr = dataArr.concat(func_methods.getCellDataArr(data, 'number', true));\n                    } else {\n                        if (number.toString.toLowerCase() == 'true') {\n                            dataArr.push(1);\n                        } else if (number.toString.toLowerCase() == 'false') {\n                            dataArr.push(0);\n                        } else if (isRealNum(data)) {\n                            dataArr.push(data);\n                        } else {\n                            return formula.error.v;\n                        }\n                    }\n                }\n                var dataArr_n = [];\n                for (var i = 0; i < dataArr.length; i++) {\n                    var number = dataArr[i];\n                    if (isRealNum(number)) {\n                        dataArr_n.push(parseFloat(number));\n                    } else {\n                        if (number.toString().toLowerCase() == 'true') {\n                            dataArr_n.push(1);\n                        } else {\n                            dataArr_n.push(0);\n                        }\n                    }\n                }\n                var n = dataArr_n.length;\n                var sigma = 0;\n                var mean = window.luckysheet_function.AVERAGE.f.apply(window.luckysheet_function.AVERAGE, dataArr_n);\n                for (var i = 0; i < n; i++) {\n                    sigma += Math.pow(dataArr_n[i] - mean, 2);\n                }\n                return sigma / n;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'STEYX': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //代表因变量数据数组或矩阵的范围\n                var known_y = [];\n                if (getObjType(arguments[0]) == 'array') {\n                    if (getObjType(arguments[0][0]) == 'array' && !func_methods.isDyadicArr(arguments[0])) {\n                        return formula.error.v;\n                    }\n                    known_y = known_y.concat(func_methods.getDataArr(arguments[0], false));\n                } else if (getObjType(arguments[0]) == 'object' && arguments[0].startCell != null) {\n                    known_y = known_y.concat(func_methods.getCellDataArr(arguments[0], 'text', false));\n                } else {\n                    if (!isRealNum(arguments[0])) {\n                        return formula.error.v;\n                    }\n                    known_y.push(arguments[0]);\n                }    //代表自变量数据数组或矩阵的范围\n                //代表自变量数据数组或矩阵的范围\n                var known_x = [];\n                if (getObjType(arguments[1]) == 'array') {\n                    if (getObjType(arguments[1][0]) == 'array' && !func_methods.isDyadicArr(arguments[1])) {\n                        return formula.error.v;\n                    }\n                    known_x = known_x.concat(func_methods.getDataArr(arguments[1], false));\n                } else if (getObjType(arguments[1]) == 'object' && arguments[1].startCell != null) {\n                    known_x = known_x.concat(func_methods.getCellDataArr(arguments[1], 'text', false));\n                } else {\n                    if (!isRealNum(arguments[1])) {\n                        return formula.error.v;\n                    }\n                    known_x.push(arguments[1]);\n                }\n                if (known_y.length != known_x.length) {\n                    return formula.error.na;\n                }    //known_y 和 known_x 只取数值\n                //known_y 和 known_x 只取数值\n                var data_y = [], data_x = [];\n                for (var i = 0; i < known_y.length; i++) {\n                    var num_y = known_y[i];\n                    var num_x = known_x[i];\n                    if (isRealNum(num_y) && isRealNum(num_x)) {\n                        data_y.push(parseFloat(num_y));\n                        data_x.push(parseFloat(num_x));\n                    }\n                }\n                if (data_y.length < 3 || data_x.length < 3) {\n                    return formula.error.d;\n                }    //计算\n                //计算\n                var xmean = jStat.mean(data_x);\n                var ymean = jStat.mean(data_y);\n                var n = data_x.length;\n                var lft = 0;\n                var num = 0;\n                var den = 0;\n                for (var i = 0; i < n; i++) {\n                    lft += Math.pow(data_y[i] - ymean, 2);\n                    num += (data_x[i] - xmean) * (data_y[i] - ymean);\n                    den += Math.pow(data_x[i] - xmean, 2);\n                }\n                return Math.sqrt((lft - num * num / den) / (n - 2));\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'STANDARDIZE': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //要正态化的随机变量值\n                var x = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(x)) {\n                    return x;\n                }\n                if (!isRealNum(x)) {\n                    return formula.error.v;\n                }\n                x = parseFloat(x);    //分布的均值\n                //分布的均值\n                var mean = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(mean)) {\n                    return mean;\n                }\n                if (!isRealNum(mean)) {\n                    return formula.error.v;\n                }\n                mean = parseFloat(mean);    //分布的标准偏差\n                //分布的标准偏差\n                var standard_dev = func_methods.getFirstValue(arguments[2]);\n                if (valueIsError(standard_dev)) {\n                    return standard_dev;\n                }\n                if (!isRealNum(standard_dev)) {\n                    return formula.error.v;\n                }\n                standard_dev = parseFloat(standard_dev);\n                if (standard_dev <= 0) {\n                    return formula.error.nm;\n                }\n                return (x - mean) / standard_dev;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'SMALL': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //要正态化的随机变量值\n                var dataArr = [];\n                if (getObjType(arguments[0]) == 'array') {\n                    if (getObjType(arguments[0][0]) == 'array' && !func_methods.isDyadicArr(arguments[0])) {\n                        return formula.error.v;\n                    }\n                    dataArr = dataArr.concat(func_methods.getDataArr(arguments[0], true));\n                } else if (getObjType(arguments[0]) == 'object' && arguments[0].startCell != null) {\n                    dataArr = dataArr.concat(func_methods.getCellDataArr(arguments[0], 'number', true));\n                } else {\n                    if (!isRealNum(arguments[0])) {\n                        return formula.error.v;\n                    }\n                    dataArr.push(arguments[0]);\n                }\n                var dataArr_n = [];\n                for (var i = 0; i < dataArr.length; i++) {\n                    var number = dataArr[i];\n                    if (isRealNum(number)) {\n                        dataArr_n.push(parseFloat(number));\n                    }\n                }    //要返回的数据在数组或数据区域里的位置（从小到大）\n                //要返回的数据在数组或数据区域里的位置（从小到大）\n                var k = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(k)) {\n                    return k;\n                }\n                if (!isRealNum(k)) {\n                    return formula.error.v;\n                }\n                k = parseInt(k);\n                if (dataArr_n.length == 0) {\n                    return formula.error.nm;\n                }\n                if (k <= 0 || k > dataArr_n.length) {\n                    return formula.error.nm;\n                }    //计算\n                //计算\n                return dataArr_n.sort(function (a, b) {\n                    return a - b;\n                })[k - 1];\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'SLOPE': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //代表因变量数据数组或矩阵的范围\n                var known_y = [];\n                if (getObjType(arguments[0]) == 'array') {\n                    if (getObjType(arguments[0][0]) == 'array' && !func_methods.isDyadicArr(arguments[0])) {\n                        return formula.error.v;\n                    }\n                    known_y = known_y.concat(func_methods.getDataArr(arguments[0], false));\n                } else if (getObjType(arguments[0]) == 'object' && arguments[0].startCell != null) {\n                    known_y = known_y.concat(func_methods.getCellDataArr(arguments[0], 'text', false));\n                } else {\n                    if (!isRealNum(arguments[0])) {\n                        return formula.error.v;\n                    }\n                    known_y.push(arguments[0]);\n                }    //代表自变量数据数组或矩阵的范围\n                //代表自变量数据数组或矩阵的范围\n                var known_x = [];\n                if (getObjType(arguments[1]) == 'array') {\n                    if (getObjType(arguments[1][0]) == 'array' && !func_methods.isDyadicArr(arguments[1])) {\n                        return formula.error.v;\n                    }\n                    known_x = known_x.concat(func_methods.getDataArr(arguments[1], false));\n                } else if (getObjType(arguments[1]) == 'object' && arguments[1].startCell != null) {\n                    known_x = known_x.concat(func_methods.getCellDataArr(arguments[1], 'text', false));\n                } else {\n                    if (!isRealNum(arguments[1])) {\n                        return formula.error.v;\n                    }\n                    known_x.push(arguments[1]);\n                }\n                if (known_y.length != known_x.length) {\n                    return formula.error.na;\n                }    //known_y 和 known_x 只取数值\n                //known_y 和 known_x 只取数值\n                var data_y = [], data_x = [];\n                for (var i = 0; i < known_y.length; i++) {\n                    var num_y = known_y[i];\n                    var num_x = known_x[i];\n                    if (isRealNum(num_y) && isRealNum(num_x)) {\n                        data_y.push(parseFloat(num_y));\n                        data_x.push(parseFloat(num_x));\n                    }\n                }\n                if (data_y.length < 3 || data_x.length < 3) {\n                    return formula.error.d;\n                }    //计算\n                //计算\n                var xmean = jStat.mean(data_x);\n                var ymean = jStat.mean(data_y);\n                var n = data_x.length;\n                var num = 0;\n                var den = 0;\n                for (var i = 0; i < n; i++) {\n                    num += (data_x[i] - xmean) * (data_y[i] - ymean);\n                    den += Math.pow(data_x[i] - xmean, 2);\n                }\n                return num / den;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'SKEW': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var dataArr = [];\n                for (var i = 0; i < arguments.length; i++) {\n                    var data = arguments[i];\n                    if (getObjType(data) == 'array') {\n                        if (getObjType(data[0]) == 'array' && !func_methods.isDyadicArr(data)) {\n                            return formula.error.v;\n                        }\n                        dataArr = dataArr.concat(func_methods.getDataArr(data, true));\n                    } else if (getObjType(data) == 'object' && data.startCell != null) {\n                        dataArr = dataArr.concat(func_methods.getCellDataArr(data, 'number', true));\n                    } else {\n                        if (!isRealNum(data)) {\n                            return formula.error.v;\n                        }\n                        dataArr.push(data);\n                    }\n                }\n                var dataArr_n = [];\n                for (var i = 0; i < dataArr.length; i++) {\n                    var number = dataArr[i];\n                    if (isRealNum(number)) {\n                        dataArr_n.push(parseFloat(number));\n                    }\n                }\n                if (dataArr_n.length < 3 || func_methods.standardDeviation_s(dataArr_n) == 0) {\n                    return formula.error.d;\n                }    //计算\n                //计算\n                var mean = jStat.mean(dataArr_n);\n                var n = dataArr_n.length;\n                var sigma = 0;\n                for (var i = 0; i < n; i++) {\n                    sigma += Math.pow(dataArr_n[i] - mean, 3);\n                }\n                return n * sigma / ((n - 1) * (n - 2) * Math.pow(jStat.stdev(dataArr_n, true), 3));\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'SKEW_P': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var dataArr = [];\n                for (var i = 0; i < arguments.length; i++) {\n                    var data = arguments[i];\n                    if (getObjType(data) == 'array') {\n                        if (getObjType(data[0]) == 'array' && !func_methods.isDyadicArr(data)) {\n                            return formula.error.v;\n                        }\n                        dataArr = dataArr.concat(func_methods.getDataArr(data, true));\n                    } else if (getObjType(data) == 'object' && data.startCell != null) {\n                        dataArr = dataArr.concat(func_methods.getCellDataArr(data, 'number', true));\n                    } else {\n                        if (!isRealNum(data)) {\n                            return formula.error.v;\n                        }\n                        dataArr.push(data);\n                    }\n                }\n                var dataArr_n = [];\n                for (var i = 0; i < dataArr.length; i++) {\n                    var number = dataArr[i];\n                    if (isRealNum(number)) {\n                        dataArr_n.push(parseFloat(number));\n                    }\n                }\n                if (dataArr_n.length < 3 || func_methods.standardDeviation_s(dataArr_n) == 0) {\n                    return formula.error.d;\n                }    //计算\n                //计算\n                var mean = jStat.mean(dataArr_n);\n                var n = dataArr_n.length;\n                var m2 = 0;\n                var m3 = 0;\n                for (var i = 0; i < n; i++) {\n                    m3 += Math.pow(dataArr_n[i] - mean, 3);\n                    m2 += Math.pow(dataArr_n[i] - mean, 2);\n                }\n                m3 = m3 / n;\n                m2 = m2 / n;\n                return m3 / Math.pow(m2, 3 / 2);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'ADDRESS': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //行号\n                var row_num = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(row_num)) {\n                    return row_num;\n                }\n                if (!isRealNum(row_num)) {\n                    return formula.error.v;\n                }\n                row_num = parseInt(row_num);    //列标\n                //列标\n                var column_num = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(column_num)) {\n                    return column_num;\n                }\n                if (!isRealNum(column_num)) {\n                    return formula.error.v;\n                }\n                column_num = parseInt(column_num);    //引用类型\n                //引用类型\n                var abs_num = 1;\n                if (arguments.length >= 3) {\n                    abs_num = func_methods.getFirstValue(arguments[2]);\n                    if (valueIsError(abs_num)) {\n                        return abs_num;\n                    }\n                    if (!isRealNum(abs_num)) {\n                        return formula.error.v;\n                    }\n                    abs_num = parseInt(abs_num);\n                }    //A1标记形式 -- R1C1标记形式\n                //A1标记形式 -- R1C1标记形式\n                var A1 = true;\n                if (arguments.length >= 4) {\n                    A1 = func_methods.getCellBoolen(arguments[3]);\n                    if (valueIsError(A1)) {\n                        return A1;\n                    }\n                }\n                if (row_num <= 0 || column_num <= 0) {\n                    return formula.error.v;\n                }\n                if ([\n                        1,\n                        2,\n                        3,\n                        4\n                    ].indexOf(abs_num) == -1) {\n                    return formula.error.v;\n                }    //计算\n                //计算\n                var str;\n                if (A1) {\n                    column_num = chatatABC(column_num - 1);\n                    switch (abs_num) {\n                    case 1:\n                        str = '$' + column_num + '$' + row_num;\n                        break;\n                    case 2:\n                        str = column_num + '$' + row_num;\n                        break;\n                    case 3:\n                        str = '$' + column_num + row_num;\n                        break;\n                    case 4:\n                        str = column_num + row_num;\n                        break;\n                    }\n                } else {\n                    switch (abs_num) {\n                    case 1:\n                        str = 'R' + row_num + 'C' + column_num;\n                        break;\n                    case 2:\n                        str = 'R' + row_num + 'C[' + column_num + ']';\n                        break;\n                    case 3:\n                        str = 'R[' + row_num + ']' + 'C' + column_num;\n                        break;\n                    case 4:\n                        str = 'R[' + row_num + ']' + 'C[' + column_num + ']';\n                        break;\n                    }\n                }\n                if (arguments.length == 5) {\n                    //工作表名称\n                    var sheet_text = func_methods.getFirstValue(arguments[4]);\n                    if (valueIsError(sheet_text)) {\n                        return sheet_text;\n                    }\n                    return sheet_text + '!' + str;\n                } else {\n                    return str;\n                }\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'INDIRECT': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //以带引号的字符串形式提供的单元格引用\n                var ref_text = func_methods.getFirstValue(arguments[0], 'text');\n                if (valueIsError(ref_text)) {\n                    return ref_text;\n                }    //A1标记形式 -- R1C1标记形式\n                //A1标记形式 -- R1C1标记形式\n                var A1 = true;\n                if (arguments.length == 2) {\n                    A1 = func_methods.getCellBoolen(arguments[1]);\n                    if (valueIsError(A1)) {\n                        return A1;\n                    }\n                }\n                let luckysheetfile = getluckysheetfile();\n                let index = getSheetIndex(Store.calculateSheetIndex);\n                let currentSheet = luckysheetfile[index];\n                let sheetdata = currentSheet.data;    // sheetdata = Store.flowdata;\n                                                      // if (formula.execFunctionGroupData != null) {\n                                                      //     sheetdata = formula.execFunctionGroupData;\n                                                      // }\n                                                      //计算\n                // sheetdata = Store.flowdata;\n                // if (formula.execFunctionGroupData != null) {\n                //     sheetdata = formula.execFunctionGroupData;\n                // }\n                //计算\n                if (A1) {\n                } else {\n                }\n                if (formula.iscelldata(ref_text)) {\n                    let cellrange = formula.getcellrange(ref_text);\n                    let row = cellrange.row[0], col = cellrange.column[0];\n                    if (row < 0 || row >= sheetdata.length || col < 0 || col >= sheetdata[0].length) {\n                        return formula.error.r;\n                    }\n                    if (sheetdata[row][col] == null || isRealNull(sheetdata[row][col].v)) {\n                        return 0;\n                    }\n                    let value = sheetdata[row][col].v;\n                    if (formula.execFunctionGlobalData != null) {\n                        let ef = formula.execFunctionGlobalData[row + '_' + col + '_' + Store.calculateSheetIndex];\n                        if (ef != null) {\n                            value = ef.v;\n                        }\n                    }\n                    let retAll = {\n                        'sheetName': currentSheet.name,\n                        'startCell': ref_text,\n                        'rowl': row,\n                        'coll': col,\n                        'data': value\n                    };\n                    return retAll;\n                } else {\n                    return formula.error.r;\n                }\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'ROW': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                if (arguments.length == 1) {\n                    //要返回其行号的单元格\n                    var reference;\n                    if (getObjType(arguments[0]) == 'array') {\n                        return formula.error.v;\n                    } else if (getObjType(arguments[0]) == 'object' && arguments[0].startCell != null) {\n                        reference = arguments[0].startCell;\n                    } else {\n                        reference = arguments[0];\n                    }\n                    if (formula.iscelldata(reference)) {\n                        var cellrange = formula.getcellrange(reference);\n                        return cellrange['row'][0] + 1;\n                    } else {\n                        return formula.error.v;\n                    }\n                } else {\n                    return window.luckysheetCurrentRow + 1;\n                }\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'ROWS': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //要返回其行数的范围\n                if (getObjType(arguments[0]) == 'array') {\n                    if (getObjType(arguments[0][0]) == 'array') {\n                        return arguments[0].length;\n                    } else {\n                        return 1;\n                    }\n                } else if (getObjType(arguments[0]) == 'object' && arguments[0].startCell != null) {\n                    return arguments[0].rowl;\n                } else {\n                    return 1;\n                }\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'COLUMN': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                if (arguments.length == 1) {\n                    //要返回其列号的单元格\n                    var reference;\n                    if (getObjType(arguments[0]) == 'array') {\n                        return formula.error.v;\n                    } else if (getObjType(arguments[0]) == 'object' && arguments[0].startCell != null) {\n                        reference = arguments[0].startCell;\n                    } else {\n                        reference = arguments[0];\n                    }\n                    if (formula.iscelldata(reference)) {\n                        var cellrange = formula.getcellrange(reference);\n                        return cellrange['column'][0] + 1;\n                    } else {\n                        return formula.error.v;\n                    }\n                } else {\n                    return window.luckysheetCurrentColumn + 1;\n                }\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'COLUMNS': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //返回指定数组或范围中的列数\n                if (getObjType(arguments[0]) == 'array') {\n                    if (getObjType(arguments[0][0]) == 'array') {\n                        return arguments[0][0].length;\n                    } else {\n                        return arguments[0].length;\n                    }\n                } else if (getObjType(arguments[0]) == 'object' && arguments[0].startCell != null) {\n                    return arguments[0].coll;\n                } else {\n                    return 1;\n                }\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'OFFSET': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //用于计算行列偏移量的起点\n                if (!(getObjType(arguments[0]) == 'object' && arguments[0].startCell != null)) {\n                    return formula.error.v;\n                }\n                var reference = arguments[0].startCell;\n                let sheetName = arguments[0].sheetName;    //要偏移的行数\n                //要偏移的行数\n                var rows = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(rows)) {\n                    return rows;\n                }\n                if (!isRealNum(rows)) {\n                    return formula.error.v;\n                }\n                rows = parseInt(rows);    //要偏移的列数\n                //要偏移的列数\n                var cols = func_methods.getFirstValue(arguments[2]);\n                if (valueIsError(cols)) {\n                    return cols;\n                }\n                if (!isRealNum(cols)) {\n                    return formula.error.v;\n                }\n                cols = parseInt(cols);    //要从偏移目标开始返回的范围的高度\n                //要从偏移目标开始返回的范围的高度\n                var height = arguments[0].rowl;\n                if (arguments.length >= 4) {\n                    height = func_methods.getFirstValue(arguments[3]);\n                    if (valueIsError(height)) {\n                        return height;\n                    }\n                    if (!isRealNum(height)) {\n                        return formula.error.v;\n                    }\n                    height = parseInt(height);\n                }    //要从偏移目标开始返回的范围的宽度\n                //要从偏移目标开始返回的范围的宽度\n                var width = arguments[0].coll;\n                if (arguments.length == 5) {\n                    width = func_methods.getFirstValue(arguments[4]);\n                    if (valueIsError(width)) {\n                        return width;\n                    }\n                    if (!isRealNum(width)) {\n                        return formula.error.v;\n                    }\n                    width = parseInt(width);\n                }\n                if (height < 1 || width < 1) {\n                    return formula.error.r;\n                }    //计算\n                //计算\n                var cellrange = formula.getcellrange(reference);\n                var cellRow0 = cellrange['row'][0];\n                var cellCol0 = cellrange['column'][0];\n                cellRow0 += rows;\n                cellCol0 += cols;\n                var cellRow1 = cellRow0 + height - 1;\n                var cellCol1 = cellCol0 + width - 1;    // let sheetdata = null;\n                                                        // sheetdata = Store.flowdata;\n                                                        // if (formula.execFunctionGroupData != null) {\n                                                        //     sheetdata = formula.execFunctionGroupData;\n                                                        // }\n                // let sheetdata = null;\n                // sheetdata = Store.flowdata;\n                // if (formula.execFunctionGroupData != null) {\n                //     sheetdata = formula.execFunctionGroupData;\n                // }\n                let luckysheetfile = getluckysheetfile();\n                let index = getSheetIndex(Store.calculateSheetIndex);\n                let sheetdata = luckysheetfile[index].data;\n                if (cellRow0 < 0 || cellRow1 >= sheetdata.length || cellCol0 < 0 || cellCol1 >= sheetdata[0].length) {\n                    return formula.error.r;\n                }\n                var result = [];\n                for (var r = cellRow0; r <= cellRow1; r++) {\n                    var rowArr = [];\n                    for (var c = cellCol0; c <= cellCol1; c++) {\n                        if (formula.execFunctionGlobalData != null && formula.execFunctionGlobalData[r + '_' + c + '_' + Store.calculateSheetIndex] != null) {\n                            let ef = formula.execFunctionGlobalData[r + '_' + c + '_' + Store.calculateSheetIndex];\n                            if (ef != null) {\n                                rowArr.push(ef.v);\n                            } else {\n                                rowArr.push(0);\n                            }\n                        } else if (sheetdata[r][c] != null && !isRealNull(sheetdata[r][c].v)) {\n                            rowArr.push(sheetdata[r][c].v);\n                        } else {\n                            rowArr.push(0);\n                        }\n                    }\n                    result.push(rowArr);\n                }\n                let retAll = {\n                    'sheetName': sheetName,\n                    'startCell': getRangetxt(Store.calculateSheetIndex, {\n                        row: [\n                            cellRow0,\n                            cellRow1\n                        ],\n                        column: [\n                            cellCol0,\n                            cellCol1\n                        ]\n                    }),\n                    'rowl': cellRow0,\n                    'coll': cellCol0,\n                    'data': result\n                };\n                return retAll;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'MATCH': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //lookup_value\n                var lookup_value = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(lookup_value)) {\n                    return lookup_value;\n                }    //lookup_array\n                //lookup_array\n                var data_lookup_array = arguments[1];\n                var lookup_array = [];\n                if (getObjType(data_lookup_array) == 'array') {\n                    if (getObjType(data_lookup_array[0]) == 'array') {\n                        if (!func_methods.isDyadicArr(data_lookup_array)) {\n                            return formula.error.v;\n                        }\n                        return formula.error.na;\n                    } else {\n                        for (var i = 0; i < data_lookup_array.length; i++) {\n                            lookup_array.push(data_lookup_array[i]);\n                        }\n                    }\n                } else if (getObjType(data_lookup_array) == 'object' && data_lookup_array.startCell != null) {\n                    if (data_lookup_array.rowl > 1 && data_lookup_array.coll > 1) {\n                        return formula.error.na;\n                    }\n                    if (data_lookup_array.data != null) {\n                        if (getObjType(data_lookup_array.data) == 'array') {\n                            for (var i = 0; i < data_lookup_array.data.length; i++) {\n                                for (var j = 0; j < data_lookup_array.data[i].length; j++) {\n                                    if (data_lookup_array.data[i][j] != null && !isRealNull(data_lookup_array.data[i][j].v)) {\n                                        lookup_array.push(data_lookup_array.data[i][j].v);\n                                    }\n                                }\n                            }\n                        } else {\n                            lookup_array.push(data_lookup_array.data.v);\n                        }\n                    }\n                }    //match_type\n                //match_type\n                var match_type = 1;\n                if (arguments.length == 3) {\n                    match_type = func_methods.getFirstValue(arguments[2]);\n                    if (valueIsError(match_type)) {\n                        return match_type;\n                    }\n                    if (!isRealNum(match_type)) {\n                        return formula.error.v;\n                    }\n                    match_type = Math.ceil(parseFloat(match_type));\n                }\n                if ([\n                        -1,\n                        0,\n                        1\n                    ].indexOf(match_type) == -1) {\n                    return formula.error.na;\n                }    //计算\n                //计算\n                var index;\n                var indexValue;\n                for (var idx = 0; idx < lookup_array.length; idx++) {\n                    if (match_type === 1) {\n                        if (lookup_array[idx] === lookup_value) {\n                            return idx + 1;\n                        } else if (lookup_array[idx] < lookup_value) {\n                            if (!indexValue) {\n                                index = idx + 1;\n                                indexValue = lookup_array[idx];\n                            } else if (lookup_array[idx] > indexValue) {\n                                index = idx + 1;\n                                indexValue = lookup_array[idx];\n                            }\n                        }\n                    } else if (match_type === 0) {\n                        if (typeof lookup_value === 'string') {\n                            lookup_value = lookup_value.replace(/\\?/g, '.');\n                            if (lookup_array[idx].toLowerCase().match(lookup_value.toLowerCase())) {\n                                return idx + 1;\n                            }\n                        } else {\n                            if (lookup_array[idx] === lookup_value) {\n                                return idx + 1;\n                            }\n                        }\n                    } else if (match_type === -1) {\n                        if (lookup_array[idx] === lookup_value) {\n                            return idx + 1;\n                        } else if (lookup_array[idx] > lookup_value) {\n                            if (!indexValue) {\n                                index = idx + 1;\n                                indexValue = lookup_array[idx];\n                            } else if (lookup_array[idx] < indexValue) {\n                                index = idx + 1;\n                                indexValue = lookup_array[idx];\n                            }\n                        }\n                    }\n                }\n                return index ? index : formula.error.na;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'VLOOKUP': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //lookup_value\n                var lookup_value = func_methods.getFirstValue(arguments[0], 'text');\n                if (valueIsError(lookup_value)) {\n                    return lookup_value;\n                }\n                if (lookup_value.toString().replace(/\\s/g, '') == '') {\n                    return formula.error.na;\n                }    //table_array\n                //table_array\n                var data_table_array = arguments[1];\n                var table_array = [];\n                if (getObjType(data_table_array) == 'array') {\n                    if (getObjType(data_table_array[0]) == 'array') {\n                        if (!func_methods.isDyadicArr(data_table_array)) {\n                            return formula.error.v;\n                        }\n                        for (var i = 0; i < data_table_array.length; i++) {\n                            var rowArr = [];\n                            for (var j = 0; j < data_table_array[i].length; j++) {\n                                rowArr.push(data_table_array[i][j]);\n                            }\n                            table_array.push(rowArr);\n                        }\n                    } else {\n                        var rowArr = [];\n                        for (var i = 0; i < data_table_array.length; i++) {\n                            rowArr.push(data_table_array[i]);\n                        }\n                        table_array.push(rowArr);\n                    }\n                } else if (getObjType(data_table_array) == 'object' && data_table_array.startCell != null) {\n                    table_array = func_methods.getCellDataDyadicArr(data_table_array, 'text');\n                } else {\n                    return formula.error.v;\n                }    //col_index_num\n                //col_index_num\n                var col_index_num = func_methods.getFirstValue(arguments[2]);\n                if (valueIsError(col_index_num)) {\n                    return col_index_num;\n                }\n                if (!isRealNum(col_index_num)) {\n                    return formula.error.v;\n                }\n                col_index_num = parseInt(col_index_num);    //range_lookup\n                //range_lookup\n                var range_lookup = true;\n                if (arguments.length == 4) {\n                    range_lookup = func_methods.getCellBoolen(arguments[3]);\n                    if (valueIsError(range_lookup)) {\n                        return range_lookup;\n                    }\n                }    //判断\n                //判断\n                if (col_index_num < 1) {\n                    return formula.error.v;\n                } else if (col_index_num > table_array[0].length) {\n                    return formula.error.r;\n                }    //计算\n                //计算\n                if (range_lookup) {\n                    table_array = orderbydata(table_array, 0, true);\n                    for (var r = 0; r < table_array.length; r++) {\n                        var v = table_array[r][0];\n                        var result;\n                        if (isdatetime(lookup_value) && isdatetime(v)) {\n                            result = diff(lookup_value, v);\n                        } else if (isRealNum(lookup_value) && isRealNum(v)) {\n                            result = numeral(lookup_value).value() - numeral(v).value();\n                        } else if (!isRealNum(lookup_value) && !isRealNum(v)) {\n                            result = lookup_value.localeCompare(v, 'zh');\n                        } else if (!isRealNum(lookup_value)) {\n                            result = 1;\n                        } else if (!isRealNum(v)) {\n                            result = -1;\n                        }\n                        if (result < 0) {\n                            if (r == 0) {\n                                return formula.error.na;\n                            } else {\n                                return table_array[r - 1][col_index_num - 1];\n                            }\n                        } else {\n                            if (r == table_array.length - 1) {\n                                return table_array[r][col_index_num - 1];\n                            }\n                        }\n                    }\n                } else {\n                    var index = null;\n                    for (var r = 0; r < table_array.length; r++) {\n                        if (lookup_value.toString() == table_array[r][0].toString()) {\n                            index = r;\n                            break;\n                        }\n                    }\n                    if (index == null) {\n                        return formula.error.na;\n                    }\n                    return table_array[index][col_index_num - 1];\n                }\n            } catch (e) {\n                var err = e;    //计算错误检测\n                //计算错误检测\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'HLOOKUP': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var cell_r = window.luckysheetCurrentRow;\n                var cell_c = window.luckysheetCurrentColumn;\n                var searchkey = arguments[0];\n                if (typeof searchkey == 'object') {\n                    searchkey = arguments[0].data;\n                    if (getObjType(searchkey) == 'array') {\n                        searchkey = searchkey[r];\n                        if (getObjType(searchkey) == 'array') {\n                            searchkey = searchkey[c];\n                        }\n                    } else {\n                        searchkey = searchkey.v;\n                    }\n                }\n                var range = arguments[1].data;\n                var index = arguments[2];\n                var isaccurate = false;\n                if (arguments.length > 3) {\n                    isaccurate = !!arguments[3];\n                }\n                if (index > range.rowl) {\n                    return [\n                        formula.error.v,\n                        '索引超过了范围的长度\\uFF0C' + range[0].length\n                    ];\n                }\n                if (index < 1) {\n                    return [\n                        formula.error.v,\n                        '索引必须大于1'\n                    ];\n                }\n                var result = formula.error.na;\n                for (var c = 0; c < range[0].length; c++) {\n                    var matchv = getcellvalue(0, c, range);\n                    var showv = getcellvalue(index - 1, c, range);\n                    if (isaccurate) {\n                        if (matchv.indexOf(searchkey) > -1) {\n                            result = showv;\n                        }\n                    } else {\n                        if (formula.acompareb(matchv, searchkey)) {\n                            result = showv;\n                            return result;\n                        }\n                    }\n                }\n                return result;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'LOOKUP': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //完成矢量形式（数组形式不推荐，未做）\n                //=LOOKUP(4.19, A2:A6, B2:B6)\n                //=LOOKUP(0, A2:A6, B2:B6)\n                var cell_r = window.luckysheetCurrentRow;\n                var cell_c = window.luckysheetCurrentColumn;\n                var searchkey = arguments[0];\n                if (typeof searchkey == 'object') {\n                    searchkey = arguments[0].data;\n                    if (getObjType(searchkey) == 'array') {\n                        searchkey = searchkey[r];\n                        if (getObjType(searchkey) == 'array') {\n                            searchkey = searchkey[c];\n                        }\n                    } else {\n                        searchkey = searchkey.v;\n                    }\n                }    //必须为一维数组\n                //必须为一维数组\n                var range = arguments[1].data;\n                var range2;\n                var result = formula.error.na;\n                function sortNum(a, b) {\n                    //用于排序\n                    return b - a;\n                }    //获得两个范围的数组\n                //获得两个范围的数组\n                range = formula.getRangeArray(range)[0];\n                if (arguments[2]) {\n                    range2 = arguments[2].data;\n                    range2 = formula.getRangeArray(range2)[0];\n                }\n                if (typeof searchkey == 'string') {\n                    //字符串直接判断是否相等\n                    for (var i = 0; i < range.length; i++) {\n                        var matchv = range[i];\n                        var showv;\n                        if (arguments[2]) {\n                            showv = range2[i];\n                            if (matchv == searchkey) {\n                                result = showv;\n                            }\n                        } else {\n                            if (formula.acompareb(matchv, searchkey)) {\n                                result = matchv;\n                            }\n                        }\n                    }\n                } else if (isdatatype(searchkey) == 'num') {\n                    //数字判断1.是否相等2.不等，去找接近值\n                    var rangeNow = [];\n                    for (var i = 0; i < range.length; i++) {\n                        var matchv = range[i];\n                        var showv;\n                        if (arguments[2]) {\n                            showv = range2[i];\n                            if (matchv == searchkey) {\n                                result = showv;\n                                return result;\n                            } else if (matchv != searchkey && isdatatype(matchv) == 'num') {\n                                rangeNow.push(matchv);\n                            }\n                        } else {\n                            if (matchv == searchkey) {\n                                result = matchv;\n                                return result;\n                            } else if (matchv != searchkey && isdatatype(matchv) == 'num') {\n                                rangeNow.push(matchv);\n                            }\n                        }\n                    }\n                    if (rangeNow.length != 0) {\n                        rangeNow.push(searchkey);\n                        rangeNow.sort(sortNum);\n                        var index = rangeNow.indexOf(searchkey);\n                        if (index == rangeNow.length - 1) {\n                            return [\n                                formula.error.na,\n                                '找不到对应参数'\n                            ];\n                        } else {\n                            var mat = rangeNow[index + 1];\n                            if (arguments[2]) {\n                                var i = range.indexOf(mat);    //改成数组\n                                //改成数组\n                                result = range2[i];\n                            } else {\n                                result = mat;\n                            }\n                        }\n                    }\n                }\n                return result;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'INDEX': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //单元格区域或数组常量\n                var data_array = arguments[0];\n                var array = [];\n                let isReference = false;\n                if (getObjType(data_array) == 'array') {\n                    if (getObjType(data_array[0]) == 'array' && !func_methods.isDyadicArr(data_array)) {\n                        return formula.error.v;\n                    }\n                    array = func_methods.getDataDyadicArr(data_array);\n                } else if (getObjType(data_array) == 'object' && data_array.startCell != null) {\n                    array = func_methods.getCellDataDyadicArr(data_array, 'number');\n                    isReference = true;\n                }\n                var rowlen = array.length, collen = array[0].length;    //选择数组中的某行，函数从该行返回数值\n                //选择数组中的某行，函数从该行返回数值\n                var row_num = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(row_num)) {\n                    return row_num;\n                }\n                if (!isRealNum(row_num)) {\n                    return formula.error.v;\n                }\n                row_num = parseInt(row_num);    //选择数组中的某列，函数从该列返回数值\n                //选择数组中的某列，函数从该列返回数值\n                var column_num = func_methods.getFirstValue(arguments[2]);\n                if (valueIsError(column_num)) {\n                    return column_num;\n                }\n                if (row_num < 0 || isRealNum(column_num) && column_num < 0) {\n                    return formula.error.v;\n                }\n                if (row_num > rowlen || isRealNum(column_num) && column_num > collen) {\n                    return formula.error.r;\n                }\n                if (isReference) {\n                    var cellrange = formula.getcellrange(data_array.startCell);\n                    var cellRow0 = cellrange['row'][0];\n                    var cellCol0 = cellrange['column'][0];\n                    let data = array;\n                    if (row_num == 0 || column_num == 0) {\n                        if (row_num == 0) {\n                            data = array[0];\n                            row_num = 1;\n                        } else {\n                            data = array[row_num - 1];\n                        }\n                        if (isRealNum(column_num)) {\n                            if (column_num == 0) {\n                                data = data[0];\n                                column_num = 1;\n                            } else {\n                                data = data[column_num - 1];\n                            }\n                        } else {\n                            column_num = 1;\n                        }\n                    } else {\n                        if (!isRealNum(row_num)) {\n                            row_num = 1;\n                        }\n                        if (!isRealNum(column_num)) {\n                            column_num = 1;\n                        }\n                        data = array[row_num - 1][column_num - 1];\n                    }\n                    let row_index = cellRow0 + row_num - 1, column_index = cellCol0 + column_num - 1;\n                    let retAll = {\n                        'sheetName': data_array.sheetName,\n                        'startCell': getRangetxt(Store.calculateSheetIndex, {\n                            row: [\n                                row_index,\n                                row_index\n                            ],\n                            column: [\n                                column_index,\n                                column_index\n                            ]\n                        }),\n                        'rowl': row_index,\n                        'coll': column_index,\n                        'data': data\n                    };\n                    return retAll;\n                } else {\n                    //计算\n                    if (!isRealNum(column_num)) {\n                        return formula.error.v;\n                    }\n                    column_num = parseInt(column_num);\n                    if (row_num <= 0 || column_num <= 0) {\n                        return formula.error.v;\n                    }\n                    return array[row_num - 1][column_num - 1];\n                }\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'GETPIVOTDATA': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                return formula.error.v;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'CHOOSE': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //指定要返回哪一项\n                var index_num = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(index_num)) {\n                    return index_num;\n                }\n                if (!isRealNum(index_num)) {\n                    return formula.error.v;\n                }\n                index_num = parseInt(index_num);\n                if (index_num < 1 || index_num > arguments.length - 1) {\n                    return formula.error.v;\n                }\n                var data_result = arguments[index_num];\n                if (getObjType(data_result) == 'array') {\n                    if (getObjType(data_result[0]) == 'array' && !func_methods.isDyadicArr(data_result)) {\n                        return formula.error.v;\n                    }\n                    return data_result;\n                } else if (getObjType(data_result) == 'object' && data_result.startCell != null) {\n                    if (data_result.data == null) {\n                        return 0;\n                    }\n                    if (getObjType(data_result.data) == 'array') {\n                        var result = func_methods.getCellDataDyadicArr(data_result.data, 'number');\n                        return result;\n                    } else {\n                        if (isRealNull(data_result.data.v)) {\n                            return 0;\n                        }\n                        return data_result.data.v;\n                    }\n                } else {\n                    return data_result;\n                }\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'HYPERLINK': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                return formula.error.v;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'TIME': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //时\n                var hour = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(hour)) {\n                    return hour;\n                }\n                if (!isRealNum(hour)) {\n                    return formula.error.v;\n                }\n                hour = parseInt(hour);    //分\n                //分\n                var minute = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(minute)) {\n                    return minute;\n                }\n                if (!isRealNum(minute)) {\n                    return formula.error.v;\n                }\n                minute = parseInt(minute);    //秒\n                //秒\n                var second = func_methods.getFirstValue(arguments[2]);\n                if (valueIsError(second)) {\n                    return second;\n                }\n                if (!isRealNum(second)) {\n                    return formula.error.v;\n                }\n                second = parseInt(second);\n                if (hour < 0 || hour > 32767) {\n                    return formula.error.nm;\n                } else if (hour > 24) {\n                    hour = hour % 24;\n                }\n                if (minute < 0 || minute > 32767) {\n                    return formula.error.nm;\n                }\n                if (second < 0 || second > 32767) {\n                    return formula.error.nm;\n                }    //计算\n                //计算\n                var time = dayjs().set({\n                    'hour': hour,\n                    'minute': minute,\n                    'second': second\n                });\n                return dayjs(time).format('h:mm:ss a');\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'TIMEVALUE': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //用于表示时间的字符串\n                var time_text = func_methods.getCellDate(arguments[0]);\n                if (valueIsError(time_text)) {\n                    return time_text;\n                }    //计算\n                //计算\n                if (!dayjs(time_text).isValid()) {\n                    return formula.error.v;\n                }\n                return (3600 * dayjs(time_text).get('hour') + 60 * dayjs(time_text).get('minute') + dayjs(time_text).get('second')) / 86400;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'EOMONTH': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //用于计算结果的参照日期\n                var start_date = func_methods.getCellDate(arguments[0]);\n                if (valueIsError(start_date)) {\n                    return start_date;\n                }    //月数\n                //月数\n                var months = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(months)) {\n                    return months;\n                }\n                if (!isRealNum(months)) {\n                    return formula.error.v;\n                }\n                months = parseInt(months);\n                if (!dayjs(start_date).isValid()) {\n                    return formula.error.v;\n                }    //计算\n                //计算\n                var date = dayjs(start_date).add(months + 1, 'months').set('date', 1).subtract(1, 'days');\n                var mask = genarate(dayjs(date).format('YYYY-MM-DD H:mm:ss'));\n                var result = mask[2];\n                return result;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'EDATE': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //用于计算结果的参照日期\n                var start_date = func_methods.getCellDate(arguments[0]);\n                if (valueIsError(start_date)) {\n                    return start_date;\n                }    //月数\n                //月数\n                var months = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(months)) {\n                    return months;\n                }\n                if (!isRealNum(months)) {\n                    return formula.error.v;\n                }\n                months = parseInt(months);\n                if (!dayjs(start_date).isValid()) {\n                    return formula.error.v;\n                }    //计算\n                //计算\n                var date = dayjs(start_date).add(months, 'months');\n                var mask = genarate(dayjs(date).format('YYYY-MM-DD h:mm:ss'));\n                var result = mask[2];\n                return result;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'SECOND': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //时间值\n                var time_text = func_methods.getCellDate(arguments[0]);\n                if (valueIsError(time_text)) {\n                    return time_text;\n                }\n                if (!dayjs(time_text).isValid()) {\n                    return formula.error.v;\n                }\n                var result = dayjs(time_text).seconds();\n                return result;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'MINUTE': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //时间值\n                var time_text = func_methods.getCellDate(arguments[0]);\n                if (valueIsError(time_text)) {\n                    return time_text;\n                }\n                if (!dayjs(time_text).isValid()) {\n                    return formula.error.v;\n                }\n                var result = dayjs(time_text).minutes();\n                return result;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'HOUR': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //时间值\n                var time_text = func_methods.getCellDate(arguments[0]);\n                if (valueIsError(time_text)) {\n                    return time_text;\n                }\n                if (!dayjs(time_text).isValid()) {\n                    return formula.error.v;\n                }\n                var result = dayjs(time_text).hours();\n                return result;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'NOW': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                return dayjs().format('YYYY-M-D HH:mm');\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'NETWORKDAYS': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                if (arguments.length == 3) {\n                    var result = window.luckysheet_function.NETWORKDAYS_INTL.f(arguments[0], arguments[1], 1, arguments[2]);\n                } else {\n                    var result = window.luckysheet_function.NETWORKDAYS_INTL.f(arguments[0], arguments[1], 1);\n                }\n                return result;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'NETWORKDAYS_INTL': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var WEEKEND_TYPES = [\n                    [],\n                    [\n                        6,\n                        0\n                    ],\n                    [\n                        0,\n                        1\n                    ],\n                    [\n                        1,\n                        2\n                    ],\n                    [\n                        2,\n                        3\n                    ],\n                    [\n                        3,\n                        4\n                    ],\n                    [\n                        4,\n                        5\n                    ],\n                    [\n                        5,\n                        6\n                    ],\n                    undefined,\n                    undefined,\n                    undefined,\n                    [\n                        0,\n                        0\n                    ],\n                    [\n                        1,\n                        1\n                    ],\n                    [\n                        2,\n                        2\n                    ],\n                    [\n                        3,\n                        3\n                    ],\n                    [\n                        4,\n                        4\n                    ],\n                    [\n                        5,\n                        5\n                    ],\n                    [\n                        6,\n                        6\n                    ]\n                ];    //用于计算净工作日天数的时间段开始日期\n                //用于计算净工作日天数的时间段开始日期\n                var start_date = func_methods.getCellDate(arguments[0]);\n                if (valueIsError(start_date)) {\n                    return start_date;\n                }\n                if (!dayjs(start_date).isValid()) {\n                    return formula.error.v;\n                }    //用于计算净工作日天数的时间段结束日期\n                //用于计算净工作日天数的时间段结束日期\n                var end_date = func_methods.getCellDate(arguments[1]);\n                if (valueIsError(end_date)) {\n                    return end_date;\n                }\n                if (!dayjs(end_date).isValid()) {\n                    return formula.error.v;\n                }    //用于表示哪些天为周末的数字或字符串\n                //用于表示哪些天为周末的数字或字符串\n                var weekend = WEEKEND_TYPES[1];\n                if (arguments.length >= 3) {\n                    weekend = arguments[2];\n                    if (typeof weekend == 'string' && weekend.length == '7' && /^[0-1]{7}$/g.test(weekend)) {\n                    } else {\n                        weekend = func_methods.getFirstValue(arguments[2]);\n                        if (valueIsError(weekend)) {\n                            return weekend;\n                        }\n                        if (!isRealNum(weekend)) {\n                            return formula.error.v;\n                        }\n                        weekend = parseInt(weekend);\n                        if (weekend < 1 || weekend > 7 && weekend < 11 || weekend > 17) {\n                            return formula.error.nm;\n                        }\n                        weekend = WEEKEND_TYPES[weekend];\n                    }\n                }    //这是一个范围或数组常量，其中包含作为节假日的日期\n                //这是一个范围或数组常量，其中包含作为节假日的日期\n                var holidays = [];\n                if (arguments.length == 4) {\n                    holidays = func_methods.getCellrangeDate(arguments[3]);\n                    if (valueIsError(holidays)) {\n                        return holidays;\n                    }\n                }\n                for (var i = 0; i < holidays.length; i++) {\n                    if (!dayjs(holidays[i]).isValid()) {\n                        return formula.error.v;\n                    }\n                }    //计算\n                //计算\n                var days = dayjs(end_date).diff(dayjs(start_date), 'days') + 1;\n                var total = days;\n                var day = dayjs(start_date);\n                for (i = 0; i < days; i++) {\n                    var d = dayjs(day).weekday();\n                    var dec = false;\n                    if (getObjType(weekend) == 'array') {\n                        if (d === weekend[0] || d === weekend[1]) {\n                            dec = true;\n                        }\n                    } else {\n                        if (d == 0) {\n                            d = 7;\n                        }\n                        if (weekend.charAt(d - 1) == '0') {\n                            dec = true;\n                        }\n                    }\n                    for (var j = 0; j < holidays.length; j++) {\n                        if (dayjs(day).diff(dayjs(holidays[j]), 'days') === 0) {\n                            dec = true;\n                            break;\n                        }\n                    }\n                    if (dec) {\n                        total--;\n                    }\n                    day = dayjs(day).add(1, 'days');\n                }\n                return total;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'ISOWEEKNUM': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //用于日期和时间计算的日期\n                var date = func_methods.getCellDate(arguments[0]);\n                if (valueIsError(date)) {\n                    return date;\n                }\n                if (!dayjs(date).isValid()) {\n                    return formula.error.v;\n                }    //计算\n                //计算\n                return dayjs(date).isoWeeks();\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'WEEKNUM': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var WEEK_STARTS = [\n                    undefined,\n                    7,\n                    1,\n                    undefined,\n                    undefined,\n                    undefined,\n                    undefined,\n                    undefined,\n                    undefined,\n                    undefined,\n                    undefined,\n                    1,\n                    2,\n                    3,\n                    4,\n                    5,\n                    6,\n                    7\n                ];    //用于计算净工作日天数的时间段开始日期\n                //用于计算净工作日天数的时间段开始日期\n                var serial_number = func_methods.getCellDate(arguments[0]);\n                if (valueIsError(serial_number)) {\n                    return serial_number;\n                }\n                if (!dayjs(serial_number).isValid()) {\n                    return formula.error.v;\n                }    //用于表示哪些天为周末的数字或字符串\n                //用于表示哪些天为周末的数字或字符串\n                var return_type = 1;\n                if (arguments.length == 2) {\n                    return_type = func_methods.getFirstValue(arguments[1]);\n                    if (valueIsError(return_type)) {\n                        return return_type;\n                    }\n                    if (!isRealNum(return_type)) {\n                        return formula.error.v;\n                    }\n                    return_type = parseInt(return_type);\n                }\n                if (return_type == 21) {\n                    return window.luckysheet_function.ISOWEEKNUM.f(arguments[0]);\n                }\n                if ([\n                        1,\n                        2,\n                        11,\n                        12,\n                        13,\n                        14,\n                        15,\n                        16,\n                        17\n                    ].indexOf(return_type) == -1) {\n                    return formula.error.nm;\n                }    //计算\n                //计算\n                var week_start = WEEK_STARTS[return_type];\n                var inc = dayjs(serial_number).isoWeekday() >= week_start ? 1 : 0;\n                var result = dayjs(serial_number).isoWeeks() + inc;\n                return result;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'WEEKDAY': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var WEEK_TYPES = [\n                    [],\n                    [\n                        1,\n                        2,\n                        3,\n                        4,\n                        5,\n                        6,\n                        7\n                    ],\n                    [\n                        7,\n                        1,\n                        2,\n                        3,\n                        4,\n                        5,\n                        6\n                    ],\n                    [\n                        6,\n                        0,\n                        1,\n                        2,\n                        3,\n                        4,\n                        5\n                    ],\n                    [],\n                    [],\n                    [],\n                    [],\n                    [],\n                    [],\n                    [],\n                    [\n                        7,\n                        1,\n                        2,\n                        3,\n                        4,\n                        5,\n                        6\n                    ],\n                    [\n                        6,\n                        7,\n                        1,\n                        2,\n                        3,\n                        4,\n                        5\n                    ],\n                    [\n                        5,\n                        6,\n                        7,\n                        1,\n                        2,\n                        3,\n                        4\n                    ],\n                    [\n                        4,\n                        5,\n                        6,\n                        7,\n                        1,\n                        2,\n                        3\n                    ],\n                    [\n                        3,\n                        4,\n                        5,\n                        6,\n                        7,\n                        1,\n                        2\n                    ],\n                    [\n                        2,\n                        3,\n                        4,\n                        5,\n                        6,\n                        7,\n                        1\n                    ],\n                    [\n                        1,\n                        2,\n                        3,\n                        4,\n                        5,\n                        6,\n                        7\n                    ]\n                ];    //用于计算净工作日天数的时间段开始日期\n                //用于计算净工作日天数的时间段开始日期\n                var serial_number = func_methods.getCellDate(arguments[0]);\n                if (valueIsError(serial_number)) {\n                    return serial_number;\n                }\n                if (!dayjs(serial_number).isValid()) {\n                    return formula.error.v;\n                }    //以数字指示使用哪种编号顺序来表示星期几\n                //以数字指示使用哪种编号顺序来表示星期几\n                var return_type = 1;\n                if (arguments.length == 2) {\n                    return_type = func_methods.getFirstValue(arguments[1]);\n                    if (valueIsError(return_type)) {\n                        return return_type;\n                    }\n                    if (!isRealNum(return_type)) {\n                        return formula.error.v;\n                    }\n                    return_type = parseInt(return_type);\n                }\n                if ([\n                        1,\n                        2,\n                        3,\n                        11,\n                        12,\n                        13,\n                        14,\n                        15,\n                        16,\n                        17\n                    ].indexOf(return_type) == -1) {\n                    return formula.error.nm;\n                }    //计算\n                //计算\n                var result = WEEK_TYPES[return_type][dayjs(serial_number).day()];\n                return result;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'DAY': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //用于计算净工作日天数的时间段开始日期\n                var serial_number = func_methods.getCellDate(arguments[0]);\n                if (valueIsError(serial_number)) {\n                    return serial_number;\n                }\n                if (!dayjs(serial_number).isValid()) {\n                    return formula.error.v;\n                }    //计算\n                //计算\n                return dayjs(serial_number).date();\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'DAYS': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //结束日期\n                var end_date = func_methods.getCellDate(arguments[0]);\n                if (valueIsError(end_date)) {\n                    return end_date;\n                }\n                if (!dayjs(end_date).isValid()) {\n                    return formula.error.v;\n                }    //开始日期\n                //开始日期\n                var start_date = func_methods.getCellDate(arguments[1]);\n                if (valueIsError(start_date)) {\n                    return start_date;\n                }\n                if (!dayjs(start_date).isValid()) {\n                    return formula.error.v;\n                }    //计算\n                //计算\n                var result = dayjs(end_date).diff(dayjs(start_date), 'days');\n                return result;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'DAYS360': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //开始日期\n                var start_date = func_methods.getCellDate(arguments[0]);\n                if (valueIsError(start_date)) {\n                    return start_date;\n                }\n                if (!dayjs(start_date).isValid()) {\n                    return formula.error.v;\n                }    //结束日期\n                //结束日期\n                var end_date = func_methods.getCellDate(arguments[1]);\n                if (valueIsError(end_date)) {\n                    return end_date;\n                }\n                if (!dayjs(end_date).isValid()) {\n                    return formula.error.v;\n                }    //天数计算方法\n                //天数计算方法\n                var method = false;\n                if (arguments.length == 3) {\n                    method = func_methods.getCellBoolen(arguments[2]);\n                    if (valueIsError(method)) {\n                        return method;\n                    }\n                }    //计算\n                //计算\n                var sm = dayjs(start_date).month();\n                var em = dayjs(end_date).month();\n                var sd, ed;\n                if (method) {\n                    sd = dayjs(start_date).date() === 31 ? 30 : dayjs(start_date).date();\n                    ed = dayjs(end_date).date() === 31 ? 30 : dayjs(end_date).date();\n                } else {\n                    var smd = dayjs().set({\n                        'year': dayjs(start_date).year(),\n                        'month': sm + 1,\n                        'date': 0\n                    }).date();\n                    var emd = dayjs().set({\n                        'year': dayjs(end_date).year(),\n                        'month': em + 1,\n                        'date': 0\n                    }).date();\n                    sd = dayjs(start_date).date() === smd ? 30 : dayjs(start_date).date();\n                    if (dayjs(end_date).date() === emd) {\n                        if (sd < 30) {\n                            em++;\n                            ed = 1;\n                        } else {\n                            ed = 30;\n                        }\n                    } else {\n                        ed = dayjs(end_date).date();\n                    }\n                }\n                var result = 360 * dayjs(end_date).diff(dayjs(start_date), 'years') + 30 * (em - sm) + (ed - sd);\n                return result;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'DATE': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //年\n                var year = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(year)) {\n                    return year;\n                }\n                if (!isRealNum(year)) {\n                    return formula.error.v;\n                }\n                year = parseInt(year);    //月\n                //月\n                var month = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(month)) {\n                    return month;\n                }\n                if (!isRealNum(month)) {\n                    return formula.error.v;\n                }\n                month = parseInt(month);    //日\n                //日\n                var day = func_methods.getFirstValue(arguments[2]);\n                if (valueIsError(day)) {\n                    return day;\n                }\n                if (!isRealNum(day)) {\n                    return formula.error.v;\n                }\n                day = parseInt(day);\n                if (year < 0 || year >= 10000) {\n                    return formula.error.nm;\n                } else if (year >= 0 && year <= 1899) {\n                    year = year + 1900;\n                }\n                var date = dayjs().set({\n                    'year': year,\n                    'month': month - 1,\n                    'date': day\n                });\n                if (dayjs(date).year() < 1900) {\n                    return formula.error.nm;\n                }\n                return dayjs(date).format('YYYY-MM-DD');\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'DATEVALUE': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //开始日期\n                var date_text = func_methods.getCellDate(arguments[0]);\n                if (valueIsError(date_text)) {\n                    return date_text;\n                }\n                if (!dayjs(date_text).isValid()) {\n                    return formula.error.v;\n                }    //计算\n                //计算\n                date_text = dayjs(date_text).format('YYYY-MM-DD');\n                var result = genarate(date_text)[2];\n                return result;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'DATEDIF': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                luckysheet_getValue(arguments);\n                for (var i = 0; i < arguments.length - 1; i++) {\n                    arguments[i] = moment.fromOADate(arguments[i]).format('l');\n                    if (!isdatetime(arguments[i])) {\n                        return formula.error.v;\n                    }\n                }\n                var startDate = dayjs(arguments[0]);\n                var endDate = dayjs(arguments[1]);\n                var unit = arguments[2];\n                var result = formula.error.v;\n                if (window.luckysheet_function.DAYS.f(endDate, startDate) < 0) {\n                    return formula.error.v;\n                }\n                switch (unit) {\n                case 'Y':\n                case 'y':\n                    result = endDate.diff(startDate, 'years', false);\n                    break;\n                case 'M':\n                case 'm':\n                    result = endDate.diff(startDate, 'months', false);\n                    break;\n                case 'D':\n                case 'd':\n                    result = endDate.diff(startDate, 'days', false);\n                    break;\n                case 'MD':\n                case 'md':\n                    result = endDate.format('DD') - startDate.format('DD');\n                    break;\n                case 'YM':\n                case 'ym':\n                    var startM = parseInt(startDate.format('M'));    //注意字符串转化为数字\n                    //注意字符串转化为数字\n                    var endM = parseInt(endDate.format('M'));\n                    result = startM <= endM ? endM - startM : endM + 12 - startM;\n                    break;\n                case 'YD':\n                case 'yd':\n                    var startM = genarate(startDate.format('MM-DD'))[2];\n                    var endM = genarate(endDate.format('MM-DD'))[2];\n                    result = startM <= endM ? endM - startM : endM + 365 - startM;\n                    break;\n                default:\n                    result = formula.error.v;\n                }\n                return result;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'WORKDAY': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                if (arguments.length == 3) {\n                    var result = window.luckysheet_function.WORKDAY_INTL.f(arguments[0], arguments[1], 1, arguments[2]);\n                } else {\n                    var result = window.luckysheet_function.WORKDAY_INTL.f(arguments[0], arguments[1], 1);\n                }\n                return result;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'WORKDAY_INTL': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var WEEKEND_TYPES = [\n                    [],\n                    [\n                        6,\n                        0\n                    ],\n                    [\n                        0,\n                        1\n                    ],\n                    [\n                        1,\n                        2\n                    ],\n                    [\n                        2,\n                        3\n                    ],\n                    [\n                        3,\n                        4\n                    ],\n                    [\n                        4,\n                        5\n                    ],\n                    [\n                        5,\n                        6\n                    ],\n                    undefined,\n                    undefined,\n                    undefined,\n                    [\n                        0,\n                        0\n                    ],\n                    [\n                        1,\n                        1\n                    ],\n                    [\n                        2,\n                        2\n                    ],\n                    [\n                        3,\n                        3\n                    ],\n                    [\n                        4,\n                        4\n                    ],\n                    [\n                        5,\n                        5\n                    ],\n                    [\n                        6,\n                        6\n                    ]\n                ];    //计算的开始日期\n                //计算的开始日期\n                var start_date = func_methods.getCellDate(arguments[0]);\n                if (valueIsError(start_date)) {\n                    return start_date;\n                }\n                if (!dayjs(start_date).isValid()) {\n                    return formula.error.v;\n                }    //工作日的天数\n                //工作日的天数\n                var days = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(days)) {\n                    return days;\n                }\n                if (!isRealNum(days)) {\n                    return formula.error.v;\n                }\n                days = parseInt(days);    //用于表示哪些天为周末的数字或字符串\n                //用于表示哪些天为周末的数字或字符串\n                var weekend = WEEKEND_TYPES[1];\n                if (arguments.length >= 3) {\n                    weekend = arguments[2];\n                    if (typeof weekend == 'string' && weekend.length == '7' && /^[0-1]{7}$/g.test(weekend)) {\n                    } else {\n                        weekend = func_methods.getFirstValue(arguments[2]);\n                        if (valueIsError(weekend)) {\n                            return weekend;\n                        }\n                        if (!isRealNum(weekend)) {\n                            return formula.error.v;\n                        }\n                        weekend = parseInt(weekend);\n                        if (weekend < 1 || weekend > 7 && weekend < 11 || weekend > 17) {\n                            return formula.error.nm;\n                        }\n                        weekend = WEEKEND_TYPES[weekend];\n                    }\n                }    //这是一个范围或数组常量，其中包含作为节假日的日期\n                //这是一个范围或数组常量，其中包含作为节假日的日期\n                var holidays = [];\n                if (arguments.length == 4) {\n                    holidays = func_methods.getCellrangeDate(arguments[3]);\n                    if (valueIsError(holidays)) {\n                        return holidays;\n                    }\n                }\n                for (var i = 0; i < holidays.length; i++) {\n                    if (!dayjs(holidays[i]).isValid()) {\n                        return formula.error.v;\n                    }\n                }    //计算\n                //计算\n                var d = 0;\n                while (d < days) {\n                    start_date = dayjs(start_date).add(1, 'days');\n                    var day = dayjs(start_date).weekday();\n                    if (getObjType(weekend)) {\n                        if (day === weekend[0] || day === weekend[1]) {\n                            continue;\n                        }\n                    } else {\n                        if (day == 0) {\n                            day = 7;\n                        }\n                        if (weekend.charAt(day - 1) == '0') {\n                            continue;\n                        }\n                    }\n                    for (var j = 0; j < holidays.length; j++) {\n                        if (dayjs(start_date).diff(dayjs(holidays[j]), 'days') === 0) {\n                            d--;\n                            break;\n                        }\n                    }\n                    d++;\n                }\n                return dayjs(start_date).format('YYYY-MM-DD');\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'YEAR': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //开始日期\n                var serial_number = func_methods.getCellDate(arguments[0]);\n                if (valueIsError(serial_number)) {\n                    return serial_number;\n                }\n                if (!dayjs(serial_number).isValid()) {\n                    return formula.error.v;\n                }    //计算\n                //计算\n                return dayjs(serial_number).year();\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'YEARFRAC': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //开始日期\n                var start_date = func_methods.getCellDate(arguments[0]);\n                if (valueIsError(start_date)) {\n                    return start_date;\n                }\n                if (!dayjs(start_date).isValid()) {\n                    return formula.error.v;\n                }    //结束日期\n                //结束日期\n                var end_date = func_methods.getCellDate(arguments[1]);\n                if (valueIsError(end_date)) {\n                    return end_date;\n                }\n                if (!dayjs(end_date).isValid()) {\n                    return formula.error.v;\n                }    //日计数基准类型\n                //日计数基准类型\n                var basis = 0;\n                if (arguments.length == 3) {\n                    basis = func_methods.getFirstValue(arguments[2]);\n                    if (valueIsError(basis)) {\n                        return basis;\n                    }\n                    if (!isRealNum(basis)) {\n                        return formula.error.v;\n                    }\n                    basis = parseInt(basis);\n                }\n                if (basis < 0 || basis > 4) {\n                    return formula.error.nm;\n                }    //计算\n                //计算\n                var sd = dayjs(start_date).date();\n                var sm = dayjs(start_date).month() + 1;\n                var sy = dayjs(start_date).year();\n                var ed = dayjs(end_date).date();\n                var em = dayjs(end_date).month() + 1;\n                var ey = dayjs(end_date).year();\n                var result;\n                switch (basis) {\n                case 0:\n                    // US (NASD) 30/360\n                    if (sd === 31 && ed === 31) {\n                        sd = 30;\n                        ed = 30;\n                    } else if (sd === 31) {\n                        sd = 30;\n                    } else if (sd === 30 && ed === 31) {\n                        ed = 30;\n                    }\n                    result = (ed + em * 30 + ey * 360 - (sd + sm * 30 + sy * 360)) / 360;\n                    break;\n                case 1:\n                    // Actual/actual\n                    var ylength = 365;\n                    if (sy === ey || sy + 1 === ey && (sm > em || sm === em && sd >= ed)) {\n                        if (sy === ey && func_methods.isLeapYear(sy) || func_methods.feb29Between(start_date, end_date) || em === 1 && ed === 29) {\n                            ylength = 366;\n                        }\n                        return dayjs(end_date).diff(dayjs(start_date), 'days') / ylength;\n                    }\n                    var years = ey - sy + 1;\n                    var days = (dayjs().set({\n                        'year': ey + 1,\n                        'month': 0,\n                        'date': 1\n                    }) - dayjs().set({\n                        'year': sy,\n                        'month': 0,\n                        'date': 1\n                    })) / 1000 / 60 / 60 / 24;\n                    var average = days / years;\n                    result = dayjs(end_date).diff(dayjs(start_date), 'days') / average;\n                    break;\n                case 2:\n                    // Actual/360\n                    result = dayjs(end_date).diff(dayjs(start_date), 'days') / 360;\n                    break;\n                case 3:\n                    // Actual/365\n                    result = dayjs(end_date).diff(dayjs(start_date), 'days') / 365;\n                    break;\n                case 4:\n                    // European 30/360\n                    result = (ed + em * 30 + ey * 360 - (sd + sm * 30 + sy * 360)) / 360;\n                    break;\n                }\n                return result;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'TODAY': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                return dayjs().format('YYYY-MM-DD');\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'MONTH': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //开始日期\n                var serial_number = func_methods.getCellDate(arguments[0]);\n                if (valueIsError(serial_number)) {\n                    return serial_number;\n                }\n                if (!dayjs(serial_number).isValid()) {\n                    return formula.error.v;\n                }    //计算\n                //计算\n                return dayjs(serial_number).month() + 1;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'EFFECT': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //每年的名义利率\n                var nominal_rate = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(nominal_rate)) {\n                    return nominal_rate;\n                }\n                if (!isRealNum(nominal_rate)) {\n                    return formula.error.v;\n                }\n                nominal_rate = parseFloat(nominal_rate);    //每年的复利计算期数\n                //每年的复利计算期数\n                var npery = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(npery)) {\n                    return npery;\n                }\n                if (!isRealNum(npery)) {\n                    return formula.error.v;\n                }\n                npery = parseInt(npery);\n                if (nominal_rate <= 0 || npery < 1) {\n                    return formula.error.nm;\n                }\n                return Math.pow(1 + nominal_rate / npery, npery) - 1;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'DOLLAR': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //要设置格式的值\n                var number = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number)) {\n                    return number;\n                }\n                if (!isRealNum(number)) {\n                    return formula.error.v;\n                }\n                number = parseFloat(number);    //显示的小数位数\n                //显示的小数位数\n                var decimals = 2;\n                if (arguments.length == 2) {\n                    decimals = func_methods.getFirstValue(arguments[1]);\n                    if (valueIsError(decimals)) {\n                        return decimals;\n                    }\n                    if (!isRealNum(decimals)) {\n                        return formula.error.v;\n                    }\n                    decimals = parseInt(decimals);\n                }\n                if (decimals > 9) {\n                    decimals = 9;\n                }\n                var foucsStatus = '0.';\n                for (var i = 1; i <= decimals; i++) {\n                    foucsStatus += '0';\n                }    //计算\n                //计算\n                var sign = number > 0 ? 1 : -1;\n                return sign * Math.floor(Math.abs(number) * Math.pow(10, decimals)) / Math.pow(10, decimals);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'DOLLARDE': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //分数\n                var fractional_dollar = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(fractional_dollar)) {\n                    return fractional_dollar;\n                }\n                if (!isRealNum(fractional_dollar)) {\n                    return formula.error.v;\n                }\n                fractional_dollar = parseFloat(fractional_dollar);    //用作分数中的分母的整数\n                //用作分数中的分母的整数\n                var fraction = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(fraction)) {\n                    return fraction;\n                }\n                if (!isRealNum(fraction)) {\n                    return formula.error.v;\n                }\n                fraction = parseInt(fraction);\n                if (fraction < 0) {\n                    return formula.error.nm;\n                } else if (fraction == 0) {\n                    return formula.error.d;\n                }    //计算\n                //计算\n                var result = parseInt(fractional_dollar, 10);\n                result += fractional_dollar % 1 * Math.pow(10, Math.ceil(Math.log(fraction) / Math.LN10)) / fraction;\n                var power = Math.pow(10, Math.ceil(Math.log(fraction) / Math.LN2) + 1);\n                result = Math.round(result * power) / power;\n                return result;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'DOLLARFR': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //小数\n                var decimal_dollar = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(decimal_dollar)) {\n                    return decimal_dollar;\n                }\n                if (!isRealNum(decimal_dollar)) {\n                    return formula.error.v;\n                }\n                decimal_dollar = parseFloat(decimal_dollar);    //用作分数中的分母的整数\n                //用作分数中的分母的整数\n                var fraction = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(fraction)) {\n                    return fraction;\n                }\n                if (!isRealNum(fraction)) {\n                    return formula.error.v;\n                }\n                fraction = parseInt(fraction);\n                if (fraction < 0) {\n                    return formula.error.nm;\n                } else if (fraction == 0) {\n                    return formula.error.d;\n                }    //计算\n                //计算\n                var result = parseInt(decimal_dollar, 10);\n                result += decimal_dollar % 1 * Math.pow(10, -Math.ceil(Math.log(fraction) / Math.LN10)) * fraction;\n                return result;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'DB': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //资产原值\n                var cost = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(cost)) {\n                    return cost;\n                }\n                if (!isRealNum(cost)) {\n                    return formula.error.v;\n                }\n                cost = parseFloat(cost);    //资产残值\n                //资产残值\n                var salvage = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(salvage)) {\n                    return salvage;\n                }\n                if (!isRealNum(salvage)) {\n                    return formula.error.v;\n                }\n                salvage = parseFloat(salvage);    //资产的折旧期数\n                //资产的折旧期数\n                var life = func_methods.getFirstValue(arguments[2]);\n                if (valueIsError(life)) {\n                    return life;\n                }\n                if (!isRealNum(life)) {\n                    return formula.error.v;\n                }\n                life = parseFloat(life);    //在使用期限内要计算折旧的折旧期\n                //在使用期限内要计算折旧的折旧期\n                var period = func_methods.getFirstValue(arguments[3]);\n                if (valueIsError(period)) {\n                    return period;\n                }\n                if (!isRealNum(period)) {\n                    return formula.error.v;\n                }\n                period = parseInt(period);    //折旧第一年中的月数\n                //折旧第一年中的月数\n                var month = 12;\n                if (arguments.length == 5) {\n                    month = func_methods.getFirstValue(arguments[4]);\n                    if (valueIsError(month)) {\n                        return month;\n                    }\n                    if (!isRealNum(month)) {\n                        return formula.error.v;\n                    }\n                    month = parseInt(month);\n                }\n                if (cost < 0 || salvage < 0 || life < 0 || period < 0) {\n                    return formula.error.nm;\n                }\n                if (month < 1 || month > 12) {\n                    return formula.error.nm;\n                }\n                if (period > life) {\n                    return formula.error.nm;\n                }\n                if (salvage >= cost) {\n                    return 0;\n                }    //计算\n                //计算\n                var rate = (1 - Math.pow(salvage / cost, 1 / life)).toFixed(3);\n                var initial = cost * rate * month / 12;\n                var total = initial;\n                var current = 0;\n                var ceiling = period === life ? life - 1 : period;\n                for (var i = 2; i <= ceiling; i++) {\n                    current = (cost - total) * rate;\n                    total += current;\n                }\n                if (period === 1) {\n                    var result = initial;\n                } else if (period === life) {\n                    var result = (cost - total) * rate;\n                } else {\n                    var result = current;\n                }\n                return result;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'DDB': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //资产原值\n                var cost = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(cost)) {\n                    return cost;\n                }\n                if (!isRealNum(cost)) {\n                    return formula.error.v;\n                }\n                cost = parseFloat(cost);    //资产残值\n                //资产残值\n                var salvage = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(salvage)) {\n                    return salvage;\n                }\n                if (!isRealNum(salvage)) {\n                    return formula.error.v;\n                }\n                salvage = parseFloat(salvage);    //资产的折旧期数\n                //资产的折旧期数\n                var life = func_methods.getFirstValue(arguments[2]);\n                if (valueIsError(life)) {\n                    return life;\n                }\n                if (!isRealNum(life)) {\n                    return formula.error.v;\n                }\n                life = parseFloat(life);    //在使用期限内要计算折旧的折旧期\n                //在使用期限内要计算折旧的折旧期\n                var period = func_methods.getFirstValue(arguments[3]);\n                if (valueIsError(period)) {\n                    return period;\n                }\n                if (!isRealNum(period)) {\n                    return formula.error.v;\n                }\n                period = parseInt(period);    //折旧的递减系数\n                //折旧的递减系数\n                var factor = 2;\n                if (arguments.length == 5) {\n                    factor = func_methods.getFirstValue(arguments[4]);\n                    if (valueIsError(factor)) {\n                        return factor;\n                    }\n                    if (!isRealNum(factor)) {\n                        return formula.error.v;\n                    }\n                    factor = parseFloat(factor);\n                }\n                if (cost < 0 || salvage < 0 || life < 0 || period < 0 || factor <= 0) {\n                    return formula.error.nm;\n                }\n                if (period > life) {\n                    return formula.error.nm;\n                }\n                if (salvage >= cost) {\n                    return 0;\n                }    //计算\n                //计算\n                var total = 0;\n                var current = 0;\n                for (var i = 1; i <= period; i++) {\n                    current = Math.min((cost - total) * (factor / life), cost - salvage - total);\n                    total += current;\n                }\n                return current;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'RATE': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //年金的付款总期数。\n                var nper = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(nper)) {\n                    return nper;\n                }\n                if (!isRealNum(nper)) {\n                    return formula.error.v;\n                }\n                nper = parseFloat(nper);    //每期的付款金额\n                //每期的付款金额\n                var pmt = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(pmt)) {\n                    return pmt;\n                }\n                if (!isRealNum(pmt)) {\n                    return formula.error.v;\n                }\n                pmt = parseFloat(pmt);    //现值\n                //现值\n                var pv = func_methods.getFirstValue(arguments[2]);\n                if (valueIsError(pv)) {\n                    return pv;\n                }\n                if (!isRealNum(pv)) {\n                    return formula.error.v;\n                }\n                pv = parseFloat(pv);    //最后一次付款后希望得到的现金余额\n                //最后一次付款后希望得到的现金余额\n                var fv = 0;\n                if (arguments.length >= 4) {\n                    fv = func_methods.getFirstValue(arguments[3]);\n                    if (valueIsError(fv)) {\n                        return fv;\n                    }\n                    if (!isRealNum(fv)) {\n                        return formula.error.v;\n                    }\n                    fv = parseFloat(fv);\n                }    //指定各期的付款时间是在期初还是期末\n                //指定各期的付款时间是在期初还是期末\n                var type = 0;\n                if (arguments.length >= 5) {\n                    type = func_methods.getFirstValue(arguments[4]);\n                    if (valueIsError(type)) {\n                        return type;\n                    }\n                    if (!isRealNum(type)) {\n                        return formula.error.v;\n                    }\n                    type = parseFloat(type);\n                }    //预期利率\n                //预期利率\n                var guess = 0.1;\n                if (arguments.length == 6) {\n                    guess = func_methods.getFirstValue(arguments[5]);\n                    if (valueIsError(guess)) {\n                        return guess;\n                    }\n                    if (!isRealNum(guess)) {\n                        return formula.error.v;\n                    }\n                    guess = parseFloat(guess);\n                }\n                if (type != 0 && type != 1) {\n                    return formula.error.nm;\n                }    //计算\n                //计算\n                var epsMax = 0.000001;\n                var iterMax = 100;\n                var iter = 0;\n                var close = false;\n                var rate = guess;\n                while (iter < iterMax && !close) {\n                    var t1 = Math.pow(rate + 1, nper);\n                    var t2 = Math.pow(rate + 1, nper - 1);\n                    var f1 = fv + t1 * pv + pmt * (t1 - 1) * (rate * type + 1) / rate;\n                    var f2 = nper * t2 * pv - pmt * (t1 - 1) * (rate * type + 1) / Math.pow(rate, 2);\n                    var f3 = nper * pmt * t2 * (rate * type + 1) / rate + pmt * (t1 - 1) * type / rate;\n                    var newRate = rate - f1 / (f2 + f3);\n                    if (Math.abs(newRate - rate) < epsMax)\n                        close = true;\n                    iter++;\n                    rate = newRate;\n                }\n                if (!close)\n                    return formula.error.nm;\n                return rate;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'CUMPRINC': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //利率\n                var rate = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(rate)) {\n                    return rate;\n                }\n                if (!isRealNum(rate)) {\n                    return formula.error.v;\n                }\n                rate = parseFloat(rate);    //总付款期数\n                //总付款期数\n                var nper = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(nper)) {\n                    return nper;\n                }\n                if (!isRealNum(nper)) {\n                    return formula.error.v;\n                }\n                nper = parseFloat(nper);    //年金的现值\n                //年金的现值\n                var pv = func_methods.getFirstValue(arguments[2]);\n                if (valueIsError(pv)) {\n                    return pv;\n                }\n                if (!isRealNum(pv)) {\n                    return formula.error.v;\n                }\n                pv = parseFloat(pv);    //首期\n                //首期\n                var start_period = func_methods.getFirstValue(arguments[3]);\n                if (valueIsError(start_period)) {\n                    return start_period;\n                }\n                if (!isRealNum(start_period)) {\n                    return formula.error.v;\n                }\n                start_period = parseInt(start_period);    //末期\n                //末期\n                var end_period = func_methods.getFirstValue(arguments[4]);\n                if (valueIsError(end_period)) {\n                    return end_period;\n                }\n                if (!isRealNum(end_period)) {\n                    return formula.error.v;\n                }\n                end_period = parseInt(end_period);    //指定各期的付款时间是在期初还是期末\n                //指定各期的付款时间是在期初还是期末\n                var type = func_methods.getFirstValue(arguments[5]);\n                if (valueIsError(type)) {\n                    return type;\n                }\n                if (!isRealNum(type)) {\n                    return formula.error.v;\n                }\n                type = parseFloat(type);\n                if (rate <= 0 || nper <= 0 || pv <= 0) {\n                    return formula.error.nm;\n                }\n                if (start_period < 1 || end_period < 1 || start_period > end_period) {\n                    return formula.error.nm;\n                }\n                if (type != 0 && type != 1) {\n                    return formula.error.nm;\n                }    //计算\n                //计算\n                var payment = window.luckysheet_function.PMT.f(rate, nper, pv, 0, type);\n                var principal = 0;\n                if (start_period === 1) {\n                    if (type === 0) {\n                        principal = payment + pv * rate;\n                    } else {\n                        principal = payment;\n                    }\n                    start_period++;\n                }\n                for (var i = start_period; i <= end_period; i++) {\n                    if (type > 0) {\n                        principal += payment - (window.luckysheet_function.FV.f(rate, i - 2, payment, pv, 1) - payment) * rate;\n                    } else {\n                        principal += payment - window.luckysheet_function.FV.f(rate, i - 1, payment, pv, 0) * rate;\n                    }\n                }\n                return principal;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'COUPNUM': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //结算日\n                var settlement = func_methods.getCellDate(arguments[0]);\n                if (valueIsError(settlement)) {\n                    return settlement;\n                }\n                if (!dayjs(settlement).isValid()) {\n                    return formula.error.v;\n                }    //到期日\n                //到期日\n                var maturity = func_methods.getCellDate(arguments[1]);\n                if (valueIsError(maturity)) {\n                    return maturity;\n                }\n                if (!dayjs(maturity).isValid()) {\n                    return formula.error.v;\n                }    //年付息次数\n                //年付息次数\n                var frequency = func_methods.getFirstValue(arguments[2]);\n                if (valueIsError(frequency)) {\n                    return frequency;\n                }\n                if (!isRealNum(frequency)) {\n                    return formula.error.v;\n                }\n                frequency = parseInt(frequency);    //日计数基准类型\n                //日计数基准类型\n                var basis = 0;\n                if (arguments.length == 4) {\n                    var basis = func_methods.getFirstValue(arguments[3]);\n                    if (valueIsError(basis)) {\n                        return basis;\n                    }\n                    if (!isRealNum(basis)) {\n                        return formula.error.v;\n                    }\n                    basis = parseInt(basis);\n                }\n                if (frequency != 1 && frequency != 2 && frequency != 4) {\n                    return formula.error.nm;\n                }\n                if (basis < 0 || basis > 4) {\n                    return formula.error.nm;\n                }\n                if (dayjs(settlement) - dayjs(maturity) >= 0) {\n                    return formula.error.nm;\n                }    //计算\n                //计算\n                var sd = dayjs(settlement).date();\n                var sm = dayjs(settlement).month() + 1;\n                var sy = dayjs(settlement).year();\n                var ed = dayjs(maturity).date();\n                var em = dayjs(maturity).month() + 1;\n                var ey = dayjs(maturity).year();\n                var result;\n                switch (basis) {\n                case 0:\n                    // US (NASD) 30/360\n                    if (sd === 31 && ed === 31) {\n                        sd = 30;\n                        ed = 30;\n                    } else if (sd === 31) {\n                        sd = 30;\n                    } else if (sd === 30 && ed === 31) {\n                        ed = 30;\n                    }\n                    result = (ed + em * 30 + ey * 360 - (sd + sm * 30 + sy * 360)) / (360 / frequency);\n                    break;\n                case 1:\n                    // Actual/actual\n                    var ylength = 365;\n                    if (sy === ey || sy + 1 === ey && (sm > em || sm === em && sd >= ed)) {\n                        if (sy === ey && func_methods.isLeapYear(sy) || func_methods.feb29Between(settlement, maturity) || em === 1 && ed === 29) {\n                            ylength = 366;\n                        }\n                        return dayjs(maturity).diff(dayjs(settlement), 'days') / (ylength / frequency);\n                    }\n                    var years = ey - sy + 1;\n                    var days = (dayjs().set({\n                        'year': ey + 1,\n                        'month': 0,\n                        'date': 1\n                    }) - dayjs().set({\n                        'year': sy,\n                        'month': 0,\n                        'date': 1\n                    })) / 1000 / 60 / 60 / 24;\n                    var average = days / years;\n                    result = dayjs(maturity).diff(dayjs(settlement), 'days') / (average / frequency);\n                    break;\n                case 2:\n                    // Actual/360\n                    result = dayjs(maturity).diff(dayjs(settlement), 'days') / (360 / frequency);\n                    break;\n                case 3:\n                    // Actual/365\n                    result = dayjs(maturity).diff(dayjs(settlement), 'days') / (365 / frequency);\n                    break;\n                case 4:\n                    // European 30/360\n                    result = (ed + em * 30 + ey * 360 - (sd + sm * 30 + sy * 360)) / (360 / frequency);\n                    break;\n                }\n                return Math.round(result);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'SYD': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //资产原值\n                var cost = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(cost)) {\n                    return cost;\n                }\n                if (!isRealNum(cost)) {\n                    return formula.error.v;\n                }\n                cost = parseFloat(cost);    //资产残值\n                //资产残值\n                var salvage = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(salvage)) {\n                    return salvage;\n                }\n                if (!isRealNum(salvage)) {\n                    return formula.error.v;\n                }\n                salvage = parseFloat(salvage);    //资产的折旧期数\n                //资产的折旧期数\n                var life = func_methods.getFirstValue(arguments[2]);\n                if (valueIsError(life)) {\n                    return life;\n                }\n                if (!isRealNum(life)) {\n                    return formula.error.v;\n                }\n                life = parseFloat(life);    //在使用期限内要计算折旧的折旧期\n                //在使用期限内要计算折旧的折旧期\n                var period = func_methods.getFirstValue(arguments[3]);\n                if (valueIsError(period)) {\n                    return period;\n                }\n                if (!isRealNum(period)) {\n                    return formula.error.v;\n                }\n                period = parseInt(period);\n                if (life == 0) {\n                    return formula.error.nm;\n                }\n                if (period < 1 || period > life) {\n                    return formula.error.nm;\n                }\n                return (cost - salvage) * (life - period + 1) * 2 / (life * (life + 1));\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'TBILLEQ': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //结算日\n                var settlement = func_methods.getCellDate(arguments[0]);\n                if (valueIsError(settlement)) {\n                    return settlement;\n                }\n                if (!dayjs(settlement).isValid()) {\n                    return formula.error.v;\n                }    //到期日\n                //到期日\n                var maturity = func_methods.getCellDate(arguments[1]);\n                if (valueIsError(maturity)) {\n                    return maturity;\n                }\n                if (!dayjs(maturity).isValid()) {\n                    return formula.error.v;\n                }    //债券购买时的贴现率\n                //债券购买时的贴现率\n                var discount = func_methods.getFirstValue(arguments[2]);\n                if (valueIsError(discount)) {\n                    return discount;\n                }\n                if (!isRealNum(discount)) {\n                    return formula.error.v;\n                }\n                discount = parseFloat(discount);\n                if (discount <= 0) {\n                    return formula.error.nm;\n                }\n                if (dayjs(settlement) - dayjs(maturity) > 0) {\n                    return formula.error.nm;\n                }\n                if (dayjs(maturity) - dayjs(settlement) > 365 * 24 * 60 * 60 * 1000) {\n                    return formula.error.nm;\n                }\n                return 365 * discount / (360 - discount * dayjs(maturity).diff(dayjs(settlement), 'days'));\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'TBILLYIELD': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //结算日\n                var settlement = func_methods.getCellDate(arguments[0]);\n                if (valueIsError(settlement)) {\n                    return settlement;\n                }\n                if (!dayjs(settlement).isValid()) {\n                    return formula.error.v;\n                }    //到期日\n                //到期日\n                var maturity = func_methods.getCellDate(arguments[1]);\n                if (valueIsError(maturity)) {\n                    return maturity;\n                }\n                if (!dayjs(maturity).isValid()) {\n                    return formula.error.v;\n                }    //有价证券的价格\n                //有价证券的价格\n                var pr = func_methods.getFirstValue(arguments[2]);\n                if (valueIsError(pr)) {\n                    return pr;\n                }\n                if (!isRealNum(pr)) {\n                    return formula.error.v;\n                }\n                pr = parseFloat(pr);\n                if (pr <= 0) {\n                    return formula.error.nm;\n                }\n                if (dayjs(settlement) - dayjs(maturity) >= 0) {\n                    return formula.error.nm;\n                }\n                if (dayjs(maturity) - dayjs(settlement) > 365 * 24 * 60 * 60 * 1000) {\n                    return formula.error.nm;\n                }\n                return (100 - pr) / pr * (360 / dayjs(maturity).diff(dayjs(settlement), 'days'));\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'TBILLPRICE': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //结算日\n                var settlement = func_methods.getCellDate(arguments[0]);\n                if (valueIsError(settlement)) {\n                    return settlement;\n                }\n                if (!dayjs(settlement).isValid()) {\n                    return formula.error.v;\n                }    //到期日\n                //到期日\n                var maturity = func_methods.getCellDate(arguments[1]);\n                if (valueIsError(maturity)) {\n                    return maturity;\n                }\n                if (!dayjs(maturity).isValid()) {\n                    return formula.error.v;\n                }    //有价证券的价格\n                //有价证券的价格\n                var discount = func_methods.getFirstValue(arguments[2]);\n                if (valueIsError(discount)) {\n                    return discount;\n                }\n                if (!isRealNum(discount)) {\n                    return formula.error.v;\n                }\n                discount = parseFloat(discount);\n                if (discount <= 0) {\n                    return formula.error.nm;\n                }\n                if (dayjs(settlement) - dayjs(maturity) > 0) {\n                    return formula.error.nm;\n                }\n                if (dayjs(maturity) - dayjs(settlement) > 365 * 24 * 60 * 60 * 1000) {\n                    return formula.error.nm;\n                }\n                return 100 * (1 - discount * dayjs(maturity).diff(dayjs(settlement), 'days') / 360);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'PV': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //利率\n                var rate = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(rate)) {\n                    return rate;\n                }\n                if (!isRealNum(rate)) {\n                    return formula.error.v;\n                }\n                rate = parseFloat(rate);    //总付款期数\n                //总付款期数\n                var nper = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(nper)) {\n                    return nper;\n                }\n                if (!isRealNum(nper)) {\n                    return formula.error.v;\n                }\n                nper = parseFloat(nper);    //每期的付款金额\n                //每期的付款金额\n                var pmt = func_methods.getFirstValue(arguments[2]);\n                if (valueIsError(pmt)) {\n                    return pmt;\n                }\n                if (!isRealNum(pmt)) {\n                    return formula.error.v;\n                }\n                pmt = parseFloat(pmt);    //最后一次付款后希望得到的现金余额\n                //最后一次付款后希望得到的现金余额\n                var fv = 0;\n                if (arguments.length >= 4) {\n                    fv = func_methods.getFirstValue(arguments[3]);\n                    if (valueIsError(fv)) {\n                        return fv;\n                    }\n                    if (!isRealNum(fv)) {\n                        return formula.error.v;\n                    }\n                    fv = parseFloat(fv);\n                }    //指定各期的付款时间是在期初还是期末\n                //指定各期的付款时间是在期初还是期末\n                var type = 0;\n                if (arguments.length >= 5) {\n                    type = func_methods.getFirstValue(arguments[4]);\n                    if (valueIsError(type)) {\n                        return type;\n                    }\n                    if (!isRealNum(type)) {\n                        return formula.error.v;\n                    }\n                    type = parseFloat(type);\n                }\n                if (type != 0 && type != 1) {\n                    return formula.error.nm;\n                }    //计算\n                //计算\n                if (rate === 0) {\n                    var result = -pmt * nper - fv;\n                } else {\n                    var result = ((1 - Math.pow(1 + rate, nper)) / rate * pmt * (1 + rate * type) - fv) / Math.pow(1 + rate, nper);\n                }\n                return result;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'ACCRINT': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //有价证券的发行日\n                var issue = func_methods.getCellDate(arguments[0]);\n                if (valueIsError(issue)) {\n                    return issue;\n                }\n                if (!dayjs(issue).isValid()) {\n                    return formula.error.v;\n                }    //有价证券的首次计息日\n                //有价证券的首次计息日\n                var first_interest = func_methods.getCellDate(arguments[1]);\n                if (valueIsError(first_interest)) {\n                    return first_interest;\n                }\n                if (!dayjs(first_interest).isValid()) {\n                    return formula.error.v;\n                }    //有价证券的结算日\n                //有价证券的结算日\n                var settlement = func_methods.getCellDate(arguments[2]);\n                if (valueIsError(settlement)) {\n                    return settlement;\n                }\n                if (!dayjs(settlement).isValid()) {\n                    return formula.error.v;\n                }    //有价证券的年息票利率\n                //有价证券的年息票利率\n                var rate = func_methods.getFirstValue(arguments[3]);\n                if (valueIsError(rate)) {\n                    return rate;\n                }\n                if (!isRealNum(rate)) {\n                    return formula.error.v;\n                }\n                rate = parseFloat(rate);    //证券的票面值\n                //证券的票面值\n                var par = func_methods.getFirstValue(arguments[4]);\n                if (valueIsError(par)) {\n                    return par;\n                }\n                if (!isRealNum(par)) {\n                    return formula.error.v;\n                }\n                par = parseFloat(par);    //年付息次数\n                //年付息次数\n                var frequency = func_methods.getFirstValue(arguments[5]);\n                if (valueIsError(frequency)) {\n                    return frequency;\n                }\n                if (!isRealNum(frequency)) {\n                    return formula.error.v;\n                }\n                frequency = parseInt(frequency);    //日计数基准类型\n                //日计数基准类型\n                var basis = 0;\n                if (arguments.length >= 7) {\n                    basis = func_methods.getFirstValue(arguments[6]);\n                    if (valueIsError(basis)) {\n                        return basis;\n                    }\n                    if (!isRealNum(basis)) {\n                        return formula.error.v;\n                    }\n                    basis = parseInt(basis);\n                }    //当结算日期晚于首次计息日期时用于计算总应计利息的方法\n                //当结算日期晚于首次计息日期时用于计算总应计利息的方法\n                var calc_method = true;\n                if (arguments.length == 8) {\n                    calc_method = func_methods.getCellBoolen(arguments[7]);\n                    if (valueIsError(calc_method)) {\n                        return calc_method;\n                    }\n                }\n                if (rate <= 0 || par <= 0) {\n                    return formula.error.nm;\n                }\n                if (frequency != 1 && frequency != 2 && frequency != 4) {\n                    return formula.error.nm;\n                }\n                if (basis < 0 || basis > 4) {\n                    return formula.error.nm;\n                }\n                if (dayjs(issue) - dayjs(settlement) >= 0) {\n                    return formula.error.nm;\n                }    //计算\n                //计算\n                var result;\n                if (dayjs(settlement) - dayjs(first_interest) >= 0 && !calc_method) {\n                    var sd = dayjs(first_interest).date();\n                    var sm = dayjs(first_interest).month() + 1;\n                    var sy = dayjs(first_interest).year();\n                    var ed = dayjs(settlement).date();\n                    var em = dayjs(settlement).month() + 1;\n                    var ey = dayjs(settlement).year();\n                    switch (basis) {\n                    case 0:\n                        // US (NASD) 30/360\n                        if (sd === 31 && ed === 31) {\n                            sd = 30;\n                            ed = 30;\n                        } else if (sd === 31) {\n                            sd = 30;\n                        } else if (sd === 30 && ed === 31) {\n                            ed = 30;\n                        }\n                        result = (ed + em * 30 + ey * 360 - (sd + sm * 30 + sy * 360)) / 360;\n                        break;\n                    case 1:\n                        // Actual/actual\n                        var ylength = 365;\n                        if (sy === ey || sy + 1 === ey && (sm > em || sm === em && sd >= ed)) {\n                            if (sy === ey && func_methods.isLeapYear(sy) || func_methods.feb29Between(first_interest, settlement) || em === 1 && ed === 29) {\n                                ylength = 366;\n                            }\n                            return dayjs(settlement).diff(dayjs(first_interest), 'days') / ylength;\n                        }\n                        var years = ey - sy + 1;\n                        var days = (dayjs().set({\n                            'year': ey + 1,\n                            'month': 0,\n                            'date': 1\n                        }) - dayjs().set({\n                            'year': sy,\n                            'month': 0,\n                            'date': 1\n                        })) / 1000 / 60 / 60 / 24;\n                        var average = days / years;\n                        result = dayjs(settlement).diff(dayjs(first_interest), 'days') / average;\n                        break;\n                    case 2:\n                        // Actual/360\n                        result = dayjs(settlement).diff(dayjs(first_interest), 'days') / 360;\n                        break;\n                    case 3:\n                        // Actual/365\n                        result = dayjs(settlement).diff(dayjs(first_interest), 'days') / 365;\n                        break;\n                    case 4:\n                        // European 30/360\n                        result = (ed + em * 30 + ey * 360 - (sd + sm * 30 + sy * 360)) / 360;\n                        break;\n                    }\n                } else {\n                    var sd = dayjs(issue).date();\n                    var sm = dayjs(issue).month() + 1;\n                    var sy = dayjs(issue).year();\n                    var ed = dayjs(settlement).date();\n                    var em = dayjs(settlement).month() + 1;\n                    var ey = dayjs(settlement).year();\n                    switch (basis) {\n                    case 0:\n                        // US (NASD) 30/360\n                        if (sd === 31 && ed === 31) {\n                            sd = 30;\n                            ed = 30;\n                        } else if (sd === 31) {\n                            sd = 30;\n                        } else if (sd === 30 && ed === 31) {\n                            ed = 30;\n                        }\n                        result = (ed + em * 30 + ey * 360 - (sd + sm * 30 + sy * 360)) / 360;\n                        break;\n                    case 1:\n                        // Actual/actual\n                        var ylength = 365;\n                        if (sy === ey || sy + 1 === ey && (sm > em || sm === em && sd >= ed)) {\n                            if (sy === ey && func_methods.isLeapYear(sy) || func_methods.feb29Between(issue, settlement) || em === 1 && ed === 29) {\n                                ylength = 366;\n                            }\n                            return dayjs(settlement).diff(dayjs(issue), 'days') / ylength;\n                        }\n                        var years = ey - sy + 1;\n                        var days = (dayjs().set({\n                            'year': ey + 1,\n                            'month': 0,\n                            'date': 1\n                        }) - dayjs().set({\n                            'year': sy,\n                            'month': 0,\n                            'date': 1\n                        })) / 1000 / 60 / 60 / 24;\n                        var average = days / years;\n                        result = dayjs(settlement).diff(dayjs(issue), 'days') / average;\n                        break;\n                    case 2:\n                        // Actual/360\n                        result = dayjs(settlement).diff(dayjs(issue), 'days') / 360;\n                        break;\n                    case 3:\n                        // Actual/365\n                        result = dayjs(settlement).diff(dayjs(issue), 'days') / 365;\n                        break;\n                    case 4:\n                        // European 30/360\n                        result = (ed + em * 30 + ey * 360 - (sd + sm * 30 + sy * 360)) / 360;\n                        break;\n                    }\n                }\n                return par * rate * result;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'ACCRINTM': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //有价证券的发行日\n                var issue = func_methods.getCellDate(arguments[0]);\n                if (valueIsError(issue)) {\n                    return issue;\n                }\n                if (!dayjs(issue).isValid()) {\n                    return formula.error.v;\n                }    //有价证券的到期日\n                //有价证券的到期日\n                var settlement = func_methods.getCellDate(arguments[1]);\n                if (valueIsError(settlement)) {\n                    return settlement;\n                }\n                if (!dayjs(settlement).isValid()) {\n                    return formula.error.v;\n                }    //有价证券的年息票利率\n                //有价证券的年息票利率\n                var rate = func_methods.getFirstValue(arguments[2]);\n                if (valueIsError(rate)) {\n                    return rate;\n                }\n                if (!isRealNum(rate)) {\n                    return formula.error.v;\n                }\n                rate = parseFloat(rate);    //证券的票面值\n                //证券的票面值\n                var par = func_methods.getFirstValue(arguments[3]);\n                if (valueIsError(par)) {\n                    return par;\n                }\n                if (!isRealNum(par)) {\n                    return formula.error.v;\n                }\n                par = parseFloat(par);    //日计数基准类型\n                //日计数基准类型\n                var basis = 0;\n                if (arguments.length == 5) {\n                    basis = func_methods.getFirstValue(arguments[4]);\n                    if (valueIsError(basis)) {\n                        return basis;\n                    }\n                    if (!isRealNum(basis)) {\n                        return formula.error.v;\n                    }\n                    basis = parseInt(basis);\n                }\n                if (rate <= 0 || par <= 0) {\n                    return formula.error.nm;\n                }\n                if (basis < 0 || basis > 4) {\n                    return formula.error.nm;\n                }\n                if (dayjs(issue) - dayjs(settlement) >= 0) {\n                    return formula.error.nm;\n                }    //计算\n                //计算\n                var sd = dayjs(issue).date();\n                var sm = dayjs(issue).month() + 1;\n                var sy = dayjs(issue).year();\n                var ed = dayjs(settlement).date();\n                var em = dayjs(settlement).month() + 1;\n                var ey = dayjs(settlement).year();\n                var result;\n                switch (basis) {\n                case 0:\n                    // US (NASD) 30/360\n                    if (sd === 31 && ed === 31) {\n                        sd = 30;\n                        ed = 30;\n                    } else if (sd === 31) {\n                        sd = 30;\n                    } else if (sd === 30 && ed === 31) {\n                        ed = 30;\n                    }\n                    result = (ed + em * 30 + ey * 360 - (sd + sm * 30 + sy * 360)) / 360;\n                    break;\n                case 1:\n                    // Actual/actual\n                    var ylength = 365;\n                    if (sy === ey || sy + 1 === ey && (sm > em || sm === em && sd >= ed)) {\n                        if (sy === ey && func_methods.isLeapYear(sy) || func_methods.feb29Between(issue, settlement) || em === 1 && ed === 29) {\n                            ylength = 366;\n                        }\n                        return dayjs(settlement).diff(dayjs(issue), 'days') / ylength;\n                    }\n                    var years = ey - sy + 1;\n                    var days = (dayjs().set({\n                        'year': ey + 1,\n                        'month': 0,\n                        'date': 1\n                    }) - dayjs().set({\n                        'year': sy,\n                        'month': 0,\n                        'date': 1\n                    })) / 1000 / 60 / 60 / 24;\n                    var average = days / years;\n                    result = dayjs(settlement).diff(dayjs(issue), 'days') / average;\n                    break;\n                case 2:\n                    // Actual/360\n                    result = dayjs(settlement).diff(dayjs(issue), 'days') / 360;\n                    break;\n                case 3:\n                    // Actual/365\n                    result = dayjs(settlement).diff(dayjs(issue), 'days') / 365;\n                    break;\n                case 4:\n                    // European 30/360\n                    result = (ed + em * 30 + ey * 360 - (sd + sm * 30 + sy * 360)) / 360;\n                    break;\n                }\n                return par * rate * result;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'COUPDAYBS': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //结算日\n                var settlement = func_methods.getCellDate(arguments[0]);\n                if (valueIsError(settlement)) {\n                    return settlement;\n                }\n                if (!dayjs(settlement).isValid()) {\n                    return formula.error.v;\n                }    //到期日\n                //到期日\n                var maturity = func_methods.getCellDate(arguments[1]);\n                if (valueIsError(maturity)) {\n                    return maturity;\n                }\n                if (!dayjs(maturity).isValid()) {\n                    return formula.error.v;\n                }    //年付息次数\n                //年付息次数\n                var frequency = func_methods.getFirstValue(arguments[2]);\n                if (valueIsError(frequency)) {\n                    return frequency;\n                }\n                if (!isRealNum(frequency)) {\n                    return formula.error.v;\n                }\n                frequency = parseInt(frequency);    //日计数基准类型\n                //日计数基准类型\n                var basis = 0;\n                if (arguments.length == 4) {\n                    basis = func_methods.getFirstValue(arguments[3]);\n                    if (valueIsError(basis)) {\n                        return basis;\n                    }\n                    if (!isRealNum(basis)) {\n                        return formula.error.v;\n                    }\n                    basis = parseInt(basis);\n                }\n                if (frequency != 1 && frequency != 2 && frequency != 4) {\n                    return formula.error.nm;\n                }\n                if (basis < 0 || basis > 4) {\n                    return formula.error.nm;\n                }\n                if (dayjs(settlement) - dayjs(maturity) >= 0) {\n                    return formula.error.nm;\n                }    //计算\n                //计算\n                var interest;    //结算日之前的上一个付息日\n                //结算日之前的上一个付息日\n                var maxCount = Math.ceil(dayjs(maturity).diff(dayjs(settlement), 'months') / (12 / frequency)) + 1;\n                for (var i = 1; i <= maxCount; i++) {\n                    var di = dayjs(maturity).subtract(12 / frequency * i, 'months');\n                    if (di <= dayjs(settlement)) {\n                        interest = di;\n                        break;\n                    }\n                }\n                var result;\n                switch (basis) {\n                case 0:\n                    // US (NASD) 30/360\n                    var sd = dayjs(interest).date();\n                    var sm = dayjs(interest).month() + 1;\n                    var sy = dayjs(interest).year();\n                    var ed = dayjs(settlement).date();\n                    var em = dayjs(settlement).month() + 1;\n                    var ey = dayjs(settlement).year();\n                    if (sd === 31 && ed === 31) {\n                        sd = 30;\n                        ed = 30;\n                    } else if (sd === 31) {\n                        sd = 30;\n                    } else if (sd === 30 && ed === 31) {\n                        ed = 30;\n                    }\n                    result = ed + em * 30 + ey * 360 - (sd + sm * 30 + sy * 360);\n                    break;\n                case 1:    // Actual/actual\n                // Actual/actual\n                case 2:    // Actual/360\n                // Actual/360\n                case 3:\n                    // Actual/365\n                    result = dayjs(settlement).diff(dayjs(interest), 'days');\n                    break;\n                case 4:\n                    // European 30/360\n                    var sd = dayjs(interest).date();\n                    var sm = dayjs(interest).month() + 1;\n                    var sy = dayjs(interest).year();\n                    var ed = dayjs(settlement).date();\n                    var em = dayjs(settlement).month() + 1;\n                    var ey = dayjs(settlement).year();\n                    result = ed + em * 30 + ey * 360 - (sd + sm * 30 + sy * 360);\n                    break;\n                }\n                return result;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'COUPDAYS': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //结算日\n                var settlement = func_methods.getCellDate(arguments[0]);\n                if (valueIsError(settlement)) {\n                    return settlement;\n                }\n                if (!dayjs(settlement).isValid()) {\n                    return formula.error.v;\n                }    //到期日\n                //到期日\n                var maturity = func_methods.getCellDate(arguments[1]);\n                if (valueIsError(maturity)) {\n                    return maturity;\n                }\n                if (!dayjs(maturity).isValid()) {\n                    return formula.error.v;\n                }    //年付息次数\n                //年付息次数\n                var frequency = func_methods.getFirstValue(arguments[2]);\n                if (valueIsError(frequency)) {\n                    return frequency;\n                }\n                if (!isRealNum(frequency)) {\n                    return formula.error.v;\n                }\n                frequency = parseInt(frequency);    //日计数基准类型\n                //日计数基准类型\n                var basis = 0;\n                if (arguments.length == 4) {\n                    basis = func_methods.getFirstValue(arguments[3]);\n                    if (valueIsError(basis)) {\n                        return basis;\n                    }\n                    if (!isRealNum(basis)) {\n                        return formula.error.v;\n                    }\n                    basis = parseInt(basis);\n                }\n                if (frequency != 1 && frequency != 2 && frequency != 4) {\n                    return formula.error.nm;\n                }\n                if (basis < 0 || basis > 4) {\n                    return formula.error.nm;\n                }\n                if (dayjs(settlement) - dayjs(maturity) >= 0) {\n                    return formula.error.nm;\n                }    //计算\n                //计算\n                var result;\n                switch (basis) {\n                case 0:\n                    // US (NASD) 30/360\n                    result = 360 / frequency;\n                    break;\n                case 1:\n                    // Actual/actual\n                    var maxCount = Math.ceil(dayjs(maturity).diff(dayjs(settlement), 'months') / (12 / frequency)) + 1;\n                    for (var i = 1; i <= maxCount; i++) {\n                        var d1 = dayjs(maturity).subtract(12 / frequency * i, 'months');\n                        if (d1 <= dayjs(settlement)) {\n                            var d2 = dayjs(maturity).subtract(12 / frequency * (i - 1), 'months');\n                            result = dayjs(d2).diff(dayjs(d1), 'days');\n                            break;\n                        }\n                    }\n                    break;\n                case 2:\n                    // Actual/360\n                    result = 360 / frequency;\n                    break;\n                case 3:\n                    // Actual/365\n                    result = 365 / frequency;\n                    break;\n                case 4:\n                    // European 30/360\n                    result = 360 / frequency;\n                    break;\n                }\n                return result;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'COUPDAYSNC': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //结算日\n                var settlement = func_methods.getCellDate(arguments[0]);\n                if (valueIsError(settlement)) {\n                    return settlement;\n                }\n                if (!dayjs(settlement).isValid()) {\n                    return formula.error.v;\n                }    //到期日\n                //到期日\n                var maturity = func_methods.getCellDate(arguments[1]);\n                if (valueIsError(maturity)) {\n                    return maturity;\n                }\n                if (!dayjs(maturity).isValid()) {\n                    return formula.error.v;\n                }    //年付息次数\n                //年付息次数\n                var frequency = func_methods.getFirstValue(arguments[2]);\n                if (valueIsError(frequency)) {\n                    return frequency;\n                }\n                if (!isRealNum(frequency)) {\n                    return formula.error.v;\n                }\n                frequency = parseInt(frequency);    //日计数基准类型\n                //日计数基准类型\n                var basis = 0;\n                if (arguments.length == 4) {\n                    basis = func_methods.getFirstValue(arguments[3]);\n                    if (valueIsError(basis)) {\n                        return basis;\n                    }\n                    if (!isRealNum(basis)) {\n                        return formula.error.v;\n                    }\n                    basis = parseInt(basis);\n                }\n                if (frequency != 1 && frequency != 2 && frequency != 4) {\n                    return formula.error.nm;\n                }\n                if (basis < 0 || basis > 4) {\n                    return formula.error.nm;\n                }\n                if (dayjs(settlement) - dayjs(maturity) >= 0) {\n                    return formula.error.nm;\n                }    //计算\n                //计算\n                var interest;    //结算日之后的下一个付息日\n                //结算日之后的下一个付息日\n                var maxCount = Math.ceil(dayjs(maturity).diff(dayjs(settlement), 'months') / (12 / frequency)) + 1;\n                for (var i = 1; i <= maxCount; i++) {\n                    var di = dayjs(maturity).subtract(12 / frequency * i, 'months');\n                    if (di <= dayjs(settlement)) {\n                        interest = dayjs(maturity).subtract(12 / frequency * (i - 1), 'months');\n                        break;\n                    }\n                }\n                var result;\n                switch (basis) {\n                case 0:\n                    // US (NASD) 30/360\n                    var sd = dayjs(settlement).date();\n                    var sm = dayjs(settlement).month() + 1;\n                    var sy = dayjs(settlement).year();\n                    var ed = dayjs(interest).date();\n                    var em = dayjs(interest).month() + 1;\n                    var ey = dayjs(interest).year();\n                    if (sd === 31 && ed === 31) {\n                        sd = 30;\n                        ed = 30;\n                    } else if (sd === 31) {\n                        sd = 30;\n                    } else if (sd === 30 && ed === 31) {\n                        ed = 30;\n                    }\n                    result = ed + em * 30 + ey * 360 - (sd + sm * 30 + sy * 360);\n                    break;\n                case 1:    // Actual/actual\n                // Actual/actual\n                case 2:    // Actual/360\n                // Actual/360\n                case 3:\n                    // Actual/365\n                    result = dayjs(interest).diff(dayjs(settlement), 'days');\n                    break;\n                case 4:\n                    // European 30/360\n                    var sd = dayjs(settlement).date();\n                    var sm = dayjs(settlement).month() + 1;\n                    var sy = dayjs(settlement).year();\n                    var ed = dayjs(interest).date();\n                    var em = dayjs(interest).month() + 1;\n                    var ey = dayjs(interest).year();\n                    result = ed + em * 30 + ey * 360 - (sd + sm * 30 + sy * 360);\n                    break;\n                }\n                return result;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'COUPNCD': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //结算日\n                var settlement = func_methods.getCellDate(arguments[0]);\n                if (valueIsError(settlement)) {\n                    return settlement;\n                }\n                if (!dayjs(settlement).isValid()) {\n                    return formula.error.v;\n                }    //到期日\n                //到期日\n                var maturity = func_methods.getCellDate(arguments[1]);\n                if (valueIsError(maturity)) {\n                    return maturity;\n                }\n                if (!dayjs(maturity).isValid()) {\n                    return formula.error.v;\n                }    //年付息次数\n                //年付息次数\n                var frequency = func_methods.getFirstValue(arguments[2]);\n                if (valueIsError(frequency)) {\n                    return frequency;\n                }\n                if (!isRealNum(frequency)) {\n                    return formula.error.v;\n                }\n                frequency = parseInt(frequency);    //日计数基准类型\n                //日计数基准类型\n                var basis = 0;\n                if (arguments.length == 4) {\n                    basis = func_methods.getFirstValue(arguments[3]);\n                    if (valueIsError(basis)) {\n                        return basis;\n                    }\n                    if (!isRealNum(basis)) {\n                        return formula.error.v;\n                    }\n                    basis = parseInt(basis);\n                }\n                if (frequency != 1 && frequency != 2 && frequency != 4) {\n                    return formula.error.nm;\n                }\n                if (basis < 0 || basis > 4) {\n                    return formula.error.nm;\n                }\n                if (dayjs(settlement) - dayjs(maturity) >= 0) {\n                    return formula.error.nm;\n                }    //计算\n                //计算\n                var interest;    //结算日之后的下一个付息日\n                //结算日之后的下一个付息日\n                var maxCount = Math.ceil(dayjs(maturity).diff(dayjs(settlement), 'months') / (12 / frequency)) + 1;\n                for (var i = 1; i <= maxCount; i++) {\n                    var di = dayjs(maturity).subtract(12 / frequency * i, 'months');\n                    if (di <= dayjs(settlement)) {\n                        interest = dayjs(maturity).subtract(12 / frequency * (i - 1), 'months');\n                        break;\n                    }\n                }\n                return dayjs(interest).format('YYYY-MM-DD');\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'COUPPCD': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //结算日\n                var settlement = func_methods.getCellDate(arguments[0]);\n                if (valueIsError(settlement)) {\n                    return settlement;\n                }\n                if (!dayjs(settlement).isValid()) {\n                    return formula.error.v;\n                }    //到期日\n                //到期日\n                var maturity = func_methods.getCellDate(arguments[1]);\n                if (valueIsError(maturity)) {\n                    return maturity;\n                }\n                if (!dayjs(maturity).isValid()) {\n                    return formula.error.v;\n                }    //年付息次数\n                //年付息次数\n                var frequency = func_methods.getFirstValue(arguments[2]);\n                if (valueIsError(frequency)) {\n                    return frequency;\n                }\n                if (!isRealNum(frequency)) {\n                    return formula.error.v;\n                }\n                frequency = parseInt(frequency);    //日计数基准类型\n                //日计数基准类型\n                var basis = 0;\n                if (arguments.length == 4) {\n                    basis = func_methods.getFirstValue(arguments[3]);\n                    if (valueIsError(basis)) {\n                        return basis;\n                    }\n                    if (!isRealNum(basis)) {\n                        return formula.error.v;\n                    }\n                    basis = parseInt(basis);\n                }\n                if (frequency != 1 && frequency != 2 && frequency != 4) {\n                    return formula.error.nm;\n                }\n                if (basis < 0 || basis > 4) {\n                    return formula.error.nm;\n                }\n                if (dayjs(settlement) - dayjs(maturity) >= 0) {\n                    return formula.error.nm;\n                }    //计算\n                //计算\n                var interest;    //结算日之前的上一个付息日\n                //结算日之前的上一个付息日\n                var maxCount = Math.ceil(dayjs(maturity).diff(dayjs(settlement), 'months') / (12 / frequency)) + 1;\n                for (var i = 1; i <= maxCount; i++) {\n                    var di = dayjs(maturity).subtract(12 / frequency * i, 'months');\n                    if (di <= dayjs(settlement)) {\n                        interest = di;\n                        break;\n                    }\n                }\n                return dayjs(interest).format('YYYY-MM-DD');\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'FV': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //利率\n                var rate = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(rate)) {\n                    return rate;\n                }\n                if (!isRealNum(rate)) {\n                    return formula.error.v;\n                }\n                rate = parseFloat(rate);    //总付款期数\n                //总付款期数\n                var nper = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(nper)) {\n                    return nper;\n                }\n                if (!isRealNum(nper)) {\n                    return formula.error.v;\n                }\n                nper = parseFloat(nper);    //每期的付款金额\n                //每期的付款金额\n                var pmt = func_methods.getFirstValue(arguments[2]);\n                if (valueIsError(pmt)) {\n                    return pmt;\n                }\n                if (!isRealNum(pmt)) {\n                    return formula.error.v;\n                }\n                pmt = parseFloat(pmt);    //现值，或一系列未来付款的当前值的累积和\n                //现值，或一系列未来付款的当前值的累积和\n                var pv = 0;\n                if (arguments.length >= 4) {\n                    pv = func_methods.getFirstValue(arguments[3]);\n                    if (valueIsError(pv)) {\n                        return pv;\n                    }\n                    if (!isRealNum(pv)) {\n                        return formula.error.v;\n                    }\n                    pv = parseFloat(pv);\n                }    //指定各期的付款时间是在期初还是期末\n                //指定各期的付款时间是在期初还是期末\n                var type = 0;\n                if (arguments.length >= 5) {\n                    type = func_methods.getFirstValue(arguments[4]);\n                    if (valueIsError(type)) {\n                        return type;\n                    }\n                    if (!isRealNum(type)) {\n                        return formula.error.v;\n                    }\n                    type = parseFloat(type);\n                }\n                if (type != 0 && type != 1) {\n                    return formula.error.nm;\n                }    //计算\n                //计算\n                var result;\n                if (rate === 0) {\n                    result = pv + pmt * nper;\n                } else {\n                    var term = Math.pow(1 + rate, nper);\n                    if (type === 1) {\n                        result = pv * term + pmt * (1 + rate) * (term - 1) / rate;\n                    } else {\n                        result = pv * term + pmt * (term - 1) / rate;\n                    }\n                }\n                return -result;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'FVSCHEDULE': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //现值\n                var principal = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(principal)) {\n                    return principal;\n                }\n                if (!isRealNum(principal)) {\n                    return formula.error.v;\n                }\n                principal = parseFloat(principal);    //一组利率\n                //一组利率\n                var data_schedule = arguments[1];\n                var schedule = [];\n                if (getObjType(data_schedule) == 'array') {\n                    if (getObjType(data_schedule[0]) == 'array' && !func_methods.isDyadicArr(data_schedule)) {\n                        return formula.error.v;\n                    }\n                    schedule = schedule.concat(func_methods.getDataArr(data_schedule, false));\n                } else if (getObjType(data_schedule) == 'object' && data_schedule.startCell != null) {\n                    schedule = schedule.concat(func_methods.getCellDataArr(data_schedule, 'number', false));\n                } else {\n                    schedule.push(data_schedule);\n                }\n                var schedule_n = [];\n                for (var i = 0; i < schedule.length; i++) {\n                    var number = schedule[i];\n                    if (!isRealNum(number)) {\n                        return formula.error.v;\n                    }\n                    schedule_n.push(parseFloat(number));\n                }    //计算\n                //计算\n                var n = schedule_n.length;\n                var future = principal;\n                for (var i = 0; i < n; i++) {\n                    future *= 1 + schedule_n[i];\n                }\n                return future;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'YIELD': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //结算日\n                var settlement = func_methods.getCellDate(arguments[0]);\n                if (valueIsError(settlement)) {\n                    return settlement;\n                }\n                if (!dayjs(settlement).isValid()) {\n                    return formula.error.v;\n                }    //到期日\n                //到期日\n                var maturity = func_methods.getCellDate(arguments[1]);\n                if (valueIsError(maturity)) {\n                    return maturity;\n                }\n                if (!dayjs(maturity).isValid()) {\n                    return formula.error.v;\n                }    //有价证券的年息票利率\n                //有价证券的年息票利率\n                var rate = func_methods.getFirstValue(arguments[2]);\n                if (valueIsError(rate)) {\n                    return rate;\n                }\n                if (!isRealNum(rate)) {\n                    return formula.error.v;\n                }\n                rate = parseFloat(rate);    //有价证券的价格\n                //有价证券的价格\n                var pr = func_methods.getFirstValue(arguments[3]);\n                if (valueIsError(pr)) {\n                    return pr;\n                }\n                if (!isRealNum(pr)) {\n                    return formula.error.v;\n                }\n                pr = parseFloat(pr);    //有价证券的清偿价值\n                //有价证券的清偿价值\n                var redemption = func_methods.getFirstValue(arguments[4]);\n                if (valueIsError(redemption)) {\n                    return redemption;\n                }\n                if (!isRealNum(redemption)) {\n                    return formula.error.v;\n                }\n                redemption = parseFloat(redemption);    //年付息次数\n                //年付息次数\n                var frequency = func_methods.getFirstValue(arguments[5]);\n                if (valueIsError(frequency)) {\n                    return frequency;\n                }\n                if (!isRealNum(frequency)) {\n                    return formula.error.v;\n                }\n                frequency = parseInt(frequency);    //日计数基准类型\n                //日计数基准类型\n                var basis = 0;\n                if (arguments.length == 7) {\n                    basis = func_methods.getFirstValue(arguments[6]);\n                    if (valueIsError(basis)) {\n                        return basis;\n                    }\n                    if (!isRealNum(basis)) {\n                        return formula.error.v;\n                    }\n                    basis = parseInt(basis);\n                }\n                if (rate < 0) {\n                    return formula.error.nm;\n                }\n                if (pr <= 0 || redemption <= 0) {\n                    return formula.error.nm;\n                }\n                if (frequency != 1 && frequency != 2 && frequency != 4) {\n                    return formula.error.nm;\n                }\n                if (basis < 0 || basis > 4) {\n                    return formula.error.nm;\n                }\n                if (dayjs(settlement) - dayjs(maturity) >= 0) {\n                    return formula.error.nm;\n                }    //计算\n                //计算\n                var num = window.luckysheet_function.COUPNUM.f(settlement, maturity, frequency, basis);\n                if (num > 1) {\n                    var a = 1;\n                    var b = 0;\n                    var yld = a;\n                    for (var i = 1; i <= 100; i++) {\n                        var price = window.luckysheet_function.PRICE.f(settlement, maturity, rate, yld, redemption, frequency, basis);\n                        if (Math.abs(price - pr) < 0.000001) {\n                            break;\n                        }\n                        if (price > pr) {\n                            b = yld;\n                        } else {\n                            a = yld;\n                        }\n                        yld = (a + b) / 2;\n                    }\n                    var result = yld;\n                } else {\n                    var DSR = window.luckysheet_function.COUPDAYSNC.f(settlement, maturity, frequency, basis);\n                    var E = window.luckysheet_function.COUPDAYS.f(settlement, maturity, frequency, basis);\n                    var A = window.luckysheet_function.COUPDAYBS.f(settlement, maturity, frequency, basis);\n                    var T1 = redemption / 100 + rate / frequency;\n                    var T2 = pr / 100 + A / E * (rate / frequency);\n                    var T3 = frequency * E / DSR;\n                    var result = (T1 - T2) / T2 * T3;\n                }\n                return result;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'YIELDDISC': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //结算日\n                var settlement = func_methods.getCellDate(arguments[0]);\n                if (valueIsError(settlement)) {\n                    return settlement;\n                }\n                if (!dayjs(settlement).isValid()) {\n                    return formula.error.v;\n                }    //到期日\n                //到期日\n                var maturity = func_methods.getCellDate(arguments[1]);\n                if (valueIsError(maturity)) {\n                    return maturity;\n                }\n                if (!dayjs(maturity).isValid()) {\n                    return formula.error.v;\n                }    //有价证券的价格\n                //有价证券的价格\n                var pr = func_methods.getFirstValue(arguments[2]);\n                if (valueIsError(pr)) {\n                    return pr;\n                }\n                if (!isRealNum(pr)) {\n                    return formula.error.v;\n                }\n                pr = parseFloat(pr);    //有价证券的清偿价值\n                //有价证券的清偿价值\n                var redemption = func_methods.getFirstValue(arguments[3]);\n                if (valueIsError(redemption)) {\n                    return redemption;\n                }\n                if (!isRealNum(redemption)) {\n                    return formula.error.v;\n                }\n                redemption = parseFloat(redemption);    //日计数基准类型\n                //日计数基准类型\n                var basis = 0;\n                if (arguments.length == 5) {\n                    basis = func_methods.getFirstValue(arguments[4]);\n                    if (valueIsError(basis)) {\n                        return basis;\n                    }\n                    if (!isRealNum(basis)) {\n                        return formula.error.v;\n                    }\n                    basis = parseInt(basis);\n                }\n                if (pr <= 0 || redemption <= 0) {\n                    return formula.error.nm;\n                }\n                if (basis < 0 || basis > 4) {\n                    return formula.error.nm;\n                }\n                if (dayjs(settlement) - dayjs(maturity) >= 0) {\n                    return formula.error.nm;\n                }\n                var yearfrac = window.luckysheet_function.YEARFRAC.f(settlement, maturity, basis);\n                return (redemption / pr - 1) / yearfrac;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'NOMINAL': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //每年的实际利率\n                var effect_rate = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(effect_rate)) {\n                    return effect_rate;\n                }\n                if (!isRealNum(effect_rate)) {\n                    return formula.error.v;\n                }\n                effect_rate = parseFloat(effect_rate);    //每年的复利期数\n                //每年的复利期数\n                var npery = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(npery)) {\n                    return npery;\n                }\n                if (!isRealNum(npery)) {\n                    return formula.error.v;\n                }\n                npery = parseInt(npery);\n                if (effect_rate <= 0 || npery < 1) {\n                    return formula.error.nm;\n                }\n                return (Math.pow(effect_rate + 1, 1 / npery) - 1) * npery;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'XIRR': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //投资相关收益或支出的数组或范围\n                var data_values = arguments[0];\n                var values = [];\n                if (getObjType(data_values) == 'array') {\n                    if (getObjType(data_values[0]) == 'array' && !func_methods.isDyadicArr(data_values)) {\n                        return formula.error.v;\n                    }\n                    values = values.concat(func_methods.getDataArr(data_values, false));\n                } else if (getObjType(data_values) == 'object' && data_values.startCell != null) {\n                    values = values.concat(func_methods.getCellDataArr(data_values, 'number', false));\n                } else {\n                    values.push(data_values);\n                }\n                var values_n = [];\n                for (var i = 0; i < values.length; i++) {\n                    var number = values[i];\n                    if (!isRealNum(number)) {\n                        return formula.error.v;\n                    }\n                    values_n.push(parseFloat(number));\n                }    //与现金流数额参数中的现金流对应的日期数组或范围\n                //与现金流数额参数中的现金流对应的日期数组或范围\n                var dates = func_methods.getCellrangeDate(arguments[1]);\n                if (valueIsError(dates)) {\n                    return dates;\n                }\n                for (var i = 0; i < dates.length; i++) {\n                    if (!dayjs(dates[i]).isValid()) {\n                        return formula.error.v;\n                    }\n                }    //对内部回报率的估算值\n                //对内部回报率的估算值\n                var guess = 0.1;\n                if (arguments.length == 3) {\n                    guess = func_methods.getFirstValue(arguments[2]);\n                    if (valueIsError(guess)) {\n                        return guess;\n                    }\n                    if (!isRealNum(guess)) {\n                        return formula.error.v;\n                    }\n                    guess = parseFloat(guess);\n                }\n                var positive = false;\n                var negative = false;\n                for (var i = 0; i < values_n.length; i++) {\n                    if (values_n[i] > 0) {\n                        positive = true;\n                    }\n                    if (values_n[i] < 0) {\n                        negative = true;\n                    }\n                    if (positive && negative) {\n                        break;\n                    }\n                }\n                if (!positive || !negative) {\n                    return formula.error.nm;\n                }\n                if (values_n.length != dates.length) {\n                    return formula.error.nm;\n                }    //计算\n                //计算\n                var irrResult = function (values, dates, rate) {\n                    var r = rate + 1;\n                    var result = values[0];\n                    for (var i = 1; i < values.length; i++) {\n                        result += values[i] / Math.pow(r, window.luckysheet_function.DAYS.f(dates[i], dates[0]) / 365);\n                    }\n                    return result;\n                };\n                var irrResultDeriv = function (values, dates, rate) {\n                    var r = rate + 1;\n                    var result = 0;\n                    for (var i = 1; i < values.length; i++) {\n                        var frac = window.luckysheet_function.DAYS.f(dates[i], dates[0]) / 365;\n                        result -= frac * values[i] / Math.pow(r, frac + 1);\n                    }\n                    return result;\n                };\n                var resultRate = guess;\n                var epsMax = 1e-10;\n                var newRate, epsRate, resultValue;\n                var contLoop = true;\n                do {\n                    resultValue = irrResult(values_n, dates, resultRate);\n                    newRate = resultRate - resultValue / irrResultDeriv(values_n, dates, resultRate);\n                    epsRate = Math.abs(newRate - resultRate);\n                    resultRate = newRate;\n                    contLoop = epsRate > epsMax && Math.abs(resultValue) > epsMax;\n                } while (contLoop);\n                return resultRate;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'MIRR': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //投资相关收益或支出的数组或范围\n                var data_values = arguments[0];\n                var values = [];\n                if (getObjType(data_values) == 'array') {\n                    if (getObjType(data_values[0]) == 'array' && !func_methods.isDyadicArr(data_values)) {\n                        return formula.error.v;\n                    }\n                    values = values.concat(func_methods.getDataArr(data_values, false));\n                } else if (getObjType(data_values) == 'object' && data_values.startCell != null) {\n                    values = values.concat(func_methods.getCellDataArr(data_values, 'number', false));\n                } else {\n                    values.push(data_values);\n                }\n                var values_n = [];\n                for (var i = 0; i < values.length; i++) {\n                    var number = values[i];\n                    if (!isRealNum(number)) {\n                        return formula.error.v;\n                    }\n                    values_n.push(parseFloat(number));\n                }    //现金流中使用的资金支付的利率\n                //现金流中使用的资金支付的利率\n                var finance_rate = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(finance_rate)) {\n                    return finance_rate;\n                }\n                if (!isRealNum(finance_rate)) {\n                    return formula.error.v;\n                }\n                finance_rate = parseFloat(finance_rate);    //将现金流再投资的收益率\n                //将现金流再投资的收益率\n                var reinvest_rate = func_methods.getFirstValue(arguments[2]);\n                if (valueIsError(reinvest_rate)) {\n                    return reinvest_rate;\n                }\n                if (!isRealNum(reinvest_rate)) {\n                    return formula.error.v;\n                }\n                reinvest_rate = parseFloat(reinvest_rate);    //计算\n                //计算\n                var n = values_n.length;\n                var payments = [];\n                var incomes = [];\n                for (var i = 0; i < n; i++) {\n                    if (values_n[i] < 0) {\n                        payments.push(values_n[i]);\n                    } else {\n                        incomes.push(values_n[i]);\n                    }\n                }\n                if (payments.length == 0 || incomes.length == 0) {\n                    return formula.error.d;\n                }\n                var num = -window.luckysheet_function.NPV.f(reinvest_rate, incomes) * Math.pow(1 + reinvest_rate, n - 1);\n                var den = window.luckysheet_function.NPV.f(finance_rate, payments) * (1 + finance_rate);\n                return Math.pow(num / den, 1 / (n - 1)) - 1;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'IRR': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //投资相关收益或支出的数组或范围\n                var data_values = arguments[0];\n                var values = [];\n                if (getObjType(data_values) == 'array') {\n                    if (getObjType(data_values[0]) == 'array' && !func_methods.isDyadicArr(data_values)) {\n                        return formula.error.v;\n                    }\n                    values = values.concat(func_methods.getDataArr(data_values, false));\n                } else if (getObjType(data_values) == 'object' && data_values.startCell != null) {\n                    values = values.concat(func_methods.getCellDataArr(data_values, 'number', true));\n                } else {\n                    values.push(data_values);\n                }\n                var values_n = [];\n                for (var i = 0; i < values.length; i++) {\n                    var number = values[i];\n                    if (!isRealNum(number)) {\n                        return formula.error.v;\n                    }\n                    values_n.push(parseFloat(number));\n                }    //对内部回报率的估算值\n                //对内部回报率的估算值\n                var guess = 0.1;\n                if (arguments.length == 2) {\n                    guess = func_methods.getFirstValue(arguments[1]);\n                    if (valueIsError(guess)) {\n                        return guess;\n                    }\n                    if (!isRealNum(guess)) {\n                        return formula.error.v;\n                    }\n                    guess = parseFloat(guess);\n                }\n                var dates = [];\n                var positive = false;\n                var negative = false;\n                for (var i = 0; i < values.length; i++) {\n                    dates[i] = i === 0 ? 0 : dates[i - 1] + 365;\n                    if (values[i] > 0) {\n                        positive = true;\n                    }\n                    if (values[i] < 0) {\n                        negative = true;\n                    }\n                }\n                if (!positive || !negative) {\n                    return formula.error.nm;\n                }    //计算\n                //计算\n                var irrResult = function (values, dates, rate) {\n                    var r = rate + 1;\n                    var result = values[0];\n                    for (var i = 1; i < values.length; i++) {\n                        // result += values[i] / Math.pow(r, window.luckysheet_function.DAYS.f(dates[i], dates[0]) / 365);\n                        result += values[i] / Math.pow(r, (dates[i] - dates[0]) / 365);\n                    }\n                    return result;\n                };\n                var irrResultDeriv = function (values, dates, rate) {\n                    var r = rate + 1;\n                    var result = 0;\n                    for (var i = 1; i < values.length; i++) {\n                        // var frac = window.luckysheet_function.DAYS.f(dates[i], dates[0]) / 365;\n                        var frac = (dates[i] - dates[0]) / 365;\n                        result -= frac * values[i] / Math.pow(r, frac + 1);\n                    }\n                    return result;\n                };\n                var resultRate = guess;\n                var epsMax = 1e-10;\n                var newRate, epsRate, resultValue;\n                var contLoop = true;\n                do {\n                    resultValue = irrResult(values_n, dates, resultRate);\n                    newRate = resultRate - resultValue / irrResultDeriv(values_n, dates, resultRate);\n                    epsRate = Math.abs(newRate - resultRate);\n                    resultRate = newRate;\n                    contLoop = epsRate > epsMax && Math.abs(resultValue) > epsMax;\n                } while (contLoop);\n                return resultRate;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'NPV': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //某一期间的贴现率\n                var rate = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(rate)) {\n                    return rate;\n                }\n                if (!isRealNum(rate)) {\n                    return formula.error.v;\n                }\n                rate = parseFloat(rate);    //支出（负值）和收益（正值）\n                //支出（负值）和收益（正值）\n                var values = [];\n                for (var i = 1; i < arguments.length; i++) {\n                    var data = arguments[i];\n                    if (getObjType(data) == 'array') {\n                        if (getObjType(data[0]) == 'array' && !func_methods.isDyadicArr(data)) {\n                            return formula.error.v;\n                        }\n                        values = values.concat(func_methods.getDataArr(data, true));\n                    } else if (getObjType(data) == 'object' && data.startCell != null) {\n                        values = values.concat(func_methods.getCellDataArr(data, 'number', true));\n                    } else {\n                        values.push(data);\n                    }\n                }\n                var values_n = [];\n                for (var i = 0; i < values.length; i++) {\n                    var number = values[i];\n                    if (isRealNum(number)) {\n                        values_n.push(parseFloat(number));\n                    }\n                }    //计算\n                //计算\n                var result = 0;\n                if (values_n.length > 0) {\n                    for (var i = 0; i < values_n.length; i++) {\n                        result += values_n[i] / Math.pow(1 + rate, i + 1);\n                    }\n                }\n                return result;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'XNPV': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //应用于现金流的贴现率\n                var rate = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(rate)) {\n                    return rate;\n                }\n                if (!isRealNum(rate)) {\n                    return formula.error.v;\n                }\n                rate = parseFloat(rate);    //与 dates 中的支付时间相对应的一系列现金流\n                //与 dates 中的支付时间相对应的一系列现金流\n                var data_values = arguments[1];\n                var values = [];\n                if (getObjType(data_values) == 'array') {\n                    if (getObjType(data_values[0]) == 'array' && !func_methods.isDyadicArr(data_values)) {\n                        return formula.error.v;\n                    }\n                    values = values.concat(func_methods.getDataArr(data_values, false));\n                } else if (getObjType(data_values) == 'object' && data_values.startCell != null) {\n                    values = values.concat(func_methods.getCellDataArr(data_values, 'number', false));\n                } else {\n                    values.push(data_values);\n                }\n                var values_n = [];\n                for (var i = 0; i < values.length; i++) {\n                    var number = values[i];\n                    if (!isRealNum(number)) {\n                        return formula.error.v;\n                    }\n                    values_n.push(parseFloat(number));\n                }    //与现金流支付相对应的支付日期表\n                //与现金流支付相对应的支付日期表\n                var dates = func_methods.getCellrangeDate(arguments[2]);\n                if (valueIsError(dates)) {\n                    return dates;\n                }\n                for (var i = 0; i < dates.length; i++) {\n                    if (!dayjs(dates[i]).isValid()) {\n                        return formula.error.v;\n                    }\n                }\n                if (values_n.length != dates.length) {\n                    return formula.error.nm;\n                }    //计算\n                //计算\n                var result = 0;\n                for (var i = 0; i < values_n.length; i++) {\n                    result += values_n[i] / Math.pow(1 + rate, window.luckysheet_function.DAYS.f(dates[i], dates[0]) / 365);\n                }\n                return result;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'CUMIPMT': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //利率\n                var rate = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(rate)) {\n                    return rate;\n                }\n                if (!isRealNum(rate)) {\n                    return formula.error.v;\n                }\n                rate = parseFloat(rate);    //总付款期数\n                //总付款期数\n                var nper = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(nper)) {\n                    return nper;\n                }\n                if (!isRealNum(nper)) {\n                    return formula.error.v;\n                }\n                nper = parseFloat(nper);    //年金的现值\n                //年金的现值\n                var pv = func_methods.getFirstValue(arguments[2]);\n                if (valueIsError(pv)) {\n                    return pv;\n                }\n                if (!isRealNum(pv)) {\n                    return formula.error.v;\n                }\n                pv = parseFloat(pv);    //首期\n                //首期\n                var start_period = func_methods.getFirstValue(arguments[3]);\n                if (valueIsError(start_period)) {\n                    return start_period;\n                }\n                if (!isRealNum(start_period)) {\n                    return formula.error.v;\n                }\n                start_period = parseInt(start_period);    //末期\n                //末期\n                var end_period = func_methods.getFirstValue(arguments[4]);\n                if (valueIsError(end_period)) {\n                    return end_period;\n                }\n                if (!isRealNum(end_period)) {\n                    return formula.error.v;\n                }\n                end_period = parseInt(end_period);    //指定各期的付款时间是在期初还是期末\n                //指定各期的付款时间是在期初还是期末\n                var type = func_methods.getFirstValue(arguments[5]);\n                if (valueIsError(type)) {\n                    return type;\n                }\n                if (!isRealNum(type)) {\n                    return formula.error.v;\n                }\n                type = parseFloat(type);\n                if (rate <= 0 || nper <= 0 || pv <= 0) {\n                    return formula.error.nm;\n                }\n                if (start_period < 1 || end_period < 1 || start_period > end_period) {\n                    return formula.error.nm;\n                }\n                if (type != 0 && type != 1) {\n                    return formula.error.nm;\n                }    //计算\n                //计算\n                var payment = window.luckysheet_function.PMT.f(rate, nper, pv, 0, type);\n                var interest = 0;\n                if (start_period === 1) {\n                    if (type === 0) {\n                        interest = -pv;\n                        start_period++;\n                    }\n                }\n                for (var i = start_period; i <= end_period; i++) {\n                    if (type === 1) {\n                        interest += window.luckysheet_function.FV.f(rate, i - 2, payment, pv, 1) - payment;\n                    } else {\n                        interest += window.luckysheet_function.FV.f(rate, i - 1, payment, pv, 0);\n                    }\n                }\n                interest *= rate;\n                return interest;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'PMT': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //贷款利率\n                var rate = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(rate)) {\n                    return rate;\n                }\n                if (!isRealNum(rate)) {\n                    return formula.error.v;\n                }\n                rate = parseFloat(rate);    //该项贷款的付款总数\n                //该项贷款的付款总数\n                var nper = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(nper)) {\n                    return nper;\n                }\n                if (!isRealNum(nper)) {\n                    return formula.error.v;\n                }\n                nper = parseFloat(nper);    //现值\n                //现值\n                var pv = func_methods.getFirstValue(arguments[2]);\n                if (valueIsError(pv)) {\n                    return pv;\n                }\n                if (!isRealNum(pv)) {\n                    return formula.error.v;\n                }\n                pv = parseFloat(pv);    //最后一次付款后希望得到的现金余额\n                //最后一次付款后希望得到的现金余额\n                var fv = 0;\n                if (arguments.length >= 4) {\n                    fv = func_methods.getFirstValue(arguments[3]);\n                    if (valueIsError(fv)) {\n                        return fv;\n                    }\n                    if (!isRealNum(fv)) {\n                        return formula.error.v;\n                    }\n                    fv = parseFloat(fv);\n                }    //指定各期的付款时间是在期初还是期末\n                //指定各期的付款时间是在期初还是期末\n                var type = 0;\n                if (arguments.length == 5) {\n                    type = func_methods.getFirstValue(arguments[4]);\n                    if (valueIsError(type)) {\n                        return type;\n                    }\n                    if (!isRealNum(type)) {\n                        return formula.error.v;\n                    }\n                    type = parseFloat(type);\n                }\n                if (type != 0 && type != 1) {\n                    return formula.error.nm;\n                }    //计算\n                //计算\n                var result;\n                if (rate === 0) {\n                    result = (pv + fv) / nper;\n                } else {\n                    var term = Math.pow(1 + rate, nper);\n                    if (type === 1) {\n                        result = (fv * rate / (term - 1) + pv * rate / (1 - 1 / term)) / (1 + rate);\n                    } else {\n                        result = fv * rate / (term - 1) + pv * rate / (1 - 1 / term);\n                    }\n                }\n                return -result;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'IPMT': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //利率\n                var rate = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(rate)) {\n                    return rate;\n                }\n                if (!isRealNum(rate)) {\n                    return formula.error.v;\n                }\n                rate = parseFloat(rate);    //用于计算其利息数额的期数\n                //用于计算其利息数额的期数\n                var per = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(per)) {\n                    return per;\n                }\n                if (!isRealNum(per)) {\n                    return formula.error.v;\n                }\n                per = parseFloat(per);    //总付款期数\n                //总付款期数\n                var nper = func_methods.getFirstValue(arguments[2]);\n                if (valueIsError(nper)) {\n                    return nper;\n                }\n                if (!isRealNum(nper)) {\n                    return formula.error.v;\n                }\n                nper = parseFloat(nper);    //现值\n                //现值\n                var pv = func_methods.getFirstValue(arguments[3]);\n                if (valueIsError(pv)) {\n                    return pv;\n                }\n                if (!isRealNum(pv)) {\n                    return formula.error.v;\n                }\n                pv = parseFloat(pv);    //最后一次付款后希望得到的现金余额\n                //最后一次付款后希望得到的现金余额\n                var fv = 0;\n                if (arguments.length >= 5) {\n                    fv = func_methods.getFirstValue(arguments[4]);\n                    if (valueIsError(fv)) {\n                        return fv;\n                    }\n                    if (!isRealNum(fv)) {\n                        return formula.error.v;\n                    }\n                    fv = parseFloat(fv);\n                }    //指定各期的付款时间是在期初还是期末\n                //指定各期的付款时间是在期初还是期末\n                var type = 0;\n                if (arguments.length >= 6) {\n                    type = func_methods.getFirstValue(arguments[5]);\n                    if (valueIsError(type)) {\n                        return type;\n                    }\n                    if (!isRealNum(type)) {\n                        return formula.error.v;\n                    }\n                    type = parseFloat(type);\n                }\n                if (per < 1 || per > nper) {\n                    return formula.error.nm;\n                }\n                if (type != 0 && type != 1) {\n                    return formula.error.nm;\n                }    //计算\n                //计算\n                var payment = window.luckysheet_function.PMT.f(rate, nper, pv, fv, type);\n                var interest;\n                if (per === 1) {\n                    if (type === 1) {\n                        interest = 0;\n                    } else {\n                        interest = -pv;\n                    }\n                } else {\n                    if (type === 1) {\n                        interest = window.luckysheet_function.FV.f(rate, per - 2, payment, pv, 1) - payment;\n                    } else {\n                        interest = window.luckysheet_function.FV.f(rate, per - 1, payment, pv, 0);\n                    }\n                }\n                var result = interest * rate;\n                return result;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'PPMT': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //利率\n                var rate = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(rate)) {\n                    return rate;\n                }\n                if (!isRealNum(rate)) {\n                    return formula.error.v;\n                }\n                rate = parseFloat(rate);    //用于计算其利息数额的期数\n                //用于计算其利息数额的期数\n                var per = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(per)) {\n                    return per;\n                }\n                if (!isRealNum(per)) {\n                    return formula.error.v;\n                }\n                per = parseFloat(per);    //总付款期数\n                //总付款期数\n                var nper = func_methods.getFirstValue(arguments[2]);\n                if (valueIsError(nper)) {\n                    return nper;\n                }\n                if (!isRealNum(nper)) {\n                    return formula.error.v;\n                }\n                nper = parseFloat(nper);    //现值\n                //现值\n                var pv = func_methods.getFirstValue(arguments[3]);\n                if (valueIsError(pv)) {\n                    return pv;\n                }\n                if (!isRealNum(pv)) {\n                    return formula.error.v;\n                }\n                pv = parseFloat(pv);    //最后一次付款后希望得到的现金余额\n                //最后一次付款后希望得到的现金余额\n                var fv = 0;\n                if (arguments.length >= 5) {\n                    fv = func_methods.getFirstValue(arguments[4]);\n                    if (valueIsError(fv)) {\n                        return fv;\n                    }\n                    if (!isRealNum(fv)) {\n                        return formula.error.v;\n                    }\n                    fv = parseFloat(fv);\n                }    //指定各期的付款时间是在期初还是期末\n                //指定各期的付款时间是在期初还是期末\n                var type = 0;\n                if (arguments.length >= 6) {\n                    type = func_methods.getFirstValue(arguments[5]);\n                    if (valueIsError(type)) {\n                        return type;\n                    }\n                    if (!isRealNum(type)) {\n                        return formula.error.v;\n                    }\n                    type = parseFloat(type);\n                }\n                if (per < 1 || per > nper) {\n                    return formula.error.nm;\n                }\n                if (type != 0 && type != 1) {\n                    return formula.error.nm;\n                }    //计算\n                //计算\n                var payment = window.luckysheet_function.PMT.f(rate, nper, pv, fv, type);\n                var payment2 = window.luckysheet_function.IPMT.f(rate, per, nper, pv, fv, type);\n                return payment - payment2;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'INTRATE': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //结算日\n                var settlement = func_methods.getCellDate(arguments[0]);\n                if (valueIsError(settlement)) {\n                    return settlement;\n                }\n                if (!dayjs(settlement).isValid()) {\n                    return formula.error.v;\n                }    //到期日\n                //到期日\n                var maturity = func_methods.getCellDate(arguments[1]);\n                if (valueIsError(maturity)) {\n                    return maturity;\n                }\n                if (!dayjs(maturity).isValid()) {\n                    return formula.error.v;\n                }    //有价证券的投资额\n                //有价证券的投资额\n                var investment = func_methods.getFirstValue(arguments[2]);\n                if (valueIsError(investment)) {\n                    return investment;\n                }\n                if (!isRealNum(investment)) {\n                    return formula.error.v;\n                }\n                investment = parseFloat(investment);    //有价证券到期时的兑换值\n                //有价证券到期时的兑换值\n                var redemption = func_methods.getFirstValue(arguments[3]);\n                if (valueIsError(redemption)) {\n                    return redemption;\n                }\n                if (!isRealNum(redemption)) {\n                    return formula.error.v;\n                }\n                redemption = parseFloat(redemption);    //日计数基准类型\n                //日计数基准类型\n                var basis = 0;\n                if (arguments.length == 5) {\n                    basis = func_methods.getFirstValue(arguments[4]);\n                    if (valueIsError(basis)) {\n                        return basis;\n                    }\n                    if (!isRealNum(basis)) {\n                        return formula.error.v;\n                    }\n                    basis = parseInt(basis);\n                }\n                if (investment <= 0 || redemption <= 0) {\n                    return formula.error.nm;\n                }\n                if (basis < 0 || basis > 4) {\n                    return formula.error.nm;\n                }\n                if (dayjs(settlement) - dayjs(maturity) >= 0) {\n                    return formula.error.nm;\n                }    //计算\n                //计算\n                var sd = dayjs(settlement).date();\n                var sm = dayjs(settlement).month() + 1;\n                var sy = dayjs(settlement).year();\n                var ed = dayjs(maturity).date();\n                var em = dayjs(maturity).month() + 1;\n                var ey = dayjs(maturity).year();\n                var result;\n                switch (basis) {\n                case 0:\n                    // US (NASD) 30/360\n                    if (sd === 31 && ed === 31) {\n                        sd = 30;\n                        ed = 30;\n                    } else if (sd === 31) {\n                        sd = 30;\n                    } else if (sd === 30 && ed === 31) {\n                        ed = 30;\n                    }\n                    result = 360 / (ed + em * 30 + ey * 360 - (sd + sm * 30 + sy * 360));\n                    break;\n                case 1:\n                    // Actual/actual\n                    var ylength = 365;\n                    if (sy === ey || sy + 1 === ey && (sm > em || sm === em && sd >= ed)) {\n                        if (sy === ey && func_methods.isLeapYear(sy) || func_methods.feb29Between(settlement, maturity) || em === 1 && ed === 29) {\n                            ylength = 366;\n                        }\n                        result = ylength / dayjs(maturity).diff(dayjs(settlement), 'days');\n                        result = (redemption - investment) / investment * result;\n                        return result;\n                    }\n                    var years = ey - sy + 1;\n                    var days = (dayjs().set({\n                        'year': ey + 1,\n                        'month': 0,\n                        'date': 1\n                    }) - dayjs().set({\n                        'year': sy,\n                        'month': 0,\n                        'date': 1\n                    })) / 1000 / 60 / 60 / 24;\n                    var average = days / years;\n                    result = average / dayjs(maturity).diff(dayjs(settlement), 'days');\n                    break;\n                case 2:\n                    // Actual/360\n                    result = 360 / dayjs(maturity).diff(dayjs(settlement), 'days');\n                    break;\n                case 3:\n                    // Actual/365\n                    result = 365 / dayjs(maturity).diff(dayjs(settlement), 'days');\n                    break;\n                case 4:\n                    // European 30/360\n                    result = 360 / (ed + em * 30 + ey * 360 - (sd + sm * 30 + sy * 360));\n                    break;\n                }\n                result = (redemption - investment) / investment * result;\n                return result;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'PRICE': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //结算日\n                var settlement = func_methods.getCellDate(arguments[0]);\n                if (valueIsError(settlement)) {\n                    return settlement;\n                }\n                if (!dayjs(settlement).isValid()) {\n                    return formula.error.v;\n                }    //到期日\n                //到期日\n                var maturity = func_methods.getCellDate(arguments[1]);\n                if (valueIsError(maturity)) {\n                    return maturity;\n                }\n                if (!dayjs(maturity).isValid()) {\n                    return formula.error.v;\n                }    //有价证券的年息票利率\n                //有价证券的年息票利率\n                var rate = func_methods.getFirstValue(arguments[2]);\n                if (valueIsError(rate)) {\n                    return rate;\n                }\n                if (!isRealNum(rate)) {\n                    return formula.error.v;\n                }\n                rate = parseFloat(rate);    //有价证券的年收益率\n                //有价证券的年收益率\n                var yld = func_methods.getFirstValue(arguments[3]);\n                if (valueIsError(yld)) {\n                    return yld;\n                }\n                if (!isRealNum(yld)) {\n                    return formula.error.v;\n                }\n                yld = parseFloat(yld);    //有价证券的清偿价值\n                //有价证券的清偿价值\n                var redemption = func_methods.getFirstValue(arguments[4]);\n                if (valueIsError(redemption)) {\n                    return redemption;\n                }\n                if (!isRealNum(redemption)) {\n                    return formula.error.v;\n                }\n                redemption = parseFloat(redemption);    //年付息次数\n                //年付息次数\n                var frequency = func_methods.getFirstValue(arguments[5]);\n                if (valueIsError(frequency)) {\n                    return frequency;\n                }\n                if (!isRealNum(frequency)) {\n                    return formula.error.v;\n                }\n                frequency = parseInt(frequency);    //日计数基准类型\n                //日计数基准类型\n                var basis = 0;\n                if (arguments.length == 7) {\n                    basis = func_methods.getFirstValue(arguments[6]);\n                    if (valueIsError(basis)) {\n                        return basis;\n                    }\n                    if (!isRealNum(basis)) {\n                        return formula.error.v;\n                    }\n                    basis = parseInt(basis);\n                }\n                if (rate < 0 || yld < 0) {\n                    return formula.error.nm;\n                }\n                if (redemption <= 0) {\n                    return formula.error.nm;\n                }\n                if (frequency != 1 && frequency != 2 && frequency != 4) {\n                    return formula.error.nm;\n                }\n                if (basis < 0 || basis > 4) {\n                    return formula.error.nm;\n                }\n                if (dayjs(settlement) - dayjs(maturity) >= 0) {\n                    return formula.error.nm;\n                }    //计算\n                //计算\n                var DSC = window.luckysheet_function.COUPDAYSNC.f(settlement, maturity, frequency, basis);\n                var E = window.luckysheet_function.COUPDAYS.f(settlement, maturity, frequency, basis);\n                var A = window.luckysheet_function.COUPDAYBS.f(settlement, maturity, frequency, basis);\n                var num = window.luckysheet_function.COUPNUM.f(settlement, maturity, frequency, basis);\n                if (num > 1) {\n                    var T1 = redemption / Math.pow(1 + yld / frequency, num - 1 + DSC / E);\n                    var T2 = 0;\n                    for (var i = 1; i <= num; i++) {\n                        T2 += 100 * rate / frequency / Math.pow(1 + yld / frequency, i - 1 + DSC / E);\n                    }\n                    var T3 = 100 * (rate / frequency) * (A / E);\n                    var result = T1 + T2 - T3;\n                } else {\n                    var DSR = E - A;\n                    var T1 = 100 * (rate / frequency) + redemption;\n                    var T2 = yld / frequency * (DSR / E) + 1;\n                    var T3 = 100 * (rate / frequency) * (A / E);\n                    var result = T1 / T2 - T3;\n                }\n                return result;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'PRICEDISC': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //结算日\n                var settlement = func_methods.getCellDate(arguments[0]);\n                if (valueIsError(settlement)) {\n                    return settlement;\n                }\n                if (!dayjs(settlement).isValid()) {\n                    return formula.error.v;\n                }    //到期日\n                //到期日\n                var maturity = func_methods.getCellDate(arguments[1]);\n                if (valueIsError(maturity)) {\n                    return maturity;\n                }\n                if (!dayjs(maturity).isValid()) {\n                    return formula.error.v;\n                }    //有价证券的贴现率\n                //有价证券的贴现率\n                var discount = func_methods.getFirstValue(arguments[2]);\n                if (valueIsError(discount)) {\n                    return discount;\n                }\n                if (!isRealNum(discount)) {\n                    return formula.error.v;\n                }\n                discount = parseFloat(discount);    //有价证券的清偿价值\n                //有价证券的清偿价值\n                var redemption = func_methods.getFirstValue(arguments[3]);\n                if (valueIsError(redemption)) {\n                    return redemption;\n                }\n                if (!isRealNum(redemption)) {\n                    return formula.error.v;\n                }\n                redemption = parseFloat(redemption);    //日计数基准类型\n                //日计数基准类型\n                var basis = 0;\n                if (arguments.length == 5) {\n                    basis = func_methods.getFirstValue(arguments[4]);\n                    if (valueIsError(basis)) {\n                        return basis;\n                    }\n                    if (!isRealNum(basis)) {\n                        return formula.error.v;\n                    }\n                    basis = parseInt(basis);\n                }\n                if (discount <= 0 || redemption <= 0) {\n                    return formula.error.nm;\n                }\n                if (basis < 0 || basis > 4) {\n                    return formula.error.nm;\n                }\n                if (dayjs(settlement) - dayjs(maturity) >= 0) {\n                    return formula.error.nm;\n                }    //计算\n                //计算\n                var sd = dayjs(settlement).date();\n                var sm = dayjs(settlement).month() + 1;\n                var sy = dayjs(settlement).year();\n                var ed = dayjs(maturity).date();\n                var em = dayjs(maturity).month() + 1;\n                var ey = dayjs(maturity).year();\n                var result;\n                switch (basis) {\n                case 0:\n                    // US (NASD) 30/360\n                    if (sd === 31 && ed === 31) {\n                        sd = 30;\n                        ed = 30;\n                    } else if (sd === 31) {\n                        sd = 30;\n                    } else if (sd === 30 && ed === 31) {\n                        ed = 30;\n                    }\n                    result = (ed + em * 30 + ey * 360 - (sd + sm * 30 + sy * 360)) / 360;\n                    break;\n                case 1:\n                    // Actual/actual\n                    var ylength = 365;\n                    if (sy === ey || sy + 1 === ey && (sm > em || sm === em && sd >= ed)) {\n                        if (sy === ey && func_methods.isLeapYear(sy) || func_methods.feb29Between(settlement, maturity) || em === 1 && ed === 29) {\n                            ylength = 366;\n                        }\n                        result = dayjs(maturity).diff(dayjs(settlement), 'days') / ylength;\n                        result = redemption - discount * redemption * result;\n                        return result;\n                    }\n                    var years = ey - sy + 1;\n                    var days = (dayjs().set({\n                        'year': ey + 1,\n                        'month': 0,\n                        'date': 1\n                    }) - dayjs().set({\n                        'year': sy,\n                        'month': 0,\n                        'date': 1\n                    })) / 1000 / 60 / 60 / 24;\n                    var average = days / years;\n                    result = dayjs(maturity).diff(dayjs(settlement), 'days') / average;\n                    break;\n                case 2:\n                    // Actual/360\n                    result = dayjs(maturity).diff(dayjs(settlement), 'days') / 360;\n                    break;\n                case 3:\n                    // Actual/365\n                    result = dayjs(maturity).diff(dayjs(settlement), 'days') / 365;\n                    break;\n                case 4:\n                    // European 30/360\n                    result = (ed + em * 30 + ey * 360 - (sd + sm * 30 + sy * 360)) / 360;\n                    break;\n                }\n                result = redemption - discount * redemption * result;\n                return result;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'PRICEMAT': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //结算日\n                var settlement = func_methods.getCellDate(arguments[0]);\n                if (valueIsError(settlement)) {\n                    return settlement;\n                }\n                if (!dayjs(settlement).isValid()) {\n                    return formula.error.v;\n                }    //到期日\n                //到期日\n                var maturity = func_methods.getCellDate(arguments[1]);\n                if (valueIsError(maturity)) {\n                    return maturity;\n                }\n                if (!dayjs(maturity).isValid()) {\n                    return formula.error.v;\n                }    //发行日\n                //发行日\n                var issue = func_methods.getCellDate(arguments[2]);\n                if (valueIsError(issue)) {\n                    return issue;\n                }\n                if (!dayjs(issue).isValid()) {\n                    return formula.error.v;\n                }    //有价证券在发行日的利率\n                //有价证券在发行日的利率\n                var rate = func_methods.getFirstValue(arguments[3]);\n                if (valueIsError(rate)) {\n                    return rate;\n                }\n                if (!isRealNum(rate)) {\n                    return formula.error.v;\n                }\n                rate = parseFloat(rate);    //有价证券的年收益率\n                //有价证券的年收益率\n                var yld = func_methods.getFirstValue(arguments[4]);\n                if (valueIsError(yld)) {\n                    return yld;\n                }\n                if (!isRealNum(yld)) {\n                    return formula.error.v;\n                }\n                yld = parseFloat(yld);    //日计数基准类型\n                //日计数基准类型\n                var basis = 0;\n                if (arguments.length == 6) {\n                    basis = func_methods.getFirstValue(arguments[5]);\n                    if (valueIsError(basis)) {\n                        return basis;\n                    }\n                    if (!isRealNum(basis)) {\n                        return formula.error.v;\n                    }\n                    basis = parseInt(basis);\n                }\n                if (rate < 0 || yld < 0) {\n                    return formula.error.nm;\n                }\n                if (basis < 0 || basis > 4) {\n                    return formula.error.nm;\n                }\n                if (dayjs(settlement) - dayjs(maturity) >= 0) {\n                    return formula.error.nm;\n                }    //计算\n                //计算\n                var sd = dayjs(settlement).date();\n                var sm = dayjs(settlement).month() + 1;\n                var sy = dayjs(settlement).year();\n                var ed = dayjs(maturity).date();\n                var em = dayjs(maturity).month() + 1;\n                var ey = dayjs(maturity).year();\n                var td = dayjs(issue).date();\n                var tm = dayjs(issue).month() + 1;\n                var ty = dayjs(issue).year();\n                var result;\n                switch (basis) {\n                case 0:\n                    // US (NASD) 30/360\n                    if (sd == 31) {\n                        sd = 30;\n                    }\n                    if (ed == 31) {\n                        ed = 30;\n                    }\n                    if (td == 31) {\n                        td = 30;\n                    }\n                    var B = 360;\n                    var DSM = ed + em * 30 + ey * 360 - (sd + sm * 30 + sy * 360);\n                    var DIM = ed + em * 30 + ey * 360 - (td + tm * 30 + ty * 360);\n                    var A = sd + sm * 30 + sy * 360 - (td + tm * 30 + ty * 360);\n                    break;\n                case 1:\n                    // Actual/actual\n                    var ylength = 365;\n                    if (sy === ey || sy + 1 === ey && (sm > em || sm === em && sd >= ed)) {\n                        if (sy === ey && func_methods.isLeapYear(sy) || func_methods.feb29Between(settlement, maturity) || em === 1 && ed === 29) {\n                            ylength = 366;\n                        }\n                        var B = ylength;\n                        var DSM = dayjs(maturity).diff(dayjs(settlement), 'days');\n                        var DIM = dayjs(settlement).diff(dayjs(issue), 'days');\n                        var A = dayjs(maturity).diff(dayjs(issue), 'days');\n                        result = (100 + DIM / B * rate * 100) / (1 + DSM / B * yld) - A / B * rate * 100;\n                        return result;\n                    }\n                    var years = ey - sy + 1;\n                    var days = (dayjs().set({\n                        'year': ey + 1,\n                        'month': 0,\n                        'date': 1\n                    }) - dayjs().set({\n                        'year': sy,\n                        'month': 0,\n                        'date': 1\n                    })) / 1000 / 60 / 60 / 24;\n                    var average = days / years;\n                    var B = average;\n                    var DSM = dayjs(maturity).diff(dayjs(settlement), 'days');\n                    var DIM = dayjs(settlement).diff(dayjs(issue), 'days');\n                    var A = dayjs(maturity).diff(dayjs(issue), 'days');\n                    break;\n                case 2:\n                    // Actual/360\n                    var B = 360;\n                    var DSM = dayjs(maturity).diff(dayjs(settlement), 'days');\n                    var DIM = dayjs(settlement).diff(dayjs(issue), 'days');\n                    var A = dayjs(maturity).diff(dayjs(issue), 'days');\n                    break;\n                case 3:\n                    // Actual/365\n                    var B = 365;\n                    var DSM = dayjs(maturity).diff(dayjs(settlement), 'days');\n                    var DIM = dayjs(settlement).diff(dayjs(issue), 'days');\n                    var A = dayjs(maturity).diff(dayjs(issue), 'days');\n                    break;\n                case 4:\n                    // European 30/360\n                    var B = 360;\n                    var DSM = ed + em * 30 + ey * 360 - (sd + sm * 30 + sy * 360);\n                    var DIM = ed + em * 30 + ey * 360 - (td + tm * 30 + ty * 360);\n                    var A = sd + sm * 30 + sy * 360 - (td + tm * 30 + ty * 360);\n                    break;\n                }\n                result = (100 + DIM / B * rate * 100) / (1 + DSM / B * yld) - A / B * rate * 100;\n                return result;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'RECEIVED': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //结算日\n                var settlement = func_methods.getCellDate(arguments[0]);\n                if (valueIsError(settlement)) {\n                    return settlement;\n                }\n                if (!dayjs(settlement).isValid()) {\n                    return formula.error.v;\n                }    //到期日\n                //到期日\n                var maturity = func_methods.getCellDate(arguments[1]);\n                if (valueIsError(maturity)) {\n                    return maturity;\n                }\n                if (!dayjs(maturity).isValid()) {\n                    return formula.error.v;\n                }    //有价证券的投资额\n                //有价证券的投资额\n                var investment = func_methods.getFirstValue(arguments[2]);\n                if (valueIsError(investment)) {\n                    return investment;\n                }\n                if (!isRealNum(investment)) {\n                    return formula.error.v;\n                }\n                investment = parseFloat(investment);    //有价证券的贴现率\n                //有价证券的贴现率\n                var discount = func_methods.getFirstValue(arguments[3]);\n                if (valueIsError(discount)) {\n                    return discount;\n                }\n                if (!isRealNum(discount)) {\n                    return formula.error.v;\n                }\n                discount = parseFloat(discount);    //日计数基准类型\n                //日计数基准类型\n                var basis = 0;\n                if (arguments.length == 5) {\n                    basis = func_methods.getFirstValue(arguments[4]);\n                    if (valueIsError(basis)) {\n                        return basis;\n                    }\n                    if (!isRealNum(basis)) {\n                        return formula.error.v;\n                    }\n                    basis = parseFloat(basis);\n                }\n                if (investment <= 0 || discount <= 0) {\n                    return formula.error.nm;\n                }\n                if (basis < 0 || basis > 4) {\n                    return formula.error.nm;\n                }\n                if (dayjs(settlement) - dayjs(maturity) >= 0) {\n                    return formula.error.nm;\n                }    //计算\n                //计算\n                var sd = dayjs(settlement).date();\n                var sm = dayjs(settlement).month() + 1;\n                var sy = dayjs(settlement).year();\n                var ed = dayjs(maturity).date();\n                var em = dayjs(maturity).month() + 1;\n                var ey = dayjs(maturity).year();\n                var result;\n                switch (basis) {\n                case 0:\n                    // US (NASD) 30/360\n                    if (sd == 31) {\n                        sd = 30;\n                    }\n                    if (ed == 31) {\n                        ed = 30;\n                    }\n                    var B = 360;\n                    var DIM = ed + em * 30 + ey * 360 - (sd + sm * 30 + sy * 360);\n                    break;\n                case 1:\n                    // Actual/actual\n                    var ylength = 365;\n                    if (sy === ey || sy + 1 === ey && (sm > em || sm === em && sd >= ed)) {\n                        if (sy === ey && func_methods.isLeapYear(sy) || func_methods.feb29Between(settlement, maturity) || em === 1 && ed === 29) {\n                            ylength = 366;\n                        }\n                        var B = ylength;\n                        var DIM = dayjs(maturity).diff(dayjs(settlement), 'days');\n                        result = investment / (1 - discount * DIM / B);\n                        return result;\n                    }\n                    var years = ey - sy + 1;\n                    var days = (dayjs().set({\n                        'year': ey + 1,\n                        'month': 0,\n                        'date': 1\n                    }) - dayjs().set({\n                        'year': sy,\n                        'month': 0,\n                        'date': 1\n                    })) / 1000 / 60 / 60 / 24;\n                    var average = days / years;\n                    var B = average;\n                    var DIM = dayjs(maturity).diff(dayjs(settlement), 'days');\n                    break;\n                case 2:\n                    // Actual/360\n                    var B = 360;\n                    var DIM = dayjs(maturity).diff(dayjs(settlement), 'days');\n                    break;\n                case 3:\n                    // Actual/365\n                    var B = 365;\n                    var DIM = dayjs(maturity).diff(dayjs(settlement), 'days');\n                    break;\n                case 4:\n                    // European 30/360\n                    var B = 360;\n                    var DIM = ed + em * 30 + ey * 360 - (sd + sm * 30 + sy * 360);\n                    break;\n                }\n                result = investment / (1 - discount * DIM / B);\n                return result;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'DISC': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //结算日\n                var settlement = func_methods.getCellDate(arguments[0]);\n                if (valueIsError(settlement)) {\n                    return settlement;\n                }\n                if (!dayjs(settlement).isValid()) {\n                    return formula.error.v;\n                }    //到期日\n                //到期日\n                var maturity = func_methods.getCellDate(arguments[1]);\n                if (valueIsError(maturity)) {\n                    return maturity;\n                }\n                if (!dayjs(maturity).isValid()) {\n                    return formula.error.v;\n                }    //有价证券的价格\n                //有价证券的价格\n                var pr = func_methods.getFirstValue(arguments[2]);\n                if (valueIsError(pr)) {\n                    return pr;\n                }\n                if (!isRealNum(pr)) {\n                    return formula.error.v;\n                }\n                pr = parseFloat(pr);    //有价证券的清偿价值\n                //有价证券的清偿价值\n                var redemption = func_methods.getFirstValue(arguments[3]);\n                if (valueIsError(redemption)) {\n                    return redemption;\n                }\n                if (!isRealNum(redemption)) {\n                    return formula.error.v;\n                }\n                redemption = parseFloat(redemption);    //日计数基准类型\n                //日计数基准类型\n                var basis = 0;\n                if (arguments.length == 5) {\n                    basis = func_methods.getFirstValue(arguments[4]);\n                    if (valueIsError(basis)) {\n                        return basis;\n                    }\n                    if (!isRealNum(basis)) {\n                        return formula.error.v;\n                    }\n                    basis = parseFloat(basis);\n                }\n                if (pr <= 0 || redemption <= 0) {\n                    return formula.error.nm;\n                }\n                if (basis < 0 || basis > 4) {\n                    return formula.error.nm;\n                }\n                if (dayjs(settlement) - dayjs(maturity) >= 0) {\n                    return formula.error.nm;\n                }    //计算\n                //计算\n                var sd = dayjs(settlement).date();\n                var sm = dayjs(settlement).month() + 1;\n                var sy = dayjs(settlement).year();\n                var ed = dayjs(maturity).date();\n                var em = dayjs(maturity).month() + 1;\n                var ey = dayjs(maturity).year();\n                var result;\n                switch (basis) {\n                case 0:\n                    // US (NASD) 30/360\n                    if (sd == 31) {\n                        sd = 30;\n                    }\n                    if (ed == 31) {\n                        ed = 30;\n                    }\n                    var B = 360;\n                    var DSM = ed + em * 30 + ey * 360 - (sd + sm * 30 + sy * 360);\n                    break;\n                case 1:\n                    // Actual/actual\n                    var ylength = 365;\n                    if (sy === ey || sy + 1 === ey && (sm > em || sm === em && sd >= ed)) {\n                        if (sy === ey && func_methods.isLeapYear(sy) || func_methods.feb29Between(settlement, maturity) || em === 1 && ed === 29) {\n                            ylength = 366;\n                        }\n                        var B = ylength;\n                        var DSM = dayjs(maturity).diff(dayjs(settlement), 'days');\n                        result = (redemption - pr) / redemption * (B / DSM);\n                        return result;\n                    }\n                    var years = ey - sy + 1;\n                    var days = (dayjs().set({\n                        'year': ey + 1,\n                        'month': 0,\n                        'date': 1\n                    }) - dayjs().set({\n                        'year': sy,\n                        'month': 0,\n                        'date': 1\n                    })) / 1000 / 60 / 60 / 24;\n                    var average = days / years;\n                    var B = average;\n                    var DSM = dayjs(maturity).diff(dayjs(settlement), 'days');\n                    break;\n                case 2:\n                    // Actual/360\n                    var B = 360;\n                    var DSM = dayjs(maturity).diff(dayjs(settlement), 'days');\n                    break;\n                case 3:\n                    // Actual/365\n                    var B = 365;\n                    var DSM = dayjs(maturity).diff(dayjs(settlement), 'days');\n                    break;\n                case 4:\n                    // European 30/360\n                    var B = 360;\n                    var DSM = ed + em * 30 + ey * 360 - (sd + sm * 30 + sy * 360);\n                    break;\n                }\n                result = (redemption - pr) / redemption * (B / DSM);\n                return result;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'NPER': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //利率\n                var rate = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(rate)) {\n                    return rate;\n                }\n                if (!isRealNum(rate)) {\n                    return formula.error.v;\n                }\n                rate = parseFloat(rate);    //各期所应支付的金额\n                //各期所应支付的金额\n                var pmt = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(pmt)) {\n                    return pmt;\n                }\n                if (!isRealNum(pmt)) {\n                    return formula.error.v;\n                }\n                pmt = parseFloat(pmt);    //现值\n                //现值\n                var pv = func_methods.getFirstValue(arguments[2]);\n                if (valueIsError(pv)) {\n                    return pv;\n                }\n                if (!isRealNum(pv)) {\n                    return formula.error.v;\n                }\n                pv = parseFloat(pv);    //最后一次付款后希望得到的现金余额\n                //最后一次付款后希望得到的现金余额\n                var fv = 0;\n                if (arguments.length >= 4) {\n                    fv = func_methods.getFirstValue(arguments[3]);\n                    if (valueIsError(fv)) {\n                        return fv;\n                    }\n                    if (!isRealNum(fv)) {\n                        return formula.error.v;\n                    }\n                    fv = parseFloat(fv);\n                }    //指定各期的付款时间是在期初还是期末\n                //指定各期的付款时间是在期初还是期末\n                var type = 0;\n                if (arguments.length >= 5) {\n                    type = func_methods.getFirstValue(arguments[4]);\n                    if (valueIsError(type)) {\n                        return type;\n                    }\n                    if (!isRealNum(type)) {\n                        return formula.error.v;\n                    }\n                    type = parseFloat(type);\n                }\n                if (type != 0 && type != 1) {\n                    return formula.error.nm;\n                }    //计算\n                //计算\n                var num = pmt * (1 + rate * type) - fv * rate;\n                var den = pv * rate + pmt * (1 + rate * type);\n                return Math.log(num / den) / Math.log(1 + rate);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'SLN': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //资产原值\n                var cost = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(cost)) {\n                    return cost;\n                }\n                if (!isRealNum(cost)) {\n                    return formula.error.v;\n                }\n                cost = parseFloat(cost);    //资产残值\n                //资产残值\n                var salvage = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(salvage)) {\n                    return salvage;\n                }\n                if (!isRealNum(salvage)) {\n                    return formula.error.v;\n                }\n                salvage = parseFloat(salvage);    //资产的折旧期数\n                //资产的折旧期数\n                var life = func_methods.getFirstValue(arguments[2]);\n                if (valueIsError(life)) {\n                    return life;\n                }\n                if (!isRealNum(life)) {\n                    return formula.error.v;\n                }\n                life = parseFloat(life);\n                if (life == 0) {\n                    return formula.error.d;\n                }\n                return (cost - salvage) / life;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'DURATION': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //结算日\n                var settlement = func_methods.getCellDate(arguments[0]);\n                if (valueIsError(settlement)) {\n                    return settlement;\n                }\n                if (!dayjs(settlement).isValid()) {\n                    return formula.error.v;\n                }    //到期日\n                //到期日\n                var maturity = func_methods.getCellDate(arguments[1]);\n                if (valueIsError(maturity)) {\n                    return maturity;\n                }\n                if (!dayjs(maturity).isValid()) {\n                    return formula.error.v;\n                }    //有价证券的年息票利率\n                //有价证券的年息票利率\n                var coupon = func_methods.getFirstValue(arguments[2]);\n                if (valueIsError(coupon)) {\n                    return coupon;\n                }\n                if (!isRealNum(coupon)) {\n                    return formula.error.v;\n                }\n                coupon = parseFloat(coupon);    //有价证券的年收益率\n                //有价证券的年收益率\n                var yld = func_methods.getFirstValue(arguments[3]);\n                if (valueIsError(yld)) {\n                    return yld;\n                }\n                if (!isRealNum(yld)) {\n                    return formula.error.v;\n                }\n                yld = parseFloat(yld);    //年付息次数\n                //年付息次数\n                var frequency = func_methods.getFirstValue(arguments[4]);\n                if (valueIsError(frequency)) {\n                    return frequency;\n                }\n                if (!isRealNum(frequency)) {\n                    return formula.error.v;\n                }\n                frequency = parseInt(frequency);    //日计数基准类型\n                //日计数基准类型\n                var basis = 0;\n                if (arguments.length == 6) {\n                    basis = func_methods.getFirstValue(arguments[5]);\n                    if (valueIsError(basis)) {\n                        return basis;\n                    }\n                    if (!isRealNum(basis)) {\n                        return formula.error.v;\n                    }\n                    basis = parseInt(basis);\n                }\n                if (coupon < 0 || yld < 0) {\n                    return formula.error.nm;\n                }\n                if (frequency != 1 && frequency != 2 && frequency != 4) {\n                    return formula.error.nm;\n                }\n                if (basis < 0 || basis > 4) {\n                    return formula.error.nm;\n                }\n                if (dayjs(settlement) - dayjs(maturity) >= 0) {\n                    return formula.error.nm;\n                }\n                var nper = window.luckysheet_function.COUPNUM.f(settlement, maturity, frequency, basis);\n                var sum1 = 0;\n                var sum2 = 0;\n                for (var i = 1; i <= nper; i++) {\n                    sum1 += 100 * (coupon / frequency) * i / Math.pow(1 + yld / frequency, i);\n                    sum2 += 100 * (coupon / frequency) / Math.pow(1 + yld / frequency, i);\n                }\n                var result = (sum1 + 100 * nper / Math.pow(1 + yld / frequency, nper)) / (sum2 + 100 / Math.pow(1 + yld / frequency, nper));\n                result = result / frequency;\n                return result;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'MDURATION': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //结算日\n                var settlement = func_methods.getCellDate(arguments[0]);\n                if (valueIsError(settlement)) {\n                    return settlement;\n                }\n                if (!dayjs(settlement).isValid()) {\n                    return formula.error.v;\n                }    //到期日\n                //到期日\n                var maturity = func_methods.getCellDate(arguments[1]);\n                if (valueIsError(maturity)) {\n                    return maturity;\n                }\n                if (!dayjs(maturity).isValid()) {\n                    return formula.error.v;\n                }    //有价证券的年息票利率\n                //有价证券的年息票利率\n                var coupon = func_methods.getFirstValue(arguments[2]);\n                if (valueIsError(coupon)) {\n                    return coupon;\n                }\n                if (!isRealNum(coupon)) {\n                    return formula.error.v;\n                }\n                coupon = parseFloat(coupon);    //有价证券的年收益率\n                //有价证券的年收益率\n                var yld = func_methods.getFirstValue(arguments[3]);\n                if (valueIsError(yld)) {\n                    return yld;\n                }\n                if (!isRealNum(yld)) {\n                    return formula.error.v;\n                }\n                yld = parseFloat(yld);    //年付息次数\n                //年付息次数\n                var frequency = func_methods.getFirstValue(arguments[4]);\n                if (valueIsError(frequency)) {\n                    return frequency;\n                }\n                if (!isRealNum(frequency)) {\n                    return formula.error.v;\n                }\n                frequency = parseInt(frequency);    //日计数基准类型\n                //日计数基准类型\n                var basis = 0;\n                if (arguments.length == 6) {\n                    basis = func_methods.getFirstValue(arguments[5]);\n                    if (valueIsError(basis)) {\n                        return basis;\n                    }\n                    if (!isRealNum(basis)) {\n                        return formula.error.v;\n                    }\n                    basis = parseInt(basis);\n                }\n                if (coupon < 0 || yld < 0) {\n                    return formula.error.nm;\n                }\n                if (frequency != 1 && frequency != 2 && frequency != 4) {\n                    return formula.error.nm;\n                }\n                if (basis < 0 || basis > 4) {\n                    return formula.error.nm;\n                }\n                if (dayjs(settlement) - dayjs(maturity) >= 0) {\n                    return formula.error.nm;\n                }\n                var duration = window.luckysheet_function.DURATION.f(settlement, maturity, coupon, yld, frequency, basis);\n                return duration / (1 + yld / frequency);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'BIN2DEC': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //二进制数\n                var number = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number)) {\n                    return number;\n                }\n                if (!/^[01]{1,10}$/g.test(number)) {\n                    return formula.error.nm;\n                }    //计算\n                //计算\n                var result = parseInt(number, 2);\n                var stringified = number.toString();\n                if (stringified.length === 10 && stringified.substring(0, 1) === '1') {\n                    return parseInt(stringified.substring(1), 2) - 512;\n                } else {\n                    return result;\n                }\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'BIN2HEX': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //二进制数\n                var number = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number)) {\n                    return number;\n                }    //有效位数\n                //有效位数\n                var places = null;\n                if (arguments.length == 2) {\n                    places = func_methods.getFirstValue(arguments[1]);\n                    if (valueIsError(places)) {\n                        return places;\n                    }\n                    if (!isRealNum(places)) {\n                        return formula.error.v;\n                    }\n                    places = parseInt(places);\n                }\n                if (!/^[01]{1,10}$/g.test(number)) {\n                    return formula.error.nm;\n                }    //计算\n                //计算\n                var result = parseInt(number, 2).toString(16).toUpperCase();\n                if (places == null) {\n                    return result;\n                } else {\n                    if (places < 0 || places < result.length) {\n                        return formula.error.nm;\n                    }\n                    return new Array(places - result.length + 1).join('0') + result;\n                }\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'BIN2OCT': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //二进制数\n                var number = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number)) {\n                    return number;\n                }    //有效位数\n                //有效位数\n                var places = null;\n                if (arguments.length == 2) {\n                    places = func_methods.getFirstValue(arguments[1]);\n                    if (valueIsError(places)) {\n                        return places;\n                    }\n                    if (!isRealNum(places)) {\n                        return formula.error.v;\n                    }\n                    places = parseInt(places);\n                }\n                if (!/^[01]{1,10}$/g.test(number)) {\n                    return formula.error.nm;\n                }    //计算\n                //计算\n                var stringified = number.toString();\n                if (stringified.length === 10 && stringified.substring(0, 1) === '1') {\n                    return (1073741312 + parseInt(stringified.substring(1), 2)).toString(8);\n                }\n                var result = parseInt(number, 2).toString(8);\n                if (places == null) {\n                    return result;\n                } else {\n                    if (places < 0 || places < result.length) {\n                        return formula.error.nm;\n                    }\n                    return new Array(places - result.length + 1).join('0') + result;\n                }\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'DEC2BIN': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //十进制数\n                var number = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number)) {\n                    return number;\n                }\n                if (!isRealNum(number)) {\n                    return formula.error.v;\n                }\n                number = parseFloat(number);    //有效位数\n                //有效位数\n                var places = null;\n                if (arguments.length == 2) {\n                    places = func_methods.getFirstValue(arguments[1]);\n                    if (valueIsError(places)) {\n                        return places;\n                    }\n                    if (!isRealNum(places)) {\n                        return formula.error.v;\n                    }\n                    places = parseInt(places);\n                }\n                if (!/^-?[0-9]{1,3}$/.test(number) || number < -512 || number > 511) {\n                    return formula.error.nm;\n                }    //计算\n                //计算\n                if (number < 0) {\n                    return '1' + new Array(9 - (512 + number).toString(2).length).join('0') + (512 + number).toString(2);\n                }\n                var result = parseInt(number, 10).toString(2);\n                if (places == null) {\n                    return result;\n                } else {\n                    if (places < 0 || places < result.length) {\n                        return formula.error.nm;\n                    }\n                    return new Array(places - result.length + 1).join('0') + result;\n                }\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'DEC2HEX': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //十进制数\n                var number = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number)) {\n                    return number;\n                }\n                if (!isRealNum(number)) {\n                    return formula.error.v;\n                }\n                number = parseFloat(number);    //有效位数\n                //有效位数\n                var places = null;\n                if (arguments.length == 2) {\n                    places = func_methods.getFirstValue(arguments[1]);\n                    if (valueIsError(places)) {\n                        return places;\n                    }\n                    if (!isRealNum(places)) {\n                        return formula.error.v;\n                    }\n                    places = parseInt(places);\n                }\n                if (!/^-?[0-9]{1,12}$/.test(number) || number < -549755813888 || number > 549755813887) {\n                    return formula.error.nm;\n                }    //计算\n                //计算\n                if (number < 0) {\n                    return (1099511627776 + number).toString(16).toUpperCase();\n                }\n                var result = parseInt(number, 10).toString(16).toUpperCase();\n                if (places == null) {\n                    return result;\n                } else {\n                    if (places < 0 || places < result.length) {\n                        return formula.error.nm;\n                    }\n                    return new Array(places - result.length + 1).join('0') + result;\n                }\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'DEC2OCT': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //十进制数\n                var number = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number)) {\n                    return number;\n                }\n                if (!isRealNum(number)) {\n                    return formula.error.v;\n                }\n                number = parseFloat(number);    //有效位数\n                //有效位数\n                var places = null;\n                if (arguments.length == 2) {\n                    places = func_methods.getFirstValue(arguments[1]);\n                    if (valueIsError(places)) {\n                        return places;\n                    }\n                    if (!isRealNum(places)) {\n                        return formula.error.v;\n                    }\n                    places = parseInt(places);\n                }\n                if (!/^-?[0-9]{1,9}$/.test(number) || number < -536870912 || number > 536870911) {\n                    return formula.error.nm;\n                }    //计算\n                //计算\n                if (number < 0) {\n                    return (1073741824 + number).toString(8);\n                }\n                var result = parseInt(number, 10).toString(8);\n                if (places == null) {\n                    return result;\n                } else {\n                    if (places < 0 || places < result.length) {\n                        return formula.error.nm;\n                    }\n                    return new Array(places - result.length + 1).join('0') + result;\n                }\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'HEX2BIN': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //十六进制数\n                var number = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number)) {\n                    return number;\n                }    //有效位数\n                //有效位数\n                var places = null;\n                if (arguments.length == 2) {\n                    places = func_methods.getFirstValue(arguments[1]);\n                    if (valueIsError(places)) {\n                        return places;\n                    }\n                    if (!isRealNum(places)) {\n                        return formula.error.v;\n                    }\n                    places = parseInt(places);\n                }\n                if (!/^[0-9A-Fa-f]{1,10}$/.test(number)) {\n                    return formula.error.nm;\n                }    //计算\n                //计算\n                var negative = number.length === 10 && number.substring(0, 1).toLowerCase() === 'f' ? true : false;\n                var decimal = negative ? parseInt(number, 16) - 1099511627776 : parseInt(number, 16);\n                if (decimal < -512 || decimal > 511) {\n                    return formula.error.nm;\n                }\n                if (negative) {\n                    return '1' + new Array(9 - (512 + decimal).toString(2).length).join('0') + (512 + decimal).toString(2);\n                }\n                var result = decimal.toString(2);\n                if (places == null) {\n                    return result;\n                } else {\n                    if (places < 0 || places < result.length) {\n                        return formula.error.nm;\n                    }\n                    return new Array(places - result.length + 1).join('0') + result;\n                }\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'HEX2DEC': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //十六进制数\n                var number = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number)) {\n                    return number;\n                }\n                if (!/^[0-9A-Fa-f]{1,10}$/.test(number)) {\n                    return formula.error.nm;\n                }    //计算\n                //计算\n                var decimal = parseInt(number, 16);\n                return decimal >= 549755813888 ? decimal - 1099511627776 : decimal;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'HEX2OCT': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //十六进制数\n                var number = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number)) {\n                    return number;\n                }    //有效位数\n                //有效位数\n                var places = null;\n                if (arguments.length == 2) {\n                    places = func_methods.getFirstValue(arguments[1]);\n                    if (valueIsError(places)) {\n                        return places;\n                    }\n                    if (!isRealNum(places)) {\n                        return formula.error.v;\n                    }\n                    places = parseInt(places);\n                }\n                if (!/^[0-9A-Fa-f]{1,10}$/.test(number)) {\n                    return formula.error.nm;\n                }    //计算\n                //计算\n                var decimal = parseInt(number, 16);\n                if (decimal > 536870911 && decimal < 1098974756864) {\n                    return formula.error.nm;\n                }\n                if (decimal >= 1098974756864) {\n                    return (decimal - 1098437885952).toString(8);\n                }\n                var result = decimal.toString(8);\n                if (places == null) {\n                    return result;\n                } else {\n                    if (places < 0 || places < result.length) {\n                        return formula.error.nm;\n                    }\n                    return new Array(places - result.length + 1).join('0') + result;\n                }\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'OCT2BIN': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //八进制数\n                var number = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number)) {\n                    return number;\n                }    //有效位数\n                //有效位数\n                var places = null;\n                if (arguments.length == 2) {\n                    places = func_methods.getFirstValue(arguments[1]);\n                    if (valueIsError(places)) {\n                        return places;\n                    }\n                    if (!isRealNum(places)) {\n                        return formula.error.v;\n                    }\n                    places = parseInt(places);\n                }\n                if (!/^[0-7]{1,10}$/.test(number)) {\n                    return formula.error.nm;\n                }    //计算\n                //计算\n                number = number.toString();\n                var negative = number.length === 10 && number.substring(0, 1) === '7' ? true : false;\n                var decimal = negative ? parseInt(number, 8) - 1073741824 : parseInt(number, 8);\n                if (decimal < -512 || decimal > 511) {\n                    return error.num;\n                }\n                if (negative) {\n                    return '1' + new Array(9 - (512 + decimal).toString(2).length).join('0') + (512 + decimal).toString(2);\n                }\n                var result = decimal.toString(2);\n                if (places == null) {\n                    return result;\n                } else {\n                    if (places < 0 || places < result.length) {\n                        return formula.error.nm;\n                    }\n                    return new Array(places - result.length + 1).join('0') + result;\n                }\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'OCT2DEC': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //八进制数\n                var number = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number)) {\n                    return number;\n                }\n                if (!/^[0-7]{1,10}$/.test(number)) {\n                    return formula.error.nm;\n                }    //计算\n                //计算\n                var decimal = parseInt(number, 8);\n                return decimal >= 536870912 ? decimal - 1073741824 : decimal;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'OCT2HEX': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //八进制数\n                var number = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number)) {\n                    return number;\n                }    //有效位数\n                //有效位数\n                var places = null;\n                if (arguments.length == 2) {\n                    places = func_methods.getFirstValue(arguments[1]);\n                    if (valueIsError(places)) {\n                        return places;\n                    }\n                    if (!isRealNum(places)) {\n                        return formula.error.v;\n                    }\n                    places = parseInt(places);\n                }\n                if (!/^[0-7]{1,10}$/.test(number)) {\n                    return formula.error.nm;\n                }    //计算\n                //计算\n                var decimal = parseInt(number, 8);\n                if (decimal >= 536870912) {\n                    return 'FF' + (decimal + 3221225472).toString(16).toUpperCase();\n                }\n                var result = decimal.toString(16).toUpperCase();\n                if (places == null) {\n                    return result;\n                } else {\n                    if (places < 0 || places < result.length) {\n                        return formula.error.nm;\n                    }\n                    return new Array(places - result.length + 1).join('0') + result;\n                }\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'COMPLEX': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //复数的实系数\n                var real_num = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(real_num)) {\n                    return real_num;\n                }\n                if (!isRealNum(real_num)) {\n                    return formula.error.v;\n                }\n                real_num = parseFloat(real_num);    //复数的虚系数\n                //复数的虚系数\n                var i_num = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(i_num)) {\n                    return i_num;\n                }\n                if (!isRealNum(i_num)) {\n                    return formula.error.v;\n                }\n                i_num = parseFloat(i_num);    //复数中虚系数的后缀\n                //复数中虚系数的后缀\n                var suffix = 'i';\n                if (arguments.length == 3) {\n                    suffix = arguments[2].toString();\n                }\n                if (suffix != 'i' && suffix != 'j') {\n                    return formula.error.v;\n                }    //计算\n                //计算\n                if (real_num === 0 && i_num === 0) {\n                    return 0;\n                } else if (real_num === 0) {\n                    return i_num === 1 ? suffix : i_num.toString() + suffix;\n                } else if (i_num === 0) {\n                    return real_num.toString();\n                } else {\n                    var sign = i_num > 0 ? '+' : '';\n                    return real_num.toString() + sign + (i_num === 1 ? suffix : i_num.toString() + suffix);\n                }\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'IMREAL': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //复数\n                var inumber = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(inumber)) {\n                    return inumber;\n                }\n                inumber = inumber.toString();\n                if (inumber.toLowerCase() == 'true' || inumber.toLowerCase() == 'false') {\n                    return formula.error.v;\n                }    //计算\n                //计算\n                if (inumber == '0') {\n                    return 0;\n                }\n                if ([\n                        'i',\n                        '+i',\n                        '1i',\n                        '+1i',\n                        '-i',\n                        '-1i',\n                        'j',\n                        '+j',\n                        '1j',\n                        '+1j',\n                        '-j',\n                        '-1j'\n                    ].indexOf(inumber) >= 0) {\n                    return 0;\n                }\n                var plus = inumber.indexOf('+');\n                var minus = inumber.indexOf('-');\n                if (plus === 0) {\n                    plus = inumber.indexOf('+', 1);\n                }\n                if (minus === 0) {\n                    minus = inumber.indexOf('-', 1);\n                }\n                var last = inumber.substring(inumber.length - 1, inumber.length);\n                var unit = last === 'i' || last === 'j';\n                if (plus >= 0 || minus >= 0) {\n                    if (!unit) {\n                        return formula.error.nm;\n                    }\n                    if (plus >= 0) {\n                        return isNaN(inumber.substring(0, plus)) || isNaN(inumber.substring(plus + 1, inumber.length - 1)) ? formula.error.nm : Number(inumber.substring(0, plus));\n                    } else {\n                        return isNaN(inumber.substring(0, minus)) || isNaN(inumber.substring(minus + 1, inumber.length - 1)) ? formula.error.nm : Number(inumber.substring(0, minus));\n                    }\n                } else {\n                    if (unit) {\n                        return isNaN(inumber.substring(0, inumber.length - 1)) ? formula.error.nm : 0;\n                    } else {\n                        return isNaN(inumber) ? formula.error.nm : inumber;\n                    }\n                }\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'IMAGINARY': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //复数\n                var inumber = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(inumber)) {\n                    return inumber;\n                }\n                inumber = inumber.toString();\n                if (inumber.toLowerCase() == 'true' || inumber.toLowerCase() == 'false') {\n                    return formula.error.v;\n                }    //计算\n                //计算\n                if (inumber == '0') {\n                    return 0;\n                }\n                if ([\n                        'i',\n                        'j'\n                    ].indexOf(inumber) >= 0) {\n                    return 1;\n                }\n                inumber = inumber.replace('+i', '+1i').replace('-i', '-1i').replace('+j', '+1j').replace('-j', '-1j');\n                var plus = inumber.indexOf('+');\n                var minus = inumber.indexOf('-');\n                if (plus === 0) {\n                    plus = inumber.indexOf('+', 1);\n                }\n                if (minus === 0) {\n                    minus = inumber.indexOf('-', 1);\n                }\n                var last = inumber.substring(inumber.length - 1, inumber.length);\n                var unit = last === 'i' || last === 'j';\n                if (plus >= 0 || minus >= 0) {\n                    if (!unit) {\n                        return formula.error.nm;\n                    }\n                    if (plus >= 0) {\n                        return isNaN(inumber.substring(0, plus)) || isNaN(inumber.substring(plus + 1, inumber.length - 1)) ? formula.error.nm : Number(inumber.substring(plus + 1, inumber.length - 1));\n                    } else {\n                        return isNaN(inumber.substring(0, minus)) || isNaN(inumber.substring(minus + 1, inumber.length - 1)) ? formula.error.nm : -Number(inumber.substring(minus + 1, inumber.length - 1));\n                    }\n                } else {\n                    if (unit) {\n                        return isNaN(inumber.substring(0, inumber.length - 1)) ? formula.error.nm : inumber.substring(0, inumber.length - 1);\n                    } else {\n                        return isNaN(inumber) ? formula.error.nm : 0;\n                    }\n                }\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'IMCONJUGATE': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //复数\n                var inumber = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(inumber)) {\n                    return inumber;\n                }\n                inumber = inumber.toString();\n                var x = window.luckysheet_function.IMREAL.f(inumber);\n                if (valueIsError(x)) {\n                    return x;\n                }\n                var y = window.luckysheet_function.IMAGINARY.f(inumber);\n                if (valueIsError(y)) {\n                    return y;\n                }\n                var unit = inumber.substring(inumber.length - 1);\n                unit = unit === 'i' || unit === 'j' ? unit : 'i';\n                return y !== 0 ? window.luckysheet_function.COMPLEX.f(x, -y, unit) : inumber;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'IMABS': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var x = window.luckysheet_function.IMREAL.f(arguments[0]);\n                if (valueIsError(x)) {\n                    return x;\n                }\n                var y = window.luckysheet_function.IMAGINARY.f(arguments[0]);\n                if (valueIsError(y)) {\n                    return y;\n                }\n                return Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2));\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'DELTA': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //第一个数字\n                var number1 = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number1)) {\n                    return number1;\n                }\n                if (!isRealNum(number1)) {\n                    return formula.error.v;\n                }\n                number1 = parseFloat(number1);    //第二个数字\n                //第二个数字\n                var number2 = 0;\n                if (arguments.length == 2) {\n                    number2 = func_methods.getFirstValue(arguments[1]);\n                    if (valueIsError(number2)) {\n                        return number2;\n                    }\n                    if (!isRealNum(number2)) {\n                        return formula.error.v;\n                    }\n                    number2 = parseFloat(number2);\n                }\n                return number1 === number2 ? 1 : 0;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'IMSUM': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var x = window.luckysheet_function.IMREAL.f(arguments[0]);\n                if (valueIsError(x)) {\n                    return x;\n                }\n                var y = window.luckysheet_function.IMAGINARY.f(arguments[0]);\n                if (valueIsError(y)) {\n                    return y;\n                }\n                var result = arguments[0];\n                for (var i = 1; i < arguments.length; i++) {\n                    var a = window.luckysheet_function.IMREAL.f(result);\n                    if (valueIsError(a)) {\n                        return a;\n                    }\n                    var b = window.luckysheet_function.IMAGINARY.f(result);\n                    if (valueIsError(b)) {\n                        return b;\n                    }\n                    var c = window.luckysheet_function.IMREAL.f(arguments[i]);\n                    if (valueIsError(c)) {\n                        return c;\n                    }\n                    var d = window.luckysheet_function.IMAGINARY.f(arguments[i]);\n                    if (valueIsError(d)) {\n                        return d;\n                    }\n                    result = window.luckysheet_function.COMPLEX.f(a + c, b + d);\n                }\n                return result;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'IMSUB': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //inumber1\n                var inumber1 = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(inumber1)) {\n                    return inumber1;\n                }\n                inumber1 = inumber1.toString();\n                if (inumber1.toLowerCase() == 'true' || inumber1.toLowerCase() == 'false') {\n                    return formula.error.v;\n                }\n                var a = window.luckysheet_function.IMREAL.f(inumber1);\n                if (valueIsError(a)) {\n                    return a;\n                }\n                var b = window.luckysheet_function.IMAGINARY.f(inumber1);\n                if (valueIsError(b)) {\n                    return b;\n                }    //inumber2\n                //inumber2\n                var inumber2 = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(inumber2)) {\n                    return inumber2;\n                }\n                inumber2 = inumber2.toString();\n                if (inumber2.toLowerCase() == 'true' || inumber2.toLowerCase() == 'false') {\n                    return formula.error.v;\n                }\n                var c = window.luckysheet_function.IMREAL.f(inumber2);\n                if (valueIsError(c)) {\n                    return c;\n                }\n                var d = window.luckysheet_function.IMAGINARY.f(inumber2);\n                if (valueIsError(d)) {\n                    return d;\n                }    //计算\n                //计算\n                var unit1 = inumber1.substring(inumber1.length - 1);\n                var unit2 = inumber2.substring(inumber2.length - 1);\n                var unit = 'i';\n                if (unit1 === 'j') {\n                    unit = 'j';\n                } else if (unit2 === 'j') {\n                    unit = 'j';\n                }\n                return window.luckysheet_function.COMPLEX.f(a - c, b - d, unit);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'IMPRODUCT': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var x = window.luckysheet_function.IMREAL.f(arguments[0]);\n                if (valueIsError(x)) {\n                    return x;\n                }\n                var y = window.luckysheet_function.IMAGINARY.f(arguments[0]);\n                if (valueIsError(y)) {\n                    return y;\n                }\n                var result = arguments[0];\n                for (var i = 1; i < arguments.length; i++) {\n                    var a = window.luckysheet_function.IMREAL.f(result);\n                    if (valueIsError(a)) {\n                        return a;\n                    }\n                    var b = window.luckysheet_function.IMAGINARY.f(result);\n                    if (valueIsError(b)) {\n                        return b;\n                    }\n                    var c = window.luckysheet_function.IMREAL.f(arguments[i]);\n                    if (valueIsError(c)) {\n                        return c;\n                    }\n                    var d = window.luckysheet_function.IMAGINARY.f(arguments[i]);\n                    if (valueIsError(d)) {\n                        return d;\n                    }\n                    result = window.luckysheet_function.COMPLEX.f(a * c - b * d, a * d + b * c);\n                }\n                return result;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'IMDIV': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //inumber1\n                var inumber1 = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(inumber1)) {\n                    return inumber1;\n                }\n                inumber1 = inumber1.toString();\n                if (inumber1.toLowerCase() == 'true' || inumber1.toLowerCase() == 'false') {\n                    return formula.error.v;\n                }\n                var a = window.luckysheet_function.IMREAL.f(inumber1);\n                if (valueIsError(a)) {\n                    return a;\n                }\n                var b = window.luckysheet_function.IMAGINARY.f(inumber1);\n                if (valueIsError(b)) {\n                    return b;\n                }    //inumber2\n                //inumber2\n                var inumber2 = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(inumber2)) {\n                    return inumber2;\n                }\n                inumber2 = inumber2.toString();\n                if (inumber2.toLowerCase() == 'true' || inumber2.toLowerCase() == 'false') {\n                    return formula.error.v;\n                }\n                var c = window.luckysheet_function.IMREAL.f(inumber2);\n                if (valueIsError(c)) {\n                    return c;\n                }\n                var d = window.luckysheet_function.IMAGINARY.f(inumber2);\n                if (valueIsError(d)) {\n                    return d;\n                }    //计算\n                //计算\n                var unit1 = inumber1.substring(inumber1.length - 1);\n                var unit2 = inumber2.substring(inumber2.length - 1);\n                var unit = 'i';\n                if (unit1 === 'j') {\n                    unit = 'j';\n                } else if (unit2 === 'j') {\n                    unit = 'j';\n                }\n                if (c === 0 && d === 0) {\n                    return formula.error.nm;\n                }\n                var den = c * c + d * d;\n                return window.luckysheet_function.COMPLEX.f((a * c + b * d) / den, (b * c - a * d) / den, unit);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'NOT': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //logical\n                var logical = func_methods.getCellBoolen(arguments[0]);\n                if (valueIsError(logical)) {\n                    return logical;\n                }\n                return !logical;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'TRUE': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                return true;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'FALSE': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                return false;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'AND': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var result = true;\n                for (var i = 0; i < arguments.length; i++) {\n                    var logical = func_methods.getCellBoolen(arguments[i]);\n                    if (valueIsError(logical)) {\n                        return logical;\n                    }\n                    if (!logical) {\n                        result = false;\n                        break;\n                    }\n                }\n                return result;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'IFERROR': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var value_if_error = func_methods.getFirstValue(arguments[1], 'text');\n                var value = func_methods.getFirstValue(arguments[0], 'text');    // (getObjType(value) === 'string' && $.trim(value) === ''It means that the cell associated with IFERROR has been deleted by keyboard\n                // (getObjType(value) === 'string' && $.trim(value) === ''It means that the cell associated with IFERROR has been deleted by keyboard\n                if (valueIsError(value) || getObjType(value) === 'string' && $.trim(value) === '') {\n                    return value_if_error;\n                }\n                return value;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'IF': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //要测试的条件\n                var logical_test = func_methods.getCellBoolen(arguments[0]);\n                if (valueIsError(logical_test)) {\n                    return logical_test;\n                }    //结果为 TRUE\n                //结果为 TRUE\n                var value_if_true = func_methods.getFirstValue(arguments[1], 'text');\n                if (valueIsError(value_if_true) && value_if_false != error.d) {\n                    return value_if_true;\n                }    //结果为 FALSE\n                //结果为 FALSE\n                var value_if_false = '';\n                if (arguments.length == 3) {\n                    value_if_false = func_methods.getFirstValue(arguments[2], 'text');\n                    if (valueIsError(value_if_false) && value_if_false != error.d) {\n                        return value_if_false;\n                    }\n                }\n                if (logical_test) {\n                    return value_if_true;\n                } else {\n                    return value_if_false;\n                }\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'OR': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var result = false;\n                for (var i = 0; i < arguments.length; i++) {\n                    var logical = func_methods.getCellBoolen(arguments[i]);\n                    if (valueIsError(logical)) {\n                        return logical;\n                    }\n                    if (logical) {\n                        result = true;\n                        break;\n                    }\n                }\n                return result;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'NE': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //value1\n                var value1 = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(value1)) {\n                    return value1;\n                }    //value2\n                //value2\n                var value2 = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(value2)) {\n                    return value2;\n                }\n                return value1 != value2;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'EQ': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //value1\n                var value1 = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(value1)) {\n                    return value1;\n                }    //value2\n                //value2\n                var value2 = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(value2)) {\n                    return value2;\n                }\n                return value1 == value2;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'GT': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //value1\n                var value1 = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(value1)) {\n                    return value1;\n                }\n                if (!isRealNum(value1)) {\n                    return formula.error.v;\n                }\n                value1 = parseFloat(value1);    //value2\n                //value2\n                var value2 = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(value2)) {\n                    return value2;\n                }\n                if (!isRealNum(value2)) {\n                    return formula.error.v;\n                }\n                value2 = parseFloat(value2);\n                return value1 > value2;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'GTE': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //value1\n                var value1 = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(value1)) {\n                    return value1;\n                }\n                if (!isRealNum(value1)) {\n                    return formula.error.v;\n                }\n                value1 = parseFloat(value1);    //value2\n                //value2\n                var value2 = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(value2)) {\n                    return value2;\n                }\n                if (!isRealNum(value2)) {\n                    return formula.error.v;\n                }\n                value2 = parseFloat(value2);\n                return value1 >= value2;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'LT': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //value1\n                var value1 = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(value1)) {\n                    return value1;\n                }\n                if (!isRealNum(value1)) {\n                    return formula.error.v;\n                }\n                value1 = parseFloat(value1);    //value2\n                //value2\n                var value2 = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(value2)) {\n                    return value2;\n                }\n                if (!isRealNum(value2)) {\n                    return formula.error.v;\n                }\n                value2 = parseFloat(value2);\n                return value1 < value2;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'LTE': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //value1\n                var value1 = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(value1)) {\n                    return value1;\n                }\n                if (!isRealNum(value1)) {\n                    return formula.error.v;\n                }\n                value1 = parseFloat(value1);    //value2\n                //value2\n                var value2 = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(value2)) {\n                    return value2;\n                }\n                if (!isRealNum(value2)) {\n                    return formula.error.v;\n                }\n                value2 = parseFloat(value2);\n                return value1 <= value2;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'ADD': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //value1\n                var value1 = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(value1)) {\n                    return value1;\n                }\n                if (!isRealNum(value1)) {\n                    return formula.error.v;\n                }\n                value1 = parseFloat(value1);    //value2\n                //value2\n                var value2 = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(value2)) {\n                    return value2;\n                }\n                if (!isRealNum(value2)) {\n                    return formula.error.v;\n                }\n                value2 = parseFloat(value2);\n                return value1 + value2;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'MINUS': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //value1\n                var value1 = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(value1)) {\n                    return value1;\n                }\n                if (!isRealNum(value1)) {\n                    return formula.error.v;\n                }\n                value1 = parseFloat(value1);    //value2\n                //value2\n                var value2 = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(value2)) {\n                    return value2;\n                }\n                if (!isRealNum(value2)) {\n                    return formula.error.v;\n                }\n                value2 = parseFloat(value2);\n                return value1 - value2;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'MULTIPLY': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //value1\n                var value1 = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(value1)) {\n                    return value1;\n                }\n                if (!isRealNum(value1)) {\n                    return formula.error.v;\n                }\n                value1 = parseFloat(value1);    //value2\n                //value2\n                var value2 = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(value2)) {\n                    return value2;\n                }\n                if (!isRealNum(value2)) {\n                    return formula.error.v;\n                }\n                value2 = parseFloat(value2);\n                return value1 * value2;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'DIVIDE': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //value1\n                var value1 = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(value1)) {\n                    return value1;\n                }\n                if (!isRealNum(value1)) {\n                    return formula.error.v;\n                }\n                value1 = parseFloat(value1);    //value2\n                //value2\n                var value2 = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(value2)) {\n                    return value2;\n                }\n                if (!isRealNum(value2)) {\n                    return formula.error.v;\n                }\n                value2 = parseFloat(value2);\n                if (value2 == 0) {\n                    return formula.error.d;\n                }\n                return value1 / value2;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'CONCAT': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //value1\n                var value1 = func_methods.getFirstValue(arguments[0], 'text');\n                if (valueIsError(value1)) {\n                    return value1;\n                }    //value2\n                //value2\n                var value2 = func_methods.getFirstValue(arguments[1], 'text');\n                if (valueIsError(value2)) {\n                    return value2;\n                }\n                return value1 + '' + value2;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'UNARY_PERCENT': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //要作为百分比解释的数值\n                var number = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number)) {\n                    return number;\n                }\n                if (!isRealNum(number)) {\n                    return formula.error.v;\n                }\n                number = parseFloat(number);\n                var result = number / 100;\n                return Math.round(result * 100) / 100;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'CONCATENATE': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var result = '';\n                for (var i = 0; i < arguments.length; i++) {\n                    var text = func_methods.getFirstValue(arguments[i], 'text');\n                    if (valueIsError(text)) {\n                        return text;\n                    }\n                    result = result + '' + text;\n                }\n                return result;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'CODE': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //字符串\n                var text = func_methods.getFirstValue(arguments[0], 'text');\n                if (valueIsError(text)) {\n                    return text;\n                }\n                if (text == '') {\n                    return formula.error.v;\n                }\n                return text.charCodeAt(0);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'CHAR': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //数字\n                var number = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number)) {\n                    return number;\n                }\n                if (!isRealNum(number)) {\n                    return formula.error.v;\n                }\n                number = parseInt(number);\n                if (number < 1 || number > 255) {\n                    return formula.error.v;\n                }\n                return String.fromCharCode(number);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'ARABIC': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //字符串\n                var text = func_methods.getFirstValue(arguments[0], 'text');\n                if (valueIsError(text)) {\n                    return text;\n                }\n                text = text.toString().toUpperCase();\n                if (!/^M*(?:D?C{0,3}|C[MD])(?:L?X{0,3}|X[CL])(?:V?I{0,3}|I[XV])$/.test(text)) {\n                    return formula.error.v;\n                }\n                var r = 0;\n                text.replace(/[MDLV]|C[MD]?|X[CL]?|I[XV]?/g, function (i) {\n                    r += {\n                        M: 1000,\n                        CM: 900,\n                        D: 500,\n                        CD: 400,\n                        C: 100,\n                        XC: 90,\n                        L: 50,\n                        XL: 40,\n                        X: 10,\n                        IX: 9,\n                        V: 5,\n                        IV: 4,\n                        I: 1\n                    }[i];\n                });\n                return r;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'ROMAN': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //数字\n                var number = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number)) {\n                    return number;\n                }\n                if (!isRealNum(number)) {\n                    return formula.error.v;\n                }\n                number = parseInt(number);\n                if (number == 0) {\n                    return '';\n                } else if (number < 1 || number > 3999) {\n                    return formula.error.v;\n                }    //计算\n                //计算\n                function convert(num) {\n                    var a = [\n                        [\n                            '',\n                            'I',\n                            'II',\n                            'III',\n                            'IV',\n                            'V',\n                            'VI',\n                            'VII',\n                            'VIII',\n                            'IX'\n                        ],\n                        [\n                            '',\n                            'X',\n                            'XX',\n                            'XXX',\n                            'XL',\n                            'L',\n                            'LX',\n                            'LXX',\n                            'LXXX',\n                            'XC'\n                        ],\n                        [\n                            '',\n                            'C',\n                            'CC',\n                            'CCC',\n                            'CD',\n                            'D',\n                            'DC',\n                            'DCC',\n                            'DCCC',\n                            'CM'\n                        ],\n                        [\n                            '',\n                            'M',\n                            'MM',\n                            'MMM'\n                        ]\n                    ];\n                    var i = a[3][Math.floor(num / 1000)];\n                    var j = a[2][Math.floor(num % 1000 / 100)];\n                    var k = a[1][Math.floor(num % 100 / 10)];\n                    var l = a[0][num % 10];\n                    return i + j + k + l;\n                }\n                return convert(number);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'REGEXEXTRACT': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //输入文本\n                var text = func_methods.getFirstValue(arguments[0], 'text');\n                if (valueIsError(text)) {\n                    return text;\n                }    //表达式\n                //表达式\n                var regular_expression = func_methods.getFirstValue(arguments[1], 'text');\n                if (valueIsError(regular_expression)) {\n                    return regular_expression;\n                }\n                var match = text.match(new RegExp(regular_expression));\n                return match ? match[match.length > 1 ? match.length - 1 : 0] : null;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'REGEXMATCH': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //输入文本\n                var text = func_methods.getFirstValue(arguments[0], 'text');\n                if (valueIsError(text)) {\n                    return text;\n                }    //表达式\n                //表达式\n                var regular_expression = func_methods.getFirstValue(arguments[1], 'text');\n                if (valueIsError(regular_expression)) {\n                    return regular_expression;\n                }\n                var match = text.match(new RegExp(regular_expression));\n                return match ? true : false;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'REGEXREPLACE': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //输入文本\n                var text = func_methods.getFirstValue(arguments[0], 'text');\n                if (valueIsError(text)) {\n                    return text;\n                }    //表达式\n                //表达式\n                var regular_expression = func_methods.getFirstValue(arguments[1], 'text');\n                if (valueIsError(regular_expression)) {\n                    return regular_expression;\n                }    //插入文本\n                //插入文本\n                var replacement = func_methods.getFirstValue(arguments[2], 'text');\n                if (valueIsError(replacement)) {\n                    return replacement;\n                }\n                return text.replace(new RegExp(regular_expression), replacement);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'T': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //文本\n                var value = func_methods.getFirstValue(arguments[0], 'text');\n                if (valueIsError(value)) {\n                    return value;\n                }\n                return getObjType(value) == 'string' ? value : '';\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'FIXED': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //要进行舍入并转换为文本的数字\n                var number = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number)) {\n                    return number;\n                }\n                if (!isRealNum(number)) {\n                    return formula.error.v;\n                }\n                number = parseFloat(number);    //小数位数\n                //小数位数\n                var decimals = 2;\n                if (arguments.length >= 2) {\n                    decimals = func_methods.getFirstValue(arguments[1]);\n                    if (valueIsError(decimals)) {\n                        return decimals;\n                    }\n                    if (!isRealNum(decimals)) {\n                        return formula.error.v;\n                    }\n                    decimals = parseInt(decimals);\n                }    //逻辑值\n                //逻辑值\n                var no_commas = false;\n                if (arguments.length == 3) {\n                    no_commas = func_methods.getCellBoolen(arguments[2]);\n                    if (valueIsError(no_commas)) {\n                        return no_commas;\n                    }\n                }\n                if (decimals > 127) {\n                    return formula.error.v;\n                }    //计算\n                //计算\n                var format = no_commas ? '0' : '#,##0';\n                if (decimals <= 0) {\n                    number = Math.round(number * Math.pow(10, decimals)) / Math.pow(10, decimals);\n                } else if (decimals > 0) {\n                    format += '.' + new Array(decimals + 1).join('0');\n                }\n                return update(format, number);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'FIND': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //要查找的文本\n                var find_text = func_methods.getFirstValue(arguments[0], 'text');\n                if (valueIsError(find_text)) {\n                    return find_text;\n                }\n                find_text = find_text.toString();    //包含要查找文本的文本\n                //包含要查找文本的文本\n                var within_text = func_methods.getFirstValue(arguments[1], 'text');\n                if (valueIsError(within_text)) {\n                    return within_text;\n                }\n                within_text = within_text.toString();    //指定开始进行查找的字符\n                //指定开始进行查找的字符\n                var start_num = 1;\n                if (arguments.length == 3) {\n                    start_num = func_methods.getFirstValue(arguments[2]);\n                    if (valueIsError(start_num)) {\n                        return start_num;\n                    }\n                    if (!isRealNum(start_num)) {\n                        return formula.error.v;\n                    }\n                    start_num = parseFloat(start_num);\n                }\n                if (start_num < 0 || start_num > within_text.length) {\n                    return formula.error.v;\n                }\n                if (find_text == '') {\n                    return start_num;\n                }\n                if (within_text.indexOf(find_text) == -1) {\n                    return formula.error.v;\n                }\n                var result = within_text.indexOf(find_text, start_num - 1) + 1;\n                return result;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'FINDB': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //要查找的文本\n                var find_text = func_methods.getFirstValue(arguments[0], 'text');\n                if (valueIsError(find_text)) {\n                    return find_text;\n                }\n                find_text = find_text.toString();    //包含要查找文本的文本\n                //包含要查找文本的文本\n                var within_text = func_methods.getFirstValue(arguments[1], 'text');\n                if (valueIsError(within_text)) {\n                    return within_text;\n                }\n                within_text = within_text.toString();    //指定开始进行查找的字符\n                //指定开始进行查找的字符\n                var start_num = 1;\n                if (arguments.length == 3) {\n                    start_num = func_methods.getFirstValue(arguments[2]);\n                    if (valueIsError(start_num)) {\n                        return start_num;\n                    }\n                    if (!isRealNum(start_num)) {\n                        return formula.error.v;\n                    }\n                    start_num = parseFloat(start_num);\n                }\n                if (start_num < 0 || start_num > within_text.length) {\n                    return formula.error.v;\n                }\n                if (find_text == '') {\n                    return start_num;\n                }\n                if (within_text.indexOf(find_text) == -1) {\n                    return formula.error.v;\n                }\n                var strArr = within_text.split('');\n                var index = within_text.indexOf(find_text, start_num - 1);\n                var result = 0;\n                for (var i = 0; i < index; i++) {\n                    if (/[^\\x00-\\xff]/g.test(strArr[i])) {\n                        result += 2;\n                    } else {\n                        result += 1;\n                    }\n                }\n                return result;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'JOIN': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //定界符\n                var separator = func_methods.getFirstValue(arguments[0], 'text');\n                if (valueIsError(separator)) {\n                    return separator;\n                }    //值或数组\n                //值或数组\n                var dataArr = [];\n                for (var i = 1; i < arguments.length; i++) {\n                    var data = arguments[i];\n                    if (getObjType(data) == 'array') {\n                        if (getObjType(data[0]) == 'array' && !func_methods.isDyadicArr(data)) {\n                            return formula.error.v;\n                        }\n                        dataArr = dataArr.concat(func_methods.getDataArr(data, false));\n                    } else if (getObjType(data) == 'object' && data.startCell != null) {\n                        dataArr = dataArr.concat(func_methods.getCellDataArr(data, 'text', false));\n                    } else {\n                        dataArr.push(data);\n                    }\n                }\n                return dataArr.join(separator);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'LEFT': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //包含要提取���字符的文本字符串\n                var text = func_methods.getFirstValue(arguments[0], 'text');\n                if (valueIsError(text)) {\n                    return text;\n                }\n                text = text.toString();    //提取的字符的数量\n                //提取的字符的数量\n                var num_chars = 1;\n                if (arguments.length == 2) {\n                    num_chars = func_methods.getFirstValue(arguments[1]);\n                    if (valueIsError(num_chars)) {\n                        return num_chars;\n                    }\n                    if (!isRealNum(num_chars)) {\n                        return formula.error.v;\n                    }\n                    num_chars = parseInt(num_chars);\n                }\n                if (num_chars < 0) {\n                    return formula.error.v;\n                }    //计算\n                //计算\n                if (num_chars >= text.length) {\n                    return text;\n                } else if (num_chars == 0) {\n                    return '';\n                } else {\n                    return text.substr(0, num_chars);\n                }\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'RIGHT': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //包含要提取的字符的文本字符串\n                var text = func_methods.getFirstValue(arguments[0], 'text');\n                if (valueIsError(text)) {\n                    return text;\n                }\n                text = text.toString();    //提取的字符的数量\n                //提取的字符的数量\n                var num_chars = 1;\n                if (arguments.length == 2) {\n                    num_chars = func_methods.getFirstValue(arguments[1]);\n                    if (valueIsError(num_chars)) {\n                        return num_chars;\n                    }\n                    if (!isRealNum(num_chars)) {\n                        return formula.error.v;\n                    }\n                    num_chars = parseInt(num_chars);\n                }\n                if (num_chars < 0) {\n                    return formula.error.v;\n                }    //计算\n                //计算\n                if (num_chars >= text.length) {\n                    return text;\n                } else if (num_chars == 0) {\n                    return '';\n                } else {\n                    return text.substr(-num_chars, num_chars);\n                }\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'MID': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //包含要提取的字符的文本字符串\n                var text = func_methods.getFirstValue(arguments[0], 'text');\n                if (valueIsError(text)) {\n                    return text;\n                }\n                text = text.toString();    //开始提取的位置\n                //开始提取的位置\n                var start_num = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(start_num)) {\n                    return start_num;\n                }\n                if (!isRealNum(start_num)) {\n                    return formula.error.v;\n                }\n                start_num = parseInt(start_num);    //提取的字符的数量\n                //提取的字符的数量\n                var num_chars = func_methods.getFirstValue(arguments[2]);\n                if (valueIsError(num_chars)) {\n                    return num_chars;\n                }\n                if (!isRealNum(num_chars)) {\n                    return formula.error.v;\n                }\n                num_chars = parseInt(num_chars);\n                if (start_num < 1 || num_chars < 0) {\n                    return formula.error.v;\n                }    //计算\n                //计算\n                if (start_num > text.length) {\n                    return '';\n                }\n                if (start_num + num_chars > text.length) {\n                    return text.substr(start_num - 1, text.length - start_num + 1);\n                }\n                return text.substr(start_num - 1, num_chars);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'LEN': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //字符串\n                var text = func_methods.getFirstValue(arguments[0], 'text');\n                if (valueIsError(text)) {\n                    return text;\n                }\n                text = text.toString();\n                return text.length;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'LENB': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //字符串\n                var text = func_methods.getFirstValue(arguments[0], 'text');\n                if (valueIsError(text)) {\n                    return text;\n                }\n                text = text.toString();\n                return text.replace(/[^\\x00-\\xff]/g, 'aa').length;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'LOWER': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //字符串\n                var text = func_methods.getFirstValue(arguments[0], 'text');\n                if (valueIsError(text)) {\n                    return text;\n                }\n                text = text.toString();\n                return text ? text.toLowerCase() : text;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'UPPER': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //字符串\n                var text = func_methods.getFirstValue(arguments[0], 'text');\n                if (valueIsError(text)) {\n                    return text;\n                }\n                text = text.toString();\n                return text ? text.toUpperCase() : text;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'EXACT': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //字符串1\n                var text1 = func_methods.getFirstValue(arguments[0], 'text');\n                if (valueIsError(text1)) {\n                    return text1;\n                }\n                text1 = text1.toString();    //字符串2\n                //字符串2\n                var text2 = func_methods.getFirstValue(arguments[1], 'text');\n                if (valueIsError(text2)) {\n                    return text2;\n                }\n                text2 = text2.toString();\n                return text1 === text2;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'REPLACE': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //字符串1\n                var old_text = func_methods.getFirstValue(arguments[0], 'text');\n                if (valueIsError(old_text)) {\n                    return old_text;\n                }\n                old_text = old_text.toString();    //进行替换操作的位置\n                //进行替换操作的位置\n                var start_num = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(start_num)) {\n                    return start_num;\n                }\n                if (!isRealNum(start_num)) {\n                    return formula.error.v;\n                }\n                start_num = parseInt(start_num);    //要在文本中替换的字符个数\n                //要在文本中替换的字符个数\n                var num_chars = func_methods.getFirstValue(arguments[2]);\n                if (valueIsError(num_chars)) {\n                    return num_chars;\n                }\n                if (!isRealNum(num_chars)) {\n                    return formula.error.v;\n                }\n                num_chars = parseInt(num_chars);    //字符串2\n                //字符串2\n                var new_text = func_methods.getFirstValue(arguments[3], 'text');\n                if (valueIsError(new_text)) {\n                    return new_text;\n                }\n                new_text = new_text.toString();\n                return old_text.substr(0, start_num - 1) + new_text + old_text.substr(start_num - 1 + num_chars);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'REPT': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //字符串1\n                var text = func_methods.getFirstValue(arguments[0], 'text');\n                if (valueIsError(text)) {\n                    return text;\n                }\n                text = text.toString();    //重复次数\n                //重复次数\n                var number_times = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(number_times)) {\n                    return number_times;\n                }\n                if (!isRealNum(number_times)) {\n                    return formula.error.v;\n                }\n                number_times = parseInt(number_times);\n                if (number_times < 0) {\n                    return formula.error.v;\n                }\n                if (number_times > 100) {\n                    number_times = 100;\n                }\n                return new Array(number_times + 1).join(text);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'SEARCH': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //字符串1\n                var find_text = func_methods.getFirstValue(arguments[0], 'text');\n                if (valueIsError(find_text)) {\n                    return find_text;\n                }\n                find_text = find_text.toString();    //字符串2\n                //字符串2\n                var within_text = func_methods.getFirstValue(arguments[1], 'text');\n                if (valueIsError(within_text)) {\n                    return within_text;\n                }\n                within_text = within_text.toString();    //开始位置\n                //开始位置\n                var start_num = 1;\n                if (arguments.length == 3) {\n                    start_num = func_methods.getFirstValue(arguments[2]);\n                    if (valueIsError(start_num)) {\n                        return start_num;\n                    }\n                    if (!isRealNum(start_num)) {\n                        return formula.error.v;\n                    }\n                    start_num = parseInt(start_num);\n                }\n                if (start_num <= 0 || start_num > within_text.length) {\n                    return formula.error.v;\n                }\n                var foundAt = within_text.toLowerCase().indexOf(find_text.toLowerCase(), start_num - 1) + 1;\n                return foundAt === 0 ? formula.error.v : foundAt;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'SUBSTITUTE': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //需要替换其中字符的文本\n                var text = func_methods.getFirstValue(arguments[0], 'text');\n                if (valueIsError(text)) {\n                    return text;\n                }\n                text = text.toString();    //需要替换的文本\n                //需要替换的文本\n                var old_text = func_methods.getFirstValue(arguments[1], 'text');\n                if (valueIsError(old_text)) {\n                    return old_text;\n                }\n                old_text = old_text.toString();    //用于替换 old_text 的文本\n                //用于替换 old_text 的文本\n                var new_text = func_methods.getFirstValue(arguments[2], 'text');\n                if (valueIsError(new_text)) {\n                    return new_text;\n                }\n                new_text = new_text.toString();    //instance_num\n                //instance_num\n                var instance_num = null;\n                if (arguments.length == 4) {\n                    instance_num = func_methods.getFirstValue(arguments[3]);\n                    if (valueIsError(instance_num)) {\n                        return instance_num;\n                    }\n                    if (!isRealNum(instance_num)) {\n                        return formula.error.v;\n                    }\n                    instance_num = parseInt(instance_num);\n                }    //计算\n                //计算\n                var reg = new RegExp(old_text, 'g');\n                var result;\n                if (instance_num == null) {\n                    result = text.replace(reg, new_text);\n                } else {\n                    if (instance_num <= 0) {\n                        return formula.error.v;\n                    }\n                    var match = text.match(reg);\n                    if (match == null || instance_num > match.length) {\n                        return text;\n                    } else {\n                        var len = old_text.length;\n                        var index = 0;\n                        for (var i = 1; i <= instance_num; i++) {\n                            index = text.indexOf(old_text, index) + 1;\n                        }\n                        result = text.substring(0, index - 1) + new_text + text.substring(index - 1 + len);\n                    }\n                }\n                return result;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'CLEAN': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //字符串\n                var text = func_methods.getFirstValue(arguments[0], 'text');\n                if (valueIsError(text)) {\n                    return text;\n                }\n                text = text.toString();\n                var textArr = [];\n                for (var i = 0; i < text.length; i++) {\n                    var code = text.charCodeAt(i);\n                    if (/[\\u4e00-\\u9fa5]/g.test(text.charAt(i)) || code > 31 && code < 127) {\n                        textArr.push(text.charAt(i));\n                    }\n                }\n                return textArr.join('');\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'TEXT': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //数字\n                var value = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(value)) {\n                    return value;\n                }\n                if (!isRealNum(value)) {\n                    return formula.error.v;\n                }\n                value = parseFloat(value);    //格式\n                //格式\n                var format_text = func_methods.getFirstValue(arguments[1], 'text');\n                if (valueIsError(format_text)) {\n                    return format_text;\n                }\n                format_text = format_text.toString();\n                return update(format_text, value);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'TRIM': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //字符串\n                var text = func_methods.getFirstValue(arguments[0], 'text');\n                if (valueIsError(text)) {\n                    return text;\n                }\n                text = text.toString();\n                return text.replace(/ +/g, ' ').trim();\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'VALUE': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //字符串\n                var text = func_methods.getFirstValue(arguments[0], 'text');\n                if (valueIsError(text)) {\n                    return text;\n                }\n                text = text.toString();\n                return genarate(text)[2];\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'PROPER': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //字符串\n                var text = func_methods.getFirstValue(arguments[0], 'text');\n                if (valueIsError(text)) {\n                    return text;\n                }\n                text = text.toString().toLowerCase();\n                return text.replace(/[a-zA-Z]+/g, function (word) {\n                    return word.substring(0, 1).toUpperCase() + word.substring(1);\n                });\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'CONVERT': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //数字\n                var number = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number)) {\n                    return number;\n                }\n                if (!isRealNum(number)) {\n                    return formula.error.v;\n                }\n                number = parseFloat(number);    //数值的单位\n                //数值的单位\n                var from_unit = func_methods.getFirstValue(arguments[1], 'text');\n                if (valueIsError(from_unit)) {\n                    return from_unit;\n                }\n                from_unit = from_unit.toString();    //结果的单位\n                //结果的单位\n                var to_unit = func_methods.getFirstValue(arguments[2], 'text');\n                if (valueIsError(to_unit)) {\n                    return to_unit;\n                }\n                to_unit = to_unit.toString();    //计算\n                //计算\n                var units = [\n                    [\n                        'a.u. of action',\n                        '?',\n                        null,\n                        'action',\n                        false,\n                        false,\n                        1.05457168181818e-34\n                    ],\n                    [\n                        'a.u. of charge',\n                        'e',\n                        null,\n                        'electric_charge',\n                        false,\n                        false,\n                        1.60217653141414e-19\n                    ],\n                    [\n                        'a.u. of energy',\n                        'Eh',\n                        null,\n                        'energy',\n                        false,\n                        false,\n                        4.35974417757576e-18\n                    ],\n                    [\n                        'a.u. of length',\n                        'a?',\n                        null,\n                        'length',\n                        false,\n                        false,\n                        5.29177210818182e-11\n                    ],\n                    [\n                        'a.u. of mass',\n                        'm?',\n                        null,\n                        'mass',\n                        false,\n                        false,\n                        9.10938261616162e-31\n                    ],\n                    [\n                        'a.u. of time',\n                        '?/Eh',\n                        null,\n                        'time',\n                        false,\n                        false,\n                        2.41888432650516e-17\n                    ],\n                    [\n                        'admiralty knot',\n                        'admkn',\n                        null,\n                        'speed',\n                        false,\n                        true,\n                        0.514773333\n                    ],\n                    [\n                        'ampere',\n                        'A',\n                        null,\n                        'electric_current',\n                        true,\n                        false,\n                        1\n                    ],\n                    [\n                        'ampere per meter',\n                        'A/m',\n                        null,\n                        'magnetic_field_intensity',\n                        true,\n                        false,\n                        1\n                    ],\n                    [\n                        'ångström',\n                        'Å',\n                        ['ang'],\n                        'length',\n                        false,\n                        true,\n                        1e-10\n                    ],\n                    [\n                        'are',\n                        'ar',\n                        null,\n                        'area',\n                        false,\n                        true,\n                        100\n                    ],\n                    [\n                        'astronomical unit',\n                        'ua',\n                        null,\n                        'length',\n                        false,\n                        false,\n                        1.49597870691667e-11\n                    ],\n                    [\n                        'bar',\n                        'bar',\n                        null,\n                        'pressure',\n                        false,\n                        false,\n                        100000\n                    ],\n                    [\n                        'barn',\n                        'b',\n                        null,\n                        'area',\n                        false,\n                        false,\n                        1e-28\n                    ],\n                    [\n                        'becquerel',\n                        'Bq',\n                        null,\n                        'radioactivity',\n                        true,\n                        false,\n                        1\n                    ],\n                    [\n                        'bit',\n                        'bit',\n                        ['b'],\n                        'information',\n                        false,\n                        true,\n                        1\n                    ],\n                    [\n                        'btu',\n                        'BTU',\n                        ['btu'],\n                        'energy',\n                        false,\n                        true,\n                        1055.05585262\n                    ],\n                    [\n                        'byte',\n                        'byte',\n                        null,\n                        'information',\n                        false,\n                        true,\n                        8\n                    ],\n                    [\n                        'candela',\n                        'cd',\n                        null,\n                        'luminous_intensity',\n                        true,\n                        false,\n                        1\n                    ],\n                    [\n                        'candela per square metre',\n                        'cd/m?',\n                        null,\n                        'luminance',\n                        true,\n                        false,\n                        1\n                    ],\n                    [\n                        'coulomb',\n                        'C',\n                        null,\n                        'electric_charge',\n                        true,\n                        false,\n                        1\n                    ],\n                    [\n                        'cubic ångström',\n                        'ang3',\n                        ['ang^3'],\n                        'volume',\n                        false,\n                        true,\n                        1e-30\n                    ],\n                    [\n                        'cubic foot',\n                        'ft3',\n                        ['ft^3'],\n                        'volume',\n                        false,\n                        true,\n                        0.028316846592\n                    ],\n                    [\n                        'cubic inch',\n                        'in3',\n                        ['in^3'],\n                        'volume',\n                        false,\n                        true,\n                        0.000016387064\n                    ],\n                    [\n                        'cubic light-year',\n                        'ly3',\n                        ['ly^3'],\n                        'volume',\n                        false,\n                        true,\n                        8.46786664623715e-47\n                    ],\n                    [\n                        'cubic metre',\n                        'm?',\n                        null,\n                        'volume',\n                        true,\n                        true,\n                        1\n                    ],\n                    [\n                        'cubic mile',\n                        'mi3',\n                        ['mi^3'],\n                        'volume',\n                        false,\n                        true,\n                        4168181825.44058\n                    ],\n                    [\n                        'cubic nautical mile',\n                        'Nmi3',\n                        ['Nmi^3'],\n                        'volume',\n                        false,\n                        true,\n                        6352182208\n                    ],\n                    [\n                        'cubic Pica',\n                        'Pica3',\n                        [\n                            'Picapt3',\n                            'Pica^3',\n                            'Picapt^3'\n                        ],\n                        'volume',\n                        false,\n                        true,\n                        7.58660370370369e-8\n                    ],\n                    [\n                        'cubic yard',\n                        'yd3',\n                        ['yd^3'],\n                        'volume',\n                        false,\n                        true,\n                        0.764554857984\n                    ],\n                    [\n                        'cup',\n                        'cup',\n                        null,\n                        'volume',\n                        false,\n                        true,\n                        0.0002365882365\n                    ],\n                    [\n                        'dalton',\n                        'Da',\n                        ['u'],\n                        'mass',\n                        false,\n                        false,\n                        1.66053886282828e-27\n                    ],\n                    [\n                        'day',\n                        'd',\n                        ['day'],\n                        'time',\n                        false,\n                        true,\n                        86400\n                    ],\n                    [\n                        'degree',\n                        '\\xB0',\n                        null,\n                        'angle',\n                        false,\n                        false,\n                        0.0174532925199433\n                    ],\n                    [\n                        'degrees Rankine',\n                        'Rank',\n                        null,\n                        'temperature',\n                        false,\n                        true,\n                        0.555555555555556\n                    ],\n                    [\n                        'dyne',\n                        'dyn',\n                        ['dy'],\n                        'force',\n                        false,\n                        true,\n                        0.00001\n                    ],\n                    [\n                        'electronvolt',\n                        'eV',\n                        ['ev'],\n                        'energy',\n                        false,\n                        true,\n                        1.60217656514141\n                    ],\n                    [\n                        'ell',\n                        'ell',\n                        null,\n                        'length',\n                        false,\n                        true,\n                        1.143\n                    ],\n                    [\n                        'erg',\n                        'erg',\n                        ['e'],\n                        'energy',\n                        false,\n                        true,\n                        1e-7\n                    ],\n                    [\n                        'farad',\n                        'F',\n                        null,\n                        'electric_capacitance',\n                        true,\n                        false,\n                        1\n                    ],\n                    [\n                        'fluid ounce',\n                        'oz',\n                        null,\n                        'volume',\n                        false,\n                        true,\n                        0.0000295735295625\n                    ],\n                    [\n                        'foot',\n                        'ft',\n                        null,\n                        'length',\n                        false,\n                        true,\n                        0.3048\n                    ],\n                    [\n                        'foot-pound',\n                        'flb',\n                        null,\n                        'energy',\n                        false,\n                        true,\n                        1.3558179483314\n                    ],\n                    [\n                        'gal',\n                        'Gal',\n                        null,\n                        'acceleration',\n                        false,\n                        false,\n                        0.01\n                    ],\n                    [\n                        'gallon',\n                        'gal',\n                        null,\n                        'volume',\n                        false,\n                        true,\n                        0.003785411784\n                    ],\n                    [\n                        'gauss',\n                        'G',\n                        ['ga'],\n                        'magnetic_flux_density',\n                        false,\n                        true,\n                        1\n                    ],\n                    [\n                        'grain',\n                        'grain',\n                        null,\n                        'mass',\n                        false,\n                        true,\n                        0.0000647989\n                    ],\n                    [\n                        'gram',\n                        'g',\n                        null,\n                        'mass',\n                        false,\n                        true,\n                        0.001\n                    ],\n                    [\n                        'gray',\n                        'Gy',\n                        null,\n                        'absorbed_dose',\n                        true,\n                        false,\n                        1\n                    ],\n                    [\n                        'gross registered ton',\n                        'GRT',\n                        ['regton'],\n                        'volume',\n                        false,\n                        true,\n                        2.8316846592\n                    ],\n                    [\n                        'hectare',\n                        'ha',\n                        null,\n                        'area',\n                        false,\n                        true,\n                        10000\n                    ],\n                    [\n                        'henry',\n                        'H',\n                        null,\n                        'inductance',\n                        true,\n                        false,\n                        1\n                    ],\n                    [\n                        'hertz',\n                        'Hz',\n                        null,\n                        'frequency',\n                        true,\n                        false,\n                        1\n                    ],\n                    [\n                        'horsepower',\n                        'HP',\n                        ['h'],\n                        'power',\n                        false,\n                        true,\n                        745.69987158227\n                    ],\n                    [\n                        'horsepower-hour',\n                        'HPh',\n                        [\n                            'hh',\n                            'hph'\n                        ],\n                        'energy',\n                        false,\n                        true,\n                        2684519.538\n                    ],\n                    [\n                        'hour',\n                        'h',\n                        ['hr'],\n                        'time',\n                        false,\n                        true,\n                        3600\n                    ],\n                    [\n                        'imperial gallon (U.K.)',\n                        'uk_gal',\n                        null,\n                        'volume',\n                        false,\n                        true,\n                        0.00454609\n                    ],\n                    [\n                        'imperial hundredweight',\n                        'lcwt',\n                        [\n                            'uk_cwt',\n                            'hweight'\n                        ],\n                        'mass',\n                        false,\n                        true,\n                        50.802345\n                    ],\n                    [\n                        'imperial quart (U.K)',\n                        'uk_qt',\n                        null,\n                        'volume',\n                        false,\n                        true,\n                        0.0011365225\n                    ],\n                    [\n                        'imperial ton',\n                        'brton',\n                        [\n                            'uk_ton',\n                            'LTON'\n                        ],\n                        'mass',\n                        false,\n                        true,\n                        1016.046909\n                    ],\n                    [\n                        'inch',\n                        'in',\n                        null,\n                        'length',\n                        false,\n                        true,\n                        0.0254\n                    ],\n                    [\n                        'international acre',\n                        'uk_acre',\n                        null,\n                        'area',\n                        false,\n                        true,\n                        4046.8564224\n                    ],\n                    [\n                        'IT calorie',\n                        'cal',\n                        null,\n                        'energy',\n                        false,\n                        true,\n                        4.1868\n                    ],\n                    [\n                        'joule',\n                        'J',\n                        null,\n                        'energy',\n                        true,\n                        true,\n                        1\n                    ],\n                    [\n                        'katal',\n                        'kat',\n                        null,\n                        'catalytic_activity',\n                        true,\n                        false,\n                        1\n                    ],\n                    [\n                        'kelvin',\n                        'K',\n                        ['kel'],\n                        'temperature',\n                        true,\n                        true,\n                        1\n                    ],\n                    [\n                        'kilogram',\n                        'kg',\n                        null,\n                        'mass',\n                        true,\n                        true,\n                        1\n                    ],\n                    [\n                        'knot',\n                        'kn',\n                        null,\n                        'speed',\n                        false,\n                        true,\n                        0.514444444444444\n                    ],\n                    [\n                        'light-year',\n                        'ly',\n                        null,\n                        'length',\n                        false,\n                        true,\n                        9460730472580800\n                    ],\n                    [\n                        'litre',\n                        'L',\n                        [\n                            'l',\n                            'lt'\n                        ],\n                        'volume',\n                        false,\n                        true,\n                        0.001\n                    ],\n                    [\n                        'lumen',\n                        'lm',\n                        null,\n                        'luminous_flux',\n                        true,\n                        false,\n                        1\n                    ],\n                    [\n                        'lux',\n                        'lx',\n                        null,\n                        'illuminance',\n                        true,\n                        false,\n                        1\n                    ],\n                    [\n                        'maxwell',\n                        'Mx',\n                        null,\n                        'magnetic_flux',\n                        false,\n                        false,\n                        1e-18\n                    ],\n                    [\n                        'measurement ton',\n                        'MTON',\n                        null,\n                        'volume',\n                        false,\n                        true,\n                        1.13267386368\n                    ],\n                    [\n                        'meter per hour',\n                        'm/h',\n                        ['m/hr'],\n                        'speed',\n                        false,\n                        true,\n                        0.00027777777777778\n                    ],\n                    [\n                        'meter per second',\n                        'm/s',\n                        ['m/sec'],\n                        'speed',\n                        true,\n                        true,\n                        1\n                    ],\n                    [\n                        'meter per second squared',\n                        'm?s??',\n                        null,\n                        'acceleration',\n                        true,\n                        false,\n                        1\n                    ],\n                    [\n                        'parsec',\n                        'pc',\n                        ['parsec'],\n                        'length',\n                        false,\n                        true,\n                        30856775814671900\n                    ],\n                    [\n                        'meter squared per second',\n                        'm?/s',\n                        null,\n                        'kinematic_viscosity',\n                        true,\n                        false,\n                        1\n                    ],\n                    [\n                        'metre',\n                        'm',\n                        null,\n                        'length',\n                        true,\n                        true,\n                        1\n                    ],\n                    [\n                        'miles per hour',\n                        'mph',\n                        null,\n                        'speed',\n                        false,\n                        true,\n                        0.44704\n                    ],\n                    [\n                        'millimetre of mercury',\n                        'mmHg',\n                        null,\n                        'pressure',\n                        false,\n                        false,\n                        133.322\n                    ],\n                    [\n                        'minute',\n                        '?',\n                        null,\n                        'angle',\n                        false,\n                        false,\n                        0.000290888208665722\n                    ],\n                    [\n                        'minute',\n                        'min',\n                        ['mn'],\n                        'time',\n                        false,\n                        true,\n                        60\n                    ],\n                    [\n                        'modern teaspoon',\n                        'tspm',\n                        null,\n                        'volume',\n                        false,\n                        true,\n                        0.000005\n                    ],\n                    [\n                        'mole',\n                        'mol',\n                        null,\n                        'amount_of_substance',\n                        true,\n                        false,\n                        1\n                    ],\n                    [\n                        'morgen',\n                        'Morgen',\n                        null,\n                        'area',\n                        false,\n                        true,\n                        2500\n                    ],\n                    [\n                        'n.u. of action',\n                        '?',\n                        null,\n                        'action',\n                        false,\n                        false,\n                        1.05457168181818e-34\n                    ],\n                    [\n                        'n.u. of mass',\n                        'm?',\n                        null,\n                        'mass',\n                        false,\n                        false,\n                        9.10938261616162e-31\n                    ],\n                    [\n                        'n.u. of speed',\n                        'c?',\n                        null,\n                        'speed',\n                        false,\n                        false,\n                        299792458\n                    ],\n                    [\n                        'n.u. of time',\n                        '?/(me?c??)',\n                        null,\n                        'time',\n                        false,\n                        false,\n                        1.28808866778687e-21\n                    ],\n                    [\n                        'nautical mile',\n                        'M',\n                        ['Nmi'],\n                        'length',\n                        false,\n                        true,\n                        1852\n                    ],\n                    [\n                        'newton',\n                        'N',\n                        null,\n                        'force',\n                        true,\n                        true,\n                        1\n                    ],\n                    [\n                        'œrsted',\n                        'Oe ',\n                        null,\n                        'magnetic_field_intensity',\n                        false,\n                        false,\n                        79.5774715459477\n                    ],\n                    [\n                        'ohm',\n                        'Ω',\n                        null,\n                        'electric_resistance',\n                        true,\n                        false,\n                        1\n                    ],\n                    [\n                        'ounce mass',\n                        'ozm',\n                        null,\n                        'mass',\n                        false,\n                        true,\n                        0.028349523125\n                    ],\n                    [\n                        'pascal',\n                        'Pa',\n                        null,\n                        'pressure',\n                        true,\n                        false,\n                        1\n                    ],\n                    [\n                        'pascal second',\n                        'Pa?s',\n                        null,\n                        'dynamic_viscosity',\n                        true,\n                        false,\n                        1\n                    ],\n                    [\n                        'pferdestärke',\n                        'PS',\n                        null,\n                        'power',\n                        false,\n                        true,\n                        735.49875\n                    ],\n                    [\n                        'phot',\n                        'ph',\n                        null,\n                        'illuminance',\n                        false,\n                        false,\n                        0.0001\n                    ],\n                    [\n                        'pica (1/6 inch)',\n                        'pica',\n                        null,\n                        'length',\n                        false,\n                        true,\n                        0.00035277777777778\n                    ],\n                    [\n                        'pica (1/72 inch)',\n                        'Pica',\n                        ['Picapt'],\n                        'length',\n                        false,\n                        true,\n                        0.00423333333333333\n                    ],\n                    [\n                        'poise',\n                        'P',\n                        null,\n                        'dynamic_viscosity',\n                        false,\n                        false,\n                        0.1\n                    ],\n                    [\n                        'pond',\n                        'pond',\n                        null,\n                        'force',\n                        false,\n                        true,\n                        0.00980665\n                    ],\n                    [\n                        'pound force',\n                        'lbf',\n                        null,\n                        'force',\n                        false,\n                        true,\n                        4.4482216152605\n                    ],\n                    [\n                        'pound mass',\n                        'lbm',\n                        null,\n                        'mass',\n                        false,\n                        true,\n                        0.45359237\n                    ],\n                    [\n                        'quart',\n                        'qt',\n                        null,\n                        'volume',\n                        false,\n                        true,\n                        0.000946352946\n                    ],\n                    [\n                        'radian',\n                        'rad',\n                        null,\n                        'angle',\n                        true,\n                        false,\n                        1\n                    ],\n                    [\n                        'second',\n                        '?',\n                        null,\n                        'angle',\n                        false,\n                        false,\n                        0.00000484813681109536\n                    ],\n                    [\n                        'second',\n                        's',\n                        ['sec'],\n                        'time',\n                        true,\n                        true,\n                        1\n                    ],\n                    [\n                        'short hundredweight',\n                        'cwt',\n                        ['shweight'],\n                        'mass',\n                        false,\n                        true,\n                        45.359237\n                    ],\n                    [\n                        'siemens',\n                        'S',\n                        null,\n                        'electrical_conductance',\n                        true,\n                        false,\n                        1\n                    ],\n                    [\n                        'sievert',\n                        'Sv',\n                        null,\n                        'equivalent_dose',\n                        true,\n                        false,\n                        1\n                    ],\n                    [\n                        'slug',\n                        'sg',\n                        null,\n                        'mass',\n                        false,\n                        true,\n                        14.59390294\n                    ],\n                    [\n                        'square ångström',\n                        'ang2',\n                        ['ang^2'],\n                        'area',\n                        false,\n                        true,\n                        1e-20\n                    ],\n                    [\n                        'square foot',\n                        'ft2',\n                        ['ft^2'],\n                        'area',\n                        false,\n                        true,\n                        0.09290304\n                    ],\n                    [\n                        'square inch',\n                        'in2',\n                        ['in^2'],\n                        'area',\n                        false,\n                        true,\n                        0.00064516\n                    ],\n                    [\n                        'square light-year',\n                        'ly2',\n                        ['ly^2'],\n                        'area',\n                        false,\n                        true,\n                        8.95054210748189e+31\n                    ],\n                    [\n                        'square meter',\n                        'm?',\n                        null,\n                        'area',\n                        true,\n                        true,\n                        1\n                    ],\n                    [\n                        'square mile',\n                        'mi2',\n                        ['mi^2'],\n                        'area',\n                        false,\n                        true,\n                        2589988.110336\n                    ],\n                    [\n                        'square nautical mile',\n                        'Nmi2',\n                        ['Nmi^2'],\n                        'area',\n                        false,\n                        true,\n                        3429904\n                    ],\n                    [\n                        'square Pica',\n                        'Pica2',\n                        [\n                            'Picapt2',\n                            'Pica^2',\n                            'Picapt^2'\n                        ],\n                        'area',\n                        false,\n                        true,\n                        0.00001792111111111\n                    ],\n                    [\n                        'square yard',\n                        'yd2',\n                        ['yd^2'],\n                        'area',\n                        false,\n                        true,\n                        0.83612736\n                    ],\n                    [\n                        'statute mile',\n                        'mi',\n                        null,\n                        'length',\n                        false,\n                        true,\n                        1609.344\n                    ],\n                    [\n                        'steradian',\n                        'sr',\n                        null,\n                        'solid_angle',\n                        true,\n                        false,\n                        1\n                    ],\n                    [\n                        'stilb',\n                        'sb',\n                        null,\n                        'luminance',\n                        false,\n                        false,\n                        0.0001\n                    ],\n                    [\n                        'stokes',\n                        'St',\n                        null,\n                        'kinematic_viscosity',\n                        false,\n                        false,\n                        0.0001\n                    ],\n                    [\n                        'stone',\n                        'stone',\n                        null,\n                        'mass',\n                        false,\n                        true,\n                        6.35029318\n                    ],\n                    [\n                        'tablespoon',\n                        'tbs',\n                        null,\n                        'volume',\n                        false,\n                        true,\n                        0.0000147868\n                    ],\n                    [\n                        'teaspoon',\n                        'tsp',\n                        null,\n                        'volume',\n                        false,\n                        true,\n                        0.00000492892\n                    ],\n                    [\n                        'tesla',\n                        'T',\n                        null,\n                        'magnetic_flux_density',\n                        true,\n                        true,\n                        1\n                    ],\n                    [\n                        'thermodynamic calorie',\n                        'c',\n                        null,\n                        'energy',\n                        false,\n                        true,\n                        4.184\n                    ],\n                    [\n                        'ton',\n                        'ton',\n                        null,\n                        'mass',\n                        false,\n                        true,\n                        907.18474\n                    ],\n                    [\n                        'tonne',\n                        't',\n                        null,\n                        'mass',\n                        false,\n                        false,\n                        1000\n                    ],\n                    [\n                        'U.K. pint',\n                        'uk_pt',\n                        null,\n                        'volume',\n                        false,\n                        true,\n                        0.00056826125\n                    ],\n                    [\n                        'U.S. bushel',\n                        'bushel',\n                        null,\n                        'volume',\n                        false,\n                        true,\n                        0.03523907\n                    ],\n                    [\n                        'U.S. oil barrel',\n                        'barrel',\n                        null,\n                        'volume',\n                        false,\n                        true,\n                        0.158987295\n                    ],\n                    [\n                        'U.S. pint',\n                        'pt',\n                        ['us_pt'],\n                        'volume',\n                        false,\n                        true,\n                        0.000473176473\n                    ],\n                    [\n                        'U.S. survey mile',\n                        'survey_mi',\n                        null,\n                        'length',\n                        false,\n                        true,\n                        1609.347219\n                    ],\n                    [\n                        'U.S. survey/statute acre',\n                        'us_acre',\n                        null,\n                        'area',\n                        false,\n                        true,\n                        4046.87261\n                    ],\n                    [\n                        'volt',\n                        'V',\n                        null,\n                        'voltage',\n                        true,\n                        false,\n                        1\n                    ],\n                    [\n                        'watt',\n                        'W',\n                        null,\n                        'power',\n                        true,\n                        true,\n                        1\n                    ],\n                    [\n                        'watt-hour',\n                        'Wh',\n                        ['wh'],\n                        'energy',\n                        false,\n                        true,\n                        3600\n                    ],\n                    [\n                        'weber',\n                        'Wb',\n                        null,\n                        'magnetic_flux',\n                        true,\n                        false,\n                        1\n                    ],\n                    [\n                        'yard',\n                        'yd',\n                        null,\n                        'length',\n                        false,\n                        true,\n                        0.9144\n                    ],\n                    [\n                        'year',\n                        'yr',\n                        null,\n                        'time',\n                        false,\n                        true,\n                        31557600\n                    ]\n                ];\n                var binary_prefixes = {\n                    Yi: [\n                        'yobi',\n                        80,\n                        1.2089258196146292e+24,\n                        'Yi',\n                        'yotta'\n                    ],\n                    Zi: [\n                        'zebi',\n                        70,\n                        1.1805916207174113e+21,\n                        'Zi',\n                        'zetta'\n                    ],\n                    Ei: [\n                        'exbi',\n                        60,\n                        1152921504606847000,\n                        'Ei',\n                        'exa'\n                    ],\n                    Pi: [\n                        'pebi',\n                        50,\n                        1125899906842624,\n                        'Pi',\n                        'peta'\n                    ],\n                    Ti: [\n                        'tebi',\n                        40,\n                        1099511627776,\n                        'Ti',\n                        'tera'\n                    ],\n                    Gi: [\n                        'gibi',\n                        30,\n                        1073741824,\n                        'Gi',\n                        'giga'\n                    ],\n                    Mi: [\n                        'mebi',\n                        20,\n                        1048576,\n                        'Mi',\n                        'mega'\n                    ],\n                    ki: [\n                        'kibi',\n                        10,\n                        1024,\n                        'ki',\n                        'kilo'\n                    ]\n                };\n                var unit_prefixes = {\n                    Y: [\n                        'yotta',\n                        1e+24,\n                        'Y'\n                    ],\n                    Z: [\n                        'zetta',\n                        1e+21,\n                        'Z'\n                    ],\n                    E: [\n                        'exa',\n                        1000000000000000000,\n                        'E'\n                    ],\n                    P: [\n                        'peta',\n                        1000000000000000,\n                        'P'\n                    ],\n                    T: [\n                        'tera',\n                        1000000000000,\n                        'T'\n                    ],\n                    G: [\n                        'giga',\n                        1000000000,\n                        'G'\n                    ],\n                    M: [\n                        'mega',\n                        1000000,\n                        'M'\n                    ],\n                    k: [\n                        'kilo',\n                        1000,\n                        'k'\n                    ],\n                    h: [\n                        'hecto',\n                        100,\n                        'h'\n                    ],\n                    e: [\n                        'dekao',\n                        10,\n                        'e'\n                    ],\n                    d: [\n                        'deci',\n                        0.1,\n                        'd'\n                    ],\n                    c: [\n                        'centi',\n                        0.01,\n                        'c'\n                    ],\n                    m: [\n                        'milli',\n                        0.001,\n                        'm'\n                    ],\n                    u: [\n                        'micro',\n                        0.000001,\n                        'u'\n                    ],\n                    n: [\n                        'nano',\n                        1e-9,\n                        'n'\n                    ],\n                    p: [\n                        'pico',\n                        1e-12,\n                        'p'\n                    ],\n                    f: [\n                        'femto',\n                        1e-15,\n                        'f'\n                    ],\n                    a: [\n                        'atto',\n                        1e-18,\n                        'a'\n                    ],\n                    z: [\n                        'zepto',\n                        1e-21,\n                        'z'\n                    ],\n                    y: [\n                        'yocto',\n                        1e-24,\n                        'y'\n                    ]\n                };\n                var from = null;\n                var to = null;\n                var base_from_unit = from_unit;\n                var base_to_unit = to_unit;\n                var from_multiplier = 1;\n                var to_multiplier = 1;\n                var alt;\n                for (var i = 0; i < units.length; i++) {\n                    alt = units[i][2] === null ? [] : units[i][2];\n                    if (units[i][1] === base_from_unit || alt.indexOf(base_from_unit) >= 0) {\n                        from = units[i];\n                    }\n                    if (units[i][1] === base_to_unit || alt.indexOf(base_to_unit) >= 0) {\n                        to = units[i];\n                    }\n                }\n                if (from === null) {\n                    var from_binary_prefix = binary_prefixes[from_unit.substring(0, 2)];\n                    var from_unit_prefix = unit_prefixes[from_unit.substring(0, 1)];\n                    if (from_unit.substring(0, 2) === 'da') {\n                        from_unit_prefix = [\n                            'dekao',\n                            10,\n                            'da'\n                        ];\n                    }\n                    if (from_binary_prefix) {\n                        from_multiplier = from_binary_prefix[2];\n                        base_from_unit = from_unit.substring(2);\n                    } else if (from_unit_prefix) {\n                        from_multiplier = from_unit_prefix[1];\n                        base_from_unit = from_unit.substring(from_unit_prefix[2].length);\n                    }\n                    for (var j = 0; j < units.length; j++) {\n                        alt = units[j][2] === null ? [] : units[j][2];\n                        if (units[j][1] === base_from_unit || alt.indexOf(base_from_unit) >= 0) {\n                            from = units[j];\n                        }\n                    }\n                }\n                if (to === null) {\n                    var to_binary_prefix = binary_prefixes[to_unit.substring(0, 2)];\n                    var to_unit_prefix = unit_prefixes[to_unit.substring(0, 1)];\n                    if (to_unit.substring(0, 2) === 'da') {\n                        to_unit_prefix = [\n                            'dekao',\n                            10,\n                            'da'\n                        ];\n                    }\n                    if (to_binary_prefix) {\n                        to_multiplier = to_binary_prefix[2];\n                        base_to_unit = to_unit.substring(2);\n                    } else if (to_unit_prefix) {\n                        to_multiplier = to_unit_prefix[1];\n                        base_to_unit = to_unit.substring(to_unit_prefix[2].length);\n                    }\n                    for (var k = 0; k < units.length; k++) {\n                        alt = units[k][2] === null ? [] : units[k][2];\n                        if (units[k][1] === base_to_unit || alt.indexOf(base_to_unit) >= 0) {\n                            to = units[k];\n                        }\n                    }\n                }\n                if (from === null || to === null) {\n                    return formula.error.na;\n                }\n                if (from[3] !== to[3]) {\n                    return formula.error.na;\n                }\n                return number * from[6] * from_multiplier / (to[6] * to_multiplier);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'SUMX2MY2': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //第一个数组或数值区域\n                var data_array_x = arguments[0];\n                var array_x = [];\n                if (getObjType(data_array_x) == 'array') {\n                    if (getObjType(data_array_x[0]) == 'array' && !func_methods.isDyadicArr(data_array_x)) {\n                        return formula.error.v;\n                    }\n                    array_x = array_x.concat(func_methods.getDataArr(data_array_x, false));\n                } else if (getObjType(data_array_x) == 'object' && data_array_x.startCell != null) {\n                    array_x = array_x.concat(func_methods.getCellDataArr(data_array_x, 'text', false));\n                } else {\n                    array_x.push(data_array_x);\n                }    //第二个数组或数值区域\n                //第二个数组或数值区域\n                var data_array_y = arguments[1];\n                var array_y = [];\n                if (getObjType(data_array_y) == 'array') {\n                    if (getObjType(data_array_y[0]) == 'array' && !func_methods.isDyadicArr(data_array_y)) {\n                        return formula.error.v;\n                    }\n                    array_y = array_y.concat(func_methods.getDataArr(data_array_y, false));\n                } else if (getObjType(data_array_y) == 'object' && data_array_y.startCell != null) {\n                    array_y = array_y.concat(func_methods.getCellDataArr(data_array_y, 'text', false));\n                } else {\n                    array_y.push(data_array_y);\n                }\n                if (array_x.length != array_y.length) {\n                    return formula.error.na;\n                }    //array_x 和 array_y 只取数值\n                //array_x 和 array_y 只取数值\n                var data_x = [], data_y = [];\n                for (var i = 0; i < array_x.length; i++) {\n                    var num_x = array_x[i];\n                    var num_y = array_y[i];\n                    if (isRealNum(num_x) && isRealNum(num_y)) {\n                        data_x.push(parseFloat(num_x));\n                        data_y.push(parseFloat(num_y));\n                    }\n                }    //计算\n                //计算\n                var sum = 0;\n                for (var i = 0; i < data_x.length; i++) {\n                    sum += Math.pow(data_x[i], 2) - Math.pow(data_y[i], 2);\n                }\n                return sum;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'SUMX2PY2': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //第一个数组或数值区域\n                var data_array_x = arguments[0];\n                var array_x = [];\n                if (getObjType(data_array_x) == 'array') {\n                    if (getObjType(data_array_x[0]) == 'array' && !func_methods.isDyadicArr(data_array_x)) {\n                        return formula.error.v;\n                    }\n                    array_x = array_x.concat(func_methods.getDataArr(data_array_x, false));\n                } else if (getObjType(data_array_x) == 'object' && data_array_x.startCell != null) {\n                    array_x = array_x.concat(func_methods.getCellDataArr(data_array_x, 'text', false));\n                } else {\n                    array_x.push(data_array_x);\n                }    //第二个数组或数值区域\n                //第二个数组或数值区域\n                var data_array_y = arguments[1];\n                var array_y = [];\n                if (getObjType(data_array_y) == 'array') {\n                    if (getObjType(data_array_y[0]) == 'array' && !func_methods.isDyadicArr(data_array_y)) {\n                        return formula.error.v;\n                    }\n                    array_y = array_y.concat(func_methods.getDataArr(data_array_y, false));\n                } else if (getObjType(data_array_y) == 'object' && data_array_y.startCell != null) {\n                    array_y = array_y.concat(func_methods.getCellDataArr(data_array_y, 'text', false));\n                } else {\n                    array_y.push(data_array_y);\n                }\n                if (array_x.length != array_y.length) {\n                    return formula.error.na;\n                }    //array_x 和 array_y 只取数值\n                //array_x 和 array_y 只取数值\n                var data_x = [], data_y = [];\n                for (var i = 0; i < array_x.length; i++) {\n                    var num_x = array_x[i];\n                    var num_y = array_y[i];\n                    if (isRealNum(num_x) && isRealNum(num_y)) {\n                        data_x.push(parseFloat(num_x));\n                        data_y.push(parseFloat(num_y));\n                    }\n                }    //计算\n                //计算\n                var sum = 0;\n                for (var i = 0; i < data_x.length; i++) {\n                    sum += Math.pow(data_x[i], 2) + Math.pow(data_y[i], 2);\n                }\n                return sum;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'SUMXMY2': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //第一个数组或数值区域\n                var data_array_x = arguments[0];\n                var array_x = [];\n                if (getObjType(data_array_x) == 'array') {\n                    if (getObjType(data_array_x[0]) == 'array' && !func_methods.isDyadicArr(data_array_x)) {\n                        return formula.error.v;\n                    }\n                    array_x = array_x.concat(func_methods.getDataArr(data_array_x, false));\n                } else if (getObjType(data_array_x) == 'object' && data_array_x.startCell != null) {\n                    array_x = array_x.concat(func_methods.getCellDataArr(data_array_x, 'text', false));\n                } else {\n                    array_x.push(data_array_x);\n                }    //第二个数组或数值区域\n                //第二个数组或数值区域\n                var data_array_y = arguments[1];\n                var array_y = [];\n                if (getObjType(data_array_y) == 'array') {\n                    if (getObjType(data_array_y[0]) == 'array' && !func_methods.isDyadicArr(data_array_y)) {\n                        return formula.error.v;\n                    }\n                    array_y = array_y.concat(func_methods.getDataArr(data_array_y, false));\n                } else if (getObjType(data_array_y) == 'object' && data_array_y.startCell != null) {\n                    array_y = array_y.concat(func_methods.getCellDataArr(data_array_y, 'text', false));\n                } else {\n                    array_y.push(data_array_y);\n                }\n                if (array_x.length != array_y.length) {\n                    return formula.error.na;\n                }    //array_x 和 array_y 只取数值\n                //array_x 和 array_y 只取数值\n                var data_x = [], data_y = [];\n                for (var i = 0; i < array_x.length; i++) {\n                    var num_x = array_x[i];\n                    var num_y = array_y[i];\n                    if (isRealNum(num_x) && isRealNum(num_y)) {\n                        data_x.push(parseFloat(num_x));\n                        data_y.push(parseFloat(num_y));\n                    }\n                }    //计算\n                //计算\n                var sum = 0;\n                for (var i = 0; i < data_x.length; i++) {\n                    sum += Math.pow(data_x[i] - data_y[i], 2);\n                }\n                return sum;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'TRANSPOSE': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //从其返回唯一值的数组或区域\n                var data_array = arguments[0];\n                var array = [];\n                if (getObjType(data_array) == 'array') {\n                    if (getObjType(data_array[0]) == 'array' && !func_methods.isDyadicArr(data_array)) {\n                        return formula.error.v;\n                    }\n                    array = func_methods.getDataDyadicArr(data_array);\n                } else if (getObjType(data_array) == 'object' && data_array.startCell != null) {\n                    array = func_methods.getCellDataDyadicArr(data_array, 'number');\n                }\n                array = array[0].map(function (col, a) {\n                    return array.map(function (row) {\n                        return row[a];\n                    });\n                });\n                return array;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'TREND': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //已知的 y 值集合\n                var data_known_y = arguments[0];\n                var known_y = [];\n                if (getObjType(data_known_y) == 'array') {\n                    if (getObjType(data_known_y[0]) == 'array' && !func_methods.isDyadicArr(data_known_y)) {\n                        return formula.error.v;\n                    }\n                    known_y = func_methods.getDataDyadicArr(data_known_y);\n                } else if (getObjType(data_known_y) == 'object' && data_known_y.startCell != null) {\n                    known_y = func_methods.getCellDataDyadicArr(data_known_y, 'text');\n                } else {\n                    if (!isRealNum(data_known_y)) {\n                        return formula.error.v;\n                    }\n                    var rowArr = [];\n                    rowArr.push(parseFloat(data_known_y));\n                    known_y.push(rowArr);\n                }\n                var known_y_rowlen = known_y.length;\n                var known_y_collen = known_y[0].length;\n                for (var i = 0; i < known_y_rowlen; i++) {\n                    for (var j = 0; j < known_y_collen; j++) {\n                        if (!isRealNum(known_y[i][j])) {\n                            return formula.error.v;\n                        }\n                        known_y[i][j] = parseFloat(known_y[i][j]);\n                    }\n                }    //可选 x 值集合\n                //可选 x 值集合\n                var known_x = [];\n                for (var i = 1; i <= known_y_rowlen; i++) {\n                    for (var j = 1; j <= known_y_collen; j++) {\n                        var number = (i - 1) * known_y_collen + j;\n                        known_x.push(number);\n                    }\n                }\n                if (arguments.length >= 2) {\n                    var data_known_x = arguments[1];\n                    known_x = [];\n                    if (getObjType(data_known_x) == 'array') {\n                        if (getObjType(data_known_x[0]) == 'array' && !func_methods.isDyadicArr(data_known_x)) {\n                            return formula.error.v;\n                        }\n                        known_x = func_methods.getDataDyadicArr(data_known_x);\n                    } else if (getObjType(data_known_x) == 'object' && data_known_x.startCell != null) {\n                        known_x = func_methods.getCellDataDyadicArr(data_known_x, 'text');\n                    } else {\n                        if (!isRealNum(data_known_x)) {\n                            return formula.error.v;\n                        }\n                        var rowArr = [];\n                        rowArr.push(parseFloat(data_known_x));\n                        known_x.push(rowArr);\n                    }\n                    for (var i = 0; i < known_x.length; i++) {\n                        for (var j = 0; j < known_x[0].length; j++) {\n                            if (!isRealNum(known_x[i][j])) {\n                                return formula.error.v;\n                            }\n                            known_x[i][j] = parseFloat(known_x[i][j]);\n                        }\n                    }\n                }\n                var known_x_rowlen = known_x.length;\n                var known_x_collen = known_x[0].length;    //新 x 值\n                //新 x 值\n                var new_x = known_x;\n                if (arguments.length >= 3) {\n                    var data_new_x = arguments[2];\n                    new_x = [];\n                    if (getObjType(data_new_x) == 'array') {\n                        if (getObjType(data_new_x[0]) == 'array' && !func_methods.isDyadicArr(data_new_x)) {\n                            return formula.error.v;\n                        }\n                        new_x = func_methods.getDataDyadicArr(data_new_x);\n                    } else if (getObjType(data_new_x) == 'object' && data_new_x.startCell != null) {\n                        new_x = func_methods.getCellDataDyadicArr(data_new_x, 'text');\n                    } else {\n                        if (!isRealNum(data_new_x)) {\n                            return formula.error.v;\n                        }\n                        var rowArr = [];\n                        rowArr.push(parseFloat(data_new_x));\n                        new_x.push(rowArr);\n                    }\n                    for (var i = 0; i < new_x.length; i++) {\n                        for (var j = 0; j < new_x[0].length; j++) {\n                            if (!isRealNum(new_x[i][j])) {\n                                return formula.error.v;\n                            }\n                            new_x[i][j] = parseFloat(new_x[i][j]);\n                        }\n                    }\n                }    //逻辑值\n                //逻辑值\n                var const_b = true;\n                if (arguments.length == 4) {\n                    const_b = func_methods.getCellBoolen(arguments[3]);\n                    if (valueIsError(const_b)) {\n                        return const_b;\n                    }\n                }\n                if (known_y_rowlen != known_x_rowlen || known_y_collen != known_x_collen) {\n                    return formula.error.r;\n                }    //计算\n                //计算\n                function leastSquare(arr_x, arr_y) {\n                    var xSum = 0, ySum = 0, xySum = 0, x2Sum = 0;\n                    for (var i = 0; i < arr_x.length; i++) {\n                        for (var j = 0; j < arr_x[i].length; j++) {\n                            xSum += arr_x[i][j];\n                            ySum += arr_y[i][j];\n                            xySum += arr_x[i][j] * arr_y[i][j];\n                            x2Sum += arr_x[i][j] * arr_x[i][j];\n                        }\n                    }\n                    var n = arr_x.length * arr_x[0].length;\n                    var xMean = xSum / n;\n                    var yMean = ySum / n;\n                    var xyMean = xySum / n;\n                    var x2Mean = x2Sum / n;\n                    var m = (xyMean - xMean * yMean) / (x2Mean - xMean * xMean);\n                    var b = yMean - m * xMean;\n                    return [\n                        m,\n                        b\n                    ];\n                }\n                var ls = leastSquare(known_x, known_y);\n                var m = ls[0];\n                if (const_b) {\n                    var b = ls[1];\n                } else {\n                    var b = 0;\n                }\n                var result = [];\n                for (var i = 0; i < new_x.length; i++) {\n                    for (var j = 0; j < new_x[i].length; j++) {\n                        var x = new_x[i][j];\n                        var y = m * x + b;\n                        result.push(Math.round(y * 1000000000) / 1000000000);\n                    }\n                }\n                return result;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'FREQUENCY': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //频率数组\n                var data_data_array = arguments[0];\n                var data_array = [];\n                if (getObjType(data_data_array) == 'array') {\n                    if (getObjType(data_data_array[0]) == 'array' && !func_methods.isDyadicArr(data_data_array)) {\n                        return formula.error.v;\n                    }\n                    data_array = data_array.concat(func_methods.getDataArr(data_data_array, true));\n                } else if (getObjType(data_data_array) == 'object' && data_data_array.startCell != null) {\n                    data_array = data_array.concat(func_methods.getCellDataArr(data_data_array, 'number', true));\n                } else {\n                    if (!isRealNum(data_data_array)) {\n                        return formula.error.v;\n                    }\n                    data_array.push(data_data_array);\n                }\n                var data_array_n = [];\n                for (var i = 0; i < data_array.length; i++) {\n                    if (isRealNum(data_array[i])) {\n                        data_array_n.push(parseFloat(data_array[i]));\n                    }\n                }    //间隔数组\n                //间隔数组\n                var data_bins_array = arguments[1];\n                var bins_array = [];\n                if (getObjType(data_bins_array) == 'array') {\n                    if (getObjType(data_bins_array[0]) == 'array' && !func_methods.isDyadicArr(data_bins_array)) {\n                        return formula.error.v;\n                    }\n                    bins_array = bins_array.concat(func_methods.getDataArr(data_bins_array, true));\n                } else if (getObjType(data_bins_array) == 'object' && data_bins_array.startCell != null) {\n                    bins_array = bins_array.concat(func_methods.getCellDataArr(data_bins_array, 'number', true));\n                } else {\n                    if (!isRealNum(data_bins_array)) {\n                        return formula.error.v;\n                    }\n                    bins_array.push(data_bins_array);\n                }\n                var bins_array_n = [];\n                for (var i = 0; i < bins_array.length; i++) {\n                    if (isRealNum(bins_array[i])) {\n                        bins_array_n.push(parseFloat(bins_array[i]));\n                    }\n                }    //计算\n                //计算\n                if (data_array_n.length == 0 && bins_array_n.length == 0) {\n                    return [\n                        [0],\n                        [0]\n                    ];\n                } else if (data_array_n.length == 0) {\n                    var result = [[0]];\n                    for (var i = 0; i < bins_array_n.length; i++) {\n                        result.push([0]);\n                    }\n                    return result;\n                } else if (bins_array_n.length == 0) {\n                    return [\n                        [0],\n                        [data_array_n.length]\n                    ];\n                } else {\n                    bins_array_n.sort(function (a, b) {\n                        return a - b;\n                    });\n                    var result = [];\n                    for (var i = 0; i < bins_array_n.length; i++) {\n                        if (i == 0) {\n                            var count = 0;\n                            for (var j = 0; j < data_array_n.length; j++) {\n                                if (data_array_n[j] <= bins_array_n[0]) {\n                                    count++;\n                                }\n                            }\n                            result.push([count]);\n                        } else if (i == bins_array_n.length - 1) {\n                            var count1 = 0, count2 = 0;\n                            for (var j = 0; j < data_array_n.length; j++) {\n                                if (data_array_n[j] <= bins_array_n[i] && data_array_n[j] > bins_array_n[i - 1]) {\n                                    count1++;\n                                }\n                                if (data_array_n[j] > bins_array_n[i]) {\n                                    count2++;\n                                }\n                            }\n                            result.push([count1]);\n                            result.push([count2]);\n                        } else {\n                            var count = 0;\n                            for (var j = 0; j < data_array_n.length; j++) {\n                                if (data_array_n[j] <= bins_array_n[i] && data_array_n[j] > bins_array_n[i - 1]) {\n                                    count++;\n                                }\n                            }\n                            result.push([count]);\n                        }\n                    }\n                    return result;\n                }\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'GROWTH': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //已知的 y 值集合\n                var data_known_y = arguments[0];\n                var known_y = [];\n                if (getObjType(data_known_y) == 'array') {\n                    if (getObjType(data_known_y[0]) == 'array' && !func_methods.isDyadicArr(data_known_y)) {\n                        return formula.error.v;\n                    }\n                    known_y = func_methods.getDataDyadicArr(data_known_y);\n                } else if (getObjType(data_known_y) == 'object' && data_known_y.startCell != null) {\n                    known_y = func_methods.getCellDataDyadicArr(data_known_y, 'text');\n                } else {\n                    if (!isRealNum(data_known_y)) {\n                        return formula.error.v;\n                    }\n                    var rowArr = [];\n                    rowArr.push(parseFloat(data_known_y));\n                    known_y.push(rowArr);\n                }\n                var known_y_rowlen = known_y.length;\n                var known_y_collen = known_y[0].length;\n                for (var i = 0; i < known_y_rowlen; i++) {\n                    for (var j = 0; j < known_y_collen; j++) {\n                        if (!isRealNum(known_y[i][j])) {\n                            return formula.error.v;\n                        }\n                        known_y[i][j] = parseFloat(known_y[i][j]);\n                    }\n                }    //可选 x 值集合\n                //可选 x 值集合\n                var known_x = [];\n                for (var i = 1; i <= known_y_rowlen; i++) {\n                    for (var j = 1; j <= known_y_collen; j++) {\n                        var number = (i - 1) * known_y_collen + j;\n                        known_x.push(number);\n                    }\n                }\n                if (arguments.length >= 2) {\n                    var data_known_x = arguments[1];\n                    known_x = [];\n                    if (getObjType(data_known_x) == 'array') {\n                        if (getObjType(data_known_x[0]) == 'array' && !func_methods.isDyadicArr(data_known_x)) {\n                            return formula.error.v;\n                        }\n                        known_x = func_methods.getDataDyadicArr(data_known_x);\n                    } else if (getObjType(data_known_x) == 'object' && data_known_x.startCell != null) {\n                        known_x = func_methods.getCellDataDyadicArr(data_known_x, 'text');\n                    } else {\n                        if (!isRealNum(data_known_x)) {\n                            return formula.error.v;\n                        }\n                        var rowArr = [];\n                        rowArr.push(parseFloat(data_known_x));\n                        known_x.push(rowArr);\n                    }\n                    for (var i = 0; i < known_x.length; i++) {\n                        for (var j = 0; j < known_x[0].length; j++) {\n                            if (!isRealNum(known_x[i][j])) {\n                                return formula.error.v;\n                            }\n                            known_x[i][j] = parseFloat(known_x[i][j]);\n                        }\n                    }\n                }\n                var known_x_rowlen = known_x.length;\n                var known_x_collen = known_x[0].length;    //新 x 值\n                //新 x 值\n                var new_x = known_x;\n                if (arguments.length >= 3) {\n                    var data_new_x = arguments[2];\n                    new_x = [];\n                    if (getObjType(data_new_x) == 'array') {\n                        if (getObjType(data_new_x[0]) == 'array' && !func_methods.isDyadicArr(data_new_x)) {\n                            return formula.error.v;\n                        }\n                        new_x = func_methods.getDataDyadicArr(data_new_x);\n                    } else if (getObjType(data_new_x) == 'object' && data_new_x.startCell != null) {\n                        new_x = func_methods.getCellDataDyadicArr(data_new_x, 'text');\n                    } else {\n                        if (!isRealNum(data_new_x)) {\n                            return formula.error.v;\n                        }\n                        var rowArr = [];\n                        rowArr.push(parseFloat(data_new_x));\n                        new_x.push(rowArr);\n                    }\n                    for (var i = 0; i < new_x.length; i++) {\n                        for (var j = 0; j < new_x[0].length; j++) {\n                            if (!isRealNum(new_x[i][j])) {\n                                return formula.error.v;\n                            }\n                            new_x[i][j] = parseFloat(new_x[i][j]);\n                        }\n                    }\n                }    //逻辑值\n                //逻辑值\n                var const_b = true;\n                if (arguments.length == 4) {\n                    const_b = func_methods.getCellBoolen(arguments[3]);\n                    if (valueIsError(const_b)) {\n                        return const_b;\n                    }\n                }\n                if (known_y_rowlen != known_x_rowlen || known_y_collen != known_x_collen) {\n                    return formula.error.r;\n                }    //计算\n                //计算\n                function leastSquare(arr_x, arr_y) {\n                    var xSum = 0, ySum = 0, xySum = 0, x2Sum = 0;\n                    for (var i = 0; i < arr_x.length; i++) {\n                        for (var j = 0; j < arr_x[i].length; j++) {\n                            xSum += arr_x[i][j];    // ySum += arr_y[i][j];\n                            // ySum += arr_y[i][j];\n                            ySum += Math.log(arr_y[i][j]);    // xySum += arr_x[i][j] * arr_y[i][j];\n                            // xySum += arr_x[i][j] * arr_y[i][j];\n                            xySum += arr_x[i][j] * Math.log(arr_y[i][j]);\n                            x2Sum += arr_x[i][j] * arr_x[i][j];\n                        }\n                    }\n                    var n = arr_x.length * arr_x[0].length;\n                    var xMean = xSum / n;\n                    var yMean = ySum / n;\n                    var xyMean = xySum / n;\n                    var x2Mean = x2Sum / n;\n                    var m = (xyMean - xMean * yMean) / (x2Mean - xMean * xMean);\n                    var b = yMean - m * xMean;\n                    return [\n                        Math.exp(m),\n                        Math.exp(b)\n                    ];\n                }\n                var ls = leastSquare(known_x, known_y);\n                var m = ls[0];\n                if (const_b) {\n                    var b = ls[1];\n                } else {\n                    var b = 1;\n                }\n                var result = [];\n                for (var i = 0; i < new_x.length; i++) {\n                    for (var j = 0; j < new_x[i].length; j++) {\n                        var x = new_x[i][j];\n                        var y = b * Math.pow(m, x);    // var y = Math.exp(b + m * x);\n                        // var y = Math.exp(b + m * x);\n                        result.push(Math.round(y * 1000000000) / 1000000000);\n                    }\n                }\n                return result;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'LINEST': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                return formula.error.v;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'LOGEST': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                return formula.error.v;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'MDETERM': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //数组\n                var data_array = arguments[0];\n                var array = [];\n                if (getObjType(data_array) == 'array') {\n                    if (getObjType(data_array[0]) == 'array' && !func_methods.isDyadicArr(data_array)) {\n                        return formula.error.v;\n                    }\n                    array = func_methods.getDataDyadicArr(data_array);\n                } else if (getObjType(data_array) == 'object' && data_array.startCell != null) {\n                    array = func_methods.getCellDataDyadicArr(data_array, 'text');\n                } else {\n                    var rowArr = [];\n                    rowArr.push(data_array);\n                    array.push(rowArr);\n                }\n                for (var i = 0; i < array.length; i++) {\n                    for (var j = 0; j < array[i].length; j++) {\n                        if (!isRealNum(array[i][j])) {\n                            return formula.error.v;\n                        }\n                        array[i][j] = parseFloat(array[i][j]);\n                    }\n                }\n                if (array.length != array[0].length) {\n                    return formula.error.v;\n                }    //计算\n                //计算\n                function Ma(a, n) {\n                    var A;\n                    var b = new Array();\n                    if (n == 1) {\n                        A = a[0][0];\n                        return A;\n                    } else if (n == 2) {\n                        A = a[0][0] * a[1][1] - a[0][1] * a[1][0];\n                        return A;\n                    } else if (n == 3) {\n                        A = a[0][0] * a[1][1] * a[2][2] + a[1][0] * a[2][1] * a[0][2] + a[2][0] * a[0][1] * a[1][2] - a[2][0] * a[1][1] * a[0][2] - a[0][0] * a[2][1] * a[1][2] - a[1][0] * a[0][1] * a[2][2];\n                        return A;\n                    } else {\n                        A = 0;\n                        var c = new Array();\n                        var e = new Array();\n                        for (var i = 0; i < n; i++) {\n                            b[i] = a[i][0] * Math.pow(-1, i + 1 + 1);\n                        }\n                        for (var i = 0; i < n; i++) {\n                            e[i] = new Array();\n                            for (var j = 0; j < n - 1; j++) {\n                                e[i][j] = a[i][j + 1];\n                            }\n                        }\n                        for (var i = 0; i < n; i++) {\n                            for (var j = 0; j < n; j++) {\n                                c[j] = new Array();\n                                for (var k = 0; k < n - 1; k++) {\n                                    if (i > j) {\n                                        c[j][k] = e[j][k];\n                                    } else if (i < j) {\n                                        c[j - 1][k] = e[j][k];\n                                    }\n                                }\n                            }\n                            A += b[i] * arguments.callee(c, n - 1);\n                        }\n                        return A;\n                    }\n                }\n                return Ma(array, array.length);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'MINVERSE': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //数组\n                var data_array = arguments[0];\n                var array = [];\n                if (getObjType(data_array) == 'array') {\n                    if (getObjType(data_array[0]) == 'array' && !func_methods.isDyadicArr(data_array)) {\n                        return formula.error.v;\n                    }\n                    array = func_methods.getDataDyadicArr(data_array);\n                } else if (getObjType(data_array) == 'object' && data_array.startCell != null) {\n                    array = func_methods.getCellDataDyadicArr(data_array, 'text');\n                } else {\n                    var rowArr = [];\n                    rowArr.push(data_array);\n                    array.push(rowArr);\n                }\n                for (var i = 0; i < array.length; i++) {\n                    for (var j = 0; j < array[i].length; j++) {\n                        if (!isRealNum(array[i][j])) {\n                            return formula.error.v;\n                        }\n                        array[i][j] = parseFloat(array[i][j]);\n                    }\n                }\n                if (array.length != array[0].length) {\n                    return formula.error.v;\n                }    //计算\n                //计算\n                return inverse(array);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'MMULT': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //数组1\n                var data_array1 = arguments[0];\n                var array1 = [];\n                if (getObjType(data_array1) == 'array') {\n                    if (getObjType(data_array1[0]) == 'array' && !func_methods.isDyadicArr(data_array1)) {\n                        return formula.error.v;\n                    }\n                    array1 = func_methods.getDataDyadicArr(data_array1);\n                } else if (getObjType(data_array1) == 'object' && data_array1.startCell != null) {\n                    array1 = func_methods.getCellDataDyadicArr(data_array1, 'text');\n                } else {\n                    var rowArr = [];\n                    rowArr.push(data_array1);\n                    array1.push(rowArr);\n                }\n                for (var i = 0; i < array1.length; i++) {\n                    for (var j = 0; j < array1[i].length; j++) {\n                        if (!isRealNum(array1[i][j])) {\n                            return formula.error.v;\n                        }\n                        array1[i][j] = parseFloat(array1[i][j]);\n                    }\n                }    //数组2\n                //数组2\n                var data_array2 = arguments[1];\n                var array2 = [];\n                if (getObjType(data_array2) == 'array') {\n                    if (getObjType(data_array2[0]) == 'array' && !func_methods.isDyadicArr(data_array2)) {\n                        return formula.error.v;\n                    }\n                    array2 = func_methods.getDataDyadicArr(data_array2);\n                } else if (getObjType(data_array2) == 'object' && data_array2.startCell != null) {\n                    array2 = func_methods.getCellDataDyadicArr(data_array2, 'text');\n                } else {\n                    var rowArr = [];\n                    rowArr.push(data_array2);\n                    array2.push(rowArr);\n                }\n                for (var i = 0; i < array2.length; i++) {\n                    for (var j = 0; j < array2[i].length; j++) {\n                        if (!isRealNum(array2[i][j])) {\n                            return formula.error.v;\n                        }\n                        array2[i][j] = parseFloat(array2[i][j]);\n                    }\n                }    //计算\n                //计算\n                if (array1[0].length != array2.length) {\n                    return formula.error.v;\n                }\n                var rowlen = array1.length;\n                var collen = array2[0].length;\n                var result = [];\n                for (var m = 0; m < rowlen; m++) {\n                    var rowArr = [];\n                    for (var n = 0; n < collen; n++) {\n                        var value = 0;\n                        for (var p = 0; p < array1[0].length; p++) {\n                            value += array1[m][p] * array2[p][n];\n                        }\n                        rowArr.push(value);\n                    }\n                    result.push(rowArr);\n                }\n                return result;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'SUMPRODUCT': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //第一个数组\n                //数组1\n                var data_array1 = arguments[0];\n                var array1 = [];\n                if (getObjType(data_array1) == 'array') {\n                    if (getObjType(data_array1[0]) == 'array' && !func_methods.isDyadicArr(data_array1)) {\n                        return formula.error.v;\n                    }\n                    array1 = func_methods.getDataDyadicArr(data_array1);\n                } else if (getObjType(data_array1) == 'object' && data_array1.startCell != null) {\n                    array1 = func_methods.getCellDataDyadicArr(data_array1, 'text');\n                } else {\n                    var rowArr = [];\n                    rowArr.push(data_array1);\n                    array1.push(rowArr);\n                }\n                for (var i = 0; i < array1.length; i++) {\n                    for (var j = 0; j < array1[i].length; j++) {\n                        if (!isRealNum(array1[i][j])) {\n                            array1[i][j] = 0;\n                        } else {\n                            array1[i][j] = parseFloat(array1[i][j]);\n                        }\n                    }\n                }\n                var rowlen = array1.length;\n                var collen = array1[0].length;\n                if (arguments.length >= 2) {\n                    for (var i = 1; i < arguments.length; i++) {\n                        var data = arguments[i];\n                        var arr = [];\n                        if (getObjType(data) == 'array') {\n                            if (getObjType(data[0]) == 'array' && !func_methods.isDyadicArr(data)) {\n                                return formula.error.v;\n                            }\n                            arr = func_methods.getDataDyadicArr(data);\n                        } else if (getObjType(data) == 'object' && data.startCell != null) {\n                            arr = func_methods.getCellDataDyadicArr(data, 'text');\n                        } else {\n                            var rowArr = [];\n                            rowArr.push(data);\n                            arr.push(rowArr);\n                        }\n                        if (arr.length != rowlen || arr[0].length != collen) {\n                            return formula.error.v;\n                        }\n                        for (var m = 0; m < rowlen; m++) {\n                            for (var n = 0; n < collen; n++) {\n                                if (!isRealNum(arr[m][n])) {\n                                    array1[m][n] = 0;\n                                } else {\n                                    array1[m][n] = array1[m][n] * parseFloat(arr[m][n]);\n                                }\n                            }\n                        }\n                    }\n                }\n                var sum = 0;\n                for (var m = 0; m < rowlen; m++) {\n                    for (var n = 0; n < collen; n++) {\n                        sum += array1[m][n];\n                    }\n                }\n                return sum;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'ISFORMULA': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var data_cell = arguments[0];\n                var cell;\n                if (getObjType(data_cell) == 'object' && data_cell.startCell != null) {\n                    if (data_cell.data == null) {\n                        return false;\n                    }\n                    if (getObjType(data_cell.data) == 'array') {\n                        cell = data_cell.data[0][0];\n                    } else {\n                        cell = data_cell.data;\n                    }\n                    if (cell != null && cell.f != null) {\n                        return true;\n                    } else {\n                        return false;\n                    }\n                } else {\n                    return formula.error.v;\n                }\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'CELL': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //单元格信息的类型\n                var data_info_type = arguments[0];\n                var info_type;\n                if (getObjType(data_info_type) == 'array') {\n                    if (getObjType(data_info_type[0]) == 'array') {\n                        if (!func_methods.isDyadicArr(data_info_type)) {\n                            return formula.error.v;\n                        }\n                        info_type = data_info_type[0][0];\n                    } else {\n                        info_type = data_info_type[0];\n                    }\n                } else if (getObjType(data_info_type) == 'object' && data_info_type.startCell != null) {\n                    if (data_info_type.data == null) {\n                        return formula.error.v;\n                    } else {\n                        if (getObjType(data_info_type.data) == 'array') {\n                            return formula.error.v;\n                        }\n                        info_type = data_info_type.data.v;\n                        if (isRealNull(info_type)) {\n                            return formula.error.v;\n                        }\n                    }\n                } else {\n                    info_type = data_info_type;\n                }    //单元格\n                //单元格\n                var data_reference = arguments[1];\n                var reference;\n                if (getObjType(data_reference) == 'object' && data_reference.startCell != null) {\n                    reference = data_reference.startCell;\n                } else {\n                    return formula.error.v;\n                }\n                if ([\n                        'address',\n                        'col',\n                        'color',\n                        'contents',\n                        'filename',\n                        'format',\n                        'parentheses',\n                        'prefix',\n                        'protect',\n                        'row',\n                        'type',\n                        'width'\n                    ].indexOf(info_type) == -1) {\n                    return formula.error.v;\n                }\n                var file = getluckysheetfile()[getSheetIndex(Store.currentSheetIndex)];\n                var cellrange = formula.getcellrange(reference);\n                var row_index = cellrange.row[0];\n                var col_index = cellrange.column[0];    // let sheetdata = null;\n                                                        // sheetdata = Store.flowdata;\n                                                        // if (formula.execFunctionGroupData != null) {\n                                                        //     sheetdata = formula.execFunctionGroupData;\n                                                        // }\n                // let sheetdata = null;\n                // sheetdata = Store.flowdata;\n                // if (formula.execFunctionGroupData != null) {\n                //     sheetdata = formula.execFunctionGroupData;\n                // }\n                let luckysheetfile = getluckysheetfile();\n                let index = getSheetIndex(Store.calculateSheetIndex);\n                let sheetdata = luckysheetfile[index].data;\n                let value;\n                if (formula.execFunctionGlobalData != null && formula.execFunctionGlobalData[row_index + '_' + col_index + '_' + Store.calculateSheetIndex] != null) {\n                    value = formula.execFunctionGlobalData[row_index + '_' + col_index + '_' + Store.calculateSheetIndex].v;\n                } else if (sheetdata[row_index][col_index] != null && sheetdata[row_index][col_index].v != null && sheetdata[row_index][col_index].v != '') {\n                    value = sheetdata[row_index][col_index];\n                    if (value instanceof Object) {\n                        value = value.v;\n                    }\n                } else {\n                    value = 0;\n                }\n                switch (info_type) {\n                case 'address':\n                    return reference;\n                    break;\n                case 'col':\n                    return col_index + 1;\n                    break;\n                case 'color':\n                    return 0;\n                    break;\n                case 'contents':\n                    // if (sheetdata[row_index][col_index] == null || sheetdata[row_index][col_index].v == null || sheetdata[row_index][col_index].v ==\"\"){\n                    //     value = 0;\n                    // }\n                    return value;\n                    break;\n                case 'filename':\n                    return file.name;\n                    break;\n                case 'format':\n                    if (sheetdata[row_index][col_index] == null || sheetdata[row_index][col_index].ct == null) {\n                        return 'G';\n                    }\n                    return sheetdata[row_index][col_index].ct.fa;\n                    break;\n                case 'parentheses':\n                    if (sheetdata[row_index][col_index] == null || sheetdata[row_index][col_index].v == null || sheetdata[row_index][col_index].v == '') {\n                        return 0;\n                    }\n                    if (sheetdata[row_index][col_index].v > 0) {\n                        return 1;\n                    } else {\n                        return 0;\n                    }\n                    break;\n                case 'prefix':\n                    if (value == 0) {\n                        return '';\n                    }\n                    if (sheetdata[row_index][col_index].ht == 0) {\n                        //居中对齐\n                        return '^';\n                    } else if (sheetdata[row_index][col_index].ht == 1) {\n                        //左对齐\n                        return \"'\";\n                    } else if (sheetdata[row_index][col_index].ht == 2) {\n                        //右对齐\n                        return '\"';\n                    } else {\n                        return '';\n                    }\n                    break;\n                case 'protect':\n                    return 0;\n                    break;\n                case 'row':\n                    return row_index + 1;\n                    break;\n                case 'type':\n                    if (value == 0) {\n                        return 'b';\n                    }\n                    return 'l';\n                    break;\n                case 'width':\n                    var cfg = file.config;\n                    if (cfg['columnlen'] != null && col_index in cfg['columnlen']) {\n                        return cfg['columnlen'][col_index];\n                    }\n                    return Store.defaultcollen;\n                    break;\n                }\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'NA': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                return formula.error.na;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'ERROR_TYPE': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //单元格\n                var data_error_val = arguments[0];\n                var error_val;\n                if (getObjType(data_error_val) == 'array') {\n                    if (getObjType(data_error_val[0]) == 'array') {\n                        if (!func_methods.isDyadicArr(data_error_val)) {\n                            return formula.error.v;\n                        }\n                        error_val = data_error_val[0][0];\n                    } else {\n                        error_val = data_error_val[0];\n                    }\n                } else if (getObjType(data_error_val) == 'object' && data_error_val.startCell != null) {\n                    if (data_error_val.data == null) {\n                        return formula.error.na;\n                    }\n                    if (getObjType(data_error_val.data) == 'array') {\n                        error_val = data_error_val.data[0][0];\n                        if (error_val == null || isRealNull(error_val.v)) {\n                            return formula.error.na;\n                        }\n                        error_val = error_val.v;\n                    } else {\n                        if (isRealNull(data_error_val.data.v)) {\n                            return formula.error.na;\n                        }\n                        error_val = data_error_val.data.v;\n                    }\n                } else {\n                    error_val = data_error_val;\n                }\n                var error_obj = {\n                    '#NULL!': 1,\n                    '#DIV/0!': 2,\n                    '#VALUE!': 3,\n                    '#REF!': 4,\n                    '#NAME?': 5,\n                    '#NUM!': 6,\n                    '#N/A': 7,\n                    '#GETTING_DATA': 8\n                };\n                if (error_val in error_obj) {\n                    return error_obj[error_val];\n                } else {\n                    return formula.error.na;\n                }\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'ISBLANK': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //单元格\n                var data_error_val = arguments[0];\n                var error_val;\n                if (getObjType(data_error_val) == 'object' && data_error_val.startCell != null) {\n                    if (data_error_val.data == null) {\n                        return true;\n                    } else {\n                        return false;\n                    }\n                } else {\n                    return false;\n                }\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'ISERR': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //单元格\n                var data_value = arguments[0];\n                var value;\n                if (getObjType(data_value) == 'array') {\n                    if (getObjType(data_value[0]) == 'array') {\n                        if (!func_methods.isDyadicArr(data_value)) {\n                            return formula.error.v;\n                        }\n                        value = data_value[0][0];\n                    } else {\n                        value = data_value[0];\n                    }\n                } else if (getObjType(data_value) == 'object' && data_value.startCell != null) {\n                    if (getObjType(data_value.data) == 'array') {\n                        return true;\n                    }\n                    if (data_value.data == null || isRealNull(data_value.data.v)) {\n                        return false;\n                    }\n                    value = data_value.data.v;\n                } else {\n                    value = data_value;\n                }\n                if ([\n                        '#VALUE!',\n                        '#REF!',\n                        '#DIV/0!',\n                        '#NUM!',\n                        '#NAME?',\n                        '#NULL!'\n                    ].indexOf(value) > -1) {\n                    return true;\n                } else {\n                    return false;\n                }\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'ISERROR': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //单元格\n                var data_value = arguments[0];\n                var value;\n                if (getObjType(data_value) == 'array') {\n                    if (getObjType(data_value[0]) == 'array') {\n                        if (!func_methods.isDyadicArr(data_value)) {\n                            return formula.error.v;\n                        }\n                        value = data_value[0][0];\n                    } else {\n                        value = data_value[0];\n                    }\n                } else if (getObjType(data_value) == 'object' && data_value.startCell != null) {\n                    if (getObjType(data_value.data) == 'array') {\n                        return true;\n                    }\n                    if (data_value.data == null || isRealNull(data_value.data.v)) {\n                        return false;\n                    }\n                    value = data_value.data.v;\n                } else {\n                    value = data_value;\n                }\n                if ([\n                        '#N/A',\n                        '#VALUE!',\n                        '#REF!',\n                        '#DIV/0!',\n                        '#NUM!',\n                        '#NAME?',\n                        '#NULL!'\n                    ].indexOf(value) > -1) {\n                    return true;\n                } else {\n                    return false;\n                }\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'ISLOGICAL': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //单元格\n                var data_value = arguments[0];\n                var value;\n                if (getObjType(data_value) == 'array') {\n                    if (getObjType(data_value[0]) == 'array') {\n                        if (!func_methods.isDyadicArr(data_value)) {\n                            return formula.error.v;\n                        }\n                        value = data_value[0][0];\n                    } else {\n                        value = data_value[0];\n                    }\n                } else if (getObjType(data_value) == 'object' && data_value.startCell != null) {\n                    if (getObjType(data_value.data) == 'array') {\n                        return false;\n                    }\n                    if (data_value.data == null || isRealNull(data_value.data.v)) {\n                        return false;\n                    }\n                    value = data_value.data.v;\n                } else {\n                    value = data_value;\n                }\n                if (value.toString().toLowerCase() == 'true' || value.toString().toLowerCase() == 'false') {\n                    return true;\n                } else {\n                    return false;\n                }\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'ISNA': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //单元格\n                var data_value = arguments[0];\n                var value;\n                if (getObjType(data_value) == 'array') {\n                    if (getObjType(data_value[0]) == 'array') {\n                        if (!func_methods.isDyadicArr(data_value)) {\n                            return formula.error.v;\n                        }\n                        value = data_value[0][0];\n                    } else {\n                        value = data_value[0];\n                    }\n                } else if (getObjType(data_value) == 'object' && data_value.startCell != null) {\n                    if (getObjType(data_value.data) == 'array') {\n                        return false;\n                    }\n                    if (data_value.data == null || isRealNull(data_value.data.v)) {\n                        return false;\n                    }\n                    value = data_value.data.v;\n                } else {\n                    value = data_value;\n                }\n                if (value.toString() == '#N/A') {\n                    return true;\n                } else {\n                    return false;\n                }\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'ISNONTEXT': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //单元格\n                var data_value = arguments[0];\n                var value;\n                if (getObjType(data_value) == 'array') {\n                    if (getObjType(data_value[0]) == 'array') {\n                        if (!func_methods.isDyadicArr(data_value)) {\n                            return formula.error.v;\n                        }\n                        value = data_value[0][0];\n                    } else {\n                        value = data_value[0];\n                    }\n                } else if (getObjType(data_value) == 'object' && data_value.startCell != null) {\n                    if (getObjType(data_value.data) == 'array') {\n                        return true;\n                    }\n                    if (data_value.data == null || isRealNull(data_value.data.v)) {\n                        return true;\n                    }\n                    value = data_value.data.v;\n                } else {\n                    value = data_value;\n                }\n                if ([\n                        '#N/A',\n                        '#VALUE!',\n                        '#REF!',\n                        '#DIV/0!',\n                        '#NUM!',\n                        '#NAME?',\n                        '#NULL!'\n                    ].indexOf(value) > -1) {\n                    return true;\n                } else if (value.toString().toLowerCase() == 'true' || value.toString().toLowerCase() == 'false') {\n                    return true;\n                } else if (isRealNum(value)) {\n                    return true;\n                } else {\n                    return false;\n                }\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'ISNUMBER': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //单元格\n                var data_value = arguments[0];\n                var value;\n                if (getObjType(data_value) == 'array') {\n                    if (getObjType(data_value[0]) == 'array') {\n                        if (!func_methods.isDyadicArr(data_value)) {\n                            return formula.error.v;\n                        }\n                        value = data_value[0][0];\n                    } else {\n                        value = data_value[0];\n                    }\n                } else if (getObjType(data_value) == 'object' && data_value.startCell != null) {\n                    if (getObjType(data_value.data) == 'array') {\n                        return false;\n                    }\n                    if (data_value.data == null || isRealNull(data_value.data.v)) {\n                        return false;\n                    }\n                    value = data_value.data.v;\n                } else {\n                    value = data_value;\n                }\n                if (isRealNum(value)) {\n                    return true;\n                } else {\n                    return false;\n                }\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'ISREF': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                if (getObjType(arguments[0]) == 'object' && arguments[0].startCell != null) {\n                    return true;\n                } else {\n                    return false;\n                }\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'ISTEXT': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //单元格\n                var data_value = arguments[0];\n                var value;\n                if (getObjType(data_value) == 'array') {\n                    if (getObjType(data_value[0]) == 'array') {\n                        if (!func_methods.isDyadicArr(data_value)) {\n                            return formula.error.v;\n                        }\n                        value = data_value[0][0];\n                    } else {\n                        value = data_value[0];\n                    }\n                } else if (getObjType(data_value) == 'object' && data_value.startCell != null) {\n                    if (getObjType(data_value.data) == 'array') {\n                        return false;\n                    }\n                    if (data_value.data == null || isRealNull(data_value.data.v)) {\n                        return false;\n                    }\n                    value = data_value.data.v;\n                } else {\n                    value = data_value;\n                }\n                if ([\n                        '#N/A',\n                        '#VALUE!',\n                        '#REF!',\n                        '#DIV/0!',\n                        '#NUM!',\n                        '#NAME?',\n                        '#NULL!'\n                    ].indexOf(value) > -1) {\n                    return false;\n                } else if (value.toString().toLowerCase() == 'true' || value.toString().toLowerCase() == 'false') {\n                    return false;\n                } else if (isRealNum(value)) {\n                    return false;\n                } else {\n                    return true;\n                }\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'TYPE': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //单元格\n                var data_value = arguments[0];\n                var value;\n                if (getObjType(data_value) == 'array') {\n                    return 64;\n                } else if (getObjType(data_value) == 'object' && data_value.startCell != null) {\n                    if (getObjType(data_value.data) == 'array') {\n                        return 16;\n                    }\n                    if (data_value.data == null || isRealNull(data_value.data.v)) {\n                        return 1;\n                    }\n                    value = data_value.data.v;\n                } else {\n                    value = data_value;\n                }\n                if ([\n                        '#N/A',\n                        '#VALUE!',\n                        '#REF!',\n                        '#DIV/0!',\n                        '#NUM!',\n                        '#NAME?',\n                        '#NULL!'\n                    ].indexOf(value) > -1) {\n                    return 16;\n                } else if (value.toString().toLowerCase() == 'true' || value.toString().toLowerCase() == 'false') {\n                    return 4;\n                } else if (isRealNum(value)) {\n                    return 1;\n                } else {\n                    return 2;\n                }\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'N': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //单元格\n                var data_value = arguments[0];\n                var value;\n                if (getObjType(data_value) == 'array') {\n                    if (getObjType(data_value[0]) == 'array') {\n                        if (!func_methods.isDyadicArr(data_value)) {\n                            return formula.error.v;\n                        }\n                        value = data_value[0][0];\n                    } else {\n                        value = data_value[0];\n                    }\n                } else if (getObjType(data_value) == 'object' && data_value.startCell != null) {\n                    if (getObjType(data_value.data) == 'array') {\n                        value = data_value.data[0][0];\n                        if (value == null || isRealNull(value.v)) {\n                            return 0;\n                        }\n                        value = value.v;\n                    } else {\n                        if (data_value.data == null || isRealNull(data_value.data.v)) {\n                            return 0;\n                        }\n                        value = data_value.data.v;\n                    }\n                } else {\n                    value = data_value;\n                }\n                if ([\n                        '#N/A',\n                        '#VALUE!',\n                        '#REF!',\n                        '#DIV/0!',\n                        '#NUM!',\n                        '#NAME?',\n                        '#NULL!'\n                    ].indexOf(value) > -1) {\n                    return value;\n                } else if (value.toString().toLowerCase() == 'true' || value.toString().toLowerCase() == 'false') {\n                    if (value.toString().toLowerCase() == 'true') {\n                        return 1;\n                    } else {\n                        return 0;\n                    }\n                } else if (isRealNum(value)) {\n                    return parseFloat(value);\n                } else {\n                    return 0;\n                }\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'TO_DATE': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //数字\n                var value = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(value)) {\n                    return value;\n                }\n                if (!isRealNum(value)) {\n                    return formula.error.v;\n                }\n                value = parseFloat(value);\n                return update('yyyy-mm-dd', value);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'TO_PURE_NUMBER': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var value = func_methods.getFirstValue(arguments[0], 'text');\n                if (valueIsError(value)) {\n                    return value;\n                }\n                if (dayjs(value).isValid()) {\n                    return genarate(value)[2];\n                } else {\n                    return numeral(value).value() == null ? value : numeral(value).value();\n                }\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'TO_TEXT': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var value = func_methods.getFirstValue(arguments[0], 'text');\n                if (valueIsError(value)) {\n                    return value;\n                }\n                return update('@', value);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'TO_DOLLARS': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //数字\n                var value = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(value)) {\n                    return value;\n                }\n                if (!isRealNum(value)) {\n                    return formula.error.v;\n                }\n                value = parseFloat(value);\n                return update('$ 0.00', value);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'TO_PERCENT': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //数字\n                var value = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(value)) {\n                    return value;\n                }\n                if (!isRealNum(value)) {\n                    return formula.error.v;\n                }\n                value = parseFloat(value);\n                return update('0%', value);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'DGET': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //数据库的单元格区域\n                var data_database = arguments[0];\n                var database = [];\n                if (getObjType(data_database) == 'object' && data_database.startCell != null) {\n                    if (data_database.data == null) {\n                        return formula.error.v;\n                    }\n                    database = func_methods.getCellDataDyadicArr(data_database, 'text');\n                } else {\n                    return formula.error.v;\n                }    //列\n                //列\n                var field = func_methods.getFirstValue(arguments[1], 'text');\n                if (valueIsError(field)) {\n                    return field;\n                }\n                if (isRealNull(field)) {\n                    return formula.error.v;\n                }    //条件的单元格区域\n                //条件的单元格区域\n                var data_criteria = arguments[2];\n                var criteria = [];\n                if (getObjType(data_criteria) == 'object' && data_criteria.startCell != null) {\n                    if (data_criteria.data == null) {\n                        return formula.error.v;\n                    }\n                    criteria = func_methods.getCellDataDyadicArr(data_criteria, 'text');\n                } else {\n                    return formula.error.v;\n                }\n                if (!isRealNum(field) && getObjType(field) !== 'string') {\n                    return formula.error.v;\n                }\n                var resultIndexes = func_methods.findResultIndex(database, criteria);\n                var targetFields = [];\n                if (getObjType(field) === 'string') {\n                    var index = func_methods.findField(database, field);\n                    targetFields = func_methods.rest(database[index]);\n                } else {\n                    targetFields = func_methods.rest(database[field]);\n                }\n                if (resultIndexes.length === 0) {\n                    return formula.error.v;\n                }\n                if (resultIndexes.length > 1) {\n                    return formula.error.nm;\n                }\n                return targetFields[resultIndexes[0]];\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'DMAX': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //数据库的单元格区域\n                var data_database = arguments[0];\n                var database = [];\n                if (getObjType(data_database) == 'object' && data_database.startCell != null) {\n                    if (data_database.data == null) {\n                        return formula.error.v;\n                    }\n                    database = func_methods.getCellDataDyadicArr(data_database, 'text');\n                } else {\n                    return formula.error.v;\n                }    //列\n                //列\n                var field = func_methods.getFirstValue(arguments[1], 'text');\n                if (valueIsError(field)) {\n                    return field;\n                }\n                if (isRealNull(field)) {\n                    return formula.error.v;\n                }    //条件的单元格区域\n                //条件的单元格区域\n                var data_criteria = arguments[2];\n                var criteria = [];\n                if (getObjType(data_criteria) == 'object' && data_criteria.startCell != null) {\n                    if (data_criteria.data == null) {\n                        return formula.error.v;\n                    }\n                    criteria = func_methods.getCellDataDyadicArr(data_criteria, 'text');\n                } else {\n                    return formula.error.v;\n                }\n                if (!isRealNum(field) && getObjType(field) !== 'string') {\n                    return formula.error.v;\n                }\n                var resultIndexes = func_methods.findResultIndex(database, criteria);\n                var targetFields = [];\n                if (getObjType(field) === 'string') {\n                    var index = func_methods.findField(database, field);\n                    targetFields = func_methods.rest(database[index]);\n                } else {\n                    targetFields = func_methods.rest(database[field]);\n                }\n                var maxValue = targetFields[resultIndexes[0]];\n                for (var i = 1; i < resultIndexes.length; i++) {\n                    if (maxValue < targetFields[resultIndexes[i]]) {\n                        maxValue = targetFields[resultIndexes[i]];\n                    }\n                }\n                return maxValue;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'DMIN': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //数据库的单元格区域\n                var data_database = arguments[0];\n                var database = [];\n                if (getObjType(data_database) == 'object' && data_database.startCell != null) {\n                    if (data_database.data == null) {\n                        return formula.error.v;\n                    }\n                    database = func_methods.getCellDataDyadicArr(data_database, 'text');\n                } else {\n                    return formula.error.v;\n                }    //列\n                //列\n                var field = func_methods.getFirstValue(arguments[1], 'text');\n                if (valueIsError(field)) {\n                    return field;\n                }\n                if (isRealNull(field)) {\n                    return formula.error.v;\n                }    //条件的单元格区域\n                //条件的单元格区域\n                var data_criteria = arguments[2];\n                var criteria = [];\n                if (getObjType(data_criteria) == 'object' && data_criteria.startCell != null) {\n                    if (data_criteria.data == null) {\n                        return formula.error.v;\n                    }\n                    criteria = func_methods.getCellDataDyadicArr(data_criteria, 'text');\n                } else {\n                    return formula.error.v;\n                }\n                if (!isRealNum(field) && getObjType(field) !== 'string') {\n                    return formula.error.v;\n                }\n                var resultIndexes = findResultIndex(database, criteria);\n                var targetFields = [];\n                if (getObjType(field) === 'string') {\n                    var index = findField(database, field);\n                    targetFields = rest(database[index]);\n                } else {\n                    targetFields = rest(database[field]);\n                }\n                var minValue = targetFields[resultIndexes[0]];\n                for (var i = 1; i < resultIndexes.length; i++) {\n                    if (minValue > targetFields[resultIndexes[i]]) {\n                        minValue = targetFields[resultIndexes[i]];\n                    }\n                }\n                return minValue;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'DAVERAGE': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //数据库的单元格区域\n                var data_database = arguments[0];\n                var database = [];\n                if (getObjType(data_database) == 'object' && data_database.startCell != null) {\n                    if (data_database.data == null) {\n                        return formula.error.v;\n                    }\n                    database = func_methods.getCellDataDyadicArr(data_database, 'text');\n                } else {\n                    return formula.error.v;\n                }    //列\n                //列\n                var field = func_methods.getFirstValue(arguments[1], 'text');\n                if (valueIsError(field)) {\n                    return field;\n                }\n                if (isRealNull(field)) {\n                    return formula.error.v;\n                }    //条件的单元格区域\n                //条件的单元格区域\n                var data_criteria = arguments[2];\n                var criteria = [];\n                if (getObjType(data_criteria) == 'object' && data_criteria.startCell != null) {\n                    if (data_criteria.data == null) {\n                        return formula.error.v;\n                    }\n                    criteria = func_methods.getCellDataDyadicArr(data_criteria, 'text');\n                } else {\n                    return formula.error.v;\n                }\n                if (!isRealNum(field) && getObjType(field) !== 'string') {\n                    return formula.error.v;\n                }\n                var resultIndexes = func_methods.findResultIndex(database, criteria);\n                var targetFields = [];\n                if (getObjType(field) === 'string') {\n                    var index = func_methods.findField(database, field);\n                    targetFields = func_methods.rest(database[index]);\n                } else {\n                    targetFields = func_methods.rest(database[field]);\n                }\n                var sum = 0;\n                for (var i = 0; i < resultIndexes.length; i++) {\n                    sum += targetFields[resultIndexes[i]];\n                }\n                return resultIndexes.length === 0 ? formula.error.d : sum / resultIndexes.length;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'DCOUNT': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //数据库的单元格区域\n                var data_database = arguments[0];\n                var database = [];\n                if (getObjType(data_database) == 'object' && data_database.startCell != null) {\n                    if (data_database.data == null) {\n                        return formula.error.v;\n                    }\n                    database = func_methods.getCellDataDyadicArr(data_database, 'text');\n                } else {\n                    return formula.error.v;\n                }    //列\n                //列\n                var field = func_methods.getFirstValue(arguments[1], 'text');\n                if (valueIsError(field)) {\n                    return field;\n                }\n                if (isRealNull(field)) {\n                    return formula.error.v;\n                }    //条件的单元格区域\n                //条件的单元格区域\n                var data_criteria = arguments[2];\n                var criteria = [];\n                if (getObjType(data_criteria) == 'object' && data_criteria.startCell != null) {\n                    if (data_criteria.data == null) {\n                        return formula.error.v;\n                    }\n                    criteria = func_methods.getCellDataDyadicArr(data_criteria, 'text');\n                } else {\n                    return formula.error.v;\n                }\n                if (!isRealNum(field) && getObjType(field) !== 'string') {\n                    return formula.error.v;\n                }\n                var resultIndexes = func_methods.findResultIndex(database, criteria);\n                var targetFields = [];\n                if (getObjType(field) === 'string') {\n                    var index = func_methods.findField(database, field);\n                    targetFields = func_methods.rest(database[index]);\n                } else {\n                    targetFields = func_methods.rest(database[field]);\n                }\n                var targetValues = [];\n                for (var i = 0; i < resultIndexes.length; i++) {\n                    targetValues[i] = targetFields[resultIndexes[i]];\n                }\n                return window.luckysheet_function.COUNT.f.apply(window.luckysheet_function.COUNT, targetValues);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'DCOUNTA': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //数据库的单元格区域\n                var data_database = arguments[0];\n                var database = [];\n                if (getObjType(data_database) == 'object' && data_database.startCell != null) {\n                    if (data_database.data == null) {\n                        return formula.error.v;\n                    }\n                    database = func_methods.getCellDataDyadicArr(data_database, 'text');\n                } else {\n                    return formula.error.v;\n                }    //列\n                //列\n                var field = func_methods.getFirstValue(arguments[1], 'text');\n                if (valueIsError(field)) {\n                    return field;\n                }\n                if (isRealNull(field)) {\n                    return formula.error.v;\n                }    //条件的单元格区域\n                //条件的单元格区域\n                var data_criteria = arguments[2];\n                var criteria = [];\n                if (getObjType(data_criteria) == 'object' && data_criteria.startCell != null) {\n                    if (data_criteria.data == null) {\n                        return formula.error.v;\n                    }\n                    criteria = func_methods.getCellDataDyadicArr(data_criteria, 'text');\n                } else {\n                    return formula.error.v;\n                }\n                if (!isRealNum(field) && getObjType(field) !== 'string') {\n                    return formula.error.v;\n                }\n                var resultIndexes = func_methods.findResultIndex(database, criteria);\n                var targetFields = [];\n                if (getObjType(field) === 'string') {\n                    var index = func_methods.findField(database, field);\n                    targetFields = func_methods.rest(database[index]);\n                } else {\n                    targetFields = func_methods.rest(database[field]);\n                }\n                var targetValues = [];\n                for (var i = 0; i < resultIndexes.length; i++) {\n                    targetValues[i] = targetFields[resultIndexes[i]];\n                }\n                return window.luckysheet_function.COUNTA.f.apply(window.luckysheet_function.COUNTA, targetValues);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'DPRODUCT': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //数据库的单元格区域\n                var data_database = arguments[0];\n                var database = [];\n                if (getObjType(data_database) == 'object' && data_database.startCell != null) {\n                    if (data_database.data == null) {\n                        return formula.error.v;\n                    }\n                    database = func_methods.getCellDataDyadicArr(data_database, 'text');\n                } else {\n                    return formula.error.v;\n                }    //列\n                //列\n                var field = func_methods.getFirstValue(arguments[1], 'text');\n                if (valueIsError(field)) {\n                    return field;\n                }\n                if (isRealNull(field)) {\n                    return formula.error.v;\n                }    //条件的单元格区域\n                //条件的单元格区域\n                var data_criteria = arguments[2];\n                var criteria = [];\n                if (getObjType(data_criteria) == 'object' && data_criteria.startCell != null) {\n                    if (data_criteria.data == null) {\n                        return formula.error.v;\n                    }\n                    criteria = func_methods.getCellDataDyadicArr(data_criteria, 'text');\n                } else {\n                    return formula.error.v;\n                }\n                if (!isRealNum(field) && getObjType(field) !== 'string') {\n                    return formula.error.v;\n                }\n                var resultIndexes = func_methods.findResultIndex(database, criteria);\n                var targetFields = [];\n                if (getObjType(field) === 'string') {\n                    var index = func_methods.findField(database, field);\n                    targetFields = func_methods.rest(database[index]);\n                } else {\n                    targetFields = func_methods.rest(database[field]);\n                }\n                var targetValues = [];\n                for (var i = 0; i < resultIndexes.length; i++) {\n                    targetValues[i] = targetFields[resultIndexes[i]];\n                }\n                targetValues = func_methods.compact(targetValues);\n                var result = 1;\n                for (i = 0; i < targetValues.length; i++) {\n                    result *= targetValues[i];\n                }\n                return result;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'DSTDEV': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //数据库的单元格区域\n                var data_database = arguments[0];\n                var database = [];\n                if (getObjType(data_database) == 'object' && data_database.startCell != null) {\n                    if (data_database.data == null) {\n                        return formula.error.v;\n                    }\n                    database = func_methods.getCellDataDyadicArr(data_database, 'text');\n                } else {\n                    return formula.error.v;\n                }    //列\n                //列\n                var field = func_methods.getFirstValue(arguments[1], 'text');\n                if (valueIsError(field)) {\n                    return field;\n                }\n                if (isRealNull(field)) {\n                    return formula.error.v;\n                }    //条件的单元格区域\n                //条件的单元格区域\n                var data_criteria = arguments[2];\n                var criteria = [];\n                if (getObjType(data_criteria) == 'object' && data_criteria.startCell != null) {\n                    if (data_criteria.data == null) {\n                        return formula.error.v;\n                    }\n                    criteria = func_methods.getCellDataDyadicArr(data_criteria, 'text');\n                } else {\n                    return formula.error.v;\n                }\n                if (!isRealNum(field) && getObjType(field) !== 'string') {\n                    return formula.error.v;\n                }\n                var resultIndexes = func_methods.findResultIndex(database, criteria);\n                var targetFields = [];\n                if (getObjType(field) === 'string') {\n                    var index = func_methods.findField(database, field);\n                    targetFields = func_methods.rest(database[index]);\n                } else {\n                    targetFields = func_methods.rest(database[field]);\n                }\n                var targetValues = [];\n                for (var i = 0; i < resultIndexes.length; i++) {\n                    targetValues[i] = targetFields[resultIndexes[i]];\n                }\n                targetValues = func_methods.compact(targetValues);\n                return window.luckysheet_function.STDEVA.f.apply(window.luckysheet_function.STDEVA, targetValues);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'DSTDEVP': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //数据库的单元格区域\n                var data_database = arguments[0];\n                var database = [];\n                if (getObjType(data_database) == 'object' && data_database.startCell != null) {\n                    if (data_database.data == null) {\n                        return formula.error.v;\n                    }\n                    database = func_methods.getCellDataDyadicArr(data_database, 'text');\n                } else {\n                    return formula.error.v;\n                }    //列\n                //列\n                var field = func_methods.getFirstValue(arguments[1], 'text');\n                if (valueIsError(field)) {\n                    return field;\n                }\n                if (isRealNull(field)) {\n                    return formula.error.v;\n                }    //条件的单元格区域\n                //条件的单元格区域\n                var data_criteria = arguments[2];\n                var criteria = [];\n                if (getObjType(data_criteria) == 'object' && data_criteria.startCell != null) {\n                    if (data_criteria.data == null) {\n                        return formula.error.v;\n                    }\n                    criteria = func_methods.getCellDataDyadicArr(data_criteria, 'text');\n                } else {\n                    return formula.error.v;\n                }\n                if (!isRealNum(field) && getObjType(field) !== 'string') {\n                    return formula.error.v;\n                }\n                var resultIndexes = func_methods.findResultIndex(database, criteria);\n                var targetFields = [];\n                if (getObjType(field) === 'string') {\n                    var index = func_methods.findField(database, field);\n                    targetFields = func_methods.rest(database[index]);\n                } else {\n                    targetFields = func_methods.rest(database[field]);\n                }\n                var targetValues = [];\n                for (var i = 0; i < resultIndexes.length; i++) {\n                    targetValues[i] = targetFields[resultIndexes[i]];\n                }\n                targetValues = func_methods.compact(targetValues);\n                return window.luckysheet_function.STDEVP.f.apply(window.luckysheet_function.STDEVP, targetValues);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'DSUM': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //数据库的单元格区域\n                var data_database = arguments[0];\n                var database = [];\n                if (getObjType(data_database) == 'object' && data_database.startCell != null) {\n                    if (data_database.data == null) {\n                        return formula.error.v;\n                    }\n                    database = func_methods.getCellDataDyadicArr(data_database, 'text');\n                } else {\n                    return formula.error.v;\n                }    //列\n                //列\n                var field = func_methods.getFirstValue(arguments[1], 'text');\n                if (valueIsError(field)) {\n                    return field;\n                }\n                if (isRealNull(field)) {\n                    return formula.error.v;\n                }    //条件的单元格区域\n                //条件的单元格区域\n                var data_criteria = arguments[2];\n                var criteria = [];\n                if (getObjType(data_criteria) == 'object' && data_criteria.startCell != null) {\n                    if (data_criteria.data == null) {\n                        return formula.error.v;\n                    }\n                    criteria = func_methods.getCellDataDyadicArr(data_criteria, 'text');\n                } else {\n                    return formula.error.v;\n                }\n                if (!isRealNum(field) && getObjType(field) !== 'string') {\n                    return formula.error.v;\n                }\n                var resultIndexes = func_methods.findResultIndex(database, criteria);\n                var targetFields = [];\n                if (getObjType(field) === 'string') {\n                    var index = func_methods.findField(database, field);\n                    targetFields = func_methods.rest(database[index]);\n                } else {\n                    targetFields = func_methods.rest(database[field]);\n                }\n                var targetValues = [];\n                for (var i = 0; i < resultIndexes.length; i++) {\n                    targetValues[i] = targetFields[resultIndexes[i]];\n                }\n                targetValues = func_methods.compact(targetValues);\n                var result = 0;\n                for (i = 0; i < targetValues.length; i++) {\n                    result += targetValues[i];\n                }\n                return result;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'DVAR': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //数据库的单元格区域\n                var data_database = arguments[0];\n                var database = [];\n                if (getObjType(data_database) == 'object' && data_database.startCell != null) {\n                    if (data_database.data == null) {\n                        return formula.error.v;\n                    }\n                    database = func_methods.getCellDataDyadicArr(data_database, 'text');\n                } else {\n                    return formula.error.v;\n                }    //列\n                //列\n                var field = func_methods.getFirstValue(arguments[1], 'text');\n                if (valueIsError(field)) {\n                    return field;\n                }\n                if (isRealNull(field)) {\n                    return formula.error.v;\n                }    //条件的单元格区域\n                //条件的单元格区域\n                var data_criteria = arguments[2];\n                var criteria = [];\n                if (getObjType(data_criteria) == 'object' && data_criteria.startCell != null) {\n                    if (data_criteria.data == null) {\n                        return formula.error.v;\n                    }\n                    criteria = func_methods.getCellDataDyadicArr(data_criteria, 'text');\n                } else {\n                    return formula.error.v;\n                }\n                if (!isRealNum(field) && getObjType(field) !== 'string') {\n                    return formula.error.v;\n                }\n                var resultIndexes = func_methods.findResultIndex(database, criteria);\n                var targetFields = [];\n                if (getObjType(field) === 'string') {\n                    var index = func_methods.findField(database, field);\n                    targetFields = func_methods.rest(database[index]);\n                } else {\n                    targetFields = func_methods.rest(database[field]);\n                }\n                var targetValues = [];\n                for (var i = 0; i < resultIndexes.length; i++) {\n                    targetValues[i] = targetFields[resultIndexes[i]];\n                }\n                targetValues = func_methods.compact(targetValues);\n                return window.luckysheet_function.VAR_S.f.apply(window.luckysheet_function.VAR_S, targetValues);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'DVARP': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //数据库的单元格区域\n                var data_database = arguments[0];\n                var database = [];\n                if (getObjType(data_database) == 'object' && data_database.startCell != null) {\n                    if (data_database.data == null) {\n                        return formula.error.v;\n                    }\n                    database = func_methods.getCellDataDyadicArr(data_database, 'text');\n                } else {\n                    return formula.error.v;\n                }    //列\n                //列\n                var field = func_methods.getFirstValue(arguments[1], 'text');\n                if (valueIsError(field)) {\n                    return field;\n                }\n                if (isRealNull(field)) {\n                    return formula.error.v;\n                }    //条件的单元格区域\n                //条件的单元格区域\n                var data_criteria = arguments[2];\n                var criteria = [];\n                if (getObjType(data_criteria) == 'object' && data_criteria.startCell != null) {\n                    if (data_criteria.data == null) {\n                        return formula.error.v;\n                    }\n                    criteria = func_methods.getCellDataDyadicArr(data_criteria, 'text');\n                } else {\n                    return formula.error.v;\n                }\n                if (!isRealNum(field) && getObjType(field) !== 'string') {\n                    return formula.error.v;\n                }\n                var resultIndexes = func_methods.findResultIndex(database, criteria);\n                var targetFields = [];\n                if (getObjType(field) === 'string') {\n                    var index = func_methods.findField(database, field);\n                    targetFields = func_methods.rest(database[index]);\n                } else {\n                    targetFields = func_methods.rest(database[field]);\n                }\n                var targetValues = [];\n                for (var i = 0; i < resultIndexes.length; i++) {\n                    targetValues[i] = targetFields[resultIndexes[i]];\n                }\n                targetValues = func_methods.compact(targetValues);\n                return window.luckysheet_function.VAR_P.f.apply(window.luckysheet_function.VAR_P, targetValues);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'LINESPLINES': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var cell_r = window.luckysheetCurrentRow;\n                var cell_c = window.luckysheetCurrentColumn;\n                var cell_fp = window.luckysheetCurrentFunction;    //色表，接下来会用到\n                //色表，接下来会用到\n                var colorList = formula.colorList;\n                var rangeValue = arguments[0];\n                var lineColor = arguments[1];\n                var lineWidth = arguments[2];\n                var normalValue = arguments[3];\n                var normalColor = arguments[4];\n                var maxSpot = arguments[5];\n                var minSpot = arguments[6];\n                var spotRadius = arguments[7];\n                let luckysheetfile = getluckysheetfile();\n                let index = getSheetIndex(Store.calculateSheetIndex);\n                let sheetdata = luckysheetfile[index].data;    //定义需要格式化data数据\n                //定义需要格式化data数据\n                var dataformat = formula.readCellDataToOneArray(rangeValue);    //在下面获得该单元格的长度和宽度,同时考虑了合并单元格问题\n                //在下面获得该单元格的长度和宽度,同时考虑了合并单元格问题\n                var cellSize = cells.getCellRealSize(sheetdata, cell_r, cell_c);\n                var width = cellSize[0];\n                var height = cellSize[1];    //开始进行sparklines的详细设置，宽和高为单元格的宽高。\n                //开始进行sparklines的详细设置，宽和高为单元格的宽高。\n                var sparksetting = {};\n                if (lineWidth == null) {\n                    lineWidth = 1;\n                }\n                sparksetting['lineWidth'] = lineWidth;    //设置sparklines图表的宽高，线图的高会随着粗细而超出单元格高度，所以减去一个量，设置offsetY或者offsetX为渲染偏移量，传给luckysheetDrawMain使用。默认为0。=LINESPLINES(D9:E24,3,5)\n                //设置sparklines图表的宽高，线图的高会随着粗细而超出单元格高度，所以减去一个量，设置offsetY或者offsetX为渲染偏移量，传给luckysheetDrawMain使用。默认为0。=LINESPLINES(D9:E24,3,5)\n                sparksetting['offsetY'] = lineWidth + 1;\n                sparksetting.height = height - (lineWidth + 1);\n                sparksetting.width = width;    //定义sparklines的通用色彩设置函数，可以设置 色表【colorList】索引数值 或者 具体颜色值\n                //定义sparklines的通用色彩设置函数，可以设置 色表【colorList】索引数值 或者 具体颜色值\n                var sparkColorSetting = function (attr, value) {\n                    if (!!value) {\n                        if (typeof value == 'number') {\n                            if (value > 19) {\n                                value = value % 20;\n                            }\n                            value = colorList[value];\n                        }\n                        sparksetting[attr] = value;\n                    }\n                };\n                if (lineColor == null) {\n                    lineColor = '#2ec7c9';\n                }\n                sparkColorSetting('lineColor', lineColor);    //sparkColorSetting(\"fillColor\", fillColor);\n                //sparkColorSetting(\"fillColor\", fillColor);\n                sparksetting['fillColor'] = 0;    //设置辅助线，可以支持min、max、avg、median等几个字符变量，或者具体的数值。\n                //设置辅助线，可以支持min、max、avg、median等几个字符变量，或者具体的数值。\n                if (!!normalValue) {\n                    if (typeof normalValue == 'string') {\n                        normalValue = normalValue.toLowerCase();\n                        var nv = null;\n                        if (normalValue == 'min') {\n                            nv = window.luckysheet_function.MIN.f({ 'data': dataformat });\n                        } else if (normalValue == 'max') {\n                            nv = window.luckysheet_function.MAX.f({ 'data': dataformat });\n                        } else if (normalValue == 'avg' || normalValue == 'mean') {\n                            nv = window.luckysheet_function.AVERAGE.f({ 'data': dataformat });\n                        } else if (normalValue == 'median') {\n                            nv = window.luckysheet_function.MEDIAN.f({ 'data': dataformat });\n                        }\n                        if (!!nv) {\n                            sparksetting['normalRangeMin'] = nv;\n                            sparksetting['normalRangeMax'] = nv;\n                        }\n                    } else {\n                        sparksetting['normalRangeMin'] = normalValue;\n                        sparksetting['normalRangeMax'] = normalValue;\n                    }\n                }\n                if (normalColor == null) {\n                    normalColor = '#000';\n                }\n                sparkColorSetting('normalRangeColor', normalColor);\n                sparkColorSetting('maxSpotColor', maxSpot);\n                sparkColorSetting('minSpotColor', minSpot);\n                if (spotRadius == null) {\n                    spotRadius = '1.5';\n                }\n                sparksetting['spotRadius'] = spotRadius;\n                var temp1 = luckysheetSparkline.init(dataformat, sparksetting);\n                return temp1;    // {\n                                 //     height:rowlen,\n                                 //     width:firstcolumnlen,\n                                 //     normalRangeMin:6,\n                                 //     normalRangeMax:6,\n                                 //     normalRangeColor:\"#000\"\n                                 // }\n                                 //return \"\";\n            } // {\n            //     height:rowlen,\n            //     width:firstcolumnlen,\n            //     normalRangeMin:6,\n            //     normalRangeMax:6,\n            //     normalRangeColor:\"#000\"\n            // }\n            //return \"\";\n            catch (e) {\n                var err = e;    //计算错误检测\n                //计算错误检测\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'AREASPLINES': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var cell_r = window.luckysheetCurrentRow;\n                var cell_c = window.luckysheetCurrentColumn;\n                var cell_fp = window.luckysheetCurrentFunction;    //色表，接下来会用到\n                //色表，接下来会用到\n                var colorList = formula.colorList;\n                var rangeValue = arguments[0];\n                var lineColor = arguments[1];\n                var fillColor = arguments[2];\n                var lineWidth = arguments[3];\n                var normalValue = arguments[4];\n                var normalColor = arguments[5];    // var maxSpot = arguments[5];\n                                                   // var minSpot = arguments[6];\n                                                   // var spotRadius = arguments[7];\n                                                   //定义需要格式化data数据\n                // var maxSpot = arguments[5];\n                // var minSpot = arguments[6];\n                // var spotRadius = arguments[7];\n                //定义需要格式化data数据\n                var dataformat = formula.readCellDataToOneArray(rangeValue);\n                let luckysheetfile = getluckysheetfile();\n                let index = getSheetIndex(Store.calculateSheetIndex);\n                let sheetdata = luckysheetfile[index].data;    //在下面获得该单元格的长度和宽度,同时考虑了合并单元格问题\n                //在下面获得该单元格的长度和宽度,同时考虑了合并单元格问题\n                var cellSize = cells.getCellRealSize(sheetdata, cell_r, cell_c);\n                var width = cellSize[0];\n                var height = cellSize[1];    //开始进行sparklines的详细设置，宽和高为单元格的宽高。\n                //开始进行sparklines的详细设置，宽和高为单元格的宽高。\n                var sparksetting = {};\n                if (lineWidth == null) {\n                    lineWidth = 1;\n                }\n                sparksetting['lineWidth'] = lineWidth;    //设置sparklines图表的宽高，线图的高会随着粗细而超出单元格高度，所以减去一个量，设置offsetY或者offsetX为渲染偏移量，传给luckysheetDrawMain使用。默认为0。=LINESPLINES(D9:E24,3,5)\n                //设置sparklines图表的宽高，线图的高会随着粗细而超出单元格高度，所以减去一个量，设置offsetY或者offsetX为渲染偏移量，传给luckysheetDrawMain使用。默认为0。=LINESPLINES(D9:E24,3,5)\n                sparksetting['offsetY'] = lineWidth + 1;\n                sparksetting.height = height - (lineWidth + 1);\n                sparksetting.width = width;    //定义sparklines的通用色彩设置函数，可以设置 色表【colorList】索引数值 或者 具体颜色值\n                //定义sparklines的通用色彩设置函数，可以设置 色表【colorList】索引数值 或者 具体颜色值\n                var sparkColorSetting = function (attr, value) {\n                    if (!!value) {\n                        if (typeof value == 'number') {\n                            if (value > 19) {\n                                value = value % 20;\n                            }\n                            value = colorList[value];\n                        }\n                        sparksetting[attr] = value;\n                    }\n                };\n                if (lineColor == null) {\n                    lineColor = '#2ec7c9';\n                }\n                sparkColorSetting('lineColor', lineColor);\n                sparkColorSetting('fillColor', fillColor);    // sparksetting[\"fillColor\"] = 0;\n                // sparksetting[\"fillColor\"] = 0;\n                if (lineWidth == null) {\n                    lineWidth = '1';\n                }\n                sparksetting['lineWidth'] = lineWidth;    //设置辅助线，可以支持min、max、avg、median等几个字符变量，或者具体的数值。\n                //设置辅助线，可以支持min、max、avg、median等几个字符变量，或者具体的数值。\n                if (!!normalValue) {\n                    if (typeof normalValue == 'string') {\n                        normalValue = normalValue.toLowerCase();\n                        var nv = null;\n                        if (normalValue == 'min') {\n                            nv = window.luckysheet_function.MIN.f({ 'data': dataformat });\n                        } else if (normalValue == 'max') {\n                            nv = window.luckysheet_function.MAX.f({ 'data': dataformat });\n                        } else if (normalValue == 'avg' || normalValue == 'mean') {\n                            nv = window.luckysheet_function.AVERAGE.f({ 'data': dataformat });\n                        } else if (normalValue == 'median') {\n                            nv = window.luckysheet_function.MEDIAN.f({ 'data': dataformat });\n                        }\n                        if (!!nv) {\n                            sparksetting['normalRangeMin'] = nv;\n                            sparksetting['normalRangeMax'] = nv;\n                        }\n                    } else {\n                        sparksetting['normalRangeMin'] = normalValue;\n                        sparksetting['normalRangeMax'] = normalValue;\n                    }\n                }\n                if (normalColor == null) {\n                    normalColor = '#000';\n                }\n                sparkColorSetting('normalRangeColor', normalColor);    // sparkColorSetting(\"maxSpotColor\", maxSpot);\n                                                                       // sparkColorSetting(\"minSpotColor\", minSpot);\n                                                                       // if(spotRadius==null){\n                                                                       //     spotRadius = \"1.5\";\n                                                                       // }\n                                                                       // sparksetting[\"spotRadius\"] = spotRadius;\n                // sparkColorSetting(\"maxSpotColor\", maxSpot);\n                // sparkColorSetting(\"minSpotColor\", minSpot);\n                // if(spotRadius==null){\n                //     spotRadius = \"1.5\";\n                // }\n                // sparksetting[\"spotRadius\"] = spotRadius;\n                var temp1 = luckysheetSparkline.init(dataformat, sparksetting);\n                return temp1;    // {\n                                 //     height:rowlen,\n                                 //     width:firstcolumnlen,\n                                 //     normalRangeMin:6,\n                                 //     normalRangeMax:6,\n                                 //     normalRangeColor:\"#000\"\n                                 // }\n                                 //return \"\";\n            } // {\n            //     height:rowlen,\n            //     width:firstcolumnlen,\n            //     normalRangeMin:6,\n            //     normalRangeMax:6,\n            //     normalRangeColor:\"#000\"\n            // }\n            //return \"\";\n            catch (e) {\n                var err = e;    //计算错误检测\n                //计算错误检测\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'COLUMNSPLINES': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var cell_r = window.luckysheetCurrentRow;\n                var cell_c = window.luckysheetCurrentColumn;\n                var cell_fp = window.luckysheetCurrentFunction;    //色表，接下来会用到\n                //色表，接下来会用到\n                var colorList = formula.colorList;\n                var rangeValue = arguments[0];    //定义需要格式化data数据\n                //定义需要格式化data数据\n                var dataformat = formula.readCellDataToOneArray(rangeValue);\n                let luckysheetfile = getluckysheetfile();\n                let index = getSheetIndex(Store.calculateSheetIndex);\n                let sheetdata = luckysheetfile[index].data;    //在下面获得该单元格的长度和宽度,同时考虑了合并单元格问题\n                //在下面获得该单元格的长度和宽度,同时考虑了合并单元格问题\n                var cellSize = cells.getCellRealSize(sheetdata, cell_r, cell_c);\n                var width = cellSize[0];\n                var height = cellSize[1];    //开始进行sparklines的详细设置，宽和高为单元格的宽高。\n                //开始进行sparklines的详细设置，宽和高为单元格的宽高。\n                var sparksetting = {};    //设置sparklines图表的宽高，线图的高会随着粗细而超出单元格高度，所以减去一个量，设置offsetY或者offsetX为渲染偏移量，传给luckysheetDrawMain使用。默认为0。=LINESPLINES(D9:E24,3,5)\n                //设置sparklines图表的宽高，线图的高会随着粗细而超出单元格高度，所以减去一个量，设置offsetY或者offsetX为渲染偏移量，传给luckysheetDrawMain使用。默认为0。=LINESPLINES(D9:E24,3,5)\n                sparksetting.height = height;\n                sparksetting.width = width;    //定义sparklines的通用色彩设置函数，可以设置 色表【colorList】索引数值 或者 具体颜色值\n                //定义sparklines的通用色彩设置函数，可以设置 色表【colorList】索引数值 或者 具体颜色值\n                var sparkColorSetting = function (attr, value) {\n                    if (!!value) {\n                        if (typeof value == 'number') {\n                            if (value > 19) {\n                                value = value % 20;\n                            }\n                            value = colorList[value];\n                        }\n                        sparksetting[attr] = value;\n                    }\n                };\n                var barSpacing = arguments[1];\n                var barColor = arguments[2];\n                var negBarColor = arguments[3];\n                var chartRangeMax = arguments[4];    ////具体实现\n                ////具体实现\n                sparksetting['type'] = 'column';\n                if (barSpacing == null) {\n                    barSpacing = '1';\n                }\n                sparksetting['barSpacing'] = barSpacing;\n                if (barColor == null) {\n                    barColor = '#fc5c5c';\n                }\n                sparkColorSetting('barColor', barColor);\n                if (negBarColor == null) {\n                    negBarColor = '#97b552';\n                }\n                sparkColorSetting('negBarColor', negBarColor);\n                if (chartRangeMax == null || chartRangeMax === false || typeof chartRangeMax != 'number') {\n                    sparksetting['chartRangeMax'] = undefined;\n                } else {\n                    sparksetting['chartRangeMax'] = chartRangeMax;\n                }\n                var colorLists = formula.sparklinesColorMap(arguments);\n                if (!!colorLists) {\n                    sparksetting['colorMap'] = colorLists;\n                }    ////具体实现\n                ////具体实现\n                var temp1 = luckysheetSparkline.init(dataformat, sparksetting);\n                return temp1;\n            } catch (e) {\n                var err = e;    //计算错误检测\n                //计算错误检测\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'STACKCOLUMNSPLINES': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var cell_r = window.luckysheetCurrentRow;\n                var cell_c = window.luckysheetCurrentColumn;\n                var cell_fp = window.luckysheetCurrentFunction;    //色表，接下来会用到\n                //色表，接下来会用到\n                var colorList = formula.colorList;\n                var rangeValue = arguments[0];    //定义需要格式化data数据\n                                                  //var dataformat = formula.readCellDataToOneArray(rangeValue);\n                //定义需要格式化data数据\n                //var dataformat = formula.readCellDataToOneArray(rangeValue);\n                var dataformat = [];\n                var data = [];\n                if (rangeValue != null && rangeValue.data != null) {\n                    data = rangeValue.data;\n                }\n                if (getObjType(data) == 'array') {\n                    data = formula.getPureValueByData(data);\n                } else if (getObjType(data) == 'object') {\n                    data = data.v;\n                    return [data];\n                } else {\n                    if (/\\{.*?\\}/.test(data)) {\n                        data = data.replace(/\\{/g, '[').replace(/\\}/g, ']');\n                    }\n                    data = new Function('return ' + data)();\n                }\n                var stackconfig = arguments[1];\n                var offsetY = data.length;\n                if (stackconfig == null || !!stackconfig) {\n                    for (var c = 0; c < data[0].length; c++) {\n                        var colstr = '';\n                        for (var r = 0; r < data.length; r++) {\n                            colstr += data[r][c] + ':';\n                        }\n                        colstr = colstr.substr(0, colstr.length - 1);\n                        dataformat.push(colstr);\n                    }\n                } else {\n                    for (var r = 0; r < data.length; r++) {\n                        var rowstr = '';\n                        for (var c = 0; c < data[0].length; c++) {\n                            rowstr += data[r][c] + ':';\n                        }\n                        rowstr = rowstr.substr(0, rowstr.length - 1);\n                        dataformat.push(rowstr);\n                    }\n                    var offsetY = data[0].length;\n                }\n                let luckysheetfile = getluckysheetfile();\n                let index = getSheetIndex(Store.calculateSheetIndex);\n                let sheetdata = luckysheetfile[index].data;    //在下面获得该单元格的长度和宽度,同时考虑了合并单元格问题\n                //在下面获得该单元格的长度和宽度,同时考虑了合并单元格问题\n                var cellSize = cells.getCellRealSize(sheetdata, cell_r, cell_c);\n                var width = cellSize[0];\n                var height = cellSize[1];    //开始进行sparklines的详细设置，宽和高为单元格的宽高。\n                //开始进行sparklines的详细设置，宽和高为单元格的宽高。\n                var sparksetting = {};    //设置sparklines图表的宽高，线图的高会随着粗细而超出单元格高度，所以减去一个量，设置offsetY或者offsetX为渲染偏移量，传给luckysheetDrawMain使用。默认为0。=LINESPLINES(D9:E24,3,5)\n                //设置sparklines图表的宽高，线图的高会随着粗细而超出单元格高度，所以减去一个量，设置offsetY或者offsetX为渲染偏移量，传给luckysheetDrawMain使用。默认为0。=LINESPLINES(D9:E24,3,5)\n                sparksetting.height = height;\n                sparksetting.width = width;    //sparksetting.offsetY = offsetY;\n                                               //定义sparklines的通用色彩设置函数，可以设置 色表【colorList】索引数值 或者 具体颜色值\n                //sparksetting.offsetY = offsetY;\n                //定义sparklines的通用色彩设置函数，可以设置 色表【colorList】索引数值 或者 具体颜色值\n                var sparkColorSetting = function (attr, value) {\n                    if (!!value) {\n                        if (typeof value == 'number') {\n                            if (value > 19) {\n                                value = value % 20;\n                            }\n                            value = colorList[value];\n                        }\n                        sparksetting[attr] = value;\n                    }\n                };\n                var barSpacing = arguments[2];\n                var chartRangeMax = arguments[3];    ////具体实现\n                ////具体实现\n                sparksetting['type'] = 'column';\n                if (barSpacing == null) {\n                    barSpacing = '1';\n                }\n                sparksetting['barSpacing'] = barSpacing;\n                if (chartRangeMax == null || chartRangeMax === false || typeof chartRangeMax != 'number') {\n                    sparksetting['chartRangeMax'] = undefined;\n                } else {\n                    sparksetting['chartRangeMax'] = chartRangeMax;\n                }\n                var colorLists = formula.sparklinesColorMap(arguments, 4);\n                if (!!colorLists) {\n                    sparksetting['colorMap'] = colorLists;\n                }    ////具体实现\n                ////具体实现\n                var temp1 = luckysheetSparkline.init(dataformat, sparksetting);\n                return temp1;\n            } catch (e) {\n                var err = e;    //计算错误检测\n                //计算错误检测\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'BARSPLINES': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var cell_r = window.luckysheetCurrentRow;\n                var cell_c = window.luckysheetCurrentColumn;\n                var cell_fp = window.luckysheetCurrentFunction;    //色表，接下来会用到\n                //色表，接下来会用到\n                var colorList = formula.colorList;\n                var rangeValue = arguments[0];    //定义需要格式化data数据\n                //定义需要格式化data数据\n                var dataformat = formula.readCellDataToOneArray(rangeValue);\n                let luckysheetfile = getluckysheetfile();\n                let index = getSheetIndex(Store.calculateSheetIndex);\n                let sheetdata = luckysheetfile[index].data;    //在下面获得该单元格的长度和宽度,同时考虑了合并单元格问题\n                //在下面获得该单元格的长度和宽度,同时考虑了合并单元格问题\n                var cellSize = cells.getCellRealSize(sheetdata, cell_r, cell_c);\n                var width = cellSize[0];\n                var height = cellSize[1];    //开始进行sparklines的详细设置，宽和高为单元格的宽高。\n                //开始进行sparklines的详细设置，宽和高为单元格的宽高。\n                var sparksetting = {};    //设置sparklines图表的宽高，线图的高会随着粗细而超出单元格高度，所以减去一个量，设置offsetY或者offsetX为渲染偏移量，传给luckysheetDrawMain使用。默认为0。=LINESPLINES(D9:E24,3,5)\n                //设置sparklines图表的宽高，线图的高会随着粗细而超出单元格高度，所以减去一个量，设置offsetY或者offsetX为渲染偏移量，传给luckysheetDrawMain使用。默认为0。=LINESPLINES(D9:E24,3,5)\n                sparksetting.height = height;\n                sparksetting.width = width;    //定义sparklines的通用色彩设置函数，可以设置 色表【colorList】索引数值 或者 具体颜色值\n                //定义sparklines的通用色彩设置函数，可以设置 色表【colorList】索引数值 或者 具体颜色值\n                var sparkColorSetting = function (attr, value) {\n                    if (!!value) {\n                        if (typeof value == 'number') {\n                            if (value > 19) {\n                                value = value % 20;\n                            }\n                            value = colorList[value];\n                        }\n                        sparksetting[attr] = value;\n                    }\n                };\n                var barSpacing = arguments[1];\n                var barColor = arguments[2];\n                var negBarColor = arguments[3];\n                var chartRangeMax = arguments[4];    ////具体实现\n                ////具体实现\n                sparksetting['type'] = 'bar';\n                if (barSpacing == null) {\n                    barSpacing = '1';\n                }\n                sparksetting['barSpacing'] = barSpacing;\n                if (barColor == null) {\n                    barColor = '#fc5c5c';\n                }\n                sparkColorSetting('barColor', barColor);\n                if (negBarColor == null) {\n                    negBarColor = '#97b552';\n                }\n                sparkColorSetting('negBarColor', negBarColor);\n                if (chartRangeMax == null || chartRangeMax === false || typeof chartRangeMax != 'number') {\n                    sparksetting['chartRangeMax'] = undefined;\n                } else {\n                    sparksetting['chartRangeMax'] = chartRangeMax;\n                }\n                var colorLists = formula.sparklinesColorMap(arguments);\n                if (!!colorLists) {\n                    sparksetting['colorMap'] = colorLists;\n                } \n                ////具体实现\n                var temp1 = luckysheetSparkline.init(dataformat, sparksetting);\n                return temp1;\n            } catch (e) {\n                var err = e;    \n                //计算错误检测\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'STACKBARSPLINES': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var cell_r = window.luckysheetCurrentRow;\n                var cell_c = window.luckysheetCurrentColumn;\n                var cell_fp = window.luckysheetCurrentFunction;    //色表，接下来会用到\n                //色表，接下来会用到\n                var colorList = formula.colorList;\n                var rangeValue = arguments[0];    //定义需要格式化data数据\n                                                  //var dataformat = formula.readCellDataToOneArray(rangeValue);\n                //定义需要格式化data数据\n                //var dataformat = formula.readCellDataToOneArray(rangeValue);\n                var dataformat = [];\n                var data = [];\n                if (rangeValue != null && rangeValue.data != null) {\n                    data = rangeValue.data;\n                }\n                if (getObjType(data) == 'array') {\n                    data = formula.getPureValueByData(data);\n                } else if (getObjType(data) == 'object') {\n                    data = data.v;\n                    return [data];\n                } else {\n                    if (/\\{.*?\\}/.test(data)) {\n                        data = data.replace(/\\{/g, '[').replace(/\\}/g, ']');\n                    }\n                    data = new Function('return ' + data)();\n                }\n                var stackconfig = arguments[1];\n                var offsetY = data.length;\n                if (stackconfig == null || !!stackconfig) {\n                    for (var c = 0; c < data[0].length; c++) {\n                        var colstr = '';\n                        for (var r = 0; r < data.length; r++) {\n                            colstr += data[r][c] + ':';\n                        }\n                        colstr = colstr.substr(0, colstr.length - 1);\n                        dataformat.push(colstr);\n                    }\n                } else {\n                    for (var r = 0; r < data.length; r++) {\n                        var rowstr = '';\n                        for (var c = 0; c < data[0].length; c++) {\n                            rowstr += data[r][c] + ':';\n                        }\n                        rowstr = rowstr.substr(0, rowstr.length - 1);\n                        dataformat.push(rowstr);\n                    }\n                    var offsetY = data[0].length;\n                }\n                let luckysheetfile = getluckysheetfile();\n                let index = getSheetIndex(Store.calculateSheetIndex);\n                let sheetdata = luckysheetfile[index].data;    //在下面获得该单元格的长度和宽度,同时考虑了合并单元格问题\n                //在下面获得该单元格的长度和宽度,同时考虑了合并单元格问题\n                var cellSize = cells.getCellRealSize(sheetdata, cell_r, cell_c);\n                var width = cellSize[0];\n                var height = cellSize[1];    //开始进行sparklines的详细设置，宽和高为单元格的宽高。\n                //开始进行sparklines的详细设置，宽和高为单元格的宽高。\n                var sparksetting = {};    //设置sparklines图表的宽高，线图的高会随着粗细而超出单元格高度，所以减去一个量，设置offsetY或者offsetX为渲染偏移量，传给luckysheetDrawMain使用。默认为0。=LINESPLINES(D9:E24,3,5)\n                //设置sparklines图表的宽高，线图的高会随着粗细而超出单元格高度，所以减去一个量，设置offsetY或者offsetX为渲染偏移量，传给luckysheetDrawMain使用。默认为0。=LINESPLINES(D9:E24,3,5)\n                sparksetting.height = height;\n                sparksetting.width = width;    //sparksetting.offsetY = offsetY;\n                                               //定义sparklines的通用色彩设置函数，可以设置 色表【colorList】索引数值 或者 具体颜色值\n                //sparksetting.offsetY = offsetY;\n                //定义sparklines的通用色彩设置函数，可以设置 色表【colorList】索引数值 或者 具体颜色值\n                var sparkColorSetting = function (attr, value) {\n                    if (!!value) {\n                        if (typeof value == 'number') {\n                            if (value > 19) {\n                                value = value % 20;\n                            }\n                            value = colorList[value];\n                        }\n                        sparksetting[attr] = value;\n                    }\n                };\n                var barSpacing = arguments[2];\n                var chartRangeMax = arguments[3];    ////具体实现\n                ////具体实现\n                sparksetting['type'] = 'bar';\n                if (barSpacing == null) {\n                    barSpacing = '1';\n                }\n                sparksetting['barSpacing'] = barSpacing;\n                if (chartRangeMax == null || chartRangeMax === false || typeof chartRangeMax != 'number') {\n                    sparksetting['chartRangeMax'] = undefined;\n                } else {\n                    sparksetting['chartRangeMax'] = chartRangeMax;\n                }\n                var colorLists = formula.sparklinesColorMap(arguments, 4);\n                if (!!colorLists) {\n                    sparksetting['colorMap'] = colorLists;\n                }    ////具体实现\n                ////具体实现\n                var temp1 = luckysheetSparkline.init(dataformat, sparksetting);\n                return temp1;\n            } catch (e) {\n                var err = e;    //计算错误检测\n                //计算错误检测\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'DISCRETESPLINES': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var cell_r = window.luckysheetCurrentRow;\n                var cell_c = window.luckysheetCurrentColumn;\n                var cell_fp = window.luckysheetCurrentFunction;    //色表，接下来会用到\n                //色表，接下来会用到\n                var colorList = formula.colorList;\n                var rangeValue = arguments[0];    //定义需要格式化data数据\n                //定义需要格式化data数据\n                var dataformat = formula.readCellDataToOneArray(rangeValue);\n                let luckysheetfile = getluckysheetfile();\n                let index = getSheetIndex(Store.calculateSheetIndex);\n                let sheetdata = luckysheetfile[index].data;    //在下面获得该单元格的长度和宽度,同时考虑了合并单元格问题\n                //在下面获得该单元格的长度和宽度,同时考虑了合并单元格问题\n                var cellSize = cells.getCellRealSize(sheetdata, cell_r, cell_c);\n                var width = cellSize[0];\n                var height = cellSize[1];    //开始进行sparklines的详细设置，宽和高为单元格的宽高。\n                //开始进行sparklines的详细设置，宽和高为单元格的宽高。\n                var sparksetting = {};    //设置sparklines图表的宽高，线图的高会随着粗细而超出单元格高度，所以减去一个量，设置offsetY或者offsetX为渲染偏移量，传给luckysheetDrawMain使用。默认为0。=LINESPLINES(D9:E24,3,5)\n                //设置sparklines图表的宽高，线图的高会随着粗细而超出单元格高度，所以减去一个量，设置offsetY或者offsetX为渲染偏移量，传给luckysheetDrawMain使用。默认为0。=LINESPLINES(D9:E24,3,5)\n                sparksetting.height = height;\n                sparksetting.width = width;    //定义sparklines的通用色彩设置函数，可以设置 色表【colorList】索引数值 或者 具体颜色值\n                //定义sparklines的通用色彩设置函数，可以设置 色表【colorList】索引数值 或者 具体颜色值\n                var sparkColorSetting = function (attr, value) {\n                    if (!!value) {\n                        if (typeof value == 'number') {\n                            if (value > 19) {\n                                value = value % 20;\n                            }\n                            value = colorList[value];\n                        }\n                        sparksetting[attr] = value;\n                    }\n                };\n                var thresholdValue = arguments[1];\n                var barColor = arguments[2];\n                var negBarColor = arguments[3];    ////具体实现\n                ////具体实现\n                sparksetting['type'] = 'discrete';\n                if (thresholdValue == null) {\n                    thresholdValue = 0;\n                }\n                sparksetting['thresholdValue'] = thresholdValue;\n                if (barColor == null) {\n                    barColor = '#2ec7c9';\n                }\n                sparkColorSetting('lineColor', barColor);\n                if (negBarColor == null) {\n                    negBarColor = '#fc5c5c';\n                }\n                sparkColorSetting('thresholdColor', negBarColor);    ////具体实现\n                ////具体实现\n                var temp1 = luckysheetSparkline.init(dataformat, sparksetting);\n                return temp1;\n            } catch (e) {\n                var err = e;    //计算错误检测\n                //计算错误检测\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'TRISTATESPLINES': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var cell_r = window.luckysheetCurrentRow;\n                var cell_c = window.luckysheetCurrentColumn;\n                var cell_fp = window.luckysheetCurrentFunction;    //色表，接下来会用到\n                //色表，接下来会用到\n                var colorList = formula.colorList;\n                var rangeValue = arguments[0];    //定义需要格式化data数据\n                //定义需要格式化data数据\n                var dataformat = formula.readCellDataToOneArray(rangeValue);\n                let luckysheetfile = getluckysheetfile();\n                let index = getSheetIndex(Store.calculateSheetIndex);\n                let sheetdata = luckysheetfile[index].data;    //在下面获得该单元格的长度和宽度,同时考虑了合并单元格问题\n                //在下面获得该单元格的长度和宽度,同时考虑了合并单元格问题\n                var cellSize = cells.getCellRealSize(sheetdata, cell_r, cell_c);\n                var width = cellSize[0];\n                var height = cellSize[1];    //开始进行sparklines的详细设置，宽和高为单元格的宽高。\n                //开始进行sparklines的详细设置，宽和高为单元格的宽高。\n                var sparksetting = {};    //设置sparklines图表的宽高，线图的高会随着粗细而超出单元格高度，所以减去一个量，设置offsetY或者offsetX为渲染偏移量，传给luckysheetDrawMain使用。默认为0。=LINESPLINES(D9:E24,3,5)\n                //设置sparklines图表的宽高，线图的高会随着粗细而超出单元格高度，所以减去一个量，设置offsetY或者offsetX为渲染偏移量，传给luckysheetDrawMain使用。默认为0。=LINESPLINES(D9:E24,3,5)\n                sparksetting.height = height;\n                sparksetting.width = width;    //定义sparklines的通用色彩设置函数，可以设置 色表【colorList】索引数值 或者 具体颜色值\n                //定义sparklines的通用色彩设置函数，可以设置 色表【colorList】索引数值 或者 具体颜色值\n                var sparkColorSetting = function (attr, value) {\n                    if (!!value) {\n                        if (typeof value == 'number') {\n                            if (value > 19) {\n                                value = value % 20;\n                            }\n                            value = colorList[value];\n                        }\n                        sparksetting[attr] = value;\n                    }\n                };\n                var barSpacing = arguments[1];\n                var barColor = arguments[2];\n                var negBarColor = arguments[3];\n                var zeroBarColor = arguments[4];    ////具体实现\n                ////具体实现\n                sparksetting['type'] = 'tristate';\n                if (barSpacing == null) {\n                    barSpacing = '1';\n                }\n                sparksetting['barSpacing'] = barSpacing;\n                if (barColor == null) {\n                    barColor = '#fc5c5c';\n                }\n                sparkColorSetting('barColor', barColor);\n                if (negBarColor == null) {\n                    negBarColor = '#97b552';\n                }\n                sparkColorSetting('negBarColor', negBarColor);\n                if (zeroBarColor == null) {\n                    zeroBarColor = '#999';\n                }\n                sparkColorSetting('zeroBarColor', zeroBarColor);\n                var colorLists = formula.sparklinesColorMap(arguments);\n                if (!!colorLists) {\n                    sparksetting['colorMap'] = colorLists;\n                }    ////具体实现\n                ////具体实现\n                var temp1 = luckysheetSparkline.init(dataformat, sparksetting);\n                return temp1;\n            } catch (e) {\n                var err = e;    //计算错误检测\n                //计算错误检测\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'PIESPLINES': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var cell_r = window.luckysheetCurrentRow;\n                var cell_c = window.luckysheetCurrentColumn;\n                var cell_fp = window.luckysheetCurrentFunction;    //色表，接下来会用到\n                //色表，接下来会用到\n                var colorList = formula.colorList;\n                var rangeValue = arguments[0];    //定义需要格式化data数据\n                //定义需要格式化data数据\n                var dataformat = formula.readCellDataToOneArray(rangeValue);\n                let luckysheetfile = getluckysheetfile();\n                let index = getSheetIndex(Store.calculateSheetIndex);\n                let sheetdata = luckysheetfile[index].data;    //在下面获得该单元格的长度和宽度,同时考虑了合并单元格问题\n                //在下面获得该单元格的长度和宽度,同时考虑了合并单元格问题\n                var cellSize = cells.getCellRealSize(sheetdata, cell_r, cell_c);\n                var width = cellSize[0];\n                var height = cellSize[1];    //开始进行sparklines的详细设置，宽和高为单元格的宽高。\n                //开始进行sparklines的详细设置，宽和高为单元格的宽高。\n                var sparksetting = {};    //设置sparklines图表的宽高，线图的高会随着粗细而超出单元格高度，所以减去一个量，设置offsetY或者offsetX为渲染偏移量，传给luckysheetDrawMain使用。默认为0。=LINESPLINES(D9:E24,3,5)\n                //设置sparklines图表的宽高，线图的高会随着粗细而超出单元格高度，所以减去一个量，设置offsetY或者offsetX为渲染偏移量，传给luckysheetDrawMain使用。默认为0。=LINESPLINES(D9:E24,3,5)\n                sparksetting.height = height;\n                sparksetting.width = width;    //定义sparklines的通用色彩设置函数，可以设置 色表【colorList】索引数值 或者 具体颜色值\n                //定义sparklines的通用色彩设置函数，可以设置 色表【colorList】索引数值 或者 具体颜色值\n                var sparkColorSetting = function (attr, value) {\n                    if (!!value) {\n                        if (typeof value == 'number') {\n                            if (value > 19) {\n                                value = value % 20;\n                            }\n                            value = colorList[value];\n                        }\n                        sparksetting[attr] = value;\n                    }\n                };\n                var offset = arguments[1];\n                var borderWidth = arguments[2];\n                var borderColor = arguments[3];    ////具体实现\n                ////具体实现\n                sparksetting['type'] = 'pie';\n                if (offset == null) {\n                    offset = 0;\n                }\n                sparksetting['offset'] = offset;\n                if (borderWidth == null) {\n                    borderWidth = 0;\n                }\n                sparkColorSetting('borderWidth', borderWidth);\n                if (borderColor == null) {\n                    borderColor = '#97b552';\n                }\n                sparkColorSetting('borderColor', borderColor);\n                var colorLists = formula.sparklinesColorMap(arguments, 4);\n                if (!!colorLists) {\n                    sparksetting['colorMap'] = colorLists;\n                }    ////具体实现\n                ////具体实现\n                var temp1 = luckysheetSparkline.init(dataformat, sparksetting);\n                return temp1;\n            } catch (e) {\n                var err = e;    //计算错误检测\n                //计算错误检测\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'BOXSPLINES': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var cell_r = window.luckysheetCurrentRow;\n                var cell_c = window.luckysheetCurrentColumn;\n                var cell_fp = window.luckysheetCurrentFunction;    //色表，接下来���用到\n                //色表，接下来���用到\n                var colorList = formula.colorList;\n                var rangeValue = arguments[0];    //定义需要格式化data数据\n                //定义需要格式化data数据\n                var dataformat = formula.readCellDataToOneArray(rangeValue);\n                let luckysheetfile = getluckysheetfile();\n                let index = getSheetIndex(Store.calculateSheetIndex);\n                let sheetdata = luckysheetfile[index].data;    //在下面获得该单元格的长度和宽度,同时考虑了合并单元格问题\n                //在下面获得该单元格的长度和宽度,同时考虑了合并单元格问题\n                var cellSize = cells.getCellRealSize(sheetdata, cell_r, cell_c);\n                var width = cellSize[0];\n                var height = cellSize[1];    //开始进行sparklines的详细设置，宽和高为单元格的宽高。\n                //开始进行sparklines的详细设置，宽和高为单元格的宽高。\n                var sparksetting = {};    //设置sparklines图表的宽高，线图的高会随着粗细而超出单元格高度，所以减去一个量，设置offsetY或者offsetX为渲染偏移量，传给luckysheetDrawMain使用。默认为0。=LINESPLINES(D9:E24,3,5)\n                //设置sparklines图表的宽高，线图的高会随着粗细而超出单元格高度，所以减去一个量，设置offsetY或者offsetX为渲染偏移量，传给luckysheetDrawMain使用。默认为0。=LINESPLINES(D9:E24,3,5)\n                sparksetting.height = height;\n                sparksetting.width = width;    //定义sparklines的通用色彩设置函数，可以设置 色表【colorList】索引数值 或者 具体颜色值\n                //定义sparklines的通用色彩设置函数，可以设置 色表【colorList】索引数值 或者 具体颜色值\n                var sparkColorSetting = function (attr, value) {\n                    if (!!value) {\n                        if (typeof value == 'number') {\n                            if (value > 19) {\n                                value = value % 20;\n                            }\n                            value = colorList[value];\n                        }\n                        sparksetting[attr] = value;\n                    }\n                };\n                var outlierIQR = arguments[1];\n                var target = arguments[2];\n                var spotRadius = arguments[3];    ////具体实现\n                ////具体实现\n                sparksetting['type'] = 'box';\n                if (outlierIQR == null) {\n                    outlierIQR = 1.5;\n                }\n                sparksetting['outlierIQR'] = outlierIQR;\n                if (target == null) {\n                    target = 0;\n                } else {\n                    sparkColorSetting('target', target);\n                }\n                if (spotRadius == null) {\n                    spotRadius = 1.5;\n                }\n                sparkColorSetting('spotRadius', spotRadius);    ////具体实现\n                ////具体实现\n                var temp1 = luckysheetSparkline.init(dataformat, sparksetting);\n                return temp1;\n            } catch (e) {\n                var err = e;    //计算错误检测\n                //计算错误检测\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'BULLETSPLINES': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var cell_r = window.luckysheetCurrentRow;\n                var cell_c = window.luckysheetCurrentColumn;\n                var cell_fp = window.luckysheetCurrentFunction;    //色表，接下来会用到\n                //色表，接下来会用到\n                var colorList = formula.colorList;    //var rangeValue = arguments[0];\n                                                      //定义需要格式化data数据\n                                                      //var dataformat = formula.readCellDataToOneArray(rangeValue);\n                //var rangeValue = arguments[0];\n                //定义需要格式化data数据\n                //var dataformat = formula.readCellDataToOneArray(rangeValue);\n                let luckysheetfile = getluckysheetfile();\n                let index = getSheetIndex(Store.calculateSheetIndex);\n                let sheetdata = luckysheetfile[index].data;    //在下面获得该单元格的长度和宽度,同时考虑了合并单元格问题\n                //在下面获得该单元格的长度和宽度,同时考虑了合并单元格问题\n                var cellSize = cells.getCellRealSize(sheetdata, cell_r, cell_c);\n                var width = cellSize[0];\n                var height = cellSize[1];    //开始进行sparklines的详细设置，宽和高为单元格的宽高。\n                //开始进行sparklines的详细设置，宽和高为单元格的宽高。\n                var sparksetting = {};    //设置sparklines图表的宽高，线图的高会随着粗细而超出单元格高度，所以减去一个量，设置offsetY或者offsetX为渲染偏移量，传给luckysheetDrawMain使用。默认为0。=LINESPLINES(D9:E24,3,5)\n                //设置sparklines图表的宽高，线图的高会随着粗细而超出单元格高度，所以减去一个量，设置offsetY或者offsetX为渲染偏移量，传给luckysheetDrawMain使用。默认为0。=LINESPLINES(D9:E24,3,5)\n                sparksetting.height = height;\n                sparksetting.width = width;    //定义sparklines的通用色彩设置函数，可以设置 色表【colorList】索引数值 或者 具体颜色值\n                //定义sparklines的通用色彩设置函数，可以设置 色表【colorList】索引数值 或者 具体颜色值\n                var sparkColorSetting = function (attr, value) {\n                    if (!!value) {\n                        if (typeof value == 'number') {\n                            if (value > 19) {\n                                value = value % 20;\n                            }\n                            value = colorList[value];\n                        }\n                        sparksetting[attr] = value;\n                    }\n                };    ////具体实现\n                ////具体实现\n                var dataformat = [];\n                luckysheet_getValue(arguments);\n                var data1 = formula.getValueByFuncData(arguments[0]);\n                var data2 = formula.getValueByFuncData(arguments[1]);\n                dataformat.push(data1);\n                dataformat.push(data2);\n                for (var i = 2; i < arguments.length; i++) {\n                    dataformat.push(formula.getValueByFuncData(arguments[i]));\n                }\n                sparksetting['type'] = 'bullet';    ////具体实现\n                ////具体实现\n                var temp1 = luckysheetSparkline.init(dataformat, sparksetting);\n                return temp1;\n            } catch (e) {\n                var err = e;    //计算错误检测\n                //计算错误检测\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        //动态数组公式\n        'SORT': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //要排序的范围或数组\n                var data_array = arguments[0];\n                var array = [], rowlen = 1, collen = 1;\n                if (getObjType(data_array) == 'array') {\n                    if (getObjType(data_array[0]) == 'array') {\n                        if (!func_methods.isDyadicArr(data_array)) {\n                            return formula.error.v;\n                        }\n                        for (var i = 0; i < data_array.length; i++) {\n                            var rowArr = [];\n                            for (var j = 0; j < data_array[i].length; j++) {\n                                var number = data_array[i][j];\n                                rowArr.push(number);\n                            }\n                            array.push(rowArr);\n                        }\n                        rowlen = array.length;\n                        collen = array[0].length;\n                    } else {\n                        for (var i = 0; i < data_array.length; i++) {\n                            var number = data_array[i];\n                            array.push(number);\n                        }\n                        rowlen = array.length;\n                    }\n                } else if (getObjType(data_array) == 'object' && data_array.startCell != null) {\n                    if (data_array.data != null) {\n                        if (getObjType(data_array.data) == 'array') {\n                            for (var i = 0; i < data_array.data.length; i++) {\n                                var rowArr = [];\n                                for (var j = 0; j < data_array.data[i].length; j++) {\n                                    if (data_array.data[i][j] != null) {\n                                        var number = data_array.data[i][j].v;\n                                        if (isRealNull(number)) {\n                                            number = 0;\n                                        }\n                                        rowArr.push(number);\n                                    } else {\n                                        rowArr.push(0);\n                                    }\n                                }\n                                array.push(rowArr);\n                            }\n                            rowlen = array.length;\n                            collen = array[0].length;\n                        } else {\n                            var number = data_array.data.v;\n                            if (isRealNull(number)) {\n                                number = 0;\n                            }\n                            array.push(number);\n                        }\n                    } else {\n                        array.push(0);\n                    }\n                } else {\n                    var number = data_array;\n                    array.push(number);\n                }    //表示要排序的行或列的数字（默认row1/col1）\n                //表示要排序的行或列的数字（默认row1/col1）\n                var sort_index = 1;\n                if (arguments.length >= 2) {\n                    sort_index = func_methods.getFirstValue(arguments[1]);\n                    if (valueIsError(sort_index)) {\n                        return sort_index;\n                    }\n                    if (!isRealNum(sort_index)) {\n                        return formula.error.v;\n                    }\n                    sort_index = parseInt(sort_index);\n                }    //表示所需排序顺序的数字；1表示升序（默认），-1表示降序。\n                //表示所需排序顺序的数字；1表示升序（默认），-1表示降序。\n                var sort_order = 1;\n                if (arguments.length >= 3) {\n                    sort_order = func_methods.getFirstValue(arguments[2]);\n                    if (valueIsError(sort_order)) {\n                        return sort_order;\n                    }\n                    if (!isRealNum(sort_order)) {\n                        return formula.error.v;\n                    }\n                    sort_order = Math.floor(parseFloat(sort_order));\n                }    //表示所需排序方向的逻辑值；按行排序为FALSE（默认），按列排序为TRUE。\n                //表示所需排序方向的逻辑值；按行排序为FALSE（默认），按列排序为TRUE。\n                var by_col = false;\n                if (arguments.length == 4) {\n                    by_col = func_methods.getCellBoolen(arguments[3]);\n                    if (valueIsError(by_col)) {\n                        return by_col;\n                    }\n                }\n                if (by_col) {\n                    if (sort_index < 1 || sort_index > rowlen) {\n                        return formula.error.v;\n                    }\n                } else {\n                    if (sort_index < 1 || sort_index > collen) {\n                        return formula.error.v;\n                    }\n                }\n                if (sort_order != 1 && sort_order != -1) {\n                    return formula.error.v;\n                }    //计算\n                //计算\n                var asc = function (x, y) {\n                    if (getObjType(x) == 'array') {\n                        x = x[sort_index - 1];\n                    }\n                    if (getObjType(y) == 'array') {\n                        y = y[sort_index - 1];\n                    }\n                    if (!isNaN(x) && !isNaN(y)) {\n                        return x - y;\n                    } else if (!isNaN(x)) {\n                        return -1;\n                    } else if (!isNaN(y)) {\n                        return 1;\n                    } else {\n                        if (x > y) {\n                            return 1;\n                        } else if (x < y) {\n                            return -1;\n                        }\n                    }\n                };\n                var desc = function (x, y) {\n                    if (getObjType(x) == 'array') {\n                        x = x[sort_index - 1];\n                    }\n                    if (getObjType(y) == 'array') {\n                        y = y[sort_index - 1];\n                    }\n                    if (!isNaN(x) && !isNaN(y)) {\n                        return y - x;\n                    } else if (!isNaN(x)) {\n                        return 1;\n                    } else if (!isNaN(y)) {\n                        return -1;\n                    } else {\n                        if (x > y) {\n                            return -1;\n                        } else if (x < y) {\n                            return 1;\n                        }\n                    }\n                };\n                if (by_col) {\n                    array = array[0].map(function (col, a) {\n                        return array.map(function (row) {\n                            return row[a];\n                        });\n                    });\n                    if (sort_order == 1) {\n                        array.sort(asc);\n                    }\n                    if (sort_order == -1) {\n                        array.sort(desc);\n                    }\n                    array = array[0].map(function (col, b) {\n                        return array.map(function (row) {\n                            return row[b];\n                        });\n                    });\n                } else {\n                    if (sort_order == 1) {\n                        array.sort(asc);\n                    }\n                    if (sort_order == -1) {\n                        array.sort(desc);\n                    }\n                }\n                return array;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'FILTER': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //要筛选的数组或范围\n                var data_array = arguments[0];\n                var array = [];\n                if (getObjType(data_array) == 'array') {\n                    if (getObjType(data_array[0]) == 'array' && !func_methods.isDyadicArr(data_array)) {\n                        return formula.error.v;\n                    }\n                    array = func_methods.getDataDyadicArr(data_array);\n                } else if (getObjType(data_array) == 'object' && data_array.startCell != null) {\n                    array = func_methods.getCellDataDyadicArr(data_array, 'number');\n                } else {\n                    var rowArr = [];\n                    rowArr.push(parseFloat(data_array));\n                    array.push(rowArr);\n                }\n                var rowlen = array.length, collen = array[0].length;    //布尔数组，其高度或宽度与数组相同\n                //布尔数组，其高度或宽度与数组相同\n                var data_include = arguments[1];\n                var include = [];\n                var type = 'row';    //筛选方式 row - 行，col - 列\n                //筛选方式 row - 行，col - 列\n                if (getObjType(data_include) == 'array') {\n                    if (getObjType(data_include[0]) == 'array') {\n                        if (!func_methods.isDyadicArr(data_include)) {\n                            return formula.error.v;\n                        }\n                        if (data_include.length > 1 && data_include[0].length > 1) {\n                            return formula.error.v;\n                        }\n                        if (data_include.length > 1) {\n                            if (data_include.length != array.length) {\n                                return formula.error.v;\n                            }\n                            type = 'row';\n                            for (var i = 0; i < data_include.length; i++) {\n                                var txt = data_include[i][0];\n                                if (getObjType(txt) == 'boolean') {\n                                } else if (getObjType(txt) == 'string' && (txt.toLowerCase() == 'true' || txt.toLowerCase() == 'false')) {\n                                    if (txt.toLowerCase() == 'true') {\n                                        txt = true;\n                                    } else if (txt.toLowerCase() == 'false') {\n                                        txt = false;\n                                    }\n                                } else if (isRealNum(txt)) {\n                                    txt = parseFloat(txt);\n                                    txt = txt == 0 ? false : true;\n                                } else {\n                                    return formula.error.v;\n                                }\n                                include.push(txt);\n                            }\n                        }\n                        if (data_include[0].length > 1) {\n                            if (data_include[0].length != array[0].length) {\n                                return formula.error.v;\n                            }\n                            type = 'col';\n                            for (var i = 0; i < data_include[0].length; i++) {\n                                var txt = data_include[0][i];\n                                if (getObjType(txt) == 'boolean') {\n                                } else if (getObjType(txt) == 'string' && (txt.toLowerCase() == 'true' || txt.toLowerCase() == 'false')) {\n                                    if (txt.toLowerCase() == 'true') {\n                                        txt = true;\n                                    } else if (txt.toLowerCase() == 'false') {\n                                        txt = false;\n                                    }\n                                } else if (isRealNum(txt)) {\n                                    txt = parseFloat(txt);\n                                    txt = txt == 0 ? false : true;\n                                } else {\n                                    return formula.error.v;\n                                }\n                                include.push(txt);\n                            }\n                        }\n                    } else {\n                        if (data_include.length != array[0].length) {\n                            return formula.error.v;\n                        }\n                        type = 'col';\n                        for (var i = 0; i < data_include.length; i++) {\n                            var txt = data_include[i];\n                            if (getObjType(txt) == 'boolean') {\n                            } else if (getObjType(txt) == 'string' && (txt.toLowerCase() == 'true' || txt.toLowerCase() == 'false')) {\n                                if (txt.toLowerCase() == 'true') {\n                                    txt = true;\n                                } else if (txt.toLowerCase() == 'false') {\n                                    txt = false;\n                                }\n                            } else if (isRealNum(txt)) {\n                                txt = parseFloat(txt);\n                                txt = txt == 0 ? false : true;\n                            } else {\n                                return formula.error.v;\n                            }\n                            include.push(txt);\n                        }\n                    }\n                } else if (getObjType(data_include) == 'object' && data_include.data != null && getObjType(data_include.data) == 'array') {\n                    if (data_include.data.length > 1 && data_include.data[0].length > 1) {\n                        return formula.error.v;\n                    }\n                    if (data_include.data.length > 1) {\n                        if (data_include.data.length != array.length) {\n                            return formula.error.v;\n                        }\n                        type = 'row';\n                        for (var i = 0; i < data_include.data.length; i++) {\n                            var txt = data_include.data[i][0].v;\n                            if (isRealNull(txt)) {\n                                txt = 0;\n                            }\n                            if (getObjType(txt) == 'boolean') {\n                            } else if (getObjType(txt) == 'string' && (txt.toLowerCase() == 'true' || txt.toLowerCase() == 'false')) {\n                                if (txt.toLowerCase() == 'true') {\n                                    txt = true;\n                                } else if (txt.toLowerCase() == 'false') {\n                                    txt = false;\n                                }\n                            } else if (isRealNum(txt)) {\n                                txt = parseFloat(txt);\n                                txt = txt == 0 ? false : true;\n                            } else {\n                                return formula.error.v;\n                            }\n                            include.push(txt);\n                        }\n                    }\n                    if (data_include.data[0].length > 1) {\n                        if (data_include.data[0].length != array[0].length) {\n                            return formula.error.v;\n                        }\n                        type = 'col';\n                        for (var i = 0; i < data_include.data[0].length; i++) {\n                            var txt = data_include.data[0][i].v;\n                            if (isRealNull(txt)) {\n                                txt = 0;\n                            }\n                            if (getObjType(txt) == 'boolean') {\n                            } else if (getObjType(txt) == 'string' && (txt.toLowerCase() == 'true' || txt.toLowerCase() == 'false')) {\n                                if (txt.toLowerCase() == 'true') {\n                                    txt = true;\n                                } else if (txt.toLowerCase() == 'false') {\n                                    txt = false;\n                                }\n                            } else if (isRealNum(txt)) {\n                                txt = parseFloat(txt);\n                                txt = txt == 0 ? false : true;\n                            } else {\n                                return formula.error.v;\n                            }\n                            include.push(txt);\n                        }\n                    }\n                } else {\n                    return formula.error.v;\n                }    //如果包含数组中的所有值都为空(filter不返回任何值)，则返回的值\n                //如果包含数组中的所有值都为空(filter不返回任何值)，则返回的值\n                var if_empty = '';\n                if (arguments.length == 3) {\n                    if_empty = func_methods.getFirstValue(arguments[2], 'text');\n                    if (valueIsError(if_empty)) {\n                        return if_empty;\n                    }\n                }    //计算\n                //计算\n                var result = [];\n                if (type == 'row') {\n                    for (var i = 0; i < array.length; i++) {\n                        if (include[i]) {\n                            result.push(array[i]);\n                        }\n                    }\n                } else {\n                    for (var i = 0; i < array.length; i++) {\n                        var rowArr = [];\n                        for (var j = 0; j < array[0].length; j++) {\n                            if (include[j]) {\n                                rowArr.push(array[i][j]);\n                            }\n                        }\n                        if (rowArr.length > 0) {\n                            result.push(rowArr);\n                        }\n                    }\n                }\n                if (result.length == 0) {\n                    return if_empty;\n                }\n                return result;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'UNIQUE': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //从其返回唯一值的数组或区域\n                var data_array = arguments[0];\n                var array = [];\n                if (getObjType(data_array) == 'array') {\n                    if (getObjType(data_array[0]) == 'array' && !func_methods.isDyadicArr(data_array)) {\n                        return formula.error.v;\n                    }\n                    array = func_methods.getDataDyadicArr(data_array);\n                } else if (getObjType(data_array) == 'object' && data_array.startCell != null) {\n                    array = func_methods.getCellDataDyadicArr(data_array, 'number');\n                } else {\n                    var rowArr = [];\n                    rowArr.push(parseFloat(data_array));\n                    array.push(rowArr);\n                }    //逻辑值，指示如何比较；按行 = FALSE 或省略；按列 = TRUE\n                //逻辑值，指示如何比较；按行 = FALSE 或省略；按列 = TRUE\n                var by_col = false;\n                if (arguments.length >= 2) {\n                    by_col = func_methods.getCellBoolen(arguments[1]);\n                    if (valueIsError(by_col)) {\n                        return by_col;\n                    }\n                }    //逻辑值，仅返回唯一值中出现一次 = TRUE；包括所有唯一值 = FALSE 或省略\n                //逻辑值，仅返回唯一值中出现一次 = TRUE；包括所有唯一值 = FALSE 或省略\n                var occurs_once = false;\n                if (arguments.length == 3) {\n                    occurs_once = func_methods.getCellBoolen(arguments[2]);\n                    if (valueIsError(occurs_once)) {\n                        return occurs_once;\n                    }\n                }    //计算\n                //计算\n                if (by_col) {\n                    array = array[0].map(function (col, a) {\n                        return array.map(function (row) {\n                            return row[a];\n                        });\n                    });\n                    var strObj = {}, strArr = [];\n                    var allUnique = [];\n                    for (var i = 0; i < array.length; i++) {\n                        var str = '';\n                        for (var j = 0; j < array[i].length; j++) {\n                            str += array[i][j].toString() + '|||';\n                        }\n                        strArr.push(str);\n                        if (!(str in strObj)) {\n                            strObj[str] = 0;\n                            allUnique.push(array[i]);\n                        }\n                    }\n                    if (occurs_once) {\n                        var oneUnique = [];\n                        for (var i = 0; i < strArr.length; i++) {\n                            if (strArr.indexOf(strArr[i]) == strArr.lastIndexOf(strArr[i])) {\n                                oneUnique.push(array[i]);\n                            }\n                        }\n                        oneUnique = oneUnique[0].map(function (col, a) {\n                            return oneUnique.map(function (row) {\n                                return row[a];\n                            });\n                        });\n                        return oneUnique;\n                    } else {\n                        allUnique = allUnique[0].map(function (col, a) {\n                            return allUnique.map(function (row) {\n                                return row[a];\n                            });\n                        });\n                        return allUnique;\n                    }\n                } else {\n                    var strObj = {}, strArr = [];\n                    var allUnique = [];\n                    for (var i = 0; i < array.length; i++) {\n                        var str = '';\n                        for (var j = 0; j < array[i].length; j++) {\n                            str += array[i][j].toString() + '|||';\n                        }\n                        strArr.push(str);\n                        if (!(str in strObj)) {\n                            strObj[str] = 0;\n                            allUnique.push(array[i]);\n                        }\n                    }\n                    if (occurs_once) {\n                        var oneUnique = [];\n                        for (var i = 0; i < strArr.length; i++) {\n                            if (strArr.indexOf(strArr[i]) == strArr.lastIndexOf(strArr[i])) {\n                                oneUnique.push(array[i]);\n                            }\n                        }\n                        return oneUnique;\n                    } else {\n                        return allUnique;\n                    }\n                }\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'RANDARRAY': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //要返回的行数\n                var rows = 1;\n                if (arguments.length >= 1) {\n                    rows = func_methods.getFirstValue(arguments[0]);\n                    if (valueIsError(rows)) {\n                        return rows;\n                    }\n                    if (!isRealNum(rows)) {\n                        return formula.error.v;\n                    }\n                    rows = parseInt(rows);\n                }    //要返回的列数\n                //要返回的列数\n                var cols = 1;\n                if (arguments.length == 2) {\n                    cols = func_methods.getFirstValue(arguments[1]);\n                    if (valueIsError(cols)) {\n                        return cols;\n                    }\n                    if (!isRealNum(cols)) {\n                        return formula.error.v;\n                    }\n                    cols = parseInt(cols);\n                }\n                if (rows <= 0 || cols <= 0) {\n                    return formula.error.v;\n                }    //计算\n                //计算\n                var result = [];\n                for (var i = 0; i < rows; i++) {\n                    var result_row = [];\n                    for (var j = 0; j < cols; j++) {\n                        result_row.push(Math.random().toFixed(9));\n                    }\n                    result.push(result_row);\n                }\n                return result;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'SEQUENCE': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //要返回的行数\n                var rows = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(rows)) {\n                    return rows;\n                }\n                if (!isRealNum(rows)) {\n                    return formula.error.v;\n                }\n                rows = parseInt(rows);    //要返回的列数\n                //要返回的列数\n                var cols = 1;\n                if (arguments.length >= 2) {\n                    cols = func_methods.getFirstValue(arguments[1]);\n                    if (valueIsError(cols)) {\n                        return cols;\n                    }\n                    if (!isRealNum(cols)) {\n                        return formula.error.v;\n                    }\n                    cols = parseInt(cols);\n                }    //序列中的第一个数字\n                //序列中的第一个数字\n                var start = 1;\n                if (arguments.length >= 3) {\n                    start = func_methods.getFirstValue(arguments[2]);\n                    if (valueIsError(start)) {\n                        return start;\n                    }\n                    if (!isRealNum(start)) {\n                        return formula.error.v;\n                    }\n                    start = parseFloat(start);\n                }    //序列中每个序列值的增量\n                //序列中每个序列值的增量\n                var step = 1;\n                if (arguments.length == 4) {\n                    step = func_methods.getFirstValue(arguments[3]);\n                    if (valueIsError(step)) {\n                        return step;\n                    }\n                    if (!isRealNum(step)) {\n                        return formula.error.v;\n                    }\n                    step = parseFloat(step);\n                }\n                if (rows <= 0 || cols <= 0) {\n                    return formula.error.v;\n                }    //计算\n                //计算\n                var result = [];\n                for (var i = 0; i < rows; i++) {\n                    var result_row = [];\n                    for (var j = 0; j < cols; j++) {\n                        var number = start + step * (j + cols * i);\n                        result_row.push(number);\n                    }\n                    result.push(result_row);\n                }\n                return result;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'EVALUATE': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var cell_r = window.luckysheetCurrentRow;\n                var cell_c = window.luckysheetCurrentColumn;\n                var sheetindex_now = window.luckysheetCurrentIndex;    //公式文本\n                //公式文本\n                var strtext = func_methods.getFirstValue(arguments[0]).toString();\n                if (valueIsError(strtext)) {\n                    return strtext;\n                }    //在文本公式前面添加=\n                //在文本公式前面添加=\n                if (strtext.trim().indexOf('=') != 0) {\n                    strtext = '=' + strtext;\n                }    //console.log(strtext);\n                //console.log(strtext);\n                var result_this = formula.execstringformula(strtext, cell_r, cell_c, sheetindex_now);\n                return result_this[1];\n            } catch (e) {\n                var err = e;    //计算错误检测\n                //计算错误检测\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        }\n    };\n    return functionImplementation;\n});"]}