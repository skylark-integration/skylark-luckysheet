{"version":3,"sources":["function/functionImplementation.js"],"names":["define","m_func","m_matrix_methods","m_get","menuButton","luckysheetSparkline","formula","func_methods","editor","m_datecontroll","m_validate","m_refresh","m_format","m_sort","m_getdata","m_util","Store","dayjs","numeral","luckysheet_getcelldata","luckysheet_parseData","luckysheet_getValue","inverse","getSheetIndex","getluckysheetfile","getRangetxt","isdatetime","diff","isdatatype","isRealNum","isRealNull","valueIsError","error","jfrefreshgrid","genarate","update","orderbydata","getcellvalue","getObjType","ABCatNum","chatatABC","numFormat","SUM","arguments","length","this","m","na","i","errorParamCheck","p","v","dataArr","data","isDyadicArr","concat","getDataArr","startCell","getCellDataArr","push","toString","toLowerCase","sum","luckysheet_calcADPMM","e","err","errorInfo","AVERAGE","count","d","COUNT","COUNTA","MAX","max","parseFloat","MIN","min","AGE_BY_IDCARD","UUserCard","getFirstValue","window","luckysheet_function","ISIDCARD","f","birthday","BIRTHDAY_BY_IDCARD","cuurentdate","age","SEX_BY_IDCARD","parseInt","substr","substring","datetype","format","PROVINCE_BY_IDCARD","native","provinceArray","classlist","province","CITY_BY_IDCARD","dataNum","cityData","code","title","STAR_BY_IDCARD","month","Date","getMonth","day","getDate","arr","ANIMAL_BY_IDCARD","list","Array","index","getFullYear","isNaN","idcard","test","DM_TEXT_CUTWORD","cell_r","luckysheetCurrentRow","cell_c","luckysheetCurrentColumn","cell_fp","luckysheetCurrentFunction","text","$","post","type","flowdata","execFunctionGroup","row","column","DM_TEXT_TFIDF","set","deepCopyFlowData","DM_TEXT_TEXTRANK","DATA_CN_STOCK_CLOSE","stockcode","date","data_date","ct","t","price","stockCode","DATA_CN_STOCK_OPEN","DATA_CN_STOCK_MAX","DATA_CN_STOCK_MIN","DATA_CN_STOCK_VOLUMN","DATA_CN_STOCK_AMOUNT","ISDATE","SUMIF","rangeData","rangeRow","rowl","rangeCol","coll","criteria","getRangeArray","sumRangeData","sumRangeStart","sumRangeRow","sumRangeCol","sumRangeSheet","sheetName","col","replace","real_ABC","real_Num","acompareb","TAN","number","Math","tan","TANH","e2","exp","CEILING","significance","nm","ceil","ATAN","atan","ASINH","log","sqrt","ABS","abs","ACOS","acos","ACOSH","MULTINOMIAL","divisor","factorial","ATANH","ATAN2","number_x","number_y","atan2","COUNTBLANK","r","c","COSH","INT","floor","str","getcellrange","cell","ISEVEN","ISODD","LCM","o","y","j","n","undefined","pop","splice","pow","LN","LOG","base","LOG10","MOD","modulus","MROUND","multiple","round","ODD","temp","SUMSQ","COMBIN","number_chosen","SUBTOTAL","function_num","data_function_num","rowArr","prototype","slice","apply","shift","result","value","compute","PRODUCT","STDEVA","STDEVP","VAR_S","VAR_P","ASIN","asin","COUNTIF","range","data_range","data_criteria","getCriteriaResult","criter","matches","indexOf","isWildcard","Function","RADIANS","PI","RAND","random","COUNTUNIQUE","UNIQUE","DEGREES","ERFC","jStat","erfc","EVEN","EXP","FACT","FACTDOUBLE","factorialDouble","FLOOR","precision","GCD","x","RANDBETWEEN","bottom","top","ROUND","digits","ROUNDDOWN","ROUNDUP","SERIESSUM","data_coefficients","coefficients","SIGN","SIN","sin","SINH","SQRT","SQRTPI","GAMMALN","gammaln","COS","cos","TRUNC","QUOTIENT","numerator","denominator","POWER","power","SUMIFS","args","results","COUNTIFS","HARMEAN","den","len","HYPGEOMDIST","sample_s","number_sample","population_s","number_pop","cumulative","getCellBoolen","pdf","M","N","cdf","INTERCEPT","data_known_y","known_y","data_known_x","known_x","data_y","data_x","num_y","num_x","variance_s","xmean","mean","ymean","num","b","KURT","dataArr_n","standardDeviation_s","sigma","stdev","LARGE","sort","a","standardDeviation","GEOMEAN","geomean","RANK_EQ","data_ref","ref","ref_n","order","RANK_AVG","PERCENTRANK_EXC","uniques","match","lastIndexOf","PERCENTRANK_INC","FORECAST","FISHERINV","e2y","FISHER","MODE_SNGL","currentItem","maxItems","resultIndex","WEIBULL_DIST","alpha","beta","AVEDEV","subtract","AVERAGEA","BINOM_DIST","number_s","trials","probability_s","binomial","BINOM_INV","CONFIDENCE_NORM","standard_dev","size","normalci","CORREL","corrcoeff","COVARIANCE_P","mean1","mean2","COVARIANCE_S","covariance","DEVSQ","EXPON_DIST","lambda","exponential","AVERAGEIF","vnow","AVERAGEIFS","PERMUT","TRIMMEAN","data_dataArr","percent","trim","array","idx","initial","PERCENTILE_EXC","k","l","fl","PERCENTILE_INC","PEARSON","den1","den2","NORM_S_INV","probability","normal","inv","NORM_S_DIST","z","NORM_INV","NORM_DIST","NEGBINOM_DIST","number_f","negbin","MINA","MEDIAN","median","MAXA","LOGNORM_INV","lognormal","LOGNORM_DIST","Z_TEST","PROB","data_x_range","data_prob_range","x_range","prob_range","prob_range_sum","num_x_range","num_prob_range","lower_limit","upper_limit","QUARTILE_EXC","data_array","quart","QUARTILE_INC","POISSON_DIST","poisson","RSQ","T_DIST","degrees_freedom","studentt","T_DIST_2T","T_DIST_RT","T_INV","deg_freedom","T_INV_2T","T_TEST","tails","df","diff_arr","mean_x","mean_y","s_x","s_y","F_DIST","degrees_freedom1","degrees_freedom2","centralF","F_DIST_RT","VARA","VARPA","STEYX","lft","STANDARDIZE","SMALL","SLOPE","SKEW","SKEW_P","m2","m3","ADDRESS","row_num","column_num","abs_num","A1","sheet_text","INDIRECT","ref_text","currentSheet","calculateSheetIndex","sheetdata","iscelldata","cellrange","execFunctionGlobalData","ef","name","ROW","reference","ROWS","COLUMN","COLUMNS","OFFSET","rows","cols","height","width","cellRow0","cellCol0","cellRow1","cellCol1","MATCH","lookup_value","data_lookup_array","lookup_array","indexValue","match_type","VLOOKUP","data_table_array","table_array","getCellDataDyadicArr","col_index_num","range_lookup","localeCompare","HLOOKUP","searchkey","isaccurate","matchv","showv","LOOKUP","range2","rangeNow","mat","INDEX","isReference","getDataDyadicArr","rowlen","collen","row_index","column_index","GETPIVOTDATA","CHOOSE","index_num","data_result","HYPERLINK","TIME","hour","minute","second","time","TIMEVALUE","time_text","getCellDate","isValid","get","EOMONTH","start_date","months","add","EDATE","SECOND","seconds","MINUTE","minutes","HOUR","hours","NOW","NETWORKDAYS","NETWORKDAYS_INTL","WEEKEND_TYPES","end_date","weekend","holidays","getCellrangeDate","days","total","weekday","dec","charAt","ISOWEEKNUM","isoWeeks","WEEKNUM","WEEK_STARTS","serial_number","return_type","week_start","inc","isoWeekday","WEEKDAY","DAY","DAYS","DAYS360","method","sd","ed","sm","em","smd","year","emd","DATE","DATEVALUE","date_text","DATEDIF","moment","fromOADate","startDate","endDate","unit","startM","endM","WORKDAY","WORKDAY_INTL","YEAR","YEARFRAC","basis","sy","ey","ylength","isLeapYear","feb29Between","years","average","TODAY","MONTH","EFFECT","nominal_rate","npery","DOLLAR","decimals","DOLLARDE","fractional_dollar","fraction","LN10","LN2","DOLLARFR","decimal_dollar","DB","cost","salvage","life","period","rate","toFixed","current","ceiling","DDB","factor","RATE","nper","pmt","pv","fv","guess","iter","close","t1","t2","newRate","CUMPRINC","start_period","end_period","payment","PMT","principal","FV","COUPNUM","settlement","maturity","frequency","SYD","TBILLEQ","discount","TBILLYIELD","pr","TBILLPRICE","PV","ACCRINT","issue","first_interest","par","calc_method","ACCRINTM","COUPDAYBS","interest","maxCount","di","COUPDAYS","d1","d2","COUPDAYSNC","COUPNCD","COUPPCD","term","FVSCHEDULE","data_schedule","schedule","schedule_n","future","YIELD","redemption","yld","PRICE","DSR","E","T2","YIELDDISC","NOMINAL","effect_rate","XIRR","data_values","values","values_n","dates","positive","negative","epsRate","resultValue","irrResult","irrResultDeriv","frac","resultRate","contLoop","MIRR","finance_rate","reinvest_rate","payments","incomes","NPV","IRR","XNPV","CUMIPMT","IPMT","per","PPMT","INTRATE","investment","DSC","A","T1","PRICEDISC","PRICEMAT","td","tm","ty","B","DSM","DIM","RECEIVED","DISC","NPER","SLN","DURATION","coupon","sum1","sum2","MDURATION","BIN2DEC","stringified","BIN2HEX","places","toUpperCase","join","BIN2OCT","DEC2BIN","DEC2HEX","DEC2OCT","HEX2BIN","decimal","HEX2DEC","HEX2OCT","OCT2BIN","OCT2DEC","OCT2HEX","COMPLEX","real_num","i_num","suffix","sign","IMREAL","inumber","plus","minus","last","Number","IMAGINARY","IMCONJUGATE","IMABS","DELTA","number1","number2","IMSUM","IMSUB","inumber1","inumber2","unit1","unit2","IMPRODUCT","IMDIV","NOT","logical","TRUE","FALSE","AND","IFERROR","value_if_error","IF","logical_test","value_if_true","value_if_false","OR","NE","value1","value2","EQ","GT","GTE","LT","LTE","ADD","MINUS","MULTIPLY","DIVIDE","CONCAT","UNARY_PERCENT","CONCATENATE","CODE","charCodeAt","CHAR","String","fromCharCode","ARABIC","CM","D","CD","C","XC","L","XL","X","IX","V","IV","I","ROMAN","REGEXEXTRACT","regular_expression","RegExp","REGEXMATCH","REGEXREPLACE","replacement","T","FIXED","no_commas","FIND","find_text","within_text","start_num","FINDB","strArr","split","JOIN","separator","LEFT","num_chars","RIGHT","MID","LEN","LENB","LOWER","UPPER","EXACT","text1","text2","REPLACE","old_text","new_text","REPT","number_times","SEARCH","foundAt","SUBSTITUTE","instance_num","reg","CLEAN","textArr","TEXT","format_text","TRIM","VALUE","PROPER","word","CONVERT","from_unit","to_unit","alt","units","binary_prefixes","Yi","Zi","Ei","Pi","Ti","Gi","Mi","ki","unit_prefixes","Y","Z","P","G","h","u","from","to","base_from_unit","base_to_unit","from_multiplier","to_multiplier","from_binary_prefix","from_unit_prefix","to_binary_prefix","to_unit_prefix","SUMX2MY2","data_array_x","array_x","data_array_y","array_y","SUMX2PY2","SUMXMY2","TRANSPOSE","map","TREND","known_y_rowlen","known_y_collen","known_x_rowlen","known_x_collen","new_x","data_new_x","const_b","ls","arr_x","arr_y","xSum","ySum","xySum","x2Sum","xMean","yMean","leastSquare","FREQUENCY","data_data_array","data_array_n","data_bins_array","bins_array","bins_array_n","count1","count2","GROWTH","LINEST","LOGEST","MDETERM","callee","Ma","MINVERSE","MMULT","data_array1","array1","data_array2","array2","SUMPRODUCT","ISFORMULA","data_cell","CELL","info_type","data_info_type","data_reference","file","currentSheetIndex","col_index","Object","fa","ht","cfg","config","defaultcollen","NA","ERROR_TYPE","error_val","data_error_val","error_obj","#NULL!","#DIV/0!","#VALUE!","#REF!","#NAME?","#NUM!","#N/A","#GETTING_DATA","ISBLANK","ISERR","data_value","ISERROR","ISLOGICAL","ISNA","ISNONTEXT","ISNUMBER","ISREF","ISTEXT","TYPE","TO_DATE","TO_PURE_NUMBER","TO_TEXT","TO_DOLLARS","TO_PERCENT","DGET","data_database","database","field","resultIndexes","findResultIndex","targetFields","findField","rest","DMAX","maxValue","DMIN","minValue","DAVERAGE","DCOUNT","targetValues","DCOUNTA","DPRODUCT","compact","DSTDEV","DSTDEVP","DSUM","DVAR","DVARP","LINESPLINES","colorList","rangeValue","lineColor","lineWidth","normalValue","normalColor","maxSpot","minSpot","spotRadius","dataformat","readCellDataToOneArray","cellSize","getCellRealSize","sparksetting","sparkColorSetting","attr","nv","init","AREASPLINES","fillColor","COLUMNSPLINES","barSpacing","barColor","negBarColor","chartRangeMax","colorLists","sparklinesColorMap","STACKCOLUMNSPLINES","getPureValueByData","stackconfig","colstr","rowstr","BARSPLINES","STACKBARSPLINES","DISCRETESPLINES","thresholdValue","TRISTATESPLINES","zeroBarColor","PIESPLINES","offset","borderWidth","borderColor","BOXSPLINES","outlierIQR","target","BULLETSPLINES","data1","getValueByFuncData","data2","SORT","sort_index","sort_order","by_col","asc","desc","FILTER","data_include","include","txt","if_empty","occurs_once","strObj","allUnique","oneUnique","RANDARRAY","result_row","SEQUENCE","start","step","EVALUATE","sheetindex_now","luckysheetCurrentIndex","strtext","execstringformula"],"mappings":"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,GAAIZ,EAAak2B,GACb,OAAOA,EAEXA,EAAUA,EAAQr0B,WAElB,IA89CIs0B,EA99CAC,IAEI,iBACA,IACA,KACA,UACA,GACA,EACA,uBAGA,iBACA,IACA,KACA,mBACA,GACA,EACA,uBAGA,iBACA,KACA,KACA,UACA,GACA,EACA,uBAGA,iBACA,KACA,KACA,UACA,GACA,EACA,uBAGA,eACA,KACA,KACA,QACA,GACA,EACA,uBAGA,eACA,OACA,KACA,QACA,GACA,EACA,uBAGA,iBACA,QACA,KACA,SACA,GACA,EACA,aAGA,SACA,IACA,KACA,oBACA,GACA,EACA,IAGA,mBACA,MACA,KACA,4BACA,GACA,EACA,IAGA,WACA,KACC,OACD,UACA,GACA,EACA,QAGA,MACA,KACA,KACA,QACA,GACA,EACA,MAGA,oBACA,KACA,KACA,UACA,GACA,EACA,uBAGA,MACA,MACA,KACA,YACA,GACA,EACA,MAGA,OACA,IACA,KACA,QACA,GACA,EACA,QAGA,YACA,KACA,KACA,iBACA,GACA,EACA,IAGA,MACA,OACC,KACD,eACA,GACA,EACA,IAGA,MACA,OACC,OACD,UACA,GACA,EACA,gBAGA,OACA,OACA,KACA,eACA,GACA,EACA,IAGA,UACA,KACA,KACA,sBACA,GACA,EACA,IAGA,2BACA,QACA,KACA,aACA,GACA,EACA,IAGA,UACA,IACA,KACA,mBACA,GACA,EACA,IAGA,iBACA,QACC,SACD,UACA,GACA,EACA,QAGA,aACA,OACC,QACD,UACA,GACA,EACA,gBAGA,aACA,OACC,QACD,UACA,GACA,EACA,eAGA,mBACA,OACC,QACD,UACA,GACA,EACA,uBAGA,cACA,KACA,KACA,UACA,GACA,EACA,IAGA,aACA,OACC,QACD,UACA,GACA,EACA,mBAGA,sBACA,QACC,SACD,UACA,GACA,EACA,aAGA,aACA,SAEI,UACA,SACA,YAEJ,UACA,GACA,EACA,sBAGA,aACA,OACC,QACD,UACA,GACA,EACA,gBAGA,MACA,MACA,KACA,UACA,GACA,EACA,iBAGA,SACA,MACC,KACD,QACA,GACA,EACA,uBAGA,MACA,KACC,OACD,QACA,GACA,EACA,QAGA,SACA,IACA,KACA,SACA,GACA,EACA,oBAGA,kBACA,OACA,KACA,eACA,GACA,EACA,mBAGA,OACA,OACC,MACD,SACA,GACA,EACA,OAGA,eACA,MACC,MACD,UACA,GACA,EACA,mBAGA,MACA,MACA,KACA,UACA,GACA,EACA,QAGA,MACA,OACC,KACD,UACA,GACA,EACA,OAGA,QACA,IACA,KACA,wBACA,GACA,EACA,IAGA,cACA,KACA,KACA,UACA,GACA,EACA,mBAGA,OACA,KACA,KACA,UACA,GACA,EACA,QAGA,aACA,MACA,KACA,UACA,GACA,EACA,kBAGA,MACA,MACA,KACA,gBACA,GACA,EACA,MAGA,SACA,MACA,KACA,UACA,GACA,EACA,gBAGA,QACA,KACC,MACD,yBACA,GACA,EACA,IAGA,QACA,QACA,KACA,QACA,GACA,EACA,aAGA,OACA,IACA,KACA,QACA,GACA,EACA,OAGA,OACA,KACA,KACA,iBACA,GACA,EACA,IAGA,uBACA,OACC,UACD,UACA,GACA,EACA,eAGA,UACA,KACA,KACA,QACA,GACA,EACA,MAGA,QACA,IACA,KACA,cACA,GACA,EACA,IAGA,QACA,KACA,KACA,aACA,GACA,EACA,IAGA,aACA,MACC,KACD,SACA,GACA,EACA,kBAGA,kBACA,OAEI,KACA,OAEJ,UACA,GACA,EACA,cAGA,OACA,KACC,MACD,QACA,GACA,EACA,OAGA,yBACA,SACA,KACA,UACA,GACA,EACA,YAGA,yBACA,QAEI,SACA,WAEJ,QACA,GACA,EACA,YAGA,uBACA,QACA,KACA,UACA,GACA,EACA,cAGA,eACA,SAEI,SACA,QAEJ,QACA,GACA,EACA,cAGA,OACA,KACA,KACA,UACA,GACA,EACA,QAGA,qBACA,UACA,KACA,QACA,GACA,EACA,eAGA,aACA,MACA,KACA,UACA,GACA,EACA,SAGA,QACA,IACA,KACA,UACA,GACA,EACA,IAGA,QACA,MACA,KACA,sBACA,GACA,EACA,IAGA,SACA,KACC,OACD,eACA,GACA,EACA,IAGA,WACA,KACA,KACA,QACA,GACA,EACA,IAGA,OACA,KACA,KACA,SACA,GACA,EACA,mBAGA,aACA,KACA,KACA,UACA,GACA,EACA,mBAGA,QACA,KAEI,IACA,MAEJ,UACA,GACA,EACA,OAGA,QACA,KACA,KACA,iBACA,GACA,EACA,IAGA,MACA,KACA,KACA,eACA,GACA,EACA,IAGA,UACA,KACA,KACA,iBACA,GACA,EACA,QAGA,kBACA,OACA,KACA,UACA,GACA,EACA,gBAGA,iBACA,OACC,QACD,SACA,GACA,EACA,qBAGA,mBACA,OACC,SACD,SACA,GACA,EACA,IAGA,2BACA,QACA,KACA,gBACA,GACA,EACA,IAGA,SACA,MACC,UACD,UACA,GACA,EACA,mBAGA,2BACA,OACA,KACA,uBACA,GACA,EACA,IAGA,QACA,IACA,KACA,UACA,GACA,EACA,IAGA,iBACA,MACA,KACA,SACA,GACA,EACA,SAGA,wBACA,OACA,KACA,YACA,GACA,EACA,UAGA,SACA,IACA,KACA,SACA,GACA,EACA,sBAGA,SACA,OACC,MACD,QACA,GACA,EACA,KAGA,kBACA,OACA,KACA,UACA,GACA,EACA,OAGA,OACA,MACA,KACA,uBACA,GACA,EACA,IAGA,SACA,SACA,KACA,QACA,GACA,EACA,OAGA,iBACA,IACA,KACA,UACA,GACA,EACA,uBAGA,eACA,KACA,KACA,QACA,GACA,EACA,uBAGA,gBACA,KACA,KACA,SACA,GACA,EACA,YAGA,eACA,aACA,KACA,QACA,GACA,EACA,uBAGA,gBACA,KACC,OACD,UACA,GACA,EACA,OAGA,SACA,IACA,KACA,SACA,GACA,EACA,IAGA,SACA,MACA,KACA,4BACA,GACA,EACA,mBAGA,MACA,IACA,KACA,uBACA,GACA,EACA,IAGA,aACA,MACA,KACA,QACA,GACA,EACA,gBAGA,SACA,KACA,KACA,YACA,GACA,EACA,IAGA,gBACA,OACA,KACA,qBACA,GACA,EACA,IAGA,eACA,KACA,KACA,SACA,GACA,EACA,YAGA,OACA,KACA,KACA,eACA,GACA,EACA,OAGA,kBACA,OACA,KACA,UACA,GACA,EACA,qBAGA,mBACA,QACC,UACD,UACA,GACA,EACA,qBAGA,QACA,IACA,KACA,qBACA,GACA,EACA,KAGA,OACA,OACA,KACA,SACA,GACA,EACA,YAGA,cACA,MACA,KACA,SACA,GACA,EACA,kBAGA,aACA,MACA,KACA,QACA,GACA,EACA,YAGA,QACA,KACA,KACA,UACA,GACA,EACA,gBAGA,SACA,MACA,KACA,SACA,GACA,EACA,IAGA,SACA,IACA,KACA,SACA,GACA,EACA,sBAGA,SACA,KACC,OACD,QACA,GACA,EACA,IAGA,sBACA,OACC,YACD,QACA,GACA,EACA,YAGA,UACA,IACA,KACA,0BACA,GACA,EACA,IAGA,UACA,KACA,KACA,mBACA,GACA,EACA,IAGA,OACA,KACA,KACA,QACA,GACA,EACA,cAGA,kBACA,QACC,SACD,QACA,GACA,EACA,QAGA,cACA,OACC,QACD,QACA,GACA,EACA,YAGA,cACA,OACC,QACD,QACA,GACA,EACA,WAGA,oBACA,OACC,QACD,QACA,GACA,EACA,sBAGA,eACA,KACA,KACA,QACA,GACA,EACA,IAGA,cACA,OACC,QACD,QACA,GACA,EACA,iBAGA,uBACA,QACC,SACD,QACA,GACA,EACA,UAGA,cACA,SAEI,UACA,SACA,YAEJ,QACA,GACA,EACA,oBAGA,cACA,OACC,QACD,QACA,GACA,EACA,YAGA,eACA,KACA,KACA,UACA,GACA,EACA,WAGA,YACA,KACA,KACA,eACA,GACA,EACA,IAGA,QACA,KACA,KACA,aACA,GACA,EACA,OAGA,SACA,KACA,KACA,uBACA,GACA,EACA,OAGA,QACA,QACA,KACA,QACA,GACA,EACA,aAGA,aACA,MACA,KACA,UACA,GACA,EACA,aAGA,WACA,MACA,KACA,UACA,GACA,EACA,aAGA,QACA,IACA,KACA,yBACA,GACA,EACA,IAGA,wBACA,IACA,KACA,UACA,GACA,EACA,QAGA,MACA,MACA,KACA,QACA,GACA,EACA,YAGA,QACA,IACA,KACA,QACA,GACA,EACA,MAGA,YACA,QACA,KACA,UACA,GACA,EACA,eAGA,cACA,SACA,KACA,UACA,GACA,EACA,YAGA,kBACA,SACA,KACA,UACA,GACA,EACA,aAGA,YACA,MACC,SACD,UACA,GACA,EACA,gBAGA,mBACA,YACA,KACA,UACA,GACA,EACA,cAGA,2BACA,UACA,KACA,QACA,GACA,EACA,aAGA,OACA,IACA,KACA,WACA,GACA,EACA,IAGA,OACA,IACA,KACA,SACA,GACA,EACA,IAGA,YACA,MACC,MACD,UACA,GACA,EACA,OAGA,QACA,KACA,KACA,iBACA,GACA,EACA,IAGA,OACA,KACA,KACA,UACA,GACA,EACA,QAGA,OACA,KACA,KACA,QACA,GACA,EACA,WAGJC,GACAC,IACI,OACA,GACA,sBACA,KACA,SAEJC,IACI,OACA,GACA,qBACA,KACA,SAEJC,IACI,OACA,GACA,mBACA,KACA,OAEJC,IACI,OACA,GACA,gBACA,KACA,QAEJC,IACI,OACA,GACA,cACA,KACA,QAEJC,IACI,OACA,GACA,WACA,KACA,QAEJC,IACI,OACA,GACA,QACA,KACA,QAEJC,IACI,OACA,GACA,KACA,KACA,SAGJC,GACAC,GACI,QACA,KACA,KAEJC,GACI,QACA,KACA,KAEJ5M,GACI,MACA,KACA,KAEJ6M,GACI,OACA,KACA,KAEJ1D,GACI,OACA,KACA,KAEJ2D,GACI,OACA,IACA,KAEJ/kB,GACI,OACA,IACA,KAEJuF,GACI,OACA,IACA,KAEJyf,GACI,QACA,IACA,KAEJl1B,GACI,QACA,GACA,KAEJK,GACI,OACA,GACA,KAEJqI,GACI,QACA,IACA,KAEJ5J,GACI,QACA,KACA,KAEJq2B,GACI,QACA,KACA,KAEJ5rB,GACI,OACA,KACA,KAEJrK,GACI,OACA,MACA,KAEJiC,GACI,QACA,MACA,KAEJwQ,GACI,OACA,MACA,KAEJ0E,GACI,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","file":"../../function/functionImplementation.js","sourcesContent":["define([\n    './func',\n    './matrix_methods',\n    '../methods/get',\n    '../controllers/menuButton',\n    '../controllers/sparkline',\n    '../global/formula',\n    '../global/func_methods',\n    '../global/editor',\n    '../global/datecontroll',\n    '../global/validate',\n    '../global/refresh',\n    '../global/format',\n    '../global/sort',\n    '../global/getdata',\n    '../utils/util',\n    '../store',\n    'skylark-moment',\n    '../vendors/numeral'\n], function (m_func, m_matrix_methods, m_get, menuButton, luckysheetSparkline, formula, func_methods, editor, m_datecontroll, m_validate, m_refresh, m_format, m_sort, m_getdata, m_util, Store, dayjs, numeral) {\n    'use strict';\n    const {luckysheet_getcelldata, luckysheet_parseData, luckysheet_getValue} = m_func;\n    const {inverse} = m_matrix_methods;\n    const {getSheetIndex, getluckysheetfile, getRangetxt} = m_get;\n    const {isdatetime, diff, isdatatype} = m_datecontroll;\n    const {isRealNum, isRealNull, valueIsError, error} = m_validate;\n    const {jfrefreshgrid} = m_refresh;\n    const {genarate, update} = m_format;\n    const {orderbydata} = m_sort;\n    const {getcellvalue} = m_getdata;\n    const {getObjType, ABCatNum, chatatABC, numFormat} = m_util;\n    //公式函数计算\n    const functionImplementation = {\n        'SUM': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var dataArr = [];\n                for (var i = 0; i < arguments.length; i++) {\n                    var data = arguments[i];\n                    if (getObjType(data) == 'array') {\n                        if (getObjType(data[0]) == 'array' && !func_methods.isDyadicArr(data)) {\n                            return formula.error.v;\n                        }\n                        dataArr = dataArr.concat(func_methods.getDataArr(data, true));\n                    } else if (getObjType(data) == 'object' && data.startCell != null) {\n                        dataArr = dataArr.concat(func_methods.getCellDataArr(data, 'number', true));\n                    } else {\n                        if (!isRealNum(data)) {\n                            if (getObjType(data) == 'boolean') {\n                                if (data.toString().toLowerCase() == 'true') {\n                                    dataArr.push(1);\n                                } else if (data.toString().toLowerCase() == 'false') {\n                                    dataArr.push(0);\n                                }\n                            } else {\n                                return formula.error.v;\n                            }\n                        } else {\n                            dataArr.push(data);\n                        }\n                    }\n                }\n                var sum = 0;\n                if (dataArr.length > 0) {\n                    for (var i = 0; i < dataArr.length; i++) {\n                        if (valueIsError(dataArr[i])) {\n                            return dataArr[i];\n                        }\n                        if (!isRealNum(dataArr[i])) {\n                            continue;\n                        }\n                        sum = luckysheet_calcADPMM(sum, '+', dataArr[i]);    // parseFloat(dataArr[i]);\n                    }\n                }\n                // parseFloat(dataArr[i]);\n                return sum;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'AVERAGE': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var dataArr = [];\n                for (var i = 0; i < arguments.length; i++) {\n                    var data = arguments[i];\n                    if (getObjType(data) == 'array') {\n                        if (getObjType(data[0]) == 'array') {\n                            if (!func_methods.isDyadicArr(data)) {\n                                return formula.error.v;\n                            }\n                            dataArr = dataArr.concat(func_methods.getDataArr(data, true));\n                        } else {\n                            dataArr = dataArr.concat(data);\n                        }\n                    } else if (getObjType(data) == 'object' && data.startCell != null) {\n                        dataArr = dataArr.concat(func_methods.getCellDataArr(data, 'text', true));\n                    } else {\n                        dataArr.push(data);\n                    }\n                }\n                var sum = 0, count = 0;\n                for (var i = 0; i < dataArr.length; i++) {\n                    if (valueIsError(dataArr[i])) {\n                        return dataArr[i];\n                    } else if (!isRealNum(dataArr[i])) {\n                        return formula.error.v;\n                    }\n                    sum = luckysheet_calcADPMM(sum, '+', dataArr[i]);    // parseFloat(dataArr[i]);\n                    // parseFloat(dataArr[i]);\n                    count++;\n                }\n                if (count == 0) {\n                    return formula.error.d;\n                }\n                return luckysheet_calcADPMM(sum, '/', count);    // sum / count;\n            } // sum / count;\n            catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'COUNT': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var dataArr = [];\n                for (var i = 0; i < arguments.length; i++) {\n                    var data = arguments[i];\n                    if (getObjType(data) == 'array') {\n                        if (getObjType(data[0]) == 'array') {\n                            if (!func_methods.isDyadicArr(data)) {\n                                return formula.error.v;\n                            }\n                            dataArr = dataArr.concat(func_methods.getDataArr(data, true));\n                        } else {\n                            dataArr = dataArr.concat(data);\n                        }\n                    } else if (getObjType(data) == 'object' && data.startCell != null) {\n                        dataArr = dataArr.concat(func_methods.getCellDataArr(data, 'text', true));\n                    } else {\n                        if (getObjType(data) == 'boolean') {\n                            if (data.toString().toLowerCase() == 'true') {\n                                dataArr.push(1);\n                            } else if (data.toString().toLowerCase() == 'false') {\n                                dataArr.push(0);\n                            }\n                        } else {\n                            dataArr.push(data);\n                        }\n                    }\n                }\n                var count = 0;\n                for (var i = 0; i < dataArr.length; i++) {\n                    if (isRealNum(dataArr[i])) {\n                        count++;\n                    }\n                }\n                return count;\n            } catch (e) {\n                var err = e;    //计算错误检测\n                //计算错误检测\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'COUNTA': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var dataArr = [];\n                for (var i = 0; i < arguments.length; i++) {\n                    var data = arguments[i];\n                    if (getObjType(data) == 'array') {\n                        if (getObjType(data[0]) == 'array') {\n                            if (!func_methods.isDyadicArr(data)) {\n                                return formula.error.v;\n                            }\n                            dataArr = dataArr.concat(func_methods.getDataArr(data));\n                        } else {\n                            dataArr = dataArr.concat(data);\n                        }\n                    } else if (getObjType(data) == 'object' && data.startCell != null) {\n                        dataArr = dataArr.concat(func_methods.getCellDataArr(data, 'text', true));\n                    } else {\n                        dataArr.push(data);\n                    }\n                }\n                return dataArr.length;\n            } catch (err) {\n                //计算错误检测\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'MAX': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var dataArr = [];\n                for (var i = 0; i < arguments.length; i++) {\n                    var data = arguments[i];\n                    if (getObjType(data) == 'array') {\n                        if (getObjType(data[0]) == 'array') {\n                            if (!func_methods.isDyadicArr(data)) {\n                                return formula.error.v;\n                            }\n                            dataArr = dataArr.concat(func_methods.getDataArr(data, true));\n                        } else {\n                            dataArr = dataArr.concat(data);\n                        }\n                    } else if (getObjType(data) == 'object' && data.startCell != null) {\n                        dataArr = dataArr.concat(func_methods.getCellDataArr(data, 'number', true));\n                    } else {\n                        dataArr.push(data);\n                    }\n                }\n                var max = null;\n                for (var i = 0; i < dataArr.length; i++) {\n                    if (valueIsError(dataArr[i])) {\n                        return dataArr[i];\n                    }\n                    if (!isRealNum(dataArr[i])) {\n                        continue;\n                    }\n                    if (max == null || parseFloat(dataArr[i]) > max) {\n                        max = parseFloat(dataArr[i]);\n                    }\n                }\n                return max == null ? 0 : max;\n            } catch (e) {\n                var err = e;    //计算错误检测\n                //计算错误检测\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'MIN': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var dataArr = [];\n                for (var i = 0; i < arguments.length; i++) {\n                    var data = arguments[i];\n                    if (getObjType(data) == 'array') {\n                        if (getObjType(data[0]) == 'array') {\n                            if (!func_methods.isDyadicArr(data)) {\n                                return formula.error.v;\n                            }\n                            dataArr = dataArr.concat(func_methods.getDataArr(data, true));\n                        } else {\n                            dataArr = dataArr.concat(data);\n                        }\n                    } else if (getObjType(data) == 'object' && data.startCell != null) {\n                        dataArr = dataArr.concat(func_methods.getCellDataArr(data, 'number', true));\n                    } else {\n                        dataArr.push(data);\n                    }\n                }\n                var min = null;\n                for (var i = 0; i < dataArr.length; i++) {\n                    if (valueIsError(dataArr[i])) {\n                        return dataArr[i];\n                    }\n                    if (!isRealNum(dataArr[i])) {\n                        continue;\n                    }\n                    if (min == null || parseFloat(dataArr[i]) < min) {\n                        min = parseFloat(dataArr[i]);\n                    }\n                }\n                return min == null ? 0 : min;\n            } catch (e) {\n                var err = e;    //计算错误检测\n                //计算错误检测\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'AGE_BY_IDCARD': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //身份证号\n                var UUserCard = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(UUserCard)) {\n                    return UUserCard;\n                }\n                if (!window.luckysheet_function.ISIDCARD.f(UUserCard)) {\n                    return formula.error.v;\n                }\n                var birthday = window.luckysheet_function.BIRTHDAY_BY_IDCARD.f(UUserCard);\n                if (valueIsError(birthday)) {\n                    return birthday;\n                }\n                birthday = dayjs(birthday);\n                var cuurentdate = dayjs();\n                if (arguments.length == 2) {\n                    cuurentdate = func_methods.getFirstValue(arguments[1]);\n                    if (valueIsError(cuurentdate)) {\n                        return cuurentdate;\n                    }\n                    cuurentdate = dayjs(cuurentdate);\n                }\n                var age = cuurentdate.diff(birthday, 'years');\n                if (age < 0 || age.toString() == 'NaN') {\n                    return formula.error.v;\n                }\n                return age;\n            } catch (e) {\n                var err = e;    //计算错误检测\n                //计算错误检测\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'SEX_BY_IDCARD': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //身份证号\n                var UUserCard = func_methods.getFirstValue(arguments[0]).toString();\n                if (valueIsError(UUserCard)) {\n                    return UUserCard;\n                }\n                if (!window.luckysheet_function.ISIDCARD.f(UUserCard)) {\n                    return formula.error.v;\n                }\n                if (parseInt(UUserCard.substr(16, 1)) % 2 == 1) {\n                    return '男';\n                } else {\n                    return '女';\n                }\n            } catch (e) {\n                var err = e;    //计算错误检测\n                //计算错误检测\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'BIRTHDAY_BY_IDCARD': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //身份证号\n                var UUserCard = func_methods.getFirstValue(arguments[0]).toString();\n                if (valueIsError(UUserCard)) {\n                    return UUserCard;\n                }\n                if (!window.luckysheet_function.ISIDCARD.f(UUserCard)) {\n                    return formula.error.v;\n                }\n                var birthday = '';\n                if (UUserCard.length == 15) {\n                    var year = '19' + UUserCard.substring(6, 8) + '/' + UUserCard.substring(8, 10) + '/' + UUserCard.substring(10, 12);\n                    birthday = year;\n                } else if (UUserCard.length == 18) {\n                    var year = UUserCard.substring(6, 10) + '/' + UUserCard.substring(10, 12) + '/' + UUserCard.substring(12, 14);\n                    birthday = year;\n                }    //生日格式\n                //生日格式\n                var datetype = 0;\n                if (arguments[1] != null) {\n                    datetype = func_methods.getFirstValue(arguments[1]);\n                    if (valueIsError(datetype)) {\n                        return datetype;\n                    }\n                }\n                if (!isRealNum(datetype)) {\n                    return formula.error.v;\n                }\n                datetype = parseInt(datetype);\n                if (datetype < 0 || datetype > 2) {\n                    return formula.error.v;\n                }\n                if (parseInt(datetype) == 0) {\n                    return birthday;\n                } else if (parseInt(datetype) == 1) {\n                    return dayjs(birthday).format('YYYY-MM-DD');\n                } else if (parseInt(datetype) == 2) {\n                    return dayjs(birthday).format('YYYY年M月D日');\n                }\n            } catch (e) {\n                var err = e;    //计算错误检测\n                //计算错误检测\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'PROVINCE_BY_IDCARD': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //身份证号\n                var UUserCard = func_methods.getFirstValue(arguments[0]).toString();\n                if (valueIsError(UUserCard)) {\n                    return UUserCard;\n                }\n                if (!window.luckysheet_function.ISIDCARD.f(UUserCard)) {\n                    return formula.error.v;\n                }\n                var native = '未知';\n                var provinceArray = formula.classlist.province;\n                if (UUserCard.substring(0, 2) in provinceArray) {\n                    native = provinceArray[UUserCard.substring(0, 2)];\n                }\n                return native;\n            } catch (e) {\n                var err = e;    //计算错误检测\n                //计算错误检测\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'CITY_BY_IDCARD': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //身份证号\n                var UUserCard = func_methods.getFirstValue(arguments[0]).toString();\n                if (valueIsError(UUserCard)) {\n                    return UUserCard;\n                }\n                if (!window.luckysheet_function.ISIDCARD.f(UUserCard)) {\n                    return formula.error.v;\n                }\n                var dataNum = cityData.length, native = '未知';\n                for (var i = 0; i < dataNum; i++) {\n                    if (UUserCard.substring(0, 6) == cityData[i].code) {\n                        native = cityData[i].title;\n                        break;\n                    }\n                }\n                return native;\n            } catch (e) {\n                var err = e;    //计算错误检测\n                //计算错误检测\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'STAR_BY_IDCARD': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //身份证号\n                var UUserCard = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(UUserCard)) {\n                    return UUserCard;\n                }\n                if (!window.luckysheet_function.ISIDCARD.f(UUserCard)) {\n                    return formula.error.v;\n                }\n                var birthday = window.luckysheet_function.BIRTHDAY_BY_IDCARD.f(UUserCard);\n                if (valueIsError(birthday)) {\n                    return birthday;\n                }\n                birthday = new Date(birthday);\n                var month = birthday.getMonth(), day = birthday.getDate();\n                var d = new Date(1999, month, day, 0, 0, 0);\n                var arr = [];\n                arr.push([\n                    '魔羯座',\n                    new Date(1999, 0, 1, 0, 0, 0)\n                ]);\n                arr.push([\n                    '水瓶座',\n                    new Date(1999, 0, 20, 0, 0, 0)\n                ]);\n                arr.push([\n                    '双鱼座',\n                    new Date(1999, 1, 19, 0, 0, 0)\n                ]);\n                arr.push([\n                    '白羊座',\n                    new Date(1999, 2, 21, 0, 0, 0)\n                ]);\n                arr.push([\n                    '金牛座',\n                    new Date(1999, 3, 21, 0, 0, 0)\n                ]);\n                arr.push([\n                    '双子座',\n                    new Date(1999, 4, 21, 0, 0, 0)\n                ]);\n                arr.push([\n                    '巨蟹座',\n                    new Date(1999, 5, 22, 0, 0, 0)\n                ]);\n                arr.push([\n                    '狮子座',\n                    new Date(1999, 6, 23, 0, 0, 0)\n                ]);\n                arr.push([\n                    '处女座',\n                    new Date(1999, 7, 23, 0, 0, 0)\n                ]);\n                arr.push([\n                    '天秤座',\n                    new Date(1999, 8, 23, 0, 0, 0)\n                ]);\n                arr.push([\n                    '天蝎座',\n                    new Date(1999, 9, 23, 0, 0, 0)\n                ]);\n                arr.push([\n                    '射手座',\n                    new Date(1999, 10, 22, 0, 0, 0)\n                ]);\n                arr.push([\n                    '魔羯座',\n                    new Date(1999, 11, 22, 0, 0, 0)\n                ]);    //console.log(birthday, arr, i);\n                //console.log(birthday, arr, i);\n                for (var i = arr.length - 1; i >= 0; i--) {\n                    if (d >= arr[i][1]) {\n                        return arr[i][0];\n                    }\n                }\n                return '未找到匹配星座信息';\n            } catch (e) {\n                var err = e;    //计算错误检测\n                //计算错误检测\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'ANIMAL_BY_IDCARD': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //身份证号\n                var UUserCard = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(UUserCard)) {\n                    return UUserCard;\n                }\n                if (!window.luckysheet_function.ISIDCARD.f(UUserCard)) {\n                    return formula.error.v;\n                }\n                var birthday = window.luckysheet_function.BIRTHDAY_BY_IDCARD.f(UUserCard);\n                if (valueIsError(birthday)) {\n                    return birthday;\n                }\n                birthday = new Date(birthday);\n                var list = new Array('猪', '鼠', '牛', '虎', '兔', '龙', '蛇', '马', '羊', '猴', '鸡', '狗');\n                var index = (parseInt(birthday.getFullYear()) + 9) % 12;\n                if (index != null && !isNaN(index)) {\n                    return list[index];\n                } else {\n                    return '未找到匹配生肖信息';\n                }\n            } catch (e) {\n                var err = e;    //计算错误检测\n                //计算错误检测\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'ISIDCARD': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var idcard = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(idcard)) {\n                    return idcard;\n                }\n                var reg = /(^\\d{15}$)|(^\\d{18}$)|(^\\d{17}(\\d|X|x)$)/;\n                if (reg.test(idcard)) {\n                    return true;\n                } else {\n                    return false;\n                }\n            } catch (e) {\n                var err = e;    //计算错误检测\n                //计算错误检测\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'DM_TEXT_CUTWORD': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var cell_r = window.luckysheetCurrentRow;\n                var cell_c = window.luckysheetCurrentColumn;\n                var cell_fp = window.luckysheetCurrentFunction;    //任意需要分词的文本\n                //任意需要分词的文本\n                var text = func_methods.getFirstValue(arguments[0], 'text');\n                if (valueIsError(text)) {\n                    return text;\n                }    //分词模式\n                //分词模式\n                var datetype = 0;\n                if (arguments[1] != null) {\n                    datetype = func_methods.getFirstValue(arguments[1]);\n                    if (valueIsError(datetype)) {\n                        return datetype;\n                    }\n                }\n                if (!isRealNum(datetype)) {\n                    return formula.error.v;\n                }\n                datetype = parseInt(datetype);\n                if (datetype != 0 && datetype != 1 && datetype != 2) {\n                    return formula.error.v;\n                }\n                $.post('/dataqk/tu/api/cutword', {\n                    'text': text,\n                    'type': datetype\n                }, function (data) {\n                    var d = [].concat(Store.flowdata);\n                    formula.execFunctionGroup(cell_r, cell_c, data);\n                    d[cell_r][cell_c] = {\n                        'v': data,\n                        'f': cell_fp\n                    };\n                    jfrefreshgrid(d, [{\n                            'row': [\n                                cell_r,\n                                cell_r\n                            ],\n                            'column': [\n                                cell_c,\n                                cell_c\n                            ]\n                        }]);\n                });\n                return 'loading...';\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'DM_TEXT_TFIDF': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var cell_r = window.luckysheetCurrentRow;\n                var cell_c = window.luckysheetCurrentColumn;\n                var cell_fp = window.luckysheetCurrentFunction;    //任意需要分词的文本\n                //任意需要分词的文本\n                var text = func_methods.getFirstValue(arguments[0], 'text');\n                if (valueIsError(text)) {\n                    return text;\n                }    //关键词个数\n                //关键词个数\n                var count = 20;\n                if (arguments[1] != null) {\n                    count = func_methods.getFirstValue(arguments[1]);\n                    if (valueIsError(count)) {\n                        return count;\n                    }\n                }\n                if (!isRealNum(count)) {\n                    return formula.error.v;\n                }\n                count = parseInt(count);    //语料库\n                //语料库\n                var set = 0;\n                if (arguments[2] != null) {\n                    set = func_methods.getFirstValue(arguments[2]);\n                    if (valueIsError(set)) {\n                        return set;\n                    }\n                }\n                if (!isRealNum(set)) {\n                    return formula.error.v;\n                }\n                set = parseInt(set);\n                if (count < 0) {\n                    return formula.error.v;\n                }\n                if (set != 0 && set != 1 && set != 2) {\n                    return formula.error.v;\n                }\n                $.post('/dataqk/tu/api/tfidf', {\n                    'text': text,\n                    'count': count,\n                    'set': set\n                }, function (data) {\n                    var d = editor.deepCopyFlowData(Store.flowdata);\n                    formula.execFunctionGroup(cell_r, cell_c, data);\n                    d[cell_r][cell_c] = {\n                        'v': data,\n                        'f': cell_fp\n                    };\n                    jfrefreshgrid(d, [{\n                            'row': [\n                                cell_r,\n                                cell_r\n                            ],\n                            'column': [\n                                cell_c,\n                                cell_c\n                            ]\n                        }]);\n                });\n                return 'loading...';\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'DM_TEXT_TEXTRANK': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var cell_r = window.luckysheetCurrentRow;\n                var cell_c = window.luckysheetCurrentColumn;\n                var cell_fp = window.luckysheetCurrentFunction;    //任意需要分词的文本\n                //任意需要分词的文本\n                var text = func_methods.getFirstValue(arguments[0], 'text');\n                if (valueIsError(text)) {\n                    return text;\n                }    //关键词个数\n                //关键词个数\n                var count = 20;\n                if (arguments[1] != null) {\n                    count = func_methods.getFirstValue(arguments[1]);\n                    if (valueIsError(count)) {\n                        return count;\n                    }\n                }\n                if (!isRealNum(count)) {\n                    return formula.error.v;\n                }\n                count = parseInt(count);    //语料库\n                //语料库\n                var set = 0;\n                if (arguments[2] != null) {\n                    set = func_methods.getFirstValue(arguments[2]);\n                    if (valueIsError(set)) {\n                        return set;\n                    }\n                }\n                if (!isRealNum(set)) {\n                    return formula.error.v;\n                }\n                set = parseInt(set);\n                if (count < 0) {\n                    return formula.error.v;\n                }\n                if (set != 0 && set != 1 && set != 2) {\n                    return formula.error.v;\n                }\n                $.post('/dataqk/tu/api/tfidf', {\n                    'text': text,\n                    'count': count,\n                    'set': set\n                }, function (data) {\n                    var d = editor.deepCopyFlowData(Store.flowdata);\n                    formula.execFunctionGroup(cell_r, cell_c, data);\n                    d[cell_r][cell_c] = {\n                        'v': data,\n                        'f': cell_fp\n                    };\n                    jfrefreshgrid(d, [{\n                            'row': [\n                                cell_r,\n                                cell_r\n                            ],\n                            'column': [\n                                cell_c,\n                                cell_c\n                            ]\n                        }]);\n                });\n                return 'loading...';\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'DATA_CN_STOCK_CLOSE': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var cell_r = window.luckysheetCurrentRow;\n                var cell_c = window.luckysheetCurrentColumn;\n                var cell_fp = window.luckysheetCurrentFunction;    //股票代码\n                //股票代码\n                var stockcode = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(stockcode)) {\n                    return stockcode;\n                }    //日期\n                //日期\n                var date = null;\n                if (arguments[1] != null) {\n                    var data_date = arguments[1];\n                    if (getObjType(data_date) == 'array') {\n                        return formula.error.v;\n                    } else if (getObjType(data_date) == 'object' && data_date.startCell != null) {\n                        if (data_date.data != null && getObjType(data_date.data) != 'array' && data_date.data.ct != null && data_date.data.ct.t == 'd') {\n                            date = update('yyyy-mm-dd', data_date.data.v);\n                        } else {\n                            return formula.error.v;\n                        }\n                    } else {\n                        date = data_date;\n                    }\n                    if (!isdatetime(date)) {\n                        return [\n                            formula.error.v,\n                            '日期错误'\n                        ];\n                    }\n                    date = dayjs(date).format('YYYY-MM-DD');\n                }    //复权除权\n                //复权除权\n                var price = 0;\n                if (arguments[2] != null) {\n                    price = func_methods.getFirstValue(arguments[2]);\n                    if (valueIsError(price)) {\n                        return price;\n                    }\n                }\n                if (!isRealNum(price)) {\n                    return formula.error.v;\n                }\n                price = parseInt(price);\n                if (price != 0 && price != 1 && price != 2) {\n                    return formula.error.v;\n                }\n                $.post('/dataqk/tu/api/getstockinfo', {\n                    'stockCode': stockcode,\n                    'date': date,\n                    'price': price,\n                    type: '0'\n                }, function (data) {\n                    var d = editor.deepCopyFlowData(Store.flowdata);\n                    var v = numFormat(data);\n                    if (v == null) {\n                        v = data;\n                    }\n                    formula.execFunctionGroup(cell_r, cell_c, v);\n                    d[cell_r][cell_c] = {\n                        'v': v,\n                        'f': cell_fp\n                    };\n                    jfrefreshgrid(d, [{\n                            'row': [\n                                cell_r,\n                                cell_r\n                            ],\n                            'column': [\n                                cell_c,\n                                cell_c\n                            ]\n                        }]);\n                });\n                return 'loading...';\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'DATA_CN_STOCK_OPEN': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var cell_r = window.luckysheetCurrentRow;\n                var cell_c = window.luckysheetCurrentColumn;\n                var cell_fp = window.luckysheetCurrentFunction;    //股票代码\n                //股票代码\n                var stockcode = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(stockcode)) {\n                    return stockcode;\n                }    //日期\n                //日期\n                var date = null;\n                if (arguments[1] != null) {\n                    var data_date = arguments[1];\n                    if (getObjType(data_date) == 'array') {\n                        return formula.error.v;\n                    } else if (getObjType(data_date) == 'object' && data_date.startCell != null) {\n                        if (data_date.data != null && getObjType(data_date.data) != 'array' && data_date.data.ct != null && data_date.data.ct.t == 'd') {\n                            date = update('yyyy-mm-dd', data_date.data.v);\n                        } else {\n                            return formula.error.v;\n                        }\n                    } else {\n                        date = data_date;\n                    }\n                    if (!isdatetime(date)) {\n                        return [\n                            formula.error.v,\n                            '日期错误'\n                        ];\n                    }\n                    date = dayjs(date).format('YYYY-MM-DD');\n                }    //复权除权\n                //复权除权\n                var price = 0;\n                if (arguments[2] != null) {\n                    price = func_methods.getFirstValue(arguments[2]);\n                    if (valueIsError(price)) {\n                        return price;\n                    }\n                }\n                if (!isRealNum(price)) {\n                    return formula.error.v;\n                }\n                price = parseInt(price);\n                if (price != 0 && price != 1 && price != 2) {\n                    return formula.error.v;\n                }\n                $.post('/dataqk/tu/api/getstockinfo', {\n                    'stockCode': stockcode,\n                    'date': date,\n                    'price': price,\n                    type: '1'\n                }, function (data) {\n                    var d = editor.deepCopyFlowData(Store.flowdata);\n                    formula.execFunctionGroup(cell_r, cell_c, data);\n                    d[cell_r][cell_c] = {\n                        'v': data,\n                        'f': cell_fp\n                    };\n                    jfrefreshgrid(d, [{\n                            'row': [\n                                cell_r,\n                                cell_r\n                            ],\n                            'column': [\n                                cell_c,\n                                cell_c\n                            ]\n                        }]);\n                });\n                return 'loading...';\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'DATA_CN_STOCK_MAX': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var cell_r = window.luckysheetCurrentRow;\n                var cell_c = window.luckysheetCurrentColumn;\n                var cell_fp = window.luckysheetCurrentFunction;    //股票代码\n                //股票代码\n                var stockcode = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(stockcode)) {\n                    return stockcode;\n                }    //日期\n                //日期\n                var date = null;\n                if (arguments[1] != null) {\n                    var data_date = arguments[1];\n                    if (getObjType(data_date) == 'array') {\n                        return formula.error.v;\n                    } else if (getObjType(data_date) == 'object' && data_date.startCell != null) {\n                        if (data_date.data != null && getObjType(data_date.data) != 'array' && data_date.data.ct != null && data_date.data.ct.t == 'd') {\n                            date = update('yyyy-mm-dd', data_date.data.v);\n                        } else {\n                            return formula.error.v;\n                        }\n                    } else {\n                        date = data_date;\n                    }\n                    if (!isdatetime(date)) {\n                        return [\n                            formula.error.v,\n                            '日期错误'\n                        ];\n                    }\n                    date = dayjs(date).format('YYYY-MM-DD');\n                }    //复权除权\n                //复权除权\n                var price = 0;\n                if (arguments[2] != null) {\n                    price = func_methods.getFirstValue(arguments[2]);\n                    if (valueIsError(price)) {\n                        return price;\n                    }\n                }\n                if (!isRealNum(price)) {\n                    return formula.error.v;\n                }\n                price = parseInt(price);\n                if (price != 0 && price != 1 && price != 2) {\n                    return formula.error.v;\n                }\n                $.post('/dataqk/tu/api/getstockinfo', {\n                    'stockCode': stockcode,\n                    'date': date,\n                    'price': price,\n                    type: '2'\n                }, function (data) {\n                    var d = editor.deepCopyFlowData(Store.flowdata);\n                    formula.execFunctionGroup(cell_r, cell_c, data);\n                    d[cell_r][cell_c] = {\n                        'v': data,\n                        'f': cell_fp\n                    };\n                    jfrefreshgrid(d, [{\n                            'row': [\n                                cell_r,\n                                cell_r\n                            ],\n                            'column': [\n                                cell_c,\n                                cell_c\n                            ]\n                        }]);\n                });\n                return 'loading...';\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'DATA_CN_STOCK_MIN': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var cell_r = window.luckysheetCurrentRow;\n                var cell_c = window.luckysheetCurrentColumn;\n                var cell_fp = window.luckysheetCurrentFunction;    //股票代码\n                //股票代码\n                var stockcode = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(stockcode)) {\n                    return stockcode;\n                }    //日期\n                //日期\n                var date = null;\n                if (arguments[1] != null) {\n                    var data_date = arguments[1];\n                    if (getObjType(data_date) == 'array') {\n                        return formula.error.v;\n                    } else if (getObjType(data_date) == 'object' && data_date.startCell != null) {\n                        if (data_date.data != null && getObjType(data_date.data) != 'array' && data_date.data.ct != null && data_date.data.ct.t == 'd') {\n                            date = update('yyyy-mm-dd', data_date.data.v);\n                        } else {\n                            return formula.error.v;\n                        }\n                    } else {\n                        date = data_date;\n                    }\n                    if (!isdatetime(date)) {\n                        return [\n                            formula.error.v,\n                            '日期错误'\n                        ];\n                    }\n                    date = dayjs(date).format('YYYY-MM-DD');\n                }    //复权除权\n                //复权除权\n                var price = 0;\n                if (arguments[2] != null) {\n                    price = func_methods.getFirstValue(arguments[2]);\n                    if (valueIsError(price)) {\n                        return price;\n                    }\n                }\n                if (!isRealNum(price)) {\n                    return formula.error.v;\n                }\n                price = parseInt(price);\n                if (price != 0 && price != 1 && price != 2) {\n                    return formula.error.v;\n                }\n                $.post('/dataqk/tu/api/getstockinfo', {\n                    'stockCode': stockcode,\n                    'date': date,\n                    'price': price,\n                    type: '3'\n                }, function (data) {\n                    var d = editor.deepCopyFlowData(Store.flowdata);\n                    formula.execFunctionGroup(cell_r, cell_c, data);\n                    d[cell_r][cell_c] = {\n                        'v': data,\n                        'f': cell_fp\n                    };\n                    jfrefreshgrid(d, [{\n                            'row': [\n                                cell_r,\n                                cell_r\n                            ],\n                            'column': [\n                                cell_c,\n                                cell_c\n                            ]\n                        }]);\n                });\n                return 'loading...';\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'DATA_CN_STOCK_VOLUMN': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var cell_r = window.luckysheetCurrentRow;\n                var cell_c = window.luckysheetCurrentColumn;\n                var cell_fp = window.luckysheetCurrentFunction;    //股票代码\n                //股票代码\n                var stockcode = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(stockcode)) {\n                    return stockcode;\n                }    //日期\n                //日期\n                var date = null;\n                if (arguments[1] != null) {\n                    var data_date = arguments[1];\n                    if (getObjType(data_date) == 'array') {\n                        return formula.error.v;\n                    } else if (getObjType(data_date) == 'object' && data_date.startCell != null) {\n                        if (data_date.data != null && getObjType(data_date.data) != 'array' && data_date.data.ct != null && data_date.data.ct.t == 'd') {\n                            date = update('yyyy-mm-dd', data_date.data.v);\n                        } else {\n                            return formula.error.v;\n                        }\n                    } else {\n                        date = data_date;\n                    }\n                    if (!isdatetime(date)) {\n                        return [\n                            formula.error.v,\n                            '日期错误'\n                        ];\n                    }\n                    date = dayjs(date).format('YYYY-MM-DD');\n                }    //复权除权\n                //复权除权\n                var price = 0;\n                if (arguments[2] != null) {\n                    price = func_methods.getFirstValue(arguments[2]);\n                    if (valueIsError(price)) {\n                        return price;\n                    }\n                }\n                if (!isRealNum(price)) {\n                    return formula.error.v;\n                }\n                price = parseInt(price);\n                if (price != 0 && price != 1 && price != 2) {\n                    return formula.error.v;\n                }\n                $.post('/dataqk/tu/api/getstockinfo', {\n                    'stockCode': stockcode,\n                    'date': date,\n                    'price': price,\n                    type: '4'\n                }, function (data) {\n                    var d = editor.deepCopyFlowData(Store.flowdata);\n                    formula.execFunctionGroup(cell_r, cell_c, data);\n                    d[cell_r][cell_c] = {\n                        'v': data,\n                        'f': cell_fp\n                    };\n                    jfrefreshgrid(d, [{\n                            'row': [\n                                cell_r,\n                                cell_r\n                            ],\n                            'column': [\n                                cell_c,\n                                cell_c\n                            ]\n                        }]);\n                });\n                return 'loading...';\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'DATA_CN_STOCK_AMOUNT': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var cell_r = window.luckysheetCurrentRow;\n                var cell_c = window.luckysheetCurrentColumn;\n                var cell_fp = window.luckysheetCurrentFunction;    //股票代码\n                //股票代码\n                var stockcode = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(stockcode)) {\n                    return stockcode;\n                }    //日期\n                //日期\n                var date = null;\n                if (arguments[1] != null) {\n                    var data_date = arguments[1];\n                    if (getObjType(data_date) == 'array') {\n                        return formula.error.v;\n                    } else if (getObjType(data_date) == 'object' && data_date.startCell != null) {\n                        if (data_date.data != null && getObjType(data_date.data) != 'array' && data_date.data.ct != null && data_date.data.ct.t == 'd') {\n                            date = update('yyyy-mm-dd', data_date.data.v);\n                        } else {\n                            return formula.error.v;\n                        }\n                    } else {\n                        date = data_date;\n                    }\n                    if (!isdatetime(date)) {\n                        return [\n                            formula.error.v,\n                            '日期错误'\n                        ];\n                    }\n                    date = dayjs(date).format('YYYY-MM-DD');\n                }    //复权除权\n                //复权除权\n                var price = 0;\n                if (arguments[2] != null) {\n                    price = func_methods.getFirstValue(arguments[2]);\n                    if (valueIsError(price)) {\n                        return price;\n                    }\n                }\n                if (!isRealNum(price)) {\n                    return formula.error.v;\n                }\n                price = parseInt(price);\n                if (price != 0 && price != 1 && price != 2) {\n                    return formula.error.v;\n                }\n                $.post('/dataqk/tu/api/getstockinfo', {\n                    'stockCode': stockcode,\n                    'date': date,\n                    'price': price,\n                    type: '5'\n                }, function (data) {\n                    var d = editor.deepCopyFlowData(Store.flowdata);\n                    formula.execFunctionGroup(cell_r, cell_c, data);\n                    d[cell_r][cell_c] = {\n                        'v': data,\n                        'f': cell_fp\n                    };\n                    jfrefreshgrid(d, [{\n                            'row': [\n                                cell_r,\n                                cell_r\n                            ],\n                            'column': [\n                                cell_c,\n                                cell_c\n                            ]\n                        }]);\n                });\n                return 'loading...';\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'ISDATE': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //日期\n                var date = func_methods.getFirstValue(arguments[0], 'text');\n                if (valueIsError(date)) {\n                    return date;\n                }\n                return isdatetime(date);\n            } catch (e) {\n                var err = e;    //计算错误检测\n                //计算错误检测\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'SUMIF': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //=SUMIF(A2:A5,\">1600000\",B2:B5)\n                //=SUMIF(A2:A5,\">1600000\")\n                //=SUMIF(A2:A5,3000000,B2:B5)\n                //找出range中匹配的字符串\n                var sum = 0;\n                var rangeData = arguments[0].data;\n                var rangeRow = arguments[0].rowl;\n                var rangeCol = arguments[0].coll;\n                var criteria = luckysheet_parseData(arguments[1]);\n                rangeData = formula.getRangeArray(rangeData)[0];    //如果有第三个参数\n                //如果有第三个参数\n                if (arguments[2]) {\n                    var sumRangeData = [];    //根据选择的目标的区域确定实际目标区域\n                                              //初始位置\n                    //根据选择的目标的区域确定实际目标区域\n                    //初始位置\n                    var sumRangeStart = arguments[2].startCell;\n                    var sumRangeRow = arguments[2].rowl;\n                    var sumRangeCol = arguments[2].coll;\n                    var sumRangeSheet = arguments[2].sheetName;\n                    if (rangeRow == sumRangeRow && rangeCol == sumRangeCol) {\n                        sumRangeData = arguments[2].data;\n                    } else {\n                        var row = [], col = [];\n                        var sumRangeEnd = '';\n                        var realSumRange = '';    //console.log(\"开始位置！！！\",sumRangeStart,typeof(sumRangeStart));\n                        //console.log(\"开始位置！！！\",sumRangeStart,typeof(sumRangeStart));\n                        row[0] = parseInt(sumRangeStart.replace(/[^0-9]/g, '')) - 1;\n                        col[0] = ABCatNum(sumRangeStart.replace(/[^A-Za-z]/g, ''));    //根据第一个范围的长宽确定目标范围的末尾位置\n                        //根据第一个范围的长宽确定目标范围的末尾位置\n                        row[1] = row[0] + rangeRow - 1;\n                        col[1] = col[0] + rangeCol - 1;    //console.log(row[0],col[0],row[1],col[1]);\n                                                           //末尾位置转化为sheet格式：如 F4\n                        //console.log(row[0],col[0],row[1],col[1]);\n                        //末尾位置转化为sheet格式：如 F4\n                        var real_ABC = chatatABC(col[1]);\n                        var real_Num = row[1] + 1;\n                        sumRangeEnd = real_ABC + real_Num;    //console.log(\"合成新的末尾位置：\" + sumRangeEnd);\n                        //console.log(\"合成新的末尾位置：\" + sumRangeEnd);\n                        realSumRange = sumRangeSheet + '!' + sumRangeStart + ':' + sumRangeEnd;\n                        sumRangeData = luckysheet_getcelldata(realSumRange).data;    //console.log(\"最终的目标范围：\",sumRangeData);\n                    }\n                    //console.log(\"最终的目标范围：\",sumRangeData);\n                    sumRangeData = formula.getRangeArray(sumRangeData)[0];    //循环遍历查找匹配项\n                    //循环遍历查找匹配项\n                    for (var i = 0; i < rangeData.length; i++) {\n                        var v = rangeData[i];\n                        if (!!v && formula.acompareb(v, criteria)) {\n                            if (!isRealNum(sumRangeData[i])) {\n                                continue;\n                            }\n                            sum = luckysheet_calcADPMM(sum, '+', sumRangeData[i]);    // parseFloat(sumRangeData[i]);\n                        }\n                    }\n                } else\n                    // parseFloat(sumRangeData[i]);\n                    {\n                        //循环遍历查找匹配项\n                        for (var i = 0; i < rangeData.length; i++) {\n                            var v = rangeData[i];\n                            if (!!v && formula.acompareb(v, criteria)) {\n                                if (!isRealNum(v)) {\n                                    continue;\n                                }\n                                sum = luckysheet_calcADPMM(sum, '', v);    // parseFloat(v);\n                            }\n                        }\n                    }\n                // parseFloat(v);\n                return sum;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'TAN': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var number = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number)) {\n                    return number;\n                }\n                if (!isRealNum(number)) {\n                    return formula.error.v;\n                }\n                number = parseFloat(number);\n                return Math.tan(number);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'TANH': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var number = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number)) {\n                    return number;\n                }\n                if (!isRealNum(number)) {\n                    return formula.error.v;\n                }\n                number = parseFloat(number);\n                var e2 = Math.exp(2 * number);\n                return (e2 - 1) / (e2 + 1);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'CEILING': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //number\n                var number = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number)) {\n                    return number;\n                }\n                if (!isRealNum(number)) {\n                    return formula.error.v;\n                }\n                number = parseFloat(number);    //significance\n                //significance\n                var significance = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(significance)) {\n                    return significance;\n                }\n                if (!isRealNum(significance)) {\n                    return formula.error.v;\n                }\n                significance = parseFloat(significance);\n                if (significance == 0) {\n                    return 0;\n                }\n                if (number > 0 && significance < 0) {\n                    return formula.error.nm;\n                }\n                return Math.ceil(number / significance) * significance;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'ATAN': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var number = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number)) {\n                    return number;\n                }\n                if (!isRealNum(number)) {\n                    return formula.error.v;\n                }\n                number = parseFloat(number);\n                return Math.atan(number);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'ASINH': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var number = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number)) {\n                    return number;\n                }\n                if (!isRealNum(number)) {\n                    return formula.error.v;\n                }\n                number = parseFloat(number);\n                return Math.log(number + Math.sqrt(number * number + 1));\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'ABS': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var number = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number)) {\n                    return number;\n                }\n                if (!isRealNum(number)) {\n                    return formula.error.v;\n                }\n                number = parseFloat(number);\n                return Math.abs(number);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'ACOS': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var number = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number)) {\n                    return number;\n                }\n                if (!isRealNum(number)) {\n                    return formula.error.v;\n                }\n                number = parseFloat(number);\n                if (number < -1 || number > 1) {\n                    return formula.error.nm;\n                }\n                return Math.acos(number);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'ACOSH': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var number = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number)) {\n                    return number;\n                }\n                if (!isRealNum(number)) {\n                    return formula.error.v;\n                }\n                number = parseFloat(number);\n                if (number < 1) {\n                    return formula.error.nm;\n                }\n                return Math.log(number + Math.sqrt(number * number - 1));\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'MULTINOMIAL': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var dataArr = [];\n                for (var i = 0; i < arguments.length; i++) {\n                    var data = arguments[i];\n                    if (getObjType(data) == 'array') {\n                        if (getObjType(data[0]) == 'array' && !func_methods.isDyadicArr(data)) {\n                            return formula.error.v;\n                        }\n                        dataArr = dataArr.concat(func_methods.getDataArr(data, true));\n                    } else if (getObjType(data) == 'object' && data.startCell != null) {\n                        dataArr = dataArr.concat(func_methods.getCellDataArr(data, 'number', true));\n                    } else {\n                        dataArr.push(data);\n                    }\n                }\n                var sum = 0, divisor = 1;\n                for (var i = 0; i < dataArr.length; i++) {\n                    var number = dataArr[i];\n                    if (!isRealNum(number)) {\n                        return formula.error.v;\n                    }\n                    number = parseFloat(number);\n                    if (number < 0) {\n                        return formula.error.nm;\n                    }\n                    sum += number;\n                    divisor *= func_methods.factorial(number);\n                }\n                return func_methods.factorial(sum) / divisor;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'ATANH': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var number = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number)) {\n                    return number;\n                }\n                if (!isRealNum(number)) {\n                    return formula.error.v;\n                }\n                number = parseFloat(number);\n                if (number <= -1 || number >= 1) {\n                    return formula.error.nm;\n                }\n                return Math.log((1 + number) / (1 - number)) / 2;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'ATAN2': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //要计算其与x轴夹角大小的线段的终点x坐标\n                var number_x = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number_x)) {\n                    return number_x;\n                }\n                if (!isRealNum(number_x)) {\n                    return formula.error.v;\n                }\n                number_x = parseFloat(number_x);    //要计算其与x轴夹角大小的线段的终点y坐标\n                //要计算其与x轴夹角大小的线段的终点y坐标\n                var number_y = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(number_y)) {\n                    return number_y;\n                }\n                if (!isRealNum(number_y)) {\n                    return formula.error.v;\n                }\n                number_y = parseFloat(number_y);\n                if (number_x == 0 && number_y == 0) {\n                    return formula.error.d;\n                }\n                return Math.atan2(number_y, number_x);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'COUNTBLANK': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var data = arguments[0];\n                var sum = 0;\n                if (getObjType(data) == 'object' && data.startCell != null) {\n                    if (data.data == null) {\n                        return 1;\n                    }\n                    if (getObjType(data.data) == 'array') {\n                        for (var r = 0; r < data.data.length; r++) {\n                            for (var c = 0; c < data.data[r].length; c++) {\n                                if (data.data[r][c] == null || isRealNull(data.data[r][c].v)) {\n                                    sum++;\n                                }\n                            }\n                        }\n                    } else {\n                        if (isRealNull(data.data.v)) {\n                            sum++;\n                        }\n                    }\n                }\n                return sum;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'COSH': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var number = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number)) {\n                    return number;\n                }\n                if (!isRealNum(number)) {\n                    return formula.error.v;\n                }\n                number = parseFloat(number);\n                return (Math.exp(number) + Math.exp(-number)) / 2;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'INT': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var data = arguments[0];\n                if (getObjType(data) == 'array') {\n                    if (getObjType(data[0]) == 'array') {\n                        if (!func_methods.isDyadicArr(data)) {\n                            return formula.error.v;\n                        }\n                        if (!isRealNum(data[0][0])) {\n                            return formula.error.v;\n                        }\n                        return Math.floor(parseFloat(data[0][0]));\n                    } else {\n                        if (!isRealNum(data[0])) {\n                            return formula.error.v;\n                        }\n                        return Math.floor(parseFloat(data[0]));\n                    }\n                } else if (getObjType(data) == 'object' && data.startCell != null) {\n                    if (data.coll > 1) {\n                        return formula.error.v;\n                    }\n                    if (data.rowl > 1) {\n                        var cellrange = formula.getcellrange(data.startCell);\n                        var str = cellrange.row[0];\n                        if (window.luckysheetCurrentRow < str || window.luckysheetCurrentRow > str + data.rowl - 1) {\n                            return formula.error.v;\n                        }\n                        var cell = data.data[window.luckysheetCurrentRow - str][0];\n                    } else {\n                        var cell = data.data;\n                    }\n                    if (cell == null || isRealNull(cell.v)) {\n                        return 0;\n                    }\n                    if (!isRealNum(cell.v)) {\n                        return formula.error.v;\n                    }\n                    return Math.floor(parseFloat(cell.v));\n                } else {\n                    if (getObjType(data) == 'boolean') {\n                        if (data.toString().toLowerCase() == 'true') {\n                            return 1;\n                        }\n                        if (data.toString().toLowerCase() == 'false') {\n                            return 0;\n                        }\n                    }\n                    if (!isRealNum(data)) {\n                        return formula.error.v;\n                    }\n                    return Math.floor(parseFloat(data));\n                }\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'ISEVEN': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var number = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number)) {\n                    return number;\n                }\n                if (!isRealNum(number)) {\n                    return formula.error.v;\n                }\n                number = parseInt(number);\n                return Math.abs(number) & 1 ? false : true;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'ISODD': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var number = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number)) {\n                    return number;\n                }\n                if (!isRealNum(number)) {\n                    return formula.error.v;\n                }\n                number = parseInt(number);\n                return Math.abs(number) & 1 ? true : false;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'LCM': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var o = [];\n                for (var i = 0; i < arguments.length; i++) {\n                    var data = arguments[i];\n                    if (getObjType(data) == 'array') {\n                        if (getObjType(data[0]) == 'array') {\n                            if (!func_methods.isDyadicArr(data)) {\n                                return formula.error.v;\n                            }\n                            o = o.concat(func_methods.getDataArr(data));\n                        } else {\n                            o = o.concat(data);\n                        }\n                    } else if (getObjType(data) == 'object' && data.startCell != null) {\n                        o = o.concat(func_methods.getCellDataArr(data, 'number', true));\n                    } else {\n                        o.push(data);\n                    }\n                }\n                for (var y = 0; y < o.length; y++) {\n                    var number = o[y];\n                    if (!isRealNum(number)) {\n                        return formula.error.v;\n                    }\n                    number = parseInt(number);\n                    if (number < 0) {\n                        return formula.error.nm;\n                    }\n                    o[y] = number;\n                }\n                for (var i, j, n, d, r = 1; (n = o.pop()) !== undefined;) {\n                    if (n == 0) {\n                        r = 0;\n                    }\n                    while (n > 1) {\n                        if (n % 2) {\n                            for (i = 3, j = Math.floor(Math.sqrt(n)); i <= j && n % i; i += 2) {\n                            }\n                            d = i <= j ? i : n;\n                        } else {\n                            d = 2;\n                        }\n                        for (n /= d, r *= d, i = o.length; i; o[--i] % d === 0 && (o[i] /= d) === 1 && o.splice(i, 1)) {\n                        }\n                    }\n                }\n                if (r >= Math.pow(2, 53)) {\n                    return formula.error.nm;\n                }\n                return r;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'LN': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var number = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number)) {\n                    return number;\n                }\n                if (!isRealNum(number)) {\n                    return formula.error.v;\n                }\n                number = parseFloat(number);\n                if (number <= 0) {\n                    return formula.error.nm;\n                }\n                return Math.log(number);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'LOG': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var number = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number)) {\n                    return number;\n                }\n                if (!isRealNum(number)) {\n                    return formula.error.v;\n                }\n                number = parseFloat(number);\n                if (number <= 0) {\n                    return formula.error.nm;\n                }\n                if (arguments.length == 2) {\n                    var base = func_methods.getFirstValue(arguments[1]);\n                    if (valueIsError(base)) {\n                        return base;\n                    }\n                    if (!isRealNum(base)) {\n                        return formula.error.v;\n                    }\n                    base = parseFloat(base);\n                    if (base <= 0) {\n                        return formula.error.nm;\n                    }\n                } else {\n                    var base = 10;\n                }\n                return Math.log(number) / Math.log(base);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'LOG10': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var number = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number)) {\n                    return number;\n                }\n                if (!isRealNum(number)) {\n                    return formula.error.v;\n                }\n                number = parseFloat(number);\n                if (number <= 0) {\n                    return formula.error.nm;\n                }\n                return Math.log(number) / Math.log(10);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'MOD': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //被除数\n                var number = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number)) {\n                    return number;\n                }\n                if (!isRealNum(number)) {\n                    return formula.error.v;\n                }\n                number = parseFloat(number);    //除数\n                //除数\n                var divisor = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(divisor)) {\n                    return divisor;\n                }\n                if (!isRealNum(divisor)) {\n                    return formula.error.v;\n                }\n                divisor = parseFloat(divisor);\n                if (divisor == 0) {\n                    return formula.error.d;\n                }    //计算结果\n                //计算结果\n                var modulus = Math.abs(number % divisor);\n                return divisor > 0 ? modulus : -modulus;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'MROUND': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //要舍入的值\n                var number = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number)) {\n                    return number;\n                }\n                if (!isRealNum(number)) {\n                    return formula.error.v;\n                }\n                number = parseFloat(number);    //要舍入到的倍数\n                //要舍入到的倍数\n                var multiple = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(multiple)) {\n                    return multiple;\n                }\n                if (!isRealNum(multiple)) {\n                    return formula.error.v;\n                }\n                multiple = parseFloat(multiple);\n                if (number * multiple < 0) {\n                    return formula.error.nm;\n                }    //计算结果\n                //计算结果\n                return Math.round(number / multiple) * multiple;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'ODD': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var number = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number)) {\n                    return number;\n                }\n                if (!isRealNum(number)) {\n                    return formula.error.v;\n                }\n                number = parseFloat(number);\n                var temp = Math.ceil(Math.abs(number));\n                temp = temp & 1 ? temp : temp + 1;\n                return number >= 0 ? temp : -temp;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'SUMSQ': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var dataArr = [];\n                for (var i = 0; i < arguments.length; i++) {\n                    var data = arguments[i];\n                    if (getObjType(data) == 'array') {\n                        if (getObjType(data[0]) == 'array' && !func_methods.isDyadicArr(data)) {\n                            return formula.error.v;\n                        }\n                        dataArr = dataArr.concat(func_methods.getDataArr(data, true));\n                    } else if (getObjType(data) == 'object' && data.startCell != null) {\n                        dataArr = dataArr.concat(func_methods.getCellDataArr(data, 'number', true));\n                    } else {\n                        dataArr.push(data);\n                    }\n                }\n                var sum = 0;\n                if (dataArr.length > 0) {\n                    for (var i = 0; i < dataArr.length; i++) {\n                        var number = dataArr[i];\n                        if (!isRealNum(number)) {\n                            return formula.error.v;\n                        }\n                        number = parseFloat(number);\n                        sum += number * number;\n                    }\n                }\n                return sum;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'COMBIN': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //项目的数量\n                var number = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number)) {\n                    return number;\n                }\n                if (!isRealNum(number)) {\n                    return formula.error.v;\n                }\n                number = parseInt(number);    //每一组合中项目的数量\n                //每一组合中项目的数量\n                var number_chosen = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(number_chosen)) {\n                    return number_chosen;\n                }\n                if (!isRealNum(number_chosen)) {\n                    return formula.error.v;\n                }\n                number_chosen = parseInt(number_chosen);\n                if (number < 0 || number_chosen < 0 || number < number_chosen) {\n                    return formula.error.nm;\n                }    //计算结果\n                //计算结果\n                return func_methods.factorial(number) / (func_methods.factorial(number_chosen) * func_methods.factorial(number - number_chosen));\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'SUBTOTAL': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //数字 1-11 或 101-111，用于指定要为分类汇总使用的函数\n                var data_function_num = arguments[0];\n                var function_num;\n                if (getObjType(data_function_num) == 'array') {\n                    if (getObjType(data_function_num[0]) == 'array') {\n                        if (!func_methods.isDyadicArr(data_function_num)) {\n                            return formula.error.v;\n                        }\n                        function_num = [];\n                        for (var i = 0; i < data_function_num.length; i++) {\n                            var rowArr = [];\n                            for (var j = 0; j < data_function_num[i].length; j++) {\n                                rowArr.push(data_function_num[i][j]);\n                            }\n                            function_num.push(rowArr);\n                        }\n                    } else {\n                        function_num = [];\n                        for (var i = 0; i < data_function_num.length; i++) {\n                            function_num.push(data_function_num[i]);\n                        }\n                    }\n                } else if (getObjType(data_function_num) == 'object' && data_function_num.startCell != null) {\n                    function_num = func_methods.getFirstValue(data_function_num);\n                } else {\n                    function_num = data_function_num;\n                }\n                var arr = Array.prototype.slice.apply(arguments);\n                arr.shift();    //计算结果\n                //计算结果\n                if (getObjType(function_num) == 'array') {\n                    var result = [];\n                    if (getObjType(function_num[0]) == 'array') {\n                        for (var i = 0; i < function_num.length; i++) {\n                            var rowArr = [];\n                            for (var j = 0; j < function_num[i].length; j++) {\n                                var value = function_num[i][j];\n                                if (valueIsError(value)) {\n                                    rowArr.push(value);\n                                } else if (!isRealNum(value)) {\n                                    rowArr.push(formula.error.v);\n                                } else {\n                                    value = parseInt(value);\n                                    if (value < 1 || value > 111 || value > 11 && value < 101) {\n                                        rowArr.push(formula.error.v);\n                                    } else {\n                                        rowArr.push(compute(value));\n                                    }\n                                }\n                            }\n                            result.push(rowArr);\n                        }\n                    } else {\n                        for (var i = 0; i < function_num.length; i++) {\n                            var value = function_num[i];\n                            if (valueIsError(value)) {\n                                result.push(value);\n                            } else if (!isRealNum(value)) {\n                                result.push(formula.error.v);\n                            } else {\n                                value = parseInt(value);\n                                if (value < 1 || value > 111 || value > 11 && value < 101) {\n                                    result.push(formula.error.v);\n                                } else {\n                                    result.push(compute(value));\n                                }\n                            }\n                        }\n                    }\n                    return result;\n                } else {\n                    if (valueIsError(function_num)) {\n                        return function_num;\n                    }\n                    if (!isRealNum(function_num)) {\n                        return formula.error.v;\n                    }\n                    function_num = parseInt(function_num);\n                    if (function_num < 1 || function_num > 111 || function_num > 11 && function_num < 101) {\n                        return formula.error.v;\n                    }\n                    return compute(function_num);\n                }\n                function compute(function_num) {\n                    switch (function_num) {\n                    case 1:    //AVERAGE\n                    //AVERAGE\n                    case 101:\n                        return window.luckysheet_function.AVERAGE.f.apply(window.luckysheet_function.AVERAGE, arr);\n                        break;\n                    case 2:    //COUNT\n                    //COUNT\n                    case 102:\n                        return window.luckysheet_function.COUNT.f.apply(window.luckysheet_function.COUNT, arr);\n                        break;\n                    case 3:    //COUNTA\n                    //COUNTA\n                    case 103:\n                        return window.luckysheet_function.COUNTA.f.apply(window.luckysheet_function.COUNTA, arr);\n                        break;\n                    case 4:    //MAX\n                    //MAX\n                    case 104:\n                        return window.luckysheet_function.MAX.f.apply(window.luckysheet_function.MAX, arr);\n                        break;\n                    case 5:    //MIN\n                    //MIN\n                    case 105:\n                        return window.luckysheet_function.MIN.f.apply(window.luckysheet_function.MIN, arr);\n                        break;\n                    case 6:    //PRODUCT\n                    //PRODUCT\n                    case 106:\n                        return window.luckysheet_function.PRODUCT.f.apply(window.luckysheet_function.PRODUCT, arr);\n                        break;\n                    case 7:    //STDEV\n                    //STDEV\n                    case 107:\n                        return window.luckysheet_function.STDEVA.f.apply(window.luckysheet_function.STDEVA, arr);\n                        break;\n                    case 8:    //STDEVP\n                    //STDEVP\n                    case 108:\n                        return window.luckysheet_function.STDEVP.f.apply(window.luckysheet_function.STDEVP, arr);\n                        break;\n                    case 9:    //SUM\n                    //SUM\n                    case 109:\n                        return window.luckysheet_function.SUM.f.apply(window.luckysheet_function.SUM, arr);\n                        break;\n                    case 10:    //VAR\n                    //VAR\n                    case 110:\n                        return window.luckysheet_function.VAR_S.f.apply(window.luckysheet_function.VAR_S, arr);\n                        break;\n                    case 11:    //VARP\n                    //VARP\n                    case 111:\n                        return window.luckysheet_function.VAR_P.f.apply(window.luckysheet_function.VAR_P, arr);\n                        break;\n                    }\n                }\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'ASIN': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var number = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number)) {\n                    return number;\n                }\n                if (!isRealNum(number)) {\n                    return formula.error.v;\n                }\n                number = parseFloat(number);\n                if (number < -1 || number > 1) {\n                    return formula.error.nm;\n                }\n                return Math.asin(number);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'COUNTIF': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //范围\n                var data_range = arguments[0];\n                var range;\n                if (getObjType(data_range) == 'object' && data_range.startCell != null) {\n                    range = data_range.data;\n                } else {\n                    return formula.error.v;\n                }    //条件\n                //条件\n                var data_criteria = arguments[1];\n                var criteria;\n                if (getObjType(data_criteria) == 'array') {\n                    criteria = [];\n                    if (getObjType(data_criteria[0]) == 'array') {\n                        if (!func_methods.isDyadicArr(data_criteria)) {\n                            return formula.error.v;\n                        }\n                        for (var i = 0; i < data_criteria.length; i++) {\n                            var rowArr = [];\n                            for (var j = 0; j < data_criteria[i].length; j++) {\n                                rowArr.push(data_criteria[i][j]);\n                            }\n                            criteria.push(rowArr);\n                        }\n                    } else {\n                        for (var i = 0; i < data_criteria.length; i++) {\n                            criteria.push(data_criteria[i]);\n                        }\n                    }\n                } else if (getObjType(data_criteria) == 'object' && data_criteria.startCell != null) {\n                    if (data_criteria.rowl > 1 || data_criteria.coll > 1) {\n                        return 0;\n                    }\n                    criteria = data_criteria.data.v;\n                } else {\n                    criteria = data_criteria;\n                }    //计算\n                //计算\n                if (getObjType(criteria) == 'array') {\n                    var result = [];\n                    if (getObjType(criteria[0]) == 'array') {\n                        for (var i = 0; i < criteria.length; i++) {\n                            var rowArr = [];\n                            for (var j = 0; j < criteria[i].length; j++) {\n                                rowArr.push(getCriteriaResult(range, criteria[i][j]));\n                            }\n                            result.push(rowArr);\n                        }\n                    } else {\n                        for (var i = 0; i < criteria.length; i++) {\n                            result.push(getCriteriaResult(range, criteria[i]));\n                        }\n                    }\n                    return result;\n                } else {\n                    return getCriteriaResult(range, criteria);\n                }\n                function getCriteriaResult(range, criter) {\n                    if (!/[<>=!*?]/.test(criter)) {\n                        criter = '==\"' + criter + '\"';\n                    }\n                    criter = criter.replace('<>', '!=');\n                    var matches = 0;\n                    if (getObjType(range) == 'array') {\n                        for (var i = 0; i < range.length; i++) {\n                            for (var j = 0; j < range[i].length; j++) {\n                                if (range[i][j] != null && !isRealNull(range[i][j].v)) {\n                                    var value = range[i][j].v;\n                                    if (criter.indexOf('*') > -1 || criter.indexOf('?') > -1) {\n                                        if (formula.isWildcard(value, criter)) {\n                                            matches++;\n                                        }\n                                    } else {\n                                        if (typeof value !== 'string') {\n                                            if (new Function('return ' + value + criter)()) {\n                                                matches++;\n                                            }\n                                        } else {\n                                            if (new Function('return ' + '\"' + value + '\"' + criter)()) {\n                                                matches++;\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    } else {\n                        if (range != null && !isRealNull(range.v)) {\n                            var value = range.v;\n                            if (criter.indexOf('*') > -1 || criter.indexOf('?') > -1) {\n                                if (formula.isWildcard(value, criter)) {\n                                    matches++;\n                                }\n                            } else {\n                                if (typeof value !== 'string') {\n                                    if (new Function('return ' + value + criter)()) {\n                                        matches++;\n                                    }\n                                } else {\n                                    if (new Function('return ' + '\"' + value + '\"' + criter)()) {\n                                        matches++;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    return matches;\n                }\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'RADIANS': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var number = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number)) {\n                    return number;\n                }\n                if (!isRealNum(number)) {\n                    return formula.error.v;\n                }\n                number = parseFloat(number);\n                return number * Math.PI / 180;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'RAND': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }\n            try {\n                return Math.floor(Math.random() * 1000000000) / 1000000000;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'COUNTUNIQUE': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var dataArr = [];\n                for (var i = 0; i < arguments.length; i++) {\n                    var data = arguments[i];\n                    if (getObjType(data) == 'array') {\n                        if (getObjType(data[0]) == 'array' && !func_methods.isDyadicArr(data)) {\n                            return formula.error.v;\n                        }\n                        dataArr = dataArr.concat(func_methods.getDataArr(data, true));\n                    } else if (getObjType(data) == 'object' && data.startCell != null) {\n                        dataArr = dataArr.concat(func_methods.getCellDataArr(data, 'text', true));\n                    } else {\n                        dataArr.push(data);\n                    }\n                }\n                return window.luckysheet_function.UNIQUE.f(dataArr);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'DEGREES': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var number = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number)) {\n                    return number;\n                }\n                if (!isRealNum(number)) {\n                    return formula.error.v;\n                }\n                number = parseFloat(number);\n                return number * 180 / Math.PI;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'ERFC': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var number = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number)) {\n                    return number;\n                }\n                if (!isRealNum(number)) {\n                    return formula.error.v;\n                }\n                number = parseFloat(number);\n                return jStat.erfc(number);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'EVEN': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var number = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number)) {\n                    return number;\n                }\n                if (!isRealNum(number)) {\n                    return formula.error.v;\n                }\n                number = parseFloat(number);\n                var temp = Math.ceil(Math.abs(number));\n                temp = temp & 1 ? temp + 1 : temp;\n                return number > 0 ? temp : -temp;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'EXP': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var number = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number)) {\n                    return number;\n                }\n                if (!isRealNum(number)) {\n                    return formula.error.v;\n                }\n                number = parseFloat(number);\n                return Math.exp(number);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'FACT': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var number = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number)) {\n                    return number;\n                }\n                if (!isRealNum(number)) {\n                    if (getObjType(number) == 'boolean') {\n                        if (number.toString().toLowerCase() == 'true') {\n                            number = 1;\n                        } else if (number.toString().toLowerCase() == 'false') {\n                            number = 0;\n                        }\n                    } else {\n                        return formula.error.v;\n                    }\n                }\n                number = parseInt(number);\n                if (number < 0) {\n                    return formula.error.nm;\n                }\n                return func_methods.factorial(number);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'FACTDOUBLE': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var number = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number)) {\n                    return number;\n                }\n                if (!isRealNum(number)) {\n                    if (getObjType(number) == 'boolean') {\n                        if (number.toString().toLowerCase() == 'true') {\n                            number = 1;\n                        } else if (number.toString().toLowerCase() == 'false') {\n                            number = 0;\n                        }\n                    } else {\n                        return formula.error.v;\n                    }\n                }\n                number = parseInt(number);\n                if (number < 0) {\n                    return formula.error.nm;\n                }\n                return func_methods.factorialDouble(number);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'PI': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }\n            try {\n                return Math.PI;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'FLOOR': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //number\n                var number = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number)) {\n                    return number;\n                }\n                if (!isRealNum(number)) {\n                    return formula.error.v;\n                }\n                number = parseFloat(number);    //significance\n                //significance\n                var significance = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(significance)) {\n                    return significance;\n                }\n                if (!isRealNum(significance)) {\n                    return formula.error.v;\n                }\n                significance = parseFloat(significance);\n                if (significance == 0) {\n                    return formula.error.d;\n                }\n                if (number > 0 && significance < 0) {\n                    return formula.error.nm;\n                }    //计算\n                //计算\n                var precision = -Math.floor(Math.log(Math.abs(significance)) / Math.log(10));\n                if (number >= 0) {\n                    return Math.floor(number / significance) * significance * Math.pow(10, precision) / Math.pow(10, precision);\n                } else {\n                    return -(Math.ceil(Math.abs(number) / significance) * significance * Math.pow(10, precision)) / Math.pow(10, precision);\n                }\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'GCD': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var dataArr = [];\n                for (var i = 0; i < arguments.length; i++) {\n                    var data = arguments[i];\n                    if (getObjType(data) == 'array') {\n                        if (getObjType(data[0]) == 'array' && !func_methods.isDyadicArr(data)) {\n                            return formula.error.v;\n                        }\n                        dataArr = dataArr.concat(func_methods.getDataArr(data, false));\n                    } else if (getObjType(data) == 'object' && data.startCell != null) {\n                        dataArr = dataArr.concat(func_methods.getCellDataArr(data, 'number', false));\n                    } else {\n                        dataArr.push(data);\n                    }\n                }\n                if (!isRealNum(dataArr[0])) {\n                    return formula.error.v;\n                }\n                var x = parseInt(dataArr[0]);\n                if (x < 0 || x >= Math.pow(2, 53)) {\n                    return formula.error.nm;\n                }\n                for (var i = 1; i < dataArr.length; i++) {\n                    var y = dataArr[i];\n                    if (!isRealNum(y)) {\n                        return formula.error.v;\n                    }\n                    y = parseInt(y);\n                    if (y < 0 || y >= Math.pow(2, 53)) {\n                        return formula.error.nm;\n                    }\n                    while (x && y) {\n                        if (x > y) {\n                            x %= y;\n                        } else {\n                            y %= x;\n                        }\n                    }\n                    x += y;\n                }\n                return x;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'RANDBETWEEN': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //下界\n                var bottom = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(bottom)) {\n                    return bottom;\n                }\n                if (!isRealNum(bottom)) {\n                    return formula.error.v;\n                }\n                bottom = parseInt(bottom);    //上界\n                //上界\n                var top = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(top)) {\n                    return top;\n                }\n                if (!isRealNum(top)) {\n                    return formula.error.v;\n                }\n                top = parseInt(top);\n                if (bottom > top) {\n                    return formula.error.nm;\n                }    //计算\n                //计算\n                return bottom + Math.ceil((top - bottom + 1) * Math.random()) - 1;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'ROUND': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //四舍五入的数字\n                var number = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number)) {\n                    return number;\n                }\n                if (!isRealNum(number)) {\n                    return formula.error.v;\n                }\n                number = parseFloat(number);    //位数\n                //位数\n                var digits = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(digits)) {\n                    return digits;\n                }\n                if (!isRealNum(digits)) {\n                    return formula.error.v;\n                }\n                digits = parseInt(digits);    //计算\n                //计算\n                var sign = number > 0 ? 1 : -1;\n                return sign * Math.round(Math.abs(number) * Math.pow(10, digits)) / Math.pow(10, digits);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'ROUNDDOWN': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //四舍五入的数字\n                var number = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number)) {\n                    return number;\n                }\n                if (!isRealNum(number)) {\n                    return formula.error.v;\n                }\n                number = parseFloat(number);    //位数\n                //位数\n                var digits = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(digits)) {\n                    return digits;\n                }\n                if (!isRealNum(digits)) {\n                    return formula.error.v;\n                }\n                digits = parseInt(digits);    //计算\n                //计算\n                var sign = number > 0 ? 1 : -1;\n                return sign * Math.floor(Math.abs(number) * Math.pow(10, digits)) / Math.pow(10, digits);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'ROUNDUP': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //四舍五入的数字\n                var number = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number)) {\n                    return number;\n                }\n                if (!isRealNum(number)) {\n                    return formula.error.v;\n                }\n                number = parseFloat(number);    //位数\n                //位数\n                var digits = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(digits)) {\n                    return digits;\n                }\n                if (!isRealNum(digits)) {\n                    return formula.error.v;\n                }\n                digits = parseInt(digits);    //计算\n                //计算\n                var sign = number > 0 ? 1 : -1;\n                return sign * Math.ceil(Math.abs(number) * Math.pow(10, digits)) / Math.pow(10, digits);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'SERIESSUM': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //幂级数的输入值\n                var x = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(x)) {\n                    return x;\n                }\n                if (!isRealNum(x)) {\n                    return formula.error.v;\n                }\n                x = parseFloat(x);    //x 的首项乘幂\n                //x 的首项乘幂\n                var n = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(n)) {\n                    return n;\n                }\n                if (!isRealNum(n)) {\n                    return formula.error.v;\n                }\n                n = parseFloat(n);    //级数中每一项的乘幂 n 的步长增加值\n                //级数中每一项的乘幂 n 的步长增加值\n                var m = func_methods.getFirstValue(arguments[2]);\n                if (valueIsError(m)) {\n                    return m;\n                }\n                if (!isRealNum(m)) {\n                    return formula.error.v;\n                }\n                m = parseFloat(m);    //与 x 的每个连续乘幂相乘的一组系数\n                //与 x 的每个连续乘幂相乘的一组系数\n                var data_coefficients = arguments[3];\n                var coefficients = [];\n                if (getObjType(data_coefficients) == 'array') {\n                    if (getObjType(data_coefficients[0]) == 'array' && !func_methods.isDyadicArr(data_coefficients)) {\n                        return formula.error.v;\n                    }\n                    coefficients = coefficients.concat(func_methods.getDataArr(data_coefficients, false));\n                } else if (getObjType(data_coefficients) == 'object' && data_coefficients.startCell != null) {\n                    coefficients = coefficients.concat(func_methods.getCellDataArr(data_coefficients, 'number', false));\n                } else {\n                    coefficients.push(data_coefficients);\n                }    //计算\n                //计算\n                if (!isRealNum(coefficients[0])) {\n                    return formula.error.v;\n                }\n                var result = parseFloat(coefficients[0]) * Math.pow(x, n);\n                for (var i = 1; i < coefficients.length; i++) {\n                    var number = coefficients[i];\n                    if (!isRealNum(number)) {\n                        return formula.error.v;\n                    }\n                    number = parseFloat(number);\n                    result += number * Math.pow(x, n + i * m);\n                }\n                return result;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'SIGN': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var number = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number)) {\n                    return number;\n                }\n                if (!isRealNum(number)) {\n                    return formula.error.v;\n                }\n                number = parseFloat(number);\n                if (number > 0) {\n                    return 1;\n                } else if (number == 0) {\n                    return 0;\n                } else if (number < 0) {\n                    return -1;\n                }\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'SIN': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var number = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number)) {\n                    return number;\n                }\n                if (!isRealNum(number)) {\n                    return formula.error.v;\n                }\n                number = parseFloat(number);\n                return Math.sin(number);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'SINH': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var number = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number)) {\n                    return number;\n                }\n                if (!isRealNum(number)) {\n                    return formula.error.v;\n                }\n                number = parseFloat(number);\n                return (Math.exp(number) - Math.exp(-number)) / 2;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'SQRT': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var number = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number)) {\n                    return number;\n                }\n                if (!isRealNum(number)) {\n                    return formula.error.v;\n                }\n                number = parseFloat(number);\n                if (number < 0) {\n                    return formula.error.nm;\n                }\n                return Math.sqrt(number);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'SQRTPI': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var number = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number)) {\n                    return number;\n                }\n                if (!isRealNum(number)) {\n                    return formula.error.v;\n                }\n                number = parseFloat(number);\n                if (number < 0) {\n                    return formula.error.nm;\n                }\n                return Math.sqrt(number * Math.PI);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'GAMMALN': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var number = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number)) {\n                    return number;\n                }\n                if (!isRealNum(number)) {\n                    return formula.error.v;\n                }\n                number = parseFloat(number);\n                if (number <= 0) {\n                    return formula.error.nm;\n                }\n                return jStat.gammaln(number);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'COS': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var number = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number)) {\n                    return number;\n                }\n                if (!isRealNum(number)) {\n                    return formula.error.v;\n                }\n                number = parseFloat(number);\n                return Math.cos(number);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'TRUNC': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //要截取的数据\n                var number = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number)) {\n                    return number;\n                }\n                if (!isRealNum(number)) {\n                    return formula.error.v;\n                }\n                number = parseFloat(number);    //位数\n                //位数\n                if (arguments.length == 2) {\n                    var digits = func_methods.getFirstValue(arguments[1]);\n                    if (valueIsError(digits)) {\n                        return digits;\n                    }\n                    if (!isRealNum(digits)) {\n                        return formula.error.v;\n                    }\n                    digits = parseInt(digits);\n                } else {\n                    var digits = 0;\n                }    //计算\n                //计算\n                var sign = number > 0 ? 1 : -1;\n                return sign * Math.floor(Math.abs(number) * Math.pow(10, digits)) / Math.pow(10, digits);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'QUOTIENT': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //被除数\n                var numerator = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(numerator)) {\n                    return numerator;\n                }\n                if (!isRealNum(numerator)) {\n                    return formula.error.v;\n                }\n                numerator = parseFloat(numerator);    //除数\n                //除数\n                var denominator = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(denominator)) {\n                    return denominator;\n                }\n                if (!isRealNum(denominator)) {\n                    return formula.error.v;\n                }\n                denominator = parseFloat(denominator);\n                if (denominator == 0) {\n                    return formula.error.d;\n                }    //计算\n                //计算\n                return parseInt(numerator / denominator, 10);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'POWER': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //底数\n                var number = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number)) {\n                    return number;\n                }\n                if (!isRealNum(number)) {\n                    return formula.error.v;\n                }\n                number = parseFloat(number);    //指数\n                //指数\n                var power = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(power)) {\n                    return power;\n                }\n                if (!isRealNum(power)) {\n                    return formula.error.v;\n                }\n                power = parseFloat(power);\n                if (number == 0 && power == 0) {\n                    return formula.error.nm;\n                }\n                if (number < 0 && power.toString().indexOf('.') > -1) {\n                    return formula.error.nm;\n                }\n                return Math.pow(number, power);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'SUMIFS': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var sum = 0;\n                var args = arguments;\n                luckysheet_getValue(args);\n                var rangeData = formula.getRangeArray(args[0])[0];\n                var results = new Array(rangeData.length);\n                for (var i = 0; i < results.length; i++) {\n                    results[i] = true;\n                }\n                for (var i = 1; i < args.length; i += 2) {\n                    var range = formula.getRangeArray(args[i])[0];\n                    var criteria = args[i + 1];\n                    for (var j = 0; j < range.length; j++) {\n                        var v = range[j];\n                        results[j] = results[j] && !!v && formula.acompareb(v, criteria);\n                    }\n                }\n                for (var i = 0; i < rangeData.length; i++) {\n                    if (results[i]) {\n                        sum = luckysheet_calcADPMM(sum, '+', rangeData[i]);    //parseFloat(rangeData[i]);\n                    }\n                }\n                //parseFloat(rangeData[i]);\n                return sum;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'COUNTIFS': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var args = arguments;\n                luckysheet_getValue(args);\n                var results = new Array(formula.getRangeArray(args[0])[0].length);\n                for (var i = 0; i < results.length; i++) {\n                    results[i] = true;\n                }\n                for (var i = 0; i < args.length; i += 2) {\n                    var range = formula.getRangeArray(args[i])[0];\n                    var criteria = args[i + 1];\n                    for (var j = 0; j < range.length; j++) {\n                        var v = range[j];\n                        results[j] = results[j] && !!v && formula.acompareb(v, criteria);\n                    }\n                }\n                var result = 0;\n                for (var i = 0; i < results.length; i++) {\n                    if (results[i]) {\n                        result++;\n                    }\n                }\n                return result;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'PRODUCT': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var dataArr = [];\n                for (var i = 0; i < arguments.length; i++) {\n                    var data = arguments[i];\n                    if (getObjType(data) == 'array') {\n                        if (getObjType(data[0]) == 'array' && !func_methods.isDyadicArr(data)) {\n                            return formula.error.v;\n                        }\n                        dataArr = dataArr.concat(func_methods.getDataArr(data, true));\n                    } else if (getObjType(data) == 'object' && data.startCell != null) {\n                        dataArr = dataArr.concat(func_methods.getCellDataArr(data, 'number', true));\n                    } else {\n                        dataArr.push(data);\n                    }\n                }\n                var result = 1;\n                for (var i = 0; i < dataArr.length; i++) {\n                    var number = dataArr[i];\n                    if (!isRealNum(number)) {\n                        return formula.error.v;\n                    }\n                    number = parseFloat(number);\n                    result *= number;\n                }\n                return result;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'HARMEAN': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var dataArr = [];\n                for (var i = 0; i < arguments.length; i++) {\n                    var data = arguments[i];\n                    if (getObjType(data) == 'array') {\n                        if (getObjType(data[0]) == 'array' && !func_methods.isDyadicArr(data)) {\n                            return formula.error.v;\n                        }\n                        dataArr = dataArr.concat(func_methods.getDataArr(data, true));\n                    } else if (getObjType(data) == 'object' && data.startCell != null) {\n                        dataArr = dataArr.concat(func_methods.getCellDataArr(data, 'number', true));\n                    } else {\n                        dataArr.push(data);\n                    }\n                }\n                var den = 0, len = 0;\n                for (var i = 0; i < dataArr.length; i++) {\n                    var number = dataArr[i];\n                    if (!isRealNum(number)) {\n                        return formula.error.v;\n                    }\n                    number = parseFloat(number);\n                    if (number <= 0) {\n                        return formula.error.nm;\n                    }\n                    den += 1 / number;\n                    len++;\n                }\n                return len / den;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'HYPGEOMDIST': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //样本中成功的次数\n                var sample_s = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(sample_s)) {\n                    return sample_s;\n                }\n                if (!isRealNum(sample_s)) {\n                    return formula.error.v;\n                }\n                sample_s = parseInt(sample_s);    //样本量\n                //样本量\n                var number_sample = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(number_sample)) {\n                    return number_sample;\n                }\n                if (!isRealNum(number_sample)) {\n                    return formula.error.v;\n                }\n                number_sample = parseInt(number_sample);    //总体中成功的次数\n                //总体中成功的次数\n                var population_s = func_methods.getFirstValue(arguments[2]);\n                if (valueIsError(population_s)) {\n                    return population_s;\n                }\n                if (!isRealNum(population_s)) {\n                    return formula.error.v;\n                }\n                population_s = parseInt(population_s);    //总体大小\n                //总体大小\n                var number_pop = func_methods.getFirstValue(arguments[3]);\n                if (valueIsError(number_pop)) {\n                    return number_pop;\n                }\n                if (!isRealNum(number_pop)) {\n                    return formula.error.v;\n                }\n                number_pop = parseInt(number_pop);    //决定函数形式的逻辑值\n                //决定函数形式的逻辑值\n                var cumulative = func_methods.getCellBoolen(arguments[4]);\n                if (valueIsError(cumulative)) {\n                    return cumulative;\n                }\n                if (sample_s < 0 || sample_s > Math.min(number_sample, population_s) || sample_s < Math.max(0, number_sample - number_pop + population_s)) {\n                    return formula.error.nm;\n                }\n                if (number_sample <= 0 || number_sample > number_pop) {\n                    return formula.error.nm;\n                }\n                if (population_s <= 0 || population_s > number_pop) {\n                    return formula.error.nm;\n                }\n                if (number_pop <= 0) {\n                    return formula.error.nm;\n                }    //计算\n                //计算\n                function pdf(x, n, M, N) {\n                    var a = func_methods.factorial(M) / (func_methods.factorial(x) * func_methods.factorial(M - x));\n                    var b = func_methods.factorial(N - M) / (func_methods.factorial(n - x) * func_methods.factorial(N - M - n + x));\n                    var c = func_methods.factorial(N) / (func_methods.factorial(n) * func_methods.factorial(N - n));\n                    return a * b / c;\n                }\n                function cdf(x, n, M, N) {\n                    var sum = 0;\n                    for (var i = 0; i <= x; i++) {\n                        sum += pdf(i, n, M, N);\n                    }\n                    return sum;\n                }\n                return cumulative ? cdf(sample_s, number_sample, population_s, number_pop) : pdf(sample_s, number_sample, population_s, number_pop);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'INTERCEPT': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //x轴上用于预测的值\n                var x = 0;    //代表因变量数据数组或矩阵的范围\n                //代表因变量数据数组或矩阵的范围\n                var data_known_y = arguments[0];\n                var known_y = [];\n                if (getObjType(data_known_y) == 'array') {\n                    if (getObjType(data_known_y[0]) == 'array' && !func_methods.isDyadicArr(data_known_y)) {\n                        return formula.error.v;\n                    }\n                    known_y = known_y.concat(func_methods.getDataArr(data_known_y, false));\n                } else if (getObjType(data_known_y) == 'object' && data_known_y.startCell != null) {\n                    known_y = known_y.concat(func_methods.getCellDataArr(data_known_y, 'text', false));\n                } else {\n                    known_y.push(data_known_y);\n                }    //代表自变量数据数组或矩阵的范围\n                //代表自变量数据数组或矩阵的范围\n                var data_known_x = arguments[1];\n                var known_x = [];\n                if (getObjType(data_known_x) == 'array') {\n                    if (getObjType(data_known_x[0]) == 'array' && !func_methods.isDyadicArr(data_known_x)) {\n                        return formula.error.v;\n                    }\n                    known_x = known_x.concat(func_methods.getDataArr(data_known_x, false));\n                } else if (getObjType(data_known_x) == 'object' && data_known_x.startCell != null) {\n                    known_x = known_x.concat(func_methods.getCellDataArr(data_known_x, 'text', false));\n                } else {\n                    known_x.push(data_known_x);\n                }\n                if (known_y.length != known_x.length) {\n                    return formula.error.na;\n                }    //known_y 和 known_x 只取数值\n                //known_y 和 known_x 只取数值\n                var data_y = [], data_x = [];\n                for (var i = 0; i < known_y.length; i++) {\n                    var num_y = known_y[i];\n                    var num_x = known_x[i];\n                    if (isRealNum(num_y) && isRealNum(num_x)) {\n                        data_y.push(parseFloat(num_y));\n                        data_x.push(parseFloat(num_x));\n                    }\n                }\n                if (func_methods.variance_s(data_x) == 0) {\n                    return formula.error.d;\n                }    //计算\n                //计算\n                var xmean = jStat.mean(data_x);\n                var ymean = jStat.mean(data_y);\n                var n = data_x.length;\n                var num = 0;\n                var den = 0;\n                for (var i = 0; i < n; i++) {\n                    num += (data_x[i] - xmean) * (data_y[i] - ymean);\n                    den += Math.pow(data_x[i] - xmean, 2);\n                }\n                var b = num / den;\n                var a = ymean - b * xmean;\n                return a + b * x;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'KURT': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var dataArr = [];\n                for (var i = 0; i < arguments.length; i++) {\n                    var data = arguments[i];\n                    if (getObjType(data) == 'array') {\n                        if (getObjType(data[0]) == 'array' && !func_methods.isDyadicArr(data)) {\n                            return formula.error.v;\n                        }\n                        dataArr = dataArr.concat(func_methods.getDataArr(data, true));\n                    } else if (getObjType(data) == 'object' && data.startCell != null) {\n                        dataArr = dataArr.concat(func_methods.getCellDataArr(data, 'text', true));\n                    } else {\n                        dataArr.push(data);\n                    }\n                }    //剔除不是数值类型的值\n                //剔除不是数值类型的值\n                var dataArr_n = [];\n                for (var j = 0; j < dataArr.length; j++) {\n                    var number = dataArr[j];\n                    if (!isRealNum(number)) {\n                        return formula.error.v;\n                    }\n                    number = parseFloat(number);\n                    dataArr_n.push(number);\n                }\n                if (dataArr_n.length < 4 || func_methods.standardDeviation_s(dataArr_n) == 0) {\n                    return formula.error.d;\n                }    //计算\n                //计算\n                var mean = jStat.mean(dataArr_n);\n                var n = dataArr_n.length;\n                var sigma = 0;\n                for (var i = 0; i < n; i++) {\n                    sigma += Math.pow(dataArr_n[i] - mean, 4);\n                }\n                sigma = sigma / Math.pow(jStat.stdev(dataArr_n, true), 4);\n                return n * (n + 1) / ((n - 1) * (n - 2) * (n - 3)) * sigma - 3 * (n - 1) * (n - 1) / ((n - 2) * (n - 3));\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'LARGE': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //数组或范围\n                var dataArr = [];\n                if (getObjType(arguments[0]) == 'array') {\n                    if (getObjType(arguments[0][0]) == 'array' && !func_methods.isDyadicArr(arguments[0])) {\n                        return formula.error.v;\n                    }\n                    dataArr = dataArr.concat(func_methods.getDataArr(arguments[0], true));\n                } else if (getObjType(arguments[0]) == 'object' && arguments[0].startCell != null) {\n                    dataArr = dataArr.concat(func_methods.getCellDataArr(arguments[0], 'text', true));\n                } else {\n                    dataArr.push(arguments[0]);\n                }\n                var dataArr_n = [];\n                for (var j = 0; j < dataArr.length; j++) {\n                    var number = dataArr[j];\n                    if (!isRealNum(number)) {\n                        return formula.error.v;\n                    }\n                    number = parseFloat(number);\n                    dataArr_n.push(number);\n                }    //要返回的元素的排行位置\n                //要返回的元素的排行位置\n                var n;\n                if (getObjType(arguments[1]) == 'array') {\n                    if (getObjType(arguments[1][0]) == 'array' && !func_methods.isDyadicArr(arguments[1])) {\n                        return formula.error.v;\n                    }\n                    n = func_methods.getDataArr(arguments[1]);\n                } else if (getObjType(arguments[1]) == 'object' && arguments[1].startCell != null) {\n                    if (arguments[1].rowl > 1 || arguments[1].coll > 1) {\n                        return formula.error.v;\n                    }\n                    var cell = arguments[1].data;\n                    if (cell == null || isRealNull(cell.v)) {\n                        var n = 0;\n                    } else {\n                        var n = cell.v;\n                    }\n                } else {\n                    n = arguments[1];\n                }    //计算\n                //计算\n                if (getObjType(n) == 'array') {\n                    if (dataArr_n.length == 0) {\n                        return formula.error.nm;\n                    }\n                    var result = [];\n                    for (var i = 0; i < n.length; i++) {\n                        if (!isRealNum(n[i])) {\n                            result.push(formula.error.v);\n                            continue;\n                        }\n                        n[i] = Math.ceil(parseFloat(n[i]));\n                        if (n[i] <= 0 || n[i] > dataArr_n.length) {\n                            result.push(formula.error.nm);\n                            continue;\n                        }\n                        result.push(dataArr.sort(function (a, b) {\n                            return b - a;\n                        })[n[i] - 1]);\n                    }\n                    return result;\n                } else {\n                    if (!isRealNum(n)) {\n                        return formula.error.v;\n                    }\n                    n = Math.ceil(parseFloat(n));\n                    if (dataArr_n.length == 0) {\n                        return formula.error.nm;\n                    }\n                    if (n <= 0 || n > dataArr_n.length) {\n                        return formula.error.nm;\n                    }\n                    return dataArr.sort(function (a, b) {\n                        return b - a;\n                    })[n - 1];\n                }\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'STDEVA': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var dataArr = [];\n                for (var i = 0; i < arguments.length; i++) {\n                    var data = arguments[i];\n                    if (getObjType(data) == 'array') {\n                        if (getObjType(data[0]) == 'array' && !func_methods.isDyadicArr(data)) {\n                            return formula.error.v;\n                        }\n                        dataArr = dataArr.concat(func_methods.getDataArr(data, false));\n                    } else if (getObjType(data) == 'object' && data.startCell != null) {\n                        dataArr = dataArr.concat(func_methods.getCellDataArr(data, 'text', false));\n                    } else {\n                        dataArr.push(data);\n                    }\n                }    //不是数值类型的值转化成数字（true为1，false和文本为0）\n                //不是数值类型的值转化成数字（true为1，false和文本为0）\n                var dataArr_n = [];\n                for (var j = 0; j < dataArr.length; j++) {\n                    var number = dataArr[j];\n                    if (!isRealNum(number)) {\n                        if (number.toString().toLowerCase() == 'true') {\n                            number = 1;\n                        } else {\n                            number = 0;\n                        }\n                    } else {\n                        number = parseFloat(number);\n                    }\n                    dataArr_n.push(number);\n                }\n                if (dataArr_n.length == 0) {\n                    return 0;\n                }\n                if (dataArr_n.length == 1) {\n                    return formula.error.d;\n                }\n                return func_methods.standardDeviation_s(dataArr_n);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'STDEVP': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var dataArr = [];\n                for (var i = 0; i < arguments.length; i++) {\n                    var data = arguments[i];\n                    if (getObjType(data) == 'array') {\n                        if (getObjType(data[0]) == 'array' && !func_methods.isDyadicArr(data)) {\n                            return formula.error.v;\n                        }\n                        dataArr = dataArr.concat(func_methods.getDataArr(data, true));\n                    } else if (getObjType(data) == 'object' && data.startCell != null) {\n                        dataArr = dataArr.concat(func_methods.getCellDataArr(data, 'text', true));\n                    } else {\n                        dataArr.push(data);\n                    }\n                }    //剔除不是数值类型的值\n                //剔除不是数值类型的值\n                var dataArr_n = [];\n                for (var j = 0; j < dataArr.length; j++) {\n                    var number = dataArr[j];\n                    if (!isRealNum(number)) {\n                        return formula.error.v;\n                    }\n                    number = parseFloat(number);\n                    dataArr_n.push(number);\n                }\n                if (dataArr_n.length == 0) {\n                    return 0;\n                }\n                if (dataArr_n.length == 1) {\n                    return formula.error.d;\n                }\n                return func_methods.standardDeviation(dataArr_n);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'GEOMEAN': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var dataArr = [];\n                for (var i = 0; i < arguments.length; i++) {\n                    var data = arguments[i];\n                    if (getObjType(data) == 'array') {\n                        if (getObjType(data[0]) == 'array' && !func_methods.isDyadicArr(data)) {\n                            return formula.error.v;\n                        }\n                        dataArr = dataArr.concat(func_methods.getDataArr(data, true));\n                    } else if (getObjType(data) == 'object' && data.startCell != null) {\n                        dataArr = dataArr.concat(func_methods.getCellDataArr(data, 'text', true));\n                    } else {\n                        if (getObjType(data) == 'boolean') {\n                            if (data.toString().toLowerCase() == 'true') {\n                                dataArr.push(1);\n                            } else if (data.toString().toLowerCase() == 'false') {\n                                dataArr.push(0);\n                            }\n                        } else if (isRealNum(data)) {\n                            dataArr.push(data);\n                        } else {\n                            return formula.error.v;\n                        }\n                    }\n                }    //剔除不是数值类型的值\n                //剔除不是数值类型的值\n                var dataArr_n = [];\n                for (var j = 0; j < dataArr.length; j++) {\n                    var number = dataArr[j];\n                    if (!isRealNum(number)) {\n                        continue;\n                    }\n                    number = parseFloat(number);\n                    if (number <= 0) {\n                        return formula.error.nm;\n                    }\n                    dataArr_n.push(number);\n                }\n                if (dataArr_n.length == 0) {\n                    return formula.error.nm;\n                }\n                return jStat.geomean(dataArr_n);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'RANK_EQ': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //要确定其排名的值\n                var number = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number)) {\n                    return number;\n                }\n                if (!isRealNum(number)) {\n                    return formula.error.v;\n                }\n                number = parseFloat(number);    //包含相关数据集的数组或范围\n                //包含相关数据集的数组或范围\n                var data_ref = arguments[1];\n                var ref = [];\n                if (getObjType(data_ref) == 'array') {\n                    if (getObjType(data_ref[0]) == 'array' && !func_methods.isDyadicArr(data_ref)) {\n                        return formula.error.v;\n                    }\n                    ref = ref.concat(func_methods.getDataArr(data_ref, true));\n                } else if (getObjType(data_ref) == 'object' && data_ref.startCell != null) {\n                    ref = ref.concat(func_methods.getCellDataArr(data_ref, 'number', true));\n                } else {\n                    ref.push(data_ref);\n                }\n                var ref_n = [];\n                for (var j = 0; j < ref.length; j++) {\n                    var num = ref[j];\n                    if (!isRealNum(num)) {\n                        return formula.error.v;\n                    }\n                    num = parseFloat(num);\n                    ref_n.push(num);\n                }    //要按升序还是按降序考虑“data”中的值\n                //要按升序还是按降序考虑“data”中的值\n                if (arguments.length == 3) {\n                    var order = func_methods.getCellBoolen(arguments[2]);\n                    if (valueIsError(order)) {\n                        return order;\n                    }\n                } else {\n                    var order = false;\n                }    //计算\n                //计算\n                var sort = order ? function (a, b) {\n                    return a - b;\n                } : function (a, b) {\n                    return b - a;\n                };\n                ref_n = ref_n.sort(sort);\n                var index = ref_n.indexOf(number);\n                if (index == -1) {\n                    return formula.error.na;\n                } else {\n                    return index + 1;\n                }\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'RANK_AVG': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //要确定其排名的值\n                var number = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number)) {\n                    return number;\n                }\n                if (!isRealNum(number)) {\n                    return formula.error.v;\n                }\n                number = parseFloat(number);    //包含相关数据集的数组或范围\n                //包含相关数据集的数组或范围\n                var data_ref = arguments[1];\n                var ref = [];\n                if (getObjType(data_ref) == 'array') {\n                    if (getObjType(data_ref[0]) == 'array' && !func_methods.isDyadicArr(data_ref)) {\n                        return formula.error.v;\n                    }\n                    ref = ref.concat(func_methods.getDataArr(data_ref, true));\n                } else if (getObjType(data_ref) == 'object' && data_ref.startCell != null) {\n                    ref = ref.concat(func_methods.getCellDataArr(data_ref, 'number', true));\n                } else {\n                    ref.push(data_ref);\n                }\n                var ref_n = [];\n                for (var j = 0; j < ref.length; j++) {\n                    var num = ref[j];\n                    if (!isRealNum(num)) {\n                        return formula.error.v;\n                    }\n                    num = parseFloat(num);\n                    ref_n.push(num);\n                }    //要按升序还是按降序考虑“data”中的值\n                //要按升序还是按降序考虑“data”中的值\n                if (arguments.length == 3) {\n                    var order = func_methods.getFirstValue(arguments[2]);\n                    if (valueIsError(order)) {\n                        return order;\n                    }\n                    if (getObjType(order) == 'boolean') {\n                    } else if (getObjType(order) == 'string' && (order.toLowerCase() == 'true' || order.toLowerCase() == 'false')) {\n                        if (order.toLowerCase() == 'true') {\n                            order = true;\n                        }\n                        if (order.toLowerCase() == 'false') {\n                            order = false;\n                        }\n                    } else if (isRealNum(order)) {\n                        order = parseFloat(order);\n                        order = order == 0 ? false : true;\n                    } else {\n                        return formula.error.v;\n                    }\n                } else {\n                    var order = false;\n                }    //计算\n                //计算\n                var sort = order ? function (a, b) {\n                    return a - b;\n                } : function (a, b) {\n                    return b - a;\n                };\n                ref_n = ref_n.sort(sort);\n                var count = 0;\n                for (var i = 0; i < ref_n.length; i++) {\n                    if (ref_n[i] == number) {\n                        count++;\n                    }\n                }\n                return count > 1 ? (2 * ref_n.indexOf(number) + count + 1) / 2 : ref_n.indexOf(number) + 1;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'PERCENTRANK_EXC': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //包含相关数据集的数组或范围\n                var data_ref = arguments[0];\n                var ref = [];\n                if (getObjType(data_ref) == 'array') {\n                    if (getObjType(data_ref[0]) == 'array' && !func_methods.isDyadicArr(data_ref)) {\n                        return formula.error.v;\n                    }\n                    ref = ref.concat(func_methods.getDataArr(data_ref, true));\n                } else if (getObjType(data_ref) == 'object' && data_ref.startCell != null) {\n                    ref = ref.concat(func_methods.getCellDataArr(data_ref, 'number', true));\n                } else {\n                    ref.push(data_ref);\n                }\n                var ref_n = [];\n                for (var j = 0; j < ref.length; j++) {\n                    var number = ref[j];\n                    if (!isRealNum(number)) {\n                        return formula.error.v;\n                    }\n                    number = parseFloat(number);\n                    ref_n.push(number);\n                }    //要确定其百分比排位的值\n                //要确定其百分比排位的值\n                var x = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(x)) {\n                    return x;\n                }\n                if (!isRealNum(x)) {\n                    return formula.error.v;\n                }\n                x = parseFloat(x);    //要在计算中使用的有效位数\n                //要在计算中使用的有效位数\n                if (arguments.length == 3) {\n                    var significance = func_methods.getFirstValue(arguments[2]);\n                    if (valueIsError(significance)) {\n                        return significance;\n                    }\n                    if (!isRealNum(significance)) {\n                        return formula.error.v;\n                    }\n                    significance = parseInt(significance);\n                } else {\n                    var significance = 3;\n                }\n                if (ref_n.length == 0) {\n                    return formula.error.nm;\n                }\n                if (significance < 1) {\n                    return formula.error.nm;\n                }    //计算\n                //计算\n                if (ref_n.length == 1 && ref_n[0] == x) {\n                    return 1;\n                }\n                ref_n = ref_n.sort(function (a, b) {\n                    return a - b;\n                });\n                var uniques = window.luckysheet_function.UNIQUE.f(ref_n)[0];\n                var n = ref_n.length;\n                var m = uniques.length;\n                var power = Math.pow(10, significance);\n                var result = 0;\n                var match = false;\n                var i = 0;\n                while (!match && i < m) {\n                    if (x === uniques[i]) {\n                        result = (ref_n.indexOf(uniques[i]) + 1) / (n + 1);\n                        match = true;\n                    } else if (x >= uniques[i] && (x < uniques[i + 1] || i === m - 1)) {\n                        result = (ref_n.lastIndexOf(uniques[i]) + 1 + (x - uniques[i]) / (uniques[i + 1] - uniques[i])) / (n + 1);\n                        match = true;\n                    }\n                    i++;\n                }\n                if (isNaN(result)) {\n                    return formula.error.na;\n                } else {\n                    return Math.floor(result * power) / power;\n                }\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'PERCENTRANK_INC': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //包含相关数据集的数组或范围\n                var data_ref = arguments[0];\n                var ref = [];\n                if (getObjType(data_ref) == 'array') {\n                    if (getObjType(data_ref[0]) == 'array' && !func_methods.isDyadicArr(data_ref)) {\n                        return formula.error.v;\n                    }\n                    ref = ref.concat(func_methods.getDataArr(data_ref, true));\n                } else if (getObjType(data_ref) == 'object' && data_ref.startCell != null) {\n                    ref = ref.concat(func_methods.getCellDataArr(data_ref, 'number', true));\n                } else {\n                    ref.push(data_ref);\n                }\n                var ref_n = [];\n                for (var j = 0; j < ref.length; j++) {\n                    var number = ref[j];\n                    if (!isRealNum(number)) {\n                        return formula.error.v;\n                    }\n                    number = parseFloat(number);\n                    ref_n.push(number);\n                }    //要确定其百分比排位的值\n                //要确定其百分比排位的值\n                var x = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(x)) {\n                    return x;\n                }\n                if (!isRealNum(x)) {\n                    return formula.error.v;\n                }\n                x = parseFloat(x);    //要在计算中使用的有效位数\n                //要在计算中使用的有效位数\n                if (arguments.length == 3) {\n                    var significance = func_methods.getFirstValue(arguments[2]);\n                    if (valueIsError(significance)) {\n                        return significance;\n                    }\n                    if (!isRealNum(significance)) {\n                        return formula.error.v;\n                    }\n                    significance = parseInt(significance);\n                } else {\n                    var significance = 3;\n                }\n                if (ref_n.length == 0) {\n                    return formula.error.nm;\n                }\n                if (significance < 1) {\n                    return formula.error.nm;\n                }    //计算\n                //计算\n                if (ref_n.length == 1 && ref_n[0] == x) {\n                    return 1;\n                }\n                ref_n = ref_n.sort(function (a, b) {\n                    return a - b;\n                });\n                var uniques = window.luckysheet_function.UNIQUE.f(ref_n)[0];\n                var n = ref_n.length;\n                var m = uniques.length;\n                var power = Math.pow(10, significance);\n                var result = 0;\n                var match = false;\n                var i = 0;\n                while (!match && i < m) {\n                    if (x === uniques[i]) {\n                        result = ref_n.indexOf(uniques[i]) / (n - 1);\n                        match = true;\n                    } else if (x >= uniques[i] && (x < uniques[i + 1] || i === m - 1)) {\n                        result = (ref_n.lastIndexOf(uniques[i]) + (x - uniques[i]) / (uniques[i + 1] - uniques[i])) / (n - 1);\n                        match = true;\n                    }\n                    i++;\n                }\n                if (isNaN(result)) {\n                    return formula.error.na;\n                } else {\n                    return Math.floor(result * power) / power;\n                }\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'FORECAST': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //x轴上用于预测的值\n                var x = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(x)) {\n                    return x;\n                }\n                if (!isRealNum(x)) {\n                    return formula.error.v;\n                }\n                x = parseFloat(x);    //代表因变量数据数组或矩阵的范围\n                //代表因变量数据数组或矩阵的范围\n                var data_known_y = arguments[1];\n                var known_y = [];\n                if (getObjType(data_known_y) == 'array') {\n                    if (getObjType(data_known_y[0]) == 'array' && !func_methods.isDyadicArr(data_known_y)) {\n                        return formula.error.v;\n                    }\n                    known_y = known_y.concat(func_methods.getDataArr(data_known_y, false));\n                } else if (getObjType(data_known_y) == 'object' && data_known_y.startCell != null) {\n                    known_y = known_y.concat(func_methods.getCellDataArr(data_known_y, 'text', false));\n                } else {\n                    known_y.push(data_known_y);\n                }    //代表自变量数据数组或矩阵的范围\n                //代表自变量数据数组或矩阵的范围\n                var data_known_x = arguments[2];\n                var known_x = [];\n                if (getObjType(data_known_x) == 'array') {\n                    if (getObjType(data_known_x[0]) == 'array' && !func_methods.isDyadicArr(data_known_x)) {\n                        return formula.error.v;\n                    }\n                    known_x = known_x.concat(func_methods.getDataArr(data_known_x, false));\n                } else if (getObjType(data_known_x) == 'object' && data_known_x.startCell != null) {\n                    known_x = known_x.concat(func_methods.getCellDataArr(data_known_x, 'text', false));\n                } else {\n                    known_x.push(data_known_x);\n                }\n                if (known_y.length != known_x.length) {\n                    return formula.error.na;\n                }    //known_y 和 known_x 只取数值\n                //known_y 和 known_x 只取数值\n                var data_y = [], data_x = [];\n                for (var i = 0; i < known_y.length; i++) {\n                    var num_y = known_y[i];\n                    var num_x = known_x[i];\n                    if (isRealNum(num_y) && isRealNum(num_x)) {\n                        data_y.push(parseFloat(num_y));\n                        data_x.push(parseFloat(num_x));\n                    }\n                }\n                if (func_methods.variance_s(data_x) == 0) {\n                    return formula.error.d;\n                }    //计算\n                //计算\n                var xmean = jStat.mean(data_x);\n                var ymean = jStat.mean(data_y);\n                var n = data_x.length;\n                var num = 0;\n                var den = 0;\n                for (var i = 0; i < n; i++) {\n                    num += (data_x[i] - xmean) * (data_y[i] - ymean);\n                    den += Math.pow(data_x[i] - xmean, 2);\n                }\n                var b = num / den;\n                var a = ymean - b * xmean;\n                return a + b * x;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'FISHERINV': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var y = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(y)) {\n                    return y;\n                }\n                if (!isRealNum(y)) {\n                    return formula.error.v;\n                }\n                y = parseFloat(y);\n                var e2y = Math.exp(2 * y);\n                return (e2y - 1) / (e2y + 1);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'FISHER': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var x = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(x)) {\n                    return x;\n                }\n                if (!isRealNum(x)) {\n                    return formula.error.v;\n                }\n                x = parseFloat(x);\n                if (x <= -1 || x >= 1) {\n                    return formula.error.nm;\n                }\n                return Math.log((1 + x) / (1 - x)) / 2;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'MODE_SNGL': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var dataArr = [];\n                for (var i = 0; i < arguments.length; i++) {\n                    var data = arguments[i];\n                    if (getObjType(data) == 'array') {\n                        if (getObjType(data[0]) == 'array' && !func_methods.isDyadicArr(data)) {\n                            return formula.error.v;\n                        }\n                        dataArr = dataArr.concat(func_methods.getDataArr(data, true));\n                    } else if (getObjType(data) == 'object' && data.startCell != null) {\n                        dataArr = dataArr.concat(func_methods.getCellDataArr(data, 'number', true));\n                    } else {\n                        if (!isRealNum(data)) {\n                            return formula.error.v;\n                        }\n                        dataArr.push(data);\n                    }\n                }\n                var dataArr_n = [];\n                for (var i = 0; i < dataArr.length; i++) {\n                    var number = dataArr[i];\n                    if (isRealNum(number)) {\n                        dataArr_n.push(parseFloat(number));\n                    }\n                }\n                var count = {};\n                var maxItems = [];\n                var max = 0;\n                var currentItem;\n                for (var i = 0; i < dataArr_n.length; i++) {\n                    currentItem = dataArr_n[i];\n                    count[currentItem] = count[currentItem] ? count[currentItem] + 1 : 1;\n                    if (count[currentItem] > max) {\n                        max = count[currentItem];\n                        maxItems = [];\n                    }\n                    if (count[currentItem] == max) {\n                        maxItems[maxItems.length] = currentItem;\n                    }\n                }\n                if (max <= 1) {\n                    return formula.error.na;\n                }\n                var resultIndex = dataArr_n.indexOf(maxItems[0]);\n                for (var j = 0; j < maxItems.length; j++) {\n                    var index = dataArr_n.indexOf(maxItems[j]);\n                    if (index < resultIndex) {\n                        resultIndex = index;\n                    }\n                }\n                return dataArr_n[resultIndex];\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'WEIBULL_DIST': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //WEIBULL 分布函数的输入值\n                var x = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(x)) {\n                    return x;\n                }\n                if (!isRealNum(x)) {\n                    return formula.error.v;\n                }\n                x = parseFloat(x);    //Weibull 分布函数的形状参数\n                //Weibull 分布函数的形状参数\n                var alpha = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(alpha)) {\n                    return alpha;\n                }\n                if (!isRealNum(alpha)) {\n                    return formula.error.v;\n                }\n                alpha = parseFloat(alpha);    //Weibull 分布函数的尺度参数\n                //Weibull 分布函数的尺度参数\n                var beta = func_methods.getFirstValue(arguments[2]);\n                if (valueIsError(beta)) {\n                    return beta;\n                }\n                if (!isRealNum(beta)) {\n                    return formula.error.v;\n                }\n                beta = parseFloat(beta);    //决定函数形式的逻辑值\n                //决定函数形式的逻辑值\n                var cumulative = func_methods.getCellBoolen(arguments[3]);\n                if (valueIsError(cumulative)) {\n                    return cumulative;\n                }\n                if (x < 0 || alpha <= 0 || beta <= 0) {\n                    return formula.error.nm;\n                }\n                return cumulative ? 1 - Math.exp(-Math.pow(x / beta, alpha)) : Math.pow(x, alpha - 1) * Math.exp(-Math.pow(x / beta, alpha)) * alpha / Math.pow(beta, alpha);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'AVEDEV': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var dataArr = [];\n                for (var i = 0; i < arguments.length; i++) {\n                    var data = arguments[i];\n                    if (getObjType(data) == 'array') {\n                        if (getObjType(data[0]) == 'array' && !func_methods.isDyadicArr(data)) {\n                            return formula.error.v;\n                        }\n                        dataArr = dataArr.concat(func_methods.getDataArr(data, true));\n                    } else if (getObjType(data) == 'object' && data.startCell != null) {\n                        dataArr = dataArr.concat(func_methods.getCellDataArr(data, 'number', true));\n                    } else {\n                        if (!isRealNum(data)) {\n                            return formula.error.v;\n                        }\n                        dataArr.push(data);\n                    }\n                }\n                var dataArr_n = [];\n                for (var i = 0; i < dataArr.length; i++) {\n                    var number = dataArr[i];\n                    if (isRealNum(number)) {\n                        dataArr_n.push(parseFloat(number));\n                    }\n                }\n                if (dataArr_n.length == 0) {\n                    return formula.error.nm;\n                }\n                return jStat.sum(jStat(dataArr_n).subtract(jStat.mean(dataArr_n)).abs()[0]) / dataArr_n.length;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'AVERAGEA': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var dataArr = [];\n                for (var i = 0; i < arguments.length; i++) {\n                    var data = arguments[i];\n                    if (getObjType(data) == 'array') {\n                        if (getObjType(data[0]) == 'array' && !func_methods.isDyadicArr(data)) {\n                            return formula.error.v;\n                        }\n                        dataArr = dataArr.concat(func_methods.getDataArr(data, false));\n                    } else if (getObjType(data) == 'object' && data.startCell != null) {\n                        dataArr = dataArr.concat(func_methods.getCellDataArr(data, 'number', true));\n                    } else {\n                        if (number.toString.toLowerCase() == 'true') {\n                            dataArr.push(1);\n                        } else if (number.toString.toLowerCase() == 'false') {\n                            dataArr.push(0);\n                        } else if (isRealNum(data)) {\n                            dataArr.push(data);\n                        } else {\n                            return formula.error.v;\n                        }\n                    }\n                }\n                var sum = 0, count = 0;\n                for (var i = 0; i < dataArr.length; i++) {\n                    var number = dataArr[i];\n                    if (isRealNum(number)) {\n                        sum += parseFloat(number);\n                    } else {\n                        if (number.toString().toLowerCase() == 'true') {\n                            sum += 1;\n                        } else {\n                            sum += 0;\n                        }\n                    }\n                    count++;\n                }\n                if (count == 0) {\n                    return formula.error.d;\n                }\n                return sum / count;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'BINOM_DIST': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //试验的成功次数\n                var number_s = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number_s)) {\n                    return number_s;\n                }\n                if (!isRealNum(number_s)) {\n                    return formula.error.v;\n                }\n                number_s = parseInt(number_s);    //独立检验的次数\n                //独立检验的次数\n                var trials = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(trials)) {\n                    return trials;\n                }\n                if (!isRealNum(trials)) {\n                    return formula.error.v;\n                }\n                trials = parseInt(trials);    //任一给定检验的成功概率\n                //任一给定检验的成功概率\n                var probability_s = func_methods.getFirstValue(arguments[2]);\n                if (valueIsError(probability_s)) {\n                    return probability_s;\n                }\n                if (!isRealNum(probability_s)) {\n                    return formula.error.v;\n                }\n                probability_s = parseFloat(probability_s);    //是否使用二项式累积分布\n                //是否使用二项式累积分布\n                var cumulative = func_methods.getCellBoolen(arguments[3]);\n                if (valueIsError(cumulative)) {\n                    return cumulative;\n                }\n                if (number_s < 0 || number_s > trials) {\n                    return formula.error.nm;\n                }\n                if (probability_s < 0 || probability_s > 1) {\n                    return formula.error.nm;\n                }\n                return cumulative ? jStat.binomial.cdf(number_s, trials, probability_s) : jStat.binomial.pdf(number_s, trials, probability_s);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'BINOM_INV': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //贝努利试验次数\n                var trials = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(trials)) {\n                    return trials;\n                }\n                if (!isRealNum(trials)) {\n                    return formula.error.v;\n                }\n                trials = parseInt(trials);    //任一次给定检验的成功概率\n                //任一次给定检验的成功概率\n                var probability_s = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(probability_s)) {\n                    return probability_s;\n                }\n                if (!isRealNum(probability_s)) {\n                    return formula.error.v;\n                }\n                probability_s = parseFloat(probability_s);    //期望的临界概率\n                //期望的临界概率\n                var alpha = func_methods.getFirstValue(arguments[2]);\n                if (valueIsError(alpha)) {\n                    return alpha;\n                }\n                if (!isRealNum(alpha)) {\n                    return formula.error.v;\n                }\n                alpha = parseFloat(alpha);\n                if (trials < 0) {\n                    return formula.error.nm;\n                }\n                if (probability_s < 0 || probability_s > 1) {\n                    return formula.error.nm;\n                }\n                if (alpha < 0 || alpha > 1) {\n                    return formula.error.nm;\n                }    //计算\n                //计算\n                var x = 0;\n                while (x <= trials) {\n                    if (jStat.binomial.cdf(x, trials, probability_s) >= alpha) {\n                        return x;\n                    }\n                    x++;\n                }\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'CONFIDENCE_NORM': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //置信水平\n                var alpha = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(alpha)) {\n                    return alpha;\n                }\n                if (!isRealNum(alpha)) {\n                    return formula.error.v;\n                }\n                alpha = parseFloat(alpha);    //数据区域的总体标准偏差\n                //数据区域的总体标准偏差\n                var standard_dev = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(standard_dev)) {\n                    return standard_dev;\n                }\n                if (!isRealNum(standard_dev)) {\n                    return formula.error.v;\n                }\n                standard_dev = parseFloat(standard_dev);    //样本总量的大小\n                //样本总量的大小\n                var size = func_methods.getFirstValue(arguments[2]);\n                if (valueIsError(size)) {\n                    return size;\n                }\n                if (!isRealNum(size)) {\n                    return formula.error.v;\n                }\n                size = parseInt(size);\n                if (alpha <= 0 || alpha >= 1) {\n                    return formula.error.nm;\n                }\n                if (standard_dev <= 0) {\n                    return formula.error.nm;\n                }\n                if (size < 1) {\n                    return formula.error.nm;\n                }\n                return jStat.normalci(1, alpha, standard_dev, size)[1] - 1;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'CORREL': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //代表因变量数据数组或矩阵的范围\n                var data_known_y = arguments[0];\n                var known_y = [];\n                if (getObjType(data_known_y) == 'array') {\n                    if (getObjType(data_known_y[0]) == 'array' && !func_methods.isDyadicArr(data_known_y)) {\n                        return formula.error.v;\n                    }\n                    known_y = known_y.concat(func_methods.getDataArr(data_known_y, false));\n                } else if (getObjType(data_known_y) == 'object' && data_known_y.startCell != null) {\n                    known_y = known_y.concat(func_methods.getCellDataArr(data_known_y, 'text', false));\n                } else {\n                    known_y.push(data_known_y);\n                }    //代表自变量数据数组或矩阵的范围\n                //代表自变量数据数组或矩阵的范围\n                var data_known_x = arguments[1];\n                var known_x = [];\n                if (getObjType(data_known_x) == 'array') {\n                    if (getObjType(data_known_x[0]) == 'array' && !func_methods.isDyadicArr(data_known_x)) {\n                        return formula.error.v;\n                    }\n                    known_x = known_x.concat(func_methods.getDataArr(data_known_x, false));\n                } else if (getObjType(data_known_x) == 'object' && data_known_x.startCell != null) {\n                    known_x = known_x.concat(func_methods.getCellDataArr(data_known_x, 'text', false));\n                } else {\n                    known_x.push(data_known_x);\n                }\n                if (known_y.length != known_x.length) {\n                    return formula.error.na;\n                }    //known_y 和 known_x 只取数值\n                //known_y 和 known_x 只取数值\n                var data_y = [], data_x = [];\n                for (var i = 0; i < known_y.length; i++) {\n                    var num_y = known_y[i];\n                    var num_x = known_x[i];\n                    if (isRealNum(num_y) && isRealNum(num_x)) {\n                        data_y.push(parseFloat(num_y));\n                        data_x.push(parseFloat(num_x));\n                    }\n                }\n                if (data_y.length == 0 || data_x.length == 0 || func_methods.standardDeviation(data_y) == 0 || func_methods.standardDeviation(data_x) == 0) {\n                    return formula.error.d;\n                }\n                return jStat.corrcoeff(data_y, data_x);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'COVARIANCE_P': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //代表自变量数据数组或矩阵的范围\n                var data_known_x = arguments[0];\n                var known_x = [];\n                if (getObjType(data_known_x) == 'array') {\n                    if (getObjType(data_known_x[0]) == 'array' && !func_methods.isDyadicArr(data_known_x)) {\n                        return formula.error.v;\n                    }\n                    known_x = known_x.concat(func_methods.getDataArr(data_known_x, false));\n                } else if (getObjType(data_known_x) == 'object' && data_known_x.startCell != null) {\n                    known_x = known_x.concat(func_methods.getCellDataArr(data_known_x, 'text', false));\n                } else {\n                    known_x.push(data_known_x);\n                }    //代表因变量数据数组或矩阵的范围\n                //代表因变量数据数组或矩阵的范围\n                var data_known_y = arguments[1];\n                var known_y = [];\n                if (getObjType(data_known_y) == 'array') {\n                    if (getObjType(data_known_y[0]) == 'array' && !func_methods.isDyadicArr(data_known_y)) {\n                        return formula.error.v;\n                    }\n                    known_y = known_y.concat(func_methods.getDataArr(data_known_y, false));\n                } else if (getObjType(data_known_y) == 'object' && data_known_y.startCell != null) {\n                    known_y = known_y.concat(func_methods.getCellDataArr(data_known_y, 'text', false));\n                } else {\n                    known_y.push(data_known_y);\n                }\n                if (known_x.length != known_y.length) {\n                    return formula.error.na;\n                }    //known_y 和 known_x 只取数值\n                //known_y 和 known_x 只取数值\n                var data_x = [], data_y = [];\n                for (var i = 0; i < known_x.length; i++) {\n                    var num_x = known_x[i];\n                    var num_y = known_y[i];\n                    if (isRealNum(num_x) && isRealNum(num_y)) {\n                        data_x.push(parseFloat(num_x));\n                        data_y.push(parseFloat(num_y));\n                    }\n                }\n                if (data_x.length == 0 || data_y.length == 0) {\n                    return formula.error.d;\n                }    //计算\n                //计算\n                var mean1 = jStat.mean(data_x);\n                var mean2 = jStat.mean(data_y);\n                var result = 0;\n                for (var i = 0; i < data_x.length; i++) {\n                    result += (data_x[i] - mean1) * (data_y[i] - mean2);\n                }\n                result = result / data_x.length;\n                return result;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'COVARIANCE_S': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //代表自变量数据数组或矩阵的范围\n                var data_known_x = arguments[0];\n                var known_x = [];\n                if (getObjType(data_known_x) == 'array') {\n                    if (getObjType(data_known_x[0]) == 'array' && !func_methods.isDyadicArr(data_known_x)) {\n                        return formula.error.v;\n                    }\n                    known_x = known_x.concat(func_methods.getDataArr(data_known_x, false));\n                } else if (getObjType(data_known_x) == 'object' && data_known_x.startCell != null) {\n                    known_x = known_x.concat(func_methods.getCellDataArr(data_known_x, 'text', false));\n                } else {\n                    known_x.push(data_known_x);\n                }    //代表因变量数据数组或矩阵的范围\n                //代表因变量数据数组或矩阵的范围\n                var data_known_y = arguments[1];\n                var known_y = [];\n                if (getObjType(data_known_y) == 'array') {\n                    if (getObjType(data_known_y[0]) == 'array' && !func_methods.isDyadicArr(data_known_y)) {\n                        return formula.error.v;\n                    }\n                    known_y = known_y.concat(func_methods.getDataArr(data_known_y, false));\n                } else if (getObjType(data_known_y) == 'object' && data_known_y.startCell != null) {\n                    known_y = known_y.concat(func_methods.getCellDataArr(data_known_y, 'text', false));\n                } else {\n                    known_y.push(data_known_y);\n                }\n                if (known_x.length != known_y.length) {\n                    return formula.error.na;\n                }    //known_y 和 known_x 只取数值\n                //known_y 和 known_x 只取数值\n                var data_x = [], data_y = [];\n                for (var i = 0; i < known_x.length; i++) {\n                    var num_x = known_x[i];\n                    var num_y = known_y[i];\n                    if (isRealNum(num_x) && isRealNum(num_y)) {\n                        data_x.push(parseFloat(num_x));\n                        data_y.push(parseFloat(num_y));\n                    }\n                }\n                if (data_x.length == 0 || data_y.length == 0) {\n                    return formula.error.d;\n                }\n                return jStat.covariance(data_x, data_y);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'DEVSQ': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var dataArr = [];\n                for (var i = 0; i < arguments.length; i++) {\n                    var data = arguments[i];\n                    if (getObjType(data) == 'array') {\n                        if (getObjType(data[0]) == 'array' && !func_methods.isDyadicArr(data)) {\n                            return formula.error.v;\n                        }\n                        dataArr = dataArr.concat(func_methods.getDataArr(data, true));\n                    } else if (getObjType(data) == 'object' && data.startCell != null) {\n                        dataArr = dataArr.concat(func_methods.getCellDataArr(data, 'number', true));\n                    } else {\n                        if (!isRealNum(data)) {\n                            if (getObjType(data) == 'boolean') {\n                                if (data.toString().toLowerCase() == 'true') {\n                                    dataArr.push(1);\n                                } else if (data.toString().toLowerCase() == 'false') {\n                                    dataArr.push(0);\n                                }\n                            } else {\n                                return formula.error.v;\n                            }\n                        } else {\n                            dataArr.push(data);\n                        }\n                    }\n                }\n                var dataArr_n = [];\n                for (var i = 0; i < dataArr.length; i++) {\n                    var number = dataArr[i];\n                    if (isRealNum(number)) {\n                        dataArr_n.push(parseFloat(number));\n                    }\n                }\n                var mean = jStat.mean(dataArr_n);\n                var result = 0;\n                for (var i = 0; i < dataArr_n.length; i++) {\n                    result += Math.pow(dataArr_n[i] - mean, 2);\n                }\n                return result;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'EXPON_DIST': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //指数分布函数的输入值\n                var x = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(x)) {\n                    return x;\n                }\n                if (!isRealNum(x)) {\n                    return formula.error.v;\n                }\n                x = parseFloat(x);    //用于指定指数分布函数的 lambda 值\n                //用于指定指数分布函数的 lambda 值\n                var lambda = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(lambda)) {\n                    return lambda;\n                }\n                if (!isRealNum(lambda)) {\n                    return formula.error.v;\n                }\n                lambda = parseFloat(lambda);    //是否使用指数累积分布\n                //是否使用指数累积分布\n                var cumulative = func_methods.getCellBoolen(arguments[2]);\n                if (valueIsError(cumulative)) {\n                    return cumulative;\n                }\n                if (x < 0) {\n                    return formula.error.nm;\n                }\n                if (lambda < 0) {\n                    return formula.error.nm;\n                }\n                return cumulative ? jStat.exponential.cdf(x, lambda) : jStat.exponential.pdf(x, lambda);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'AVERAGEIF': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var sum = 0;\n                var count = 0;\n                var rangeData = arguments[0].data;\n                var rangeRow = arguments[0].rowl;\n                var rangeCol = arguments[0].coll;\n                var criteria = luckysheet_parseData(arguments[1]);\n                var sumRangeData = [];    //如果有第三个参数\n                //如果有第三个参数\n                if (arguments[2]) {\n                    //根据选择的目标的区域确定实际目标区域\n                    //初始位置\n                    var sumRangeStart = arguments[2].startCell;\n                    var sumRangeRow = arguments[2].rowl;\n                    var sumRangeCol = arguments[2].coll;\n                    var sumRangeSheet = arguments[2].sheetName;\n                    if (rangeRow == sumRangeRow && rangeCol == sumRangeCol) {\n                        sumRangeData = arguments[2].data;\n                    } else {\n                        var row = [], col = [];\n                        var sumRangeEnd = '';\n                        var realSumRange = '';    //console.log(\"开始位置！！！\",sumRangeStart,typeof(sumRangeStart));\n                        //console.log(\"开始位置！！！\",sumRangeStart,typeof(sumRangeStart));\n                        row[0] = parseInt(sumRangeStart.replace(/[^0-9]/g, '')) - 1;\n                        col[0] = ABCatNum(sumRangeStart.replace(/[^A-Za-z]/g, ''));    //根据第一个范围的长宽确定目标范围的末尾位置\n                        //根据第一个范围的长宽确定目标范围的末尾位置\n                        row[1] = row[0] + rangeRow - 1;\n                        col[1] = col[0] + rangeCol - 1;    //console.log(row[0],col[0],row[1],col[1]);\n                                                           //末尾位置转化为sheet格式：如 F4\n                        //console.log(row[0],col[0],row[1],col[1]);\n                        //末尾位置转化为sheet格式：如 F4\n                        var real_ABC = chatatABC(col[1]);\n                        var real_Num = row[1] + 1;\n                        sumRangeEnd = real_ABC + real_Num;    //console.log(\"合成新的末尾位置：\" + sumRangeEnd);\n                        //console.log(\"合成新的末尾位置：\" + sumRangeEnd);\n                        realSumRange = sumRangeSheet + '!' + sumRangeStart + ':' + sumRangeEnd;\n                        sumRangeData = luckysheet_getcelldata(realSumRange).data;    //console.log(\"最终的目标范围：\",sumRangeData);\n                    }\n                    //console.log(\"最终的目标范围：\",sumRangeData);\n                    sumRangeData = formula.getRangeArray(sumRangeData)[0];\n                }\n                rangeData = formula.getRangeArray(rangeData)[0];    //循环遍历查找匹配项\n                //循环遍历查找匹配项\n                for (var i = 0; i < rangeData.length; i++) {\n                    var v = rangeData[i];\n                    if (!!v && formula.acompareb(v, criteria)) {\n                        var vnow = sumRangeData[i] || v;\n                        if (!isRealNum(vnow)) {\n                            continue;\n                        }\n                        sum += parseFloat(vnow);\n                        count++;\n                    }\n                }\n                if (sum == 0 || count == 0) {\n                    return formula.error.d;\n                } else {\n                    return numFormat(sum / count);\n                }\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'AVERAGEIFS': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var sum = 0;\n                var count = 0;\n                var args = arguments;\n                luckysheet_getValue(args);\n                var rangeData = formula.getRangeArray(args[0])[0];\n                var results = new Array(rangeData.length);\n                for (var i = 0; i < results.length; i++) {\n                    results[i] = true;\n                }\n                for (var i = 1; i < args.length; i += 2) {\n                    var range = formula.getRangeArray(args[i])[0];\n                    var criteria = args[i + 1];\n                    for (var j = 0; j < range.length; j++) {\n                        var v = range[j];\n                        results[j] = results[j] && !!v && formula.acompareb(v, criteria);\n                    }\n                }\n                for (var i = 0; i < rangeData.length; i++) {\n                    if (results[i] && isRealNum(rangeData[i])) {\n                        sum += parseFloat(rangeData[i]);\n                        count++;\n                    }\n                }\n                if (sum == 0 || count == 0) {\n                    return formula.error.d;\n                } else {\n                    return numFormat(sum / count);\n                }\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'PERMUT': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //表示对象个数的整数\n                var number = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number)) {\n                    return number;\n                }\n                if (!isRealNum(number)) {\n                    return formula.error.v;\n                }\n                number = parseInt(number);    //表示每个排列中对象个数的整数\n                //表示每个排列中对象个数的整数\n                var number_chosen = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(number_chosen)) {\n                    return number_chosen;\n                }\n                if (!isRealNum(number_chosen)) {\n                    return formula.error.v;\n                }\n                number_chosen = parseInt(number_chosen);\n                if (number <= 0 || number_chosen < 0) {\n                    return formula.error.nm;\n                }\n                if (number < number_chosen) {\n                    return formula.error.nm;\n                }\n                return func_methods.factorial(number) / func_methods.factorial(number - number_chosen);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'TRIMMEAN': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //包含相关数据集的数组或范围\n                var data_dataArr = arguments[0];\n                var dataArr = [];\n                if (getObjType(data_dataArr) == 'array') {\n                    if (getObjType(data_dataArr[0]) == 'array' && !func_methods.isDyadicArr(data_dataArr)) {\n                        return formula.error.v;\n                    }\n                    dataArr = dataArr.concat(func_methods.getDataArr(data_dataArr, false));\n                } else if (getObjType(data_dataArr) == 'object' && data_dataArr.startCell != null) {\n                    dataArr = dataArr.concat(func_methods.getCellDataArr(data_dataArr, 'number', false));\n                } else {\n                    dataArr.push(data_dataArr);\n                }\n                var dataArr_n = [];\n                for (var i = 0; i < dataArr.length; i++) {\n                    var number = dataArr[i];\n                    if (isRealNum(number)) {\n                        dataArr_n.push(parseFloat(number));\n                    }\n                }    //排除比例\n                //排除比例\n                var percent = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(percent)) {\n                    return percent;\n                }\n                if (!isRealNum(percent)) {\n                    return formula.error.v;\n                }\n                percent = parseFloat(percent);\n                if (dataArr_n.length == 0) {\n                    return formula.error.nm;\n                }\n                if (percent < 0 || percent > 1) {\n                    return formula.error.nm;\n                }    //计算\n                //计算\n                function rest(array, idx) {\n                    idx = idx || 1;\n                    if (!array || typeof array.slice !== 'function') {\n                        return array;\n                    }\n                    return array.slice(idx);\n                }\n                ;\n                function initial(array, idx) {\n                    idx = idx || 1;\n                    if (!array || typeof array.slice !== 'function') {\n                        return array;\n                    }\n                    return array.slice(0, array.length - idx);\n                }\n                ;\n                dataArr_n.sort(function (a, b) {\n                    return a - b;\n                });\n                var trim = window.luckysheet_function.FLOOR.f(dataArr_n.length * percent, 2) / 2;\n                var result = rest(dataArr_n, trim);\n                result = initial(result, trim);\n                result = jStat.mean(result);\n                return result;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'PERCENTILE_EXC': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //定义相对位置的数组或数据区域\n                var data_dataArr = arguments[0];\n                var dataArr = [];\n                if (getObjType(data_dataArr) == 'array') {\n                    if (getObjType(data_dataArr[0]) == 'array' && !func_methods.isDyadicArr(data_dataArr)) {\n                        return formula.error.v;\n                    }\n                    dataArr = dataArr.concat(func_methods.getDataArr(data_dataArr, false));\n                } else if (getObjType(data_dataArr) == 'object' && data_dataArr.startCell != null) {\n                    dataArr = dataArr.concat(func_methods.getCellDataArr(data_dataArr, 'number', false));\n                } else {\n                    dataArr.push(data_dataArr);\n                }\n                var dataArr_n = [];\n                for (var i = 0; i < dataArr.length; i++) {\n                    var number = dataArr[i];\n                    if (isRealNum(number)) {\n                        dataArr_n.push(parseFloat(number));\n                    }\n                }    //0 到 1 之间的百分点值，不包含 0 和 1\n                //0 到 1 之间的百分点值，不包含 0 和 1\n                var k = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(k)) {\n                    return k;\n                }\n                if (!isRealNum(k)) {\n                    return formula.error.v;\n                }\n                k = parseFloat(k);\n                if (dataArr_n.length == 0) {\n                    return formula.error.nm;\n                }\n                if (k <= 0 || k >= 1) {\n                    return formula.error.nm;\n                }    //计算\n                //计算\n                dataArr_n = dataArr_n.sort(function (a, b) {\n                    return a - b;\n                });\n                var n = dataArr_n.length;\n                if (k < 1 / (n + 1) || k > 1 - 1 / (n + 1)) {\n                    return formula.error.nm;\n                }\n                var l = k * (n + 1) - 1;\n                var fl = Math.floor(l);\n                return l === fl ? dataArr_n[l] : dataArr_n[fl] + (l - fl) * (dataArr_n[fl + 1] - dataArr_n[fl]);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'PERCENTILE_INC': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //定义相对位置的数组或数据区域\n                var data_dataArr = arguments[0];\n                var dataArr = [];\n                if (getObjType(data_dataArr) == 'array') {\n                    if (getObjType(data_dataArr[0]) == 'array' && !func_methods.isDyadicArr(data_dataArr)) {\n                        return formula.error.v;\n                    }\n                    dataArr = dataArr.concat(func_methods.getDataArr(data_dataArr, false));\n                } else if (getObjType(data_dataArr) == 'object' && data_dataArr.startCell != null) {\n                    dataArr = dataArr.concat(func_methods.getCellDataArr(data_dataArr, 'number', false));\n                } else {\n                    dataArr.push(data_dataArr);\n                }\n                var dataArr_n = [];\n                for (var i = 0; i < dataArr.length; i++) {\n                    var number = dataArr[i];\n                    if (isRealNum(number)) {\n                        dataArr_n.push(parseFloat(number));\n                    }\n                }    //0 到 1 之间的百分点值，不包含 0 和 1\n                //0 到 1 之间的百分点值，不包含 0 和 1\n                var k = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(k)) {\n                    return k;\n                }\n                if (!isRealNum(k)) {\n                    return formula.error.v;\n                }\n                k = parseFloat(k);\n                if (dataArr_n.length == 0) {\n                    return formula.error.nm;\n                }\n                if (k < 0 || k > 1) {\n                    return formula.error.nm;\n                }    //计算\n                //计算\n                dataArr_n = dataArr_n.sort(function (a, b) {\n                    return a - b;\n                });\n                var n = dataArr_n.length;\n                var l = k * (n - 1);\n                var fl = Math.floor(l);\n                return l === fl ? dataArr_n[l] : dataArr_n[fl] + (l - fl) * (dataArr_n[fl + 1] - dataArr_n[fl]);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'PEARSON': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //代表自变量数据数组或矩阵的范围\n                var data_known_x = arguments[0];\n                var known_x = [];\n                if (getObjType(data_known_x) == 'array') {\n                    if (getObjType(data_known_x[0]) == 'array' && !func_methods.isDyadicArr(data_known_x)) {\n                        return formula.error.v;\n                    }\n                    known_x = known_x.concat(func_methods.getDataArr(data_known_x, false));\n                } else if (getObjType(data_known_x) == 'object' && data_known_x.startCell != null) {\n                    known_x = known_x.concat(func_methods.getCellDataArr(data_known_x, 'text', false));\n                } else {\n                    known_x.push(data_known_x);\n                }    //代表因变量数据数组或矩阵的范围\n                //代表因变量数据数组或矩阵的范围\n                var data_known_y = arguments[1];\n                var known_y = [];\n                if (getObjType(data_known_y) == 'array') {\n                    if (getObjType(data_known_y[0]) == 'array' && !func_methods.isDyadicArr(data_known_y)) {\n                        return formula.error.v;\n                    }\n                    known_y = known_y.concat(func_methods.getDataArr(data_known_y, false));\n                } else if (getObjType(data_known_y) == 'object' && data_known_y.startCell != null) {\n                    known_y = known_y.concat(func_methods.getCellDataArr(data_known_y, 'text', false));\n                } else {\n                    known_y.push(data_known_y);\n                }\n                if (known_x.length != known_y.length) {\n                    return formula.error.na;\n                }    //known_y 和 known_x 只取数值\n                //known_y 和 known_x 只取数值\n                var data_x = [], data_y = [];\n                for (var i = 0; i < known_x.length; i++) {\n                    var num_x = known_x[i];\n                    var num_y = known_y[i];\n                    if (isRealNum(num_x) && isRealNum(num_y)) {\n                        data_x.push(parseFloat(num_x));\n                        data_y.push(parseFloat(num_y));\n                    }\n                }\n                if (data_y.length == 0 || data_x.length == 0) {\n                    return formula.error.d;\n                }    //计算\n                //计算\n                var xmean = jStat.mean(data_x);\n                var ymean = jStat.mean(data_y);\n                var n = data_x.length;\n                var num = 0;\n                var den1 = 0;\n                var den2 = 0;\n                for (var i = 0; i < n; i++) {\n                    num += (data_x[i] - xmean) * (data_y[i] - ymean);\n                    den1 += Math.pow(data_x[i] - xmean, 2);\n                    den2 += Math.pow(data_y[i] - ymean, 2);\n                }\n                return num / Math.sqrt(den1 * den2);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'NORM_S_INV': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //对应于正态分布的概率\n                var probability = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(probability)) {\n                    return probability;\n                }\n                if (!isRealNum(probability)) {\n                    return formula.error.v;\n                }\n                probability = parseFloat(probability);\n                if (probability <= 0 || probability >= 1) {\n                    return formula.error.nm;\n                }\n                return jStat.normal.inv(probability, 0, 1);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'NORM_S_DIST': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //需要计算其分布的数值\n                var z = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(z)) {\n                    return z;\n                }\n                if (!isRealNum(z)) {\n                    return formula.error.v;\n                }\n                z = parseFloat(z);    //决定函数形式的逻辑值\n                //决定函数形式的逻辑值\n                var cumulative = func_methods.getCellBoolen(arguments[1]);\n                if (valueIsError(cumulative)) {\n                    return cumulative;\n                }\n                return cumulative ? jStat.normal.cdf(z, 0, 1) : jStat.normal.pdf(z, 0, 1);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'NORM_INV': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //对应于正态分布的概率\n                var probability = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(probability)) {\n                    return probability;\n                }\n                if (!isRealNum(probability)) {\n                    if (getObjType(probability) == 'boolean') {\n                        if (probability.toString().toLowerCase() == 'true') {\n                            probability = 1;\n                        } else if (probability.toString().toLowerCase() == 'false') {\n                            probability = 0;\n                        }\n                    } else {\n                        return formula.error.v;\n                    }\n                }\n                probability = parseFloat(probability);    //分布的算术平均值\n                //分布的算术平均值\n                var mean = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(mean)) {\n                    return mean;\n                }\n                if (!isRealNum(mean)) {\n                    if (getObjType(mean) == 'boolean') {\n                        if (mean.toString().toLowerCase() == 'true') {\n                            mean = 1;\n                        } else if (mean.toString().toLowerCase() == 'false') {\n                            mean = 0;\n                        }\n                    } else {\n                        return formula.error.v;\n                    }\n                }\n                mean = parseFloat(mean);    //分布的标准偏差\n                //分布的标准偏差\n                var standard_dev = func_methods.getFirstValue(arguments[2]);\n                if (valueIsError(standard_dev)) {\n                    return standard_dev;\n                }\n                if (!isRealNum(standard_dev)) {\n                    if (getObjType(standard_dev) == 'boolean') {\n                        if (standard_dev.toString().toLowerCase() == 'true') {\n                            standard_dev = 1;\n                        } else if (standard_dev.toString().toLowerCase() == 'false') {\n                            standard_dev = 0;\n                        }\n                    } else {\n                        return formula.error.v;\n                    }\n                }\n                standard_dev = parseFloat(standard_dev);\n                if (probability <= 0 || probability >= 1) {\n                    return formula.error.nm;\n                }\n                if (standard_dev <= 0) {\n                    return formula.error.nm;\n                }    //计算\n                //计算\n                return jStat.normal.inv(probability, mean, standard_dev);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'NORM_DIST': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //需要计算其分布的数值\n                var x = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(x)) {\n                    return x;\n                }\n                if (!isRealNum(x)) {\n                    if (getObjType(x) == 'boolean') {\n                        if (x.toString().toLowerCase() == 'true') {\n                            x = 1;\n                        } else if (x.toString().toLowerCase() == 'false') {\n                            x = 0;\n                        }\n                    } else {\n                        return formula.error.v;\n                    }\n                }\n                x = parseFloat(x);    //分布的算术平均值\n                //分布的算术平均值\n                var mean = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(mean)) {\n                    return mean;\n                }\n                if (!isRealNum(mean)) {\n                    return formula.error.v;\n                }\n                mean = parseFloat(mean);    //分布的标准偏差\n                //分布的标准偏差\n                var standard_dev = func_methods.getFirstValue(arguments[2]);\n                if (valueIsError(standard_dev)) {\n                    return standard_dev;\n                }\n                if (!isRealNum(standard_dev)) {\n                    return formula.error.v;\n                }\n                standard_dev = parseFloat(standard_dev);    //决定函数形式的逻辑值\n                //决定函数形式的逻辑值\n                var cumulative = func_methods.getCellBoolen(arguments[3]);\n                if (valueIsError(cumulative)) {\n                    return cumulative;\n                }\n                if (standard_dev <= 0) {\n                    return formula.error.nm;\n                }\n                return cumulative ? jStat.normal.cdf(x, mean, standard_dev) : jStat.normal.pdf(x, mean, standard_dev);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'NEGBINOM_DIST': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //要模拟的失败次数\n                var number_f = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number_f)) {\n                    return number_f;\n                }\n                if (!isRealNum(number_f)) {\n                    return formula.error.v;\n                }\n                number_f = parseInt(number_f);    //要模拟的成功次数\n                //要模拟的成功次数\n                var number_s = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(number_s)) {\n                    return number_s;\n                }\n                if (!isRealNum(number_s)) {\n                    return formula.error.v;\n                }\n                number_s = parseInt(number_s);    //任一次给定检验的成功概率\n                //任一次给定检验的成功概率\n                var probability_s = func_methods.getFirstValue(arguments[2]);\n                if (valueIsError(probability_s)) {\n                    return probability_s;\n                }\n                if (!isRealNum(probability_s)) {\n                    return formula.error.v;\n                }\n                probability_s = parseFloat(probability_s);    //决定函数形式的逻辑值\n                //决定函数形式的逻辑值\n                var cumulative = func_methods.getCellBoolen(arguments[3]);\n                if (valueIsError(cumulative)) {\n                    return cumulative;\n                }\n                if (probability_s < 0 || probability_s > 1) {\n                    return formula.error.nm;\n                }\n                if (number_f < 0 || number_s < 1) {\n                    return formula.error.nm;\n                }\n                return cumulative ? jStat.negbin.cdf(number_f, number_s, probability_s) : jStat.negbin.pdf(number_f, number_s, probability_s);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'MINA': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var dataArr = [];\n                for (var i = 0; i < arguments.length; i++) {\n                    var data = arguments[i];\n                    if (getObjType(data) == 'array') {\n                        if (getObjType(data[0]) == 'array' && !func_methods.isDyadicArr(data)) {\n                            return formula.error.v;\n                        }\n                        dataArr = dataArr.concat(func_methods.getDataArr(data, false));\n                    } else if (getObjType(data) == 'object' && data.startCell != null) {\n                        dataArr = dataArr.concat(func_methods.getCellDataArr(data, 'number', true));\n                    } else {\n                        if (number.toString.toLowerCase() == 'true') {\n                            dataArr.push(1);\n                        } else if (number.toString.toLowerCase() == 'false') {\n                            dataArr.push(0);\n                        } else if (isRealNum(data)) {\n                            dataArr.push(data);\n                        } else {\n                            return formula.error.v;\n                        }\n                    }\n                }\n                var dataArr_n = [];\n                for (var i = 0; i < dataArr.length; i++) {\n                    var number = dataArr[i];\n                    if (isRealNum(number)) {\n                        dataArr_n.push(parseFloat(number));\n                    } else {\n                        if (number.toString().toLowerCase() == 'true') {\n                            dataArr_n.push(1);\n                        } else {\n                            dataArr_n.push(0);\n                        }\n                    }\n                }\n                return dataArr_n.length === 0 ? 0 : Math.min.apply(Math, dataArr_n);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'MEDIAN': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var dataArr = [];\n                for (var i = 0; i < arguments.length; i++) {\n                    var data = arguments[i];\n                    if (getObjType(data) == 'array') {\n                        if (getObjType(data[0]) == 'array' && !func_methods.isDyadicArr(data)) {\n                            return formula.error.v;\n                        }\n                        dataArr = dataArr.concat(func_methods.getDataArr(data, true));\n                    } else if (getObjType(data) == 'object' && data.startCell != null) {\n                        dataArr = dataArr.concat(func_methods.getCellDataArr(data, 'number', true));\n                    } else {\n                        if (!isRealNum(data)) {\n                            return formula.error.v;\n                        }\n                        dataArr.push(data);\n                    }\n                }\n                var dataArr_n = [];\n                for (var i = 0; i < dataArr.length; i++) {\n                    var number = dataArr[i];\n                    if (isRealNum(number)) {\n                        dataArr_n.push(parseFloat(number));\n                    }\n                }\n                return jStat.median(dataArr_n);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'MAXA': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var dataArr = [];\n                for (var i = 0; i < arguments.length; i++) {\n                    var data = arguments[i];\n                    if (getObjType(data) == 'array') {\n                        if (getObjType(data[0]) == 'array' && !func_methods.isDyadicArr(data)) {\n                            return formula.error.v;\n                        }\n                        dataArr = dataArr.concat(func_methods.getDataArr(data, false));\n                    } else if (getObjType(data) == 'object' && data.startCell != null) {\n                        dataArr = dataArr.concat(func_methods.getCellDataArr(data, 'number', true));\n                    } else {\n                        if (number.toString.toLowerCase() == 'true') {\n                            dataArr.push(1);\n                        } else if (number.toString.toLowerCase() == 'false') {\n                            dataArr.push(0);\n                        } else if (isRealNum(data)) {\n                            dataArr.push(data);\n                        } else {\n                            return formula.error.v;\n                        }\n                    }\n                }\n                var dataArr_n = [];\n                for (var i = 0; i < dataArr.length; i++) {\n                    var number = dataArr[i];\n                    if (isRealNum(number)) {\n                        dataArr_n.push(parseFloat(number));\n                    } else {\n                        if (number.toString().toLowerCase() == 'true') {\n                            dataArr_n.push(1);\n                        } else {\n                            dataArr_n.push(0);\n                        }\n                    }\n                }\n                return dataArr_n.length === 0 ? 0 : Math.max.apply(Math, dataArr_n);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'LOGNORM_INV': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //与对数分布相关的概率\n                var probability = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(probability)) {\n                    return probability;\n                }\n                if (!isRealNum(probability)) {\n                    return formula.error.v;\n                }\n                probability = parseFloat(probability);    //ln(x) 的平均值\n                //ln(x) 的平均值\n                var mean = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(mean)) {\n                    return mean;\n                }\n                if (!isRealNum(mean)) {\n                    return formula.error.v;\n                }\n                mean = parseFloat(mean);    //ln(x) 的标准偏差\n                //ln(x) 的标准偏差\n                var standard_dev = func_methods.getFirstValue(arguments[2]);\n                if (valueIsError(standard_dev)) {\n                    return standard_dev;\n                }\n                if (!isRealNum(standard_dev)) {\n                    return formula.error.v;\n                }\n                standard_dev = parseFloat(standard_dev);\n                if (probability <= 0 || probability >= 1) {\n                    return formula.error.nm;\n                }\n                if (standard_dev <= 0) {\n                    return formula.error.nm;\n                }\n                return jStat.lognormal.inv(probability, mean, standard_dev);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'LOGNORM_DIST': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //与对数分布相关的概率\n                var x = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(x)) {\n                    return x;\n                }\n                if (!isRealNum(x)) {\n                    return formula.error.v;\n                }\n                x = parseFloat(x);    //ln(x) 的平均值\n                //ln(x) 的平均值\n                var mean = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(mean)) {\n                    return mean;\n                }\n                if (!isRealNum(mean)) {\n                    return formula.error.v;\n                }\n                mean = parseFloat(mean);    //ln(x) 的标准偏差\n                //ln(x) 的标准偏差\n                var standard_dev = func_methods.getFirstValue(arguments[2]);\n                if (valueIsError(standard_dev)) {\n                    return standard_dev;\n                }\n                if (!isRealNum(standard_dev)) {\n                    return formula.error.v;\n                }\n                standard_dev = parseFloat(standard_dev);    //决定函数形式的逻辑值\n                //决定函数形式的逻辑值\n                var cumulative = func_methods.getCellBoolen(arguments[3]);\n                if (valueIsError(cumulative)) {\n                    return cumulative;\n                }\n                if (x <= 0 || standard_dev <= 0) {\n                    return formula.error.nm;\n                }\n                return cumulative ? jStat.lognormal.cdf(x, mean, standard_dev) : jStat.lognormal.pdf(x, mean, standard_dev);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'Z_TEST': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //用来检验 x 的数组或数据区域\n                var dataArr = [];\n                if (getObjType(arguments[0]) == 'array') {\n                    if (getObjType(arguments[0][0]) == 'array' && !func_methods.isDyadicArr(arguments[0])) {\n                        return formula.error.v;\n                    }\n                    dataArr = dataArr.concat(func_methods.getDataArr(arguments[0], true));\n                } else if (getObjType(arguments[0]) == 'object' && arguments[0].startCell != null) {\n                    dataArr = dataArr.concat(func_methods.getCellDataArr(arguments[0], 'text', true));\n                } else {\n                    dataArr.push(arguments[0]);\n                }\n                var dataArr_n = [];\n                for (var j = 0; j < dataArr.length; j++) {\n                    var number = dataArr[j];\n                    if (isRealNum(number)) {\n                        dataArr_n.push(parseFloat(number));\n                    }\n                }    //要测试的值\n                //要测试的值\n                var x = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(x)) {\n                    return x;\n                }\n                if (!isRealNum(x)) {\n                    return formula.error.v;\n                }\n                x = parseFloat(x);\n                if (dataArr_n.length == 0) {\n                    return formula.error.na;\n                }    //总体（已知）标准偏差。 如果省略，则使用样本标准偏差\n                //总体（已知）标准偏差。 如果省略，则使用样本标准偏差\n                var sigma = func_methods.standardDeviation_s(dataArr_n);\n                if (arguments.length == 3) {\n                    sigma = func_methods.getFirstValue(arguments[2]);\n                    if (valueIsError(sigma)) {\n                        return sigma;\n                    }\n                    if (!isRealNum(sigma)) {\n                        return formula.error.v;\n                    }\n                    sigma = parseFloat(sigma);\n                }    //计算\n                //计算\n                var n = dataArr_n.length;\n                var mean = window.luckysheet_function.AVERAGE.f.apply(window.luckysheet_function.AVERAGE, dataArr_n);\n                return 1 - window.luckysheet_function.NORM_S_DIST.f((mean - x) / (sigma / Math.sqrt(n)), 'true');\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'PROB': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //x_range\n                var data_x_range = [];\n                if (getObjType(arguments[0]) == 'array') {\n                    if (getObjType(arguments[0][0]) == 'array' && !func_methods.isDyadicArr(arguments[0])) {\n                        return formula.error.v;\n                    }\n                    data_x_range = data_x_range.concat(func_methods.getDataArr(arguments[0], false));\n                } else if (getObjType(arguments[0]) == 'object' && arguments[0].startCell != null) {\n                    data_x_range = data_x_range.concat(func_methods.getCellDataArr(arguments[0], 'text', false));\n                } else {\n                    data_x_range.push(arguments[0]);\n                }    //prob_range\n                //prob_range\n                var data_prob_range = [];\n                if (getObjType(arguments[1]) == 'array') {\n                    if (getObjType(arguments[1][0]) == 'array' && !func_methods.isDyadicArr(arguments[1])) {\n                        return formula.error.v;\n                    }\n                    data_prob_range = data_prob_range.concat(func_methods.getDataArr(arguments[1], false));\n                } else if (getObjType(arguments[1]) == 'object' && arguments[1].startCell != null) {\n                    data_prob_range = data_prob_range.concat(func_methods.getCellDataArr(arguments[1], 'text', false));\n                } else {\n                    data_prob_range.push(arguments[1]);\n                }\n                if (data_x_range.length != data_prob_range.length) {\n                    return formula.error.na;\n                }    //data_x_range 和 data_prob_range 只取数值\n                //data_x_range 和 data_prob_range 只取数值\n                var x_range = [], prob_range = [], prob_range_sum = 0;\n                for (var i = 0; i < data_x_range.length; i++) {\n                    var num_x_range = data_x_range[i];\n                    var num_prob_range = data_prob_range[i];\n                    if (isRealNum(num_x_range) && isRealNum(num_prob_range)) {\n                        x_range.push(parseFloat(num_x_range));\n                        prob_range.push(parseFloat(num_prob_range));\n                        prob_range_sum += parseFloat(num_prob_range);\n                        if (parseFloat(num_prob_range) <= 0 || parseFloat(num_prob_range) > 1) {\n                            return formula.error.nm;\n                        }\n                    }\n                }\n                if (prob_range_sum != 1) {\n                    return formula.error.nm;\n                }    //要计算其概率的数值下界\n                //要计算其概率的数值下界\n                var lower_limit = func_methods.getFirstValue(arguments[2]);\n                if (valueIsError(lower_limit)) {\n                    return lower_limit;\n                }\n                if (!isRealNum(lower_limit)) {\n                    return formula.error.v;\n                }\n                lower_limit = parseFloat(lower_limit);    //要计算其概率的数值上界\n                //要计算其概率的数值上界\n                var upper_limit = lower_limit;\n                if (arguments.length == 4) {\n                    upper_limit = func_methods.getFirstValue(arguments[3]);\n                    if (valueIsError(upper_limit)) {\n                        return upper_limit;\n                    }\n                    if (!isRealNum(upper_limit)) {\n                        return formula.error.v;\n                    }\n                    upper_limit = parseFloat(upper_limit);\n                }    //计算\n                //计算\n                var result = 0;\n                for (var i = 0; i < x_range.length; i++) {\n                    if (x_range[i] >= lower_limit && x_range[i] <= upper_limit) {\n                        result += prob_range[i];\n                    }\n                }\n                return result;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'QUARTILE_EXC': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //要求得四分位数值的数组或数字型单元格区域\n                var data_array = [];\n                if (getObjType(arguments[0]) == 'array') {\n                    if (getObjType(arguments[0][0]) == 'array' && !func_methods.isDyadicArr(arguments[0])) {\n                        return formula.error.v;\n                    }\n                    data_array = data_array.concat(func_methods.getDataArr(arguments[0], true));\n                } else if (getObjType(arguments[0]) == 'object' && arguments[0].startCell != null) {\n                    data_array = data_array.concat(func_methods.getCellDataArr(arguments[0], 'text', true));\n                } else {\n                    if (!isRealNum(arguments[0])) {\n                        return formula.error.v;\n                    }\n                    data_array.push(arguments[0]);\n                }\n                var array = [];\n                for (var i = 0; i < data_array.length; i++) {\n                    var number = data_array[i];\n                    if (isRealNum(number)) {\n                        array.push(parseFloat(number));\n                    }\n                }    //要返回第几个四分位值\n                //要返回第几个四分位值\n                var quart = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(quart)) {\n                    return quart;\n                }\n                if (!isRealNum(quart)) {\n                    return formula.error.v;\n                }\n                quart = parseInt(quart);\n                if (array.length == 0) {\n                    return formula.error.nm;\n                }\n                if (quart <= 0 || quart >= 4) {\n                    return formula.error.nm;\n                }    //计算\n                //计算\n                switch (quart) {\n                case 1:\n                    return window.luckysheet_function.PERCENTILE_EXC.f(array, 0.25);\n                case 2:\n                    return window.luckysheet_function.PERCENTILE_EXC.f(array, 0.5);\n                case 3:\n                    return window.luckysheet_function.PERCENTILE_EXC.f(array, 0.75);\n                }\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'QUARTILE_INC': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //要求得四分位数值的数组或数字型单元格区域\n                var data_array = [];\n                if (getObjType(arguments[0]) == 'array') {\n                    if (getObjType(arguments[0][0]) == 'array' && !func_methods.isDyadicArr(arguments[0])) {\n                        return formula.error.v;\n                    }\n                    data_array = data_array.concat(func_methods.getDataArr(arguments[0], true));\n                } else if (getObjType(arguments[0]) == 'object' && arguments[0].startCell != null) {\n                    data_array = data_array.concat(func_methods.getCellDataArr(arguments[0], 'text', true));\n                } else {\n                    if (!isRealNum(arguments[0])) {\n                        return formula.error.v;\n                    }\n                    data_array.push(arguments[0]);\n                }\n                var array = [];\n                for (var i = 0; i < data_array.length; i++) {\n                    var number = data_array[i];\n                    if (isRealNum(number)) {\n                        array.push(parseFloat(number));\n                    }\n                }    //要返回第几个四分位值\n                //要返回第几个四分位值\n                var quart = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(quart)) {\n                    return quart;\n                }\n                if (!isRealNum(quart)) {\n                    return formula.error.v;\n                }\n                quart = parseInt(quart);\n                if (array.length == 0) {\n                    return formula.error.nm;\n                }\n                if (quart < 0 || quart > 4) {\n                    return formula.error.nm;\n                }    //计算\n                //计算\n                switch (quart) {\n                case 0:\n                    return Math.min.apply(Math, array);\n                case 1:\n                    return window.luckysheet_function.PERCENTILE_INC.f(array, 0.25);\n                case 2:\n                    return window.luckysheet_function.PERCENTILE_INC.f(array, 0.5);\n                case 3:\n                    return window.luckysheet_function.PERCENTILE_INC.f(array, 0.75);\n                case 4:\n                    return Math.max.apply(Math, array);\n                }\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'POISSON_DIST': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //事件数\n                var x = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(x)) {\n                    return x;\n                }\n                if (!isRealNum(x)) {\n                    return formula.error.v;\n                }\n                x = parseInt(x);    //期望值\n                //期望值\n                var mean = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(mean)) {\n                    return mean;\n                }\n                if (!isRealNum(mean)) {\n                    return formula.error.v;\n                }\n                mean = parseFloat(mean);    //决定函数形式的逻辑值\n                //决定函数形式的逻辑值\n                var cumulative = func_methods.getCellBoolen(arguments[2]);\n                if (valueIsError(cumulative)) {\n                    return cumulative;\n                }\n                if (x < 0 || mean < 0) {\n                    return formula.error.nm;\n                }\n                return cumulative ? jStat.poisson.cdf(x, mean) : jStat.poisson.pdf(x, mean);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'RSQ': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //代表因变量数据数组或矩阵的范围\n                var data_known_y = arguments[0];\n                var known_y = [];\n                if (getObjType(data_known_y) == 'array') {\n                    if (getObjType(data_known_y[0]) == 'array' && !func_methods.isDyadicArr(data_known_y)) {\n                        return formula.error.v;\n                    }\n                    known_y = known_y.concat(func_methods.getDataArr(data_known_y, false));\n                } else if (getObjType(data_known_y) == 'object' && data_known_y.startCell != null) {\n                    known_y = known_y.concat(func_methods.getCellDataArr(data_known_y, 'text', false));\n                } else {\n                    if (!isRealNum(data_known_y)) {\n                        return formula.error.v;\n                    }\n                    known_y.push(data_known_y);\n                }    //代表自变量数据数组或矩阵的范围\n                //代表自变量数据数组或矩阵的范围\n                var data_known_x = arguments[1];\n                var known_x = [];\n                if (getObjType(data_known_x) == 'array') {\n                    if (getObjType(data_known_x[0]) == 'array' && !func_methods.isDyadicArr(data_known_x)) {\n                        return formula.error.v;\n                    }\n                    known_x = known_x.concat(func_methods.getDataArr(data_known_x, false));\n                } else if (getObjType(data_known_x) == 'object' && data_known_x.startCell != null) {\n                    known_x = known_x.concat(func_methods.getCellDataArr(data_known_x, 'text', false));\n                } else {\n                    if (!isRealNum(data_known_x)) {\n                        return formula.error.v;\n                    }\n                    known_x.push(data_known_x);\n                }\n                if (known_y.length != known_x.length) {\n                    return formula.error.na;\n                }    //known_y 和 known_x 只取数值\n                //known_y 和 known_x 只取数值\n                var data_y = [], data_x = [];\n                for (var i = 0; i < known_y.length; i++) {\n                    var num_y = known_y[i];\n                    var num_x = known_x[i];\n                    if (isRealNum(num_y) && isRealNum(num_x)) {\n                        data_y.push(parseFloat(num_y));\n                        data_x.push(parseFloat(num_x));\n                    }\n                }\n                if (data_y.length == 0 || data_x.length == 0) {\n                    return formula.error.d;\n                }\n                return Math.pow(window.luckysheet_function.PEARSON.f(data_y, data_x), 2);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'T_DIST': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //T-分布函数的输入\n                var x = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(x)) {\n                    return x;\n                }\n                if (!isRealNum(x)) {\n                    return formula.error.v;\n                }\n                x = parseFloat(x);    //自由度数值\n                //自由度数值\n                var degrees_freedom = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(degrees_freedom)) {\n                    return degrees_freedom;\n                }\n                if (!isRealNum(degrees_freedom)) {\n                    return formula.error.v;\n                }\n                degrees_freedom = parseInt(degrees_freedom);    //决定函数形式的逻辑值\n                //决定函数形式的逻辑值\n                var cumulative = func_methods.getCellBoolen(arguments[2]);\n                if (valueIsError(cumulative)) {\n                    return cumulative;\n                }\n                if (degrees_freedom < 1) {\n                    return formula.error.nm;\n                }\n                return cumulative ? jStat.studentt.cdf(x, degrees_freedom) : jStat.studentt.pdf(x, degrees_freedom);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'T_DIST_2T': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //T-分布函数的输入\n                var x = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(x)) {\n                    return x;\n                }\n                if (!isRealNum(x)) {\n                    return formula.error.v;\n                }\n                x = parseFloat(x);    //自由度数值\n                //自由度数值\n                var degrees_freedom = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(degrees_freedom)) {\n                    return degrees_freedom;\n                }\n                if (!isRealNum(degrees_freedom)) {\n                    return formula.error.v;\n                }\n                degrees_freedom = parseInt(degrees_freedom);\n                if (x < 0 || degrees_freedom < 1) {\n                    return formula.error.nm;\n                }\n                return (1 - jStat.studentt.cdf(x, degrees_freedom)) * 2;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'T_DIST_RT': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //T-分布函数的输入\n                var x = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(x)) {\n                    return x;\n                }\n                if (!isRealNum(x)) {\n                    return formula.error.v;\n                }\n                x = parseFloat(x);    //自由度数值\n                //自由度数值\n                var degrees_freedom = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(degrees_freedom)) {\n                    return degrees_freedom;\n                }\n                if (!isRealNum(degrees_freedom)) {\n                    return formula.error.v;\n                }\n                degrees_freedom = parseInt(degrees_freedom);\n                if (degrees_freedom < 1) {\n                    return formula.error.nm;\n                }\n                return 1 - jStat.studentt.cdf(x, degrees_freedom);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'T_INV': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //与学生的 t 分布相关的概率\n                var probability = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(probability)) {\n                    return probability;\n                }\n                if (!isRealNum(probability)) {\n                    return formula.error.v;\n                }\n                probability = parseFloat(probability);    //自由度数值\n                //自由度数值\n                var deg_freedom = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(deg_freedom)) {\n                    return deg_freedom;\n                }\n                if (!isRealNum(deg_freedom)) {\n                    return formula.error.v;\n                }\n                deg_freedom = parseInt(deg_freedom);\n                if (probability <= 0 || probability > 1) {\n                    return formula.error.nm;\n                }\n                if (deg_freedom < 1) {\n                    return formula.error.nm;\n                }\n                return jStat.studentt.inv(probability, deg_freedom);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'T_INV_2T': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //与学生的 t 分布相关的概率\n                var probability = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(probability)) {\n                    return probability;\n                }\n                if (!isRealNum(probability)) {\n                    return formula.error.v;\n                }\n                probability = parseFloat(probability);    //自由度数值\n                //自由度数值\n                var deg_freedom = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(deg_freedom)) {\n                    return deg_freedom;\n                }\n                if (!isRealNum(deg_freedom)) {\n                    return formula.error.v;\n                }\n                deg_freedom = parseInt(deg_freedom);\n                if (probability <= 0 || probability > 1) {\n                    return formula.error.nm;\n                }\n                if (deg_freedom < 1) {\n                    return formula.error.nm;\n                }\n                return Math.abs(jStat.studentt.inv(probability / 2, deg_freedom));\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'T_TEST': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //第一个数据集\n                var known_x = [];\n                if (getObjType(arguments[0]) == 'array') {\n                    if (getObjType(arguments[0][0]) == 'array' && !func_methods.isDyadicArr(arguments[0])) {\n                        return formula.error.v;\n                    }\n                    known_x = known_x.concat(func_methods.getDataArr(arguments[0], false));\n                } else if (getObjType(arguments[0]) == 'object' && arguments[0].startCell != null) {\n                    known_x = known_x.concat(func_methods.getCellDataArr(arguments[0], 'text', false));\n                } else {\n                    if (!isRealNum(arguments[0])) {\n                        return formula.error.v;\n                    }\n                    known_x.push(arguments[0]);\n                }    // var data_x = [];\n                // var data_x = [];\n                var data_x = known_x;    //第二个数据集\n                //第二个数据集\n                var known_y = [];\n                if (getObjType(arguments[1]) == 'array') {\n                    if (getObjType(arguments[1][0]) == 'array' && !func_methods.isDyadicArr(arguments[1])) {\n                        return formula.error.v;\n                    }\n                    known_y = known_y.concat(func_methods.getDataArr(arguments[1], false));\n                } else if (getObjType(arguments[1]) == 'object' && arguments[1].startCell != null) {\n                    known_y = known_y.concat(func_methods.getCellDataArr(arguments[1], 'text', false));\n                } else {\n                    if (!isRealNum(arguments[1])) {\n                        return formula.error.v;\n                    }\n                    known_y.push(arguments[1]);\n                }    // var data_y = [];\n                // var data_y = [];\n                var data_y = known_y;    //指定分布的尾数\n                //指定分布的尾数\n                var tails = func_methods.getFirstValue(arguments[2]);\n                if (valueIsError(tails)) {\n                    return tails;\n                }\n                if (!isRealNum(tails)) {\n                    return formula.error.v;\n                }\n                tails = parseInt(tails);    //指定 t 检验的类型\n                //指定 t 检验的类型\n                var type = func_methods.getFirstValue(arguments[3]);\n                if (valueIsError(type)) {\n                    return type;\n                }\n                if (!isRealNum(type)) {\n                    return formula.error.v;\n                }\n                type = parseInt(type);\n                if ([\n                        1,\n                        2\n                    ].indexOf(tails) == -1) {\n                    return formula.error.nm;\n                }\n                if ([\n                        1,\n                        2,\n                        3\n                    ].indexOf(type) == -1) {\n                    return formula.error.nm;\n                }    //计算\n                //计算\n                var t = null, df = null;\n                if (type == 1) {\n                    var diff_arr = [];\n                    for (i = 0; i < data_x.length; i++) {\n                        diff_arr.push(data_x[i] - data_y[i]);\n                    }\n                    var diff_mean = Math.abs(jStat.mean(diff_arr));\n                    var diff_sd = func_methods.standardDeviation_s(diff_arr);\n                    t = diff_mean / (diff_sd / Math.sqrt(data_x.length));\n                    df = data_x.length - 1;\n                } else {\n                    var mean_x = jStat.mean(data_x);\n                    var mean_y = jStat.mean(data_y);\n                    var s_x = func_methods.variance_s(data_x);\n                    var s_y = func_methods.variance_s(data_y);\n                    t = Math.abs(mean_x - mean_y) / Math.sqrt(s_x / data_x.length + s_y / data_y.length);\n                    switch (type) {\n                    case 2:\n                        df = data_x.length + data_y.length - 2;\n                        break;\n                    case 3:\n                        df = Math.pow(s_x / data_x.length + s_y / data_y.length, 2) / (Math.pow(s_x / data_x.length, 2) / (data_x.length - 1) + Math.pow(s_y / data_y.length, 2) / (data_y.length - 1));\n                        break;\n                    }\n                }\n                if (tails == 1) {\n                    var result = window.luckysheet_function.T_DIST_RT.f(t, df);\n                } else if (tails == 2) {\n                    var result = window.luckysheet_function.T_DIST_2T.f(t, df);\n                }\n                return result;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'F_DIST': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //用来计算函数的值\n                var x = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(x)) {\n                    return x;\n                }\n                if (!isRealNum(x)) {\n                    return formula.error.v;\n                }\n                x = parseFloat(x);    //分子自由度\n                //分子自由度\n                var degrees_freedom1 = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(degrees_freedom1)) {\n                    return degrees_freedom1;\n                }\n                if (!isRealNum(degrees_freedom1)) {\n                    return formula.error.v;\n                }\n                degrees_freedom1 = parseInt(degrees_freedom1);    //分母自由度\n                //分母自由度\n                var degrees_freedom2 = func_methods.getFirstValue(arguments[2]);\n                if (valueIsError(degrees_freedom2)) {\n                    return degrees_freedom2;\n                }\n                if (!isRealNum(degrees_freedom2)) {\n                    return formula.error.v;\n                }\n                degrees_freedom2 = parseInt(degrees_freedom2);    //用于确定函数形式的逻辑值\n                //用于确定函数形式的逻辑值\n                var cumulative = func_methods.getCellBoolen(arguments[3]);\n                if (valueIsError(cumulative)) {\n                    return cumulative;\n                }\n                if (x < 0) {\n                    return formula.error.nm;\n                }\n                if (degrees_freedom1 < 1) {\n                    return formula.error.nm;\n                }\n                if (degrees_freedom2 < 1) {\n                    return formula.error.nm;\n                }\n                return cumulative ? jStat.centralF.cdf(x, degrees_freedom1, degrees_freedom2) : jStat.centralF.pdf(x, degrees_freedom1, degrees_freedom2);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'F_DIST_RT': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //用来计算函数的值\n                var x = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(x)) {\n                    return x;\n                }\n                if (!isRealNum(x)) {\n                    return formula.error.v;\n                }\n                x = parseFloat(x);    //分子自由度\n                //分子自由度\n                var degrees_freedom1 = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(degrees_freedom1)) {\n                    return degrees_freedom1;\n                }\n                if (!isRealNum(degrees_freedom1)) {\n                    return formula.error.v;\n                }\n                degrees_freedom1 = parseInt(degrees_freedom1);    //分母自由度\n                //分母自由度\n                var degrees_freedom2 = func_methods.getFirstValue(arguments[2]);\n                if (valueIsError(degrees_freedom2)) {\n                    return degrees_freedom2;\n                }\n                if (!isRealNum(degrees_freedom2)) {\n                    return formula.error.v;\n                }\n                degrees_freedom2 = parseInt(degrees_freedom2);\n                if (x < 0) {\n                    return formula.error.nm;\n                }\n                if (degrees_freedom1 < 1) {\n                    return formula.error.nm;\n                }\n                if (degrees_freedom2 < 1) {\n                    return formula.error.nm;\n                }\n                return 1 - jStat.centralF.cdf(x, degrees_freedom1, degrees_freedom2);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'VAR_P': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var dataArr = [];\n                for (var i = 0; i < arguments.length; i++) {\n                    var data = arguments[i];\n                    if (getObjType(data) == 'array') {\n                        if (getObjType(data[0]) == 'array' && !func_methods.isDyadicArr(data)) {\n                            return formula.error.v;\n                        }\n                        dataArr = dataArr.concat(func_methods.getDataArr(data, true));\n                    } else if (getObjType(data) == 'object' && data.startCell != null) {\n                        dataArr = dataArr.concat(func_methods.getCellDataArr(data, 'number', true));\n                    } else {\n                        if (!isRealNum(data)) {\n                            return formula.error.v;\n                        }\n                        dataArr.push(data);\n                    }\n                }\n                var dataArr_n = [];\n                for (var i = 0; i < dataArr.length; i++) {\n                    var number = dataArr[i];\n                    if (isRealNum(number)) {\n                        dataArr_n.push(parseFloat(number));\n                    }\n                }\n                if (dataArr_n.length == 0) {\n                    return formula.error.d;\n                }\n                var n = dataArr_n.length;\n                var sigma = 0;\n                var mean = window.luckysheet_function.AVERAGE.f.apply(window.luckysheet_function.AVERAGE, dataArr_n);\n                for (var i = 0; i < n; i++) {\n                    sigma += Math.pow(dataArr_n[i] - mean, 2);\n                }\n                return sigma / n;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'VAR_S': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var dataArr = [];\n                for (var i = 0; i < arguments.length; i++) {\n                    var data = arguments[i];\n                    if (getObjType(data) == 'array') {\n                        if (getObjType(data[0]) == 'array' && !func_methods.isDyadicArr(data)) {\n                            return formula.error.v;\n                        }\n                        dataArr = dataArr.concat(func_methods.getDataArr(data, true));\n                    } else if (getObjType(data) == 'object' && data.startCell != null) {\n                        dataArr = dataArr.concat(func_methods.getCellDataArr(data, 'number', true));\n                    } else {\n                        if (!isRealNum(data)) {\n                            return formula.error.v;\n                        }\n                        dataArr.push(data);\n                    }\n                }\n                var dataArr_n = [];\n                for (var i = 0; i < dataArr.length; i++) {\n                    var number = dataArr[i];\n                    if (isRealNum(number)) {\n                        dataArr_n.push(parseFloat(number));\n                    }\n                }\n                if (dataArr_n.length == 0) {\n                    return formula.error.d;\n                }\n                var n = dataArr_n.length;\n                var sigma = 0;\n                var mean = window.luckysheet_function.AVERAGE.f.apply(window.luckysheet_function.AVERAGE, dataArr_n);\n                for (var i = 0; i < n; i++) {\n                    sigma += Math.pow(dataArr_n[i] - mean, 2);\n                }\n                return sigma / (n - 1);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'VARA': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var dataArr = [];\n                for (var i = 0; i < arguments.length; i++) {\n                    var data = arguments[i];\n                    if (getObjType(data) == 'array') {\n                        if (getObjType(data[0]) == 'array' && !func_methods.isDyadicArr(data)) {\n                            return formula.error.v;\n                        }\n                        dataArr = dataArr.concat(func_methods.getDataArr(data, false));\n                    } else if (getObjType(data) == 'object' && data.startCell != null) {\n                        dataArr = dataArr.concat(func_methods.getCellDataArr(data, 'number', true));\n                    } else {\n                        if (number.toString.toLowerCase() == 'true') {\n                            dataArr.push(1);\n                        } else if (number.toString.toLowerCase() == 'false') {\n                            dataArr.push(0);\n                        } else if (isRealNum(data)) {\n                            dataArr.push(data);\n                        } else {\n                            return formula.error.v;\n                        }\n                    }\n                }\n                var dataArr_n = [];\n                for (var i = 0; i < dataArr.length; i++) {\n                    var number = dataArr[i];\n                    if (isRealNum(number)) {\n                        dataArr_n.push(parseFloat(number));\n                    } else {\n                        if (number.toString().toLowerCase() == 'true') {\n                            dataArr_n.push(1);\n                        } else {\n                            dataArr_n.push(0);\n                        }\n                    }\n                }\n                var n = dataArr_n.length;\n                var sigma = 0;\n                var mean = window.luckysheet_function.AVERAGE.f.apply(window.luckysheet_function.AVERAGE, dataArr_n);\n                for (var i = 0; i < n; i++) {\n                    sigma += Math.pow(dataArr_n[i] - mean, 2);\n                }\n                return sigma / (n - 1);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'VARPA': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var dataArr = [];\n                for (var i = 0; i < arguments.length; i++) {\n                    var data = arguments[i];\n                    if (getObjType(data) == 'array') {\n                        if (getObjType(data[0]) == 'array' && !func_methods.isDyadicArr(data)) {\n                            return formula.error.v;\n                        }\n                        dataArr = dataArr.concat(func_methods.getDataArr(data, false));\n                    } else if (getObjType(data) == 'object' && data.startCell != null) {\n                        dataArr = dataArr.concat(func_methods.getCellDataArr(data, 'number', true));\n                    } else {\n                        if (number.toString.toLowerCase() == 'true') {\n                            dataArr.push(1);\n                        } else if (number.toString.toLowerCase() == 'false') {\n                            dataArr.push(0);\n                        } else if (isRealNum(data)) {\n                            dataArr.push(data);\n                        } else {\n                            return formula.error.v;\n                        }\n                    }\n                }\n                var dataArr_n = [];\n                for (var i = 0; i < dataArr.length; i++) {\n                    var number = dataArr[i];\n                    if (isRealNum(number)) {\n                        dataArr_n.push(parseFloat(number));\n                    } else {\n                        if (number.toString().toLowerCase() == 'true') {\n                            dataArr_n.push(1);\n                        } else {\n                            dataArr_n.push(0);\n                        }\n                    }\n                }\n                var n = dataArr_n.length;\n                var sigma = 0;\n                var mean = window.luckysheet_function.AVERAGE.f.apply(window.luckysheet_function.AVERAGE, dataArr_n);\n                for (var i = 0; i < n; i++) {\n                    sigma += Math.pow(dataArr_n[i] - mean, 2);\n                }\n                return sigma / n;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'STEYX': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //代表因变量数据数组或矩阵的范围\n                var known_y = [];\n                if (getObjType(arguments[0]) == 'array') {\n                    if (getObjType(arguments[0][0]) == 'array' && !func_methods.isDyadicArr(arguments[0])) {\n                        return formula.error.v;\n                    }\n                    known_y = known_y.concat(func_methods.getDataArr(arguments[0], false));\n                } else if (getObjType(arguments[0]) == 'object' && arguments[0].startCell != null) {\n                    known_y = known_y.concat(func_methods.getCellDataArr(arguments[0], 'text', false));\n                } else {\n                    if (!isRealNum(arguments[0])) {\n                        return formula.error.v;\n                    }\n                    known_y.push(arguments[0]);\n                }    //代表自变量数据数组或矩阵的范围\n                //代表自变量数据数组或矩阵的范围\n                var known_x = [];\n                if (getObjType(arguments[1]) == 'array') {\n                    if (getObjType(arguments[1][0]) == 'array' && !func_methods.isDyadicArr(arguments[1])) {\n                        return formula.error.v;\n                    }\n                    known_x = known_x.concat(func_methods.getDataArr(arguments[1], false));\n                } else if (getObjType(arguments[1]) == 'object' && arguments[1].startCell != null) {\n                    known_x = known_x.concat(func_methods.getCellDataArr(arguments[1], 'text', false));\n                } else {\n                    if (!isRealNum(arguments[1])) {\n                        return formula.error.v;\n                    }\n                    known_x.push(arguments[1]);\n                }\n                if (known_y.length != known_x.length) {\n                    return formula.error.na;\n                }    //known_y 和 known_x 只取数值\n                //known_y 和 known_x 只取数值\n                var data_y = [], data_x = [];\n                for (var i = 0; i < known_y.length; i++) {\n                    var num_y = known_y[i];\n                    var num_x = known_x[i];\n                    if (isRealNum(num_y) && isRealNum(num_x)) {\n                        data_y.push(parseFloat(num_y));\n                        data_x.push(parseFloat(num_x));\n                    }\n                }\n                if (data_y.length < 3 || data_x.length < 3) {\n                    return formula.error.d;\n                }    //计算\n                //计算\n                var xmean = jStat.mean(data_x);\n                var ymean = jStat.mean(data_y);\n                var n = data_x.length;\n                var lft = 0;\n                var num = 0;\n                var den = 0;\n                for (var i = 0; i < n; i++) {\n                    lft += Math.pow(data_y[i] - ymean, 2);\n                    num += (data_x[i] - xmean) * (data_y[i] - ymean);\n                    den += Math.pow(data_x[i] - xmean, 2);\n                }\n                return Math.sqrt((lft - num * num / den) / (n - 2));\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'STANDARDIZE': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //要正态化的随机变量值\n                var x = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(x)) {\n                    return x;\n                }\n                if (!isRealNum(x)) {\n                    return formula.error.v;\n                }\n                x = parseFloat(x);    //分布的均值\n                //分布的均值\n                var mean = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(mean)) {\n                    return mean;\n                }\n                if (!isRealNum(mean)) {\n                    return formula.error.v;\n                }\n                mean = parseFloat(mean);    //分布的标准偏差\n                //分布的标准偏差\n                var standard_dev = func_methods.getFirstValue(arguments[2]);\n                if (valueIsError(standard_dev)) {\n                    return standard_dev;\n                }\n                if (!isRealNum(standard_dev)) {\n                    return formula.error.v;\n                }\n                standard_dev = parseFloat(standard_dev);\n                if (standard_dev <= 0) {\n                    return formula.error.nm;\n                }\n                return (x - mean) / standard_dev;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'SMALL': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //要正态化的随机变量值\n                var dataArr = [];\n                if (getObjType(arguments[0]) == 'array') {\n                    if (getObjType(arguments[0][0]) == 'array' && !func_methods.isDyadicArr(arguments[0])) {\n                        return formula.error.v;\n                    }\n                    dataArr = dataArr.concat(func_methods.getDataArr(arguments[0], true));\n                } else if (getObjType(arguments[0]) == 'object' && arguments[0].startCell != null) {\n                    dataArr = dataArr.concat(func_methods.getCellDataArr(arguments[0], 'number', true));\n                } else {\n                    if (!isRealNum(arguments[0])) {\n                        return formula.error.v;\n                    }\n                    dataArr.push(arguments[0]);\n                }\n                var dataArr_n = [];\n                for (var i = 0; i < dataArr.length; i++) {\n                    var number = dataArr[i];\n                    if (isRealNum(number)) {\n                        dataArr_n.push(parseFloat(number));\n                    }\n                }    //要返回的数据在数组或数据区域里的位置（从小到大）\n                //要返回的数据在数组或数据区域里的位置（从小到大）\n                var k = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(k)) {\n                    return k;\n                }\n                if (!isRealNum(k)) {\n                    return formula.error.v;\n                }\n                k = parseInt(k);\n                if (dataArr_n.length == 0) {\n                    return formula.error.nm;\n                }\n                if (k <= 0 || k > dataArr_n.length) {\n                    return formula.error.nm;\n                }    //计算\n                //计算\n                return dataArr_n.sort(function (a, b) {\n                    return a - b;\n                })[k - 1];\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'SLOPE': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //代表因变量数据数组或矩阵的范围\n                var known_y = [];\n                if (getObjType(arguments[0]) == 'array') {\n                    if (getObjType(arguments[0][0]) == 'array' && !func_methods.isDyadicArr(arguments[0])) {\n                        return formula.error.v;\n                    }\n                    known_y = known_y.concat(func_methods.getDataArr(arguments[0], false));\n                } else if (getObjType(arguments[0]) == 'object' && arguments[0].startCell != null) {\n                    known_y = known_y.concat(func_methods.getCellDataArr(arguments[0], 'text', false));\n                } else {\n                    if (!isRealNum(arguments[0])) {\n                        return formula.error.v;\n                    }\n                    known_y.push(arguments[0]);\n                }    //代表自变量数据数组或矩阵的范围\n                //代表自变量数据数组或矩阵的范围\n                var known_x = [];\n                if (getObjType(arguments[1]) == 'array') {\n                    if (getObjType(arguments[1][0]) == 'array' && !func_methods.isDyadicArr(arguments[1])) {\n                        return formula.error.v;\n                    }\n                    known_x = known_x.concat(func_methods.getDataArr(arguments[1], false));\n                } else if (getObjType(arguments[1]) == 'object' && arguments[1].startCell != null) {\n                    known_x = known_x.concat(func_methods.getCellDataArr(arguments[1], 'text', false));\n                } else {\n                    if (!isRealNum(arguments[1])) {\n                        return formula.error.v;\n                    }\n                    known_x.push(arguments[1]);\n                }\n                if (known_y.length != known_x.length) {\n                    return formula.error.na;\n                }    //known_y 和 known_x 只取数值\n                //known_y 和 known_x 只取数值\n                var data_y = [], data_x = [];\n                for (var i = 0; i < known_y.length; i++) {\n                    var num_y = known_y[i];\n                    var num_x = known_x[i];\n                    if (isRealNum(num_y) && isRealNum(num_x)) {\n                        data_y.push(parseFloat(num_y));\n                        data_x.push(parseFloat(num_x));\n                    }\n                }\n                if (data_y.length < 3 || data_x.length < 3) {\n                    return formula.error.d;\n                }    //计算\n                //计算\n                var xmean = jStat.mean(data_x);\n                var ymean = jStat.mean(data_y);\n                var n = data_x.length;\n                var num = 0;\n                var den = 0;\n                for (var i = 0; i < n; i++) {\n                    num += (data_x[i] - xmean) * (data_y[i] - ymean);\n                    den += Math.pow(data_x[i] - xmean, 2);\n                }\n                return num / den;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'SKEW': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var dataArr = [];\n                for (var i = 0; i < arguments.length; i++) {\n                    var data = arguments[i];\n                    if (getObjType(data) == 'array') {\n                        if (getObjType(data[0]) == 'array' && !func_methods.isDyadicArr(data)) {\n                            return formula.error.v;\n                        }\n                        dataArr = dataArr.concat(func_methods.getDataArr(data, true));\n                    } else if (getObjType(data) == 'object' && data.startCell != null) {\n                        dataArr = dataArr.concat(func_methods.getCellDataArr(data, 'number', true));\n                    } else {\n                        if (!isRealNum(data)) {\n                            return formula.error.v;\n                        }\n                        dataArr.push(data);\n                    }\n                }\n                var dataArr_n = [];\n                for (var i = 0; i < dataArr.length; i++) {\n                    var number = dataArr[i];\n                    if (isRealNum(number)) {\n                        dataArr_n.push(parseFloat(number));\n                    }\n                }\n                if (dataArr_n.length < 3 || func_methods.standardDeviation_s(dataArr_n) == 0) {\n                    return formula.error.d;\n                }    //计算\n                //计算\n                var mean = jStat.mean(dataArr_n);\n                var n = dataArr_n.length;\n                var sigma = 0;\n                for (var i = 0; i < n; i++) {\n                    sigma += Math.pow(dataArr_n[i] - mean, 3);\n                }\n                return n * sigma / ((n - 1) * (n - 2) * Math.pow(jStat.stdev(dataArr_n, true), 3));\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'SKEW_P': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var dataArr = [];\n                for (var i = 0; i < arguments.length; i++) {\n                    var data = arguments[i];\n                    if (getObjType(data) == 'array') {\n                        if (getObjType(data[0]) == 'array' && !func_methods.isDyadicArr(data)) {\n                            return formula.error.v;\n                        }\n                        dataArr = dataArr.concat(func_methods.getDataArr(data, true));\n                    } else if (getObjType(data) == 'object' && data.startCell != null) {\n                        dataArr = dataArr.concat(func_methods.getCellDataArr(data, 'number', true));\n                    } else {\n                        if (!isRealNum(data)) {\n                            return formula.error.v;\n                        }\n                        dataArr.push(data);\n                    }\n                }\n                var dataArr_n = [];\n                for (var i = 0; i < dataArr.length; i++) {\n                    var number = dataArr[i];\n                    if (isRealNum(number)) {\n                        dataArr_n.push(parseFloat(number));\n                    }\n                }\n                if (dataArr_n.length < 3 || func_methods.standardDeviation_s(dataArr_n) == 0) {\n                    return formula.error.d;\n                }    //计算\n                //计算\n                var mean = jStat.mean(dataArr_n);\n                var n = dataArr_n.length;\n                var m2 = 0;\n                var m3 = 0;\n                for (var i = 0; i < n; i++) {\n                    m3 += Math.pow(dataArr_n[i] - mean, 3);\n                    m2 += Math.pow(dataArr_n[i] - mean, 2);\n                }\n                m3 = m3 / n;\n                m2 = m2 / n;\n                return m3 / Math.pow(m2, 3 / 2);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'ADDRESS': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //行号\n                var row_num = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(row_num)) {\n                    return row_num;\n                }\n                if (!isRealNum(row_num)) {\n                    return formula.error.v;\n                }\n                row_num = parseInt(row_num);    //列标\n                //列标\n                var column_num = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(column_num)) {\n                    return column_num;\n                }\n                if (!isRealNum(column_num)) {\n                    return formula.error.v;\n                }\n                column_num = parseInt(column_num);    //引用类型\n                //引用类型\n                var abs_num = 1;\n                if (arguments.length >= 3) {\n                    abs_num = func_methods.getFirstValue(arguments[2]);\n                    if (valueIsError(abs_num)) {\n                        return abs_num;\n                    }\n                    if (!isRealNum(abs_num)) {\n                        return formula.error.v;\n                    }\n                    abs_num = parseInt(abs_num);\n                }    //A1标记形式 -- R1C1标记形式\n                //A1标记形式 -- R1C1标记形式\n                var A1 = true;\n                if (arguments.length >= 4) {\n                    A1 = func_methods.getCellBoolen(arguments[3]);\n                    if (valueIsError(A1)) {\n                        return A1;\n                    }\n                }\n                if (row_num <= 0 || column_num <= 0) {\n                    return formula.error.v;\n                }\n                if ([\n                        1,\n                        2,\n                        3,\n                        4\n                    ].indexOf(abs_num) == -1) {\n                    return formula.error.v;\n                }    //计算\n                //计算\n                var str;\n                if (A1) {\n                    column_num = chatatABC(column_num - 1);\n                    switch (abs_num) {\n                    case 1:\n                        str = '$' + column_num + '$' + row_num;\n                        break;\n                    case 2:\n                        str = column_num + '$' + row_num;\n                        break;\n                    case 3:\n                        str = '$' + column_num + row_num;\n                        break;\n                    case 4:\n                        str = column_num + row_num;\n                        break;\n                    }\n                } else {\n                    switch (abs_num) {\n                    case 1:\n                        str = 'R' + row_num + 'C' + column_num;\n                        break;\n                    case 2:\n                        str = 'R' + row_num + 'C[' + column_num + ']';\n                        break;\n                    case 3:\n                        str = 'R[' + row_num + ']' + 'C' + column_num;\n                        break;\n                    case 4:\n                        str = 'R[' + row_num + ']' + 'C[' + column_num + ']';\n                        break;\n                    }\n                }\n                if (arguments.length == 5) {\n                    //工作表名称\n                    var sheet_text = func_methods.getFirstValue(arguments[4]);\n                    if (valueIsError(sheet_text)) {\n                        return sheet_text;\n                    }\n                    return sheet_text + '!' + str;\n                } else {\n                    return str;\n                }\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'INDIRECT': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //以带引号的字符串形式提供的单元格引用\n                var ref_text = func_methods.getFirstValue(arguments[0], 'text');\n                if (valueIsError(ref_text)) {\n                    return ref_text;\n                }    //A1标记形式 -- R1C1标记形式\n                //A1标记形式 -- R1C1标记形式\n                var A1 = true;\n                if (arguments.length == 2) {\n                    A1 = func_methods.getCellBoolen(arguments[1]);\n                    if (valueIsError(A1)) {\n                        return A1;\n                    }\n                }\n                let luckysheetfile = getluckysheetfile();\n                let index = getSheetIndex(Store.calculateSheetIndex);\n                let currentSheet = luckysheetfile[index];\n                let sheetdata = currentSheet.data;    // sheetdata = Store.flowdata;\n                                                      // if (formula.execFunctionGroupData != null) {\n                                                      //     sheetdata = formula.execFunctionGroupData;\n                                                      // }\n                                                      //计算\n                // sheetdata = Store.flowdata;\n                // if (formula.execFunctionGroupData != null) {\n                //     sheetdata = formula.execFunctionGroupData;\n                // }\n                //计算\n                if (A1) {\n                } else {\n                }\n                if (formula.iscelldata(ref_text)) {\n                    let cellrange = formula.getcellrange(ref_text);\n                    let row = cellrange.row[0], col = cellrange.column[0];\n                    if (row < 0 || row >= sheetdata.length || col < 0 || col >= sheetdata[0].length) {\n                        return formula.error.r;\n                    }\n                    if (sheetdata[row][col] == null || isRealNull(sheetdata[row][col].v)) {\n                        return 0;\n                    }\n                    let value = sheetdata[row][col].v;\n                    if (formula.execFunctionGlobalData != null) {\n                        let ef = formula.execFunctionGlobalData[row + '_' + col + '_' + Store.calculateSheetIndex];\n                        if (ef != null) {\n                            value = ef.v;\n                        }\n                    }\n                    let retAll = {\n                        'sheetName': currentSheet.name,\n                        'startCell': ref_text,\n                        'rowl': row,\n                        'coll': col,\n                        'data': value\n                    };\n                    return retAll;\n                } else {\n                    return formula.error.r;\n                }\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'ROW': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                if (arguments.length == 1) {\n                    //要返回其行号的单元格\n                    var reference;\n                    if (getObjType(arguments[0]) == 'array') {\n                        return formula.error.v;\n                    } else if (getObjType(arguments[0]) == 'object' && arguments[0].startCell != null) {\n                        reference = arguments[0].startCell;\n                    } else {\n                        reference = arguments[0];\n                    }\n                    if (formula.iscelldata(reference)) {\n                        var cellrange = formula.getcellrange(reference);\n                        return cellrange['row'][0] + 1;\n                    } else {\n                        return formula.error.v;\n                    }\n                } else {\n                    return window.luckysheetCurrentRow + 1;\n                }\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'ROWS': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //要返回其行数的范围\n                if (getObjType(arguments[0]) == 'array') {\n                    if (getObjType(arguments[0][0]) == 'array') {\n                        return arguments[0].length;\n                    } else {\n                        return 1;\n                    }\n                } else if (getObjType(arguments[0]) == 'object' && arguments[0].startCell != null) {\n                    return arguments[0].rowl;\n                } else {\n                    return 1;\n                }\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'COLUMN': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                if (arguments.length == 1) {\n                    //要返回其列号的单元格\n                    var reference;\n                    if (getObjType(arguments[0]) == 'array') {\n                        return formula.error.v;\n                    } else if (getObjType(arguments[0]) == 'object' && arguments[0].startCell != null) {\n                        reference = arguments[0].startCell;\n                    } else {\n                        reference = arguments[0];\n                    }\n                    if (formula.iscelldata(reference)) {\n                        var cellrange = formula.getcellrange(reference);\n                        return cellrange['column'][0] + 1;\n                    } else {\n                        return formula.error.v;\n                    }\n                } else {\n                    return window.luckysheetCurrentColumn + 1;\n                }\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'COLUMNS': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //返回指定数组或范围中的列数\n                if (getObjType(arguments[0]) == 'array') {\n                    if (getObjType(arguments[0][0]) == 'array') {\n                        return arguments[0][0].length;\n                    } else {\n                        return arguments[0].length;\n                    }\n                } else if (getObjType(arguments[0]) == 'object' && arguments[0].startCell != null) {\n                    return arguments[0].coll;\n                } else {\n                    return 1;\n                }\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'OFFSET': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //用于计算行列偏移量的起点\n                if (!(getObjType(arguments[0]) == 'object' && arguments[0].startCell != null)) {\n                    return formula.error.v;\n                }\n                var reference = arguments[0].startCell;\n                let sheetName = arguments[0].sheetName;    //要偏移的行数\n                //要偏移的行数\n                var rows = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(rows)) {\n                    return rows;\n                }\n                if (!isRealNum(rows)) {\n                    return formula.error.v;\n                }\n                rows = parseInt(rows);    //要偏移的列数\n                //要偏移的列数\n                var cols = func_methods.getFirstValue(arguments[2]);\n                if (valueIsError(cols)) {\n                    return cols;\n                }\n                if (!isRealNum(cols)) {\n                    return formula.error.v;\n                }\n                cols = parseInt(cols);    //要从偏移目标开始返回的范围的高度\n                //要从偏移目标开始返回的范围的高度\n                var height = arguments[0].rowl;\n                if (arguments.length >= 4) {\n                    height = func_methods.getFirstValue(arguments[3]);\n                    if (valueIsError(height)) {\n                        return height;\n                    }\n                    if (!isRealNum(height)) {\n                        return formula.error.v;\n                    }\n                    height = parseInt(height);\n                }    //要从偏移目标开始返回的范围的宽度\n                //要从偏移目标开始返回的范围的宽度\n                var width = arguments[0].coll;\n                if (arguments.length == 5) {\n                    width = func_methods.getFirstValue(arguments[4]);\n                    if (valueIsError(width)) {\n                        return width;\n                    }\n                    if (!isRealNum(width)) {\n                        return formula.error.v;\n                    }\n                    width = parseInt(width);\n                }\n                if (height < 1 || width < 1) {\n                    return formula.error.r;\n                }    //计算\n                //计算\n                var cellrange = formula.getcellrange(reference);\n                var cellRow0 = cellrange['row'][0];\n                var cellCol0 = cellrange['column'][0];\n                cellRow0 += rows;\n                cellCol0 += cols;\n                var cellRow1 = cellRow0 + height - 1;\n                var cellCol1 = cellCol0 + width - 1;    // let sheetdata = null;\n                                                        // sheetdata = Store.flowdata;\n                                                        // if (formula.execFunctionGroupData != null) {\n                                                        //     sheetdata = formula.execFunctionGroupData;\n                                                        // }\n                // let sheetdata = null;\n                // sheetdata = Store.flowdata;\n                // if (formula.execFunctionGroupData != null) {\n                //     sheetdata = formula.execFunctionGroupData;\n                // }\n                let luckysheetfile = getluckysheetfile();\n                let index = getSheetIndex(Store.calculateSheetIndex);\n                let sheetdata = luckysheetfile[index].data;\n                if (cellRow0 < 0 || cellRow1 >= sheetdata.length || cellCol0 < 0 || cellCol1 >= sheetdata[0].length) {\n                    return formula.error.r;\n                }\n                var result = [];\n                for (var r = cellRow0; r <= cellRow1; r++) {\n                    var rowArr = [];\n                    for (var c = cellCol0; c <= cellCol1; c++) {\n                        if (formula.execFunctionGlobalData != null && formula.execFunctionGlobalData[r + '_' + c + '_' + Store.calculateSheetIndex] != null) {\n                            let ef = formula.execFunctionGlobalData[r + '_' + c + '_' + Store.calculateSheetIndex];\n                            if (ef != null) {\n                                rowArr.push(ef.v);\n                            } else {\n                                rowArr.push(0);\n                            }\n                        } else if (sheetdata[r][c] != null && !isRealNull(sheetdata[r][c].v)) {\n                            rowArr.push(sheetdata[r][c].v);\n                        } else {\n                            rowArr.push(0);\n                        }\n                    }\n                    result.push(rowArr);\n                }\n                let retAll = {\n                    'sheetName': sheetName,\n                    'startCell': getRangetxt(Store.calculateSheetIndex, {\n                        row: [\n                            cellRow0,\n                            cellRow1\n                        ],\n                        column: [\n                            cellCol0,\n                            cellCol1\n                        ]\n                    }),\n                    'rowl': cellRow0,\n                    'coll': cellCol0,\n                    'data': result\n                };\n                return retAll;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'MATCH': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //lookup_value\n                var lookup_value = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(lookup_value)) {\n                    return lookup_value;\n                }    //lookup_array\n                //lookup_array\n                var data_lookup_array = arguments[1];\n                var lookup_array = [];\n                if (getObjType(data_lookup_array) == 'array') {\n                    if (getObjType(data_lookup_array[0]) == 'array') {\n                        if (!func_methods.isDyadicArr(data_lookup_array)) {\n                            return formula.error.v;\n                        }\n                        return formula.error.na;\n                    } else {\n                        for (var i = 0; i < data_lookup_array.length; i++) {\n                            lookup_array.push(data_lookup_array[i]);\n                        }\n                    }\n                } else if (getObjType(data_lookup_array) == 'object' && data_lookup_array.startCell != null) {\n                    if (data_lookup_array.rowl > 1 && data_lookup_array.coll > 1) {\n                        return formula.error.na;\n                    }\n                    if (data_lookup_array.data != null) {\n                        if (getObjType(data_lookup_array.data) == 'array') {\n                            for (var i = 0; i < data_lookup_array.data.length; i++) {\n                                for (var j = 0; j < data_lookup_array.data[i].length; j++) {\n                                    if (data_lookup_array.data[i][j] != null && !isRealNull(data_lookup_array.data[i][j].v)) {\n                                        lookup_array.push(data_lookup_array.data[i][j].v);\n                                    }\n                                }\n                            }\n                        } else {\n                            lookup_array.push(data_lookup_array.data.v);\n                        }\n                    }\n                }    //match_type\n                //match_type\n                var match_type = 1;\n                if (arguments.length == 3) {\n                    match_type = func_methods.getFirstValue(arguments[2]);\n                    if (valueIsError(match_type)) {\n                        return match_type;\n                    }\n                    if (!isRealNum(match_type)) {\n                        return formula.error.v;\n                    }\n                    match_type = Math.ceil(parseFloat(match_type));\n                }\n                if ([\n                        -1,\n                        0,\n                        1\n                    ].indexOf(match_type) == -1) {\n                    return formula.error.na;\n                }    //计算\n                //计算\n                var index;\n                var indexValue;\n                for (var idx = 0; idx < lookup_array.length; idx++) {\n                    if (match_type === 1) {\n                        if (lookup_array[idx] === lookup_value) {\n                            return idx + 1;\n                        } else if (lookup_array[idx] < lookup_value) {\n                            if (!indexValue) {\n                                index = idx + 1;\n                                indexValue = lookup_array[idx];\n                            } else if (lookup_array[idx] > indexValue) {\n                                index = idx + 1;\n                                indexValue = lookup_array[idx];\n                            }\n                        }\n                    } else if (match_type === 0) {\n                        if (typeof lookup_value === 'string') {\n                            lookup_value = lookup_value.replace(/\\?/g, '.');\n                            if (lookup_array[idx].toLowerCase().match(lookup_value.toLowerCase())) {\n                                return idx + 1;\n                            }\n                        } else {\n                            if (lookup_array[idx] === lookup_value) {\n                                return idx + 1;\n                            }\n                        }\n                    } else if (match_type === -1) {\n                        if (lookup_array[idx] === lookup_value) {\n                            return idx + 1;\n                        } else if (lookup_array[idx] > lookup_value) {\n                            if (!indexValue) {\n                                index = idx + 1;\n                                indexValue = lookup_array[idx];\n                            } else if (lookup_array[idx] < indexValue) {\n                                index = idx + 1;\n                                indexValue = lookup_array[idx];\n                            }\n                        }\n                    }\n                }\n                return index ? index : formula.error.na;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'VLOOKUP': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //lookup_value\n                var lookup_value = func_methods.getFirstValue(arguments[0], 'text');\n                if (valueIsError(lookup_value)) {\n                    return lookup_value;\n                }\n                if (lookup_value.toString().replace(/\\s/g, '') == '') {\n                    return formula.error.na;\n                }    //table_array\n                //table_array\n                var data_table_array = arguments[1];\n                var table_array = [];\n                if (getObjType(data_table_array) == 'array') {\n                    if (getObjType(data_table_array[0]) == 'array') {\n                        if (!func_methods.isDyadicArr(data_table_array)) {\n                            return formula.error.v;\n                        }\n                        for (var i = 0; i < data_table_array.length; i++) {\n                            var rowArr = [];\n                            for (var j = 0; j < data_table_array[i].length; j++) {\n                                rowArr.push(data_table_array[i][j]);\n                            }\n                            table_array.push(rowArr);\n                        }\n                    } else {\n                        var rowArr = [];\n                        for (var i = 0; i < data_table_array.length; i++) {\n                            rowArr.push(data_table_array[i]);\n                        }\n                        table_array.push(rowArr);\n                    }\n                } else if (getObjType(data_table_array) == 'object' && data_table_array.startCell != null) {\n                    table_array = func_methods.getCellDataDyadicArr(data_table_array, 'text');\n                } else {\n                    return formula.error.v;\n                }    //col_index_num\n                //col_index_num\n                var col_index_num = func_methods.getFirstValue(arguments[2]);\n                if (valueIsError(col_index_num)) {\n                    return col_index_num;\n                }\n                if (!isRealNum(col_index_num)) {\n                    return formula.error.v;\n                }\n                col_index_num = parseInt(col_index_num);    //range_lookup\n                //range_lookup\n                var range_lookup = true;\n                if (arguments.length == 4) {\n                    range_lookup = func_methods.getCellBoolen(arguments[3]);\n                    if (valueIsError(range_lookup)) {\n                        return range_lookup;\n                    }\n                }    //判断\n                //判断\n                if (col_index_num < 1) {\n                    return formula.error.v;\n                } else if (col_index_num > table_array[0].length) {\n                    return formula.error.r;\n                }    //计算\n                //计算\n                if (range_lookup) {\n                    table_array = orderbydata(table_array, 0, true);\n                    for (var r = 0; r < table_array.length; r++) {\n                        var v = table_array[r][0];\n                        var result;\n                        if (isdatetime(lookup_value) && isdatetime(v)) {\n                            result = diff(lookup_value, v);\n                        } else if (isRealNum(lookup_value) && isRealNum(v)) {\n                            result = numeral(lookup_value).value() - numeral(v).value();\n                        } else if (!isRealNum(lookup_value) && !isRealNum(v)) {\n                            result = lookup_value.localeCompare(v, 'zh');\n                        } else if (!isRealNum(lookup_value)) {\n                            result = 1;\n                        } else if (!isRealNum(v)) {\n                            result = -1;\n                        }\n                        if (result < 0) {\n                            if (r == 0) {\n                                return formula.error.na;\n                            } else {\n                                return table_array[r - 1][col_index_num - 1];\n                            }\n                        } else {\n                            if (r == table_array.length - 1) {\n                                return table_array[r][col_index_num - 1];\n                            }\n                        }\n                    }\n                } else {\n                    var index = null;\n                    for (var r = 0; r < table_array.length; r++) {\n                        if (lookup_value.toString() == table_array[r][0].toString()) {\n                            index = r;\n                            break;\n                        }\n                    }\n                    if (index == null) {\n                        return formula.error.na;\n                    }\n                    return table_array[index][col_index_num - 1];\n                }\n            } catch (e) {\n                var err = e;    //计算错误检测\n                //计算错误检测\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'HLOOKUP': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var cell_r = window.luckysheetCurrentRow;\n                var cell_c = window.luckysheetCurrentColumn;\n                var searchkey = arguments[0];\n                if (typeof searchkey == 'object') {\n                    searchkey = arguments[0].data;\n                    if (getObjType(searchkey) == 'array') {\n                        searchkey = searchkey[r];\n                        if (getObjType(searchkey) == 'array') {\n                            searchkey = searchkey[c];\n                        }\n                    } else {\n                        searchkey = searchkey.v;\n                    }\n                }\n                var range = arguments[1].data;\n                var index = arguments[2];\n                var isaccurate = false;\n                if (arguments.length > 3) {\n                    isaccurate = !!arguments[3];\n                }\n                if (index > range.rowl) {\n                    return [\n                        formula.error.v,\n                        '索引超过了范围的长度\\uFF0C' + range[0].length\n                    ];\n                }\n                if (index < 1) {\n                    return [\n                        formula.error.v,\n                        '索引必须大于1'\n                    ];\n                }\n                var result = formula.error.na;\n                for (var c = 0; c < range[0].length; c++) {\n                    var matchv = getcellvalue(0, c, range);\n                    var showv = getcellvalue(index - 1, c, range);\n                    if (isaccurate) {\n                        if (matchv.indexOf(searchkey) > -1) {\n                            result = showv;\n                        }\n                    } else {\n                        if (formula.acompareb(matchv, searchkey)) {\n                            result = showv;\n                            return result;\n                        }\n                    }\n                }\n                return result;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'LOOKUP': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //完成矢量形式（数组形式不推荐，未做）\n                //=LOOKUP(4.19, A2:A6, B2:B6)\n                //=LOOKUP(0, A2:A6, B2:B6)\n                var cell_r = window.luckysheetCurrentRow;\n                var cell_c = window.luckysheetCurrentColumn;\n                var searchkey = arguments[0];\n                if (typeof searchkey == 'object') {\n                    searchkey = arguments[0].data;\n                    if (getObjType(searchkey) == 'array') {\n                        searchkey = searchkey[r];\n                        if (getObjType(searchkey) == 'array') {\n                            searchkey = searchkey[c];\n                        }\n                    } else {\n                        searchkey = searchkey.v;\n                    }\n                }    //必须为一维数组\n                //必须为一维数组\n                var range = arguments[1].data;\n                var range2;\n                var result = formula.error.na;\n                function sortNum(a, b) {\n                    //用于排序\n                    return b - a;\n                }    //获得两个范围的数组\n                //获得两个范围的数组\n                range = formula.getRangeArray(range)[0];\n                if (arguments[2]) {\n                    range2 = arguments[2].data;\n                    range2 = formula.getRangeArray(range2)[0];\n                }\n                if (typeof searchkey == 'string') {\n                    //字符串直接判断是否相等\n                    for (var i = 0; i < range.length; i++) {\n                        var matchv = range[i];\n                        var showv;\n                        if (arguments[2]) {\n                            showv = range2[i];\n                            if (matchv == searchkey) {\n                                result = showv;\n                            }\n                        } else {\n                            if (formula.acompareb(matchv, searchkey)) {\n                                result = matchv;\n                            }\n                        }\n                    }\n                } else if (isdatatype(searchkey) == 'num') {\n                    //数字判断1.是否相等2.不等，去找接近值\n                    var rangeNow = [];\n                    for (var i = 0; i < range.length; i++) {\n                        var matchv = range[i];\n                        var showv;\n                        if (arguments[2]) {\n                            showv = range2[i];\n                            if (matchv == searchkey) {\n                                result = showv;\n                                return result;\n                            } else if (matchv != searchkey && isdatatype(matchv) == 'num') {\n                                rangeNow.push(matchv);\n                            }\n                        } else {\n                            if (matchv == searchkey) {\n                                result = matchv;\n                                return result;\n                            } else if (matchv != searchkey && isdatatype(matchv) == 'num') {\n                                rangeNow.push(matchv);\n                            }\n                        }\n                    }\n                    if (rangeNow.length != 0) {\n                        rangeNow.push(searchkey);\n                        rangeNow.sort(sortNum);\n                        var index = rangeNow.indexOf(searchkey);\n                        if (index == rangeNow.length - 1) {\n                            return [\n                                formula.error.na,\n                                '找不到对应参数'\n                            ];\n                        } else {\n                            var mat = rangeNow[index + 1];\n                            if (arguments[2]) {\n                                var i = range.indexOf(mat);    //改成数组\n                                //改成数组\n                                result = range2[i];\n                            } else {\n                                result = mat;\n                            }\n                        }\n                    }\n                }\n                return result;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'INDEX': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //单元格区域或数组常量\n                var data_array = arguments[0];\n                var array = [];\n                let isReference = false;\n                if (getObjType(data_array) == 'array') {\n                    if (getObjType(data_array[0]) == 'array' && !func_methods.isDyadicArr(data_array)) {\n                        return formula.error.v;\n                    }\n                    array = func_methods.getDataDyadicArr(data_array);\n                } else if (getObjType(data_array) == 'object' && data_array.startCell != null) {\n                    array = func_methods.getCellDataDyadicArr(data_array, 'number');\n                    isReference = true;\n                }\n                var rowlen = array.length, collen = array[0].length;    //选择数组中的某行，函数从该行返回数值\n                //选择数组中的某行，函数从该行返回数值\n                var row_num = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(row_num)) {\n                    return row_num;\n                }\n                if (!isRealNum(row_num)) {\n                    return formula.error.v;\n                }\n                row_num = parseInt(row_num);    //选择数组中的某列，函数从该列返回数值\n                //选择数组中的某列，函数从该列返回数值\n                var column_num = func_methods.getFirstValue(arguments[2]);\n                if (valueIsError(column_num)) {\n                    return column_num;\n                }\n                if (row_num < 0 || isRealNum(column_num) && column_num < 0) {\n                    return formula.error.v;\n                }\n                if (row_num > rowlen || isRealNum(column_num) && column_num > collen) {\n                    return formula.error.r;\n                }\n                if (isReference) {\n                    var cellrange = formula.getcellrange(data_array.startCell);\n                    var cellRow0 = cellrange['row'][0];\n                    var cellCol0 = cellrange['column'][0];\n                    let data = array;\n                    if (row_num == 0 || column_num == 0) {\n                        if (row_num == 0) {\n                            data = array[0];\n                            row_num = 1;\n                        } else {\n                            data = array[row_num - 1];\n                        }\n                        if (isRealNum(column_num)) {\n                            if (column_num == 0) {\n                                data = data[0];\n                                column_num = 1;\n                            } else {\n                                data = data[column_num - 1];\n                            }\n                        } else {\n                            column_num = 1;\n                        }\n                    } else {\n                        if (!isRealNum(row_num)) {\n                            row_num = 1;\n                        }\n                        if (!isRealNum(column_num)) {\n                            column_num = 1;\n                        }\n                        data = array[row_num - 1][column_num - 1];\n                    }\n                    let row_index = cellRow0 + row_num - 1, column_index = cellCol0 + column_num - 1;\n                    let retAll = {\n                        'sheetName': data_array.sheetName,\n                        'startCell': getRangetxt(Store.calculateSheetIndex, {\n                            row: [\n                                row_index,\n                                row_index\n                            ],\n                            column: [\n                                column_index,\n                                column_index\n                            ]\n                        }),\n                        'rowl': row_index,\n                        'coll': column_index,\n                        'data': data\n                    };\n                    return retAll;\n                } else {\n                    //计算\n                    if (!isRealNum(column_num)) {\n                        return formula.error.v;\n                    }\n                    column_num = parseInt(column_num);\n                    if (row_num <= 0 || column_num <= 0) {\n                        return formula.error.v;\n                    }\n                    return array[row_num - 1][column_num - 1];\n                }\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'GETPIVOTDATA': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                return formula.error.v;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'CHOOSE': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //指定要返回哪一项\n                var index_num = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(index_num)) {\n                    return index_num;\n                }\n                if (!isRealNum(index_num)) {\n                    return formula.error.v;\n                }\n                index_num = parseInt(index_num);\n                if (index_num < 1 || index_num > arguments.length - 1) {\n                    return formula.error.v;\n                }\n                var data_result = arguments[index_num];\n                if (getObjType(data_result) == 'array') {\n                    if (getObjType(data_result[0]) == 'array' && !func_methods.isDyadicArr(data_result)) {\n                        return formula.error.v;\n                    }\n                    return data_result;\n                } else if (getObjType(data_result) == 'object' && data_result.startCell != null) {\n                    if (data_result.data == null) {\n                        return 0;\n                    }\n                    if (getObjType(data_result.data) == 'array') {\n                        var result = func_methods.getCellDataDyadicArr(data_result.data, 'number');\n                        return result;\n                    } else {\n                        if (isRealNull(data_result.data.v)) {\n                            return 0;\n                        }\n                        return data_result.data.v;\n                    }\n                } else {\n                    return data_result;\n                }\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'HYPERLINK': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                return formula.error.v;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'TIME': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //时\n                var hour = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(hour)) {\n                    return hour;\n                }\n                if (!isRealNum(hour)) {\n                    return formula.error.v;\n                }\n                hour = parseInt(hour);    //分\n                //分\n                var minute = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(minute)) {\n                    return minute;\n                }\n                if (!isRealNum(minute)) {\n                    return formula.error.v;\n                }\n                minute = parseInt(minute);    //秒\n                //秒\n                var second = func_methods.getFirstValue(arguments[2]);\n                if (valueIsError(second)) {\n                    return second;\n                }\n                if (!isRealNum(second)) {\n                    return formula.error.v;\n                }\n                second = parseInt(second);\n                if (hour < 0 || hour > 32767) {\n                    return formula.error.nm;\n                } else if (hour > 24) {\n                    hour = hour % 24;\n                }\n                if (minute < 0 || minute > 32767) {\n                    return formula.error.nm;\n                }\n                if (second < 0 || second > 32767) {\n                    return formula.error.nm;\n                }    //计算\n                //计算\n                var time = dayjs().set({\n                    'hour': hour,\n                    'minute': minute,\n                    'second': second\n                });\n                return dayjs(time).format('h:mm:ss a');\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'TIMEVALUE': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //用于表示时间的字符串\n                var time_text = func_methods.getCellDate(arguments[0]);\n                if (valueIsError(time_text)) {\n                    return time_text;\n                }    //计算\n                //计算\n                if (!dayjs(time_text).isValid()) {\n                    return formula.error.v;\n                }\n                return (3600 * dayjs(time_text).get('hour') + 60 * dayjs(time_text).get('minute') + dayjs(time_text).get('second')) / 86400;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'EOMONTH': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //用于计算结果的参照日期\n                var start_date = func_methods.getCellDate(arguments[0]);\n                if (valueIsError(start_date)) {\n                    return start_date;\n                }    //月数\n                //月数\n                var months = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(months)) {\n                    return months;\n                }\n                if (!isRealNum(months)) {\n                    return formula.error.v;\n                }\n                months = parseInt(months);\n                if (!dayjs(start_date).isValid()) {\n                    return formula.error.v;\n                }    //计算\n                //计算\n                var date = dayjs(start_date).add(months + 1, 'months').set('date', 1).subtract(1, 'days');\n                var mask = genarate(dayjs(date).format('YYYY-MM-DD H:mm:ss'));\n                var result = mask[2];\n                return result;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'EDATE': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //用于计算结果的参照日期\n                var start_date = func_methods.getCellDate(arguments[0]);\n                if (valueIsError(start_date)) {\n                    return start_date;\n                }    //月数\n                //月数\n                var months = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(months)) {\n                    return months;\n                }\n                if (!isRealNum(months)) {\n                    return formula.error.v;\n                }\n                months = parseInt(months);\n                if (!dayjs(start_date).isValid()) {\n                    return formula.error.v;\n                }    //计算\n                //计算\n                var date = dayjs(start_date).add(months, 'months');\n                var mask = genarate(dayjs(date).format('YYYY-MM-DD h:mm:ss'));\n                var result = mask[2];\n                return result;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'SECOND': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //时间值\n                var time_text = func_methods.getCellDate(arguments[0]);\n                if (valueIsError(time_text)) {\n                    return time_text;\n                }\n                if (!dayjs(time_text).isValid()) {\n                    return formula.error.v;\n                }\n                var result = dayjs(time_text).seconds();\n                return result;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'MINUTE': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //时间值\n                var time_text = func_methods.getCellDate(arguments[0]);\n                if (valueIsError(time_text)) {\n                    return time_text;\n                }\n                if (!dayjs(time_text).isValid()) {\n                    return formula.error.v;\n                }\n                var result = dayjs(time_text).minutes();\n                return result;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'HOUR': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //时间值\n                var time_text = func_methods.getCellDate(arguments[0]);\n                if (valueIsError(time_text)) {\n                    return time_text;\n                }\n                if (!dayjs(time_text).isValid()) {\n                    return formula.error.v;\n                }\n                var result = dayjs(time_text).hours();\n                return result;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'NOW': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                return dayjs().format('YYYY-M-D HH:mm');\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'NETWORKDAYS': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                if (arguments.length == 3) {\n                    var result = window.luckysheet_function.NETWORKDAYS_INTL.f(arguments[0], arguments[1], 1, arguments[2]);\n                } else {\n                    var result = window.luckysheet_function.NETWORKDAYS_INTL.f(arguments[0], arguments[1], 1);\n                }\n                return result;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'NETWORKDAYS_INTL': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var WEEKEND_TYPES = [\n                    [],\n                    [\n                        6,\n                        0\n                    ],\n                    [\n                        0,\n                        1\n                    ],\n                    [\n                        1,\n                        2\n                    ],\n                    [\n                        2,\n                        3\n                    ],\n                    [\n                        3,\n                        4\n                    ],\n                    [\n                        4,\n                        5\n                    ],\n                    [\n                        5,\n                        6\n                    ],\n                    undefined,\n                    undefined,\n                    undefined,\n                    [\n                        0,\n                        0\n                    ],\n                    [\n                        1,\n                        1\n                    ],\n                    [\n                        2,\n                        2\n                    ],\n                    [\n                        3,\n                        3\n                    ],\n                    [\n                        4,\n                        4\n                    ],\n                    [\n                        5,\n                        5\n                    ],\n                    [\n                        6,\n                        6\n                    ]\n                ];    //用于计算净工作日天数的时间段开始日期\n                //用于计算净工作日天数的时间段开始日期\n                var start_date = func_methods.getCellDate(arguments[0]);\n                if (valueIsError(start_date)) {\n                    return start_date;\n                }\n                if (!dayjs(start_date).isValid()) {\n                    return formula.error.v;\n                }    //用于计算净工作日天数的时间段结束日期\n                //用于计算净工作日天数的时间段结束日期\n                var end_date = func_methods.getCellDate(arguments[1]);\n                if (valueIsError(end_date)) {\n                    return end_date;\n                }\n                if (!dayjs(end_date).isValid()) {\n                    return formula.error.v;\n                }    //用于表示哪些天为周末的数字或字符串\n                //用于表示哪些天为周末的数字或字符串\n                var weekend = WEEKEND_TYPES[1];\n                if (arguments.length >= 3) {\n                    weekend = arguments[2];\n                    if (typeof weekend == 'string' && weekend.length == '7' && /^[0-1]{7}$/g.test(weekend)) {\n                    } else {\n                        weekend = func_methods.getFirstValue(arguments[2]);\n                        if (valueIsError(weekend)) {\n                            return weekend;\n                        }\n                        if (!isRealNum(weekend)) {\n                            return formula.error.v;\n                        }\n                        weekend = parseInt(weekend);\n                        if (weekend < 1 || weekend > 7 && weekend < 11 || weekend > 17) {\n                            return formula.error.nm;\n                        }\n                        weekend = WEEKEND_TYPES[weekend];\n                    }\n                }    //这是一个范围或数组常量，其中包含作为节假日的日期\n                //这是一个范围或数组常量，其中包含作为节假日的日期\n                var holidays = [];\n                if (arguments.length == 4) {\n                    holidays = func_methods.getCellrangeDate(arguments[3]);\n                    if (valueIsError(holidays)) {\n                        return holidays;\n                    }\n                }\n                for (var i = 0; i < holidays.length; i++) {\n                    if (!dayjs(holidays[i]).isValid()) {\n                        return formula.error.v;\n                    }\n                }    //计算\n                //计算\n                var days = dayjs(end_date).diff(dayjs(start_date), 'days') + 1;\n                var total = days;\n                var day = dayjs(start_date);\n                for (i = 0; i < days; i++) {\n                    var d = dayjs(day).weekday();\n                    var dec = false;\n                    if (getObjType(weekend) == 'array') {\n                        if (d === weekend[0] || d === weekend[1]) {\n                            dec = true;\n                        }\n                    } else {\n                        if (d == 0) {\n                            d = 7;\n                        }\n                        if (weekend.charAt(d - 1) == '0') {\n                            dec = true;\n                        }\n                    }\n                    for (var j = 0; j < holidays.length; j++) {\n                        if (dayjs(day).diff(dayjs(holidays[j]), 'days') === 0) {\n                            dec = true;\n                            break;\n                        }\n                    }\n                    if (dec) {\n                        total--;\n                    }\n                    day = dayjs(day).add(1, 'days');\n                }\n                return total;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'ISOWEEKNUM': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //用于日期和时间计算的日期\n                var date = func_methods.getCellDate(arguments[0]);\n                if (valueIsError(date)) {\n                    return date;\n                }\n                if (!dayjs(date).isValid()) {\n                    return formula.error.v;\n                }    //计算\n                //计算\n                return dayjs(date).isoWeeks();\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'WEEKNUM': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var WEEK_STARTS = [\n                    undefined,\n                    7,\n                    1,\n                    undefined,\n                    undefined,\n                    undefined,\n                    undefined,\n                    undefined,\n                    undefined,\n                    undefined,\n                    undefined,\n                    1,\n                    2,\n                    3,\n                    4,\n                    5,\n                    6,\n                    7\n                ];    //用于计算净工作日天数的时间段开始日期\n                //用于计算净工作日天数的时间段开始日期\n                var serial_number = func_methods.getCellDate(arguments[0]);\n                if (valueIsError(serial_number)) {\n                    return serial_number;\n                }\n                if (!dayjs(serial_number).isValid()) {\n                    return formula.error.v;\n                }    //用于表示哪些天为周末的数字或字符串\n                //用于表示哪些天为周末的数字或字符串\n                var return_type = 1;\n                if (arguments.length == 2) {\n                    return_type = func_methods.getFirstValue(arguments[1]);\n                    if (valueIsError(return_type)) {\n                        return return_type;\n                    }\n                    if (!isRealNum(return_type)) {\n                        return formula.error.v;\n                    }\n                    return_type = parseInt(return_type);\n                }\n                if (return_type == 21) {\n                    return window.luckysheet_function.ISOWEEKNUM.f(arguments[0]);\n                }\n                if ([\n                        1,\n                        2,\n                        11,\n                        12,\n                        13,\n                        14,\n                        15,\n                        16,\n                        17\n                    ].indexOf(return_type) == -1) {\n                    return formula.error.nm;\n                }    //计算\n                //计算\n                var week_start = WEEK_STARTS[return_type];\n                var inc = dayjs(serial_number).isoWeekday() >= week_start ? 1 : 0;\n                var result = dayjs(serial_number).isoWeeks() + inc;\n                return result;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'WEEKDAY': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var WEEK_TYPES = [\n                    [],\n                    [\n                        1,\n                        2,\n                        3,\n                        4,\n                        5,\n                        6,\n                        7\n                    ],\n                    [\n                        7,\n                        1,\n                        2,\n                        3,\n                        4,\n                        5,\n                        6\n                    ],\n                    [\n                        6,\n                        0,\n                        1,\n                        2,\n                        3,\n                        4,\n                        5\n                    ],\n                    [],\n                    [],\n                    [],\n                    [],\n                    [],\n                    [],\n                    [],\n                    [\n                        7,\n                        1,\n                        2,\n                        3,\n                        4,\n                        5,\n                        6\n                    ],\n                    [\n                        6,\n                        7,\n                        1,\n                        2,\n                        3,\n                        4,\n                        5\n                    ],\n                    [\n                        5,\n                        6,\n                        7,\n                        1,\n                        2,\n                        3,\n                        4\n                    ],\n                    [\n                        4,\n                        5,\n                        6,\n                        7,\n                        1,\n                        2,\n                        3\n                    ],\n                    [\n                        3,\n                        4,\n                        5,\n                        6,\n                        7,\n                        1,\n                        2\n                    ],\n                    [\n                        2,\n                        3,\n                        4,\n                        5,\n                        6,\n                        7,\n                        1\n                    ],\n                    [\n                        1,\n                        2,\n                        3,\n                        4,\n                        5,\n                        6,\n                        7\n                    ]\n                ];    //用于计算净工作日天数的时间段开始日期\n                //用于计算净工作日天数的时间段开始日期\n                var serial_number = func_methods.getCellDate(arguments[0]);\n                if (valueIsError(serial_number)) {\n                    return serial_number;\n                }\n                if (!dayjs(serial_number).isValid()) {\n                    return formula.error.v;\n                }    //以数字指示使用哪种编号顺序来表示星期几\n                //以数字指示使用哪种编号顺序来表示星期几\n                var return_type = 1;\n                if (arguments.length == 2) {\n                    return_type = func_methods.getFirstValue(arguments[1]);\n                    if (valueIsError(return_type)) {\n                        return return_type;\n                    }\n                    if (!isRealNum(return_type)) {\n                        return formula.error.v;\n                    }\n                    return_type = parseInt(return_type);\n                }\n                if ([\n                        1,\n                        2,\n                        3,\n                        11,\n                        12,\n                        13,\n                        14,\n                        15,\n                        16,\n                        17\n                    ].indexOf(return_type) == -1) {\n                    return formula.error.nm;\n                }    //计算\n                //计算\n                var result = WEEK_TYPES[return_type][dayjs(serial_number).day()];\n                return result;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'DAY': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //用于计算净工作日天数的时间段开始日期\n                var serial_number = func_methods.getCellDate(arguments[0]);\n                if (valueIsError(serial_number)) {\n                    return serial_number;\n                }\n                if (!dayjs(serial_number).isValid()) {\n                    return formula.error.v;\n                }    //计算\n                //计算\n                return dayjs(serial_number).date();\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'DAYS': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //结束日期\n                var end_date = func_methods.getCellDate(arguments[0]);\n                if (valueIsError(end_date)) {\n                    return end_date;\n                }\n                if (!dayjs(end_date).isValid()) {\n                    return formula.error.v;\n                }    //开始日期\n                //开始日期\n                var start_date = func_methods.getCellDate(arguments[1]);\n                if (valueIsError(start_date)) {\n                    return start_date;\n                }\n                if (!dayjs(start_date).isValid()) {\n                    return formula.error.v;\n                }    //计算\n                //计算\n                var result = dayjs(end_date).diff(dayjs(start_date), 'days');\n                return result;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'DAYS360': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //开始日期\n                var start_date = func_methods.getCellDate(arguments[0]);\n                if (valueIsError(start_date)) {\n                    return start_date;\n                }\n                if (!dayjs(start_date).isValid()) {\n                    return formula.error.v;\n                }    //结束日期\n                //结束日期\n                var end_date = func_methods.getCellDate(arguments[1]);\n                if (valueIsError(end_date)) {\n                    return end_date;\n                }\n                if (!dayjs(end_date).isValid()) {\n                    return formula.error.v;\n                }    //天数计算方法\n                //天数计算方法\n                var method = false;\n                if (arguments.length == 3) {\n                    method = func_methods.getCellBoolen(arguments[2]);\n                    if (valueIsError(method)) {\n                        return method;\n                    }\n                }    //计算\n                //计算\n                var sm = dayjs(start_date).month();\n                var em = dayjs(end_date).month();\n                var sd, ed;\n                if (method) {\n                    sd = dayjs(start_date).date() === 31 ? 30 : dayjs(start_date).date();\n                    ed = dayjs(end_date).date() === 31 ? 30 : dayjs(end_date).date();\n                } else {\n                    var smd = dayjs().set({\n                        'year': dayjs(start_date).year(),\n                        'month': sm + 1,\n                        'date': 0\n                    }).date();\n                    var emd = dayjs().set({\n                        'year': dayjs(end_date).year(),\n                        'month': em + 1,\n                        'date': 0\n                    }).date();\n                    sd = dayjs(start_date).date() === smd ? 30 : dayjs(start_date).date();\n                    if (dayjs(end_date).date() === emd) {\n                        if (sd < 30) {\n                            em++;\n                            ed = 1;\n                        } else {\n                            ed = 30;\n                        }\n                    } else {\n                        ed = dayjs(end_date).date();\n                    }\n                }\n                var result = 360 * dayjs(end_date).diff(dayjs(start_date), 'years') + 30 * (em - sm) + (ed - sd);\n                return result;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'DATE': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //年\n                var year = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(year)) {\n                    return year;\n                }\n                if (!isRealNum(year)) {\n                    return formula.error.v;\n                }\n                year = parseInt(year);    //月\n                //月\n                var month = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(month)) {\n                    return month;\n                }\n                if (!isRealNum(month)) {\n                    return formula.error.v;\n                }\n                month = parseInt(month);    //日\n                //日\n                var day = func_methods.getFirstValue(arguments[2]);\n                if (valueIsError(day)) {\n                    return day;\n                }\n                if (!isRealNum(day)) {\n                    return formula.error.v;\n                }\n                day = parseInt(day);\n                if (year < 0 || year >= 10000) {\n                    return formula.error.nm;\n                } else if (year >= 0 && year <= 1899) {\n                    year = year + 1900;\n                }\n                var date = dayjs().set({\n                    'year': year,\n                    'month': month - 1,\n                    'date': day\n                });\n                if (dayjs(date).year() < 1900) {\n                    return formula.error.nm;\n                }\n                return dayjs(date).format('YYYY-MM-DD');\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'DATEVALUE': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //开始日期\n                var date_text = func_methods.getCellDate(arguments[0]);\n                if (valueIsError(date_text)) {\n                    return date_text;\n                }\n                if (!dayjs(date_text).isValid()) {\n                    return formula.error.v;\n                }    //计算\n                //计算\n                date_text = dayjs(date_text).format('YYYY-MM-DD');\n                var result = genarate(date_text)[2];\n                return result;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'DATEDIF': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                luckysheet_getValue(arguments);\n                for (var i = 0; i < arguments.length - 1; i++) {\n                    arguments[i] = moment.fromOADate(arguments[i]).format('l');\n                    if (!isdatetime(arguments[i])) {\n                        return formula.error.v;\n                    }\n                }\n                var startDate = dayjs(arguments[0]);\n                var endDate = dayjs(arguments[1]);\n                var unit = arguments[2];\n                var result = formula.error.v;\n                if (window.luckysheet_function.DAYS.f(endDate, startDate) < 0) {\n                    return formula.error.v;\n                }\n                switch (unit) {\n                case 'Y':\n                case 'y':\n                    result = endDate.diff(startDate, 'years', false);\n                    break;\n                case 'M':\n                case 'm':\n                    result = endDate.diff(startDate, 'months', false);\n                    break;\n                case 'D':\n                case 'd':\n                    result = endDate.diff(startDate, 'days', false);\n                    break;\n                case 'MD':\n                case 'md':\n                    result = endDate.format('DD') - startDate.format('DD');\n                    break;\n                case 'YM':\n                case 'ym':\n                    var startM = parseInt(startDate.format('M'));    //注意字符串转化为数字\n                    //注意字符串转化为数字\n                    var endM = parseInt(endDate.format('M'));\n                    result = startM <= endM ? endM - startM : endM + 12 - startM;\n                    break;\n                case 'YD':\n                case 'yd':\n                    var startM = genarate(startDate.format('MM-DD'))[2];\n                    var endM = genarate(endDate.format('MM-DD'))[2];\n                    result = startM <= endM ? endM - startM : endM + 365 - startM;\n                    break;\n                default:\n                    result = formula.error.v;\n                }\n                return result;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'WORKDAY': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                if (arguments.length == 3) {\n                    var result = window.luckysheet_function.WORKDAY_INTL.f(arguments[0], arguments[1], 1, arguments[2]);\n                } else {\n                    var result = window.luckysheet_function.WORKDAY_INTL.f(arguments[0], arguments[1], 1);\n                }\n                return result;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'WORKDAY_INTL': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var WEEKEND_TYPES = [\n                    [],\n                    [\n                        6,\n                        0\n                    ],\n                    [\n                        0,\n                        1\n                    ],\n                    [\n                        1,\n                        2\n                    ],\n                    [\n                        2,\n                        3\n                    ],\n                    [\n                        3,\n                        4\n                    ],\n                    [\n                        4,\n                        5\n                    ],\n                    [\n                        5,\n                        6\n                    ],\n                    undefined,\n                    undefined,\n                    undefined,\n                    [\n                        0,\n                        0\n                    ],\n                    [\n                        1,\n                        1\n                    ],\n                    [\n                        2,\n                        2\n                    ],\n                    [\n                        3,\n                        3\n                    ],\n                    [\n                        4,\n                        4\n                    ],\n                    [\n                        5,\n                        5\n                    ],\n                    [\n                        6,\n                        6\n                    ]\n                ];    //计算的开始日期\n                //计算的开始日期\n                var start_date = func_methods.getCellDate(arguments[0]);\n                if (valueIsError(start_date)) {\n                    return start_date;\n                }\n                if (!dayjs(start_date).isValid()) {\n                    return formula.error.v;\n                }    //工作日的天数\n                //工作日的天数\n                var days = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(days)) {\n                    return days;\n                }\n                if (!isRealNum(days)) {\n                    return formula.error.v;\n                }\n                days = parseInt(days);    //用于表示哪些天为周末的数字或字符串\n                //用于表示哪些天为周末的数字或字符串\n                var weekend = WEEKEND_TYPES[1];\n                if (arguments.length >= 3) {\n                    weekend = arguments[2];\n                    if (typeof weekend == 'string' && weekend.length == '7' && /^[0-1]{7}$/g.test(weekend)) {\n                    } else {\n                        weekend = func_methods.getFirstValue(arguments[2]);\n                        if (valueIsError(weekend)) {\n                            return weekend;\n                        }\n                        if (!isRealNum(weekend)) {\n                            return formula.error.v;\n                        }\n                        weekend = parseInt(weekend);\n                        if (weekend < 1 || weekend > 7 && weekend < 11 || weekend > 17) {\n                            return formula.error.nm;\n                        }\n                        weekend = WEEKEND_TYPES[weekend];\n                    }\n                }    //这是一个范围或数组常量，其中包含作为节假日的日期\n                //这是一个范围或数组常量，其中包含作为节假日的日期\n                var holidays = [];\n                if (arguments.length == 4) {\n                    holidays = func_methods.getCellrangeDate(arguments[3]);\n                    if (valueIsError(holidays)) {\n                        return holidays;\n                    }\n                }\n                for (var i = 0; i < holidays.length; i++) {\n                    if (!dayjs(holidays[i]).isValid()) {\n                        return formula.error.v;\n                    }\n                }    //计算\n                //计算\n                var d = 0;\n                while (d < days) {\n                    start_date = dayjs(start_date).add(1, 'days');\n                    var day = dayjs(start_date).weekday();\n                    if (getObjType(weekend)) {\n                        if (day === weekend[0] || day === weekend[1]) {\n                            continue;\n                        }\n                    } else {\n                        if (day == 0) {\n                            day = 7;\n                        }\n                        if (weekend.charAt(day - 1) == '0') {\n                            continue;\n                        }\n                    }\n                    for (var j = 0; j < holidays.length; j++) {\n                        if (dayjs(start_date).diff(dayjs(holidays[j]), 'days') === 0) {\n                            d--;\n                            break;\n                        }\n                    }\n                    d++;\n                }\n                return dayjs(start_date).format('YYYY-MM-DD');\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'YEAR': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //开始日期\n                var serial_number = func_methods.getCellDate(arguments[0]);\n                if (valueIsError(serial_number)) {\n                    return serial_number;\n                }\n                if (!dayjs(serial_number).isValid()) {\n                    return formula.error.v;\n                }    //计算\n                //计算\n                return dayjs(serial_number).year();\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'YEARFRAC': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //开始日期\n                var start_date = func_methods.getCellDate(arguments[0]);\n                if (valueIsError(start_date)) {\n                    return start_date;\n                }\n                if (!dayjs(start_date).isValid()) {\n                    return formula.error.v;\n                }    //结束日期\n                //结束日期\n                var end_date = func_methods.getCellDate(arguments[1]);\n                if (valueIsError(end_date)) {\n                    return end_date;\n                }\n                if (!dayjs(end_date).isValid()) {\n                    return formula.error.v;\n                }    //日计数基准类型\n                //日计数基准类型\n                var basis = 0;\n                if (arguments.length == 3) {\n                    basis = func_methods.getFirstValue(arguments[2]);\n                    if (valueIsError(basis)) {\n                        return basis;\n                    }\n                    if (!isRealNum(basis)) {\n                        return formula.error.v;\n                    }\n                    basis = parseInt(basis);\n                }\n                if (basis < 0 || basis > 4) {\n                    return formula.error.nm;\n                }    //计算\n                //计算\n                var sd = dayjs(start_date).date();\n                var sm = dayjs(start_date).month() + 1;\n                var sy = dayjs(start_date).year();\n                var ed = dayjs(end_date).date();\n                var em = dayjs(end_date).month() + 1;\n                var ey = dayjs(end_date).year();\n                var result;\n                switch (basis) {\n                case 0:\n                    // US (NASD) 30/360\n                    if (sd === 31 && ed === 31) {\n                        sd = 30;\n                        ed = 30;\n                    } else if (sd === 31) {\n                        sd = 30;\n                    } else if (sd === 30 && ed === 31) {\n                        ed = 30;\n                    }\n                    result = (ed + em * 30 + ey * 360 - (sd + sm * 30 + sy * 360)) / 360;\n                    break;\n                case 1:\n                    // Actual/actual\n                    var ylength = 365;\n                    if (sy === ey || sy + 1 === ey && (sm > em || sm === em && sd >= ed)) {\n                        if (sy === ey && func_methods.isLeapYear(sy) || func_methods.feb29Between(start_date, end_date) || em === 1 && ed === 29) {\n                            ylength = 366;\n                        }\n                        return dayjs(end_date).diff(dayjs(start_date), 'days') / ylength;\n                    }\n                    var years = ey - sy + 1;\n                    var days = (dayjs().set({\n                        'year': ey + 1,\n                        'month': 0,\n                        'date': 1\n                    }) - dayjs().set({\n                        'year': sy,\n                        'month': 0,\n                        'date': 1\n                    })) / 1000 / 60 / 60 / 24;\n                    var average = days / years;\n                    result = dayjs(end_date).diff(dayjs(start_date), 'days') / average;\n                    break;\n                case 2:\n                    // Actual/360\n                    result = dayjs(end_date).diff(dayjs(start_date), 'days') / 360;\n                    break;\n                case 3:\n                    // Actual/365\n                    result = dayjs(end_date).diff(dayjs(start_date), 'days') / 365;\n                    break;\n                case 4:\n                    // European 30/360\n                    result = (ed + em * 30 + ey * 360 - (sd + sm * 30 + sy * 360)) / 360;\n                    break;\n                }\n                return result;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'TODAY': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                return dayjs().format('YYYY-MM-DD');\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'MONTH': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //开始日期\n                var serial_number = func_methods.getCellDate(arguments[0]);\n                if (valueIsError(serial_number)) {\n                    return serial_number;\n                }\n                if (!dayjs(serial_number).isValid()) {\n                    return formula.error.v;\n                }    //计算\n                //计算\n                return dayjs(serial_number).month() + 1;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'EFFECT': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //每年的名义利率\n                var nominal_rate = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(nominal_rate)) {\n                    return nominal_rate;\n                }\n                if (!isRealNum(nominal_rate)) {\n                    return formula.error.v;\n                }\n                nominal_rate = parseFloat(nominal_rate);    //每年的复利计算期数\n                //每年的复利计算期数\n                var npery = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(npery)) {\n                    return npery;\n                }\n                if (!isRealNum(npery)) {\n                    return formula.error.v;\n                }\n                npery = parseInt(npery);\n                if (nominal_rate <= 0 || npery < 1) {\n                    return formula.error.nm;\n                }\n                return Math.pow(1 + nominal_rate / npery, npery) - 1;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'DOLLAR': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //要设置格式的值\n                var number = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number)) {\n                    return number;\n                }\n                if (!isRealNum(number)) {\n                    return formula.error.v;\n                }\n                number = parseFloat(number);    //显示的小数位数\n                //显示的小数位数\n                var decimals = 2;\n                if (arguments.length == 2) {\n                    decimals = func_methods.getFirstValue(arguments[1]);\n                    if (valueIsError(decimals)) {\n                        return decimals;\n                    }\n                    if (!isRealNum(decimals)) {\n                        return formula.error.v;\n                    }\n                    decimals = parseInt(decimals);\n                }\n                if (decimals > 9) {\n                    decimals = 9;\n                }\n                var foucsStatus = '0.';\n                for (var i = 1; i <= decimals; i++) {\n                    foucsStatus += '0';\n                }    //计算\n                //计算\n                var sign = number > 0 ? 1 : -1;\n                return sign * Math.floor(Math.abs(number) * Math.pow(10, decimals)) / Math.pow(10, decimals);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'DOLLARDE': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //分数\n                var fractional_dollar = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(fractional_dollar)) {\n                    return fractional_dollar;\n                }\n                if (!isRealNum(fractional_dollar)) {\n                    return formula.error.v;\n                }\n                fractional_dollar = parseFloat(fractional_dollar);    //用作分数中的分母的整数\n                //用作分数中的分母的整数\n                var fraction = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(fraction)) {\n                    return fraction;\n                }\n                if (!isRealNum(fraction)) {\n                    return formula.error.v;\n                }\n                fraction = parseInt(fraction);\n                if (fraction < 0) {\n                    return formula.error.nm;\n                } else if (fraction == 0) {\n                    return formula.error.d;\n                }    //计算\n                //计算\n                var result = parseInt(fractional_dollar, 10);\n                result += fractional_dollar % 1 * Math.pow(10, Math.ceil(Math.log(fraction) / Math.LN10)) / fraction;\n                var power = Math.pow(10, Math.ceil(Math.log(fraction) / Math.LN2) + 1);\n                result = Math.round(result * power) / power;\n                return result;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'DOLLARFR': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //小数\n                var decimal_dollar = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(decimal_dollar)) {\n                    return decimal_dollar;\n                }\n                if (!isRealNum(decimal_dollar)) {\n                    return formula.error.v;\n                }\n                decimal_dollar = parseFloat(decimal_dollar);    //用作分数中的分母的整数\n                //用作分数中的分母的整数\n                var fraction = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(fraction)) {\n                    return fraction;\n                }\n                if (!isRealNum(fraction)) {\n                    return formula.error.v;\n                }\n                fraction = parseInt(fraction);\n                if (fraction < 0) {\n                    return formula.error.nm;\n                } else if (fraction == 0) {\n                    return formula.error.d;\n                }    //计算\n                //计算\n                var result = parseInt(decimal_dollar, 10);\n                result += decimal_dollar % 1 * Math.pow(10, -Math.ceil(Math.log(fraction) / Math.LN10)) * fraction;\n                return result;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'DB': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //资产原值\n                var cost = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(cost)) {\n                    return cost;\n                }\n                if (!isRealNum(cost)) {\n                    return formula.error.v;\n                }\n                cost = parseFloat(cost);    //资产残值\n                //资产残值\n                var salvage = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(salvage)) {\n                    return salvage;\n                }\n                if (!isRealNum(salvage)) {\n                    return formula.error.v;\n                }\n                salvage = parseFloat(salvage);    //资产的折旧期数\n                //资产的折旧期数\n                var life = func_methods.getFirstValue(arguments[2]);\n                if (valueIsError(life)) {\n                    return life;\n                }\n                if (!isRealNum(life)) {\n                    return formula.error.v;\n                }\n                life = parseFloat(life);    //在使用期限内要计算折旧的折旧期\n                //在使用期限内要计算折旧的折旧期\n                var period = func_methods.getFirstValue(arguments[3]);\n                if (valueIsError(period)) {\n                    return period;\n                }\n                if (!isRealNum(period)) {\n                    return formula.error.v;\n                }\n                period = parseInt(period);    //折旧第一年中的月数\n                //折旧第一年中的月数\n                var month = 12;\n                if (arguments.length == 5) {\n                    month = func_methods.getFirstValue(arguments[4]);\n                    if (valueIsError(month)) {\n                        return month;\n                    }\n                    if (!isRealNum(month)) {\n                        return formula.error.v;\n                    }\n                    month = parseInt(month);\n                }\n                if (cost < 0 || salvage < 0 || life < 0 || period < 0) {\n                    return formula.error.nm;\n                }\n                if (month < 1 || month > 12) {\n                    return formula.error.nm;\n                }\n                if (period > life) {\n                    return formula.error.nm;\n                }\n                if (salvage >= cost) {\n                    return 0;\n                }    //计算\n                //计算\n                var rate = (1 - Math.pow(salvage / cost, 1 / life)).toFixed(3);\n                var initial = cost * rate * month / 12;\n                var total = initial;\n                var current = 0;\n                var ceiling = period === life ? life - 1 : period;\n                for (var i = 2; i <= ceiling; i++) {\n                    current = (cost - total) * rate;\n                    total += current;\n                }\n                if (period === 1) {\n                    var result = initial;\n                } else if (period === life) {\n                    var result = (cost - total) * rate;\n                } else {\n                    var result = current;\n                }\n                return result;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'DDB': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //资产原值\n                var cost = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(cost)) {\n                    return cost;\n                }\n                if (!isRealNum(cost)) {\n                    return formula.error.v;\n                }\n                cost = parseFloat(cost);    //资产残值\n                //资产残值\n                var salvage = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(salvage)) {\n                    return salvage;\n                }\n                if (!isRealNum(salvage)) {\n                    return formula.error.v;\n                }\n                salvage = parseFloat(salvage);    //资产的折旧期数\n                //资产的折旧期数\n                var life = func_methods.getFirstValue(arguments[2]);\n                if (valueIsError(life)) {\n                    return life;\n                }\n                if (!isRealNum(life)) {\n                    return formula.error.v;\n                }\n                life = parseFloat(life);    //在使用期限内要计算折旧的折旧期\n                //在使用期限内要计算折旧的折旧期\n                var period = func_methods.getFirstValue(arguments[3]);\n                if (valueIsError(period)) {\n                    return period;\n                }\n                if (!isRealNum(period)) {\n                    return formula.error.v;\n                }\n                period = parseInt(period);    //折旧的递减系数\n                //折旧的递减系数\n                var factor = 2;\n                if (arguments.length == 5) {\n                    factor = func_methods.getFirstValue(arguments[4]);\n                    if (valueIsError(factor)) {\n                        return factor;\n                    }\n                    if (!isRealNum(factor)) {\n                        return formula.error.v;\n                    }\n                    factor = parseFloat(factor);\n                }\n                if (cost < 0 || salvage < 0 || life < 0 || period < 0 || factor <= 0) {\n                    return formula.error.nm;\n                }\n                if (period > life) {\n                    return formula.error.nm;\n                }\n                if (salvage >= cost) {\n                    return 0;\n                }    //计算\n                //计算\n                var total = 0;\n                var current = 0;\n                for (var i = 1; i <= period; i++) {\n                    current = Math.min((cost - total) * (factor / life), cost - salvage - total);\n                    total += current;\n                }\n                return current;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'RATE': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //年金的付款总期数。\n                var nper = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(nper)) {\n                    return nper;\n                }\n                if (!isRealNum(nper)) {\n                    return formula.error.v;\n                }\n                nper = parseFloat(nper);    //每期的付款金额\n                //每期的付款金额\n                var pmt = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(pmt)) {\n                    return pmt;\n                }\n                if (!isRealNum(pmt)) {\n                    return formula.error.v;\n                }\n                pmt = parseFloat(pmt);    //现值\n                //现值\n                var pv = func_methods.getFirstValue(arguments[2]);\n                if (valueIsError(pv)) {\n                    return pv;\n                }\n                if (!isRealNum(pv)) {\n                    return formula.error.v;\n                }\n                pv = parseFloat(pv);    //最后一次付款后希望得到的现金余额\n                //最后一次付款后希望得到的现金余额\n                var fv = 0;\n                if (arguments.length >= 4) {\n                    fv = func_methods.getFirstValue(arguments[3]);\n                    if (valueIsError(fv)) {\n                        return fv;\n                    }\n                    if (!isRealNum(fv)) {\n                        return formula.error.v;\n                    }\n                    fv = parseFloat(fv);\n                }    //指定各期的付款时间是在期初还是期末\n                //指定各期的付款时间是在期初还是期末\n                var type = 0;\n                if (arguments.length >= 5) {\n                    type = func_methods.getFirstValue(arguments[4]);\n                    if (valueIsError(type)) {\n                        return type;\n                    }\n                    if (!isRealNum(type)) {\n                        return formula.error.v;\n                    }\n                    type = parseFloat(type);\n                }    //预期利率\n                //预期利率\n                var guess = 0.1;\n                if (arguments.length == 6) {\n                    guess = func_methods.getFirstValue(arguments[5]);\n                    if (valueIsError(guess)) {\n                        return guess;\n                    }\n                    if (!isRealNum(guess)) {\n                        return formula.error.v;\n                    }\n                    guess = parseFloat(guess);\n                }\n                if (type != 0 && type != 1) {\n                    return formula.error.nm;\n                }    //计算\n                //计算\n                var epsMax = 0.000001;\n                var iterMax = 100;\n                var iter = 0;\n                var close = false;\n                var rate = guess;\n                while (iter < iterMax && !close) {\n                    var t1 = Math.pow(rate + 1, nper);\n                    var t2 = Math.pow(rate + 1, nper - 1);\n                    var f1 = fv + t1 * pv + pmt * (t1 - 1) * (rate * type + 1) / rate;\n                    var f2 = nper * t2 * pv - pmt * (t1 - 1) * (rate * type + 1) / Math.pow(rate, 2);\n                    var f3 = nper * pmt * t2 * (rate * type + 1) / rate + pmt * (t1 - 1) * type / rate;\n                    var newRate = rate - f1 / (f2 + f3);\n                    if (Math.abs(newRate - rate) < epsMax)\n                        close = true;\n                    iter++;\n                    rate = newRate;\n                }\n                if (!close)\n                    return formula.error.nm;\n                return rate;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'CUMPRINC': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //利率\n                var rate = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(rate)) {\n                    return rate;\n                }\n                if (!isRealNum(rate)) {\n                    return formula.error.v;\n                }\n                rate = parseFloat(rate);    //总付款期数\n                //总付款期数\n                var nper = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(nper)) {\n                    return nper;\n                }\n                if (!isRealNum(nper)) {\n                    return formula.error.v;\n                }\n                nper = parseFloat(nper);    //年金的现值\n                //年金的现值\n                var pv = func_methods.getFirstValue(arguments[2]);\n                if (valueIsError(pv)) {\n                    return pv;\n                }\n                if (!isRealNum(pv)) {\n                    return formula.error.v;\n                }\n                pv = parseFloat(pv);    //首期\n                //首期\n                var start_period = func_methods.getFirstValue(arguments[3]);\n                if (valueIsError(start_period)) {\n                    return start_period;\n                }\n                if (!isRealNum(start_period)) {\n                    return formula.error.v;\n                }\n                start_period = parseInt(start_period);    //末期\n                //末期\n                var end_period = func_methods.getFirstValue(arguments[4]);\n                if (valueIsError(end_period)) {\n                    return end_period;\n                }\n                if (!isRealNum(end_period)) {\n                    return formula.error.v;\n                }\n                end_period = parseInt(end_period);    //指定各期的付款时间是在期初还是期末\n                //指定各期的付款时间是在期初还是期末\n                var type = func_methods.getFirstValue(arguments[5]);\n                if (valueIsError(type)) {\n                    return type;\n                }\n                if (!isRealNum(type)) {\n                    return formula.error.v;\n                }\n                type = parseFloat(type);\n                if (rate <= 0 || nper <= 0 || pv <= 0) {\n                    return formula.error.nm;\n                }\n                if (start_period < 1 || end_period < 1 || start_period > end_period) {\n                    return formula.error.nm;\n                }\n                if (type != 0 && type != 1) {\n                    return formula.error.nm;\n                }    //计算\n                //计算\n                var payment = window.luckysheet_function.PMT.f(rate, nper, pv, 0, type);\n                var principal = 0;\n                if (start_period === 1) {\n                    if (type === 0) {\n                        principal = payment + pv * rate;\n                    } else {\n                        principal = payment;\n                    }\n                    start_period++;\n                }\n                for (var i = start_period; i <= end_period; i++) {\n                    if (type > 0) {\n                        principal += payment - (window.luckysheet_function.FV.f(rate, i - 2, payment, pv, 1) - payment) * rate;\n                    } else {\n                        principal += payment - window.luckysheet_function.FV.f(rate, i - 1, payment, pv, 0) * rate;\n                    }\n                }\n                return principal;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'COUPNUM': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //结算日\n                var settlement = func_methods.getCellDate(arguments[0]);\n                if (valueIsError(settlement)) {\n                    return settlement;\n                }\n                if (!dayjs(settlement).isValid()) {\n                    return formula.error.v;\n                }    //到期日\n                //到期日\n                var maturity = func_methods.getCellDate(arguments[1]);\n                if (valueIsError(maturity)) {\n                    return maturity;\n                }\n                if (!dayjs(maturity).isValid()) {\n                    return formula.error.v;\n                }    //年付息次数\n                //年付息次数\n                var frequency = func_methods.getFirstValue(arguments[2]);\n                if (valueIsError(frequency)) {\n                    return frequency;\n                }\n                if (!isRealNum(frequency)) {\n                    return formula.error.v;\n                }\n                frequency = parseInt(frequency);    //日计数基准类型\n                //日计数基准类型\n                var basis = 0;\n                if (arguments.length == 4) {\n                    var basis = func_methods.getFirstValue(arguments[3]);\n                    if (valueIsError(basis)) {\n                        return basis;\n                    }\n                    if (!isRealNum(basis)) {\n                        return formula.error.v;\n                    }\n                    basis = parseInt(basis);\n                }\n                if (frequency != 1 && frequency != 2 && frequency != 4) {\n                    return formula.error.nm;\n                }\n                if (basis < 0 || basis > 4) {\n                    return formula.error.nm;\n                }\n                if (dayjs(settlement) - dayjs(maturity) >= 0) {\n                    return formula.error.nm;\n                }    //计算\n                //计算\n                var sd = dayjs(settlement).date();\n                var sm = dayjs(settlement).month() + 1;\n                var sy = dayjs(settlement).year();\n                var ed = dayjs(maturity).date();\n                var em = dayjs(maturity).month() + 1;\n                var ey = dayjs(maturity).year();\n                var result;\n                switch (basis) {\n                case 0:\n                    // US (NASD) 30/360\n                    if (sd === 31 && ed === 31) {\n                        sd = 30;\n                        ed = 30;\n                    } else if (sd === 31) {\n                        sd = 30;\n                    } else if (sd === 30 && ed === 31) {\n                        ed = 30;\n                    }\n                    result = (ed + em * 30 + ey * 360 - (sd + sm * 30 + sy * 360)) / (360 / frequency);\n                    break;\n                case 1:\n                    // Actual/actual\n                    var ylength = 365;\n                    if (sy === ey || sy + 1 === ey && (sm > em || sm === em && sd >= ed)) {\n                        if (sy === ey && func_methods.isLeapYear(sy) || func_methods.feb29Between(settlement, maturity) || em === 1 && ed === 29) {\n                            ylength = 366;\n                        }\n                        return dayjs(maturity).diff(dayjs(settlement), 'days') / (ylength / frequency);\n                    }\n                    var years = ey - sy + 1;\n                    var days = (dayjs().set({\n                        'year': ey + 1,\n                        'month': 0,\n                        'date': 1\n                    }) - dayjs().set({\n                        'year': sy,\n                        'month': 0,\n                        'date': 1\n                    })) / 1000 / 60 / 60 / 24;\n                    var average = days / years;\n                    result = dayjs(maturity).diff(dayjs(settlement), 'days') / (average / frequency);\n                    break;\n                case 2:\n                    // Actual/360\n                    result = dayjs(maturity).diff(dayjs(settlement), 'days') / (360 / frequency);\n                    break;\n                case 3:\n                    // Actual/365\n                    result = dayjs(maturity).diff(dayjs(settlement), 'days') / (365 / frequency);\n                    break;\n                case 4:\n                    // European 30/360\n                    result = (ed + em * 30 + ey * 360 - (sd + sm * 30 + sy * 360)) / (360 / frequency);\n                    break;\n                }\n                return Math.round(result);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'SYD': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //资产原值\n                var cost = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(cost)) {\n                    return cost;\n                }\n                if (!isRealNum(cost)) {\n                    return formula.error.v;\n                }\n                cost = parseFloat(cost);    //资产残值\n                //资产残值\n                var salvage = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(salvage)) {\n                    return salvage;\n                }\n                if (!isRealNum(salvage)) {\n                    return formula.error.v;\n                }\n                salvage = parseFloat(salvage);    //资产的折旧期数\n                //资产的折旧期数\n                var life = func_methods.getFirstValue(arguments[2]);\n                if (valueIsError(life)) {\n                    return life;\n                }\n                if (!isRealNum(life)) {\n                    return formula.error.v;\n                }\n                life = parseFloat(life);    //在使用期限内要计算折旧的折旧期\n                //在使用期限内要计算折旧的折旧期\n                var period = func_methods.getFirstValue(arguments[3]);\n                if (valueIsError(period)) {\n                    return period;\n                }\n                if (!isRealNum(period)) {\n                    return formula.error.v;\n                }\n                period = parseInt(period);\n                if (life == 0) {\n                    return formula.error.nm;\n                }\n                if (period < 1 || period > life) {\n                    return formula.error.nm;\n                }\n                return (cost - salvage) * (life - period + 1) * 2 / (life * (life + 1));\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'TBILLEQ': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //结算日\n                var settlement = func_methods.getCellDate(arguments[0]);\n                if (valueIsError(settlement)) {\n                    return settlement;\n                }\n                if (!dayjs(settlement).isValid()) {\n                    return formula.error.v;\n                }    //到期日\n                //到期日\n                var maturity = func_methods.getCellDate(arguments[1]);\n                if (valueIsError(maturity)) {\n                    return maturity;\n                }\n                if (!dayjs(maturity).isValid()) {\n                    return formula.error.v;\n                }    //债券购买时的贴现率\n                //债券购买时的贴现率\n                var discount = func_methods.getFirstValue(arguments[2]);\n                if (valueIsError(discount)) {\n                    return discount;\n                }\n                if (!isRealNum(discount)) {\n                    return formula.error.v;\n                }\n                discount = parseFloat(discount);\n                if (discount <= 0) {\n                    return formula.error.nm;\n                }\n                if (dayjs(settlement) - dayjs(maturity) > 0) {\n                    return formula.error.nm;\n                }\n                if (dayjs(maturity) - dayjs(settlement) > 365 * 24 * 60 * 60 * 1000) {\n                    return formula.error.nm;\n                }\n                return 365 * discount / (360 - discount * dayjs(maturity).diff(dayjs(settlement), 'days'));\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'TBILLYIELD': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //结算日\n                var settlement = func_methods.getCellDate(arguments[0]);\n                if (valueIsError(settlement)) {\n                    return settlement;\n                }\n                if (!dayjs(settlement).isValid()) {\n                    return formula.error.v;\n                }    //到期日\n                //到期日\n                var maturity = func_methods.getCellDate(arguments[1]);\n                if (valueIsError(maturity)) {\n                    return maturity;\n                }\n                if (!dayjs(maturity).isValid()) {\n                    return formula.error.v;\n                }    //有价证券的价格\n                //有价证券的价格\n                var pr = func_methods.getFirstValue(arguments[2]);\n                if (valueIsError(pr)) {\n                    return pr;\n                }\n                if (!isRealNum(pr)) {\n                    return formula.error.v;\n                }\n                pr = parseFloat(pr);\n                if (pr <= 0) {\n                    return formula.error.nm;\n                }\n                if (dayjs(settlement) - dayjs(maturity) >= 0) {\n                    return formula.error.nm;\n                }\n                if (dayjs(maturity) - dayjs(settlement) > 365 * 24 * 60 * 60 * 1000) {\n                    return formula.error.nm;\n                }\n                return (100 - pr) / pr * (360 / dayjs(maturity).diff(dayjs(settlement), 'days'));\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'TBILLPRICE': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //结算日\n                var settlement = func_methods.getCellDate(arguments[0]);\n                if (valueIsError(settlement)) {\n                    return settlement;\n                }\n                if (!dayjs(settlement).isValid()) {\n                    return formula.error.v;\n                }    //到期日\n                //到期日\n                var maturity = func_methods.getCellDate(arguments[1]);\n                if (valueIsError(maturity)) {\n                    return maturity;\n                }\n                if (!dayjs(maturity).isValid()) {\n                    return formula.error.v;\n                }    //有价证券的价格\n                //有价证券的价格\n                var discount = func_methods.getFirstValue(arguments[2]);\n                if (valueIsError(discount)) {\n                    return discount;\n                }\n                if (!isRealNum(discount)) {\n                    return formula.error.v;\n                }\n                discount = parseFloat(discount);\n                if (discount <= 0) {\n                    return formula.error.nm;\n                }\n                if (dayjs(settlement) - dayjs(maturity) > 0) {\n                    return formula.error.nm;\n                }\n                if (dayjs(maturity) - dayjs(settlement) > 365 * 24 * 60 * 60 * 1000) {\n                    return formula.error.nm;\n                }\n                return 100 * (1 - discount * dayjs(maturity).diff(dayjs(settlement), 'days') / 360);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'PV': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //利率\n                var rate = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(rate)) {\n                    return rate;\n                }\n                if (!isRealNum(rate)) {\n                    return formula.error.v;\n                }\n                rate = parseFloat(rate);    //总付款期数\n                //总付款期数\n                var nper = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(nper)) {\n                    return nper;\n                }\n                if (!isRealNum(nper)) {\n                    return formula.error.v;\n                }\n                nper = parseFloat(nper);    //每期的付款金额\n                //每期的付款金额\n                var pmt = func_methods.getFirstValue(arguments[2]);\n                if (valueIsError(pmt)) {\n                    return pmt;\n                }\n                if (!isRealNum(pmt)) {\n                    return formula.error.v;\n                }\n                pmt = parseFloat(pmt);    //最后一次付款后希望得到的现金余额\n                //最后一次付款后希望得到的现金余额\n                var fv = 0;\n                if (arguments.length >= 4) {\n                    fv = func_methods.getFirstValue(arguments[3]);\n                    if (valueIsError(fv)) {\n                        return fv;\n                    }\n                    if (!isRealNum(fv)) {\n                        return formula.error.v;\n                    }\n                    fv = parseFloat(fv);\n                }    //指定各期的付款时间是在期初还是期末\n                //指定各期的付款时间是在期初还是期末\n                var type = 0;\n                if (arguments.length >= 5) {\n                    type = func_methods.getFirstValue(arguments[4]);\n                    if (valueIsError(type)) {\n                        return type;\n                    }\n                    if (!isRealNum(type)) {\n                        return formula.error.v;\n                    }\n                    type = parseFloat(type);\n                }\n                if (type != 0 && type != 1) {\n                    return formula.error.nm;\n                }    //计算\n                //计算\n                if (rate === 0) {\n                    var result = -pmt * nper - fv;\n                } else {\n                    var result = ((1 - Math.pow(1 + rate, nper)) / rate * pmt * (1 + rate * type) - fv) / Math.pow(1 + rate, nper);\n                }\n                return result;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'ACCRINT': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //有价证券的发行日\n                var issue = func_methods.getCellDate(arguments[0]);\n                if (valueIsError(issue)) {\n                    return issue;\n                }\n                if (!dayjs(issue).isValid()) {\n                    return formula.error.v;\n                }    //有价证券的首次计息日\n                //有价证券的首次计息日\n                var first_interest = func_methods.getCellDate(arguments[1]);\n                if (valueIsError(first_interest)) {\n                    return first_interest;\n                }\n                if (!dayjs(first_interest).isValid()) {\n                    return formula.error.v;\n                }    //有价证券的结算日\n                //有价证券的结算日\n                var settlement = func_methods.getCellDate(arguments[2]);\n                if (valueIsError(settlement)) {\n                    return settlement;\n                }\n                if (!dayjs(settlement).isValid()) {\n                    return formula.error.v;\n                }    //有价证券的年息票利率\n                //有价证券的年息票利率\n                var rate = func_methods.getFirstValue(arguments[3]);\n                if (valueIsError(rate)) {\n                    return rate;\n                }\n                if (!isRealNum(rate)) {\n                    return formula.error.v;\n                }\n                rate = parseFloat(rate);    //证券的票面值\n                //证券的票面值\n                var par = func_methods.getFirstValue(arguments[4]);\n                if (valueIsError(par)) {\n                    return par;\n                }\n                if (!isRealNum(par)) {\n                    return formula.error.v;\n                }\n                par = parseFloat(par);    //年付息次数\n                //年付息次数\n                var frequency = func_methods.getFirstValue(arguments[5]);\n                if (valueIsError(frequency)) {\n                    return frequency;\n                }\n                if (!isRealNum(frequency)) {\n                    return formula.error.v;\n                }\n                frequency = parseInt(frequency);    //日计数基准类型\n                //日计数基准类型\n                var basis = 0;\n                if (arguments.length >= 7) {\n                    basis = func_methods.getFirstValue(arguments[6]);\n                    if (valueIsError(basis)) {\n                        return basis;\n                    }\n                    if (!isRealNum(basis)) {\n                        return formula.error.v;\n                    }\n                    basis = parseInt(basis);\n                }    //当结算日期晚于首次计息日期时用于计算总应计利息的方法\n                //当结算日期晚于首次计息日期时用于计算总应计利息的方法\n                var calc_method = true;\n                if (arguments.length == 8) {\n                    calc_method = func_methods.getCellBoolen(arguments[7]);\n                    if (valueIsError(calc_method)) {\n                        return calc_method;\n                    }\n                }\n                if (rate <= 0 || par <= 0) {\n                    return formula.error.nm;\n                }\n                if (frequency != 1 && frequency != 2 && frequency != 4) {\n                    return formula.error.nm;\n                }\n                if (basis < 0 || basis > 4) {\n                    return formula.error.nm;\n                }\n                if (dayjs(issue) - dayjs(settlement) >= 0) {\n                    return formula.error.nm;\n                }    //计算\n                //计算\n                var result;\n                if (dayjs(settlement) - dayjs(first_interest) >= 0 && !calc_method) {\n                    var sd = dayjs(first_interest).date();\n                    var sm = dayjs(first_interest).month() + 1;\n                    var sy = dayjs(first_interest).year();\n                    var ed = dayjs(settlement).date();\n                    var em = dayjs(settlement).month() + 1;\n                    var ey = dayjs(settlement).year();\n                    switch (basis) {\n                    case 0:\n                        // US (NASD) 30/360\n                        if (sd === 31 && ed === 31) {\n                            sd = 30;\n                            ed = 30;\n                        } else if (sd === 31) {\n                            sd = 30;\n                        } else if (sd === 30 && ed === 31) {\n                            ed = 30;\n                        }\n                        result = (ed + em * 30 + ey * 360 - (sd + sm * 30 + sy * 360)) / 360;\n                        break;\n                    case 1:\n                        // Actual/actual\n                        var ylength = 365;\n                        if (sy === ey || sy + 1 === ey && (sm > em || sm === em && sd >= ed)) {\n                            if (sy === ey && func_methods.isLeapYear(sy) || func_methods.feb29Between(first_interest, settlement) || em === 1 && ed === 29) {\n                                ylength = 366;\n                            }\n                            return dayjs(settlement).diff(dayjs(first_interest), 'days') / ylength;\n                        }\n                        var years = ey - sy + 1;\n                        var days = (dayjs().set({\n                            'year': ey + 1,\n                            'month': 0,\n                            'date': 1\n                        }) - dayjs().set({\n                            'year': sy,\n                            'month': 0,\n                            'date': 1\n                        })) / 1000 / 60 / 60 / 24;\n                        var average = days / years;\n                        result = dayjs(settlement).diff(dayjs(first_interest), 'days') / average;\n                        break;\n                    case 2:\n                        // Actual/360\n                        result = dayjs(settlement).diff(dayjs(first_interest), 'days') / 360;\n                        break;\n                    case 3:\n                        // Actual/365\n                        result = dayjs(settlement).diff(dayjs(first_interest), 'days') / 365;\n                        break;\n                    case 4:\n                        // European 30/360\n                        result = (ed + em * 30 + ey * 360 - (sd + sm * 30 + sy * 360)) / 360;\n                        break;\n                    }\n                } else {\n                    var sd = dayjs(issue).date();\n                    var sm = dayjs(issue).month() + 1;\n                    var sy = dayjs(issue).year();\n                    var ed = dayjs(settlement).date();\n                    var em = dayjs(settlement).month() + 1;\n                    var ey = dayjs(settlement).year();\n                    switch (basis) {\n                    case 0:\n                        // US (NASD) 30/360\n                        if (sd === 31 && ed === 31) {\n                            sd = 30;\n                            ed = 30;\n                        } else if (sd === 31) {\n                            sd = 30;\n                        } else if (sd === 30 && ed === 31) {\n                            ed = 30;\n                        }\n                        result = (ed + em * 30 + ey * 360 - (sd + sm * 30 + sy * 360)) / 360;\n                        break;\n                    case 1:\n                        // Actual/actual\n                        var ylength = 365;\n                        if (sy === ey || sy + 1 === ey && (sm > em || sm === em && sd >= ed)) {\n                            if (sy === ey && func_methods.isLeapYear(sy) || func_methods.feb29Between(issue, settlement) || em === 1 && ed === 29) {\n                                ylength = 366;\n                            }\n                            return dayjs(settlement).diff(dayjs(issue), 'days') / ylength;\n                        }\n                        var years = ey - sy + 1;\n                        var days = (dayjs().set({\n                            'year': ey + 1,\n                            'month': 0,\n                            'date': 1\n                        }) - dayjs().set({\n                            'year': sy,\n                            'month': 0,\n                            'date': 1\n                        })) / 1000 / 60 / 60 / 24;\n                        var average = days / years;\n                        result = dayjs(settlement).diff(dayjs(issue), 'days') / average;\n                        break;\n                    case 2:\n                        // Actual/360\n                        result = dayjs(settlement).diff(dayjs(issue), 'days') / 360;\n                        break;\n                    case 3:\n                        // Actual/365\n                        result = dayjs(settlement).diff(dayjs(issue), 'days') / 365;\n                        break;\n                    case 4:\n                        // European 30/360\n                        result = (ed + em * 30 + ey * 360 - (sd + sm * 30 + sy * 360)) / 360;\n                        break;\n                    }\n                }\n                return par * rate * result;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'ACCRINTM': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //有价证券的发行日\n                var issue = func_methods.getCellDate(arguments[0]);\n                if (valueIsError(issue)) {\n                    return issue;\n                }\n                if (!dayjs(issue).isValid()) {\n                    return formula.error.v;\n                }    //有价证券的到期日\n                //有价证券的到期日\n                var settlement = func_methods.getCellDate(arguments[1]);\n                if (valueIsError(settlement)) {\n                    return settlement;\n                }\n                if (!dayjs(settlement).isValid()) {\n                    return formula.error.v;\n                }    //有价证券的年息票利率\n                //有价证券的年息票利率\n                var rate = func_methods.getFirstValue(arguments[2]);\n                if (valueIsError(rate)) {\n                    return rate;\n                }\n                if (!isRealNum(rate)) {\n                    return formula.error.v;\n                }\n                rate = parseFloat(rate);    //证券的票面值\n                //证券的票面值\n                var par = func_methods.getFirstValue(arguments[3]);\n                if (valueIsError(par)) {\n                    return par;\n                }\n                if (!isRealNum(par)) {\n                    return formula.error.v;\n                }\n                par = parseFloat(par);    //日计数基准类型\n                //日计数基准类型\n                var basis = 0;\n                if (arguments.length == 5) {\n                    basis = func_methods.getFirstValue(arguments[4]);\n                    if (valueIsError(basis)) {\n                        return basis;\n                    }\n                    if (!isRealNum(basis)) {\n                        return formula.error.v;\n                    }\n                    basis = parseInt(basis);\n                }\n                if (rate <= 0 || par <= 0) {\n                    return formula.error.nm;\n                }\n                if (basis < 0 || basis > 4) {\n                    return formula.error.nm;\n                }\n                if (dayjs(issue) - dayjs(settlement) >= 0) {\n                    return formula.error.nm;\n                }    //计算\n                //计算\n                var sd = dayjs(issue).date();\n                var sm = dayjs(issue).month() + 1;\n                var sy = dayjs(issue).year();\n                var ed = dayjs(settlement).date();\n                var em = dayjs(settlement).month() + 1;\n                var ey = dayjs(settlement).year();\n                var result;\n                switch (basis) {\n                case 0:\n                    // US (NASD) 30/360\n                    if (sd === 31 && ed === 31) {\n                        sd = 30;\n                        ed = 30;\n                    } else if (sd === 31) {\n                        sd = 30;\n                    } else if (sd === 30 && ed === 31) {\n                        ed = 30;\n                    }\n                    result = (ed + em * 30 + ey * 360 - (sd + sm * 30 + sy * 360)) / 360;\n                    break;\n                case 1:\n                    // Actual/actual\n                    var ylength = 365;\n                    if (sy === ey || sy + 1 === ey && (sm > em || sm === em && sd >= ed)) {\n                        if (sy === ey && func_methods.isLeapYear(sy) || func_methods.feb29Between(issue, settlement) || em === 1 && ed === 29) {\n                            ylength = 366;\n                        }\n                        return dayjs(settlement).diff(dayjs(issue), 'days') / ylength;\n                    }\n                    var years = ey - sy + 1;\n                    var days = (dayjs().set({\n                        'year': ey + 1,\n                        'month': 0,\n                        'date': 1\n                    }) - dayjs().set({\n                        'year': sy,\n                        'month': 0,\n                        'date': 1\n                    })) / 1000 / 60 / 60 / 24;\n                    var average = days / years;\n                    result = dayjs(settlement).diff(dayjs(issue), 'days') / average;\n                    break;\n                case 2:\n                    // Actual/360\n                    result = dayjs(settlement).diff(dayjs(issue), 'days') / 360;\n                    break;\n                case 3:\n                    // Actual/365\n                    result = dayjs(settlement).diff(dayjs(issue), 'days') / 365;\n                    break;\n                case 4:\n                    // European 30/360\n                    result = (ed + em * 30 + ey * 360 - (sd + sm * 30 + sy * 360)) / 360;\n                    break;\n                }\n                return par * rate * result;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'COUPDAYBS': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //结算日\n                var settlement = func_methods.getCellDate(arguments[0]);\n                if (valueIsError(settlement)) {\n                    return settlement;\n                }\n                if (!dayjs(settlement).isValid()) {\n                    return formula.error.v;\n                }    //到期日\n                //到期日\n                var maturity = func_methods.getCellDate(arguments[1]);\n                if (valueIsError(maturity)) {\n                    return maturity;\n                }\n                if (!dayjs(maturity).isValid()) {\n                    return formula.error.v;\n                }    //年付息次数\n                //年付息次数\n                var frequency = func_methods.getFirstValue(arguments[2]);\n                if (valueIsError(frequency)) {\n                    return frequency;\n                }\n                if (!isRealNum(frequency)) {\n                    return formula.error.v;\n                }\n                frequency = parseInt(frequency);    //日计数基准类型\n                //日计数基准类型\n                var basis = 0;\n                if (arguments.length == 4) {\n                    basis = func_methods.getFirstValue(arguments[3]);\n                    if (valueIsError(basis)) {\n                        return basis;\n                    }\n                    if (!isRealNum(basis)) {\n                        return formula.error.v;\n                    }\n                    basis = parseInt(basis);\n                }\n                if (frequency != 1 && frequency != 2 && frequency != 4) {\n                    return formula.error.nm;\n                }\n                if (basis < 0 || basis > 4) {\n                    return formula.error.nm;\n                }\n                if (dayjs(settlement) - dayjs(maturity) >= 0) {\n                    return formula.error.nm;\n                }    //计算\n                //计算\n                var interest;    //结算日之前的上一个付息日\n                //结算日之前的上一个付息日\n                var maxCount = Math.ceil(dayjs(maturity).diff(dayjs(settlement), 'months') / (12 / frequency)) + 1;\n                for (var i = 1; i <= maxCount; i++) {\n                    var di = dayjs(maturity).subtract(12 / frequency * i, 'months');\n                    if (di <= dayjs(settlement)) {\n                        interest = di;\n                        break;\n                    }\n                }\n                var result;\n                switch (basis) {\n                case 0:\n                    // US (NASD) 30/360\n                    var sd = dayjs(interest).date();\n                    var sm = dayjs(interest).month() + 1;\n                    var sy = dayjs(interest).year();\n                    var ed = dayjs(settlement).date();\n                    var em = dayjs(settlement).month() + 1;\n                    var ey = dayjs(settlement).year();\n                    if (sd === 31 && ed === 31) {\n                        sd = 30;\n                        ed = 30;\n                    } else if (sd === 31) {\n                        sd = 30;\n                    } else if (sd === 30 && ed === 31) {\n                        ed = 30;\n                    }\n                    result = ed + em * 30 + ey * 360 - (sd + sm * 30 + sy * 360);\n                    break;\n                case 1:    // Actual/actual\n                // Actual/actual\n                case 2:    // Actual/360\n                // Actual/360\n                case 3:\n                    // Actual/365\n                    result = dayjs(settlement).diff(dayjs(interest), 'days');\n                    break;\n                case 4:\n                    // European 30/360\n                    var sd = dayjs(interest).date();\n                    var sm = dayjs(interest).month() + 1;\n                    var sy = dayjs(interest).year();\n                    var ed = dayjs(settlement).date();\n                    var em = dayjs(settlement).month() + 1;\n                    var ey = dayjs(settlement).year();\n                    result = ed + em * 30 + ey * 360 - (sd + sm * 30 + sy * 360);\n                    break;\n                }\n                return result;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'COUPDAYS': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //结算日\n                var settlement = func_methods.getCellDate(arguments[0]);\n                if (valueIsError(settlement)) {\n                    return settlement;\n                }\n                if (!dayjs(settlement).isValid()) {\n                    return formula.error.v;\n                }    //到期日\n                //到期日\n                var maturity = func_methods.getCellDate(arguments[1]);\n                if (valueIsError(maturity)) {\n                    return maturity;\n                }\n                if (!dayjs(maturity).isValid()) {\n                    return formula.error.v;\n                }    //年付息次数\n                //年付息次数\n                var frequency = func_methods.getFirstValue(arguments[2]);\n                if (valueIsError(frequency)) {\n                    return frequency;\n                }\n                if (!isRealNum(frequency)) {\n                    return formula.error.v;\n                }\n                frequency = parseInt(frequency);    //日计数基准类型\n                //日计数基准类型\n                var basis = 0;\n                if (arguments.length == 4) {\n                    basis = func_methods.getFirstValue(arguments[3]);\n                    if (valueIsError(basis)) {\n                        return basis;\n                    }\n                    if (!isRealNum(basis)) {\n                        return formula.error.v;\n                    }\n                    basis = parseInt(basis);\n                }\n                if (frequency != 1 && frequency != 2 && frequency != 4) {\n                    return formula.error.nm;\n                }\n                if (basis < 0 || basis > 4) {\n                    return formula.error.nm;\n                }\n                if (dayjs(settlement) - dayjs(maturity) >= 0) {\n                    return formula.error.nm;\n                }    //计算\n                //计算\n                var result;\n                switch (basis) {\n                case 0:\n                    // US (NASD) 30/360\n                    result = 360 / frequency;\n                    break;\n                case 1:\n                    // Actual/actual\n                    var maxCount = Math.ceil(dayjs(maturity).diff(dayjs(settlement), 'months') / (12 / frequency)) + 1;\n                    for (var i = 1; i <= maxCount; i++) {\n                        var d1 = dayjs(maturity).subtract(12 / frequency * i, 'months');\n                        if (d1 <= dayjs(settlement)) {\n                            var d2 = dayjs(maturity).subtract(12 / frequency * (i - 1), 'months');\n                            result = dayjs(d2).diff(dayjs(d1), 'days');\n                            break;\n                        }\n                    }\n                    break;\n                case 2:\n                    // Actual/360\n                    result = 360 / frequency;\n                    break;\n                case 3:\n                    // Actual/365\n                    result = 365 / frequency;\n                    break;\n                case 4:\n                    // European 30/360\n                    result = 360 / frequency;\n                    break;\n                }\n                return result;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'COUPDAYSNC': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //结算日\n                var settlement = func_methods.getCellDate(arguments[0]);\n                if (valueIsError(settlement)) {\n                    return settlement;\n                }\n                if (!dayjs(settlement).isValid()) {\n                    return formula.error.v;\n                }    //到期日\n                //到期日\n                var maturity = func_methods.getCellDate(arguments[1]);\n                if (valueIsError(maturity)) {\n                    return maturity;\n                }\n                if (!dayjs(maturity).isValid()) {\n                    return formula.error.v;\n                }    //年付息次数\n                //年付息次数\n                var frequency = func_methods.getFirstValue(arguments[2]);\n                if (valueIsError(frequency)) {\n                    return frequency;\n                }\n                if (!isRealNum(frequency)) {\n                    return formula.error.v;\n                }\n                frequency = parseInt(frequency);    //日计数基准类型\n                //日计数基准类型\n                var basis = 0;\n                if (arguments.length == 4) {\n                    basis = func_methods.getFirstValue(arguments[3]);\n                    if (valueIsError(basis)) {\n                        return basis;\n                    }\n                    if (!isRealNum(basis)) {\n                        return formula.error.v;\n                    }\n                    basis = parseInt(basis);\n                }\n                if (frequency != 1 && frequency != 2 && frequency != 4) {\n                    return formula.error.nm;\n                }\n                if (basis < 0 || basis > 4) {\n                    return formula.error.nm;\n                }\n                if (dayjs(settlement) - dayjs(maturity) >= 0) {\n                    return formula.error.nm;\n                }    //计算\n                //计算\n                var interest;    //结算日之后的下一个付息日\n                //结算日之后的下一个付息日\n                var maxCount = Math.ceil(dayjs(maturity).diff(dayjs(settlement), 'months') / (12 / frequency)) + 1;\n                for (var i = 1; i <= maxCount; i++) {\n                    var di = dayjs(maturity).subtract(12 / frequency * i, 'months');\n                    if (di <= dayjs(settlement)) {\n                        interest = dayjs(maturity).subtract(12 / frequency * (i - 1), 'months');\n                        break;\n                    }\n                }\n                var result;\n                switch (basis) {\n                case 0:\n                    // US (NASD) 30/360\n                    var sd = dayjs(settlement).date();\n                    var sm = dayjs(settlement).month() + 1;\n                    var sy = dayjs(settlement).year();\n                    var ed = dayjs(interest).date();\n                    var em = dayjs(interest).month() + 1;\n                    var ey = dayjs(interest).year();\n                    if (sd === 31 && ed === 31) {\n                        sd = 30;\n                        ed = 30;\n                    } else if (sd === 31) {\n                        sd = 30;\n                    } else if (sd === 30 && ed === 31) {\n                        ed = 30;\n                    }\n                    result = ed + em * 30 + ey * 360 - (sd + sm * 30 + sy * 360);\n                    break;\n                case 1:    // Actual/actual\n                // Actual/actual\n                case 2:    // Actual/360\n                // Actual/360\n                case 3:\n                    // Actual/365\n                    result = dayjs(interest).diff(dayjs(settlement), 'days');\n                    break;\n                case 4:\n                    // European 30/360\n                    var sd = dayjs(settlement).date();\n                    var sm = dayjs(settlement).month() + 1;\n                    var sy = dayjs(settlement).year();\n                    var ed = dayjs(interest).date();\n                    var em = dayjs(interest).month() + 1;\n                    var ey = dayjs(interest).year();\n                    result = ed + em * 30 + ey * 360 - (sd + sm * 30 + sy * 360);\n                    break;\n                }\n                return result;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'COUPNCD': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //结算日\n                var settlement = func_methods.getCellDate(arguments[0]);\n                if (valueIsError(settlement)) {\n                    return settlement;\n                }\n                if (!dayjs(settlement).isValid()) {\n                    return formula.error.v;\n                }    //到期日\n                //到期日\n                var maturity = func_methods.getCellDate(arguments[1]);\n                if (valueIsError(maturity)) {\n                    return maturity;\n                }\n                if (!dayjs(maturity).isValid()) {\n                    return formula.error.v;\n                }    //年付息次数\n                //年付息次数\n                var frequency = func_methods.getFirstValue(arguments[2]);\n                if (valueIsError(frequency)) {\n                    return frequency;\n                }\n                if (!isRealNum(frequency)) {\n                    return formula.error.v;\n                }\n                frequency = parseInt(frequency);    //日计数基准类型\n                //日计数基准类型\n                var basis = 0;\n                if (arguments.length == 4) {\n                    basis = func_methods.getFirstValue(arguments[3]);\n                    if (valueIsError(basis)) {\n                        return basis;\n                    }\n                    if (!isRealNum(basis)) {\n                        return formula.error.v;\n                    }\n                    basis = parseInt(basis);\n                }\n                if (frequency != 1 && frequency != 2 && frequency != 4) {\n                    return formula.error.nm;\n                }\n                if (basis < 0 || basis > 4) {\n                    return formula.error.nm;\n                }\n                if (dayjs(settlement) - dayjs(maturity) >= 0) {\n                    return formula.error.nm;\n                }    //计算\n                //计算\n                var interest;    //结算日之后的下一个付息日\n                //结算日之后的下一个付息日\n                var maxCount = Math.ceil(dayjs(maturity).diff(dayjs(settlement), 'months') / (12 / frequency)) + 1;\n                for (var i = 1; i <= maxCount; i++) {\n                    var di = dayjs(maturity).subtract(12 / frequency * i, 'months');\n                    if (di <= dayjs(settlement)) {\n                        interest = dayjs(maturity).subtract(12 / frequency * (i - 1), 'months');\n                        break;\n                    }\n                }\n                return dayjs(interest).format('YYYY-MM-DD');\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'COUPPCD': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //结算日\n                var settlement = func_methods.getCellDate(arguments[0]);\n                if (valueIsError(settlement)) {\n                    return settlement;\n                }\n                if (!dayjs(settlement).isValid()) {\n                    return formula.error.v;\n                }    //到期日\n                //到期日\n                var maturity = func_methods.getCellDate(arguments[1]);\n                if (valueIsError(maturity)) {\n                    return maturity;\n                }\n                if (!dayjs(maturity).isValid()) {\n                    return formula.error.v;\n                }    //年付息次数\n                //年付息次数\n                var frequency = func_methods.getFirstValue(arguments[2]);\n                if (valueIsError(frequency)) {\n                    return frequency;\n                }\n                if (!isRealNum(frequency)) {\n                    return formula.error.v;\n                }\n                frequency = parseInt(frequency);    //日计数基准类型\n                //日计数基准类型\n                var basis = 0;\n                if (arguments.length == 4) {\n                    basis = func_methods.getFirstValue(arguments[3]);\n                    if (valueIsError(basis)) {\n                        return basis;\n                    }\n                    if (!isRealNum(basis)) {\n                        return formula.error.v;\n                    }\n                    basis = parseInt(basis);\n                }\n                if (frequency != 1 && frequency != 2 && frequency != 4) {\n                    return formula.error.nm;\n                }\n                if (basis < 0 || basis > 4) {\n                    return formula.error.nm;\n                }\n                if (dayjs(settlement) - dayjs(maturity) >= 0) {\n                    return formula.error.nm;\n                }    //计算\n                //计算\n                var interest;    //结算日之前的上一个付息日\n                //结算日之前的上一个付息日\n                var maxCount = Math.ceil(dayjs(maturity).diff(dayjs(settlement), 'months') / (12 / frequency)) + 1;\n                for (var i = 1; i <= maxCount; i++) {\n                    var di = dayjs(maturity).subtract(12 / frequency * i, 'months');\n                    if (di <= dayjs(settlement)) {\n                        interest = di;\n                        break;\n                    }\n                }\n                return dayjs(interest).format('YYYY-MM-DD');\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'FV': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //利率\n                var rate = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(rate)) {\n                    return rate;\n                }\n                if (!isRealNum(rate)) {\n                    return formula.error.v;\n                }\n                rate = parseFloat(rate);    //总付款期数\n                //总付款期数\n                var nper = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(nper)) {\n                    return nper;\n                }\n                if (!isRealNum(nper)) {\n                    return formula.error.v;\n                }\n                nper = parseFloat(nper);    //每期的付款金额\n                //每期的付款金额\n                var pmt = func_methods.getFirstValue(arguments[2]);\n                if (valueIsError(pmt)) {\n                    return pmt;\n                }\n                if (!isRealNum(pmt)) {\n                    return formula.error.v;\n                }\n                pmt = parseFloat(pmt);    //现值，或一系列未来付款的当前值的累积和\n                //现值，或一系列未来付款的当前值的累积和\n                var pv = 0;\n                if (arguments.length >= 4) {\n                    pv = func_methods.getFirstValue(arguments[3]);\n                    if (valueIsError(pv)) {\n                        return pv;\n                    }\n                    if (!isRealNum(pv)) {\n                        return formula.error.v;\n                    }\n                    pv = parseFloat(pv);\n                }    //指定各期的付款时间是在期初还是期末\n                //指定各期的付款时间是在期初还是期末\n                var type = 0;\n                if (arguments.length >= 5) {\n                    type = func_methods.getFirstValue(arguments[4]);\n                    if (valueIsError(type)) {\n                        return type;\n                    }\n                    if (!isRealNum(type)) {\n                        return formula.error.v;\n                    }\n                    type = parseFloat(type);\n                }\n                if (type != 0 && type != 1) {\n                    return formula.error.nm;\n                }    //计算\n                //计算\n                var result;\n                if (rate === 0) {\n                    result = pv + pmt * nper;\n                } else {\n                    var term = Math.pow(1 + rate, nper);\n                    if (type === 1) {\n                        result = pv * term + pmt * (1 + rate) * (term - 1) / rate;\n                    } else {\n                        result = pv * term + pmt * (term - 1) / rate;\n                    }\n                }\n                return -result;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'FVSCHEDULE': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //现值\n                var principal = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(principal)) {\n                    return principal;\n                }\n                if (!isRealNum(principal)) {\n                    return formula.error.v;\n                }\n                principal = parseFloat(principal);    //一组利率\n                //一组利率\n                var data_schedule = arguments[1];\n                var schedule = [];\n                if (getObjType(data_schedule) == 'array') {\n                    if (getObjType(data_schedule[0]) == 'array' && !func_methods.isDyadicArr(data_schedule)) {\n                        return formula.error.v;\n                    }\n                    schedule = schedule.concat(func_methods.getDataArr(data_schedule, false));\n                } else if (getObjType(data_schedule) == 'object' && data_schedule.startCell != null) {\n                    schedule = schedule.concat(func_methods.getCellDataArr(data_schedule, 'number', false));\n                } else {\n                    schedule.push(data_schedule);\n                }\n                var schedule_n = [];\n                for (var i = 0; i < schedule.length; i++) {\n                    var number = schedule[i];\n                    if (!isRealNum(number)) {\n                        return formula.error.v;\n                    }\n                    schedule_n.push(parseFloat(number));\n                }    //计算\n                //计算\n                var n = schedule_n.length;\n                var future = principal;\n                for (var i = 0; i < n; i++) {\n                    future *= 1 + schedule_n[i];\n                }\n                return future;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'YIELD': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //结算日\n                var settlement = func_methods.getCellDate(arguments[0]);\n                if (valueIsError(settlement)) {\n                    return settlement;\n                }\n                if (!dayjs(settlement).isValid()) {\n                    return formula.error.v;\n                }    //到期日\n                //到期日\n                var maturity = func_methods.getCellDate(arguments[1]);\n                if (valueIsError(maturity)) {\n                    return maturity;\n                }\n                if (!dayjs(maturity).isValid()) {\n                    return formula.error.v;\n                }    //有价证券的年息票利率\n                //有价证券的年息票利率\n                var rate = func_methods.getFirstValue(arguments[2]);\n                if (valueIsError(rate)) {\n                    return rate;\n                }\n                if (!isRealNum(rate)) {\n                    return formula.error.v;\n                }\n                rate = parseFloat(rate);    //有价证券的价格\n                //有价证券的价格\n                var pr = func_methods.getFirstValue(arguments[3]);\n                if (valueIsError(pr)) {\n                    return pr;\n                }\n                if (!isRealNum(pr)) {\n                    return formula.error.v;\n                }\n                pr = parseFloat(pr);    //有价证券的清偿价值\n                //有价证券的清偿价值\n                var redemption = func_methods.getFirstValue(arguments[4]);\n                if (valueIsError(redemption)) {\n                    return redemption;\n                }\n                if (!isRealNum(redemption)) {\n                    return formula.error.v;\n                }\n                redemption = parseFloat(redemption);    //年付息次数\n                //年付息次数\n                var frequency = func_methods.getFirstValue(arguments[5]);\n                if (valueIsError(frequency)) {\n                    return frequency;\n                }\n                if (!isRealNum(frequency)) {\n                    return formula.error.v;\n                }\n                frequency = parseInt(frequency);    //日计数基准类型\n                //日计数基准类型\n                var basis = 0;\n                if (arguments.length == 7) {\n                    basis = func_methods.getFirstValue(arguments[6]);\n                    if (valueIsError(basis)) {\n                        return basis;\n                    }\n                    if (!isRealNum(basis)) {\n                        return formula.error.v;\n                    }\n                    basis = parseInt(basis);\n                }\n                if (rate < 0) {\n                    return formula.error.nm;\n                }\n                if (pr <= 0 || redemption <= 0) {\n                    return formula.error.nm;\n                }\n                if (frequency != 1 && frequency != 2 && frequency != 4) {\n                    return formula.error.nm;\n                }\n                if (basis < 0 || basis > 4) {\n                    return formula.error.nm;\n                }\n                if (dayjs(settlement) - dayjs(maturity) >= 0) {\n                    return formula.error.nm;\n                }    //计算\n                //计算\n                var num = window.luckysheet_function.COUPNUM.f(settlement, maturity, frequency, basis);\n                if (num > 1) {\n                    var a = 1;\n                    var b = 0;\n                    var yld = a;\n                    for (var i = 1; i <= 100; i++) {\n                        var price = window.luckysheet_function.PRICE.f(settlement, maturity, rate, yld, redemption, frequency, basis);\n                        if (Math.abs(price - pr) < 0.000001) {\n                            break;\n                        }\n                        if (price > pr) {\n                            b = yld;\n                        } else {\n                            a = yld;\n                        }\n                        yld = (a + b) / 2;\n                    }\n                    var result = yld;\n                } else {\n                    var DSR = window.luckysheet_function.COUPDAYSNC.f(settlement, maturity, frequency, basis);\n                    var E = window.luckysheet_function.COUPDAYS.f(settlement, maturity, frequency, basis);\n                    var A = window.luckysheet_function.COUPDAYBS.f(settlement, maturity, frequency, basis);\n                    var T1 = redemption / 100 + rate / frequency;\n                    var T2 = pr / 100 + A / E * (rate / frequency);\n                    var T3 = frequency * E / DSR;\n                    var result = (T1 - T2) / T2 * T3;\n                }\n                return result;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'YIELDDISC': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //结算日\n                var settlement = func_methods.getCellDate(arguments[0]);\n                if (valueIsError(settlement)) {\n                    return settlement;\n                }\n                if (!dayjs(settlement).isValid()) {\n                    return formula.error.v;\n                }    //到期日\n                //到期日\n                var maturity = func_methods.getCellDate(arguments[1]);\n                if (valueIsError(maturity)) {\n                    return maturity;\n                }\n                if (!dayjs(maturity).isValid()) {\n                    return formula.error.v;\n                }    //有价证券的价格\n                //有价证券的价格\n                var pr = func_methods.getFirstValue(arguments[2]);\n                if (valueIsError(pr)) {\n                    return pr;\n                }\n                if (!isRealNum(pr)) {\n                    return formula.error.v;\n                }\n                pr = parseFloat(pr);    //有价证券的清偿价值\n                //有价证券的清偿价值\n                var redemption = func_methods.getFirstValue(arguments[3]);\n                if (valueIsError(redemption)) {\n                    return redemption;\n                }\n                if (!isRealNum(redemption)) {\n                    return formula.error.v;\n                }\n                redemption = parseFloat(redemption);    //日计数基准类型\n                //日计数基准类型\n                var basis = 0;\n                if (arguments.length == 5) {\n                    basis = func_methods.getFirstValue(arguments[4]);\n                    if (valueIsError(basis)) {\n                        return basis;\n                    }\n                    if (!isRealNum(basis)) {\n                        return formula.error.v;\n                    }\n                    basis = parseInt(basis);\n                }\n                if (pr <= 0 || redemption <= 0) {\n                    return formula.error.nm;\n                }\n                if (basis < 0 || basis > 4) {\n                    return formula.error.nm;\n                }\n                if (dayjs(settlement) - dayjs(maturity) >= 0) {\n                    return formula.error.nm;\n                }\n                var yearfrac = window.luckysheet_function.YEARFRAC.f(settlement, maturity, basis);\n                return (redemption / pr - 1) / yearfrac;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'NOMINAL': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //每年的实际利率\n                var effect_rate = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(effect_rate)) {\n                    return effect_rate;\n                }\n                if (!isRealNum(effect_rate)) {\n                    return formula.error.v;\n                }\n                effect_rate = parseFloat(effect_rate);    //每年的复利期数\n                //每年的复利期数\n                var npery = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(npery)) {\n                    return npery;\n                }\n                if (!isRealNum(npery)) {\n                    return formula.error.v;\n                }\n                npery = parseInt(npery);\n                if (effect_rate <= 0 || npery < 1) {\n                    return formula.error.nm;\n                }\n                return (Math.pow(effect_rate + 1, 1 / npery) - 1) * npery;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'XIRR': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //投资相关收益或支出的数组或范围\n                var data_values = arguments[0];\n                var values = [];\n                if (getObjType(data_values) == 'array') {\n                    if (getObjType(data_values[0]) == 'array' && !func_methods.isDyadicArr(data_values)) {\n                        return formula.error.v;\n                    }\n                    values = values.concat(func_methods.getDataArr(data_values, false));\n                } else if (getObjType(data_values) == 'object' && data_values.startCell != null) {\n                    values = values.concat(func_methods.getCellDataArr(data_values, 'number', false));\n                } else {\n                    values.push(data_values);\n                }\n                var values_n = [];\n                for (var i = 0; i < values.length; i++) {\n                    var number = values[i];\n                    if (!isRealNum(number)) {\n                        return formula.error.v;\n                    }\n                    values_n.push(parseFloat(number));\n                }    //与现金流数额参数中的现金流对应的日期数组或范围\n                //与现金流数额参数中的现金流对应的日期数组或范围\n                var dates = func_methods.getCellrangeDate(arguments[1]);\n                if (valueIsError(dates)) {\n                    return dates;\n                }\n                for (var i = 0; i < dates.length; i++) {\n                    if (!dayjs(dates[i]).isValid()) {\n                        return formula.error.v;\n                    }\n                }    //对内部回报率的估算值\n                //对内部回报率的估算值\n                var guess = 0.1;\n                if (arguments.length == 3) {\n                    guess = func_methods.getFirstValue(arguments[2]);\n                    if (valueIsError(guess)) {\n                        return guess;\n                    }\n                    if (!isRealNum(guess)) {\n                        return formula.error.v;\n                    }\n                    guess = parseFloat(guess);\n                }\n                var positive = false;\n                var negative = false;\n                for (var i = 0; i < values_n.length; i++) {\n                    if (values_n[i] > 0) {\n                        positive = true;\n                    }\n                    if (values_n[i] < 0) {\n                        negative = true;\n                    }\n                    if (positive && negative) {\n                        break;\n                    }\n                }\n                if (!positive || !negative) {\n                    return formula.error.nm;\n                }\n                if (values_n.length != dates.length) {\n                    return formula.error.nm;\n                }    //计算\n                //计算\n                var irrResult = function (values, dates, rate) {\n                    var r = rate + 1;\n                    var result = values[0];\n                    for (var i = 1; i < values.length; i++) {\n                        result += values[i] / Math.pow(r, window.luckysheet_function.DAYS.f(dates[i], dates[0]) / 365);\n                    }\n                    return result;\n                };\n                var irrResultDeriv = function (values, dates, rate) {\n                    var r = rate + 1;\n                    var result = 0;\n                    for (var i = 1; i < values.length; i++) {\n                        var frac = window.luckysheet_function.DAYS.f(dates[i], dates[0]) / 365;\n                        result -= frac * values[i] / Math.pow(r, frac + 1);\n                    }\n                    return result;\n                };\n                var resultRate = guess;\n                var epsMax = 1e-10;\n                var newRate, epsRate, resultValue;\n                var contLoop = true;\n                do {\n                    resultValue = irrResult(values_n, dates, resultRate);\n                    newRate = resultRate - resultValue / irrResultDeriv(values_n, dates, resultRate);\n                    epsRate = Math.abs(newRate - resultRate);\n                    resultRate = newRate;\n                    contLoop = epsRate > epsMax && Math.abs(resultValue) > epsMax;\n                } while (contLoop);\n                return resultRate;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'MIRR': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //投资相关收益或支出的数组或范围\n                var data_values = arguments[0];\n                var values = [];\n                if (getObjType(data_values) == 'array') {\n                    if (getObjType(data_values[0]) == 'array' && !func_methods.isDyadicArr(data_values)) {\n                        return formula.error.v;\n                    }\n                    values = values.concat(func_methods.getDataArr(data_values, false));\n                } else if (getObjType(data_values) == 'object' && data_values.startCell != null) {\n                    values = values.concat(func_methods.getCellDataArr(data_values, 'number', false));\n                } else {\n                    values.push(data_values);\n                }\n                var values_n = [];\n                for (var i = 0; i < values.length; i++) {\n                    var number = values[i];\n                    if (!isRealNum(number)) {\n                        return formula.error.v;\n                    }\n                    values_n.push(parseFloat(number));\n                }    //现金流中使用的资金支付的利率\n                //现金流中使用的资金支付的利率\n                var finance_rate = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(finance_rate)) {\n                    return finance_rate;\n                }\n                if (!isRealNum(finance_rate)) {\n                    return formula.error.v;\n                }\n                finance_rate = parseFloat(finance_rate);    //将现金流再投资的收益率\n                //将现金流再投资的收益率\n                var reinvest_rate = func_methods.getFirstValue(arguments[2]);\n                if (valueIsError(reinvest_rate)) {\n                    return reinvest_rate;\n                }\n                if (!isRealNum(reinvest_rate)) {\n                    return formula.error.v;\n                }\n                reinvest_rate = parseFloat(reinvest_rate);    //计算\n                //计算\n                var n = values_n.length;\n                var payments = [];\n                var incomes = [];\n                for (var i = 0; i < n; i++) {\n                    if (values_n[i] < 0) {\n                        payments.push(values_n[i]);\n                    } else {\n                        incomes.push(values_n[i]);\n                    }\n                }\n                if (payments.length == 0 || incomes.length == 0) {\n                    return formula.error.d;\n                }\n                var num = -window.luckysheet_function.NPV.f(reinvest_rate, incomes) * Math.pow(1 + reinvest_rate, n - 1);\n                var den = window.luckysheet_function.NPV.f(finance_rate, payments) * (1 + finance_rate);\n                return Math.pow(num / den, 1 / (n - 1)) - 1;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'IRR': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //投资相关收益或支出的数组或范围\n                var data_values = arguments[0];\n                var values = [];\n                if (getObjType(data_values) == 'array') {\n                    if (getObjType(data_values[0]) == 'array' && !func_methods.isDyadicArr(data_values)) {\n                        return formula.error.v;\n                    }\n                    values = values.concat(func_methods.getDataArr(data_values, false));\n                } else if (getObjType(data_values) == 'object' && data_values.startCell != null) {\n                    values = values.concat(func_methods.getCellDataArr(data_values, 'number', true));\n                } else {\n                    values.push(data_values);\n                }\n                var values_n = [];\n                for (var i = 0; i < values.length; i++) {\n                    var number = values[i];\n                    if (!isRealNum(number)) {\n                        return formula.error.v;\n                    }\n                    values_n.push(parseFloat(number));\n                }    //对内部回报率的估算值\n                //对内部回报率的估算值\n                var guess = 0.1;\n                if (arguments.length == 2) {\n                    guess = func_methods.getFirstValue(arguments[1]);\n                    if (valueIsError(guess)) {\n                        return guess;\n                    }\n                    if (!isRealNum(guess)) {\n                        return formula.error.v;\n                    }\n                    guess = parseFloat(guess);\n                }\n                var dates = [];\n                var positive = false;\n                var negative = false;\n                for (var i = 0; i < values.length; i++) {\n                    dates[i] = i === 0 ? 0 : dates[i - 1] + 365;\n                    if (values[i] > 0) {\n                        positive = true;\n                    }\n                    if (values[i] < 0) {\n                        negative = true;\n                    }\n                }\n                if (!positive || !negative) {\n                    return formula.error.nm;\n                }    //计算\n                //计算\n                var irrResult = function (values, dates, rate) {\n                    var r = rate + 1;\n                    var result = values[0];\n                    for (var i = 1; i < values.length; i++) {\n                        // result += values[i] / Math.pow(r, window.luckysheet_function.DAYS.f(dates[i], dates[0]) / 365);\n                        result += values[i] / Math.pow(r, (dates[i] - dates[0]) / 365);\n                    }\n                    return result;\n                };\n                var irrResultDeriv = function (values, dates, rate) {\n                    var r = rate + 1;\n                    var result = 0;\n                    for (var i = 1; i < values.length; i++) {\n                        // var frac = window.luckysheet_function.DAYS.f(dates[i], dates[0]) / 365;\n                        var frac = (dates[i] - dates[0]) / 365;\n                        result -= frac * values[i] / Math.pow(r, frac + 1);\n                    }\n                    return result;\n                };\n                var resultRate = guess;\n                var epsMax = 1e-10;\n                var newRate, epsRate, resultValue;\n                var contLoop = true;\n                do {\n                    resultValue = irrResult(values_n, dates, resultRate);\n                    newRate = resultRate - resultValue / irrResultDeriv(values_n, dates, resultRate);\n                    epsRate = Math.abs(newRate - resultRate);\n                    resultRate = newRate;\n                    contLoop = epsRate > epsMax && Math.abs(resultValue) > epsMax;\n                } while (contLoop);\n                return resultRate;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'NPV': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //某一期间的贴现率\n                var rate = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(rate)) {\n                    return rate;\n                }\n                if (!isRealNum(rate)) {\n                    return formula.error.v;\n                }\n                rate = parseFloat(rate);    //支出（负值）和收益（正值）\n                //支出（负值）和收益（正值）\n                var values = [];\n                for (var i = 1; i < arguments.length; i++) {\n                    var data = arguments[i];\n                    if (getObjType(data) == 'array') {\n                        if (getObjType(data[0]) == 'array' && !func_methods.isDyadicArr(data)) {\n                            return formula.error.v;\n                        }\n                        values = values.concat(func_methods.getDataArr(data, true));\n                    } else if (getObjType(data) == 'object' && data.startCell != null) {\n                        values = values.concat(func_methods.getCellDataArr(data, 'number', true));\n                    } else {\n                        values.push(data);\n                    }\n                }\n                var values_n = [];\n                for (var i = 0; i < values.length; i++) {\n                    var number = values[i];\n                    if (isRealNum(number)) {\n                        values_n.push(parseFloat(number));\n                    }\n                }    //计算\n                //计算\n                var result = 0;\n                if (values_n.length > 0) {\n                    for (var i = 0; i < values_n.length; i++) {\n                        result += values_n[i] / Math.pow(1 + rate, i + 1);\n                    }\n                }\n                return result;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'XNPV': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //应用于现金流的贴现率\n                var rate = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(rate)) {\n                    return rate;\n                }\n                if (!isRealNum(rate)) {\n                    return formula.error.v;\n                }\n                rate = parseFloat(rate);    //与 dates 中的支付时间相对应的一系列现金流\n                //与 dates 中的支付时间相对应的一系列现金流\n                var data_values = arguments[1];\n                var values = [];\n                if (getObjType(data_values) == 'array') {\n                    if (getObjType(data_values[0]) == 'array' && !func_methods.isDyadicArr(data_values)) {\n                        return formula.error.v;\n                    }\n                    values = values.concat(func_methods.getDataArr(data_values, false));\n                } else if (getObjType(data_values) == 'object' && data_values.startCell != null) {\n                    values = values.concat(func_methods.getCellDataArr(data_values, 'number', false));\n                } else {\n                    values.push(data_values);\n                }\n                var values_n = [];\n                for (var i = 0; i < values.length; i++) {\n                    var number = values[i];\n                    if (!isRealNum(number)) {\n                        return formula.error.v;\n                    }\n                    values_n.push(parseFloat(number));\n                }    //与现金流支付相对应的支付日期表\n                //与现金流支付相对应的支付日期表\n                var dates = func_methods.getCellrangeDate(arguments[2]);\n                if (valueIsError(dates)) {\n                    return dates;\n                }\n                for (var i = 0; i < dates.length; i++) {\n                    if (!dayjs(dates[i]).isValid()) {\n                        return formula.error.v;\n                    }\n                }\n                if (values_n.length != dates.length) {\n                    return formula.error.nm;\n                }    //计算\n                //计算\n                var result = 0;\n                for (var i = 0; i < values_n.length; i++) {\n                    result += values_n[i] / Math.pow(1 + rate, window.luckysheet_function.DAYS.f(dates[i], dates[0]) / 365);\n                }\n                return result;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'CUMIPMT': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //利率\n                var rate = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(rate)) {\n                    return rate;\n                }\n                if (!isRealNum(rate)) {\n                    return formula.error.v;\n                }\n                rate = parseFloat(rate);    //总付款期数\n                //总付款期数\n                var nper = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(nper)) {\n                    return nper;\n                }\n                if (!isRealNum(nper)) {\n                    return formula.error.v;\n                }\n                nper = parseFloat(nper);    //年金的现值\n                //年金的现值\n                var pv = func_methods.getFirstValue(arguments[2]);\n                if (valueIsError(pv)) {\n                    return pv;\n                }\n                if (!isRealNum(pv)) {\n                    return formula.error.v;\n                }\n                pv = parseFloat(pv);    //首期\n                //首期\n                var start_period = func_methods.getFirstValue(arguments[3]);\n                if (valueIsError(start_period)) {\n                    return start_period;\n                }\n                if (!isRealNum(start_period)) {\n                    return formula.error.v;\n                }\n                start_period = parseInt(start_period);    //末期\n                //末期\n                var end_period = func_methods.getFirstValue(arguments[4]);\n                if (valueIsError(end_period)) {\n                    return end_period;\n                }\n                if (!isRealNum(end_period)) {\n                    return formula.error.v;\n                }\n                end_period = parseInt(end_period);    //指定各期的付款时间是在期初还是期末\n                //指定各期的付款时间是在期初还是期末\n                var type = func_methods.getFirstValue(arguments[5]);\n                if (valueIsError(type)) {\n                    return type;\n                }\n                if (!isRealNum(type)) {\n                    return formula.error.v;\n                }\n                type = parseFloat(type);\n                if (rate <= 0 || nper <= 0 || pv <= 0) {\n                    return formula.error.nm;\n                }\n                if (start_period < 1 || end_period < 1 || start_period > end_period) {\n                    return formula.error.nm;\n                }\n                if (type != 0 && type != 1) {\n                    return formula.error.nm;\n                }    //计算\n                //计算\n                var payment = window.luckysheet_function.PMT.f(rate, nper, pv, 0, type);\n                var interest = 0;\n                if (start_period === 1) {\n                    if (type === 0) {\n                        interest = -pv;\n                        start_period++;\n                    }\n                }\n                for (var i = start_period; i <= end_period; i++) {\n                    if (type === 1) {\n                        interest += window.luckysheet_function.FV.f(rate, i - 2, payment, pv, 1) - payment;\n                    } else {\n                        interest += window.luckysheet_function.FV.f(rate, i - 1, payment, pv, 0);\n                    }\n                }\n                interest *= rate;\n                return interest;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'PMT': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //贷款利率\n                var rate = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(rate)) {\n                    return rate;\n                }\n                if (!isRealNum(rate)) {\n                    return formula.error.v;\n                }\n                rate = parseFloat(rate);    //该项贷款的付款总数\n                //该项贷款的付款总数\n                var nper = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(nper)) {\n                    return nper;\n                }\n                if (!isRealNum(nper)) {\n                    return formula.error.v;\n                }\n                nper = parseFloat(nper);    //现值\n                //现值\n                var pv = func_methods.getFirstValue(arguments[2]);\n                if (valueIsError(pv)) {\n                    return pv;\n                }\n                if (!isRealNum(pv)) {\n                    return formula.error.v;\n                }\n                pv = parseFloat(pv);    //最后一次付款后希望得到的现金余额\n                //最后一次付款后希望得到的现金余额\n                var fv = 0;\n                if (arguments.length >= 4) {\n                    fv = func_methods.getFirstValue(arguments[3]);\n                    if (valueIsError(fv)) {\n                        return fv;\n                    }\n                    if (!isRealNum(fv)) {\n                        return formula.error.v;\n                    }\n                    fv = parseFloat(fv);\n                }    //指定各期的付款时间是在期初还是期末\n                //指定各期的付款时间是在期初还是期末\n                var type = 0;\n                if (arguments.length == 5) {\n                    type = func_methods.getFirstValue(arguments[4]);\n                    if (valueIsError(type)) {\n                        return type;\n                    }\n                    if (!isRealNum(type)) {\n                        return formula.error.v;\n                    }\n                    type = parseFloat(type);\n                }\n                if (type != 0 && type != 1) {\n                    return formula.error.nm;\n                }    //计算\n                //计算\n                var result;\n                if (rate === 0) {\n                    result = (pv + fv) / nper;\n                } else {\n                    var term = Math.pow(1 + rate, nper);\n                    if (type === 1) {\n                        result = (fv * rate / (term - 1) + pv * rate / (1 - 1 / term)) / (1 + rate);\n                    } else {\n                        result = fv * rate / (term - 1) + pv * rate / (1 - 1 / term);\n                    }\n                }\n                return -result;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'IPMT': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //利率\n                var rate = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(rate)) {\n                    return rate;\n                }\n                if (!isRealNum(rate)) {\n                    return formula.error.v;\n                }\n                rate = parseFloat(rate);    //用于计算其利息数额的期数\n                //用于计算其利息数额的期数\n                var per = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(per)) {\n                    return per;\n                }\n                if (!isRealNum(per)) {\n                    return formula.error.v;\n                }\n                per = parseFloat(per);    //总付款期数\n                //总付款期数\n                var nper = func_methods.getFirstValue(arguments[2]);\n                if (valueIsError(nper)) {\n                    return nper;\n                }\n                if (!isRealNum(nper)) {\n                    return formula.error.v;\n                }\n                nper = parseFloat(nper);    //现值\n                //现值\n                var pv = func_methods.getFirstValue(arguments[3]);\n                if (valueIsError(pv)) {\n                    return pv;\n                }\n                if (!isRealNum(pv)) {\n                    return formula.error.v;\n                }\n                pv = parseFloat(pv);    //最后一次付款后希望得到的现金余额\n                //最后一次付款后希望得到的现金余额\n                var fv = 0;\n                if (arguments.length >= 5) {\n                    fv = func_methods.getFirstValue(arguments[4]);\n                    if (valueIsError(fv)) {\n                        return fv;\n                    }\n                    if (!isRealNum(fv)) {\n                        return formula.error.v;\n                    }\n                    fv = parseFloat(fv);\n                }    //指定各期的付款时间是在期初还是期末\n                //指定各期的付款时间是在期初还是期末\n                var type = 0;\n                if (arguments.length >= 6) {\n                    type = func_methods.getFirstValue(arguments[5]);\n                    if (valueIsError(type)) {\n                        return type;\n                    }\n                    if (!isRealNum(type)) {\n                        return formula.error.v;\n                    }\n                    type = parseFloat(type);\n                }\n                if (per < 1 || per > nper) {\n                    return formula.error.nm;\n                }\n                if (type != 0 && type != 1) {\n                    return formula.error.nm;\n                }    //计算\n                //计算\n                var payment = window.luckysheet_function.PMT.f(rate, nper, pv, fv, type);\n                var interest;\n                if (per === 1) {\n                    if (type === 1) {\n                        interest = 0;\n                    } else {\n                        interest = -pv;\n                    }\n                } else {\n                    if (type === 1) {\n                        interest = window.luckysheet_function.FV.f(rate, per - 2, payment, pv, 1) - payment;\n                    } else {\n                        interest = window.luckysheet_function.FV.f(rate, per - 1, payment, pv, 0);\n                    }\n                }\n                var result = interest * rate;\n                return result;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'PPMT': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //利率\n                var rate = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(rate)) {\n                    return rate;\n                }\n                if (!isRealNum(rate)) {\n                    return formula.error.v;\n                }\n                rate = parseFloat(rate);    //用于计算其利息数额的期数\n                //用于计算其利息数额的期数\n                var per = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(per)) {\n                    return per;\n                }\n                if (!isRealNum(per)) {\n                    return formula.error.v;\n                }\n                per = parseFloat(per);    //总付款期数\n                //总付款期数\n                var nper = func_methods.getFirstValue(arguments[2]);\n                if (valueIsError(nper)) {\n                    return nper;\n                }\n                if (!isRealNum(nper)) {\n                    return formula.error.v;\n                }\n                nper = parseFloat(nper);    //现值\n                //现值\n                var pv = func_methods.getFirstValue(arguments[3]);\n                if (valueIsError(pv)) {\n                    return pv;\n                }\n                if (!isRealNum(pv)) {\n                    return formula.error.v;\n                }\n                pv = parseFloat(pv);    //最后一次付款后希望得到的现金余额\n                //最后一次付款后希望得到的现金余额\n                var fv = 0;\n                if (arguments.length >= 5) {\n                    fv = func_methods.getFirstValue(arguments[4]);\n                    if (valueIsError(fv)) {\n                        return fv;\n                    }\n                    if (!isRealNum(fv)) {\n                        return formula.error.v;\n                    }\n                    fv = parseFloat(fv);\n                }    //指定各期的付款时间是在期初还是期末\n                //指定各期的付款时间是在期初还是期末\n                var type = 0;\n                if (arguments.length >= 6) {\n                    type = func_methods.getFirstValue(arguments[5]);\n                    if (valueIsError(type)) {\n                        return type;\n                    }\n                    if (!isRealNum(type)) {\n                        return formula.error.v;\n                    }\n                    type = parseFloat(type);\n                }\n                if (per < 1 || per > nper) {\n                    return formula.error.nm;\n                }\n                if (type != 0 && type != 1) {\n                    return formula.error.nm;\n                }    //计算\n                //计算\n                var payment = window.luckysheet_function.PMT.f(rate, nper, pv, fv, type);\n                var payment2 = window.luckysheet_function.IPMT.f(rate, per, nper, pv, fv, type);\n                return payment - payment2;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'INTRATE': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //结算日\n                var settlement = func_methods.getCellDate(arguments[0]);\n                if (valueIsError(settlement)) {\n                    return settlement;\n                }\n                if (!dayjs(settlement).isValid()) {\n                    return formula.error.v;\n                }    //到期日\n                //到期日\n                var maturity = func_methods.getCellDate(arguments[1]);\n                if (valueIsError(maturity)) {\n                    return maturity;\n                }\n                if (!dayjs(maturity).isValid()) {\n                    return formula.error.v;\n                }    //有价证券的投资额\n                //有价证券的投资额\n                var investment = func_methods.getFirstValue(arguments[2]);\n                if (valueIsError(investment)) {\n                    return investment;\n                }\n                if (!isRealNum(investment)) {\n                    return formula.error.v;\n                }\n                investment = parseFloat(investment);    //有价证券到期时的兑换值\n                //有价证券到期时的兑换值\n                var redemption = func_methods.getFirstValue(arguments[3]);\n                if (valueIsError(redemption)) {\n                    return redemption;\n                }\n                if (!isRealNum(redemption)) {\n                    return formula.error.v;\n                }\n                redemption = parseFloat(redemption);    //日计数基准类型\n                //日计数基准类型\n                var basis = 0;\n                if (arguments.length == 5) {\n                    basis = func_methods.getFirstValue(arguments[4]);\n                    if (valueIsError(basis)) {\n                        return basis;\n                    }\n                    if (!isRealNum(basis)) {\n                        return formula.error.v;\n                    }\n                    basis = parseInt(basis);\n                }\n                if (investment <= 0 || redemption <= 0) {\n                    return formula.error.nm;\n                }\n                if (basis < 0 || basis > 4) {\n                    return formula.error.nm;\n                }\n                if (dayjs(settlement) - dayjs(maturity) >= 0) {\n                    return formula.error.nm;\n                }    //计算\n                //计算\n                var sd = dayjs(settlement).date();\n                var sm = dayjs(settlement).month() + 1;\n                var sy = dayjs(settlement).year();\n                var ed = dayjs(maturity).date();\n                var em = dayjs(maturity).month() + 1;\n                var ey = dayjs(maturity).year();\n                var result;\n                switch (basis) {\n                case 0:\n                    // US (NASD) 30/360\n                    if (sd === 31 && ed === 31) {\n                        sd = 30;\n                        ed = 30;\n                    } else if (sd === 31) {\n                        sd = 30;\n                    } else if (sd === 30 && ed === 31) {\n                        ed = 30;\n                    }\n                    result = 360 / (ed + em * 30 + ey * 360 - (sd + sm * 30 + sy * 360));\n                    break;\n                case 1:\n                    // Actual/actual\n                    var ylength = 365;\n                    if (sy === ey || sy + 1 === ey && (sm > em || sm === em && sd >= ed)) {\n                        if (sy === ey && func_methods.isLeapYear(sy) || func_methods.feb29Between(settlement, maturity) || em === 1 && ed === 29) {\n                            ylength = 366;\n                        }\n                        result = ylength / dayjs(maturity).diff(dayjs(settlement), 'days');\n                        result = (redemption - investment) / investment * result;\n                        return result;\n                    }\n                    var years = ey - sy + 1;\n                    var days = (dayjs().set({\n                        'year': ey + 1,\n                        'month': 0,\n                        'date': 1\n                    }) - dayjs().set({\n                        'year': sy,\n                        'month': 0,\n                        'date': 1\n                    })) / 1000 / 60 / 60 / 24;\n                    var average = days / years;\n                    result = average / dayjs(maturity).diff(dayjs(settlement), 'days');\n                    break;\n                case 2:\n                    // Actual/360\n                    result = 360 / dayjs(maturity).diff(dayjs(settlement), 'days');\n                    break;\n                case 3:\n                    // Actual/365\n                    result = 365 / dayjs(maturity).diff(dayjs(settlement), 'days');\n                    break;\n                case 4:\n                    // European 30/360\n                    result = 360 / (ed + em * 30 + ey * 360 - (sd + sm * 30 + sy * 360));\n                    break;\n                }\n                result = (redemption - investment) / investment * result;\n                return result;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'PRICE': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //结算日\n                var settlement = func_methods.getCellDate(arguments[0]);\n                if (valueIsError(settlement)) {\n                    return settlement;\n                }\n                if (!dayjs(settlement).isValid()) {\n                    return formula.error.v;\n                }    //到期日\n                //到期日\n                var maturity = func_methods.getCellDate(arguments[1]);\n                if (valueIsError(maturity)) {\n                    return maturity;\n                }\n                if (!dayjs(maturity).isValid()) {\n                    return formula.error.v;\n                }    //有价证券的年息票利率\n                //有价证券的年息票利率\n                var rate = func_methods.getFirstValue(arguments[2]);\n                if (valueIsError(rate)) {\n                    return rate;\n                }\n                if (!isRealNum(rate)) {\n                    return formula.error.v;\n                }\n                rate = parseFloat(rate);    //有价证券的年收益率\n                //有价证券的年收益率\n                var yld = func_methods.getFirstValue(arguments[3]);\n                if (valueIsError(yld)) {\n                    return yld;\n                }\n                if (!isRealNum(yld)) {\n                    return formula.error.v;\n                }\n                yld = parseFloat(yld);    //有价证券的清偿价值\n                //有价证券的清偿价值\n                var redemption = func_methods.getFirstValue(arguments[4]);\n                if (valueIsError(redemption)) {\n                    return redemption;\n                }\n                if (!isRealNum(redemption)) {\n                    return formula.error.v;\n                }\n                redemption = parseFloat(redemption);    //年付息次数\n                //年付息次数\n                var frequency = func_methods.getFirstValue(arguments[5]);\n                if (valueIsError(frequency)) {\n                    return frequency;\n                }\n                if (!isRealNum(frequency)) {\n                    return formula.error.v;\n                }\n                frequency = parseInt(frequency);    //日计数基准类型\n                //日计数基准类型\n                var basis = 0;\n                if (arguments.length == 7) {\n                    basis = func_methods.getFirstValue(arguments[6]);\n                    if (valueIsError(basis)) {\n                        return basis;\n                    }\n                    if (!isRealNum(basis)) {\n                        return formula.error.v;\n                    }\n                    basis = parseInt(basis);\n                }\n                if (rate < 0 || yld < 0) {\n                    return formula.error.nm;\n                }\n                if (redemption <= 0) {\n                    return formula.error.nm;\n                }\n                if (frequency != 1 && frequency != 2 && frequency != 4) {\n                    return formula.error.nm;\n                }\n                if (basis < 0 || basis > 4) {\n                    return formula.error.nm;\n                }\n                if (dayjs(settlement) - dayjs(maturity) >= 0) {\n                    return formula.error.nm;\n                }    //计算\n                //计算\n                var DSC = window.luckysheet_function.COUPDAYSNC.f(settlement, maturity, frequency, basis);\n                var E = window.luckysheet_function.COUPDAYS.f(settlement, maturity, frequency, basis);\n                var A = window.luckysheet_function.COUPDAYBS.f(settlement, maturity, frequency, basis);\n                var num = window.luckysheet_function.COUPNUM.f(settlement, maturity, frequency, basis);\n                if (num > 1) {\n                    var T1 = redemption / Math.pow(1 + yld / frequency, num - 1 + DSC / E);\n                    var T2 = 0;\n                    for (var i = 1; i <= num; i++) {\n                        T2 += 100 * rate / frequency / Math.pow(1 + yld / frequency, i - 1 + DSC / E);\n                    }\n                    var T3 = 100 * (rate / frequency) * (A / E);\n                    var result = T1 + T2 - T3;\n                } else {\n                    var DSR = E - A;\n                    var T1 = 100 * (rate / frequency) + redemption;\n                    var T2 = yld / frequency * (DSR / E) + 1;\n                    var T3 = 100 * (rate / frequency) * (A / E);\n                    var result = T1 / T2 - T3;\n                }\n                return result;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'PRICEDISC': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //结算日\n                var settlement = func_methods.getCellDate(arguments[0]);\n                if (valueIsError(settlement)) {\n                    return settlement;\n                }\n                if (!dayjs(settlement).isValid()) {\n                    return formula.error.v;\n                }    //到期日\n                //到期日\n                var maturity = func_methods.getCellDate(arguments[1]);\n                if (valueIsError(maturity)) {\n                    return maturity;\n                }\n                if (!dayjs(maturity).isValid()) {\n                    return formula.error.v;\n                }    //有价证券的贴现率\n                //有价证券的贴现率\n                var discount = func_methods.getFirstValue(arguments[2]);\n                if (valueIsError(discount)) {\n                    return discount;\n                }\n                if (!isRealNum(discount)) {\n                    return formula.error.v;\n                }\n                discount = parseFloat(discount);    //有价证券的清偿价值\n                //有价证券的清偿价值\n                var redemption = func_methods.getFirstValue(arguments[3]);\n                if (valueIsError(redemption)) {\n                    return redemption;\n                }\n                if (!isRealNum(redemption)) {\n                    return formula.error.v;\n                }\n                redemption = parseFloat(redemption);    //日计数基准类型\n                //日计数基准类型\n                var basis = 0;\n                if (arguments.length == 5) {\n                    basis = func_methods.getFirstValue(arguments[4]);\n                    if (valueIsError(basis)) {\n                        return basis;\n                    }\n                    if (!isRealNum(basis)) {\n                        return formula.error.v;\n                    }\n                    basis = parseInt(basis);\n                }\n                if (discount <= 0 || redemption <= 0) {\n                    return formula.error.nm;\n                }\n                if (basis < 0 || basis > 4) {\n                    return formula.error.nm;\n                }\n                if (dayjs(settlement) - dayjs(maturity) >= 0) {\n                    return formula.error.nm;\n                }    //计算\n                //计算\n                var sd = dayjs(settlement).date();\n                var sm = dayjs(settlement).month() + 1;\n                var sy = dayjs(settlement).year();\n                var ed = dayjs(maturity).date();\n                var em = dayjs(maturity).month() + 1;\n                var ey = dayjs(maturity).year();\n                var result;\n                switch (basis) {\n                case 0:\n                    // US (NASD) 30/360\n                    if (sd === 31 && ed === 31) {\n                        sd = 30;\n                        ed = 30;\n                    } else if (sd === 31) {\n                        sd = 30;\n                    } else if (sd === 30 && ed === 31) {\n                        ed = 30;\n                    }\n                    result = (ed + em * 30 + ey * 360 - (sd + sm * 30 + sy * 360)) / 360;\n                    break;\n                case 1:\n                    // Actual/actual\n                    var ylength = 365;\n                    if (sy === ey || sy + 1 === ey && (sm > em || sm === em && sd >= ed)) {\n                        if (sy === ey && func_methods.isLeapYear(sy) || func_methods.feb29Between(settlement, maturity) || em === 1 && ed === 29) {\n                            ylength = 366;\n                        }\n                        result = dayjs(maturity).diff(dayjs(settlement), 'days') / ylength;\n                        result = redemption - discount * redemption * result;\n                        return result;\n                    }\n                    var years = ey - sy + 1;\n                    var days = (dayjs().set({\n                        'year': ey + 1,\n                        'month': 0,\n                        'date': 1\n                    }) - dayjs().set({\n                        'year': sy,\n                        'month': 0,\n                        'date': 1\n                    })) / 1000 / 60 / 60 / 24;\n                    var average = days / years;\n                    result = dayjs(maturity).diff(dayjs(settlement), 'days') / average;\n                    break;\n                case 2:\n                    // Actual/360\n                    result = dayjs(maturity).diff(dayjs(settlement), 'days') / 360;\n                    break;\n                case 3:\n                    // Actual/365\n                    result = dayjs(maturity).diff(dayjs(settlement), 'days') / 365;\n                    break;\n                case 4:\n                    // European 30/360\n                    result = (ed + em * 30 + ey * 360 - (sd + sm * 30 + sy * 360)) / 360;\n                    break;\n                }\n                result = redemption - discount * redemption * result;\n                return result;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'PRICEMAT': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //结算日\n                var settlement = func_methods.getCellDate(arguments[0]);\n                if (valueIsError(settlement)) {\n                    return settlement;\n                }\n                if (!dayjs(settlement).isValid()) {\n                    return formula.error.v;\n                }    //到期日\n                //到期日\n                var maturity = func_methods.getCellDate(arguments[1]);\n                if (valueIsError(maturity)) {\n                    return maturity;\n                }\n                if (!dayjs(maturity).isValid()) {\n                    return formula.error.v;\n                }    //发行日\n                //发行日\n                var issue = func_methods.getCellDate(arguments[2]);\n                if (valueIsError(issue)) {\n                    return issue;\n                }\n                if (!dayjs(issue).isValid()) {\n                    return formula.error.v;\n                }    //有价证券在发行日的利率\n                //有价证券在发行日的利率\n                var rate = func_methods.getFirstValue(arguments[3]);\n                if (valueIsError(rate)) {\n                    return rate;\n                }\n                if (!isRealNum(rate)) {\n                    return formula.error.v;\n                }\n                rate = parseFloat(rate);    //有价证券的年收益率\n                //有价证券的年收益率\n                var yld = func_methods.getFirstValue(arguments[4]);\n                if (valueIsError(yld)) {\n                    return yld;\n                }\n                if (!isRealNum(yld)) {\n                    return formula.error.v;\n                }\n                yld = parseFloat(yld);    //日计数基准类型\n                //日计数基准类型\n                var basis = 0;\n                if (arguments.length == 6) {\n                    basis = func_methods.getFirstValue(arguments[5]);\n                    if (valueIsError(basis)) {\n                        return basis;\n                    }\n                    if (!isRealNum(basis)) {\n                        return formula.error.v;\n                    }\n                    basis = parseInt(basis);\n                }\n                if (rate < 0 || yld < 0) {\n                    return formula.error.nm;\n                }\n                if (basis < 0 || basis > 4) {\n                    return formula.error.nm;\n                }\n                if (dayjs(settlement) - dayjs(maturity) >= 0) {\n                    return formula.error.nm;\n                }    //计算\n                //计算\n                var sd = dayjs(settlement).date();\n                var sm = dayjs(settlement).month() + 1;\n                var sy = dayjs(settlement).year();\n                var ed = dayjs(maturity).date();\n                var em = dayjs(maturity).month() + 1;\n                var ey = dayjs(maturity).year();\n                var td = dayjs(issue).date();\n                var tm = dayjs(issue).month() + 1;\n                var ty = dayjs(issue).year();\n                var result;\n                switch (basis) {\n                case 0:\n                    // US (NASD) 30/360\n                    if (sd == 31) {\n                        sd = 30;\n                    }\n                    if (ed == 31) {\n                        ed = 30;\n                    }\n                    if (td == 31) {\n                        td = 30;\n                    }\n                    var B = 360;\n                    var DSM = ed + em * 30 + ey * 360 - (sd + sm * 30 + sy * 360);\n                    var DIM = ed + em * 30 + ey * 360 - (td + tm * 30 + ty * 360);\n                    var A = sd + sm * 30 + sy * 360 - (td + tm * 30 + ty * 360);\n                    break;\n                case 1:\n                    // Actual/actual\n                    var ylength = 365;\n                    if (sy === ey || sy + 1 === ey && (sm > em || sm === em && sd >= ed)) {\n                        if (sy === ey && func_methods.isLeapYear(sy) || func_methods.feb29Between(settlement, maturity) || em === 1 && ed === 29) {\n                            ylength = 366;\n                        }\n                        var B = ylength;\n                        var DSM = dayjs(maturity).diff(dayjs(settlement), 'days');\n                        var DIM = dayjs(settlement).diff(dayjs(issue), 'days');\n                        var A = dayjs(maturity).diff(dayjs(issue), 'days');\n                        result = (100 + DIM / B * rate * 100) / (1 + DSM / B * yld) - A / B * rate * 100;\n                        return result;\n                    }\n                    var years = ey - sy + 1;\n                    var days = (dayjs().set({\n                        'year': ey + 1,\n                        'month': 0,\n                        'date': 1\n                    }) - dayjs().set({\n                        'year': sy,\n                        'month': 0,\n                        'date': 1\n                    })) / 1000 / 60 / 60 / 24;\n                    var average = days / years;\n                    var B = average;\n                    var DSM = dayjs(maturity).diff(dayjs(settlement), 'days');\n                    var DIM = dayjs(settlement).diff(dayjs(issue), 'days');\n                    var A = dayjs(maturity).diff(dayjs(issue), 'days');\n                    break;\n                case 2:\n                    // Actual/360\n                    var B = 360;\n                    var DSM = dayjs(maturity).diff(dayjs(settlement), 'days');\n                    var DIM = dayjs(settlement).diff(dayjs(issue), 'days');\n                    var A = dayjs(maturity).diff(dayjs(issue), 'days');\n                    break;\n                case 3:\n                    // Actual/365\n                    var B = 365;\n                    var DSM = dayjs(maturity).diff(dayjs(settlement), 'days');\n                    var DIM = dayjs(settlement).diff(dayjs(issue), 'days');\n                    var A = dayjs(maturity).diff(dayjs(issue), 'days');\n                    break;\n                case 4:\n                    // European 30/360\n                    var B = 360;\n                    var DSM = ed + em * 30 + ey * 360 - (sd + sm * 30 + sy * 360);\n                    var DIM = ed + em * 30 + ey * 360 - (td + tm * 30 + ty * 360);\n                    var A = sd + sm * 30 + sy * 360 - (td + tm * 30 + ty * 360);\n                    break;\n                }\n                result = (100 + DIM / B * rate * 100) / (1 + DSM / B * yld) - A / B * rate * 100;\n                return result;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'RECEIVED': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //结算日\n                var settlement = func_methods.getCellDate(arguments[0]);\n                if (valueIsError(settlement)) {\n                    return settlement;\n                }\n                if (!dayjs(settlement).isValid()) {\n                    return formula.error.v;\n                }    //到期日\n                //到期日\n                var maturity = func_methods.getCellDate(arguments[1]);\n                if (valueIsError(maturity)) {\n                    return maturity;\n                }\n                if (!dayjs(maturity).isValid()) {\n                    return formula.error.v;\n                }    //有价证券的投资额\n                //有价证券的投资额\n                var investment = func_methods.getFirstValue(arguments[2]);\n                if (valueIsError(investment)) {\n                    return investment;\n                }\n                if (!isRealNum(investment)) {\n                    return formula.error.v;\n                }\n                investment = parseFloat(investment);    //有价证券的贴现率\n                //有价证券的贴现率\n                var discount = func_methods.getFirstValue(arguments[3]);\n                if (valueIsError(discount)) {\n                    return discount;\n                }\n                if (!isRealNum(discount)) {\n                    return formula.error.v;\n                }\n                discount = parseFloat(discount);    //日计数基准类型\n                //日计数基准类型\n                var basis = 0;\n                if (arguments.length == 5) {\n                    basis = func_methods.getFirstValue(arguments[4]);\n                    if (valueIsError(basis)) {\n                        return basis;\n                    }\n                    if (!isRealNum(basis)) {\n                        return formula.error.v;\n                    }\n                    basis = parseFloat(basis);\n                }\n                if (investment <= 0 || discount <= 0) {\n                    return formula.error.nm;\n                }\n                if (basis < 0 || basis > 4) {\n                    return formula.error.nm;\n                }\n                if (dayjs(settlement) - dayjs(maturity) >= 0) {\n                    return formula.error.nm;\n                }    //计算\n                //计算\n                var sd = dayjs(settlement).date();\n                var sm = dayjs(settlement).month() + 1;\n                var sy = dayjs(settlement).year();\n                var ed = dayjs(maturity).date();\n                var em = dayjs(maturity).month() + 1;\n                var ey = dayjs(maturity).year();\n                var result;\n                switch (basis) {\n                case 0:\n                    // US (NASD) 30/360\n                    if (sd == 31) {\n                        sd = 30;\n                    }\n                    if (ed == 31) {\n                        ed = 30;\n                    }\n                    var B = 360;\n                    var DIM = ed + em * 30 + ey * 360 - (sd + sm * 30 + sy * 360);\n                    break;\n                case 1:\n                    // Actual/actual\n                    var ylength = 365;\n                    if (sy === ey || sy + 1 === ey && (sm > em || sm === em && sd >= ed)) {\n                        if (sy === ey && func_methods.isLeapYear(sy) || func_methods.feb29Between(settlement, maturity) || em === 1 && ed === 29) {\n                            ylength = 366;\n                        }\n                        var B = ylength;\n                        var DIM = dayjs(maturity).diff(dayjs(settlement), 'days');\n                        result = investment / (1 - discount * DIM / B);\n                        return result;\n                    }\n                    var years = ey - sy + 1;\n                    var days = (dayjs().set({\n                        'year': ey + 1,\n                        'month': 0,\n                        'date': 1\n                    }) - dayjs().set({\n                        'year': sy,\n                        'month': 0,\n                        'date': 1\n                    })) / 1000 / 60 / 60 / 24;\n                    var average = days / years;\n                    var B = average;\n                    var DIM = dayjs(maturity).diff(dayjs(settlement), 'days');\n                    break;\n                case 2:\n                    // Actual/360\n                    var B = 360;\n                    var DIM = dayjs(maturity).diff(dayjs(settlement), 'days');\n                    break;\n                case 3:\n                    // Actual/365\n                    var B = 365;\n                    var DIM = dayjs(maturity).diff(dayjs(settlement), 'days');\n                    break;\n                case 4:\n                    // European 30/360\n                    var B = 360;\n                    var DIM = ed + em * 30 + ey * 360 - (sd + sm * 30 + sy * 360);\n                    break;\n                }\n                result = investment / (1 - discount * DIM / B);\n                return result;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'DISC': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //结算日\n                var settlement = func_methods.getCellDate(arguments[0]);\n                if (valueIsError(settlement)) {\n                    return settlement;\n                }\n                if (!dayjs(settlement).isValid()) {\n                    return formula.error.v;\n                }    //到期日\n                //到期日\n                var maturity = func_methods.getCellDate(arguments[1]);\n                if (valueIsError(maturity)) {\n                    return maturity;\n                }\n                if (!dayjs(maturity).isValid()) {\n                    return formula.error.v;\n                }    //有价证券的价格\n                //有价证券的价格\n                var pr = func_methods.getFirstValue(arguments[2]);\n                if (valueIsError(pr)) {\n                    return pr;\n                }\n                if (!isRealNum(pr)) {\n                    return formula.error.v;\n                }\n                pr = parseFloat(pr);    //有价证券的清偿价值\n                //有价证券的清偿价值\n                var redemption = func_methods.getFirstValue(arguments[3]);\n                if (valueIsError(redemption)) {\n                    return redemption;\n                }\n                if (!isRealNum(redemption)) {\n                    return formula.error.v;\n                }\n                redemption = parseFloat(redemption);    //日计数基准类型\n                //日计数基准类型\n                var basis = 0;\n                if (arguments.length == 5) {\n                    basis = func_methods.getFirstValue(arguments[4]);\n                    if (valueIsError(basis)) {\n                        return basis;\n                    }\n                    if (!isRealNum(basis)) {\n                        return formula.error.v;\n                    }\n                    basis = parseFloat(basis);\n                }\n                if (pr <= 0 || redemption <= 0) {\n                    return formula.error.nm;\n                }\n                if (basis < 0 || basis > 4) {\n                    return formula.error.nm;\n                }\n                if (dayjs(settlement) - dayjs(maturity) >= 0) {\n                    return formula.error.nm;\n                }    //计算\n                //计算\n                var sd = dayjs(settlement).date();\n                var sm = dayjs(settlement).month() + 1;\n                var sy = dayjs(settlement).year();\n                var ed = dayjs(maturity).date();\n                var em = dayjs(maturity).month() + 1;\n                var ey = dayjs(maturity).year();\n                var result;\n                switch (basis) {\n                case 0:\n                    // US (NASD) 30/360\n                    if (sd == 31) {\n                        sd = 30;\n                    }\n                    if (ed == 31) {\n                        ed = 30;\n                    }\n                    var B = 360;\n                    var DSM = ed + em * 30 + ey * 360 - (sd + sm * 30 + sy * 360);\n                    break;\n                case 1:\n                    // Actual/actual\n                    var ylength = 365;\n                    if (sy === ey || sy + 1 === ey && (sm > em || sm === em && sd >= ed)) {\n                        if (sy === ey && func_methods.isLeapYear(sy) || func_methods.feb29Between(settlement, maturity) || em === 1 && ed === 29) {\n                            ylength = 366;\n                        }\n                        var B = ylength;\n                        var DSM = dayjs(maturity).diff(dayjs(settlement), 'days');\n                        result = (redemption - pr) / redemption * (B / DSM);\n                        return result;\n                    }\n                    var years = ey - sy + 1;\n                    var days = (dayjs().set({\n                        'year': ey + 1,\n                        'month': 0,\n                        'date': 1\n                    }) - dayjs().set({\n                        'year': sy,\n                        'month': 0,\n                        'date': 1\n                    })) / 1000 / 60 / 60 / 24;\n                    var average = days / years;\n                    var B = average;\n                    var DSM = dayjs(maturity).diff(dayjs(settlement), 'days');\n                    break;\n                case 2:\n                    // Actual/360\n                    var B = 360;\n                    var DSM = dayjs(maturity).diff(dayjs(settlement), 'days');\n                    break;\n                case 3:\n                    // Actual/365\n                    var B = 365;\n                    var DSM = dayjs(maturity).diff(dayjs(settlement), 'days');\n                    break;\n                case 4:\n                    // European 30/360\n                    var B = 360;\n                    var DSM = ed + em * 30 + ey * 360 - (sd + sm * 30 + sy * 360);\n                    break;\n                }\n                result = (redemption - pr) / redemption * (B / DSM);\n                return result;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'NPER': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //利率\n                var rate = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(rate)) {\n                    return rate;\n                }\n                if (!isRealNum(rate)) {\n                    return formula.error.v;\n                }\n                rate = parseFloat(rate);    //各期所应支付的金额\n                //各期所应支付的金额\n                var pmt = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(pmt)) {\n                    return pmt;\n                }\n                if (!isRealNum(pmt)) {\n                    return formula.error.v;\n                }\n                pmt = parseFloat(pmt);    //现值\n                //现值\n                var pv = func_methods.getFirstValue(arguments[2]);\n                if (valueIsError(pv)) {\n                    return pv;\n                }\n                if (!isRealNum(pv)) {\n                    return formula.error.v;\n                }\n                pv = parseFloat(pv);    //最后一次付款后希望得到的现金余额\n                //最后一次付款后希望得到的现金余额\n                var fv = 0;\n                if (arguments.length >= 4) {\n                    fv = func_methods.getFirstValue(arguments[3]);\n                    if (valueIsError(fv)) {\n                        return fv;\n                    }\n                    if (!isRealNum(fv)) {\n                        return formula.error.v;\n                    }\n                    fv = parseFloat(fv);\n                }    //指定各期的付款时间是在期初还是期末\n                //指定各期的付款时间是在期初还是期末\n                var type = 0;\n                if (arguments.length >= 5) {\n                    type = func_methods.getFirstValue(arguments[4]);\n                    if (valueIsError(type)) {\n                        return type;\n                    }\n                    if (!isRealNum(type)) {\n                        return formula.error.v;\n                    }\n                    type = parseFloat(type);\n                }\n                if (type != 0 && type != 1) {\n                    return formula.error.nm;\n                }    //计算\n                //计算\n                var num = pmt * (1 + rate * type) - fv * rate;\n                var den = pv * rate + pmt * (1 + rate * type);\n                return Math.log(num / den) / Math.log(1 + rate);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'SLN': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //资产原值\n                var cost = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(cost)) {\n                    return cost;\n                }\n                if (!isRealNum(cost)) {\n                    return formula.error.v;\n                }\n                cost = parseFloat(cost);    //资产残值\n                //资产残值\n                var salvage = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(salvage)) {\n                    return salvage;\n                }\n                if (!isRealNum(salvage)) {\n                    return formula.error.v;\n                }\n                salvage = parseFloat(salvage);    //资产的折旧期数\n                //资产的折旧期数\n                var life = func_methods.getFirstValue(arguments[2]);\n                if (valueIsError(life)) {\n                    return life;\n                }\n                if (!isRealNum(life)) {\n                    return formula.error.v;\n                }\n                life = parseFloat(life);\n                if (life == 0) {\n                    return formula.error.d;\n                }\n                return (cost - salvage) / life;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'DURATION': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //结算日\n                var settlement = func_methods.getCellDate(arguments[0]);\n                if (valueIsError(settlement)) {\n                    return settlement;\n                }\n                if (!dayjs(settlement).isValid()) {\n                    return formula.error.v;\n                }    //到期日\n                //到期日\n                var maturity = func_methods.getCellDate(arguments[1]);\n                if (valueIsError(maturity)) {\n                    return maturity;\n                }\n                if (!dayjs(maturity).isValid()) {\n                    return formula.error.v;\n                }    //有价证券的年息票利率\n                //有价证券的年息票利率\n                var coupon = func_methods.getFirstValue(arguments[2]);\n                if (valueIsError(coupon)) {\n                    return coupon;\n                }\n                if (!isRealNum(coupon)) {\n                    return formula.error.v;\n                }\n                coupon = parseFloat(coupon);    //有价证券的年收益率\n                //有价证券的年收益率\n                var yld = func_methods.getFirstValue(arguments[3]);\n                if (valueIsError(yld)) {\n                    return yld;\n                }\n                if (!isRealNum(yld)) {\n                    return formula.error.v;\n                }\n                yld = parseFloat(yld);    //年付息次数\n                //年付息次数\n                var frequency = func_methods.getFirstValue(arguments[4]);\n                if (valueIsError(frequency)) {\n                    return frequency;\n                }\n                if (!isRealNum(frequency)) {\n                    return formula.error.v;\n                }\n                frequency = parseInt(frequency);    //日计数基准类型\n                //日计数基准类型\n                var basis = 0;\n                if (arguments.length == 6) {\n                    basis = func_methods.getFirstValue(arguments[5]);\n                    if (valueIsError(basis)) {\n                        return basis;\n                    }\n                    if (!isRealNum(basis)) {\n                        return formula.error.v;\n                    }\n                    basis = parseInt(basis);\n                }\n                if (coupon < 0 || yld < 0) {\n                    return formula.error.nm;\n                }\n                if (frequency != 1 && frequency != 2 && frequency != 4) {\n                    return formula.error.nm;\n                }\n                if (basis < 0 || basis > 4) {\n                    return formula.error.nm;\n                }\n                if (dayjs(settlement) - dayjs(maturity) >= 0) {\n                    return formula.error.nm;\n                }\n                var nper = window.luckysheet_function.COUPNUM.f(settlement, maturity, frequency, basis);\n                var sum1 = 0;\n                var sum2 = 0;\n                for (var i = 1; i <= nper; i++) {\n                    sum1 += 100 * (coupon / frequency) * i / Math.pow(1 + yld / frequency, i);\n                    sum2 += 100 * (coupon / frequency) / Math.pow(1 + yld / frequency, i);\n                }\n                var result = (sum1 + 100 * nper / Math.pow(1 + yld / frequency, nper)) / (sum2 + 100 / Math.pow(1 + yld / frequency, nper));\n                result = result / frequency;\n                return result;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'MDURATION': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //结算日\n                var settlement = func_methods.getCellDate(arguments[0]);\n                if (valueIsError(settlement)) {\n                    return settlement;\n                }\n                if (!dayjs(settlement).isValid()) {\n                    return formula.error.v;\n                }    //到期日\n                //到期日\n                var maturity = func_methods.getCellDate(arguments[1]);\n                if (valueIsError(maturity)) {\n                    return maturity;\n                }\n                if (!dayjs(maturity).isValid()) {\n                    return formula.error.v;\n                }    //有价证券的年息票利率\n                //有价证券的年息票利率\n                var coupon = func_methods.getFirstValue(arguments[2]);\n                if (valueIsError(coupon)) {\n                    return coupon;\n                }\n                if (!isRealNum(coupon)) {\n                    return formula.error.v;\n                }\n                coupon = parseFloat(coupon);    //有价证券的年收益率\n                //有价证券的年收益率\n                var yld = func_methods.getFirstValue(arguments[3]);\n                if (valueIsError(yld)) {\n                    return yld;\n                }\n                if (!isRealNum(yld)) {\n                    return formula.error.v;\n                }\n                yld = parseFloat(yld);    //年付息次数\n                //年付息次数\n                var frequency = func_methods.getFirstValue(arguments[4]);\n                if (valueIsError(frequency)) {\n                    return frequency;\n                }\n                if (!isRealNum(frequency)) {\n                    return formula.error.v;\n                }\n                frequency = parseInt(frequency);    //日计数基准类型\n                //日计数基准类型\n                var basis = 0;\n                if (arguments.length == 6) {\n                    basis = func_methods.getFirstValue(arguments[5]);\n                    if (valueIsError(basis)) {\n                        return basis;\n                    }\n                    if (!isRealNum(basis)) {\n                        return formula.error.v;\n                    }\n                    basis = parseInt(basis);\n                }\n                if (coupon < 0 || yld < 0) {\n                    return formula.error.nm;\n                }\n                if (frequency != 1 && frequency != 2 && frequency != 4) {\n                    return formula.error.nm;\n                }\n                if (basis < 0 || basis > 4) {\n                    return formula.error.nm;\n                }\n                if (dayjs(settlement) - dayjs(maturity) >= 0) {\n                    return formula.error.nm;\n                }\n                var duration = window.luckysheet_function.DURATION.f(settlement, maturity, coupon, yld, frequency, basis);\n                return duration / (1 + yld / frequency);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'BIN2DEC': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //二进制数\n                var number = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number)) {\n                    return number;\n                }\n                if (!/^[01]{1,10}$/g.test(number)) {\n                    return formula.error.nm;\n                }    //计算\n                //计算\n                var result = parseInt(number, 2);\n                var stringified = number.toString();\n                if (stringified.length === 10 && stringified.substring(0, 1) === '1') {\n                    return parseInt(stringified.substring(1), 2) - 512;\n                } else {\n                    return result;\n                }\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'BIN2HEX': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //二进制数\n                var number = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number)) {\n                    return number;\n                }    //有效位数\n                //有效位数\n                var places = null;\n                if (arguments.length == 2) {\n                    places = func_methods.getFirstValue(arguments[1]);\n                    if (valueIsError(places)) {\n                        return places;\n                    }\n                    if (!isRealNum(places)) {\n                        return formula.error.v;\n                    }\n                    places = parseInt(places);\n                }\n                if (!/^[01]{1,10}$/g.test(number)) {\n                    return formula.error.nm;\n                }    //计算\n                //计算\n                var result = parseInt(number, 2).toString(16).toUpperCase();\n                if (places == null) {\n                    return result;\n                } else {\n                    if (places < 0 || places < result.length) {\n                        return formula.error.nm;\n                    }\n                    return new Array(places - result.length + 1).join('0') + result;\n                }\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'BIN2OCT': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //二进制数\n                var number = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number)) {\n                    return number;\n                }    //有效位数\n                //有效位数\n                var places = null;\n                if (arguments.length == 2) {\n                    places = func_methods.getFirstValue(arguments[1]);\n                    if (valueIsError(places)) {\n                        return places;\n                    }\n                    if (!isRealNum(places)) {\n                        return formula.error.v;\n                    }\n                    places = parseInt(places);\n                }\n                if (!/^[01]{1,10}$/g.test(number)) {\n                    return formula.error.nm;\n                }    //计算\n                //计算\n                var stringified = number.toString();\n                if (stringified.length === 10 && stringified.substring(0, 1) === '1') {\n                    return (1073741312 + parseInt(stringified.substring(1), 2)).toString(8);\n                }\n                var result = parseInt(number, 2).toString(8);\n                if (places == null) {\n                    return result;\n                } else {\n                    if (places < 0 || places < result.length) {\n                        return formula.error.nm;\n                    }\n                    return new Array(places - result.length + 1).join('0') + result;\n                }\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'DEC2BIN': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //十进制数\n                var number = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number)) {\n                    return number;\n                }\n                if (!isRealNum(number)) {\n                    return formula.error.v;\n                }\n                number = parseFloat(number);    //有效位数\n                //有效位数\n                var places = null;\n                if (arguments.length == 2) {\n                    places = func_methods.getFirstValue(arguments[1]);\n                    if (valueIsError(places)) {\n                        return places;\n                    }\n                    if (!isRealNum(places)) {\n                        return formula.error.v;\n                    }\n                    places = parseInt(places);\n                }\n                if (!/^-?[0-9]{1,3}$/.test(number) || number < -512 || number > 511) {\n                    return formula.error.nm;\n                }    //计算\n                //计算\n                if (number < 0) {\n                    return '1' + new Array(9 - (512 + number).toString(2).length).join('0') + (512 + number).toString(2);\n                }\n                var result = parseInt(number, 10).toString(2);\n                if (places == null) {\n                    return result;\n                } else {\n                    if (places < 0 || places < result.length) {\n                        return formula.error.nm;\n                    }\n                    return new Array(places - result.length + 1).join('0') + result;\n                }\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'DEC2HEX': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //十进制数\n                var number = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number)) {\n                    return number;\n                }\n                if (!isRealNum(number)) {\n                    return formula.error.v;\n                }\n                number = parseFloat(number);    //有效位数\n                //有效位数\n                var places = null;\n                if (arguments.length == 2) {\n                    places = func_methods.getFirstValue(arguments[1]);\n                    if (valueIsError(places)) {\n                        return places;\n                    }\n                    if (!isRealNum(places)) {\n                        return formula.error.v;\n                    }\n                    places = parseInt(places);\n                }\n                if (!/^-?[0-9]{1,12}$/.test(number) || number < -549755813888 || number > 549755813887) {\n                    return formula.error.nm;\n                }    //计算\n                //计算\n                if (number < 0) {\n                    return (1099511627776 + number).toString(16).toUpperCase();\n                }\n                var result = parseInt(number, 10).toString(16).toUpperCase();\n                if (places == null) {\n                    return result;\n                } else {\n                    if (places < 0 || places < result.length) {\n                        return formula.error.nm;\n                    }\n                    return new Array(places - result.length + 1).join('0') + result;\n                }\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'DEC2OCT': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //十进制数\n                var number = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number)) {\n                    return number;\n                }\n                if (!isRealNum(number)) {\n                    return formula.error.v;\n                }\n                number = parseFloat(number);    //有效位数\n                //有效位数\n                var places = null;\n                if (arguments.length == 2) {\n                    places = func_methods.getFirstValue(arguments[1]);\n                    if (valueIsError(places)) {\n                        return places;\n                    }\n                    if (!isRealNum(places)) {\n                        return formula.error.v;\n                    }\n                    places = parseInt(places);\n                }\n                if (!/^-?[0-9]{1,9}$/.test(number) || number < -536870912 || number > 536870911) {\n                    return formula.error.nm;\n                }    //计算\n                //计算\n                if (number < 0) {\n                    return (1073741824 + number).toString(8);\n                }\n                var result = parseInt(number, 10).toString(8);\n                if (places == null) {\n                    return result;\n                } else {\n                    if (places < 0 || places < result.length) {\n                        return formula.error.nm;\n                    }\n                    return new Array(places - result.length + 1).join('0') + result;\n                }\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'HEX2BIN': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //十六进制数\n                var number = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number)) {\n                    return number;\n                }    //有效位数\n                //有效位数\n                var places = null;\n                if (arguments.length == 2) {\n                    places = func_methods.getFirstValue(arguments[1]);\n                    if (valueIsError(places)) {\n                        return places;\n                    }\n                    if (!isRealNum(places)) {\n                        return formula.error.v;\n                    }\n                    places = parseInt(places);\n                }\n                if (!/^[0-9A-Fa-f]{1,10}$/.test(number)) {\n                    return formula.error.nm;\n                }    //计算\n                //计算\n                var negative = number.length === 10 && number.substring(0, 1).toLowerCase() === 'f' ? true : false;\n                var decimal = negative ? parseInt(number, 16) - 1099511627776 : parseInt(number, 16);\n                if (decimal < -512 || decimal > 511) {\n                    return formula.error.nm;\n                }\n                if (negative) {\n                    return '1' + new Array(9 - (512 + decimal).toString(2).length).join('0') + (512 + decimal).toString(2);\n                }\n                var result = decimal.toString(2);\n                if (places == null) {\n                    return result;\n                } else {\n                    if (places < 0 || places < result.length) {\n                        return formula.error.nm;\n                    }\n                    return new Array(places - result.length + 1).join('0') + result;\n                }\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'HEX2DEC': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //十六进制数\n                var number = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number)) {\n                    return number;\n                }\n                if (!/^[0-9A-Fa-f]{1,10}$/.test(number)) {\n                    return formula.error.nm;\n                }    //计算\n                //计算\n                var decimal = parseInt(number, 16);\n                return decimal >= 549755813888 ? decimal - 1099511627776 : decimal;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'HEX2OCT': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //十六进制数\n                var number = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number)) {\n                    return number;\n                }    //有效位数\n                //有效位数\n                var places = null;\n                if (arguments.length == 2) {\n                    places = func_methods.getFirstValue(arguments[1]);\n                    if (valueIsError(places)) {\n                        return places;\n                    }\n                    if (!isRealNum(places)) {\n                        return formula.error.v;\n                    }\n                    places = parseInt(places);\n                }\n                if (!/^[0-9A-Fa-f]{1,10}$/.test(number)) {\n                    return formula.error.nm;\n                }    //计算\n                //计算\n                var decimal = parseInt(number, 16);\n                if (decimal > 536870911 && decimal < 1098974756864) {\n                    return formula.error.nm;\n                }\n                if (decimal >= 1098974756864) {\n                    return (decimal - 1098437885952).toString(8);\n                }\n                var result = decimal.toString(8);\n                if (places == null) {\n                    return result;\n                } else {\n                    if (places < 0 || places < result.length) {\n                        return formula.error.nm;\n                    }\n                    return new Array(places - result.length + 1).join('0') + result;\n                }\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'OCT2BIN': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //八进制数\n                var number = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number)) {\n                    return number;\n                }    //有效位数\n                //有效位数\n                var places = null;\n                if (arguments.length == 2) {\n                    places = func_methods.getFirstValue(arguments[1]);\n                    if (valueIsError(places)) {\n                        return places;\n                    }\n                    if (!isRealNum(places)) {\n                        return formula.error.v;\n                    }\n                    places = parseInt(places);\n                }\n                if (!/^[0-7]{1,10}$/.test(number)) {\n                    return formula.error.nm;\n                }    //计算\n                //计算\n                number = number.toString();\n                var negative = number.length === 10 && number.substring(0, 1) === '7' ? true : false;\n                var decimal = negative ? parseInt(number, 8) - 1073741824 : parseInt(number, 8);\n                if (decimal < -512 || decimal > 511) {\n                    return error.num;\n                }\n                if (negative) {\n                    return '1' + new Array(9 - (512 + decimal).toString(2).length).join('0') + (512 + decimal).toString(2);\n                }\n                var result = decimal.toString(2);\n                if (places == null) {\n                    return result;\n                } else {\n                    if (places < 0 || places < result.length) {\n                        return formula.error.nm;\n                    }\n                    return new Array(places - result.length + 1).join('0') + result;\n                }\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'OCT2DEC': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //八进制数\n                var number = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number)) {\n                    return number;\n                }\n                if (!/^[0-7]{1,10}$/.test(number)) {\n                    return formula.error.nm;\n                }    //计算\n                //计算\n                var decimal = parseInt(number, 8);\n                return decimal >= 536870912 ? decimal - 1073741824 : decimal;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'OCT2HEX': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //八进制数\n                var number = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number)) {\n                    return number;\n                }    //有效位数\n                //有效位数\n                var places = null;\n                if (arguments.length == 2) {\n                    places = func_methods.getFirstValue(arguments[1]);\n                    if (valueIsError(places)) {\n                        return places;\n                    }\n                    if (!isRealNum(places)) {\n                        return formula.error.v;\n                    }\n                    places = parseInt(places);\n                }\n                if (!/^[0-7]{1,10}$/.test(number)) {\n                    return formula.error.nm;\n                }    //计算\n                //计算\n                var decimal = parseInt(number, 8);\n                if (decimal >= 536870912) {\n                    return 'FF' + (decimal + 3221225472).toString(16).toUpperCase();\n                }\n                var result = decimal.toString(16).toUpperCase();\n                if (places == null) {\n                    return result;\n                } else {\n                    if (places < 0 || places < result.length) {\n                        return formula.error.nm;\n                    }\n                    return new Array(places - result.length + 1).join('0') + result;\n                }\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'COMPLEX': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //复数的实系数\n                var real_num = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(real_num)) {\n                    return real_num;\n                }\n                if (!isRealNum(real_num)) {\n                    return formula.error.v;\n                }\n                real_num = parseFloat(real_num);    //复数的虚系数\n                //复数的虚系数\n                var i_num = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(i_num)) {\n                    return i_num;\n                }\n                if (!isRealNum(i_num)) {\n                    return formula.error.v;\n                }\n                i_num = parseFloat(i_num);    //复数中虚系数的后缀\n                //复数中虚系数的后缀\n                var suffix = 'i';\n                if (arguments.length == 3) {\n                    suffix = arguments[2].toString();\n                }\n                if (suffix != 'i' && suffix != 'j') {\n                    return formula.error.v;\n                }    //计算\n                //计算\n                if (real_num === 0 && i_num === 0) {\n                    return 0;\n                } else if (real_num === 0) {\n                    return i_num === 1 ? suffix : i_num.toString() + suffix;\n                } else if (i_num === 0) {\n                    return real_num.toString();\n                } else {\n                    var sign = i_num > 0 ? '+' : '';\n                    return real_num.toString() + sign + (i_num === 1 ? suffix : i_num.toString() + suffix);\n                }\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'IMREAL': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //复数\n                var inumber = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(inumber)) {\n                    return inumber;\n                }\n                inumber = inumber.toString();\n                if (inumber.toLowerCase() == 'true' || inumber.toLowerCase() == 'false') {\n                    return formula.error.v;\n                }    //计算\n                //计算\n                if (inumber == '0') {\n                    return 0;\n                }\n                if ([\n                        'i',\n                        '+i',\n                        '1i',\n                        '+1i',\n                        '-i',\n                        '-1i',\n                        'j',\n                        '+j',\n                        '1j',\n                        '+1j',\n                        '-j',\n                        '-1j'\n                    ].indexOf(inumber) >= 0) {\n                    return 0;\n                }\n                var plus = inumber.indexOf('+');\n                var minus = inumber.indexOf('-');\n                if (plus === 0) {\n                    plus = inumber.indexOf('+', 1);\n                }\n                if (minus === 0) {\n                    minus = inumber.indexOf('-', 1);\n                }\n                var last = inumber.substring(inumber.length - 1, inumber.length);\n                var unit = last === 'i' || last === 'j';\n                if (plus >= 0 || minus >= 0) {\n                    if (!unit) {\n                        return formula.error.nm;\n                    }\n                    if (plus >= 0) {\n                        return isNaN(inumber.substring(0, plus)) || isNaN(inumber.substring(plus + 1, inumber.length - 1)) ? formula.error.nm : Number(inumber.substring(0, plus));\n                    } else {\n                        return isNaN(inumber.substring(0, minus)) || isNaN(inumber.substring(minus + 1, inumber.length - 1)) ? formula.error.nm : Number(inumber.substring(0, minus));\n                    }\n                } else {\n                    if (unit) {\n                        return isNaN(inumber.substring(0, inumber.length - 1)) ? formula.error.nm : 0;\n                    } else {\n                        return isNaN(inumber) ? formula.error.nm : inumber;\n                    }\n                }\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'IMAGINARY': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //复数\n                var inumber = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(inumber)) {\n                    return inumber;\n                }\n                inumber = inumber.toString();\n                if (inumber.toLowerCase() == 'true' || inumber.toLowerCase() == 'false') {\n                    return formula.error.v;\n                }    //计算\n                //计算\n                if (inumber == '0') {\n                    return 0;\n                }\n                if ([\n                        'i',\n                        'j'\n                    ].indexOf(inumber) >= 0) {\n                    return 1;\n                }\n                inumber = inumber.replace('+i', '+1i').replace('-i', '-1i').replace('+j', '+1j').replace('-j', '-1j');\n                var plus = inumber.indexOf('+');\n                var minus = inumber.indexOf('-');\n                if (plus === 0) {\n                    plus = inumber.indexOf('+', 1);\n                }\n                if (minus === 0) {\n                    minus = inumber.indexOf('-', 1);\n                }\n                var last = inumber.substring(inumber.length - 1, inumber.length);\n                var unit = last === 'i' || last === 'j';\n                if (plus >= 0 || minus >= 0) {\n                    if (!unit) {\n                        return formula.error.nm;\n                    }\n                    if (plus >= 0) {\n                        return isNaN(inumber.substring(0, plus)) || isNaN(inumber.substring(plus + 1, inumber.length - 1)) ? formula.error.nm : Number(inumber.substring(plus + 1, inumber.length - 1));\n                    } else {\n                        return isNaN(inumber.substring(0, minus)) || isNaN(inumber.substring(minus + 1, inumber.length - 1)) ? formula.error.nm : -Number(inumber.substring(minus + 1, inumber.length - 1));\n                    }\n                } else {\n                    if (unit) {\n                        return isNaN(inumber.substring(0, inumber.length - 1)) ? formula.error.nm : inumber.substring(0, inumber.length - 1);\n                    } else {\n                        return isNaN(inumber) ? formula.error.nm : 0;\n                    }\n                }\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'IMCONJUGATE': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //复数\n                var inumber = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(inumber)) {\n                    return inumber;\n                }\n                inumber = inumber.toString();\n                var x = window.luckysheet_function.IMREAL.f(inumber);\n                if (valueIsError(x)) {\n                    return x;\n                }\n                var y = window.luckysheet_function.IMAGINARY.f(inumber);\n                if (valueIsError(y)) {\n                    return y;\n                }\n                var unit = inumber.substring(inumber.length - 1);\n                unit = unit === 'i' || unit === 'j' ? unit : 'i';\n                return y !== 0 ? window.luckysheet_function.COMPLEX.f(x, -y, unit) : inumber;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'IMABS': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var x = window.luckysheet_function.IMREAL.f(arguments[0]);\n                if (valueIsError(x)) {\n                    return x;\n                }\n                var y = window.luckysheet_function.IMAGINARY.f(arguments[0]);\n                if (valueIsError(y)) {\n                    return y;\n                }\n                return Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2));\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'DELTA': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //第一个数字\n                var number1 = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number1)) {\n                    return number1;\n                }\n                if (!isRealNum(number1)) {\n                    return formula.error.v;\n                }\n                number1 = parseFloat(number1);    //第二个数字\n                //第二个数字\n                var number2 = 0;\n                if (arguments.length == 2) {\n                    number2 = func_methods.getFirstValue(arguments[1]);\n                    if (valueIsError(number2)) {\n                        return number2;\n                    }\n                    if (!isRealNum(number2)) {\n                        return formula.error.v;\n                    }\n                    number2 = parseFloat(number2);\n                }\n                return number1 === number2 ? 1 : 0;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'IMSUM': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var x = window.luckysheet_function.IMREAL.f(arguments[0]);\n                if (valueIsError(x)) {\n                    return x;\n                }\n                var y = window.luckysheet_function.IMAGINARY.f(arguments[0]);\n                if (valueIsError(y)) {\n                    return y;\n                }\n                var result = arguments[0];\n                for (var i = 1; i < arguments.length; i++) {\n                    var a = window.luckysheet_function.IMREAL.f(result);\n                    if (valueIsError(a)) {\n                        return a;\n                    }\n                    var b = window.luckysheet_function.IMAGINARY.f(result);\n                    if (valueIsError(b)) {\n                        return b;\n                    }\n                    var c = window.luckysheet_function.IMREAL.f(arguments[i]);\n                    if (valueIsError(c)) {\n                        return c;\n                    }\n                    var d = window.luckysheet_function.IMAGINARY.f(arguments[i]);\n                    if (valueIsError(d)) {\n                        return d;\n                    }\n                    result = window.luckysheet_function.COMPLEX.f(a + c, b + d);\n                }\n                return result;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'IMSUB': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //inumber1\n                var inumber1 = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(inumber1)) {\n                    return inumber1;\n                }\n                inumber1 = inumber1.toString();\n                if (inumber1.toLowerCase() == 'true' || inumber1.toLowerCase() == 'false') {\n                    return formula.error.v;\n                }\n                var a = window.luckysheet_function.IMREAL.f(inumber1);\n                if (valueIsError(a)) {\n                    return a;\n                }\n                var b = window.luckysheet_function.IMAGINARY.f(inumber1);\n                if (valueIsError(b)) {\n                    return b;\n                }    //inumber2\n                //inumber2\n                var inumber2 = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(inumber2)) {\n                    return inumber2;\n                }\n                inumber2 = inumber2.toString();\n                if (inumber2.toLowerCase() == 'true' || inumber2.toLowerCase() == 'false') {\n                    return formula.error.v;\n                }\n                var c = window.luckysheet_function.IMREAL.f(inumber2);\n                if (valueIsError(c)) {\n                    return c;\n                }\n                var d = window.luckysheet_function.IMAGINARY.f(inumber2);\n                if (valueIsError(d)) {\n                    return d;\n                }    //计算\n                //计算\n                var unit1 = inumber1.substring(inumber1.length - 1);\n                var unit2 = inumber2.substring(inumber2.length - 1);\n                var unit = 'i';\n                if (unit1 === 'j') {\n                    unit = 'j';\n                } else if (unit2 === 'j') {\n                    unit = 'j';\n                }\n                return window.luckysheet_function.COMPLEX.f(a - c, b - d, unit);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'IMPRODUCT': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var x = window.luckysheet_function.IMREAL.f(arguments[0]);\n                if (valueIsError(x)) {\n                    return x;\n                }\n                var y = window.luckysheet_function.IMAGINARY.f(arguments[0]);\n                if (valueIsError(y)) {\n                    return y;\n                }\n                var result = arguments[0];\n                for (var i = 1; i < arguments.length; i++) {\n                    var a = window.luckysheet_function.IMREAL.f(result);\n                    if (valueIsError(a)) {\n                        return a;\n                    }\n                    var b = window.luckysheet_function.IMAGINARY.f(result);\n                    if (valueIsError(b)) {\n                        return b;\n                    }\n                    var c = window.luckysheet_function.IMREAL.f(arguments[i]);\n                    if (valueIsError(c)) {\n                        return c;\n                    }\n                    var d = window.luckysheet_function.IMAGINARY.f(arguments[i]);\n                    if (valueIsError(d)) {\n                        return d;\n                    }\n                    result = window.luckysheet_function.COMPLEX.f(a * c - b * d, a * d + b * c);\n                }\n                return result;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'IMDIV': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //inumber1\n                var inumber1 = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(inumber1)) {\n                    return inumber1;\n                }\n                inumber1 = inumber1.toString();\n                if (inumber1.toLowerCase() == 'true' || inumber1.toLowerCase() == 'false') {\n                    return formula.error.v;\n                }\n                var a = window.luckysheet_function.IMREAL.f(inumber1);\n                if (valueIsError(a)) {\n                    return a;\n                }\n                var b = window.luckysheet_function.IMAGINARY.f(inumber1);\n                if (valueIsError(b)) {\n                    return b;\n                }    //inumber2\n                //inumber2\n                var inumber2 = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(inumber2)) {\n                    return inumber2;\n                }\n                inumber2 = inumber2.toString();\n                if (inumber2.toLowerCase() == 'true' || inumber2.toLowerCase() == 'false') {\n                    return formula.error.v;\n                }\n                var c = window.luckysheet_function.IMREAL.f(inumber2);\n                if (valueIsError(c)) {\n                    return c;\n                }\n                var d = window.luckysheet_function.IMAGINARY.f(inumber2);\n                if (valueIsError(d)) {\n                    return d;\n                }    //计算\n                //计算\n                var unit1 = inumber1.substring(inumber1.length - 1);\n                var unit2 = inumber2.substring(inumber2.length - 1);\n                var unit = 'i';\n                if (unit1 === 'j') {\n                    unit = 'j';\n                } else if (unit2 === 'j') {\n                    unit = 'j';\n                }\n                if (c === 0 && d === 0) {\n                    return formula.error.nm;\n                }\n                var den = c * c + d * d;\n                return window.luckysheet_function.COMPLEX.f((a * c + b * d) / den, (b * c - a * d) / den, unit);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'NOT': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //logical\n                var logical = func_methods.getCellBoolen(arguments[0]);\n                if (valueIsError(logical)) {\n                    return logical;\n                }\n                return !logical;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'TRUE': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                return true;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'FALSE': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                return false;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'AND': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var result = true;\n                for (var i = 0; i < arguments.length; i++) {\n                    var logical = func_methods.getCellBoolen(arguments[i]);\n                    if (valueIsError(logical)) {\n                        return logical;\n                    }\n                    if (!logical) {\n                        result = false;\n                        break;\n                    }\n                }\n                return result;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'IFERROR': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var value_if_error = func_methods.getFirstValue(arguments[1], 'text');\n                var value = func_methods.getFirstValue(arguments[0], 'text');    // (getObjType(value) === 'string' && $.trim(value) === ''It means that the cell associated with IFERROR has been deleted by keyboard\n                // (getObjType(value) === 'string' && $.trim(value) === ''It means that the cell associated with IFERROR has been deleted by keyboard\n                if (valueIsError(value) || getObjType(value) === 'string' && $.trim(value) === '') {\n                    return value_if_error;\n                }\n                return value;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'IF': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //要测试的条件\n                var logical_test = func_methods.getCellBoolen(arguments[0]);\n                if (valueIsError(logical_test)) {\n                    return logical_test;\n                }    //结果为 TRUE\n                //结果为 TRUE\n                var value_if_true = func_methods.getFirstValue(arguments[1], 'text');\n                if (valueIsError(value_if_true) && value_if_false != error.d) {\n                    return value_if_true;\n                }    //结果为 FALSE\n                //结果为 FALSE\n                var value_if_false = '';\n                if (arguments.length == 3) {\n                    value_if_false = func_methods.getFirstValue(arguments[2], 'text');\n                    if (valueIsError(value_if_false) && value_if_false != error.d) {\n                        return value_if_false;\n                    }\n                }\n                if (logical_test) {\n                    return value_if_true;\n                } else {\n                    return value_if_false;\n                }\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'OR': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var result = false;\n                for (var i = 0; i < arguments.length; i++) {\n                    var logical = func_methods.getCellBoolen(arguments[i]);\n                    if (valueIsError(logical)) {\n                        return logical;\n                    }\n                    if (logical) {\n                        result = true;\n                        break;\n                    }\n                }\n                return result;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'NE': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //value1\n                var value1 = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(value1)) {\n                    return value1;\n                }    //value2\n                //value2\n                var value2 = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(value2)) {\n                    return value2;\n                }\n                return value1 != value2;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'EQ': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //value1\n                var value1 = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(value1)) {\n                    return value1;\n                }    //value2\n                //value2\n                var value2 = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(value2)) {\n                    return value2;\n                }\n                return value1 == value2;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'GT': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //value1\n                var value1 = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(value1)) {\n                    return value1;\n                }\n                if (!isRealNum(value1)) {\n                    return formula.error.v;\n                }\n                value1 = parseFloat(value1);    //value2\n                //value2\n                var value2 = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(value2)) {\n                    return value2;\n                }\n                if (!isRealNum(value2)) {\n                    return formula.error.v;\n                }\n                value2 = parseFloat(value2);\n                return value1 > value2;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'GTE': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //value1\n                var value1 = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(value1)) {\n                    return value1;\n                }\n                if (!isRealNum(value1)) {\n                    return formula.error.v;\n                }\n                value1 = parseFloat(value1);    //value2\n                //value2\n                var value2 = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(value2)) {\n                    return value2;\n                }\n                if (!isRealNum(value2)) {\n                    return formula.error.v;\n                }\n                value2 = parseFloat(value2);\n                return value1 >= value2;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'LT': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //value1\n                var value1 = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(value1)) {\n                    return value1;\n                }\n                if (!isRealNum(value1)) {\n                    return formula.error.v;\n                }\n                value1 = parseFloat(value1);    //value2\n                //value2\n                var value2 = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(value2)) {\n                    return value2;\n                }\n                if (!isRealNum(value2)) {\n                    return formula.error.v;\n                }\n                value2 = parseFloat(value2);\n                return value1 < value2;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'LTE': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //value1\n                var value1 = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(value1)) {\n                    return value1;\n                }\n                if (!isRealNum(value1)) {\n                    return formula.error.v;\n                }\n                value1 = parseFloat(value1);    //value2\n                //value2\n                var value2 = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(value2)) {\n                    return value2;\n                }\n                if (!isRealNum(value2)) {\n                    return formula.error.v;\n                }\n                value2 = parseFloat(value2);\n                return value1 <= value2;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'ADD': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //value1\n                var value1 = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(value1)) {\n                    return value1;\n                }\n                if (!isRealNum(value1)) {\n                    return formula.error.v;\n                }\n                value1 = parseFloat(value1);    //value2\n                //value2\n                var value2 = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(value2)) {\n                    return value2;\n                }\n                if (!isRealNum(value2)) {\n                    return formula.error.v;\n                }\n                value2 = parseFloat(value2);\n                return value1 + value2;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'MINUS': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //value1\n                var value1 = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(value1)) {\n                    return value1;\n                }\n                if (!isRealNum(value1)) {\n                    return formula.error.v;\n                }\n                value1 = parseFloat(value1);    //value2\n                //value2\n                var value2 = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(value2)) {\n                    return value2;\n                }\n                if (!isRealNum(value2)) {\n                    return formula.error.v;\n                }\n                value2 = parseFloat(value2);\n                return value1 - value2;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'MULTIPLY': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //value1\n                var value1 = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(value1)) {\n                    return value1;\n                }\n                if (!isRealNum(value1)) {\n                    return formula.error.v;\n                }\n                value1 = parseFloat(value1);    //value2\n                //value2\n                var value2 = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(value2)) {\n                    return value2;\n                }\n                if (!isRealNum(value2)) {\n                    return formula.error.v;\n                }\n                value2 = parseFloat(value2);\n                return value1 * value2;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'DIVIDE': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //value1\n                var value1 = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(value1)) {\n                    return value1;\n                }\n                if (!isRealNum(value1)) {\n                    return formula.error.v;\n                }\n                value1 = parseFloat(value1);    //value2\n                //value2\n                var value2 = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(value2)) {\n                    return value2;\n                }\n                if (!isRealNum(value2)) {\n                    return formula.error.v;\n                }\n                value2 = parseFloat(value2);\n                if (value2 == 0) {\n                    return formula.error.d;\n                }\n                return value1 / value2;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'CONCAT': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //value1\n                var value1 = func_methods.getFirstValue(arguments[0], 'text');\n                if (valueIsError(value1)) {\n                    return value1;\n                }    //value2\n                //value2\n                var value2 = func_methods.getFirstValue(arguments[1], 'text');\n                if (valueIsError(value2)) {\n                    return value2;\n                }\n                return value1 + '' + value2;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'UNARY_PERCENT': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //要作为百分比解释的数值\n                var number = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number)) {\n                    return number;\n                }\n                if (!isRealNum(number)) {\n                    return formula.error.v;\n                }\n                number = parseFloat(number);\n                var result = number / 100;\n                return Math.round(result * 100) / 100;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'CONCATENATE': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var result = '';\n                for (var i = 0; i < arguments.length; i++) {\n                    var text = func_methods.getFirstValue(arguments[i], 'text');\n                    if (valueIsError(text)) {\n                        return text;\n                    }\n                    result = result + '' + text;\n                }\n                return result;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'CODE': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //字符串\n                var text = func_methods.getFirstValue(arguments[0], 'text');\n                if (valueIsError(text)) {\n                    return text;\n                }\n                if (text == '') {\n                    return formula.error.v;\n                }\n                return text.charCodeAt(0);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'CHAR': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //数字\n                var number = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number)) {\n                    return number;\n                }\n                if (!isRealNum(number)) {\n                    return formula.error.v;\n                }\n                number = parseInt(number);\n                if (number < 1 || number > 255) {\n                    return formula.error.v;\n                }\n                return String.fromCharCode(number);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'ARABIC': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //字符串\n                var text = func_methods.getFirstValue(arguments[0], 'text');\n                if (valueIsError(text)) {\n                    return text;\n                }\n                text = text.toString().toUpperCase();\n                if (!/^M*(?:D?C{0,3}|C[MD])(?:L?X{0,3}|X[CL])(?:V?I{0,3}|I[XV])$/.test(text)) {\n                    return formula.error.v;\n                }\n                var r = 0;\n                text.replace(/[MDLV]|C[MD]?|X[CL]?|I[XV]?/g, function (i) {\n                    r += {\n                        M: 1000,\n                        CM: 900,\n                        D: 500,\n                        CD: 400,\n                        C: 100,\n                        XC: 90,\n                        L: 50,\n                        XL: 40,\n                        X: 10,\n                        IX: 9,\n                        V: 5,\n                        IV: 4,\n                        I: 1\n                    }[i];\n                });\n                return r;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'ROMAN': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //数字\n                var number = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number)) {\n                    return number;\n                }\n                if (!isRealNum(number)) {\n                    return formula.error.v;\n                }\n                number = parseInt(number);\n                if (number == 0) {\n                    return '';\n                } else if (number < 1 || number > 3999) {\n                    return formula.error.v;\n                }    //计算\n                //计算\n                function convert(num) {\n                    var a = [\n                        [\n                            '',\n                            'I',\n                            'II',\n                            'III',\n                            'IV',\n                            'V',\n                            'VI',\n                            'VII',\n                            'VIII',\n                            'IX'\n                        ],\n                        [\n                            '',\n                            'X',\n                            'XX',\n                            'XXX',\n                            'XL',\n                            'L',\n                            'LX',\n                            'LXX',\n                            'LXXX',\n                            'XC'\n                        ],\n                        [\n                            '',\n                            'C',\n                            'CC',\n                            'CCC',\n                            'CD',\n                            'D',\n                            'DC',\n                            'DCC',\n                            'DCCC',\n                            'CM'\n                        ],\n                        [\n                            '',\n                            'M',\n                            'MM',\n                            'MMM'\n                        ]\n                    ];\n                    var i = a[3][Math.floor(num / 1000)];\n                    var j = a[2][Math.floor(num % 1000 / 100)];\n                    var k = a[1][Math.floor(num % 100 / 10)];\n                    var l = a[0][num % 10];\n                    return i + j + k + l;\n                }\n                return convert(number);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'REGEXEXTRACT': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //输入文本\n                var text = func_methods.getFirstValue(arguments[0], 'text');\n                if (valueIsError(text)) {\n                    return text;\n                }    //表达式\n                //表达式\n                var regular_expression = func_methods.getFirstValue(arguments[1], 'text');\n                if (valueIsError(regular_expression)) {\n                    return regular_expression;\n                }\n                var match = text.match(new RegExp(regular_expression));\n                return match ? match[match.length > 1 ? match.length - 1 : 0] : null;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'REGEXMATCH': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //输入文本\n                var text = func_methods.getFirstValue(arguments[0], 'text');\n                if (valueIsError(text)) {\n                    return text;\n                }    //表达式\n                //表达式\n                var regular_expression = func_methods.getFirstValue(arguments[1], 'text');\n                if (valueIsError(regular_expression)) {\n                    return regular_expression;\n                }\n                var match = text.match(new RegExp(regular_expression));\n                return match ? true : false;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'REGEXREPLACE': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //输入文本\n                var text = func_methods.getFirstValue(arguments[0], 'text');\n                if (valueIsError(text)) {\n                    return text;\n                }    //表达式\n                //表达式\n                var regular_expression = func_methods.getFirstValue(arguments[1], 'text');\n                if (valueIsError(regular_expression)) {\n                    return regular_expression;\n                }    //插入文本\n                //插入文本\n                var replacement = func_methods.getFirstValue(arguments[2], 'text');\n                if (valueIsError(replacement)) {\n                    return replacement;\n                }\n                return text.replace(new RegExp(regular_expression), replacement);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'T': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //文本\n                var value = func_methods.getFirstValue(arguments[0], 'text');\n                if (valueIsError(value)) {\n                    return value;\n                }\n                return getObjType(value) == 'string' ? value : '';\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'FIXED': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //要进行舍入并转换为文本的数字\n                var number = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number)) {\n                    return number;\n                }\n                if (!isRealNum(number)) {\n                    return formula.error.v;\n                }\n                number = parseFloat(number);    //小数位数\n                //小数位数\n                var decimals = 2;\n                if (arguments.length >= 2) {\n                    decimals = func_methods.getFirstValue(arguments[1]);\n                    if (valueIsError(decimals)) {\n                        return decimals;\n                    }\n                    if (!isRealNum(decimals)) {\n                        return formula.error.v;\n                    }\n                    decimals = parseInt(decimals);\n                }    //逻辑值\n                //逻辑值\n                var no_commas = false;\n                if (arguments.length == 3) {\n                    no_commas = func_methods.getCellBoolen(arguments[2]);\n                    if (valueIsError(no_commas)) {\n                        return no_commas;\n                    }\n                }\n                if (decimals > 127) {\n                    return formula.error.v;\n                }    //计算\n                //计算\n                var format = no_commas ? '0' : '#,##0';\n                if (decimals <= 0) {\n                    number = Math.round(number * Math.pow(10, decimals)) / Math.pow(10, decimals);\n                } else if (decimals > 0) {\n                    format += '.' + new Array(decimals + 1).join('0');\n                }\n                return update(format, number);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'FIND': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //要查找的文本\n                var find_text = func_methods.getFirstValue(arguments[0], 'text');\n                if (valueIsError(find_text)) {\n                    return find_text;\n                }\n                find_text = find_text.toString();    //包含要查找文本的文本\n                //包含要查找文本的文本\n                var within_text = func_methods.getFirstValue(arguments[1], 'text');\n                if (valueIsError(within_text)) {\n                    return within_text;\n                }\n                within_text = within_text.toString();    //指定开始进行查找的字符\n                //指定开始进行查找的字符\n                var start_num = 1;\n                if (arguments.length == 3) {\n                    start_num = func_methods.getFirstValue(arguments[2]);\n                    if (valueIsError(start_num)) {\n                        return start_num;\n                    }\n                    if (!isRealNum(start_num)) {\n                        return formula.error.v;\n                    }\n                    start_num = parseFloat(start_num);\n                }\n                if (start_num < 0 || start_num > within_text.length) {\n                    return formula.error.v;\n                }\n                if (find_text == '') {\n                    return start_num;\n                }\n                if (within_text.indexOf(find_text) == -1) {\n                    return formula.error.v;\n                }\n                var result = within_text.indexOf(find_text, start_num - 1) + 1;\n                return result;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'FINDB': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //要查找的文本\n                var find_text = func_methods.getFirstValue(arguments[0], 'text');\n                if (valueIsError(find_text)) {\n                    return find_text;\n                }\n                find_text = find_text.toString();    //包含要查找文本的文本\n                //包含要查找文本的文本\n                var within_text = func_methods.getFirstValue(arguments[1], 'text');\n                if (valueIsError(within_text)) {\n                    return within_text;\n                }\n                within_text = within_text.toString();    //指定开始进行查找的字符\n                //指定开始进行查找的字符\n                var start_num = 1;\n                if (arguments.length == 3) {\n                    start_num = func_methods.getFirstValue(arguments[2]);\n                    if (valueIsError(start_num)) {\n                        return start_num;\n                    }\n                    if (!isRealNum(start_num)) {\n                        return formula.error.v;\n                    }\n                    start_num = parseFloat(start_num);\n                }\n                if (start_num < 0 || start_num > within_text.length) {\n                    return formula.error.v;\n                }\n                if (find_text == '') {\n                    return start_num;\n                }\n                if (within_text.indexOf(find_text) == -1) {\n                    return formula.error.v;\n                }\n                var strArr = within_text.split('');\n                var index = within_text.indexOf(find_text, start_num - 1);\n                var result = 0;\n                for (var i = 0; i < index; i++) {\n                    if (/[^\\x00-\\xff]/g.test(strArr[i])) {\n                        result += 2;\n                    } else {\n                        result += 1;\n                    }\n                }\n                return result;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'JOIN': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //定界符\n                var separator = func_methods.getFirstValue(arguments[0], 'text');\n                if (valueIsError(separator)) {\n                    return separator;\n                }    //值或数组\n                //值或数组\n                var dataArr = [];\n                for (var i = 1; i < arguments.length; i++) {\n                    var data = arguments[i];\n                    if (getObjType(data) == 'array') {\n                        if (getObjType(data[0]) == 'array' && !func_methods.isDyadicArr(data)) {\n                            return formula.error.v;\n                        }\n                        dataArr = dataArr.concat(func_methods.getDataArr(data, false));\n                    } else if (getObjType(data) == 'object' && data.startCell != null) {\n                        dataArr = dataArr.concat(func_methods.getCellDataArr(data, 'text', false));\n                    } else {\n                        dataArr.push(data);\n                    }\n                }\n                return dataArr.join(separator);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'LEFT': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //包含要提取���字符的文本字符串\n                var text = func_methods.getFirstValue(arguments[0], 'text');\n                if (valueIsError(text)) {\n                    return text;\n                }\n                text = text.toString();    //提取的字符的数量\n                //提取的字符的数量\n                var num_chars = 1;\n                if (arguments.length == 2) {\n                    num_chars = func_methods.getFirstValue(arguments[1]);\n                    if (valueIsError(num_chars)) {\n                        return num_chars;\n                    }\n                    if (!isRealNum(num_chars)) {\n                        return formula.error.v;\n                    }\n                    num_chars = parseInt(num_chars);\n                }\n                if (num_chars < 0) {\n                    return formula.error.v;\n                }    //计算\n                //计算\n                if (num_chars >= text.length) {\n                    return text;\n                } else if (num_chars == 0) {\n                    return '';\n                } else {\n                    return text.substr(0, num_chars);\n                }\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'RIGHT': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //包含要提取的字符的文本字符串\n                var text = func_methods.getFirstValue(arguments[0], 'text');\n                if (valueIsError(text)) {\n                    return text;\n                }\n                text = text.toString();    //提取的字符的数量\n                //提取的字符的数量\n                var num_chars = 1;\n                if (arguments.length == 2) {\n                    num_chars = func_methods.getFirstValue(arguments[1]);\n                    if (valueIsError(num_chars)) {\n                        return num_chars;\n                    }\n                    if (!isRealNum(num_chars)) {\n                        return formula.error.v;\n                    }\n                    num_chars = parseInt(num_chars);\n                }\n                if (num_chars < 0) {\n                    return formula.error.v;\n                }    //计算\n                //计算\n                if (num_chars >= text.length) {\n                    return text;\n                } else if (num_chars == 0) {\n                    return '';\n                } else {\n                    return text.substr(-num_chars, num_chars);\n                }\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'MID': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //包含要提取的字符的文本字符串\n                var text = func_methods.getFirstValue(arguments[0], 'text');\n                if (valueIsError(text)) {\n                    return text;\n                }\n                text = text.toString();    //开始提取的位置\n                //开始提取的位置\n                var start_num = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(start_num)) {\n                    return start_num;\n                }\n                if (!isRealNum(start_num)) {\n                    return formula.error.v;\n                }\n                start_num = parseInt(start_num);    //提取的字符的数量\n                //提取的字符的数量\n                var num_chars = func_methods.getFirstValue(arguments[2]);\n                if (valueIsError(num_chars)) {\n                    return num_chars;\n                }\n                if (!isRealNum(num_chars)) {\n                    return formula.error.v;\n                }\n                num_chars = parseInt(num_chars);\n                if (start_num < 1 || num_chars < 0) {\n                    return formula.error.v;\n                }    //计算\n                //计算\n                if (start_num > text.length) {\n                    return '';\n                }\n                if (start_num + num_chars > text.length) {\n                    return text.substr(start_num - 1, text.length - start_num + 1);\n                }\n                return text.substr(start_num - 1, num_chars);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'LEN': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //字符串\n                var text = func_methods.getFirstValue(arguments[0], 'text');\n                if (valueIsError(text)) {\n                    return text;\n                }\n                text = text.toString();\n                return text.length;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'LENB': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //字符串\n                var text = func_methods.getFirstValue(arguments[0], 'text');\n                if (valueIsError(text)) {\n                    return text;\n                }\n                text = text.toString();\n                return text.replace(/[^\\x00-\\xff]/g, 'aa').length;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'LOWER': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //字符串\n                var text = func_methods.getFirstValue(arguments[0], 'text');\n                if (valueIsError(text)) {\n                    return text;\n                }\n                text = text.toString();\n                return text ? text.toLowerCase() : text;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'UPPER': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //字符串\n                var text = func_methods.getFirstValue(arguments[0], 'text');\n                if (valueIsError(text)) {\n                    return text;\n                }\n                text = text.toString();\n                return text ? text.toUpperCase() : text;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'EXACT': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //字符串1\n                var text1 = func_methods.getFirstValue(arguments[0], 'text');\n                if (valueIsError(text1)) {\n                    return text1;\n                }\n                text1 = text1.toString();    //字符串2\n                //字符串2\n                var text2 = func_methods.getFirstValue(arguments[1], 'text');\n                if (valueIsError(text2)) {\n                    return text2;\n                }\n                text2 = text2.toString();\n                return text1 === text2;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'REPLACE': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //字符串1\n                var old_text = func_methods.getFirstValue(arguments[0], 'text');\n                if (valueIsError(old_text)) {\n                    return old_text;\n                }\n                old_text = old_text.toString();    //进行替换操作的位置\n                //进行替换操作的位置\n                var start_num = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(start_num)) {\n                    return start_num;\n                }\n                if (!isRealNum(start_num)) {\n                    return formula.error.v;\n                }\n                start_num = parseInt(start_num);    //要在文本中替换的字符个数\n                //要在文本中替换的字符个数\n                var num_chars = func_methods.getFirstValue(arguments[2]);\n                if (valueIsError(num_chars)) {\n                    return num_chars;\n                }\n                if (!isRealNum(num_chars)) {\n                    return formula.error.v;\n                }\n                num_chars = parseInt(num_chars);    //字符串2\n                //字符串2\n                var new_text = func_methods.getFirstValue(arguments[3], 'text');\n                if (valueIsError(new_text)) {\n                    return new_text;\n                }\n                new_text = new_text.toString();\n                return old_text.substr(0, start_num - 1) + new_text + old_text.substr(start_num - 1 + num_chars);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'REPT': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //字符串1\n                var text = func_methods.getFirstValue(arguments[0], 'text');\n                if (valueIsError(text)) {\n                    return text;\n                }\n                text = text.toString();    //重复次数\n                //重复次数\n                var number_times = func_methods.getFirstValue(arguments[1]);\n                if (valueIsError(number_times)) {\n                    return number_times;\n                }\n                if (!isRealNum(number_times)) {\n                    return formula.error.v;\n                }\n                number_times = parseInt(number_times);\n                if (number_times < 0) {\n                    return formula.error.v;\n                }\n                if (number_times > 100) {\n                    number_times = 100;\n                }\n                return new Array(number_times + 1).join(text);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'SEARCH': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //字符串1\n                var find_text = func_methods.getFirstValue(arguments[0], 'text');\n                if (valueIsError(find_text)) {\n                    return find_text;\n                }\n                find_text = find_text.toString();    //字符串2\n                //字符串2\n                var within_text = func_methods.getFirstValue(arguments[1], 'text');\n                if (valueIsError(within_text)) {\n                    return within_text;\n                }\n                within_text = within_text.toString();    //开始位置\n                //开始位置\n                var start_num = 1;\n                if (arguments.length == 3) {\n                    start_num = func_methods.getFirstValue(arguments[2]);\n                    if (valueIsError(start_num)) {\n                        return start_num;\n                    }\n                    if (!isRealNum(start_num)) {\n                        return formula.error.v;\n                    }\n                    start_num = parseInt(start_num);\n                }\n                if (start_num <= 0 || start_num > within_text.length) {\n                    return formula.error.v;\n                }\n                var foundAt = within_text.toLowerCase().indexOf(find_text.toLowerCase(), start_num - 1) + 1;\n                return foundAt === 0 ? formula.error.v : foundAt;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'SUBSTITUTE': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //需要替换其中字符的文本\n                var text = func_methods.getFirstValue(arguments[0], 'text');\n                if (valueIsError(text)) {\n                    return text;\n                }\n                text = text.toString();    //需要替换的文本\n                //需要替换的文本\n                var old_text = func_methods.getFirstValue(arguments[1], 'text');\n                if (valueIsError(old_text)) {\n                    return old_text;\n                }\n                old_text = old_text.toString();    //用于替换 old_text 的文本\n                //用于替换 old_text 的文本\n                var new_text = func_methods.getFirstValue(arguments[2], 'text');\n                if (valueIsError(new_text)) {\n                    return new_text;\n                }\n                new_text = new_text.toString();    //instance_num\n                //instance_num\n                var instance_num = null;\n                if (arguments.length == 4) {\n                    instance_num = func_methods.getFirstValue(arguments[3]);\n                    if (valueIsError(instance_num)) {\n                        return instance_num;\n                    }\n                    if (!isRealNum(instance_num)) {\n                        return formula.error.v;\n                    }\n                    instance_num = parseInt(instance_num);\n                }    //计算\n                //计算\n                var reg = new RegExp(old_text, 'g');\n                var result;\n                if (instance_num == null) {\n                    result = text.replace(reg, new_text);\n                } else {\n                    if (instance_num <= 0) {\n                        return formula.error.v;\n                    }\n                    var match = text.match(reg);\n                    if (match == null || instance_num > match.length) {\n                        return text;\n                    } else {\n                        var len = old_text.length;\n                        var index = 0;\n                        for (var i = 1; i <= instance_num; i++) {\n                            index = text.indexOf(old_text, index) + 1;\n                        }\n                        result = text.substring(0, index - 1) + new_text + text.substring(index - 1 + len);\n                    }\n                }\n                return result;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'CLEAN': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //字符串\n                var text = func_methods.getFirstValue(arguments[0], 'text');\n                if (valueIsError(text)) {\n                    return text;\n                }\n                text = text.toString();\n                var textArr = [];\n                for (var i = 0; i < text.length; i++) {\n                    var code = text.charCodeAt(i);\n                    if (/[\\u4e00-\\u9fa5]/g.test(text.charAt(i)) || code > 31 && code < 127) {\n                        textArr.push(text.charAt(i));\n                    }\n                }\n                return textArr.join('');\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'TEXT': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //数字\n                var value = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(value)) {\n                    return value;\n                }\n                if (!isRealNum(value)) {\n                    return formula.error.v;\n                }\n                value = parseFloat(value);    //格式\n                //格式\n                var format_text = func_methods.getFirstValue(arguments[1], 'text');\n                if (valueIsError(format_text)) {\n                    return format_text;\n                }\n                format_text = format_text.toString();\n                return update(format_text, value);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'TRIM': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //字符串\n                var text = func_methods.getFirstValue(arguments[0], 'text');\n                if (valueIsError(text)) {\n                    return text;\n                }\n                text = text.toString();\n                return text.replace(/ +/g, ' ').trim();\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'VALUE': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //字符串\n                var text = func_methods.getFirstValue(arguments[0], 'text');\n                if (valueIsError(text)) {\n                    return text;\n                }\n                text = text.toString();\n                return genarate(text)[2];\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'PROPER': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //字符串\n                var text = func_methods.getFirstValue(arguments[0], 'text');\n                if (valueIsError(text)) {\n                    return text;\n                }\n                text = text.toString().toLowerCase();\n                return text.replace(/[a-zA-Z]+/g, function (word) {\n                    return word.substring(0, 1).toUpperCase() + word.substring(1);\n                });\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'CONVERT': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //数字\n                var number = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(number)) {\n                    return number;\n                }\n                if (!isRealNum(number)) {\n                    return formula.error.v;\n                }\n                number = parseFloat(number);    //数值的单位\n                //数值的单位\n                var from_unit = func_methods.getFirstValue(arguments[1], 'text');\n                if (valueIsError(from_unit)) {\n                    return from_unit;\n                }\n                from_unit = from_unit.toString();    //结果的单位\n                //结果的单位\n                var to_unit = func_methods.getFirstValue(arguments[2], 'text');\n                if (valueIsError(to_unit)) {\n                    return to_unit;\n                }\n                to_unit = to_unit.toString();    //计算\n                //计算\n                var units = [\n                    [\n                        'a.u. of action',\n                        '?',\n                        null,\n                        'action',\n                        false,\n                        false,\n                        1.05457168181818e-34\n                    ],\n                    [\n                        'a.u. of charge',\n                        'e',\n                        null,\n                        'electric_charge',\n                        false,\n                        false,\n                        1.60217653141414e-19\n                    ],\n                    [\n                        'a.u. of energy',\n                        'Eh',\n                        null,\n                        'energy',\n                        false,\n                        false,\n                        4.35974417757576e-18\n                    ],\n                    [\n                        'a.u. of length',\n                        'a?',\n                        null,\n                        'length',\n                        false,\n                        false,\n                        5.29177210818182e-11\n                    ],\n                    [\n                        'a.u. of mass',\n                        'm?',\n                        null,\n                        'mass',\n                        false,\n                        false,\n                        9.10938261616162e-31\n                    ],\n                    [\n                        'a.u. of time',\n                        '?/Eh',\n                        null,\n                        'time',\n                        false,\n                        false,\n                        2.41888432650516e-17\n                    ],\n                    [\n                        'admiralty knot',\n                        'admkn',\n                        null,\n                        'speed',\n                        false,\n                        true,\n                        0.514773333\n                    ],\n                    [\n                        'ampere',\n                        'A',\n                        null,\n                        'electric_current',\n                        true,\n                        false,\n                        1\n                    ],\n                    [\n                        'ampere per meter',\n                        'A/m',\n                        null,\n                        'magnetic_field_intensity',\n                        true,\n                        false,\n                        1\n                    ],\n                    [\n                        'ångström',\n                        'Å',\n                        ['ang'],\n                        'length',\n                        false,\n                        true,\n                        1e-10\n                    ],\n                    [\n                        'are',\n                        'ar',\n                        null,\n                        'area',\n                        false,\n                        true,\n                        100\n                    ],\n                    [\n                        'astronomical unit',\n                        'ua',\n                        null,\n                        'length',\n                        false,\n                        false,\n                        1.49597870691667e-11\n                    ],\n                    [\n                        'bar',\n                        'bar',\n                        null,\n                        'pressure',\n                        false,\n                        false,\n                        100000\n                    ],\n                    [\n                        'barn',\n                        'b',\n                        null,\n                        'area',\n                        false,\n                        false,\n                        1e-28\n                    ],\n                    [\n                        'becquerel',\n                        'Bq',\n                        null,\n                        'radioactivity',\n                        true,\n                        false,\n                        1\n                    ],\n                    [\n                        'bit',\n                        'bit',\n                        ['b'],\n                        'information',\n                        false,\n                        true,\n                        1\n                    ],\n                    [\n                        'btu',\n                        'BTU',\n                        ['btu'],\n                        'energy',\n                        false,\n                        true,\n                        1055.05585262\n                    ],\n                    [\n                        'byte',\n                        'byte',\n                        null,\n                        'information',\n                        false,\n                        true,\n                        8\n                    ],\n                    [\n                        'candela',\n                        'cd',\n                        null,\n                        'luminous_intensity',\n                        true,\n                        false,\n                        1\n                    ],\n                    [\n                        'candela per square metre',\n                        'cd/m?',\n                        null,\n                        'luminance',\n                        true,\n                        false,\n                        1\n                    ],\n                    [\n                        'coulomb',\n                        'C',\n                        null,\n                        'electric_charge',\n                        true,\n                        false,\n                        1\n                    ],\n                    [\n                        'cubic ångström',\n                        'ang3',\n                        ['ang^3'],\n                        'volume',\n                        false,\n                        true,\n                        1e-30\n                    ],\n                    [\n                        'cubic foot',\n                        'ft3',\n                        ['ft^3'],\n                        'volume',\n                        false,\n                        true,\n                        0.028316846592\n                    ],\n                    [\n                        'cubic inch',\n                        'in3',\n                        ['in^3'],\n                        'volume',\n                        false,\n                        true,\n                        0.000016387064\n                    ],\n                    [\n                        'cubic light-year',\n                        'ly3',\n                        ['ly^3'],\n                        'volume',\n                        false,\n                        true,\n                        8.46786664623715e-47\n                    ],\n                    [\n                        'cubic metre',\n                        'm?',\n                        null,\n                        'volume',\n                        true,\n                        true,\n                        1\n                    ],\n                    [\n                        'cubic mile',\n                        'mi3',\n                        ['mi^3'],\n                        'volume',\n                        false,\n                        true,\n                        4168181825.44058\n                    ],\n                    [\n                        'cubic nautical mile',\n                        'Nmi3',\n                        ['Nmi^3'],\n                        'volume',\n                        false,\n                        true,\n                        6352182208\n                    ],\n                    [\n                        'cubic Pica',\n                        'Pica3',\n                        [\n                            'Picapt3',\n                            'Pica^3',\n                            'Picapt^3'\n                        ],\n                        'volume',\n                        false,\n                        true,\n                        7.58660370370369e-8\n                    ],\n                    [\n                        'cubic yard',\n                        'yd3',\n                        ['yd^3'],\n                        'volume',\n                        false,\n                        true,\n                        0.764554857984\n                    ],\n                    [\n                        'cup',\n                        'cup',\n                        null,\n                        'volume',\n                        false,\n                        true,\n                        0.0002365882365\n                    ],\n                    [\n                        'dalton',\n                        'Da',\n                        ['u'],\n                        'mass',\n                        false,\n                        false,\n                        1.66053886282828e-27\n                    ],\n                    [\n                        'day',\n                        'd',\n                        ['day'],\n                        'time',\n                        false,\n                        true,\n                        86400\n                    ],\n                    [\n                        'degree',\n                        '\\xB0',\n                        null,\n                        'angle',\n                        false,\n                        false,\n                        0.0174532925199433\n                    ],\n                    [\n                        'degrees Rankine',\n                        'Rank',\n                        null,\n                        'temperature',\n                        false,\n                        true,\n                        0.555555555555556\n                    ],\n                    [\n                        'dyne',\n                        'dyn',\n                        ['dy'],\n                        'force',\n                        false,\n                        true,\n                        0.00001\n                    ],\n                    [\n                        'electronvolt',\n                        'eV',\n                        ['ev'],\n                        'energy',\n                        false,\n                        true,\n                        1.60217656514141\n                    ],\n                    [\n                        'ell',\n                        'ell',\n                        null,\n                        'length',\n                        false,\n                        true,\n                        1.143\n                    ],\n                    [\n                        'erg',\n                        'erg',\n                        ['e'],\n                        'energy',\n                        false,\n                        true,\n                        1e-7\n                    ],\n                    [\n                        'farad',\n                        'F',\n                        null,\n                        'electric_capacitance',\n                        true,\n                        false,\n                        1\n                    ],\n                    [\n                        'fluid ounce',\n                        'oz',\n                        null,\n                        'volume',\n                        false,\n                        true,\n                        0.0000295735295625\n                    ],\n                    [\n                        'foot',\n                        'ft',\n                        null,\n                        'length',\n                        false,\n                        true,\n                        0.3048\n                    ],\n                    [\n                        'foot-pound',\n                        'flb',\n                        null,\n                        'energy',\n                        false,\n                        true,\n                        1.3558179483314\n                    ],\n                    [\n                        'gal',\n                        'Gal',\n                        null,\n                        'acceleration',\n                        false,\n                        false,\n                        0.01\n                    ],\n                    [\n                        'gallon',\n                        'gal',\n                        null,\n                        'volume',\n                        false,\n                        true,\n                        0.003785411784\n                    ],\n                    [\n                        'gauss',\n                        'G',\n                        ['ga'],\n                        'magnetic_flux_density',\n                        false,\n                        true,\n                        1\n                    ],\n                    [\n                        'grain',\n                        'grain',\n                        null,\n                        'mass',\n                        false,\n                        true,\n                        0.0000647989\n                    ],\n                    [\n                        'gram',\n                        'g',\n                        null,\n                        'mass',\n                        false,\n                        true,\n                        0.001\n                    ],\n                    [\n                        'gray',\n                        'Gy',\n                        null,\n                        'absorbed_dose',\n                        true,\n                        false,\n                        1\n                    ],\n                    [\n                        'gross registered ton',\n                        'GRT',\n                        ['regton'],\n                        'volume',\n                        false,\n                        true,\n                        2.8316846592\n                    ],\n                    [\n                        'hectare',\n                        'ha',\n                        null,\n                        'area',\n                        false,\n                        true,\n                        10000\n                    ],\n                    [\n                        'henry',\n                        'H',\n                        null,\n                        'inductance',\n                        true,\n                        false,\n                        1\n                    ],\n                    [\n                        'hertz',\n                        'Hz',\n                        null,\n                        'frequency',\n                        true,\n                        false,\n                        1\n                    ],\n                    [\n                        'horsepower',\n                        'HP',\n                        ['h'],\n                        'power',\n                        false,\n                        true,\n                        745.69987158227\n                    ],\n                    [\n                        'horsepower-hour',\n                        'HPh',\n                        [\n                            'hh',\n                            'hph'\n                        ],\n                        'energy',\n                        false,\n                        true,\n                        2684519.538\n                    ],\n                    [\n                        'hour',\n                        'h',\n                        ['hr'],\n                        'time',\n                        false,\n                        true,\n                        3600\n                    ],\n                    [\n                        'imperial gallon (U.K.)',\n                        'uk_gal',\n                        null,\n                        'volume',\n                        false,\n                        true,\n                        0.00454609\n                    ],\n                    [\n                        'imperial hundredweight',\n                        'lcwt',\n                        [\n                            'uk_cwt',\n                            'hweight'\n                        ],\n                        'mass',\n                        false,\n                        true,\n                        50.802345\n                    ],\n                    [\n                        'imperial quart (U.K)',\n                        'uk_qt',\n                        null,\n                        'volume',\n                        false,\n                        true,\n                        0.0011365225\n                    ],\n                    [\n                        'imperial ton',\n                        'brton',\n                        [\n                            'uk_ton',\n                            'LTON'\n                        ],\n                        'mass',\n                        false,\n                        true,\n                        1016.046909\n                    ],\n                    [\n                        'inch',\n                        'in',\n                        null,\n                        'length',\n                        false,\n                        true,\n                        0.0254\n                    ],\n                    [\n                        'international acre',\n                        'uk_acre',\n                        null,\n                        'area',\n                        false,\n                        true,\n                        4046.8564224\n                    ],\n                    [\n                        'IT calorie',\n                        'cal',\n                        null,\n                        'energy',\n                        false,\n                        true,\n                        4.1868\n                    ],\n                    [\n                        'joule',\n                        'J',\n                        null,\n                        'energy',\n                        true,\n                        true,\n                        1\n                    ],\n                    [\n                        'katal',\n                        'kat',\n                        null,\n                        'catalytic_activity',\n                        true,\n                        false,\n                        1\n                    ],\n                    [\n                        'kelvin',\n                        'K',\n                        ['kel'],\n                        'temperature',\n                        true,\n                        true,\n                        1\n                    ],\n                    [\n                        'kilogram',\n                        'kg',\n                        null,\n                        'mass',\n                        true,\n                        true,\n                        1\n                    ],\n                    [\n                        'knot',\n                        'kn',\n                        null,\n                        'speed',\n                        false,\n                        true,\n                        0.514444444444444\n                    ],\n                    [\n                        'light-year',\n                        'ly',\n                        null,\n                        'length',\n                        false,\n                        true,\n                        9460730472580800\n                    ],\n                    [\n                        'litre',\n                        'L',\n                        [\n                            'l',\n                            'lt'\n                        ],\n                        'volume',\n                        false,\n                        true,\n                        0.001\n                    ],\n                    [\n                        'lumen',\n                        'lm',\n                        null,\n                        'luminous_flux',\n                        true,\n                        false,\n                        1\n                    ],\n                    [\n                        'lux',\n                        'lx',\n                        null,\n                        'illuminance',\n                        true,\n                        false,\n                        1\n                    ],\n                    [\n                        'maxwell',\n                        'Mx',\n                        null,\n                        'magnetic_flux',\n                        false,\n                        false,\n                        1e-18\n                    ],\n                    [\n                        'measurement ton',\n                        'MTON',\n                        null,\n                        'volume',\n                        false,\n                        true,\n                        1.13267386368\n                    ],\n                    [\n                        'meter per hour',\n                        'm/h',\n                        ['m/hr'],\n                        'speed',\n                        false,\n                        true,\n                        0.00027777777777778\n                    ],\n                    [\n                        'meter per second',\n                        'm/s',\n                        ['m/sec'],\n                        'speed',\n                        true,\n                        true,\n                        1\n                    ],\n                    [\n                        'meter per second squared',\n                        'm?s??',\n                        null,\n                        'acceleration',\n                        true,\n                        false,\n                        1\n                    ],\n                    [\n                        'parsec',\n                        'pc',\n                        ['parsec'],\n                        'length',\n                        false,\n                        true,\n                        30856775814671900\n                    ],\n                    [\n                        'meter squared per second',\n                        'm?/s',\n                        null,\n                        'kinematic_viscosity',\n                        true,\n                        false,\n                        1\n                    ],\n                    [\n                        'metre',\n                        'm',\n                        null,\n                        'length',\n                        true,\n                        true,\n                        1\n                    ],\n                    [\n                        'miles per hour',\n                        'mph',\n                        null,\n                        'speed',\n                        false,\n                        true,\n                        0.44704\n                    ],\n                    [\n                        'millimetre of mercury',\n                        'mmHg',\n                        null,\n                        'pressure',\n                        false,\n                        false,\n                        133.322\n                    ],\n                    [\n                        'minute',\n                        '?',\n                        null,\n                        'angle',\n                        false,\n                        false,\n                        0.000290888208665722\n                    ],\n                    [\n                        'minute',\n                        'min',\n                        ['mn'],\n                        'time',\n                        false,\n                        true,\n                        60\n                    ],\n                    [\n                        'modern teaspoon',\n                        'tspm',\n                        null,\n                        'volume',\n                        false,\n                        true,\n                        0.000005\n                    ],\n                    [\n                        'mole',\n                        'mol',\n                        null,\n                        'amount_of_substance',\n                        true,\n                        false,\n                        1\n                    ],\n                    [\n                        'morgen',\n                        'Morgen',\n                        null,\n                        'area',\n                        false,\n                        true,\n                        2500\n                    ],\n                    [\n                        'n.u. of action',\n                        '?',\n                        null,\n                        'action',\n                        false,\n                        false,\n                        1.05457168181818e-34\n                    ],\n                    [\n                        'n.u. of mass',\n                        'm?',\n                        null,\n                        'mass',\n                        false,\n                        false,\n                        9.10938261616162e-31\n                    ],\n                    [\n                        'n.u. of speed',\n                        'c?',\n                        null,\n                        'speed',\n                        false,\n                        false,\n                        299792458\n                    ],\n                    [\n                        'n.u. of time',\n                        '?/(me?c??)',\n                        null,\n                        'time',\n                        false,\n                        false,\n                        1.28808866778687e-21\n                    ],\n                    [\n                        'nautical mile',\n                        'M',\n                        ['Nmi'],\n                        'length',\n                        false,\n                        true,\n                        1852\n                    ],\n                    [\n                        'newton',\n                        'N',\n                        null,\n                        'force',\n                        true,\n                        true,\n                        1\n                    ],\n                    [\n                        'œrsted',\n                        'Oe ',\n                        null,\n                        'magnetic_field_intensity',\n                        false,\n                        false,\n                        79.5774715459477\n                    ],\n                    [\n                        'ohm',\n                        'Ω',\n                        null,\n                        'electric_resistance',\n                        true,\n                        false,\n                        1\n                    ],\n                    [\n                        'ounce mass',\n                        'ozm',\n                        null,\n                        'mass',\n                        false,\n                        true,\n                        0.028349523125\n                    ],\n                    [\n                        'pascal',\n                        'Pa',\n                        null,\n                        'pressure',\n                        true,\n                        false,\n                        1\n                    ],\n                    [\n                        'pascal second',\n                        'Pa?s',\n                        null,\n                        'dynamic_viscosity',\n                        true,\n                        false,\n                        1\n                    ],\n                    [\n                        'pferdestärke',\n                        'PS',\n                        null,\n                        'power',\n                        false,\n                        true,\n                        735.49875\n                    ],\n                    [\n                        'phot',\n                        'ph',\n                        null,\n                        'illuminance',\n                        false,\n                        false,\n                        0.0001\n                    ],\n                    [\n                        'pica (1/6 inch)',\n                        'pica',\n                        null,\n                        'length',\n                        false,\n                        true,\n                        0.00035277777777778\n                    ],\n                    [\n                        'pica (1/72 inch)',\n                        'Pica',\n                        ['Picapt'],\n                        'length',\n                        false,\n                        true,\n                        0.00423333333333333\n                    ],\n                    [\n                        'poise',\n                        'P',\n                        null,\n                        'dynamic_viscosity',\n                        false,\n                        false,\n                        0.1\n                    ],\n                    [\n                        'pond',\n                        'pond',\n                        null,\n                        'force',\n                        false,\n                        true,\n                        0.00980665\n                    ],\n                    [\n                        'pound force',\n                        'lbf',\n                        null,\n                        'force',\n                        false,\n                        true,\n                        4.4482216152605\n                    ],\n                    [\n                        'pound mass',\n                        'lbm',\n                        null,\n                        'mass',\n                        false,\n                        true,\n                        0.45359237\n                    ],\n                    [\n                        'quart',\n                        'qt',\n                        null,\n                        'volume',\n                        false,\n                        true,\n                        0.000946352946\n                    ],\n                    [\n                        'radian',\n                        'rad',\n                        null,\n                        'angle',\n                        true,\n                        false,\n                        1\n                    ],\n                    [\n                        'second',\n                        '?',\n                        null,\n                        'angle',\n                        false,\n                        false,\n                        0.00000484813681109536\n                    ],\n                    [\n                        'second',\n                        's',\n                        ['sec'],\n                        'time',\n                        true,\n                        true,\n                        1\n                    ],\n                    [\n                        'short hundredweight',\n                        'cwt',\n                        ['shweight'],\n                        'mass',\n                        false,\n                        true,\n                        45.359237\n                    ],\n                    [\n                        'siemens',\n                        'S',\n                        null,\n                        'electrical_conductance',\n                        true,\n                        false,\n                        1\n                    ],\n                    [\n                        'sievert',\n                        'Sv',\n                        null,\n                        'equivalent_dose',\n                        true,\n                        false,\n                        1\n                    ],\n                    [\n                        'slug',\n                        'sg',\n                        null,\n                        'mass',\n                        false,\n                        true,\n                        14.59390294\n                    ],\n                    [\n                        'square ångström',\n                        'ang2',\n                        ['ang^2'],\n                        'area',\n                        false,\n                        true,\n                        1e-20\n                    ],\n                    [\n                        'square foot',\n                        'ft2',\n                        ['ft^2'],\n                        'area',\n                        false,\n                        true,\n                        0.09290304\n                    ],\n                    [\n                        'square inch',\n                        'in2',\n                        ['in^2'],\n                        'area',\n                        false,\n                        true,\n                        0.00064516\n                    ],\n                    [\n                        'square light-year',\n                        'ly2',\n                        ['ly^2'],\n                        'area',\n                        false,\n                        true,\n                        8.95054210748189e+31\n                    ],\n                    [\n                        'square meter',\n                        'm?',\n                        null,\n                        'area',\n                        true,\n                        true,\n                        1\n                    ],\n                    [\n                        'square mile',\n                        'mi2',\n                        ['mi^2'],\n                        'area',\n                        false,\n                        true,\n                        2589988.110336\n                    ],\n                    [\n                        'square nautical mile',\n                        'Nmi2',\n                        ['Nmi^2'],\n                        'area',\n                        false,\n                        true,\n                        3429904\n                    ],\n                    [\n                        'square Pica',\n                        'Pica2',\n                        [\n                            'Picapt2',\n                            'Pica^2',\n                            'Picapt^2'\n                        ],\n                        'area',\n                        false,\n                        true,\n                        0.00001792111111111\n                    ],\n                    [\n                        'square yard',\n                        'yd2',\n                        ['yd^2'],\n                        'area',\n                        false,\n                        true,\n                        0.83612736\n                    ],\n                    [\n                        'statute mile',\n                        'mi',\n                        null,\n                        'length',\n                        false,\n                        true,\n                        1609.344\n                    ],\n                    [\n                        'steradian',\n                        'sr',\n                        null,\n                        'solid_angle',\n                        true,\n                        false,\n                        1\n                    ],\n                    [\n                        'stilb',\n                        'sb',\n                        null,\n                        'luminance',\n                        false,\n                        false,\n                        0.0001\n                    ],\n                    [\n                        'stokes',\n                        'St',\n                        null,\n                        'kinematic_viscosity',\n                        false,\n                        false,\n                        0.0001\n                    ],\n                    [\n                        'stone',\n                        'stone',\n                        null,\n                        'mass',\n                        false,\n                        true,\n                        6.35029318\n                    ],\n                    [\n                        'tablespoon',\n                        'tbs',\n                        null,\n                        'volume',\n                        false,\n                        true,\n                        0.0000147868\n                    ],\n                    [\n                        'teaspoon',\n                        'tsp',\n                        null,\n                        'volume',\n                        false,\n                        true,\n                        0.00000492892\n                    ],\n                    [\n                        'tesla',\n                        'T',\n                        null,\n                        'magnetic_flux_density',\n                        true,\n                        true,\n                        1\n                    ],\n                    [\n                        'thermodynamic calorie',\n                        'c',\n                        null,\n                        'energy',\n                        false,\n                        true,\n                        4.184\n                    ],\n                    [\n                        'ton',\n                        'ton',\n                        null,\n                        'mass',\n                        false,\n                        true,\n                        907.18474\n                    ],\n                    [\n                        'tonne',\n                        't',\n                        null,\n                        'mass',\n                        false,\n                        false,\n                        1000\n                    ],\n                    [\n                        'U.K. pint',\n                        'uk_pt',\n                        null,\n                        'volume',\n                        false,\n                        true,\n                        0.00056826125\n                    ],\n                    [\n                        'U.S. bushel',\n                        'bushel',\n                        null,\n                        'volume',\n                        false,\n                        true,\n                        0.03523907\n                    ],\n                    [\n                        'U.S. oil barrel',\n                        'barrel',\n                        null,\n                        'volume',\n                        false,\n                        true,\n                        0.158987295\n                    ],\n                    [\n                        'U.S. pint',\n                        'pt',\n                        ['us_pt'],\n                        'volume',\n                        false,\n                        true,\n                        0.000473176473\n                    ],\n                    [\n                        'U.S. survey mile',\n                        'survey_mi',\n                        null,\n                        'length',\n                        false,\n                        true,\n                        1609.347219\n                    ],\n                    [\n                        'U.S. survey/statute acre',\n                        'us_acre',\n                        null,\n                        'area',\n                        false,\n                        true,\n                        4046.87261\n                    ],\n                    [\n                        'volt',\n                        'V',\n                        null,\n                        'voltage',\n                        true,\n                        false,\n                        1\n                    ],\n                    [\n                        'watt',\n                        'W',\n                        null,\n                        'power',\n                        true,\n                        true,\n                        1\n                    ],\n                    [\n                        'watt-hour',\n                        'Wh',\n                        ['wh'],\n                        'energy',\n                        false,\n                        true,\n                        3600\n                    ],\n                    [\n                        'weber',\n                        'Wb',\n                        null,\n                        'magnetic_flux',\n                        true,\n                        false,\n                        1\n                    ],\n                    [\n                        'yard',\n                        'yd',\n                        null,\n                        'length',\n                        false,\n                        true,\n                        0.9144\n                    ],\n                    [\n                        'year',\n                        'yr',\n                        null,\n                        'time',\n                        false,\n                        true,\n                        31557600\n                    ]\n                ];\n                var binary_prefixes = {\n                    Yi: [\n                        'yobi',\n                        80,\n                        1.2089258196146292e+24,\n                        'Yi',\n                        'yotta'\n                    ],\n                    Zi: [\n                        'zebi',\n                        70,\n                        1.1805916207174113e+21,\n                        'Zi',\n                        'zetta'\n                    ],\n                    Ei: [\n                        'exbi',\n                        60,\n                        1152921504606847000,\n                        'Ei',\n                        'exa'\n                    ],\n                    Pi: [\n                        'pebi',\n                        50,\n                        1125899906842624,\n                        'Pi',\n                        'peta'\n                    ],\n                    Ti: [\n                        'tebi',\n                        40,\n                        1099511627776,\n                        'Ti',\n                        'tera'\n                    ],\n                    Gi: [\n                        'gibi',\n                        30,\n                        1073741824,\n                        'Gi',\n                        'giga'\n                    ],\n                    Mi: [\n                        'mebi',\n                        20,\n                        1048576,\n                        'Mi',\n                        'mega'\n                    ],\n                    ki: [\n                        'kibi',\n                        10,\n                        1024,\n                        'ki',\n                        'kilo'\n                    ]\n                };\n                var unit_prefixes = {\n                    Y: [\n                        'yotta',\n                        1e+24,\n                        'Y'\n                    ],\n                    Z: [\n                        'zetta',\n                        1e+21,\n                        'Z'\n                    ],\n                    E: [\n                        'exa',\n                        1000000000000000000,\n                        'E'\n                    ],\n                    P: [\n                        'peta',\n                        1000000000000000,\n                        'P'\n                    ],\n                    T: [\n                        'tera',\n                        1000000000000,\n                        'T'\n                    ],\n                    G: [\n                        'giga',\n                        1000000000,\n                        'G'\n                    ],\n                    M: [\n                        'mega',\n                        1000000,\n                        'M'\n                    ],\n                    k: [\n                        'kilo',\n                        1000,\n                        'k'\n                    ],\n                    h: [\n                        'hecto',\n                        100,\n                        'h'\n                    ],\n                    e: [\n                        'dekao',\n                        10,\n                        'e'\n                    ],\n                    d: [\n                        'deci',\n                        0.1,\n                        'd'\n                    ],\n                    c: [\n                        'centi',\n                        0.01,\n                        'c'\n                    ],\n                    m: [\n                        'milli',\n                        0.001,\n                        'm'\n                    ],\n                    u: [\n                        'micro',\n                        0.000001,\n                        'u'\n                    ],\n                    n: [\n                        'nano',\n                        1e-9,\n                        'n'\n                    ],\n                    p: [\n                        'pico',\n                        1e-12,\n                        'p'\n                    ],\n                    f: [\n                        'femto',\n                        1e-15,\n                        'f'\n                    ],\n                    a: [\n                        'atto',\n                        1e-18,\n                        'a'\n                    ],\n                    z: [\n                        'zepto',\n                        1e-21,\n                        'z'\n                    ],\n                    y: [\n                        'yocto',\n                        1e-24,\n                        'y'\n                    ]\n                };\n                var from = null;\n                var to = null;\n                var base_from_unit = from_unit;\n                var base_to_unit = to_unit;\n                var from_multiplier = 1;\n                var to_multiplier = 1;\n                var alt;\n                for (var i = 0; i < units.length; i++) {\n                    alt = units[i][2] === null ? [] : units[i][2];\n                    if (units[i][1] === base_from_unit || alt.indexOf(base_from_unit) >= 0) {\n                        from = units[i];\n                    }\n                    if (units[i][1] === base_to_unit || alt.indexOf(base_to_unit) >= 0) {\n                        to = units[i];\n                    }\n                }\n                if (from === null) {\n                    var from_binary_prefix = binary_prefixes[from_unit.substring(0, 2)];\n                    var from_unit_prefix = unit_prefixes[from_unit.substring(0, 1)];\n                    if (from_unit.substring(0, 2) === 'da') {\n                        from_unit_prefix = [\n                            'dekao',\n                            10,\n                            'da'\n                        ];\n                    }\n                    if (from_binary_prefix) {\n                        from_multiplier = from_binary_prefix[2];\n                        base_from_unit = from_unit.substring(2);\n                    } else if (from_unit_prefix) {\n                        from_multiplier = from_unit_prefix[1];\n                        base_from_unit = from_unit.substring(from_unit_prefix[2].length);\n                    }\n                    for (var j = 0; j < units.length; j++) {\n                        alt = units[j][2] === null ? [] : units[j][2];\n                        if (units[j][1] === base_from_unit || alt.indexOf(base_from_unit) >= 0) {\n                            from = units[j];\n                        }\n                    }\n                }\n                if (to === null) {\n                    var to_binary_prefix = binary_prefixes[to_unit.substring(0, 2)];\n                    var to_unit_prefix = unit_prefixes[to_unit.substring(0, 1)];\n                    if (to_unit.substring(0, 2) === 'da') {\n                        to_unit_prefix = [\n                            'dekao',\n                            10,\n                            'da'\n                        ];\n                    }\n                    if (to_binary_prefix) {\n                        to_multiplier = to_binary_prefix[2];\n                        base_to_unit = to_unit.substring(2);\n                    } else if (to_unit_prefix) {\n                        to_multiplier = to_unit_prefix[1];\n                        base_to_unit = to_unit.substring(to_unit_prefix[2].length);\n                    }\n                    for (var k = 0; k < units.length; k++) {\n                        alt = units[k][2] === null ? [] : units[k][2];\n                        if (units[k][1] === base_to_unit || alt.indexOf(base_to_unit) >= 0) {\n                            to = units[k];\n                        }\n                    }\n                }\n                if (from === null || to === null) {\n                    return formula.error.na;\n                }\n                if (from[3] !== to[3]) {\n                    return formula.error.na;\n                }\n                return number * from[6] * from_multiplier / (to[6] * to_multiplier);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'SUMX2MY2': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //第一个数组或数值区域\n                var data_array_x = arguments[0];\n                var array_x = [];\n                if (getObjType(data_array_x) == 'array') {\n                    if (getObjType(data_array_x[0]) == 'array' && !func_methods.isDyadicArr(data_array_x)) {\n                        return formula.error.v;\n                    }\n                    array_x = array_x.concat(func_methods.getDataArr(data_array_x, false));\n                } else if (getObjType(data_array_x) == 'object' && data_array_x.startCell != null) {\n                    array_x = array_x.concat(func_methods.getCellDataArr(data_array_x, 'text', false));\n                } else {\n                    array_x.push(data_array_x);\n                }    //第二个数组或数值区域\n                //第二个数组或数值区域\n                var data_array_y = arguments[1];\n                var array_y = [];\n                if (getObjType(data_array_y) == 'array') {\n                    if (getObjType(data_array_y[0]) == 'array' && !func_methods.isDyadicArr(data_array_y)) {\n                        return formula.error.v;\n                    }\n                    array_y = array_y.concat(func_methods.getDataArr(data_array_y, false));\n                } else if (getObjType(data_array_y) == 'object' && data_array_y.startCell != null) {\n                    array_y = array_y.concat(func_methods.getCellDataArr(data_array_y, 'text', false));\n                } else {\n                    array_y.push(data_array_y);\n                }\n                if (array_x.length != array_y.length) {\n                    return formula.error.na;\n                }    //array_x 和 array_y 只取数值\n                //array_x 和 array_y 只取数值\n                var data_x = [], data_y = [];\n                for (var i = 0; i < array_x.length; i++) {\n                    var num_x = array_x[i];\n                    var num_y = array_y[i];\n                    if (isRealNum(num_x) && isRealNum(num_y)) {\n                        data_x.push(parseFloat(num_x));\n                        data_y.push(parseFloat(num_y));\n                    }\n                }    //计算\n                //计算\n                var sum = 0;\n                for (var i = 0; i < data_x.length; i++) {\n                    sum += Math.pow(data_x[i], 2) - Math.pow(data_y[i], 2);\n                }\n                return sum;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'SUMX2PY2': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //第一个数组或数值区域\n                var data_array_x = arguments[0];\n                var array_x = [];\n                if (getObjType(data_array_x) == 'array') {\n                    if (getObjType(data_array_x[0]) == 'array' && !func_methods.isDyadicArr(data_array_x)) {\n                        return formula.error.v;\n                    }\n                    array_x = array_x.concat(func_methods.getDataArr(data_array_x, false));\n                } else if (getObjType(data_array_x) == 'object' && data_array_x.startCell != null) {\n                    array_x = array_x.concat(func_methods.getCellDataArr(data_array_x, 'text', false));\n                } else {\n                    array_x.push(data_array_x);\n                }    //第二个数组或数值区域\n                //第二个数组或数值区域\n                var data_array_y = arguments[1];\n                var array_y = [];\n                if (getObjType(data_array_y) == 'array') {\n                    if (getObjType(data_array_y[0]) == 'array' && !func_methods.isDyadicArr(data_array_y)) {\n                        return formula.error.v;\n                    }\n                    array_y = array_y.concat(func_methods.getDataArr(data_array_y, false));\n                } else if (getObjType(data_array_y) == 'object' && data_array_y.startCell != null) {\n                    array_y = array_y.concat(func_methods.getCellDataArr(data_array_y, 'text', false));\n                } else {\n                    array_y.push(data_array_y);\n                }\n                if (array_x.length != array_y.length) {\n                    return formula.error.na;\n                }    //array_x 和 array_y 只取数值\n                //array_x 和 array_y 只取数值\n                var data_x = [], data_y = [];\n                for (var i = 0; i < array_x.length; i++) {\n                    var num_x = array_x[i];\n                    var num_y = array_y[i];\n                    if (isRealNum(num_x) && isRealNum(num_y)) {\n                        data_x.push(parseFloat(num_x));\n                        data_y.push(parseFloat(num_y));\n                    }\n                }    //计算\n                //计算\n                var sum = 0;\n                for (var i = 0; i < data_x.length; i++) {\n                    sum += Math.pow(data_x[i], 2) + Math.pow(data_y[i], 2);\n                }\n                return sum;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'SUMXMY2': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //第一个数组或数值区域\n                var data_array_x = arguments[0];\n                var array_x = [];\n                if (getObjType(data_array_x) == 'array') {\n                    if (getObjType(data_array_x[0]) == 'array' && !func_methods.isDyadicArr(data_array_x)) {\n                        return formula.error.v;\n                    }\n                    array_x = array_x.concat(func_methods.getDataArr(data_array_x, false));\n                } else if (getObjType(data_array_x) == 'object' && data_array_x.startCell != null) {\n                    array_x = array_x.concat(func_methods.getCellDataArr(data_array_x, 'text', false));\n                } else {\n                    array_x.push(data_array_x);\n                }    //第二个数组或数值区域\n                //第二个数组或数值区域\n                var data_array_y = arguments[1];\n                var array_y = [];\n                if (getObjType(data_array_y) == 'array') {\n                    if (getObjType(data_array_y[0]) == 'array' && !func_methods.isDyadicArr(data_array_y)) {\n                        return formula.error.v;\n                    }\n                    array_y = array_y.concat(func_methods.getDataArr(data_array_y, false));\n                } else if (getObjType(data_array_y) == 'object' && data_array_y.startCell != null) {\n                    array_y = array_y.concat(func_methods.getCellDataArr(data_array_y, 'text', false));\n                } else {\n                    array_y.push(data_array_y);\n                }\n                if (array_x.length != array_y.length) {\n                    return formula.error.na;\n                }    //array_x 和 array_y 只取数值\n                //array_x 和 array_y 只取数值\n                var data_x = [], data_y = [];\n                for (var i = 0; i < array_x.length; i++) {\n                    var num_x = array_x[i];\n                    var num_y = array_y[i];\n                    if (isRealNum(num_x) && isRealNum(num_y)) {\n                        data_x.push(parseFloat(num_x));\n                        data_y.push(parseFloat(num_y));\n                    }\n                }    //计算\n                //计算\n                var sum = 0;\n                for (var i = 0; i < data_x.length; i++) {\n                    sum += Math.pow(data_x[i] - data_y[i], 2);\n                }\n                return sum;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'TRANSPOSE': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //从其返回唯一值的数组或区域\n                var data_array = arguments[0];\n                var array = [];\n                if (getObjType(data_array) == 'array') {\n                    if (getObjType(data_array[0]) == 'array' && !func_methods.isDyadicArr(data_array)) {\n                        return formula.error.v;\n                    }\n                    array = func_methods.getDataDyadicArr(data_array);\n                } else if (getObjType(data_array) == 'object' && data_array.startCell != null) {\n                    array = func_methods.getCellDataDyadicArr(data_array, 'number');\n                }\n                array = array[0].map(function (col, a) {\n                    return array.map(function (row) {\n                        return row[a];\n                    });\n                });\n                return array;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'TREND': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //已知的 y 值集合\n                var data_known_y = arguments[0];\n                var known_y = [];\n                if (getObjType(data_known_y) == 'array') {\n                    if (getObjType(data_known_y[0]) == 'array' && !func_methods.isDyadicArr(data_known_y)) {\n                        return formula.error.v;\n                    }\n                    known_y = func_methods.getDataDyadicArr(data_known_y);\n                } else if (getObjType(data_known_y) == 'object' && data_known_y.startCell != null) {\n                    known_y = func_methods.getCellDataDyadicArr(data_known_y, 'text');\n                } else {\n                    if (!isRealNum(data_known_y)) {\n                        return formula.error.v;\n                    }\n                    var rowArr = [];\n                    rowArr.push(parseFloat(data_known_y));\n                    known_y.push(rowArr);\n                }\n                var known_y_rowlen = known_y.length;\n                var known_y_collen = known_y[0].length;\n                for (var i = 0; i < known_y_rowlen; i++) {\n                    for (var j = 0; j < known_y_collen; j++) {\n                        if (!isRealNum(known_y[i][j])) {\n                            return formula.error.v;\n                        }\n                        known_y[i][j] = parseFloat(known_y[i][j]);\n                    }\n                }    //可选 x 值集合\n                //可选 x 值集合\n                var known_x = [];\n                for (var i = 1; i <= known_y_rowlen; i++) {\n                    for (var j = 1; j <= known_y_collen; j++) {\n                        var number = (i - 1) * known_y_collen + j;\n                        known_x.push(number);\n                    }\n                }\n                if (arguments.length >= 2) {\n                    var data_known_x = arguments[1];\n                    known_x = [];\n                    if (getObjType(data_known_x) == 'array') {\n                        if (getObjType(data_known_x[0]) == 'array' && !func_methods.isDyadicArr(data_known_x)) {\n                            return formula.error.v;\n                        }\n                        known_x = func_methods.getDataDyadicArr(data_known_x);\n                    } else if (getObjType(data_known_x) == 'object' && data_known_x.startCell != null) {\n                        known_x = func_methods.getCellDataDyadicArr(data_known_x, 'text');\n                    } else {\n                        if (!isRealNum(data_known_x)) {\n                            return formula.error.v;\n                        }\n                        var rowArr = [];\n                        rowArr.push(parseFloat(data_known_x));\n                        known_x.push(rowArr);\n                    }\n                    for (var i = 0; i < known_x.length; i++) {\n                        for (var j = 0; j < known_x[0].length; j++) {\n                            if (!isRealNum(known_x[i][j])) {\n                                return formula.error.v;\n                            }\n                            known_x[i][j] = parseFloat(known_x[i][j]);\n                        }\n                    }\n                }\n                var known_x_rowlen = known_x.length;\n                var known_x_collen = known_x[0].length;    //新 x 值\n                //新 x 值\n                var new_x = known_x;\n                if (arguments.length >= 3) {\n                    var data_new_x = arguments[2];\n                    new_x = [];\n                    if (getObjType(data_new_x) == 'array') {\n                        if (getObjType(data_new_x[0]) == 'array' && !func_methods.isDyadicArr(data_new_x)) {\n                            return formula.error.v;\n                        }\n                        new_x = func_methods.getDataDyadicArr(data_new_x);\n                    } else if (getObjType(data_new_x) == 'object' && data_new_x.startCell != null) {\n                        new_x = func_methods.getCellDataDyadicArr(data_new_x, 'text');\n                    } else {\n                        if (!isRealNum(data_new_x)) {\n                            return formula.error.v;\n                        }\n                        var rowArr = [];\n                        rowArr.push(parseFloat(data_new_x));\n                        new_x.push(rowArr);\n                    }\n                    for (var i = 0; i < new_x.length; i++) {\n                        for (var j = 0; j < new_x[0].length; j++) {\n                            if (!isRealNum(new_x[i][j])) {\n                                return formula.error.v;\n                            }\n                            new_x[i][j] = parseFloat(new_x[i][j]);\n                        }\n                    }\n                }    //逻辑值\n                //逻辑值\n                var const_b = true;\n                if (arguments.length == 4) {\n                    const_b = func_methods.getCellBoolen(arguments[3]);\n                    if (valueIsError(const_b)) {\n                        return const_b;\n                    }\n                }\n                if (known_y_rowlen != known_x_rowlen || known_y_collen != known_x_collen) {\n                    return formula.error.r;\n                }    //计算\n                //计算\n                function leastSquare(arr_x, arr_y) {\n                    var xSum = 0, ySum = 0, xySum = 0, x2Sum = 0;\n                    for (var i = 0; i < arr_x.length; i++) {\n                        for (var j = 0; j < arr_x[i].length; j++) {\n                            xSum += arr_x[i][j];\n                            ySum += arr_y[i][j];\n                            xySum += arr_x[i][j] * arr_y[i][j];\n                            x2Sum += arr_x[i][j] * arr_x[i][j];\n                        }\n                    }\n                    var n = arr_x.length * arr_x[0].length;\n                    var xMean = xSum / n;\n                    var yMean = ySum / n;\n                    var xyMean = xySum / n;\n                    var x2Mean = x2Sum / n;\n                    var m = (xyMean - xMean * yMean) / (x2Mean - xMean * xMean);\n                    var b = yMean - m * xMean;\n                    return [\n                        m,\n                        b\n                    ];\n                }\n                var ls = leastSquare(known_x, known_y);\n                var m = ls[0];\n                if (const_b) {\n                    var b = ls[1];\n                } else {\n                    var b = 0;\n                }\n                var result = [];\n                for (var i = 0; i < new_x.length; i++) {\n                    for (var j = 0; j < new_x[i].length; j++) {\n                        var x = new_x[i][j];\n                        var y = m * x + b;\n                        result.push(Math.round(y * 1000000000) / 1000000000);\n                    }\n                }\n                return result;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'FREQUENCY': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //频率数组\n                var data_data_array = arguments[0];\n                var data_array = [];\n                if (getObjType(data_data_array) == 'array') {\n                    if (getObjType(data_data_array[0]) == 'array' && !func_methods.isDyadicArr(data_data_array)) {\n                        return formula.error.v;\n                    }\n                    data_array = data_array.concat(func_methods.getDataArr(data_data_array, true));\n                } else if (getObjType(data_data_array) == 'object' && data_data_array.startCell != null) {\n                    data_array = data_array.concat(func_methods.getCellDataArr(data_data_array, 'number', true));\n                } else {\n                    if (!isRealNum(data_data_array)) {\n                        return formula.error.v;\n                    }\n                    data_array.push(data_data_array);\n                }\n                var data_array_n = [];\n                for (var i = 0; i < data_array.length; i++) {\n                    if (isRealNum(data_array[i])) {\n                        data_array_n.push(parseFloat(data_array[i]));\n                    }\n                }    //间隔数组\n                //间隔数组\n                var data_bins_array = arguments[1];\n                var bins_array = [];\n                if (getObjType(data_bins_array) == 'array') {\n                    if (getObjType(data_bins_array[0]) == 'array' && !func_methods.isDyadicArr(data_bins_array)) {\n                        return formula.error.v;\n                    }\n                    bins_array = bins_array.concat(func_methods.getDataArr(data_bins_array, true));\n                } else if (getObjType(data_bins_array) == 'object' && data_bins_array.startCell != null) {\n                    bins_array = bins_array.concat(func_methods.getCellDataArr(data_bins_array, 'number', true));\n                } else {\n                    if (!isRealNum(data_bins_array)) {\n                        return formula.error.v;\n                    }\n                    bins_array.push(data_bins_array);\n                }\n                var bins_array_n = [];\n                for (var i = 0; i < bins_array.length; i++) {\n                    if (isRealNum(bins_array[i])) {\n                        bins_array_n.push(parseFloat(bins_array[i]));\n                    }\n                }    //计算\n                //计算\n                if (data_array_n.length == 0 && bins_array_n.length == 0) {\n                    return [\n                        [0],\n                        [0]\n                    ];\n                } else if (data_array_n.length == 0) {\n                    var result = [[0]];\n                    for (var i = 0; i < bins_array_n.length; i++) {\n                        result.push([0]);\n                    }\n                    return result;\n                } else if (bins_array_n.length == 0) {\n                    return [\n                        [0],\n                        [data_array_n.length]\n                    ];\n                } else {\n                    bins_array_n.sort(function (a, b) {\n                        return a - b;\n                    });\n                    var result = [];\n                    for (var i = 0; i < bins_array_n.length; i++) {\n                        if (i == 0) {\n                            var count = 0;\n                            for (var j = 0; j < data_array_n.length; j++) {\n                                if (data_array_n[j] <= bins_array_n[0]) {\n                                    count++;\n                                }\n                            }\n                            result.push([count]);\n                        } else if (i == bins_array_n.length - 1) {\n                            var count1 = 0, count2 = 0;\n                            for (var j = 0; j < data_array_n.length; j++) {\n                                if (data_array_n[j] <= bins_array_n[i] && data_array_n[j] > bins_array_n[i - 1]) {\n                                    count1++;\n                                }\n                                if (data_array_n[j] > bins_array_n[i]) {\n                                    count2++;\n                                }\n                            }\n                            result.push([count1]);\n                            result.push([count2]);\n                        } else {\n                            var count = 0;\n                            for (var j = 0; j < data_array_n.length; j++) {\n                                if (data_array_n[j] <= bins_array_n[i] && data_array_n[j] > bins_array_n[i - 1]) {\n                                    count++;\n                                }\n                            }\n                            result.push([count]);\n                        }\n                    }\n                    return result;\n                }\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'GROWTH': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //已知的 y 值集合\n                var data_known_y = arguments[0];\n                var known_y = [];\n                if (getObjType(data_known_y) == 'array') {\n                    if (getObjType(data_known_y[0]) == 'array' && !func_methods.isDyadicArr(data_known_y)) {\n                        return formula.error.v;\n                    }\n                    known_y = func_methods.getDataDyadicArr(data_known_y);\n                } else if (getObjType(data_known_y) == 'object' && data_known_y.startCell != null) {\n                    known_y = func_methods.getCellDataDyadicArr(data_known_y, 'text');\n                } else {\n                    if (!isRealNum(data_known_y)) {\n                        return formula.error.v;\n                    }\n                    var rowArr = [];\n                    rowArr.push(parseFloat(data_known_y));\n                    known_y.push(rowArr);\n                }\n                var known_y_rowlen = known_y.length;\n                var known_y_collen = known_y[0].length;\n                for (var i = 0; i < known_y_rowlen; i++) {\n                    for (var j = 0; j < known_y_collen; j++) {\n                        if (!isRealNum(known_y[i][j])) {\n                            return formula.error.v;\n                        }\n                        known_y[i][j] = parseFloat(known_y[i][j]);\n                    }\n                }    //可选 x 值集合\n                //可选 x 值集合\n                var known_x = [];\n                for (var i = 1; i <= known_y_rowlen; i++) {\n                    for (var j = 1; j <= known_y_collen; j++) {\n                        var number = (i - 1) * known_y_collen + j;\n                        known_x.push(number);\n                    }\n                }\n                if (arguments.length >= 2) {\n                    var data_known_x = arguments[1];\n                    known_x = [];\n                    if (getObjType(data_known_x) == 'array') {\n                        if (getObjType(data_known_x[0]) == 'array' && !func_methods.isDyadicArr(data_known_x)) {\n                            return formula.error.v;\n                        }\n                        known_x = func_methods.getDataDyadicArr(data_known_x);\n                    } else if (getObjType(data_known_x) == 'object' && data_known_x.startCell != null) {\n                        known_x = func_methods.getCellDataDyadicArr(data_known_x, 'text');\n                    } else {\n                        if (!isRealNum(data_known_x)) {\n                            return formula.error.v;\n                        }\n                        var rowArr = [];\n                        rowArr.push(parseFloat(data_known_x));\n                        known_x.push(rowArr);\n                    }\n                    for (var i = 0; i < known_x.length; i++) {\n                        for (var j = 0; j < known_x[0].length; j++) {\n                            if (!isRealNum(known_x[i][j])) {\n                                return formula.error.v;\n                            }\n                            known_x[i][j] = parseFloat(known_x[i][j]);\n                        }\n                    }\n                }\n                var known_x_rowlen = known_x.length;\n                var known_x_collen = known_x[0].length;    //新 x 值\n                //新 x 值\n                var new_x = known_x;\n                if (arguments.length >= 3) {\n                    var data_new_x = arguments[2];\n                    new_x = [];\n                    if (getObjType(data_new_x) == 'array') {\n                        if (getObjType(data_new_x[0]) == 'array' && !func_methods.isDyadicArr(data_new_x)) {\n                            return formula.error.v;\n                        }\n                        new_x = func_methods.getDataDyadicArr(data_new_x);\n                    } else if (getObjType(data_new_x) == 'object' && data_new_x.startCell != null) {\n                        new_x = func_methods.getCellDataDyadicArr(data_new_x, 'text');\n                    } else {\n                        if (!isRealNum(data_new_x)) {\n                            return formula.error.v;\n                        }\n                        var rowArr = [];\n                        rowArr.push(parseFloat(data_new_x));\n                        new_x.push(rowArr);\n                    }\n                    for (var i = 0; i < new_x.length; i++) {\n                        for (var j = 0; j < new_x[0].length; j++) {\n                            if (!isRealNum(new_x[i][j])) {\n                                return formula.error.v;\n                            }\n                            new_x[i][j] = parseFloat(new_x[i][j]);\n                        }\n                    }\n                }    //逻辑值\n                //逻辑值\n                var const_b = true;\n                if (arguments.length == 4) {\n                    const_b = func_methods.getCellBoolen(arguments[3]);\n                    if (valueIsError(const_b)) {\n                        return const_b;\n                    }\n                }\n                if (known_y_rowlen != known_x_rowlen || known_y_collen != known_x_collen) {\n                    return formula.error.r;\n                }    //计算\n                //计算\n                function leastSquare(arr_x, arr_y) {\n                    var xSum = 0, ySum = 0, xySum = 0, x2Sum = 0;\n                    for (var i = 0; i < arr_x.length; i++) {\n                        for (var j = 0; j < arr_x[i].length; j++) {\n                            xSum += arr_x[i][j];    // ySum += arr_y[i][j];\n                            // ySum += arr_y[i][j];\n                            ySum += Math.log(arr_y[i][j]);    // xySum += arr_x[i][j] * arr_y[i][j];\n                            // xySum += arr_x[i][j] * arr_y[i][j];\n                            xySum += arr_x[i][j] * Math.log(arr_y[i][j]);\n                            x2Sum += arr_x[i][j] * arr_x[i][j];\n                        }\n                    }\n                    var n = arr_x.length * arr_x[0].length;\n                    var xMean = xSum / n;\n                    var yMean = ySum / n;\n                    var xyMean = xySum / n;\n                    var x2Mean = x2Sum / n;\n                    var m = (xyMean - xMean * yMean) / (x2Mean - xMean * xMean);\n                    var b = yMean - m * xMean;\n                    return [\n                        Math.exp(m),\n                        Math.exp(b)\n                    ];\n                }\n                var ls = leastSquare(known_x, known_y);\n                var m = ls[0];\n                if (const_b) {\n                    var b = ls[1];\n                } else {\n                    var b = 1;\n                }\n                var result = [];\n                for (var i = 0; i < new_x.length; i++) {\n                    for (var j = 0; j < new_x[i].length; j++) {\n                        var x = new_x[i][j];\n                        var y = b * Math.pow(m, x);    // var y = Math.exp(b + m * x);\n                        // var y = Math.exp(b + m * x);\n                        result.push(Math.round(y * 1000000000) / 1000000000);\n                    }\n                }\n                return result;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'LINEST': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                return formula.error.v;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'LOGEST': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                return formula.error.v;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'MDETERM': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //数组\n                var data_array = arguments[0];\n                var array = [];\n                if (getObjType(data_array) == 'array') {\n                    if (getObjType(data_array[0]) == 'array' && !func_methods.isDyadicArr(data_array)) {\n                        return formula.error.v;\n                    }\n                    array = func_methods.getDataDyadicArr(data_array);\n                } else if (getObjType(data_array) == 'object' && data_array.startCell != null) {\n                    array = func_methods.getCellDataDyadicArr(data_array, 'text');\n                } else {\n                    var rowArr = [];\n                    rowArr.push(data_array);\n                    array.push(rowArr);\n                }\n                for (var i = 0; i < array.length; i++) {\n                    for (var j = 0; j < array[i].length; j++) {\n                        if (!isRealNum(array[i][j])) {\n                            return formula.error.v;\n                        }\n                        array[i][j] = parseFloat(array[i][j]);\n                    }\n                }\n                if (array.length != array[0].length) {\n                    return formula.error.v;\n                }    //计算\n                //计算\n                function Ma(a, n) {\n                    var A;\n                    var b = new Array();\n                    if (n == 1) {\n                        A = a[0][0];\n                        return A;\n                    } else if (n == 2) {\n                        A = a[0][0] * a[1][1] - a[0][1] * a[1][0];\n                        return A;\n                    } else if (n == 3) {\n                        A = a[0][0] * a[1][1] * a[2][2] + a[1][0] * a[2][1] * a[0][2] + a[2][0] * a[0][1] * a[1][2] - a[2][0] * a[1][1] * a[0][2] - a[0][0] * a[2][1] * a[1][2] - a[1][0] * a[0][1] * a[2][2];\n                        return A;\n                    } else {\n                        A = 0;\n                        var c = new Array();\n                        var e = new Array();\n                        for (var i = 0; i < n; i++) {\n                            b[i] = a[i][0] * Math.pow(-1, i + 1 + 1);\n                        }\n                        for (var i = 0; i < n; i++) {\n                            e[i] = new Array();\n                            for (var j = 0; j < n - 1; j++) {\n                                e[i][j] = a[i][j + 1];\n                            }\n                        }\n                        for (var i = 0; i < n; i++) {\n                            for (var j = 0; j < n; j++) {\n                                c[j] = new Array();\n                                for (var k = 0; k < n - 1; k++) {\n                                    if (i > j) {\n                                        c[j][k] = e[j][k];\n                                    } else if (i < j) {\n                                        c[j - 1][k] = e[j][k];\n                                    }\n                                }\n                            }\n                            A += b[i] * arguments.callee(c, n - 1);\n                        }\n                        return A;\n                    }\n                }\n                return Ma(array, array.length);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'MINVERSE': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //数组\n                var data_array = arguments[0];\n                var array = [];\n                if (getObjType(data_array) == 'array') {\n                    if (getObjType(data_array[0]) == 'array' && !func_methods.isDyadicArr(data_array)) {\n                        return formula.error.v;\n                    }\n                    array = func_methods.getDataDyadicArr(data_array);\n                } else if (getObjType(data_array) == 'object' && data_array.startCell != null) {\n                    array = func_methods.getCellDataDyadicArr(data_array, 'text');\n                } else {\n                    var rowArr = [];\n                    rowArr.push(data_array);\n                    array.push(rowArr);\n                }\n                for (var i = 0; i < array.length; i++) {\n                    for (var j = 0; j < array[i].length; j++) {\n                        if (!isRealNum(array[i][j])) {\n                            return formula.error.v;\n                        }\n                        array[i][j] = parseFloat(array[i][j]);\n                    }\n                }\n                if (array.length != array[0].length) {\n                    return formula.error.v;\n                }    //计算\n                //计算\n                return inverse(array);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'MMULT': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //数组1\n                var data_array1 = arguments[0];\n                var array1 = [];\n                if (getObjType(data_array1) == 'array') {\n                    if (getObjType(data_array1[0]) == 'array' && !func_methods.isDyadicArr(data_array1)) {\n                        return formula.error.v;\n                    }\n                    array1 = func_methods.getDataDyadicArr(data_array1);\n                } else if (getObjType(data_array1) == 'object' && data_array1.startCell != null) {\n                    array1 = func_methods.getCellDataDyadicArr(data_array1, 'text');\n                } else {\n                    var rowArr = [];\n                    rowArr.push(data_array1);\n                    array1.push(rowArr);\n                }\n                for (var i = 0; i < array1.length; i++) {\n                    for (var j = 0; j < array1[i].length; j++) {\n                        if (!isRealNum(array1[i][j])) {\n                            return formula.error.v;\n                        }\n                        array1[i][j] = parseFloat(array1[i][j]);\n                    }\n                }    //数组2\n                //数组2\n                var data_array2 = arguments[1];\n                var array2 = [];\n                if (getObjType(data_array2) == 'array') {\n                    if (getObjType(data_array2[0]) == 'array' && !func_methods.isDyadicArr(data_array2)) {\n                        return formula.error.v;\n                    }\n                    array2 = func_methods.getDataDyadicArr(data_array2);\n                } else if (getObjType(data_array2) == 'object' && data_array2.startCell != null) {\n                    array2 = func_methods.getCellDataDyadicArr(data_array2, 'text');\n                } else {\n                    var rowArr = [];\n                    rowArr.push(data_array2);\n                    array2.push(rowArr);\n                }\n                for (var i = 0; i < array2.length; i++) {\n                    for (var j = 0; j < array2[i].length; j++) {\n                        if (!isRealNum(array2[i][j])) {\n                            return formula.error.v;\n                        }\n                        array2[i][j] = parseFloat(array2[i][j]);\n                    }\n                }    //计算\n                //计算\n                if (array1[0].length != array2.length) {\n                    return formula.error.v;\n                }\n                var rowlen = array1.length;\n                var collen = array2[0].length;\n                var result = [];\n                for (var m = 0; m < rowlen; m++) {\n                    var rowArr = [];\n                    for (var n = 0; n < collen; n++) {\n                        var value = 0;\n                        for (var p = 0; p < array1[0].length; p++) {\n                            value += array1[m][p] * array2[p][n];\n                        }\n                        rowArr.push(value);\n                    }\n                    result.push(rowArr);\n                }\n                return result;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'SUMPRODUCT': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //第一个数组\n                //数组1\n                var data_array1 = arguments[0];\n                var array1 = [];\n                if (getObjType(data_array1) == 'array') {\n                    if (getObjType(data_array1[0]) == 'array' && !func_methods.isDyadicArr(data_array1)) {\n                        return formula.error.v;\n                    }\n                    array1 = func_methods.getDataDyadicArr(data_array1);\n                } else if (getObjType(data_array1) == 'object' && data_array1.startCell != null) {\n                    array1 = func_methods.getCellDataDyadicArr(data_array1, 'text');\n                } else {\n                    var rowArr = [];\n                    rowArr.push(data_array1);\n                    array1.push(rowArr);\n                }\n                for (var i = 0; i < array1.length; i++) {\n                    for (var j = 0; j < array1[i].length; j++) {\n                        if (!isRealNum(array1[i][j])) {\n                            array1[i][j] = 0;\n                        } else {\n                            array1[i][j] = parseFloat(array1[i][j]);\n                        }\n                    }\n                }\n                var rowlen = array1.length;\n                var collen = array1[0].length;\n                if (arguments.length >= 2) {\n                    for (var i = 1; i < arguments.length; i++) {\n                        var data = arguments[i];\n                        var arr = [];\n                        if (getObjType(data) == 'array') {\n                            if (getObjType(data[0]) == 'array' && !func_methods.isDyadicArr(data)) {\n                                return formula.error.v;\n                            }\n                            arr = func_methods.getDataDyadicArr(data);\n                        } else if (getObjType(data) == 'object' && data.startCell != null) {\n                            arr = func_methods.getCellDataDyadicArr(data, 'text');\n                        } else {\n                            var rowArr = [];\n                            rowArr.push(data);\n                            arr.push(rowArr);\n                        }\n                        if (arr.length != rowlen || arr[0].length != collen) {\n                            return formula.error.v;\n                        }\n                        for (var m = 0; m < rowlen; m++) {\n                            for (var n = 0; n < collen; n++) {\n                                if (!isRealNum(arr[m][n])) {\n                                    array1[m][n] = 0;\n                                } else {\n                                    array1[m][n] = array1[m][n] * parseFloat(arr[m][n]);\n                                }\n                            }\n                        }\n                    }\n                }\n                var sum = 0;\n                for (var m = 0; m < rowlen; m++) {\n                    for (var n = 0; n < collen; n++) {\n                        sum += array1[m][n];\n                    }\n                }\n                return sum;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'ISFORMULA': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var data_cell = arguments[0];\n                var cell;\n                if (getObjType(data_cell) == 'object' && data_cell.startCell != null) {\n                    if (data_cell.data == null) {\n                        return false;\n                    }\n                    if (getObjType(data_cell.data) == 'array') {\n                        cell = data_cell.data[0][0];\n                    } else {\n                        cell = data_cell.data;\n                    }\n                    if (cell != null && cell.f != null) {\n                        return true;\n                    } else {\n                        return false;\n                    }\n                } else {\n                    return formula.error.v;\n                }\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'CELL': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //单元格信息的类型\n                var data_info_type = arguments[0];\n                var info_type;\n                if (getObjType(data_info_type) == 'array') {\n                    if (getObjType(data_info_type[0]) == 'array') {\n                        if (!func_methods.isDyadicArr(data_info_type)) {\n                            return formula.error.v;\n                        }\n                        info_type = data_info_type[0][0];\n                    } else {\n                        info_type = data_info_type[0];\n                    }\n                } else if (getObjType(data_info_type) == 'object' && data_info_type.startCell != null) {\n                    if (data_info_type.data == null) {\n                        return formula.error.v;\n                    } else {\n                        if (getObjType(data_info_type.data) == 'array') {\n                            return formula.error.v;\n                        }\n                        info_type = data_info_type.data.v;\n                        if (isRealNull(info_type)) {\n                            return formula.error.v;\n                        }\n                    }\n                } else {\n                    info_type = data_info_type;\n                }    //单元格\n                //单元格\n                var data_reference = arguments[1];\n                var reference;\n                if (getObjType(data_reference) == 'object' && data_reference.startCell != null) {\n                    reference = data_reference.startCell;\n                } else {\n                    return formula.error.v;\n                }\n                if ([\n                        'address',\n                        'col',\n                        'color',\n                        'contents',\n                        'filename',\n                        'format',\n                        'parentheses',\n                        'prefix',\n                        'protect',\n                        'row',\n                        'type',\n                        'width'\n                    ].indexOf(info_type) == -1) {\n                    return formula.error.v;\n                }\n                var file = getluckysheetfile()[getSheetIndex(Store.currentSheetIndex)];\n                var cellrange = formula.getcellrange(reference);\n                var row_index = cellrange.row[0];\n                var col_index = cellrange.column[0];    // let sheetdata = null;\n                                                        // sheetdata = Store.flowdata;\n                                                        // if (formula.execFunctionGroupData != null) {\n                                                        //     sheetdata = formula.execFunctionGroupData;\n                                                        // }\n                // let sheetdata = null;\n                // sheetdata = Store.flowdata;\n                // if (formula.execFunctionGroupData != null) {\n                //     sheetdata = formula.execFunctionGroupData;\n                // }\n                let luckysheetfile = getluckysheetfile();\n                let index = getSheetIndex(Store.calculateSheetIndex);\n                let sheetdata = luckysheetfile[index].data;\n                let value;\n                if (formula.execFunctionGlobalData != null && formula.execFunctionGlobalData[row_index + '_' + col_index + '_' + Store.calculateSheetIndex] != null) {\n                    value = formula.execFunctionGlobalData[row_index + '_' + col_index + '_' + Store.calculateSheetIndex].v;\n                } else if (sheetdata[row_index][col_index] != null && sheetdata[row_index][col_index].v != null && sheetdata[row_index][col_index].v != '') {\n                    value = sheetdata[row_index][col_index];\n                    if (value instanceof Object) {\n                        value = value.v;\n                    }\n                } else {\n                    value = 0;\n                }\n                switch (info_type) {\n                case 'address':\n                    return reference;\n                    break;\n                case 'col':\n                    return col_index + 1;\n                    break;\n                case 'color':\n                    return 0;\n                    break;\n                case 'contents':\n                    // if (sheetdata[row_index][col_index] == null || sheetdata[row_index][col_index].v == null || sheetdata[row_index][col_index].v ==\"\"){\n                    //     value = 0;\n                    // }\n                    return value;\n                    break;\n                case 'filename':\n                    return file.name;\n                    break;\n                case 'format':\n                    if (sheetdata[row_index][col_index] == null || sheetdata[row_index][col_index].ct == null) {\n                        return 'G';\n                    }\n                    return sheetdata[row_index][col_index].ct.fa;\n                    break;\n                case 'parentheses':\n                    if (sheetdata[row_index][col_index] == null || sheetdata[row_index][col_index].v == null || sheetdata[row_index][col_index].v == '') {\n                        return 0;\n                    }\n                    if (sheetdata[row_index][col_index].v > 0) {\n                        return 1;\n                    } else {\n                        return 0;\n                    }\n                    break;\n                case 'prefix':\n                    if (value == 0) {\n                        return '';\n                    }\n                    if (sheetdata[row_index][col_index].ht == 0) {\n                        //居中对齐\n                        return '^';\n                    } else if (sheetdata[row_index][col_index].ht == 1) {\n                        //左对齐\n                        return \"'\";\n                    } else if (sheetdata[row_index][col_index].ht == 2) {\n                        //右对齐\n                        return '\"';\n                    } else {\n                        return '';\n                    }\n                    break;\n                case 'protect':\n                    return 0;\n                    break;\n                case 'row':\n                    return row_index + 1;\n                    break;\n                case 'type':\n                    if (value == 0) {\n                        return 'b';\n                    }\n                    return 'l';\n                    break;\n                case 'width':\n                    var cfg = file.config;\n                    if (cfg['columnlen'] != null && col_index in cfg['columnlen']) {\n                        return cfg['columnlen'][col_index];\n                    }\n                    return Store.defaultcollen;\n                    break;\n                }\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'NA': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                return formula.error.na;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'ERROR_TYPE': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //单元格\n                var data_error_val = arguments[0];\n                var error_val;\n                if (getObjType(data_error_val) == 'array') {\n                    if (getObjType(data_error_val[0]) == 'array') {\n                        if (!func_methods.isDyadicArr(data_error_val)) {\n                            return formula.error.v;\n                        }\n                        error_val = data_error_val[0][0];\n                    } else {\n                        error_val = data_error_val[0];\n                    }\n                } else if (getObjType(data_error_val) == 'object' && data_error_val.startCell != null) {\n                    if (data_error_val.data == null) {\n                        return formula.error.na;\n                    }\n                    if (getObjType(data_error_val.data) == 'array') {\n                        error_val = data_error_val.data[0][0];\n                        if (error_val == null || isRealNull(error_val.v)) {\n                            return formula.error.na;\n                        }\n                        error_val = error_val.v;\n                    } else {\n                        if (isRealNull(data_error_val.data.v)) {\n                            return formula.error.na;\n                        }\n                        error_val = data_error_val.data.v;\n                    }\n                } else {\n                    error_val = data_error_val;\n                }\n                var error_obj = {\n                    '#NULL!': 1,\n                    '#DIV/0!': 2,\n                    '#VALUE!': 3,\n                    '#REF!': 4,\n                    '#NAME?': 5,\n                    '#NUM!': 6,\n                    '#N/A': 7,\n                    '#GETTING_DATA': 8\n                };\n                if (error_val in error_obj) {\n                    return error_obj[error_val];\n                } else {\n                    return formula.error.na;\n                }\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'ISBLANK': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //单元格\n                var data_error_val = arguments[0];\n                var error_val;\n                if (getObjType(data_error_val) == 'object' && data_error_val.startCell != null) {\n                    if (data_error_val.data == null) {\n                        return true;\n                    } else {\n                        return false;\n                    }\n                } else {\n                    return false;\n                }\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'ISERR': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //单元格\n                var data_value = arguments[0];\n                var value;\n                if (getObjType(data_value) == 'array') {\n                    if (getObjType(data_value[0]) == 'array') {\n                        if (!func_methods.isDyadicArr(data_value)) {\n                            return formula.error.v;\n                        }\n                        value = data_value[0][0];\n                    } else {\n                        value = data_value[0];\n                    }\n                } else if (getObjType(data_value) == 'object' && data_value.startCell != null) {\n                    if (getObjType(data_value.data) == 'array') {\n                        return true;\n                    }\n                    if (data_value.data == null || isRealNull(data_value.data.v)) {\n                        return false;\n                    }\n                    value = data_value.data.v;\n                } else {\n                    value = data_value;\n                }\n                if ([\n                        '#VALUE!',\n                        '#REF!',\n                        '#DIV/0!',\n                        '#NUM!',\n                        '#NAME?',\n                        '#NULL!'\n                    ].indexOf(value) > -1) {\n                    return true;\n                } else {\n                    return false;\n                }\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'ISERROR': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //单元格\n                var data_value = arguments[0];\n                var value;\n                if (getObjType(data_value) == 'array') {\n                    if (getObjType(data_value[0]) == 'array') {\n                        if (!func_methods.isDyadicArr(data_value)) {\n                            return formula.error.v;\n                        }\n                        value = data_value[0][0];\n                    } else {\n                        value = data_value[0];\n                    }\n                } else if (getObjType(data_value) == 'object' && data_value.startCell != null) {\n                    if (getObjType(data_value.data) == 'array') {\n                        return true;\n                    }\n                    if (data_value.data == null || isRealNull(data_value.data.v)) {\n                        return false;\n                    }\n                    value = data_value.data.v;\n                } else {\n                    value = data_value;\n                }\n                if ([\n                        '#N/A',\n                        '#VALUE!',\n                        '#REF!',\n                        '#DIV/0!',\n                        '#NUM!',\n                        '#NAME?',\n                        '#NULL!'\n                    ].indexOf(value) > -1) {\n                    return true;\n                } else {\n                    return false;\n                }\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'ISLOGICAL': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //单元格\n                var data_value = arguments[0];\n                var value;\n                if (getObjType(data_value) == 'array') {\n                    if (getObjType(data_value[0]) == 'array') {\n                        if (!func_methods.isDyadicArr(data_value)) {\n                            return formula.error.v;\n                        }\n                        value = data_value[0][0];\n                    } else {\n                        value = data_value[0];\n                    }\n                } else if (getObjType(data_value) == 'object' && data_value.startCell != null) {\n                    if (getObjType(data_value.data) == 'array') {\n                        return false;\n                    }\n                    if (data_value.data == null || isRealNull(data_value.data.v)) {\n                        return false;\n                    }\n                    value = data_value.data.v;\n                } else {\n                    value = data_value;\n                }\n                if (value.toString().toLowerCase() == 'true' || value.toString().toLowerCase() == 'false') {\n                    return true;\n                } else {\n                    return false;\n                }\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'ISNA': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //单元格\n                var data_value = arguments[0];\n                var value;\n                if (getObjType(data_value) == 'array') {\n                    if (getObjType(data_value[0]) == 'array') {\n                        if (!func_methods.isDyadicArr(data_value)) {\n                            return formula.error.v;\n                        }\n                        value = data_value[0][0];\n                    } else {\n                        value = data_value[0];\n                    }\n                } else if (getObjType(data_value) == 'object' && data_value.startCell != null) {\n                    if (getObjType(data_value.data) == 'array') {\n                        return false;\n                    }\n                    if (data_value.data == null || isRealNull(data_value.data.v)) {\n                        return false;\n                    }\n                    value = data_value.data.v;\n                } else {\n                    value = data_value;\n                }\n                if (value.toString() == '#N/A') {\n                    return true;\n                } else {\n                    return false;\n                }\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'ISNONTEXT': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //单元格\n                var data_value = arguments[0];\n                var value;\n                if (getObjType(data_value) == 'array') {\n                    if (getObjType(data_value[0]) == 'array') {\n                        if (!func_methods.isDyadicArr(data_value)) {\n                            return formula.error.v;\n                        }\n                        value = data_value[0][0];\n                    } else {\n                        value = data_value[0];\n                    }\n                } else if (getObjType(data_value) == 'object' && data_value.startCell != null) {\n                    if (getObjType(data_value.data) == 'array') {\n                        return true;\n                    }\n                    if (data_value.data == null || isRealNull(data_value.data.v)) {\n                        return true;\n                    }\n                    value = data_value.data.v;\n                } else {\n                    value = data_value;\n                }\n                if ([\n                        '#N/A',\n                        '#VALUE!',\n                        '#REF!',\n                        '#DIV/0!',\n                        '#NUM!',\n                        '#NAME?',\n                        '#NULL!'\n                    ].indexOf(value) > -1) {\n                    return true;\n                } else if (value.toString().toLowerCase() == 'true' || value.toString().toLowerCase() == 'false') {\n                    return true;\n                } else if (isRealNum(value)) {\n                    return true;\n                } else {\n                    return false;\n                }\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'ISNUMBER': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //单元格\n                var data_value = arguments[0];\n                var value;\n                if (getObjType(data_value) == 'array') {\n                    if (getObjType(data_value[0]) == 'array') {\n                        if (!func_methods.isDyadicArr(data_value)) {\n                            return formula.error.v;\n                        }\n                        value = data_value[0][0];\n                    } else {\n                        value = data_value[0];\n                    }\n                } else if (getObjType(data_value) == 'object' && data_value.startCell != null) {\n                    if (getObjType(data_value.data) == 'array') {\n                        return false;\n                    }\n                    if (data_value.data == null || isRealNull(data_value.data.v)) {\n                        return false;\n                    }\n                    value = data_value.data.v;\n                } else {\n                    value = data_value;\n                }\n                if (isRealNum(value)) {\n                    return true;\n                } else {\n                    return false;\n                }\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'ISREF': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                if (getObjType(arguments[0]) == 'object' && arguments[0].startCell != null) {\n                    return true;\n                } else {\n                    return false;\n                }\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'ISTEXT': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //单元格\n                var data_value = arguments[0];\n                var value;\n                if (getObjType(data_value) == 'array') {\n                    if (getObjType(data_value[0]) == 'array') {\n                        if (!func_methods.isDyadicArr(data_value)) {\n                            return formula.error.v;\n                        }\n                        value = data_value[0][0];\n                    } else {\n                        value = data_value[0];\n                    }\n                } else if (getObjType(data_value) == 'object' && data_value.startCell != null) {\n                    if (getObjType(data_value.data) == 'array') {\n                        return false;\n                    }\n                    if (data_value.data == null || isRealNull(data_value.data.v)) {\n                        return false;\n                    }\n                    value = data_value.data.v;\n                } else {\n                    value = data_value;\n                }\n                if ([\n                        '#N/A',\n                        '#VALUE!',\n                        '#REF!',\n                        '#DIV/0!',\n                        '#NUM!',\n                        '#NAME?',\n                        '#NULL!'\n                    ].indexOf(value) > -1) {\n                    return false;\n                } else if (value.toString().toLowerCase() == 'true' || value.toString().toLowerCase() == 'false') {\n                    return false;\n                } else if (isRealNum(value)) {\n                    return false;\n                } else {\n                    return true;\n                }\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'TYPE': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //单元格\n                var data_value = arguments[0];\n                var value;\n                if (getObjType(data_value) == 'array') {\n                    return 64;\n                } else if (getObjType(data_value) == 'object' && data_value.startCell != null) {\n                    if (getObjType(data_value.data) == 'array') {\n                        return 16;\n                    }\n                    if (data_value.data == null || isRealNull(data_value.data.v)) {\n                        return 1;\n                    }\n                    value = data_value.data.v;\n                } else {\n                    value = data_value;\n                }\n                if ([\n                        '#N/A',\n                        '#VALUE!',\n                        '#REF!',\n                        '#DIV/0!',\n                        '#NUM!',\n                        '#NAME?',\n                        '#NULL!'\n                    ].indexOf(value) > -1) {\n                    return 16;\n                } else if (value.toString().toLowerCase() == 'true' || value.toString().toLowerCase() == 'false') {\n                    return 4;\n                } else if (isRealNum(value)) {\n                    return 1;\n                } else {\n                    return 2;\n                }\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'N': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //单元格\n                var data_value = arguments[0];\n                var value;\n                if (getObjType(data_value) == 'array') {\n                    if (getObjType(data_value[0]) == 'array') {\n                        if (!func_methods.isDyadicArr(data_value)) {\n                            return formula.error.v;\n                        }\n                        value = data_value[0][0];\n                    } else {\n                        value = data_value[0];\n                    }\n                } else if (getObjType(data_value) == 'object' && data_value.startCell != null) {\n                    if (getObjType(data_value.data) == 'array') {\n                        value = data_value.data[0][0];\n                        if (value == null || isRealNull(value.v)) {\n                            return 0;\n                        }\n                        value = value.v;\n                    } else {\n                        if (data_value.data == null || isRealNull(data_value.data.v)) {\n                            return 0;\n                        }\n                        value = data_value.data.v;\n                    }\n                } else {\n                    value = data_value;\n                }\n                if ([\n                        '#N/A',\n                        '#VALUE!',\n                        '#REF!',\n                        '#DIV/0!',\n                        '#NUM!',\n                        '#NAME?',\n                        '#NULL!'\n                    ].indexOf(value) > -1) {\n                    return value;\n                } else if (value.toString().toLowerCase() == 'true' || value.toString().toLowerCase() == 'false') {\n                    if (value.toString().toLowerCase() == 'true') {\n                        return 1;\n                    } else {\n                        return 0;\n                    }\n                } else if (isRealNum(value)) {\n                    return parseFloat(value);\n                } else {\n                    return 0;\n                }\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'TO_DATE': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //数字\n                var value = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(value)) {\n                    return value;\n                }\n                if (!isRealNum(value)) {\n                    return formula.error.v;\n                }\n                value = parseFloat(value);\n                return update('yyyy-mm-dd', value);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'TO_PURE_NUMBER': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var value = func_methods.getFirstValue(arguments[0], 'text');\n                if (valueIsError(value)) {\n                    return value;\n                }\n                if (dayjs(value).isValid()) {\n                    return genarate(value)[2];\n                } else {\n                    return numeral(value).value() == null ? value : numeral(value).value();\n                }\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'TO_TEXT': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var value = func_methods.getFirstValue(arguments[0], 'text');\n                if (valueIsError(value)) {\n                    return value;\n                }\n                return update('@', value);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'TO_DOLLARS': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //数字\n                var value = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(value)) {\n                    return value;\n                }\n                if (!isRealNum(value)) {\n                    return formula.error.v;\n                }\n                value = parseFloat(value);\n                return update('$ 0.00', value);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'TO_PERCENT': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //数字\n                var value = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(value)) {\n                    return value;\n                }\n                if (!isRealNum(value)) {\n                    return formula.error.v;\n                }\n                value = parseFloat(value);\n                return update('0%', value);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'DGET': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //数据库的单元格区域\n                var data_database = arguments[0];\n                var database = [];\n                if (getObjType(data_database) == 'object' && data_database.startCell != null) {\n                    if (data_database.data == null) {\n                        return formula.error.v;\n                    }\n                    database = func_methods.getCellDataDyadicArr(data_database, 'text');\n                } else {\n                    return formula.error.v;\n                }    //列\n                //列\n                var field = func_methods.getFirstValue(arguments[1], 'text');\n                if (valueIsError(field)) {\n                    return field;\n                }\n                if (isRealNull(field)) {\n                    return formula.error.v;\n                }    //条件的单元格区域\n                //条件的单元格区域\n                var data_criteria = arguments[2];\n                var criteria = [];\n                if (getObjType(data_criteria) == 'object' && data_criteria.startCell != null) {\n                    if (data_criteria.data == null) {\n                        return formula.error.v;\n                    }\n                    criteria = func_methods.getCellDataDyadicArr(data_criteria, 'text');\n                } else {\n                    return formula.error.v;\n                }\n                if (!isRealNum(field) && getObjType(field) !== 'string') {\n                    return formula.error.v;\n                }\n                var resultIndexes = func_methods.findResultIndex(database, criteria);\n                var targetFields = [];\n                if (getObjType(field) === 'string') {\n                    var index = func_methods.findField(database, field);\n                    targetFields = func_methods.rest(database[index]);\n                } else {\n                    targetFields = func_methods.rest(database[field]);\n                }\n                if (resultIndexes.length === 0) {\n                    return formula.error.v;\n                }\n                if (resultIndexes.length > 1) {\n                    return formula.error.nm;\n                }\n                return targetFields[resultIndexes[0]];\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'DMAX': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //数据库的单元格区域\n                var data_database = arguments[0];\n                var database = [];\n                if (getObjType(data_database) == 'object' && data_database.startCell != null) {\n                    if (data_database.data == null) {\n                        return formula.error.v;\n                    }\n                    database = func_methods.getCellDataDyadicArr(data_database, 'text');\n                } else {\n                    return formula.error.v;\n                }    //列\n                //列\n                var field = func_methods.getFirstValue(arguments[1], 'text');\n                if (valueIsError(field)) {\n                    return field;\n                }\n                if (isRealNull(field)) {\n                    return formula.error.v;\n                }    //条件的单元格区域\n                //条件的单元格区域\n                var data_criteria = arguments[2];\n                var criteria = [];\n                if (getObjType(data_criteria) == 'object' && data_criteria.startCell != null) {\n                    if (data_criteria.data == null) {\n                        return formula.error.v;\n                    }\n                    criteria = func_methods.getCellDataDyadicArr(data_criteria, 'text');\n                } else {\n                    return formula.error.v;\n                }\n                if (!isRealNum(field) && getObjType(field) !== 'string') {\n                    return formula.error.v;\n                }\n                var resultIndexes = func_methods.findResultIndex(database, criteria);\n                var targetFields = [];\n                if (getObjType(field) === 'string') {\n                    var index = func_methods.findField(database, field);\n                    targetFields = func_methods.rest(database[index]);\n                } else {\n                    targetFields = func_methods.rest(database[field]);\n                }\n                var maxValue = targetFields[resultIndexes[0]];\n                for (var i = 1; i < resultIndexes.length; i++) {\n                    if (maxValue < targetFields[resultIndexes[i]]) {\n                        maxValue = targetFields[resultIndexes[i]];\n                    }\n                }\n                return maxValue;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'DMIN': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //数据库的单元格区域\n                var data_database = arguments[0];\n                var database = [];\n                if (getObjType(data_database) == 'object' && data_database.startCell != null) {\n                    if (data_database.data == null) {\n                        return formula.error.v;\n                    }\n                    database = func_methods.getCellDataDyadicArr(data_database, 'text');\n                } else {\n                    return formula.error.v;\n                }    //列\n                //列\n                var field = func_methods.getFirstValue(arguments[1], 'text');\n                if (valueIsError(field)) {\n                    return field;\n                }\n                if (isRealNull(field)) {\n                    return formula.error.v;\n                }    //条件的单元格区域\n                //条件的单元格区域\n                var data_criteria = arguments[2];\n                var criteria = [];\n                if (getObjType(data_criteria) == 'object' && data_criteria.startCell != null) {\n                    if (data_criteria.data == null) {\n                        return formula.error.v;\n                    }\n                    criteria = func_methods.getCellDataDyadicArr(data_criteria, 'text');\n                } else {\n                    return formula.error.v;\n                }\n                if (!isRealNum(field) && getObjType(field) !== 'string') {\n                    return formula.error.v;\n                }\n                var resultIndexes = findResultIndex(database, criteria);\n                var targetFields = [];\n                if (getObjType(field) === 'string') {\n                    var index = findField(database, field);\n                    targetFields = rest(database[index]);\n                } else {\n                    targetFields = rest(database[field]);\n                }\n                var minValue = targetFields[resultIndexes[0]];\n                for (var i = 1; i < resultIndexes.length; i++) {\n                    if (minValue > targetFields[resultIndexes[i]]) {\n                        minValue = targetFields[resultIndexes[i]];\n                    }\n                }\n                return minValue;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'DAVERAGE': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //数据库的单元格区域\n                var data_database = arguments[0];\n                var database = [];\n                if (getObjType(data_database) == 'object' && data_database.startCell != null) {\n                    if (data_database.data == null) {\n                        return formula.error.v;\n                    }\n                    database = func_methods.getCellDataDyadicArr(data_database, 'text');\n                } else {\n                    return formula.error.v;\n                }    //列\n                //列\n                var field = func_methods.getFirstValue(arguments[1], 'text');\n                if (valueIsError(field)) {\n                    return field;\n                }\n                if (isRealNull(field)) {\n                    return formula.error.v;\n                }    //条件的单元格区域\n                //条件的单元格区域\n                var data_criteria = arguments[2];\n                var criteria = [];\n                if (getObjType(data_criteria) == 'object' && data_criteria.startCell != null) {\n                    if (data_criteria.data == null) {\n                        return formula.error.v;\n                    }\n                    criteria = func_methods.getCellDataDyadicArr(data_criteria, 'text');\n                } else {\n                    return formula.error.v;\n                }\n                if (!isRealNum(field) && getObjType(field) !== 'string') {\n                    return formula.error.v;\n                }\n                var resultIndexes = func_methods.findResultIndex(database, criteria);\n                var targetFields = [];\n                if (getObjType(field) === 'string') {\n                    var index = func_methods.findField(database, field);\n                    targetFields = func_methods.rest(database[index]);\n                } else {\n                    targetFields = func_methods.rest(database[field]);\n                }\n                var sum = 0;\n                for (var i = 0; i < resultIndexes.length; i++) {\n                    sum += targetFields[resultIndexes[i]];\n                }\n                return resultIndexes.length === 0 ? formula.error.d : sum / resultIndexes.length;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'DCOUNT': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //数据库的单元格区域\n                var data_database = arguments[0];\n                var database = [];\n                if (getObjType(data_database) == 'object' && data_database.startCell != null) {\n                    if (data_database.data == null) {\n                        return formula.error.v;\n                    }\n                    database = func_methods.getCellDataDyadicArr(data_database, 'text');\n                } else {\n                    return formula.error.v;\n                }    //列\n                //列\n                var field = func_methods.getFirstValue(arguments[1], 'text');\n                if (valueIsError(field)) {\n                    return field;\n                }\n                if (isRealNull(field)) {\n                    return formula.error.v;\n                }    //条件的单元格区域\n                //条件的单元格区域\n                var data_criteria = arguments[2];\n                var criteria = [];\n                if (getObjType(data_criteria) == 'object' && data_criteria.startCell != null) {\n                    if (data_criteria.data == null) {\n                        return formula.error.v;\n                    }\n                    criteria = func_methods.getCellDataDyadicArr(data_criteria, 'text');\n                } else {\n                    return formula.error.v;\n                }\n                if (!isRealNum(field) && getObjType(field) !== 'string') {\n                    return formula.error.v;\n                }\n                var resultIndexes = func_methods.findResultIndex(database, criteria);\n                var targetFields = [];\n                if (getObjType(field) === 'string') {\n                    var index = func_methods.findField(database, field);\n                    targetFields = func_methods.rest(database[index]);\n                } else {\n                    targetFields = func_methods.rest(database[field]);\n                }\n                var targetValues = [];\n                for (var i = 0; i < resultIndexes.length; i++) {\n                    targetValues[i] = targetFields[resultIndexes[i]];\n                }\n                return window.luckysheet_function.COUNT.f.apply(window.luckysheet_function.COUNT, targetValues);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'DCOUNTA': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //数据库的单元格区域\n                var data_database = arguments[0];\n                var database = [];\n                if (getObjType(data_database) == 'object' && data_database.startCell != null) {\n                    if (data_database.data == null) {\n                        return formula.error.v;\n                    }\n                    database = func_methods.getCellDataDyadicArr(data_database, 'text');\n                } else {\n                    return formula.error.v;\n                }    //列\n                //列\n                var field = func_methods.getFirstValue(arguments[1], 'text');\n                if (valueIsError(field)) {\n                    return field;\n                }\n                if (isRealNull(field)) {\n                    return formula.error.v;\n                }    //条件的单元格区域\n                //条件的单元格区域\n                var data_criteria = arguments[2];\n                var criteria = [];\n                if (getObjType(data_criteria) == 'object' && data_criteria.startCell != null) {\n                    if (data_criteria.data == null) {\n                        return formula.error.v;\n                    }\n                    criteria = func_methods.getCellDataDyadicArr(data_criteria, 'text');\n                } else {\n                    return formula.error.v;\n                }\n                if (!isRealNum(field) && getObjType(field) !== 'string') {\n                    return formula.error.v;\n                }\n                var resultIndexes = func_methods.findResultIndex(database, criteria);\n                var targetFields = [];\n                if (getObjType(field) === 'string') {\n                    var index = func_methods.findField(database, field);\n                    targetFields = func_methods.rest(database[index]);\n                } else {\n                    targetFields = func_methods.rest(database[field]);\n                }\n                var targetValues = [];\n                for (var i = 0; i < resultIndexes.length; i++) {\n                    targetValues[i] = targetFields[resultIndexes[i]];\n                }\n                return window.luckysheet_function.COUNTA.f.apply(window.luckysheet_function.COUNTA, targetValues);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'DPRODUCT': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //数据库的单元格区域\n                var data_database = arguments[0];\n                var database = [];\n                if (getObjType(data_database) == 'object' && data_database.startCell != null) {\n                    if (data_database.data == null) {\n                        return formula.error.v;\n                    }\n                    database = func_methods.getCellDataDyadicArr(data_database, 'text');\n                } else {\n                    return formula.error.v;\n                }    //列\n                //列\n                var field = func_methods.getFirstValue(arguments[1], 'text');\n                if (valueIsError(field)) {\n                    return field;\n                }\n                if (isRealNull(field)) {\n                    return formula.error.v;\n                }    //条件的单元格区域\n                //条件的单元格区域\n                var data_criteria = arguments[2];\n                var criteria = [];\n                if (getObjType(data_criteria) == 'object' && data_criteria.startCell != null) {\n                    if (data_criteria.data == null) {\n                        return formula.error.v;\n                    }\n                    criteria = func_methods.getCellDataDyadicArr(data_criteria, 'text');\n                } else {\n                    return formula.error.v;\n                }\n                if (!isRealNum(field) && getObjType(field) !== 'string') {\n                    return formula.error.v;\n                }\n                var resultIndexes = func_methods.findResultIndex(database, criteria);\n                var targetFields = [];\n                if (getObjType(field) === 'string') {\n                    var index = func_methods.findField(database, field);\n                    targetFields = func_methods.rest(database[index]);\n                } else {\n                    targetFields = func_methods.rest(database[field]);\n                }\n                var targetValues = [];\n                for (var i = 0; i < resultIndexes.length; i++) {\n                    targetValues[i] = targetFields[resultIndexes[i]];\n                }\n                targetValues = func_methods.compact(targetValues);\n                var result = 1;\n                for (i = 0; i < targetValues.length; i++) {\n                    result *= targetValues[i];\n                }\n                return result;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'DSTDEV': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //数据库的单元格区域\n                var data_database = arguments[0];\n                var database = [];\n                if (getObjType(data_database) == 'object' && data_database.startCell != null) {\n                    if (data_database.data == null) {\n                        return formula.error.v;\n                    }\n                    database = func_methods.getCellDataDyadicArr(data_database, 'text');\n                } else {\n                    return formula.error.v;\n                }    //列\n                //列\n                var field = func_methods.getFirstValue(arguments[1], 'text');\n                if (valueIsError(field)) {\n                    return field;\n                }\n                if (isRealNull(field)) {\n                    return formula.error.v;\n                }    //条件的单元格区域\n                //条件的单元格区域\n                var data_criteria = arguments[2];\n                var criteria = [];\n                if (getObjType(data_criteria) == 'object' && data_criteria.startCell != null) {\n                    if (data_criteria.data == null) {\n                        return formula.error.v;\n                    }\n                    criteria = func_methods.getCellDataDyadicArr(data_criteria, 'text');\n                } else {\n                    return formula.error.v;\n                }\n                if (!isRealNum(field) && getObjType(field) !== 'string') {\n                    return formula.error.v;\n                }\n                var resultIndexes = func_methods.findResultIndex(database, criteria);\n                var targetFields = [];\n                if (getObjType(field) === 'string') {\n                    var index = func_methods.findField(database, field);\n                    targetFields = func_methods.rest(database[index]);\n                } else {\n                    targetFields = func_methods.rest(database[field]);\n                }\n                var targetValues = [];\n                for (var i = 0; i < resultIndexes.length; i++) {\n                    targetValues[i] = targetFields[resultIndexes[i]];\n                }\n                targetValues = func_methods.compact(targetValues);\n                return window.luckysheet_function.STDEVA.f.apply(window.luckysheet_function.STDEVA, targetValues);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'DSTDEVP': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //数据库的单元格区域\n                var data_database = arguments[0];\n                var database = [];\n                if (getObjType(data_database) == 'object' && data_database.startCell != null) {\n                    if (data_database.data == null) {\n                        return formula.error.v;\n                    }\n                    database = func_methods.getCellDataDyadicArr(data_database, 'text');\n                } else {\n                    return formula.error.v;\n                }    //列\n                //列\n                var field = func_methods.getFirstValue(arguments[1], 'text');\n                if (valueIsError(field)) {\n                    return field;\n                }\n                if (isRealNull(field)) {\n                    return formula.error.v;\n                }    //条件的单元格区域\n                //条件的单元格区域\n                var data_criteria = arguments[2];\n                var criteria = [];\n                if (getObjType(data_criteria) == 'object' && data_criteria.startCell != null) {\n                    if (data_criteria.data == null) {\n                        return formula.error.v;\n                    }\n                    criteria = func_methods.getCellDataDyadicArr(data_criteria, 'text');\n                } else {\n                    return formula.error.v;\n                }\n                if (!isRealNum(field) && getObjType(field) !== 'string') {\n                    return formula.error.v;\n                }\n                var resultIndexes = func_methods.findResultIndex(database, criteria);\n                var targetFields = [];\n                if (getObjType(field) === 'string') {\n                    var index = func_methods.findField(database, field);\n                    targetFields = func_methods.rest(database[index]);\n                } else {\n                    targetFields = func_methods.rest(database[field]);\n                }\n                var targetValues = [];\n                for (var i = 0; i < resultIndexes.length; i++) {\n                    targetValues[i] = targetFields[resultIndexes[i]];\n                }\n                targetValues = func_methods.compact(targetValues);\n                return window.luckysheet_function.STDEVP.f.apply(window.luckysheet_function.STDEVP, targetValues);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'DSUM': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //数据库的单元格区域\n                var data_database = arguments[0];\n                var database = [];\n                if (getObjType(data_database) == 'object' && data_database.startCell != null) {\n                    if (data_database.data == null) {\n                        return formula.error.v;\n                    }\n                    database = func_methods.getCellDataDyadicArr(data_database, 'text');\n                } else {\n                    return formula.error.v;\n                }    //列\n                //列\n                var field = func_methods.getFirstValue(arguments[1], 'text');\n                if (valueIsError(field)) {\n                    return field;\n                }\n                if (isRealNull(field)) {\n                    return formula.error.v;\n                }    //条件的单元格区域\n                //条件的单元格区域\n                var data_criteria = arguments[2];\n                var criteria = [];\n                if (getObjType(data_criteria) == 'object' && data_criteria.startCell != null) {\n                    if (data_criteria.data == null) {\n                        return formula.error.v;\n                    }\n                    criteria = func_methods.getCellDataDyadicArr(data_criteria, 'text');\n                } else {\n                    return formula.error.v;\n                }\n                if (!isRealNum(field) && getObjType(field) !== 'string') {\n                    return formula.error.v;\n                }\n                var resultIndexes = func_methods.findResultIndex(database, criteria);\n                var targetFields = [];\n                if (getObjType(field) === 'string') {\n                    var index = func_methods.findField(database, field);\n                    targetFields = func_methods.rest(database[index]);\n                } else {\n                    targetFields = func_methods.rest(database[field]);\n                }\n                var targetValues = [];\n                for (var i = 0; i < resultIndexes.length; i++) {\n                    targetValues[i] = targetFields[resultIndexes[i]];\n                }\n                targetValues = func_methods.compact(targetValues);\n                var result = 0;\n                for (i = 0; i < targetValues.length; i++) {\n                    result += targetValues[i];\n                }\n                return result;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'DVAR': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //数据库的单元格区域\n                var data_database = arguments[0];\n                var database = [];\n                if (getObjType(data_database) == 'object' && data_database.startCell != null) {\n                    if (data_database.data == null) {\n                        return formula.error.v;\n                    }\n                    database = func_methods.getCellDataDyadicArr(data_database, 'text');\n                } else {\n                    return formula.error.v;\n                }    //列\n                //列\n                var field = func_methods.getFirstValue(arguments[1], 'text');\n                if (valueIsError(field)) {\n                    return field;\n                }\n                if (isRealNull(field)) {\n                    return formula.error.v;\n                }    //条件的单元格区域\n                //条件的单元格区域\n                var data_criteria = arguments[2];\n                var criteria = [];\n                if (getObjType(data_criteria) == 'object' && data_criteria.startCell != null) {\n                    if (data_criteria.data == null) {\n                        return formula.error.v;\n                    }\n                    criteria = func_methods.getCellDataDyadicArr(data_criteria, 'text');\n                } else {\n                    return formula.error.v;\n                }\n                if (!isRealNum(field) && getObjType(field) !== 'string') {\n                    return formula.error.v;\n                }\n                var resultIndexes = func_methods.findResultIndex(database, criteria);\n                var targetFields = [];\n                if (getObjType(field) === 'string') {\n                    var index = func_methods.findField(database, field);\n                    targetFields = func_methods.rest(database[index]);\n                } else {\n                    targetFields = func_methods.rest(database[field]);\n                }\n                var targetValues = [];\n                for (var i = 0; i < resultIndexes.length; i++) {\n                    targetValues[i] = targetFields[resultIndexes[i]];\n                }\n                targetValues = func_methods.compact(targetValues);\n                return window.luckysheet_function.VAR_S.f.apply(window.luckysheet_function.VAR_S, targetValues);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'DVARP': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //数据库的单元格区域\n                var data_database = arguments[0];\n                var database = [];\n                if (getObjType(data_database) == 'object' && data_database.startCell != null) {\n                    if (data_database.data == null) {\n                        return formula.error.v;\n                    }\n                    database = func_methods.getCellDataDyadicArr(data_database, 'text');\n                } else {\n                    return formula.error.v;\n                }    //列\n                //列\n                var field = func_methods.getFirstValue(arguments[1], 'text');\n                if (valueIsError(field)) {\n                    return field;\n                }\n                if (isRealNull(field)) {\n                    return formula.error.v;\n                }    //条件的单元格区域\n                //条件的单元格区域\n                var data_criteria = arguments[2];\n                var criteria = [];\n                if (getObjType(data_criteria) == 'object' && data_criteria.startCell != null) {\n                    if (data_criteria.data == null) {\n                        return formula.error.v;\n                    }\n                    criteria = func_methods.getCellDataDyadicArr(data_criteria, 'text');\n                } else {\n                    return formula.error.v;\n                }\n                if (!isRealNum(field) && getObjType(field) !== 'string') {\n                    return formula.error.v;\n                }\n                var resultIndexes = func_methods.findResultIndex(database, criteria);\n                var targetFields = [];\n                if (getObjType(field) === 'string') {\n                    var index = func_methods.findField(database, field);\n                    targetFields = func_methods.rest(database[index]);\n                } else {\n                    targetFields = func_methods.rest(database[field]);\n                }\n                var targetValues = [];\n                for (var i = 0; i < resultIndexes.length; i++) {\n                    targetValues[i] = targetFields[resultIndexes[i]];\n                }\n                targetValues = func_methods.compact(targetValues);\n                return window.luckysheet_function.VAR_P.f.apply(window.luckysheet_function.VAR_P, targetValues);\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'LINESPLINES': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var cell_r = window.luckysheetCurrentRow;\n                var cell_c = window.luckysheetCurrentColumn;\n                var cell_fp = window.luckysheetCurrentFunction;    //色表，接下来会用到\n                //色表，接下来会用到\n                var colorList = formula.colorList;\n                var rangeValue = arguments[0];\n                var lineColor = arguments[1];\n                var lineWidth = arguments[2];\n                var normalValue = arguments[3];\n                var normalColor = arguments[4];\n                var maxSpot = arguments[5];\n                var minSpot = arguments[6];\n                var spotRadius = arguments[7];\n                let luckysheetfile = getluckysheetfile();\n                let index = getSheetIndex(Store.calculateSheetIndex);\n                let sheetdata = luckysheetfile[index].data;    //定义需要格式化data数据\n                //定义需要格式化data数据\n                var dataformat = formula.readCellDataToOneArray(rangeValue);    //在下面获得该单元格的长度和宽度,同时考虑了合并单元格问题\n                //在下面获得该单元格的长度和宽度,同时考虑了合并单元格问题\n                var cellSize = menuButton.getCellRealSize(sheetdata, cell_r, cell_c);\n                var width = cellSize[0];\n                var height = cellSize[1];    //开始进行sparklines的详细设置，宽和高为单元格的宽高。\n                //开始进行sparklines的详细设置，宽和高为单元格的宽高。\n                var sparksetting = {};\n                if (lineWidth == null) {\n                    lineWidth = 1;\n                }\n                sparksetting['lineWidth'] = lineWidth;    //设置sparklines图表的宽高，线图的高会随着粗细而超出单元格高度，所以减去一个量，设置offsetY或者offsetX为渲染偏移量，传给luckysheetDrawMain使用。默认为0。=LINESPLINES(D9:E24,3,5)\n                //设置sparklines图表的宽高，线图的高会随着粗细而超出单元格高度，所以减去一个量，设置offsetY或者offsetX为渲染偏移量，传给luckysheetDrawMain使用。默认为0。=LINESPLINES(D9:E24,3,5)\n                sparksetting['offsetY'] = lineWidth + 1;\n                sparksetting.height = height - (lineWidth + 1);\n                sparksetting.width = width;    //定义sparklines的通用色彩设置函数，可以设置 色表【colorList】索引数值 或者 具体颜色值\n                //定义sparklines的通用色彩设置函数，可以设置 色表【colorList】索引数值 或者 具体颜色值\n                var sparkColorSetting = function (attr, value) {\n                    if (!!value) {\n                        if (typeof value == 'number') {\n                            if (value > 19) {\n                                value = value % 20;\n                            }\n                            value = colorList[value];\n                        }\n                        sparksetting[attr] = value;\n                    }\n                };\n                if (lineColor == null) {\n                    lineColor = '#2ec7c9';\n                }\n                sparkColorSetting('lineColor', lineColor);    //sparkColorSetting(\"fillColor\", fillColor);\n                //sparkColorSetting(\"fillColor\", fillColor);\n                sparksetting['fillColor'] = 0;    //设置辅助线，可以支持min、max、avg、median等几个字符变量，或者具体的数值。\n                //设置辅助线，可以支持min、max、avg、median等几个字符变量，或者具体的数值。\n                if (!!normalValue) {\n                    if (typeof normalValue == 'string') {\n                        normalValue = normalValue.toLowerCase();\n                        var nv = null;\n                        if (normalValue == 'min') {\n                            nv = window.luckysheet_function.MIN.f({ 'data': dataformat });\n                        } else if (normalValue == 'max') {\n                            nv = window.luckysheet_function.MAX.f({ 'data': dataformat });\n                        } else if (normalValue == 'avg' || normalValue == 'mean') {\n                            nv = window.luckysheet_function.AVERAGE.f({ 'data': dataformat });\n                        } else if (normalValue == 'median') {\n                            nv = window.luckysheet_function.MEDIAN.f({ 'data': dataformat });\n                        }\n                        if (!!nv) {\n                            sparksetting['normalRangeMin'] = nv;\n                            sparksetting['normalRangeMax'] = nv;\n                        }\n                    } else {\n                        sparksetting['normalRangeMin'] = normalValue;\n                        sparksetting['normalRangeMax'] = normalValue;\n                    }\n                }\n                if (normalColor == null) {\n                    normalColor = '#000';\n                }\n                sparkColorSetting('normalRangeColor', normalColor);\n                sparkColorSetting('maxSpotColor', maxSpot);\n                sparkColorSetting('minSpotColor', minSpot);\n                if (spotRadius == null) {\n                    spotRadius = '1.5';\n                }\n                sparksetting['spotRadius'] = spotRadius;\n                var temp1 = luckysheetSparkline.init(dataformat, sparksetting);\n                return temp1;    // {\n                                 //     height:rowlen,\n                                 //     width:firstcolumnlen,\n                                 //     normalRangeMin:6,\n                                 //     normalRangeMax:6,\n                                 //     normalRangeColor:\"#000\"\n                                 // }\n                                 //return \"\";\n            } // {\n            //     height:rowlen,\n            //     width:firstcolumnlen,\n            //     normalRangeMin:6,\n            //     normalRangeMax:6,\n            //     normalRangeColor:\"#000\"\n            // }\n            //return \"\";\n            catch (e) {\n                var err = e;    //计算错误检测\n                //计算错误检测\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'AREASPLINES': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var cell_r = window.luckysheetCurrentRow;\n                var cell_c = window.luckysheetCurrentColumn;\n                var cell_fp = window.luckysheetCurrentFunction;    //色表，接下来会用到\n                //色表，接下来会用到\n                var colorList = formula.colorList;\n                var rangeValue = arguments[0];\n                var lineColor = arguments[1];\n                var fillColor = arguments[2];\n                var lineWidth = arguments[3];\n                var normalValue = arguments[4];\n                var normalColor = arguments[5];    // var maxSpot = arguments[5];\n                                                   // var minSpot = arguments[6];\n                                                   // var spotRadius = arguments[7];\n                                                   //定义需要格式化data数据\n                // var maxSpot = arguments[5];\n                // var minSpot = arguments[6];\n                // var spotRadius = arguments[7];\n                //定义需要格式化data数据\n                var dataformat = formula.readCellDataToOneArray(rangeValue);\n                let luckysheetfile = getluckysheetfile();\n                let index = getSheetIndex(Store.calculateSheetIndex);\n                let sheetdata = luckysheetfile[index].data;    //在下面获得该单元格的长度和宽度,同时考虑了合并单元格问题\n                //在下面获得该单元格的长度和宽度,同时考虑了合并单元格问题\n                var cellSize = menuButton.getCellRealSize(sheetdata, cell_r, cell_c);\n                var width = cellSize[0];\n                var height = cellSize[1];    //开始进行sparklines的详细设置，宽和高为单元格的宽高。\n                //开始进行sparklines的详细设置，宽和高为单元格的宽高。\n                var sparksetting = {};\n                if (lineWidth == null) {\n                    lineWidth = 1;\n                }\n                sparksetting['lineWidth'] = lineWidth;    //设置sparklines图表的宽高，线图的高会随着粗细而超出单元格高度，所以减去一个量，设置offsetY或者offsetX为渲染偏移量，传给luckysheetDrawMain使用。默认为0。=LINESPLINES(D9:E24,3,5)\n                //设置sparklines图表的宽高，线图的高会随着粗细而超出单元格高度，所以减去一个量，设置offsetY或者offsetX为渲染偏移量，传给luckysheetDrawMain使用。默认为0。=LINESPLINES(D9:E24,3,5)\n                sparksetting['offsetY'] = lineWidth + 1;\n                sparksetting.height = height - (lineWidth + 1);\n                sparksetting.width = width;    //定义sparklines的通用色彩设置函数，可以设置 色表【colorList】索引数值 或者 具体颜色值\n                //定义sparklines的通用色彩设置函数，可以设置 色表【colorList】索引数值 或者 具体颜色值\n                var sparkColorSetting = function (attr, value) {\n                    if (!!value) {\n                        if (typeof value == 'number') {\n                            if (value > 19) {\n                                value = value % 20;\n                            }\n                            value = colorList[value];\n                        }\n                        sparksetting[attr] = value;\n                    }\n                };\n                if (lineColor == null) {\n                    lineColor = '#2ec7c9';\n                }\n                sparkColorSetting('lineColor', lineColor);\n                sparkColorSetting('fillColor', fillColor);    // sparksetting[\"fillColor\"] = 0;\n                // sparksetting[\"fillColor\"] = 0;\n                if (lineWidth == null) {\n                    lineWidth = '1';\n                }\n                sparksetting['lineWidth'] = lineWidth;    //设置辅助线，可以支持min、max、avg、median等几个字符变量，或者具体的数值。\n                //设置辅助线，可以支持min、max、avg、median等几个字符变量，或者具体的数值。\n                if (!!normalValue) {\n                    if (typeof normalValue == 'string') {\n                        normalValue = normalValue.toLowerCase();\n                        var nv = null;\n                        if (normalValue == 'min') {\n                            nv = window.luckysheet_function.MIN.f({ 'data': dataformat });\n                        } else if (normalValue == 'max') {\n                            nv = window.luckysheet_function.MAX.f({ 'data': dataformat });\n                        } else if (normalValue == 'avg' || normalValue == 'mean') {\n                            nv = window.luckysheet_function.AVERAGE.f({ 'data': dataformat });\n                        } else if (normalValue == 'median') {\n                            nv = window.luckysheet_function.MEDIAN.f({ 'data': dataformat });\n                        }\n                        if (!!nv) {\n                            sparksetting['normalRangeMin'] = nv;\n                            sparksetting['normalRangeMax'] = nv;\n                        }\n                    } else {\n                        sparksetting['normalRangeMin'] = normalValue;\n                        sparksetting['normalRangeMax'] = normalValue;\n                    }\n                }\n                if (normalColor == null) {\n                    normalColor = '#000';\n                }\n                sparkColorSetting('normalRangeColor', normalColor);    // sparkColorSetting(\"maxSpotColor\", maxSpot);\n                                                                       // sparkColorSetting(\"minSpotColor\", minSpot);\n                                                                       // if(spotRadius==null){\n                                                                       //     spotRadius = \"1.5\";\n                                                                       // }\n                                                                       // sparksetting[\"spotRadius\"] = spotRadius;\n                // sparkColorSetting(\"maxSpotColor\", maxSpot);\n                // sparkColorSetting(\"minSpotColor\", minSpot);\n                // if(spotRadius==null){\n                //     spotRadius = \"1.5\";\n                // }\n                // sparksetting[\"spotRadius\"] = spotRadius;\n                var temp1 = luckysheetSparkline.init(dataformat, sparksetting);\n                return temp1;    // {\n                                 //     height:rowlen,\n                                 //     width:firstcolumnlen,\n                                 //     normalRangeMin:6,\n                                 //     normalRangeMax:6,\n                                 //     normalRangeColor:\"#000\"\n                                 // }\n                                 //return \"\";\n            } // {\n            //     height:rowlen,\n            //     width:firstcolumnlen,\n            //     normalRangeMin:6,\n            //     normalRangeMax:6,\n            //     normalRangeColor:\"#000\"\n            // }\n            //return \"\";\n            catch (e) {\n                var err = e;    //计算错误检测\n                //计算错误检测\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'COLUMNSPLINES': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var cell_r = window.luckysheetCurrentRow;\n                var cell_c = window.luckysheetCurrentColumn;\n                var cell_fp = window.luckysheetCurrentFunction;    //色表，接下来会用到\n                //色表，接下来会用到\n                var colorList = formula.colorList;\n                var rangeValue = arguments[0];    //定义需要格式化data数据\n                //定义需要格式化data数据\n                var dataformat = formula.readCellDataToOneArray(rangeValue);\n                let luckysheetfile = getluckysheetfile();\n                let index = getSheetIndex(Store.calculateSheetIndex);\n                let sheetdata = luckysheetfile[index].data;    //在下面获得该单元格的长度和宽度,同时考虑了合并单元格问题\n                //在下面获得该单元格的长度和宽度,同时考虑了合并单元格问题\n                var cellSize = menuButton.getCellRealSize(sheetdata, cell_r, cell_c);\n                var width = cellSize[0];\n                var height = cellSize[1];    //开始进行sparklines的详细设置，宽和高为单元格的宽高。\n                //开始进行sparklines的详细设置，宽和高为单元格的宽高。\n                var sparksetting = {};    //设置sparklines图表的宽高，线图的高会随着粗细而超出单元格高度，所以减去一个量，设置offsetY或者offsetX为渲染偏移量，传给luckysheetDrawMain使用。默认为0。=LINESPLINES(D9:E24,3,5)\n                //设置sparklines图表的宽高，线图的高会随着粗细而超出单元格高度，所以减去一个量，设置offsetY或者offsetX为渲染偏移量，传给luckysheetDrawMain使用。默认为0。=LINESPLINES(D9:E24,3,5)\n                sparksetting.height = height;\n                sparksetting.width = width;    //定义sparklines的通用色彩设置函数，可以设置 色表【colorList】索引数值 或者 具体颜色值\n                //定义sparklines的通用色彩设置函数，可以设置 色表【colorList】索引数值 或者 具体颜色值\n                var sparkColorSetting = function (attr, value) {\n                    if (!!value) {\n                        if (typeof value == 'number') {\n                            if (value > 19) {\n                                value = value % 20;\n                            }\n                            value = colorList[value];\n                        }\n                        sparksetting[attr] = value;\n                    }\n                };\n                var barSpacing = arguments[1];\n                var barColor = arguments[2];\n                var negBarColor = arguments[3];\n                var chartRangeMax = arguments[4];    ////具体实现\n                ////具体实现\n                sparksetting['type'] = 'column';\n                if (barSpacing == null) {\n                    barSpacing = '1';\n                }\n                sparksetting['barSpacing'] = barSpacing;\n                if (barColor == null) {\n                    barColor = '#fc5c5c';\n                }\n                sparkColorSetting('barColor', barColor);\n                if (negBarColor == null) {\n                    negBarColor = '#97b552';\n                }\n                sparkColorSetting('negBarColor', negBarColor);\n                if (chartRangeMax == null || chartRangeMax === false || typeof chartRangeMax != 'number') {\n                    sparksetting['chartRangeMax'] = undefined;\n                } else {\n                    sparksetting['chartRangeMax'] = chartRangeMax;\n                }\n                var colorLists = formula.sparklinesColorMap(arguments);\n                if (!!colorLists) {\n                    sparksetting['colorMap'] = colorLists;\n                }    ////具体实现\n                ////具体实现\n                var temp1 = luckysheetSparkline.init(dataformat, sparksetting);\n                return temp1;\n            } catch (e) {\n                var err = e;    //计算错误检测\n                //计算错误检测\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'STACKCOLUMNSPLINES': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var cell_r = window.luckysheetCurrentRow;\n                var cell_c = window.luckysheetCurrentColumn;\n                var cell_fp = window.luckysheetCurrentFunction;    //色表，接下来会用到\n                //色表，接下来会用到\n                var colorList = formula.colorList;\n                var rangeValue = arguments[0];    //定义需要格式化data数据\n                                                  //var dataformat = formula.readCellDataToOneArray(rangeValue);\n                //定义需要格式化data数据\n                //var dataformat = formula.readCellDataToOneArray(rangeValue);\n                var dataformat = [];\n                var data = [];\n                if (rangeValue != null && rangeValue.data != null) {\n                    data = rangeValue.data;\n                }\n                if (getObjType(data) == 'array') {\n                    data = formula.getPureValueByData(data);\n                } else if (getObjType(data) == 'object') {\n                    data = data.v;\n                    return [data];\n                } else {\n                    if (/\\{.*?\\}/.test(data)) {\n                        data = data.replace(/\\{/g, '[').replace(/\\}/g, ']');\n                    }\n                    data = new Function('return ' + data)();\n                }\n                var stackconfig = arguments[1];\n                var offsetY = data.length;\n                if (stackconfig == null || !!stackconfig) {\n                    for (var c = 0; c < data[0].length; c++) {\n                        var colstr = '';\n                        for (var r = 0; r < data.length; r++) {\n                            colstr += data[r][c] + ':';\n                        }\n                        colstr = colstr.substr(0, colstr.length - 1);\n                        dataformat.push(colstr);\n                    }\n                } else {\n                    for (var r = 0; r < data.length; r++) {\n                        var rowstr = '';\n                        for (var c = 0; c < data[0].length; c++) {\n                            rowstr += data[r][c] + ':';\n                        }\n                        rowstr = rowstr.substr(0, rowstr.length - 1);\n                        dataformat.push(rowstr);\n                    }\n                    var offsetY = data[0].length;\n                }\n                let luckysheetfile = getluckysheetfile();\n                let index = getSheetIndex(Store.calculateSheetIndex);\n                let sheetdata = luckysheetfile[index].data;    //在下面获得该单元格的长度和宽度,同时考虑了合并单元格问题\n                //在下面获得该单元格的长度和宽度,同时考虑了合并单元格问题\n                var cellSize = menuButton.getCellRealSize(sheetdata, cell_r, cell_c);\n                var width = cellSize[0];\n                var height = cellSize[1];    //开始进行sparklines的详细设置，宽和高为单元格的宽高。\n                //开始进行sparklines的详细设置，宽和高为单元格的宽高。\n                var sparksetting = {};    //设置sparklines图表的宽高，线图的高会随着粗细而超出单元格高度，所以减去一个量，设置offsetY或者offsetX为渲染偏移量，传给luckysheetDrawMain使用。默认为0。=LINESPLINES(D9:E24,3,5)\n                //设置sparklines图表的宽高，线图的高会随着粗细而超出单元格高度，所以减去一个量，设置offsetY或者offsetX为渲染偏移量，传给luckysheetDrawMain使用。默认为0。=LINESPLINES(D9:E24,3,5)\n                sparksetting.height = height;\n                sparksetting.width = width;    //sparksetting.offsetY = offsetY;\n                                               //定义sparklines的通用色彩设置函数，可以设置 色表【colorList】索引数值 或者 具体颜色值\n                //sparksetting.offsetY = offsetY;\n                //定义sparklines的通用色彩设置函数，可以设置 色表【colorList】索引数值 或者 具体颜色值\n                var sparkColorSetting = function (attr, value) {\n                    if (!!value) {\n                        if (typeof value == 'number') {\n                            if (value > 19) {\n                                value = value % 20;\n                            }\n                            value = colorList[value];\n                        }\n                        sparksetting[attr] = value;\n                    }\n                };\n                var barSpacing = arguments[2];\n                var chartRangeMax = arguments[3];    ////具体实现\n                ////具体实现\n                sparksetting['type'] = 'column';\n                if (barSpacing == null) {\n                    barSpacing = '1';\n                }\n                sparksetting['barSpacing'] = barSpacing;\n                if (chartRangeMax == null || chartRangeMax === false || typeof chartRangeMax != 'number') {\n                    sparksetting['chartRangeMax'] = undefined;\n                } else {\n                    sparksetting['chartRangeMax'] = chartRangeMax;\n                }\n                var colorLists = formula.sparklinesColorMap(arguments, 4);\n                if (!!colorLists) {\n                    sparksetting['colorMap'] = colorLists;\n                }    ////具体实现\n                ////具体实现\n                var temp1 = luckysheetSparkline.init(dataformat, sparksetting);\n                return temp1;\n            } catch (e) {\n                var err = e;    //计算错误检测\n                //计算错误检测\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'BARSPLINES': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var cell_r = window.luckysheetCurrentRow;\n                var cell_c = window.luckysheetCurrentColumn;\n                var cell_fp = window.luckysheetCurrentFunction;    //色表，接下来会用到\n                //色表，接下来会用到\n                var colorList = formula.colorList;\n                var rangeValue = arguments[0];    //定义需要格式化data数据\n                //定义需要格式化data数据\n                var dataformat = formula.readCellDataToOneArray(rangeValue);\n                let luckysheetfile = getluckysheetfile();\n                let index = getSheetIndex(Store.calculateSheetIndex);\n                let sheetdata = luckysheetfile[index].data;    //在下面获得该单元格的长度和宽度,同时考虑了合并单元格问题\n                //在下面获得该单元格的长度和宽度,同时考虑了合并单元格问题\n                var cellSize = menuButton.getCellRealSize(sheetdata, cell_r, cell_c);\n                var width = cellSize[0];\n                var height = cellSize[1];    //开始进行sparklines的详细设置，宽和高为单元格的宽高。\n                //开始进行sparklines的详细设置，宽和高为单元格的宽高。\n                var sparksetting = {};    //设置sparklines图表的宽高，线图的高会随着粗细而超出单元格高度，所以减去一个量，设置offsetY或者offsetX为渲染偏移量，传给luckysheetDrawMain使用。默认为0。=LINESPLINES(D9:E24,3,5)\n                //设置sparklines图表的宽高，线图的高会随着粗细而超出单元格高度，所以减去一个量，设置offsetY或者offsetX为渲染偏移量，传给luckysheetDrawMain使用。默认为0。=LINESPLINES(D9:E24,3,5)\n                sparksetting.height = height;\n                sparksetting.width = width;    //定义sparklines的通用色彩设置函数，可以设置 色表【colorList】索引数值 或者 具体颜色值\n                //定义sparklines的通用色彩设置函数，可以设置 色表【colorList】索引数值 或者 具体颜色值\n                var sparkColorSetting = function (attr, value) {\n                    if (!!value) {\n                        if (typeof value == 'number') {\n                            if (value > 19) {\n                                value = value % 20;\n                            }\n                            value = colorList[value];\n                        }\n                        sparksetting[attr] = value;\n                    }\n                };\n                var barSpacing = arguments[1];\n                var barColor = arguments[2];\n                var negBarColor = arguments[3];\n                var chartRangeMax = arguments[4];    ////具体实现\n                ////具体实现\n                sparksetting['type'] = 'bar';\n                if (barSpacing == null) {\n                    barSpacing = '1';\n                }\n                sparksetting['barSpacing'] = barSpacing;\n                if (barColor == null) {\n                    barColor = '#fc5c5c';\n                }\n                sparkColorSetting('barColor', barColor);\n                if (negBarColor == null) {\n                    negBarColor = '#97b552';\n                }\n                sparkColorSetting('negBarColor', negBarColor);\n                if (chartRangeMax == null || chartRangeMax === false || typeof chartRangeMax != 'number') {\n                    sparksetting['chartRangeMax'] = undefined;\n                } else {\n                    sparksetting['chartRangeMax'] = chartRangeMax;\n                }\n                var colorLists = formula.sparklinesColorMap(arguments);\n                if (!!colorLists) {\n                    sparksetting['colorMap'] = colorLists;\n                }    ////具体实现\n                ////具体实现\n                var temp1 = luckysheetSparkline.init(dataformat, sparksetting);\n                return temp1;\n            } catch (e) {\n                var err = e;    //计算错误检测\n                //计算错误检测\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'STACKBARSPLINES': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var cell_r = window.luckysheetCurrentRow;\n                var cell_c = window.luckysheetCurrentColumn;\n                var cell_fp = window.luckysheetCurrentFunction;    //色表，接下来会用到\n                //色表，接下来会用到\n                var colorList = formula.colorList;\n                var rangeValue = arguments[0];    //定义需要格式化data数据\n                                                  //var dataformat = formula.readCellDataToOneArray(rangeValue);\n                //定义需要格式化data数据\n                //var dataformat = formula.readCellDataToOneArray(rangeValue);\n                var dataformat = [];\n                var data = [];\n                if (rangeValue != null && rangeValue.data != null) {\n                    data = rangeValue.data;\n                }\n                if (getObjType(data) == 'array') {\n                    data = formula.getPureValueByData(data);\n                } else if (getObjType(data) == 'object') {\n                    data = data.v;\n                    return [data];\n                } else {\n                    if (/\\{.*?\\}/.test(data)) {\n                        data = data.replace(/\\{/g, '[').replace(/\\}/g, ']');\n                    }\n                    data = new Function('return ' + data)();\n                }\n                var stackconfig = arguments[1];\n                var offsetY = data.length;\n                if (stackconfig == null || !!stackconfig) {\n                    for (var c = 0; c < data[0].length; c++) {\n                        var colstr = '';\n                        for (var r = 0; r < data.length; r++) {\n                            colstr += data[r][c] + ':';\n                        }\n                        colstr = colstr.substr(0, colstr.length - 1);\n                        dataformat.push(colstr);\n                    }\n                } else {\n                    for (var r = 0; r < data.length; r++) {\n                        var rowstr = '';\n                        for (var c = 0; c < data[0].length; c++) {\n                            rowstr += data[r][c] + ':';\n                        }\n                        rowstr = rowstr.substr(0, rowstr.length - 1);\n                        dataformat.push(rowstr);\n                    }\n                    var offsetY = data[0].length;\n                }\n                let luckysheetfile = getluckysheetfile();\n                let index = getSheetIndex(Store.calculateSheetIndex);\n                let sheetdata = luckysheetfile[index].data;    //在下面获得该单元格的长度和宽度,同时考虑了合并单元格问题\n                //在下面获得该单元格的长度和宽度,同时考虑了合并单元格问题\n                var cellSize = menuButton.getCellRealSize(sheetdata, cell_r, cell_c);\n                var width = cellSize[0];\n                var height = cellSize[1];    //开始进行sparklines的详细设置，宽和高为单元格的宽高。\n                //开始进行sparklines的详细设置，宽和高为单元格的宽高。\n                var sparksetting = {};    //设置sparklines图表的宽高，线图的高会随着粗细而超出单元格高度，所以减去一个量，设置offsetY或者offsetX为渲染偏移量，传给luckysheetDrawMain使用。默认为0。=LINESPLINES(D9:E24,3,5)\n                //设置sparklines图表的宽高，线图的高会随着粗细而超出单元格高度，所以减去一个量，设置offsetY或者offsetX为渲染偏移量，传给luckysheetDrawMain使用。默认为0。=LINESPLINES(D9:E24,3,5)\n                sparksetting.height = height;\n                sparksetting.width = width;    //sparksetting.offsetY = offsetY;\n                                               //定义sparklines的通用色彩设置函数，可以设置 色表【colorList】索引数值 或者 具体颜色值\n                //sparksetting.offsetY = offsetY;\n                //定义sparklines的通用色彩设置函数，可以设置 色表【colorList】索引数值 或者 具体颜色值\n                var sparkColorSetting = function (attr, value) {\n                    if (!!value) {\n                        if (typeof value == 'number') {\n                            if (value > 19) {\n                                value = value % 20;\n                            }\n                            value = colorList[value];\n                        }\n                        sparksetting[attr] = value;\n                    }\n                };\n                var barSpacing = arguments[2];\n                var chartRangeMax = arguments[3];    ////具体实现\n                ////具体实现\n                sparksetting['type'] = 'bar';\n                if (barSpacing == null) {\n                    barSpacing = '1';\n                }\n                sparksetting['barSpacing'] = barSpacing;\n                if (chartRangeMax == null || chartRangeMax === false || typeof chartRangeMax != 'number') {\n                    sparksetting['chartRangeMax'] = undefined;\n                } else {\n                    sparksetting['chartRangeMax'] = chartRangeMax;\n                }\n                var colorLists = formula.sparklinesColorMap(arguments, 4);\n                if (!!colorLists) {\n                    sparksetting['colorMap'] = colorLists;\n                }    ////具体实现\n                ////具体实现\n                var temp1 = luckysheetSparkline.init(dataformat, sparksetting);\n                return temp1;\n            } catch (e) {\n                var err = e;    //计算错误检测\n                //计算错误检测\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'DISCRETESPLINES': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var cell_r = window.luckysheetCurrentRow;\n                var cell_c = window.luckysheetCurrentColumn;\n                var cell_fp = window.luckysheetCurrentFunction;    //色表，接下来会用到\n                //色表，接下来会用到\n                var colorList = formula.colorList;\n                var rangeValue = arguments[0];    //定义需要格式化data数据\n                //定义需要格式化data数据\n                var dataformat = formula.readCellDataToOneArray(rangeValue);\n                let luckysheetfile = getluckysheetfile();\n                let index = getSheetIndex(Store.calculateSheetIndex);\n                let sheetdata = luckysheetfile[index].data;    //在下面获得该单元格的长度和宽度,同时考虑了合并单元格问题\n                //在下面获得该单元格的长度和宽度,同时考虑了合并单元格问题\n                var cellSize = menuButton.getCellRealSize(sheetdata, cell_r, cell_c);\n                var width = cellSize[0];\n                var height = cellSize[1];    //开始进行sparklines的详细设置，宽和高为单元格的宽高。\n                //开始进行sparklines的详细设置，宽和高为单元格的宽高。\n                var sparksetting = {};    //设置sparklines图表的宽高，线图的高会随着粗细而超出单元格高度，所以减去一个量，设置offsetY或者offsetX为渲染偏移量，传给luckysheetDrawMain使用。默认为0。=LINESPLINES(D9:E24,3,5)\n                //设置sparklines图表的宽高，线图的高会随着粗细而超出单元格高度，所以减去一个量，设置offsetY或者offsetX为渲染偏移量，传给luckysheetDrawMain使用。默认为0。=LINESPLINES(D9:E24,3,5)\n                sparksetting.height = height;\n                sparksetting.width = width;    //定义sparklines的通用色彩设置函数，可以设置 色表【colorList】索引数值 或者 具体颜色值\n                //定义sparklines的通用色彩设置函数，可以设置 色表【colorList】索引数值 或者 具体颜色值\n                var sparkColorSetting = function (attr, value) {\n                    if (!!value) {\n                        if (typeof value == 'number') {\n                            if (value > 19) {\n                                value = value % 20;\n                            }\n                            value = colorList[value];\n                        }\n                        sparksetting[attr] = value;\n                    }\n                };\n                var thresholdValue = arguments[1];\n                var barColor = arguments[2];\n                var negBarColor = arguments[3];    ////具体实现\n                ////具体实现\n                sparksetting['type'] = 'discrete';\n                if (thresholdValue == null) {\n                    thresholdValue = 0;\n                }\n                sparksetting['thresholdValue'] = thresholdValue;\n                if (barColor == null) {\n                    barColor = '#2ec7c9';\n                }\n                sparkColorSetting('lineColor', barColor);\n                if (negBarColor == null) {\n                    negBarColor = '#fc5c5c';\n                }\n                sparkColorSetting('thresholdColor', negBarColor);    ////具体实现\n                ////具体实现\n                var temp1 = luckysheetSparkline.init(dataformat, sparksetting);\n                return temp1;\n            } catch (e) {\n                var err = e;    //计算错误检测\n                //计算错误检测\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'TRISTATESPLINES': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var cell_r = window.luckysheetCurrentRow;\n                var cell_c = window.luckysheetCurrentColumn;\n                var cell_fp = window.luckysheetCurrentFunction;    //色表，接下来会用到\n                //色表，接下来会用到\n                var colorList = formula.colorList;\n                var rangeValue = arguments[0];    //定义需要格式化data数据\n                //定义需要格式化data数据\n                var dataformat = formula.readCellDataToOneArray(rangeValue);\n                let luckysheetfile = getluckysheetfile();\n                let index = getSheetIndex(Store.calculateSheetIndex);\n                let sheetdata = luckysheetfile[index].data;    //在下面获得该单元格的长度和宽度,同时考虑了合并单元格问题\n                //在下面获得该单元格的长度和宽度,同时考虑了合并单元格问题\n                var cellSize = menuButton.getCellRealSize(sheetdata, cell_r, cell_c);\n                var width = cellSize[0];\n                var height = cellSize[1];    //开始进行sparklines的详细设置，宽和高为单元格的宽高。\n                //开始进行sparklines的详细设置，宽和高为单元格的宽高。\n                var sparksetting = {};    //设置sparklines图表的宽高，线图的高会随着粗细而超出单元格高度，所以减去一个量，设置offsetY或者offsetX为渲染偏移量，传给luckysheetDrawMain使用。默认为0。=LINESPLINES(D9:E24,3,5)\n                //设置sparklines图表的宽高，线图的高会随着粗细而超出单元格高度，所以减去一个量，设置offsetY或者offsetX为渲染偏移量，传给luckysheetDrawMain使用。默认为0。=LINESPLINES(D9:E24,3,5)\n                sparksetting.height = height;\n                sparksetting.width = width;    //定义sparklines的通用色彩设置函数，可以设置 色表【colorList】索引数值 或者 具体颜色值\n                //定义sparklines的通用色彩设置函数，可以设置 色表【colorList】索引数值 或者 具体颜色值\n                var sparkColorSetting = function (attr, value) {\n                    if (!!value) {\n                        if (typeof value == 'number') {\n                            if (value > 19) {\n                                value = value % 20;\n                            }\n                            value = colorList[value];\n                        }\n                        sparksetting[attr] = value;\n                    }\n                };\n                var barSpacing = arguments[1];\n                var barColor = arguments[2];\n                var negBarColor = arguments[3];\n                var zeroBarColor = arguments[4];    ////具体实现\n                ////具体实现\n                sparksetting['type'] = 'tristate';\n                if (barSpacing == null) {\n                    barSpacing = '1';\n                }\n                sparksetting['barSpacing'] = barSpacing;\n                if (barColor == null) {\n                    barColor = '#fc5c5c';\n                }\n                sparkColorSetting('barColor', barColor);\n                if (negBarColor == null) {\n                    negBarColor = '#97b552';\n                }\n                sparkColorSetting('negBarColor', negBarColor);\n                if (zeroBarColor == null) {\n                    zeroBarColor = '#999';\n                }\n                sparkColorSetting('zeroBarColor', zeroBarColor);\n                var colorLists = formula.sparklinesColorMap(arguments);\n                if (!!colorLists) {\n                    sparksetting['colorMap'] = colorLists;\n                }    ////具体实现\n                ////具体实现\n                var temp1 = luckysheetSparkline.init(dataformat, sparksetting);\n                return temp1;\n            } catch (e) {\n                var err = e;    //计算错误检测\n                //计算错误检测\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'PIESPLINES': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var cell_r = window.luckysheetCurrentRow;\n                var cell_c = window.luckysheetCurrentColumn;\n                var cell_fp = window.luckysheetCurrentFunction;    //色表，接下来会用到\n                //色表，接下来会用到\n                var colorList = formula.colorList;\n                var rangeValue = arguments[0];    //定义需要格式化data数据\n                //定义需要格式化data数据\n                var dataformat = formula.readCellDataToOneArray(rangeValue);\n                let luckysheetfile = getluckysheetfile();\n                let index = getSheetIndex(Store.calculateSheetIndex);\n                let sheetdata = luckysheetfile[index].data;    //在下面获得该单元格的长度和宽度,同时考虑了合并单元格问题\n                //在下面获得该单元格的长度和宽度,同时考虑了合并单元格问题\n                var cellSize = menuButton.getCellRealSize(sheetdata, cell_r, cell_c);\n                var width = cellSize[0];\n                var height = cellSize[1];    //开始进行sparklines的详细设置，宽和高为单元格的宽高。\n                //开始进行sparklines的详细设置，宽和高为单元格的宽高。\n                var sparksetting = {};    //设置sparklines图表的宽高，线图的高会随着粗细而超出单元格高度，所以减去一个量，设置offsetY或者offsetX为渲染偏移量，传给luckysheetDrawMain使用。默认为0。=LINESPLINES(D9:E24,3,5)\n                //设置sparklines图表的宽高，线图的高会随着粗细而超出单元格高度，所以减去一个量，设置offsetY或者offsetX为渲染偏移量，传给luckysheetDrawMain使用。默认为0。=LINESPLINES(D9:E24,3,5)\n                sparksetting.height = height;\n                sparksetting.width = width;    //定义sparklines的通用色彩设置函数，可以设置 色表【colorList】索引数值 或者 具体颜色值\n                //定义sparklines的通用色彩设置函数，可以设置 色表【colorList】索引数值 或者 具体颜色值\n                var sparkColorSetting = function (attr, value) {\n                    if (!!value) {\n                        if (typeof value == 'number') {\n                            if (value > 19) {\n                                value = value % 20;\n                            }\n                            value = colorList[value];\n                        }\n                        sparksetting[attr] = value;\n                    }\n                };\n                var offset = arguments[1];\n                var borderWidth = arguments[2];\n                var borderColor = arguments[3];    ////具体实现\n                ////具体实现\n                sparksetting['type'] = 'pie';\n                if (offset == null) {\n                    offset = 0;\n                }\n                sparksetting['offset'] = offset;\n                if (borderWidth == null) {\n                    borderWidth = 0;\n                }\n                sparkColorSetting('borderWidth', borderWidth);\n                if (borderColor == null) {\n                    borderColor = '#97b552';\n                }\n                sparkColorSetting('borderColor', borderColor);\n                var colorLists = formula.sparklinesColorMap(arguments, 4);\n                if (!!colorLists) {\n                    sparksetting['colorMap'] = colorLists;\n                }    ////具体实现\n                ////具体实现\n                var temp1 = luckysheetSparkline.init(dataformat, sparksetting);\n                return temp1;\n            } catch (e) {\n                var err = e;    //计算错误检测\n                //计算错误检测\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'BOXSPLINES': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var cell_r = window.luckysheetCurrentRow;\n                var cell_c = window.luckysheetCurrentColumn;\n                var cell_fp = window.luckysheetCurrentFunction;    //色表，接下来���用到\n                //色表，接下来���用到\n                var colorList = formula.colorList;\n                var rangeValue = arguments[0];    //定义需要格式化data数据\n                //定义需要格式化data数据\n                var dataformat = formula.readCellDataToOneArray(rangeValue);\n                let luckysheetfile = getluckysheetfile();\n                let index = getSheetIndex(Store.calculateSheetIndex);\n                let sheetdata = luckysheetfile[index].data;    //在下面获得该单元格的长度和宽度,同时考虑了合并单元格问题\n                //在下面获得该单元格的长度和宽度,同时考虑了合并单元格问题\n                var cellSize = menuButton.getCellRealSize(sheetdata, cell_r, cell_c);\n                var width = cellSize[0];\n                var height = cellSize[1];    //开始进行sparklines的详细设置，宽和高为单元格的宽高。\n                //开始进行sparklines的详细设置，宽和高为单元格的宽高。\n                var sparksetting = {};    //设置sparklines图表的宽高，线图的高会随着粗细而超出单元格高度，所以减去一个量，设置offsetY或者offsetX为渲染偏移量，传给luckysheetDrawMain使用。默认为0。=LINESPLINES(D9:E24,3,5)\n                //设置sparklines图表的宽高，线图的高会随着粗细而超出单元格高度，所以减去一个量，设置offsetY或者offsetX为渲染偏移量，传给luckysheetDrawMain使用。默认为0。=LINESPLINES(D9:E24,3,5)\n                sparksetting.height = height;\n                sparksetting.width = width;    //定义sparklines的通用色彩设置函数，可以设置 色表【colorList】索引数值 或者 具体颜色值\n                //定义sparklines的通用色彩设置函数，可以设置 色表【colorList】索引数值 或者 具体颜色值\n                var sparkColorSetting = function (attr, value) {\n                    if (!!value) {\n                        if (typeof value == 'number') {\n                            if (value > 19) {\n                                value = value % 20;\n                            }\n                            value = colorList[value];\n                        }\n                        sparksetting[attr] = value;\n                    }\n                };\n                var outlierIQR = arguments[1];\n                var target = arguments[2];\n                var spotRadius = arguments[3];    ////具体实现\n                ////具体实现\n                sparksetting['type'] = 'box';\n                if (outlierIQR == null) {\n                    outlierIQR = 1.5;\n                }\n                sparksetting['outlierIQR'] = outlierIQR;\n                if (target == null) {\n                    target = 0;\n                } else {\n                    sparkColorSetting('target', target);\n                }\n                if (spotRadius == null) {\n                    spotRadius = 1.5;\n                }\n                sparkColorSetting('spotRadius', spotRadius);    ////具体实现\n                ////具体实现\n                var temp1 = luckysheetSparkline.init(dataformat, sparksetting);\n                return temp1;\n            } catch (e) {\n                var err = e;    //计算错误检测\n                //计算错误检测\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'BULLETSPLINES': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var cell_r = window.luckysheetCurrentRow;\n                var cell_c = window.luckysheetCurrentColumn;\n                var cell_fp = window.luckysheetCurrentFunction;    //色表，接下来会用到\n                //色表，接下来会用到\n                var colorList = formula.colorList;    //var rangeValue = arguments[0];\n                                                      //定义需要格式化data数据\n                                                      //var dataformat = formula.readCellDataToOneArray(rangeValue);\n                //var rangeValue = arguments[0];\n                //定义需要格式化data数据\n                //var dataformat = formula.readCellDataToOneArray(rangeValue);\n                let luckysheetfile = getluckysheetfile();\n                let index = getSheetIndex(Store.calculateSheetIndex);\n                let sheetdata = luckysheetfile[index].data;    //在下面获得该单元格的长度和宽度,同时考虑了合并单元格问题\n                //在下面获得该单元格的长度和宽度,同时考虑了合并单元格问题\n                var cellSize = menuButton.getCellRealSize(sheetdata, cell_r, cell_c);\n                var width = cellSize[0];\n                var height = cellSize[1];    //开始进行sparklines的详细设置，宽和高为单元格的宽高。\n                //开始进行sparklines的详细设置，宽和高为单元格的宽高。\n                var sparksetting = {};    //设置sparklines图表的宽高，线图的高会随着粗细而超出单元格高度，所以减去一个量，设置offsetY或者offsetX为渲染偏移量，传给luckysheetDrawMain使用。默认为0。=LINESPLINES(D9:E24,3,5)\n                //设置sparklines图表的宽高，线图的高会随着粗细而超出单元格高度，所以减去一个量，设置offsetY或者offsetX为渲染偏移量，传给luckysheetDrawMain使用。默认为0。=LINESPLINES(D9:E24,3,5)\n                sparksetting.height = height;\n                sparksetting.width = width;    //定义sparklines的通用色彩设置函数，可以设置 色表【colorList】索引数值 或者 具体颜色值\n                //定义sparklines的通用色彩设置函数，可以设置 色表【colorList】索引数值 或者 具体颜色值\n                var sparkColorSetting = function (attr, value) {\n                    if (!!value) {\n                        if (typeof value == 'number') {\n                            if (value > 19) {\n                                value = value % 20;\n                            }\n                            value = colorList[value];\n                        }\n                        sparksetting[attr] = value;\n                    }\n                };    ////具体实现\n                ////具体实现\n                var dataformat = [];\n                luckysheet_getValue(arguments);\n                var data1 = formula.getValueByFuncData(arguments[0]);\n                var data2 = formula.getValueByFuncData(arguments[1]);\n                dataformat.push(data1);\n                dataformat.push(data2);\n                for (var i = 2; i < arguments.length; i++) {\n                    dataformat.push(formula.getValueByFuncData(arguments[i]));\n                }\n                sparksetting['type'] = 'bullet';    ////具体实现\n                ////具体实现\n                var temp1 = luckysheetSparkline.init(dataformat, sparksetting);\n                return temp1;\n            } catch (e) {\n                var err = e;    //计算错误检测\n                //计算错误检测\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        //动态数组公式\n        'SORT': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //要排序的范围或数组\n                var data_array = arguments[0];\n                var array = [], rowlen = 1, collen = 1;\n                if (getObjType(data_array) == 'array') {\n                    if (getObjType(data_array[0]) == 'array') {\n                        if (!func_methods.isDyadicArr(data_array)) {\n                            return formula.error.v;\n                        }\n                        for (var i = 0; i < data_array.length; i++) {\n                            var rowArr = [];\n                            for (var j = 0; j < data_array[i].length; j++) {\n                                var number = data_array[i][j];\n                                rowArr.push(number);\n                            }\n                            array.push(rowArr);\n                        }\n                        rowlen = array.length;\n                        collen = array[0].length;\n                    } else {\n                        for (var i = 0; i < data_array.length; i++) {\n                            var number = data_array[i];\n                            array.push(number);\n                        }\n                        rowlen = array.length;\n                    }\n                } else if (getObjType(data_array) == 'object' && data_array.startCell != null) {\n                    if (data_array.data != null) {\n                        if (getObjType(data_array.data) == 'array') {\n                            for (var i = 0; i < data_array.data.length; i++) {\n                                var rowArr = [];\n                                for (var j = 0; j < data_array.data[i].length; j++) {\n                                    if (data_array.data[i][j] != null) {\n                                        var number = data_array.data[i][j].v;\n                                        if (isRealNull(number)) {\n                                            number = 0;\n                                        }\n                                        rowArr.push(number);\n                                    } else {\n                                        rowArr.push(0);\n                                    }\n                                }\n                                array.push(rowArr);\n                            }\n                            rowlen = array.length;\n                            collen = array[0].length;\n                        } else {\n                            var number = data_array.data.v;\n                            if (isRealNull(number)) {\n                                number = 0;\n                            }\n                            array.push(number);\n                        }\n                    } else {\n                        array.push(0);\n                    }\n                } else {\n                    var number = data_array;\n                    array.push(number);\n                }    //表示要排序的行或列的数字（默认row1/col1）\n                //表示要排序的行或列的数字（默认row1/col1）\n                var sort_index = 1;\n                if (arguments.length >= 2) {\n                    sort_index = func_methods.getFirstValue(arguments[1]);\n                    if (valueIsError(sort_index)) {\n                        return sort_index;\n                    }\n                    if (!isRealNum(sort_index)) {\n                        return formula.error.v;\n                    }\n                    sort_index = parseInt(sort_index);\n                }    //表示所需排序顺序的数字；1表示升序（默认），-1表示降序。\n                //表示所需排序顺序的数字；1表示升序（默认），-1表示降序。\n                var sort_order = 1;\n                if (arguments.length >= 3) {\n                    sort_order = func_methods.getFirstValue(arguments[2]);\n                    if (valueIsError(sort_order)) {\n                        return sort_order;\n                    }\n                    if (!isRealNum(sort_order)) {\n                        return formula.error.v;\n                    }\n                    sort_order = Math.floor(parseFloat(sort_order));\n                }    //表示所需排序方向的逻辑值；按行排序为FALSE（默认），按列排序为TRUE。\n                //表示所需排序方向的逻辑值；按行排序为FALSE（默认），按列排序为TRUE。\n                var by_col = false;\n                if (arguments.length == 4) {\n                    by_col = func_methods.getCellBoolen(arguments[3]);\n                    if (valueIsError(by_col)) {\n                        return by_col;\n                    }\n                }\n                if (by_col) {\n                    if (sort_index < 1 || sort_index > rowlen) {\n                        return formula.error.v;\n                    }\n                } else {\n                    if (sort_index < 1 || sort_index > collen) {\n                        return formula.error.v;\n                    }\n                }\n                if (sort_order != 1 && sort_order != -1) {\n                    return formula.error.v;\n                }    //计算\n                //计算\n                var asc = function (x, y) {\n                    if (getObjType(x) == 'array') {\n                        x = x[sort_index - 1];\n                    }\n                    if (getObjType(y) == 'array') {\n                        y = y[sort_index - 1];\n                    }\n                    if (!isNaN(x) && !isNaN(y)) {\n                        return x - y;\n                    } else if (!isNaN(x)) {\n                        return -1;\n                    } else if (!isNaN(y)) {\n                        return 1;\n                    } else {\n                        if (x > y) {\n                            return 1;\n                        } else if (x < y) {\n                            return -1;\n                        }\n                    }\n                };\n                var desc = function (x, y) {\n                    if (getObjType(x) == 'array') {\n                        x = x[sort_index - 1];\n                    }\n                    if (getObjType(y) == 'array') {\n                        y = y[sort_index - 1];\n                    }\n                    if (!isNaN(x) && !isNaN(y)) {\n                        return y - x;\n                    } else if (!isNaN(x)) {\n                        return 1;\n                    } else if (!isNaN(y)) {\n                        return -1;\n                    } else {\n                        if (x > y) {\n                            return -1;\n                        } else if (x < y) {\n                            return 1;\n                        }\n                    }\n                };\n                if (by_col) {\n                    array = array[0].map(function (col, a) {\n                        return array.map(function (row) {\n                            return row[a];\n                        });\n                    });\n                    if (sort_order == 1) {\n                        array.sort(asc);\n                    }\n                    if (sort_order == -1) {\n                        array.sort(desc);\n                    }\n                    array = array[0].map(function (col, b) {\n                        return array.map(function (row) {\n                            return row[b];\n                        });\n                    });\n                } else {\n                    if (sort_order == 1) {\n                        array.sort(asc);\n                    }\n                    if (sort_order == -1) {\n                        array.sort(desc);\n                    }\n                }\n                return array;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'FILTER': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //要筛选的数组或范围\n                var data_array = arguments[0];\n                var array = [];\n                if (getObjType(data_array) == 'array') {\n                    if (getObjType(data_array[0]) == 'array' && !func_methods.isDyadicArr(data_array)) {\n                        return formula.error.v;\n                    }\n                    array = func_methods.getDataDyadicArr(data_array);\n                } else if (getObjType(data_array) == 'object' && data_array.startCell != null) {\n                    array = func_methods.getCellDataDyadicArr(data_array, 'number');\n                } else {\n                    var rowArr = [];\n                    rowArr.push(parseFloat(data_array));\n                    array.push(rowArr);\n                }\n                var rowlen = array.length, collen = array[0].length;    //布尔数组，其高度或宽度与数组相同\n                //布尔数组，其高度或宽度与数组相同\n                var data_include = arguments[1];\n                var include = [];\n                var type = 'row';    //筛选方式 row - 行，col - 列\n                //筛选方式 row - 行，col - 列\n                if (getObjType(data_include) == 'array') {\n                    if (getObjType(data_include[0]) == 'array') {\n                        if (!func_methods.isDyadicArr(data_include)) {\n                            return formula.error.v;\n                        }\n                        if (data_include.length > 1 && data_include[0].length > 1) {\n                            return formula.error.v;\n                        }\n                        if (data_include.length > 1) {\n                            if (data_include.length != array.length) {\n                                return formula.error.v;\n                            }\n                            type = 'row';\n                            for (var i = 0; i < data_include.length; i++) {\n                                var txt = data_include[i][0];\n                                if (getObjType(txt) == 'boolean') {\n                                } else if (getObjType(txt) == 'string' && (txt.toLowerCase() == 'true' || txt.toLowerCase() == 'false')) {\n                                    if (txt.toLowerCase() == 'true') {\n                                        txt = true;\n                                    } else if (txt.toLowerCase() == 'false') {\n                                        txt = false;\n                                    }\n                                } else if (isRealNum(txt)) {\n                                    txt = parseFloat(txt);\n                                    txt = txt == 0 ? false : true;\n                                } else {\n                                    return formula.error.v;\n                                }\n                                include.push(txt);\n                            }\n                        }\n                        if (data_include[0].length > 1) {\n                            if (data_include[0].length != array[0].length) {\n                                return formula.error.v;\n                            }\n                            type = 'col';\n                            for (var i = 0; i < data_include[0].length; i++) {\n                                var txt = data_include[0][i];\n                                if (getObjType(txt) == 'boolean') {\n                                } else if (getObjType(txt) == 'string' && (txt.toLowerCase() == 'true' || txt.toLowerCase() == 'false')) {\n                                    if (txt.toLowerCase() == 'true') {\n                                        txt = true;\n                                    } else if (txt.toLowerCase() == 'false') {\n                                        txt = false;\n                                    }\n                                } else if (isRealNum(txt)) {\n                                    txt = parseFloat(txt);\n                                    txt = txt == 0 ? false : true;\n                                } else {\n                                    return formula.error.v;\n                                }\n                                include.push(txt);\n                            }\n                        }\n                    } else {\n                        if (data_include.length != array[0].length) {\n                            return formula.error.v;\n                        }\n                        type = 'col';\n                        for (var i = 0; i < data_include.length; i++) {\n                            var txt = data_include[i];\n                            if (getObjType(txt) == 'boolean') {\n                            } else if (getObjType(txt) == 'string' && (txt.toLowerCase() == 'true' || txt.toLowerCase() == 'false')) {\n                                if (txt.toLowerCase() == 'true') {\n                                    txt = true;\n                                } else if (txt.toLowerCase() == 'false') {\n                                    txt = false;\n                                }\n                            } else if (isRealNum(txt)) {\n                                txt = parseFloat(txt);\n                                txt = txt == 0 ? false : true;\n                            } else {\n                                return formula.error.v;\n                            }\n                            include.push(txt);\n                        }\n                    }\n                } else if (getObjType(data_include) == 'object' && data_include.data != null && getObjType(data_include.data) == 'array') {\n                    if (data_include.data.length > 1 && data_include.data[0].length > 1) {\n                        return formula.error.v;\n                    }\n                    if (data_include.data.length > 1) {\n                        if (data_include.data.length != array.length) {\n                            return formula.error.v;\n                        }\n                        type = 'row';\n                        for (var i = 0; i < data_include.data.length; i++) {\n                            var txt = data_include.data[i][0].v;\n                            if (isRealNull(txt)) {\n                                txt = 0;\n                            }\n                            if (getObjType(txt) == 'boolean') {\n                            } else if (getObjType(txt) == 'string' && (txt.toLowerCase() == 'true' || txt.toLowerCase() == 'false')) {\n                                if (txt.toLowerCase() == 'true') {\n                                    txt = true;\n                                } else if (txt.toLowerCase() == 'false') {\n                                    txt = false;\n                                }\n                            } else if (isRealNum(txt)) {\n                                txt = parseFloat(txt);\n                                txt = txt == 0 ? false : true;\n                            } else {\n                                return formula.error.v;\n                            }\n                            include.push(txt);\n                        }\n                    }\n                    if (data_include.data[0].length > 1) {\n                        if (data_include.data[0].length != array[0].length) {\n                            return formula.error.v;\n                        }\n                        type = 'col';\n                        for (var i = 0; i < data_include.data[0].length; i++) {\n                            var txt = data_include.data[0][i].v;\n                            if (isRealNull(txt)) {\n                                txt = 0;\n                            }\n                            if (getObjType(txt) == 'boolean') {\n                            } else if (getObjType(txt) == 'string' && (txt.toLowerCase() == 'true' || txt.toLowerCase() == 'false')) {\n                                if (txt.toLowerCase() == 'true') {\n                                    txt = true;\n                                } else if (txt.toLowerCase() == 'false') {\n                                    txt = false;\n                                }\n                            } else if (isRealNum(txt)) {\n                                txt = parseFloat(txt);\n                                txt = txt == 0 ? false : true;\n                            } else {\n                                return formula.error.v;\n                            }\n                            include.push(txt);\n                        }\n                    }\n                } else {\n                    return formula.error.v;\n                }    //如果包含数组中的所有值都为空(filter不返回任何值)，则返回的值\n                //如果包含数组中的所有值都为空(filter不返回任何值)，则返回的值\n                var if_empty = '';\n                if (arguments.length == 3) {\n                    if_empty = func_methods.getFirstValue(arguments[2], 'text');\n                    if (valueIsError(if_empty)) {\n                        return if_empty;\n                    }\n                }    //计算\n                //计算\n                var result = [];\n                if (type == 'row') {\n                    for (var i = 0; i < array.length; i++) {\n                        if (include[i]) {\n                            result.push(array[i]);\n                        }\n                    }\n                } else {\n                    for (var i = 0; i < array.length; i++) {\n                        var rowArr = [];\n                        for (var j = 0; j < array[0].length; j++) {\n                            if (include[j]) {\n                                rowArr.push(array[i][j]);\n                            }\n                        }\n                        if (rowArr.length > 0) {\n                            result.push(rowArr);\n                        }\n                    }\n                }\n                if (result.length == 0) {\n                    return if_empty;\n                }\n                return result;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'UNIQUE': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //从其返回唯一值的数组或区域\n                var data_array = arguments[0];\n                var array = [];\n                if (getObjType(data_array) == 'array') {\n                    if (getObjType(data_array[0]) == 'array' && !func_methods.isDyadicArr(data_array)) {\n                        return formula.error.v;\n                    }\n                    array = func_methods.getDataDyadicArr(data_array);\n                } else if (getObjType(data_array) == 'object' && data_array.startCell != null) {\n                    array = func_methods.getCellDataDyadicArr(data_array, 'number');\n                } else {\n                    var rowArr = [];\n                    rowArr.push(parseFloat(data_array));\n                    array.push(rowArr);\n                }    //逻辑值，指示如何比较；按行 = FALSE 或省略；按列 = TRUE\n                //逻辑值，指示如何比较；按行 = FALSE 或省略；按列 = TRUE\n                var by_col = false;\n                if (arguments.length >= 2) {\n                    by_col = func_methods.getCellBoolen(arguments[1]);\n                    if (valueIsError(by_col)) {\n                        return by_col;\n                    }\n                }    //逻辑值，仅返回唯一值中出现一次 = TRUE；包括所有唯一值 = FALSE 或省略\n                //逻辑值，仅返回唯一值中出现一次 = TRUE；包括所有唯一值 = FALSE 或省略\n                var occurs_once = false;\n                if (arguments.length == 3) {\n                    occurs_once = func_methods.getCellBoolen(arguments[2]);\n                    if (valueIsError(occurs_once)) {\n                        return occurs_once;\n                    }\n                }    //计算\n                //计算\n                if (by_col) {\n                    array = array[0].map(function (col, a) {\n                        return array.map(function (row) {\n                            return row[a];\n                        });\n                    });\n                    var strObj = {}, strArr = [];\n                    var allUnique = [];\n                    for (var i = 0; i < array.length; i++) {\n                        var str = '';\n                        for (var j = 0; j < array[i].length; j++) {\n                            str += array[i][j].toString() + '|||';\n                        }\n                        strArr.push(str);\n                        if (!(str in strObj)) {\n                            strObj[str] = 0;\n                            allUnique.push(array[i]);\n                        }\n                    }\n                    if (occurs_once) {\n                        var oneUnique = [];\n                        for (var i = 0; i < strArr.length; i++) {\n                            if (strArr.indexOf(strArr[i]) == strArr.lastIndexOf(strArr[i])) {\n                                oneUnique.push(array[i]);\n                            }\n                        }\n                        oneUnique = oneUnique[0].map(function (col, a) {\n                            return oneUnique.map(function (row) {\n                                return row[a];\n                            });\n                        });\n                        return oneUnique;\n                    } else {\n                        allUnique = allUnique[0].map(function (col, a) {\n                            return allUnique.map(function (row) {\n                                return row[a];\n                            });\n                        });\n                        return allUnique;\n                    }\n                } else {\n                    var strObj = {}, strArr = [];\n                    var allUnique = [];\n                    for (var i = 0; i < array.length; i++) {\n                        var str = '';\n                        for (var j = 0; j < array[i].length; j++) {\n                            str += array[i][j].toString() + '|||';\n                        }\n                        strArr.push(str);\n                        if (!(str in strObj)) {\n                            strObj[str] = 0;\n                            allUnique.push(array[i]);\n                        }\n                    }\n                    if (occurs_once) {\n                        var oneUnique = [];\n                        for (var i = 0; i < strArr.length; i++) {\n                            if (strArr.indexOf(strArr[i]) == strArr.lastIndexOf(strArr[i])) {\n                                oneUnique.push(array[i]);\n                            }\n                        }\n                        return oneUnique;\n                    } else {\n                        return allUnique;\n                    }\n                }\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'RANDARRAY': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //要返回的行数\n                var rows = 1;\n                if (arguments.length >= 1) {\n                    rows = func_methods.getFirstValue(arguments[0]);\n                    if (valueIsError(rows)) {\n                        return rows;\n                    }\n                    if (!isRealNum(rows)) {\n                        return formula.error.v;\n                    }\n                    rows = parseInt(rows);\n                }    //要返回的列数\n                //要返回的列数\n                var cols = 1;\n                if (arguments.length == 2) {\n                    cols = func_methods.getFirstValue(arguments[1]);\n                    if (valueIsError(cols)) {\n                        return cols;\n                    }\n                    if (!isRealNum(cols)) {\n                        return formula.error.v;\n                    }\n                    cols = parseInt(cols);\n                }\n                if (rows <= 0 || cols <= 0) {\n                    return formula.error.v;\n                }    //计算\n                //计算\n                var result = [];\n                for (var i = 0; i < rows; i++) {\n                    var result_row = [];\n                    for (var j = 0; j < cols; j++) {\n                        result_row.push(Math.random().toFixed(9));\n                    }\n                    result.push(result_row);\n                }\n                return result;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'SEQUENCE': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                //要返回的行数\n                var rows = func_methods.getFirstValue(arguments[0]);\n                if (valueIsError(rows)) {\n                    return rows;\n                }\n                if (!isRealNum(rows)) {\n                    return formula.error.v;\n                }\n                rows = parseInt(rows);    //要返回的列数\n                //要返回的列数\n                var cols = 1;\n                if (arguments.length >= 2) {\n                    cols = func_methods.getFirstValue(arguments[1]);\n                    if (valueIsError(cols)) {\n                        return cols;\n                    }\n                    if (!isRealNum(cols)) {\n                        return formula.error.v;\n                    }\n                    cols = parseInt(cols);\n                }    //序列中的第一个数字\n                //序列中的第一个数字\n                var start = 1;\n                if (arguments.length >= 3) {\n                    start = func_methods.getFirstValue(arguments[2]);\n                    if (valueIsError(start)) {\n                        return start;\n                    }\n                    if (!isRealNum(start)) {\n                        return formula.error.v;\n                    }\n                    start = parseFloat(start);\n                }    //序列中每个序列值的增量\n                //序列中每个序列值的增量\n                var step = 1;\n                if (arguments.length == 4) {\n                    step = func_methods.getFirstValue(arguments[3]);\n                    if (valueIsError(step)) {\n                        return step;\n                    }\n                    if (!isRealNum(step)) {\n                        return formula.error.v;\n                    }\n                    step = parseFloat(step);\n                }\n                if (rows <= 0 || cols <= 0) {\n                    return formula.error.v;\n                }    //计算\n                //计算\n                var result = [];\n                for (var i = 0; i < rows; i++) {\n                    var result_row = [];\n                    for (var j = 0; j < cols; j++) {\n                        var number = start + step * (j + cols * i);\n                        result_row.push(number);\n                    }\n                    result.push(result_row);\n                }\n                return result;\n            } catch (e) {\n                var err = e;\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        },\n        'EVALUATE': function () {\n            //必要参数个数错误检测\n            if (arguments.length < this.m[0] || arguments.length > this.m[1]) {\n                return formula.error.na;\n            }    //参数类型错误检测\n            //参数类型错误检测\n            for (var i = 0; i < arguments.length; i++) {\n                var p = formula.errorParamCheck(this.p, arguments[i], i);\n                if (!p[0]) {\n                    return formula.error.v;\n                }\n            }\n            try {\n                var cell_r = window.luckysheetCurrentRow;\n                var cell_c = window.luckysheetCurrentColumn;\n                var sheetindex_now = window.luckysheetCurrentIndex;    //公式文本\n                //公式文本\n                var strtext = func_methods.getFirstValue(arguments[0]).toString();\n                if (valueIsError(strtext)) {\n                    return strtext;\n                }    //在文本公式前面添加=\n                //在文本公式前面添加=\n                if (strtext.trim().indexOf('=') != 0) {\n                    strtext = '=' + strtext;\n                }    //console.log(strtext);\n                //console.log(strtext);\n                var result_this = formula.execstringformula(strtext, cell_r, cell_c, sheetindex_now);\n                return result_this[1];\n            } catch (e) {\n                var err = e;    //计算错误检测\n                //计算错误检测\n                err = formula.errorInfo(err);\n                return [\n                    formula.error.v,\n                    err\n                ];\n            }\n        }\n    };\n    return functionImplementation;\n});"]}