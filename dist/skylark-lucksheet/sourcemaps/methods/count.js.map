{"version":3,"sources":["methods/count.js"],"names":["define","Store","m_getdata","m_validate","m_format","locale","getdatabyselectionNoCopy","isRealNull","isRealNum","update","countfunc","luckysheet_select_save","length","min","Infinity","max","sum","count","s","data","r","c","ct","t","value","v","parseFloat","locale_formula","formula","ret","isFinite","average","Math","round","$","html"],"mappings":";;;;;;;AAAAA,QACI,WACA,YACA,aACA,WACA,oBACD,SAAUC,EAAOC,EAAWC,EAAYC,EAAUC,GACjD,aACA,MAAMC,yBAACA,GAA4BJ,GAC7BK,WAACA,EAAUC,UAAEA,GAAaL,GAC1BM,OAACA,GAAUL,EAyDjB,OAASM,UAxDT,WACI,GAA2C,GAAvCT,EAAMU,uBAAuBC,OAC7B,OAEJ,IAAIC,EAAMC,EAAAA,EAENC,GAAM,EAAA,EAENC,EAAM,EAENC,EAAQ,EAIZ,IAAK,IAAIC,EAAI,EAAGA,EAAIjB,EAAMU,uBAAuBC,OAAQM,IAAK,CAC1D,IAAIC,EAAOb,EAAyBL,EAAMU,uBAAuBO,IACjE,IAAK,IAAIE,EAAI,EAAGA,EAAID,EAAKP,OAAQQ,IAC7B,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAK,GAAGP,OAAQS,IAAK,CACrC,GAAId,EAAWY,EAAKC,GAAGC,IACnB,SAGJ,GADAJ,IACqB,MAAjBE,EAAKC,GAAGC,GAAGC,IAAiC,KAAnBH,EAAKC,GAAGC,GAAGC,GAAGC,EACvC,SAEJ,IAAIC,EAAQL,EAAKC,GAAGC,GAAGI,EAClBjB,EAAUgB,KAIfR,GADAQ,EAAQE,WAAWF,GAEfA,EAAQX,IACRA,EAAMW,GAENA,EAAQT,IACRA,EAAMS,KAKtB,IAAIG,EAAiBtB,IAASuB,QAC1BC,EAAM,GACVA,GAAO,SAAWF,EAAeV,MAAQ,IAAMA,EAAQ,WAEnDa,SAASf,IAAQe,SAASjB,MAC1BgB,GAAO,SAAWF,EAAeX,IAAM,IAAMP,EAAO,IAAKO,GAAO,UAChEa,GAAO,SAAWF,EAAeI,QAAU,IAAMtB,EAAO,IAAKuB,KAAKC,MAAMjB,EAAMC,EAAQ,KAAS,KAAS,WAExGa,SAASf,KACTc,GAAO,SAAWF,EAAeZ,IAAM,IAAMN,EAAO,IAAKM,GAAO,WAEhEe,SAASjB,KACTgB,GAAO,SAAWF,EAAed,IAAM,IAAMJ,EAAO,IAAKI,GAAO,WAEpEqB,EAAE,2BAA2BC,KAAKN","file":"../../methods/count.js","sourcesContent":["define([\n    '../store',\n    './getdata',\n    './validate',\n    './format',\n    '../locale/locale'\n], function (Store, m_getdata, m_validate, m_format, locale) {\n    'use strict';\n    const {getdatabyselectionNoCopy} = m_getdata;\n    const {isRealNull, isRealNum} = m_validate;\n    const {update} = m_format;\n    function countfunc() {\n        if (Store.luckysheet_select_save.length == 0) {\n            return;\n        }\n        let min = Infinity,\n            //最小值\n            max = -Infinity,\n            //最大值\n            sum = 0,\n            //求和 \n            count = 0,\n            //计数（非空单元格）\n            mean = 0;    //平均值\n        //平均值\n        for (let s = 0; s < Store.luckysheet_select_save.length; s++) {\n            let data = getdatabyselectionNoCopy(Store.luckysheet_select_save[s]);\n            for (let r = 0; r < data.length; r++) {\n                for (let c = 0; c < data[0].length; c++) {\n                    if (isRealNull(data[r][c])) {\n                        continue;\n                    }\n                    count++;\n                    if (data[r][c].ct != null && data[r][c].ct.t == 'd') {\n                        continue;\n                    }\n                    let value = data[r][c].v;\n                    if (!isRealNum(value)) {\n                        continue;\n                    }\n                    value = parseFloat(value);\n                    sum += value;\n                    if (value < min) {\n                        min = value;\n                    }\n                    if (value > max) {\n                        max = value;\n                    }\n                }\n            }\n        }\n        let locale_formula = locale().formula;\n        let ret = '';\n        ret += '<span>' + locale_formula.count + ':' + count + '</span>';    //处理成亿万格式\n        //处理成亿万格式\n        if (isFinite(max) || isFinite(min)) {\n            ret += '<span>' + locale_formula.sum + ':' + update('w', sum) + '</span>';\n            ret += '<span>' + locale_formula.average + ':' + update('w', Math.round(sum / count * 10000) / 10000) + '</span>';\n        }\n        if (isFinite(max)) {\n            ret += '<span>' + locale_formula.max + ':' + update('w', max) + '</span>';\n        }\n        if (isFinite(min)) {\n            ret += '<span>' + locale_formula.min + ':' + update('w', min) + '</span>';\n        }\n        $('#luckysheet-sta-content').html(ret);\n    }\n    return { countfunc: countfunc };\n});"]}