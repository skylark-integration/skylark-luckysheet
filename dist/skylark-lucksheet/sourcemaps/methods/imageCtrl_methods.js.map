{"version":3,"sources":["methods/imageCtrl_methods.js"],"names":["define","m_get","m_util","Store","locale","getSheetIndex","replaceHtml","imgItem","type","src","originWidth","originHeight","default","width","height","left","top","crop","offsetLeft","offsetTop","isFixedPos","fixedLeft","fixedTop","border","radius","style","color","images","currentImgId","currentWinW","currentWinH","resize","resizeXY","move","moveXY","cropChange","cropChangeXY","cropChangeObj","copyImgItemObj","inserImg","_this","this","last","luckysheet_select_save","length","rowIndex","row_focus","colIndex","column_focus","visibledatacolumn","visibledatarow","image","Image","onload","img","addImgItem","generateRandomId","prefix","userAgent","window","navigator","replace","split","mid","i","Math","round","random","Date","getTime","[object Object]","position","moveChangeSize","rc","index","size","$","extend","row","changeSize","imgId","imgItemParam","getImgItemParam","scaleY","col","scaleX","ref","file","luckysheetfile","currentSheetIndex","clearjfundo","jfundo","jfredo","push","sheetIndex","curImages","saveParam","k"],"mappings":"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","file":"../../methods/imageCtrl_methods.js","sourcesContent":["define([\r\n    '../methods/get',\r\n    '../utils/util',\r\n    '../store',\r\n    '../locale/locale'\r\n], function (m_get, m_util, Store, locale) {\r\n    'use strict';\r\n    const {getSheetIndex} = m_get;\r\n    const {replaceHtml} = m_util;\r\n    const imageCtrl = {\r\n        imgItem: {\r\n            type: '3',\r\n            //1移动并调整单元格大小 2移动并且不调整单元格的大小 3不要移动单元格并调整其大小\r\n            src: '',\r\n            //图片url\r\n            originWidth: null,\r\n            //图片原始宽度\r\n            originHeight: null,\r\n            //图片原始高度\r\n            default: {\r\n                width: null,\r\n                //图片 宽度\r\n                height: null,\r\n                //图片 高度\r\n                left: null,\r\n                //图片离表格左边的 位置\r\n                top: null\r\n            },\r\n            //图片离表格顶部的 位置\r\n            crop: {\r\n                width: null,\r\n                //图片裁剪后 宽度\r\n                height: null,\r\n                //图片裁剪后 高度\r\n                offsetLeft: 0,\r\n                //图片裁剪后离未裁剪时 左边的位移\r\n                offsetTop: 0\r\n            },\r\n            //图片裁剪后离未裁剪时 顶部的位移\r\n            isFixedPos: false,\r\n            //固定位置\r\n            fixedLeft: null,\r\n            //固定位置 左位移\r\n            fixedTop: null,\r\n            //固定位置 右位移\r\n            border: {\r\n                width: 0,\r\n                //边框宽度\r\n                radius: 0,\r\n                //边框半径\r\n                style: 'solid',\r\n                //边框类型\r\n                color: '#000'\r\n            }\r\n        },\r\n        //边框颜色\r\n        images: null,\r\n        currentImgId: null,\r\n        currentWinW: null,\r\n        currentWinH: null,\r\n        resize: null,\r\n        resizeXY: null,\r\n        move: false,\r\n        moveXY: null,\r\n        cropChange: null,\r\n        cropChangeXY: null,\r\n        cropChangeObj: null,\r\n        copyImgItemObj: null,\r\n        inserImg: function (src) {\r\n            let _this = this;\r\n            let last = Store.luckysheet_select_save[Store.luckysheet_select_save.length - 1];\r\n            let rowIndex = last.row_focus || 0;\r\n            let colIndex = last.column_focus || 0;\r\n            let left = colIndex == 0 ? 0 : Store.visibledatacolumn[colIndex - 1];\r\n            let top = rowIndex == 0 ? 0 : Store.visibledatarow[rowIndex - 1];\r\n            let image = new Image();\r\n            image.onload = function () {\r\n                let width = image.width, height = image.height;\r\n                let img = {\r\n                    src: src,\r\n                    left: left,\r\n                    top: top,\r\n                    originWidth: width,\r\n                    originHeight: height\r\n                };\r\n                _this.addImgItem(img);\r\n            };\r\n            image.src = src;\r\n        },\r\n        generateRandomId: function (prefix) {\r\n            if (prefix == null) {\r\n                prefix = 'img';\r\n            }\r\n            let userAgent = window.navigator.userAgent.replace(/[^a-zA-Z0-9]/g, '').split('');\r\n            let mid = '';\r\n            for (let i = 0; i < 12; i++) {\r\n                mid += userAgent[Math.round(Math.random() * (userAgent.length - 1))];\r\n            }\r\n            let time = new Date().getTime();\r\n            return prefix + '_' + mid + '_' + time;\r\n        },\r\n\r\n        getImgItemParam(imgItem) {\r\n            let isFixedPos = imgItem.isFixedPos;\r\n            let width = imgItem.default.width, height = imgItem.default.height, left = imgItem.default.left, top = imgItem.default.top;\r\n            if (imgItem.crop.width != width || imgItem.crop.height != height) {\r\n                width = imgItem.crop.width;\r\n                height = imgItem.crop.height;\r\n                left += imgItem.crop.offsetLeft;\r\n                top += imgItem.crop.offsetTop;\r\n            }\r\n            let position = 'absolute';\r\n            if (isFixedPos) {\r\n                position = 'fixed';\r\n                left = imgItem.fixedLeft + imgItem.crop.offsetLeft;\r\n                top = imgItem.fixedTop + imgItem.crop.offsetTop;\r\n            }\r\n            return {\r\n                width: width,\r\n                height: height,\r\n                left: left,\r\n                top: top,\r\n                position: position\r\n            };\r\n        },\r\n\r\n        moveChangeSize: function (rc, index, size) {\r\n            let _this = this;\r\n            let images = $.extend(true, {}, _this.images);\r\n            if (rc == 'row') {\r\n                let row = Store.visibledatarow[index], row_pre = index - 1 == -1 ? 0 : Store.visibledatarow[index - 1];\r\n                let changeSize = size - (row - row_pre - 1);\r\n                for (let imgId in images) {\r\n                    let imgItem = images[imgId];\r\n                    let imgItemParam = _this.getImgItemParam(imgItem);\r\n                    let type = imgItem.type;\r\n                    if (type == '1') {\r\n                        if (imgItemParam.top >= row) {\r\n                            imgItem.default.top = imgItemParam.top + changeSize - imgItem.crop.offsetTop;\r\n                        } else {\r\n                            if (imgItemParam.top + imgItemParam.height >= row - 2) {\r\n                                if (imgItemParam.top < row + changeSize) {\r\n                                    let scaleY = (imgItemParam.height + changeSize) / imgItemParam.height;\r\n                                    imgItem.default.height = Math.round(imgItem.default.height * scaleY);\r\n                                    imgItem.crop.height = Math.round(imgItem.crop.height * scaleY);\r\n                                    imgItem.crop.offsetTop = Math.round(imgItem.crop.offsetTop * scaleY);\r\n                                } else {\r\n                                    let scaleY = (imgItemParam.top + imgItemParam.height - row) / imgItemParam.height;\r\n                                    imgItem.default.height = Math.round(imgItem.default.height * scaleY);\r\n                                    imgItem.crop.height = Math.round(imgItem.crop.height * scaleY);\r\n                                    imgItem.crop.offsetTop = Math.round(imgItem.crop.offsetTop * scaleY);\r\n                                    imgItem.default.top = row + changeSize - imgItem.crop.offsetTop;\r\n                                }\r\n                            } else {\r\n                                if (imgItemParam.top > row + changeSize) {\r\n                                    let scaleY = 1 / imgItemParam.height;\r\n                                    imgItem.default.height = Math.round(imgItem.default.height * scaleY);\r\n                                    imgItem.crop.height = Math.round(imgItem.crop.height * scaleY);\r\n                                    imgItem.crop.offsetTop = Math.round(imgItem.crop.offsetTop * scaleY);\r\n                                    imgItem.default.top = row + changeSize - imgItem.crop.offsetTop;\r\n                                } else if (imgItemParam.top + imgItemParam.height > row + changeSize) {\r\n                                    let scaleY = (row + changeSize - imgItemParam.top) / imgItemParam.height;\r\n                                    imgItem.default.height = Math.round(imgItem.default.height * scaleY);\r\n                                    imgItem.crop.height = Math.round(imgItem.crop.height * scaleY);\r\n                                    imgItem.crop.offsetTop = Math.round(imgItem.crop.offsetTop * scaleY);\r\n                                }\r\n                            }\r\n                        }\r\n                    } else if (type == '2') {\r\n                        if (imgItemParam.top >= row) {\r\n                            imgItem.default.top = imgItemParam.top + changeSize - imgItem.crop.offsetTop;\r\n                        } else if (imgItemParam.top > row + changeSize) {\r\n                            imgItem.default.top = row + changeSize - imgItem.crop.offsetTop;\r\n                        }\r\n                    }\r\n                }\r\n            } else if (rc == 'column') {\r\n                let col = Store.visibledatacolumn[index], col_pre = index - 1 == -1 ? 0 : Store.visibledatacolumn[index - 1];\r\n                let changeSize = size - (col - col_pre - 1);\r\n                for (let imgId in images) {\r\n                    let imgItem = images[imgId];\r\n                    let imgItemParam = _this.getImgItemParam(imgItem);\r\n                    let type = imgItem.type;\r\n                    if (type == '1') {\r\n                        if (imgItemParam.left >= col) {\r\n                            imgItem.default.left = imgItemParam.left + changeSize - imgItem.crop.offsetLeft;\r\n                        } else {\r\n                            if (imgItemParam.left + imgItemParam.width >= col - 2) {\r\n                                if (imgItemParam.left < col + changeSize) {\r\n                                    let scaleX = (imgItemParam.width + changeSize) / imgItemParam.width;\r\n                                    imgItem.default.width = Math.round(imgItem.default.width * scaleX);\r\n                                    imgItem.crop.width = Math.round(imgItem.crop.width * scaleX);\r\n                                    imgItem.crop.offsetLeft = Math.round(imgItem.crop.offsetLeft * scaleX);\r\n                                } else {\r\n                                    let scaleX = (imgItemParam.left + imgItemParam.width - col) / imgItemParam.width;\r\n                                    imgItem.default.width = Math.round(imgItem.default.width * scaleX);\r\n                                    imgItem.crop.width = Math.round(imgItem.crop.width * scaleX);\r\n                                    imgItem.crop.offsetLeft = Math.round(imgItem.crop.offsetLeft * scaleX);\r\n                                    imgItem.default.left = col + changeSize - imgItem.crop.offsetLeft;\r\n                                }\r\n                            } else {\r\n                                if (imgItemParam.left > col + changeSize) {\r\n                                    let scaleX = 1 / imgItemParam.width;\r\n                                    imgItem.default.width = Math.round(imgItem.default.width * scaleX);\r\n                                    imgItem.crop.width = Math.round(imgItem.crop.width * scaleX);\r\n                                    imgItem.crop.offsetLeft = Math.round(imgItem.crop.offsetLeft * scaleX);\r\n                                    imgItem.default.left = col + changeSize - imgItem.crop.offsetLeft;\r\n                                } else if (imgItemParam.left + imgItemParam.width > col + changeSize) {\r\n                                    let scaleX = (col + changeSize - imgItemParam.left) / imgItemParam.width;\r\n                                    imgItem.default.width = Math.round(imgItem.default.width * scaleX);\r\n                                    imgItem.crop.width = Math.round(imgItem.crop.width * scaleX);\r\n                                    imgItem.crop.offsetLeft = Math.round(imgItem.crop.offsetLeft * scaleX);\r\n                                }\r\n                            }\r\n                        }\r\n                    } else if (type == '2') {\r\n                        if (imgItemParam.left >= col) {\r\n                            imgItem.default.left = imgItemParam.left + changeSize - imgItem.crop.offsetLeft;\r\n                        } else if (imgItemParam.left > col + changeSize) {\r\n                            imgItem.default.left = col + changeSize - imgItem.crop.offsetLeft;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return images;\r\n        },\r\n        ref: function () {\r\n            let _this = this;\r\n            let file = Store.luckysheetfile[getSheetIndex(Store.currentSheetIndex)];\r\n            let images = _this.images;\r\n            if (Store.clearjfundo) {\r\n                Store.jfundo.length = 0;\r\n                Store.jfredo.push({\r\n                    'type': 'imageCtrl',\r\n                    'sheetIndex': Store.currentSheetIndex,\r\n                    'images': file.images == null ? null : $.extend(true, {}, file.images),\r\n                    'curImages': images\r\n                });\r\n            }\r\n            file.images = $.extend(true, {}, images);\r\n            Store.saveParam('all', Store.currentSheetIndex, file.images, { 'k': 'images' });\r\n        }\r\n    };\r\n    return imageCtrl;\r\n});"]}