{"version":3,"sources":["methods/freezen_methods.js"],"names":["define","m_get","m_sheetSearch","cells","Store","locale","getSheetIndex","luckysheet_searcharray","luckysheetFreezen","initialHorizontal","initialVertical","horizontalmovestate","horizontalmoveposition","verticalmovestate","verticalmoveposition","cutVolumn","arr","cutindex","pre","slice","length","saveFreezen","freezenhorizontaldata","top","freezenverticaldata","left","currentSheet","luckysheetfile","currentSheetIndex","freezen","horizontal","vertical","frozen","saveParam","k","initialFreezen","sheetIndex","_this","this","frozenTofreezen","createFreezenHorizontal","cancelFreezenHorizontal","createFreezenVertical","cancelFreezenVertical","createAssistCanvas","changeFreezenIndex","originindex","type","freezen_colindex","offset","visibledatacolumn","$","scrollLeft","freezen_rowindex","visibledatarow","scrollTop","saveFrozen","operate","order","focus","select_save","luckysheet_select_save","row_focus","column_focus","range","freezenRow","freezenColumn","freezenRC","freezenRowRange","freezenColumnRange","freezenRCRange","freezenCancel","file","row_st","columnHeaderHeight","col_st","rowHeaderWidth"],"mappings":"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","file":"../../methods/freezen_methods.js","sourcesContent":["define([\r\n    '../methods/get',\r\n    '../methods/sheetSearch',\r\n    '../methods/cells',\r\n    '../store',\r\n    '../locale/locale'\r\n], function (m_get, m_sheetSearch, cells, Store, locale) {\r\n    'use strict';\r\n    const {getSheetIndex} = m_get;\r\n    const {luckysheet_searcharray} = m_sheetSearch;\r\n    const luckysheetFreezen = {\r\n        initialHorizontal: true,\r\n        initialVertical: true,\r\n        horizontalmovestate: false,\r\n        horizontalmoveposition: null,\r\n        verticalmovestate: false,\r\n        verticalmoveposition: null,\r\n        cutVolumn: function (arr, cutindex) {\r\n            if (cutindex <= 0) {\r\n                return arr;\r\n            }\r\n            let pre = arr.slice(0, cutindex);\r\n            let premax = pre[pre.length - 1];\r\n            let ret = arr.slice(cutindex);    // for (let i = 0; i < ret.length; i++) {\r\n                                              //     ret[i] -= premax;\r\n                                              // }\r\n            // for (let i = 0; i < ret.length; i++) {\r\n            //     ret[i] -= premax;\r\n            // }\r\n            return ret;\r\n        },\r\n\r\n        saveFreezen: function (freezenhorizontaldata, top, freezenverticaldata, left) {\r\n            let currentSheet = Store.luckysheetfile[getSheetIndex(Store.currentSheetIndex)];\r\n            if (currentSheet.freezen == null) {\r\n                currentSheet.freezen = {};\r\n            }\r\n            if (freezenhorizontaldata != null) {\r\n                if (currentSheet.freezen.horizontal == null) {\r\n                    currentSheet.freezen.horizontal = {};\r\n                }\r\n                currentSheet.freezen.horizontal.freezenhorizontaldata = freezenhorizontaldata;\r\n                currentSheet.freezen.horizontal.top = top;\r\n            }\r\n            if (freezenverticaldata != null) {\r\n                if (currentSheet.freezen.vertical == null) {\r\n                    currentSheet.freezen.vertical = {};\r\n                }\r\n                currentSheet.freezen.vertical.freezenverticaldata = freezenverticaldata;\r\n                currentSheet.freezen.vertical.left = left;\r\n            }    // if(currentSheet.freezen != null){\r\n                 //     Store.saveParam(\"all\", Store.currentSheetIndex, currentSheet.freezen, { \"k\": \"freezen\" });\r\n                 // }\r\n                 // use new property frozen\r\n            // if(currentSheet.freezen != null){\r\n            //     Store.saveParam(\"all\", Store.currentSheetIndex, currentSheet.freezen, { \"k\": \"freezen\" });\r\n            // }\r\n            // use new property frozen\r\n            if (currentSheet.frozen != null) {\r\n                Store.saveParam('all', Store.currentSheetIndex, currentSheet.frozen, { 'k': 'frozen' });\r\n            }\r\n        },\r\n        initialFreezen: function (sheetIndex) {\r\n            let _this = this;    // when init ,we get frozen, but here, we need freezen,so tranform it\r\n            // when init ,we get frozen, but here, we need freezen,so tranform it\r\n            _this.frozenTofreezen();\r\n            let currentSheet = Store.luckysheetfile[getSheetIndex(sheetIndex)];\r\n            if (currentSheet.freezen != null && currentSheet.freezen.horizontal != null && currentSheet.freezen.horizontal.freezenhorizontaldata != null) {\r\n                _this.createFreezenHorizontal(currentSheet.freezen.horizontal.freezenhorizontaldata, currentSheet.freezen.horizontal.top);\r\n            } else {\r\n                _this.cancelFreezenHorizontal(sheetIndex);\r\n            }\r\n            if (currentSheet.freezen != null && currentSheet.freezen.vertical != null && currentSheet.freezen.vertical.freezenverticaldata != null) {\r\n                _this.createFreezenVertical(currentSheet.freezen.vertical.freezenverticaldata, currentSheet.freezen.vertical.left);\r\n            } else {\r\n                _this.cancelFreezenVertical(sheetIndex);\r\n            }\r\n            _this.createAssistCanvas();\r\n        },\r\n        changeFreezenIndex: function (originindex, type) {\r\n            let _this = this;\r\n            if (type == 'v' && Store.freezenverticaldata != null) {\r\n                let freezen_colindex = Store.freezenverticaldata[1];\r\n                let offset = luckysheet_searcharray(Store.visibledatacolumn, $('#luckysheet-cell-main').scrollLeft());\r\n                if (originindex - offset < freezen_colindex) {\r\n                    originindex = originindex - offset;\r\n                }\r\n            } else if (type == 'h' && Store.freezenhorizontaldata != null) {\r\n                let freezen_rowindex = Store.freezenhorizontaldata[1];\r\n                let offset = luckysheet_searcharray(Store.visibledatarow, $('#luckysheet-cell-main').scrollTop());\r\n                if (originindex - offset < freezen_rowindex) {\r\n                    originindex = originindex - offset;\r\n                }\r\n            }\r\n            return originindex;\r\n        },\r\n\r\n        /**\r\n     * \r\n     * @param {string} operate  \"freezenRow\"/ \"freezenColumn\"......\r\n     * @param {Number | String} order 工作表索引；默认值为当前工作表索引\r\n     * @param {Object} focus 冻结选区时的focus单元格行列值构成的对象；格式为{ row_focus:0, column_focus:0 }\r\n     */\r\n        saveFrozen: function (operate, order, focus = {}) {\r\n            if (order == null) {\r\n                order = getSheetIndex(Store.currentSheetIndex);\r\n            }    // New configuration attribute of sheet: frozen, which stores more semantic configuration for initialization and transmission to the backend. freezenhorizontaldata is still used as local data\r\n            // New configuration attribute of sheet: frozen, which stores more semantic configuration for initialization and transmission to the backend. freezenhorizontaldata is still used as local data\r\n            const select_save = Store.luckysheet_select_save[Store.luckysheet_select_save.length - 1];\r\n            const row_focus = select_save['row_focus'] == null ? select_save['row'][0] : select_save['row_focus'];\r\n            const column_focus = select_save['column_focus'] == null ? select_save['column'][0] : select_save['column_focus'];\r\n            const range = {\r\n                row_focus: focus.row_focus || row_focus,\r\n                column_focus: focus.column_focus || column_focus\r\n            };\r\n            const frozen = {\r\n                'freezenRow': { type: 'row' },\r\n                'freezenColumn': { type: 'column' },\r\n                'freezenRC': { type: 'both' },\r\n                'freezenRowRange': {\r\n                    type: 'rangeRow',\r\n                    range: range\r\n                },\r\n                'freezenColumnRange': {\r\n                    type: 'rangeColumn',\r\n                    range: range\r\n                },\r\n                'freezenRCRange': {\r\n                    type: 'rangeBoth',\r\n                    range: range\r\n                },\r\n                'freezenCancel': { type: 'cancel' }\r\n            };    // store frozen\r\n            // store frozen\r\n            Store.luckysheetfile[order]['frozen'] = frozen[operate];\r\n        },\r\n        frozenTofreezen: function () {\r\n            // get frozen type\r\n            let file = Store.luckysheetfile[getSheetIndex(Store.currentSheetIndex)];\r\n            const frozen = file['frozen'];\r\n            if (frozen == null) {\r\n                return;\r\n            }\r\n            let freezen = null;    // transform to freezen\r\n            // transform to freezen\r\n            if (frozen.type === 'row') {\r\n                let scrollTop = 0;\r\n                let row_st = luckysheet_searcharray(Store.visibledatarow, scrollTop);\r\n                if (row_st == -1) {\r\n                    row_st = 0;\r\n                }\r\n                let top = Store.visibledatarow[row_st] - 2 - scrollTop + Store.columnHeaderHeight;\r\n                let freezenhorizontaldata = [\r\n                    Store.visibledatarow[row_st],\r\n                    row_st + 1,\r\n                    scrollTop,\r\n                    luckysheetFreezen.cutVolumn(Store.visibledatarow, row_st + 1),\r\n                    top\r\n                ];\r\n                freezen = {\r\n                    horizontal: {\r\n                        freezenhorizontaldata: freezenhorizontaldata,\r\n                        top: top\r\n                    }\r\n                };\r\n            } else if (frozen.type === 'column') {\r\n                let scrollLeft = 0;\r\n                let col_st = luckysheet_searcharray(Store.visibledatacolumn, scrollLeft);\r\n                if (col_st == -1) {\r\n                    col_st = 0;\r\n                }\r\n                let left = Store.visibledatacolumn[col_st] - 2 - scrollLeft + Store.rowHeaderWidth;\r\n                let freezenverticaldata = [\r\n                    Store.visibledatacolumn[col_st],\r\n                    col_st + 1,\r\n                    scrollLeft,\r\n                    luckysheetFreezen.cutVolumn(Store.visibledatacolumn, col_st + 1),\r\n                    left\r\n                ];\r\n                freezen = {\r\n                    vertical: {\r\n                        freezenverticaldata: freezenverticaldata,\r\n                        left: left\r\n                    }\r\n                };\r\n            } else if (frozen.type === 'both') {\r\n                let scrollTop = 0;\r\n                let row_st = luckysheet_searcharray(Store.visibledatarow, scrollTop);\r\n                if (row_st == -1) {\r\n                    row_st = 0;\r\n                }\r\n                let top = Store.visibledatarow[row_st] - 2 - scrollTop + Store.columnHeaderHeight;\r\n                let freezenhorizontaldata = [\r\n                    Store.visibledatarow[row_st],\r\n                    row_st + 1,\r\n                    scrollTop,\r\n                    luckysheetFreezen.cutVolumn(Store.visibledatarow, row_st + 1),\r\n                    top\r\n                ];\r\n                let scrollLeft = 0;\r\n                let col_st = luckysheet_searcharray(Store.visibledatacolumn, scrollLeft);\r\n                if (col_st == -1) {\r\n                    col_st = 0;\r\n                }\r\n                let left = Store.visibledatacolumn[col_st] - 2 - scrollLeft + Store.rowHeaderWidth;\r\n                let freezenverticaldata = [\r\n                    Store.visibledatacolumn[col_st],\r\n                    col_st + 1,\r\n                    scrollLeft,\r\n                    luckysheetFreezen.cutVolumn(Store.visibledatacolumn, col_st + 1),\r\n                    left\r\n                ];\r\n                freezen = {\r\n                    horizontal: {\r\n                        freezenhorizontaldata: freezenhorizontaldata,\r\n                        top: top\r\n                    },\r\n                    vertical: {\r\n                        freezenverticaldata: freezenverticaldata,\r\n                        left: left\r\n                    }\r\n                };\r\n            } else if (frozen.type === 'rangeRow') {\r\n                let scrollTop = 0;\r\n                let row_st = luckysheet_searcharray(Store.visibledatarow, scrollTop);\r\n                let row_focus = frozen.range['row_focus'];\r\n                if (row_focus > row_st) {\r\n                    row_st = row_focus;\r\n                }\r\n                if (row_st == -1) {\r\n                    row_st = 0;\r\n                }\r\n                let top = Store.visibledatarow[row_st] - 2 - scrollTop + Store.columnHeaderHeight;\r\n                let freezenhorizontaldata = [\r\n                    Store.visibledatarow[row_st],\r\n                    row_st + 1,\r\n                    scrollTop,\r\n                    luckysheetFreezen.cutVolumn(Store.visibledatarow, row_st + 1),\r\n                    top\r\n                ];\r\n                freezen = {\r\n                    horizontal: {\r\n                        freezenhorizontaldata: freezenhorizontaldata,\r\n                        top: top\r\n                    }\r\n                };\r\n            } else if (frozen.type === 'rangeColumn') {\r\n                let scrollLeft = 0;\r\n                let col_st = luckysheet_searcharray(Store.visibledatacolumn, scrollLeft);\r\n                let column_focus = frozen.range['column_focus'];\r\n                if (column_focus > col_st) {\r\n                    col_st = column_focus;\r\n                }\r\n                if (col_st == -1) {\r\n                    col_st = 0;\r\n                }\r\n                let left = Store.visibledatacolumn[col_st] - 2 - scrollLeft + Store.rowHeaderWidth;\r\n                let freezenverticaldata = [\r\n                    Store.visibledatacolumn[col_st],\r\n                    col_st + 1,\r\n                    scrollLeft,\r\n                    luckysheetFreezen.cutVolumn(Store.visibledatacolumn, col_st + 1),\r\n                    left\r\n                ];\r\n                freezen = {\r\n                    vertical: {\r\n                        freezenverticaldata: freezenverticaldata,\r\n                        left: left\r\n                    }\r\n                };\r\n            } else if (frozen.type === 'rangeBoth') {\r\n                let scrollTop = 0;\r\n                let row_st = luckysheet_searcharray(Store.visibledatarow, scrollTop);\r\n                let row_focus = frozen.range['row_focus'];\r\n                if (row_focus > row_st) {\r\n                    row_st = row_focus;\r\n                }\r\n                if (row_st == -1) {\r\n                    row_st = 0;\r\n                }\r\n                let top = Store.visibledatarow[row_st] - 2 - scrollTop + Store.columnHeaderHeight;\r\n                let freezenhorizontaldata = [\r\n                    Store.visibledatarow[row_st],\r\n                    row_st + 1,\r\n                    scrollTop,\r\n                    luckysheetFreezen.cutVolumn(Store.visibledatarow, row_st + 1),\r\n                    top\r\n                ];\r\n                let scrollLeft = 0;\r\n                let col_st = luckysheet_searcharray(Store.visibledatacolumn, scrollLeft);\r\n                let column_focus = frozen.range['column_focus'];\r\n                if (column_focus > col_st) {\r\n                    col_st = column_focus;\r\n                }\r\n                if (col_st == -1) {\r\n                    col_st = 0;\r\n                }\r\n                let left = Store.visibledatacolumn[col_st] - 2 - scrollLeft + Store.rowHeaderWidth;\r\n                let freezenverticaldata = [\r\n                    Store.visibledatacolumn[col_st],\r\n                    col_st + 1,\r\n                    scrollLeft,\r\n                    luckysheetFreezen.cutVolumn(Store.visibledatacolumn, col_st + 1),\r\n                    left\r\n                ];\r\n                freezen = {\r\n                    horizontal: {\r\n                        freezenhorizontaldata: freezenhorizontaldata,\r\n                        top: top\r\n                    },\r\n                    vertical: {\r\n                        freezenverticaldata: freezenverticaldata,\r\n                        left: left\r\n                    }\r\n                };\r\n            } else if (frozen.type === 'cancel') {\r\n                freezen = {\r\n                    horizontal: null,\r\n                    vertical: null\r\n                };\r\n            }\r\n            file['freezen'] = freezen;\r\n        }\r\n    };\r\n    return luckysheetFreezen;\r\n});"]}