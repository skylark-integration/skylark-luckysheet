{"version":3,"sources":["methods/dataVerificationCtrl_methods.js"],"names":["define","m_util","formula","m_validate","m_datecontroll","m_setdata","m_getdata","cells","m_get","locale","Store","replaceHtml","isRealNum","isRealNull","isdatetime","diff","setcellvalue","getcellvalue","getSheetIndex","getRangetxt","defaultItem","type","type2","value1","value2","checked","remote","prohibitInput","hintShow","hintText","curItem","selectRange","selectStatus","optionLabel","number","number_integer","number_decimal","bw","nb","eq","ne","gt","lt","gte","lte","include","exclude","equal","bf","nbf","af","naf","card","phone","optionLabel_en","getHintText","item","_this","this","length","lang","getFailureText","failureText","validateCellData","cellValue","list","getDropdownList","result","i","Number","toString","indexOf","test","txt","iscelldata","range","getcellrange","d","luckysheetfile","sheetIndex","data","r","row","c","column","cell","v","m","includes","push","arr","split"],"mappings":"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","file":"../../methods/dataVerificationCtrl_methods.js","sourcesContent":["define([\r\n    '../utils/util',\r\n    './formula_methods',\r\n    './validate',\r\n    './datecontroll',\r\n    './setdata',\r\n    './getdata',\r\n    '../methods/cells',\r\n    '../methods/get',\r\n    '../locale/locale',\r\n    '../store'\r\n], function (m_util, formula, m_validate, m_datecontroll,  m_setdata, m_getdata,  cells,  m_get, locale, Store) {\r\n    'use strict';\r\n    const {replaceHtml} = m_util;\r\n    const {isRealNum, isRealNull} = m_validate;\r\n    const {isdatetime, diff} = m_datecontroll;\r\n    const {setcellvalue} = m_setdata;\r\n    const {getcellvalue} = m_getdata;\r\n    const {getSheetIndex, getRangetxt} = m_get;\r\n    const dataVerificationCtrl = {\r\n        defaultItem: {\r\n            type: 'dropdown',\r\n            //类型\r\n            type2: null,\r\n            //\r\n            value1: '',\r\n            //\r\n            value2: '',\r\n            //\r\n            checked: false,\r\n            remote: false,\r\n            //自动远程获取选项\r\n            prohibitInput: false,\r\n            //输入数据无效时禁止输入\r\n            hintShow: false,\r\n            //选中单元格时显示提示语\r\n            hintText: ''\r\n        },\r\n        //\r\n        curItem: null,\r\n        ///dataVerification: null, // to store\r\n        selectRange: [],\r\n        selectStatus: false,\r\n        optionLabel: {\r\n            'number': '数值',\r\n            'number_integer': '整数',\r\n            'number_decimal': '小数',\r\n            'bw': '介于',\r\n            'nb': '不介于',\r\n            'eq': '等于',\r\n            'ne': '不等于',\r\n            'gt': '大于',\r\n            'lt': '小于',\r\n            'gte': '大于等于',\r\n            'lte': '小于等于',\r\n            'include': '包括',\r\n            'exclude': '不包括',\r\n            'equal': '等于',\r\n            'bf': '早于',\r\n            'nbf': '不早于',\r\n            'af': '晚于',\r\n            'naf': '不晚于',\r\n            'card': '身份证号码',\r\n            'phone': '手机号'\r\n        },\r\n        optionLabel_en: {\r\n            'number': 'numeric',\r\n            'number_integer': 'integer',\r\n            'number_decimal': 'decimal',\r\n            'bw': 'between',\r\n            'nb': 'not between',\r\n            'eq': 'equal to',\r\n            'ne': 'not equal to',\r\n            'gt': 'greater',\r\n            'lt': 'less than',\r\n            'gte': 'greater or equal to',\r\n            'lte': 'less than or equal to',\r\n            'include': 'include',\r\n            'exclude': 'not include',\r\n            'equal': 'equal to',\r\n            'bf': 'earlier than',\r\n            'nbf': 'not earlier than',\r\n            'af': 'later than',\r\n            'naf': 'not later than',\r\n            'card': 'identification number',\r\n            'phone': 'phone number'\r\n        },\r\n\r\n        getHintText: function (item) {\r\n            let _this = this;\r\n            let hintText = item.hintText || '';\r\n            if (hintText.length == 0) {\r\n                if (Store.lang == 'en') {\r\n                    if (item.type == 'dropdown') {\r\n                        hintText += 'please select an option in the drop-down list';\r\n                    } else if (item.type == 'checkbox') {\r\n                    } else if (item.type == 'number' || item.type == 'number_integer' || item.type == 'number_decimal') {\r\n                        hintText += 'please enter a ' + _this.optionLabel_en[item.type] + ' ' + _this.optionLabel_en[item.type2] + ' ' + item.value1;\r\n                        if (item.type2 == 'bw' || item.type2 == 'nb') {\r\n                            hintText += ' and ' + item.value2;\r\n                        }\r\n                    } else if (item.type == 'text_content') {\r\n                        hintText += 'please enter text ' + _this.optionLabel_en[item.type2] + ' ' + item.value1;\r\n                    } else if (item.type == 'text_length') {\r\n                        hintText += 'please enter text with length ' + _this.optionLabel_en[item.type2] + ' ' + item.value1;\r\n                        if (item.type2 == 'bw' || item.type2 == 'nb') {\r\n                            hintText += ' and ' + item.value2;\r\n                        }\r\n                    } else if (item.type == 'date') {\r\n                        hintText += 'please enter a date ' + _this.optionLabel_en[item.type2] + ' ' + item.value1;\r\n                        if (item.type2 == 'bw' || item.type2 == 'nb') {\r\n                            hintText += ' and ' + item.value2;\r\n                        }\r\n                    } else if (item.type == 'validity') {\r\n                        hintText += 'please enter the correct ' + _this.optionLabel_en[item.type2];\r\n                    }\r\n                } else {\r\n                    if (item.type == 'dropdown') {\r\n                        hintText += '请选择下拉列表中的选项';\r\n                    } else if (item.type == 'checkbox') {\r\n                    } else if (item.type == 'number' || item.type == 'number_integer' || item.type == 'number_decimal') {\r\n                        hintText += '请输入' + _this.optionLabel[item.type2] + item.value1;\r\n                        if (item.type2 == 'bw' || item.type2 == 'nb') {\r\n                            hintText += '和' + item.value2 + '之间';\r\n                        }\r\n                        hintText += '的' + _this.optionLabel[item.type];\r\n                    } else if (item.type == 'text_content') {\r\n                        hintText += '请输入内容' + _this.optionLabel[item.type2] + item.value1 + '的文本';\r\n                    } else if (item.type == 'text_length') {\r\n                        hintText += '请输入长度' + _this.optionLabel[item.type2] + item.value1;\r\n                        if (item.type2 == 'bw' || item.type2 == 'nb') {\r\n                            hintText += '和' + item.value2 + '之间';\r\n                        }\r\n                        hintText += '的文本';\r\n                    } else if (item.type == 'date') {\r\n                        hintText += '请输入' + _this.optionLabel[item.type2] + item.value1;\r\n                        if (item.type2 == 'bw' || item.type2 == 'nb') {\r\n                            hintText += '和' + item.value2 + '之间';\r\n                        }\r\n                        hintText += '的日期';\r\n                    } else if (item.type == 'validity') {\r\n                        hintText += '请输入正确的' + _this.optionLabel[item.type2];\r\n                    }\r\n                }\r\n            }\r\n            return hintText;\r\n        },\r\n        getFailureText: function (item) {\r\n            let _this = this;\r\n            let failureText = '';\r\n            if (Store.lang == 'en') {\r\n                if (item.type == 'dropdown') {\r\n                    failureText += 'what you selected is not an option in the drop-down list';\r\n                } else if (item.type == 'checkbox') {\r\n                } else if (item.type == 'number' || item.type == 'number_integer' || item.type == 'number_decimal') {\r\n                    failureText += 'what you entered is not a ' + _this.optionLabel_en[item.type] + ' ' + _this.optionLabel_en[item.type2] + ' ' + item.value1;\r\n                    if (item.type2 == 'bw' || item.type2 == 'nb') {\r\n                        failureText += ' and ' + item.value2;\r\n                    }\r\n                } else if (item.type == 'text_content') {\r\n                    failureText += 'what you entered is not text that ' + _this.optionLabel_en[item.type2] + ' ' + item.value1;\r\n                } else if (item.type == 'text_length') {\r\n                    failureText += 'the text you entered is not length ' + _this.optionLabel_en[item.type2] + ' ' + item.value1;\r\n                    if (item.type2 == 'bw' || item.type2 == 'nb') {\r\n                        failureText += ' and ' + item.value2;\r\n                    }\r\n                } else if (item.type == 'date') {\r\n                    failureText += 'the date you entered is not ' + _this.optionLabel_en[item.type2] + ' ' + item.value1;\r\n                    if (item.type2 == 'bw' || item.type2 == 'nb') {\r\n                        failureText += ' and ' + item.value2;\r\n                    }\r\n                } else if (item.type == 'validity') {\r\n                    failureText += 'what you entered is not a correct ' + _this.optionLabel_en[item.type2];\r\n                }\r\n            } else {\r\n                if (item.type == 'dropdown') {\r\n                    failureText += '你选择的不是下拉列表中的选项';\r\n                } else if (item.type == 'checkbox') {\r\n                } else if (item.type == 'number' || item.type == 'number_integer' || item.type == 'number_decimal') {\r\n                    failureText += '你输入的不是' + _this.optionLabel[item.type2] + item.value1;\r\n                    if (item.type2 == 'bw' || item.type2 == 'nb') {\r\n                        failureText += '和' + item.value2 + '之间';\r\n                    }\r\n                    failureText += '的' + _this.optionLabel[item.type];\r\n                } else if (item.type == 'text_content') {\r\n                    failureText += '你输入的不是内容' + _this.optionLabel[item.type2] + item.value1 + '的文本';\r\n                } else if (item.type == 'text_length') {\r\n                    failureText += '你输入的不是长度' + _this.optionLabel[item.type2] + item.value1;\r\n                    if (item.type2 == 'bw' || item.type2 == 'nb') {\r\n                        failureText += '和' + item.value2 + '之间';\r\n                    }\r\n                    failureText += '的文本';\r\n                } else if (item.type == 'date') {\r\n                    failureText += '你输入的不是' + _this.optionLabel[item.type2] + item.value1;\r\n                    if (item.type2 == 'bw' || item.type2 == 'nb') {\r\n                        failureText += '和' + item.value2 + '之间';\r\n                    }\r\n                    failureText += '的日期';\r\n                } else if (item.type == 'validity') {\r\n                    failureText += '你输入的不是一个正确的' + _this.optionLabel[item.type2];\r\n                }\r\n            }\r\n            return failureText;\r\n        },\r\n        validateCellData: function (cellValue, item) {\r\n            let _this = this;\r\n            let type = item.type, type2 = item.type2, value1 = item.value1, value2 = item.value2;\r\n            if (type == 'dropdown') {\r\n                let list = _this.getDropdownList(value1);\r\n                let result = false;\r\n                for (let i = 0; i < list.length; i++) {\r\n                    if (list[i] == cellValue) {\r\n                        result = true;\r\n                        break;\r\n                    }\r\n                }\r\n                return result;\r\n            } else if (type == 'checkbox') {\r\n            } else if (type == 'number' || type == 'number_integer' || type == 'number_decimal') {\r\n                if (!isRealNum(cellValue)) {\r\n                    return false;\r\n                }\r\n                cellValue = Number(cellValue);\r\n                if (type == 'number_integer' && cellValue % 1 !== 0) {\r\n                    return false;\r\n                }\r\n                if (type == 'number_decimal' && cellValue % 1 === 0) {\r\n                    return false;\r\n                }\r\n                value1 = Number(value1);\r\n                value2 = Number(value2);\r\n                if (type2 == 'bw' && (cellValue < value1 || cellValue > value2)) {\r\n                    return false;\r\n                }\r\n                if (type2 == 'nb' && (cellValue >= value1 && cellValue <= value2)) {\r\n                    return false;\r\n                }\r\n                if (type2 == 'eq' && cellValue != value1) {\r\n                    return false;\r\n                }\r\n                if (type2 == 'ne' && cellValue == value1) {\r\n                    return false;\r\n                }\r\n                if (type2 == 'gt' && cellValue <= value1) {\r\n                    return false;\r\n                }\r\n                if (type2 == 'lt' && cellValue >= value1) {\r\n                    return false;\r\n                }\r\n                if (type2 == 'gte' && cellValue < value1) {\r\n                    return false;\r\n                }\r\n                if (type2 == 'lte' && cellValue > value1) {\r\n                    return false;\r\n                }\r\n            } else if (type == 'text_content') {\r\n                cellValue = cellValue.toString();\r\n                value1 = value1.toString();\r\n                if (type2 == 'include' && cellValue.indexOf(value1) == -1) {\r\n                    return false;\r\n                }\r\n                if (type2 == 'exclude' && cellValue.indexOf(value1) > -1) {\r\n                    return false;\r\n                }\r\n                if (type2 == 'equal' && cellValue != value1) {\r\n                    return false;\r\n                }\r\n            } else if (type == 'text_length') {\r\n                cellValue = cellValue.toString().length;\r\n                value1 = Number(value1);\r\n                value2 = Number(value2);\r\n                if (type2 == 'bw' && (cellValue < value1 || cellValue > value2)) {\r\n                    return false;\r\n                }\r\n                if (type2 == 'nb' && (cellValue >= value1 && cellValue <= value2)) {\r\n                    return false;\r\n                }\r\n                if (type2 == 'eq' && cellValue != value1) {\r\n                    return false;\r\n                }\r\n                if (type2 == 'ne' && cellValue == value1) {\r\n                    return false;\r\n                }\r\n                if (type2 == 'gt' && cellValue <= value1) {\r\n                    return false;\r\n                }\r\n                if (type2 == 'lt' && cellValue >= value1) {\r\n                    return false;\r\n                }\r\n                if (type2 == 'gte' && cellValue < value1) {\r\n                    return false;\r\n                }\r\n                if (type2 == 'lte' && cellValue > value1) {\r\n                    return false;\r\n                }\r\n            } else if (type == 'date') {\r\n                if (!isdatetime(cellValue)) {\r\n                    return false;\r\n                }\r\n                if (type2 == 'bw' && (diff(cellValue, value1) < 0 || diff(cellValue, value2) > 0)) {\r\n                    return false;\r\n                }\r\n                if (type2 == 'nb' && (diff(cellValue, value1) >= 0 && diff(cellValue, value2) <= 0)) {\r\n                    return false;\r\n                }\r\n                if (type2 == 'eq' && diff(cellValue, value1) != 0) {\r\n                    return false;\r\n                }\r\n                if (type2 == 'ne' && diff(cellValue, value1) == 0) {\r\n                    return false;\r\n                }\r\n                if (type2 == 'bf' && diff(cellValue, value1) >= 0) {\r\n                    return false;\r\n                }\r\n                if (type2 == 'nbf' && diff(cellValue, value1) < 0) {\r\n                    return false;\r\n                }\r\n                if (type2 == 'af' && diff(cellValue, value1) <= 0) {\r\n                    return false;\r\n                }\r\n                if (type2 == 'naf' && diff(cellValue, value1) > 0) {\r\n                    return false;\r\n                }\r\n            } else if (type == 'validity') {\r\n                if (type2 == 'card' && !/(^\\d{15}$)|(^\\d{18}$)|(^\\d{17}(\\d|X|x)$)/.test(cellValue)) {\r\n                    return false;\r\n                }\r\n                if (type2 == 'phone' && !/^[1][3,4,5,7,8][0-9]{9}$/.test(cellValue)) {\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        },\r\n\r\n        getDropdownList: function (txt) {\r\n            let list = [];\r\n            if (formula.iscelldata(txt)) {\r\n                let range = formula.getcellrange(txt);\r\n                let d = Store.luckysheetfile[getSheetIndex(range.sheetIndex)].data;\r\n                for (let r = range.row[0]; r <= range.row[1]; r++) {\r\n                    for (let c = range.column[0]; c <= range.column[1]; c++) {\r\n                        if (d[r] == null) {\r\n                            continue;\r\n                        }\r\n                        let cell = d[r][c];\r\n                        if (cell == null || cell.v == null) {\r\n                            continue;\r\n                        }\r\n                        let v = cell.m || cell.v;\r\n                        if (!list.includes(v)) {\r\n                            list.push(v);\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                let arr = txt.split(',');\r\n                for (let i = 0; i < arr.length; i++) {\r\n                    let v = arr[i];\r\n                    if (v.length == 0) {\r\n                        continue;\r\n                    }\r\n                    if (!list.includes(v)) {\r\n                        list.push(v);\r\n                    }\r\n                }\r\n            }\r\n            return list;\r\n        }\r\n    };\r\n    return dataVerificationCtrl;\r\n});"]}