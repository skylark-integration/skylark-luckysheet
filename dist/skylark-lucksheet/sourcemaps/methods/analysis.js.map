{"version":3,"sources":["methods/analysis.js"],"names":["define","m_util","numFormat","STDEVP","mean","array1d","cov","i","length","xi","Math","pow","sqrt","STDEV","VARP","let"],"mappings":";;;;;;;AAAAA,QAAQ,iBAAkB,SAAUC,GAChC,aACA,MAAMC,UAACA,GAAaD,EAmCpB,OAjCIE,OAAU,SAAUC,EAAMC,GACtB,IAAIC,EAAM,EACV,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAQG,OAAQD,IAAK,CACrC,IAAIE,EAAKJ,EAAQE,GACjBD,GAAOI,KAAKC,IAAIF,EAAKL,EAAM,GAE/B,OAAOF,EAAUQ,KAAKE,KAAKN,EAAMD,EAAQG,UAE7CK,MAAS,SAAUT,EAAMC,GACrB,IAAIC,EAAM,EACV,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAQG,OAAQD,IAAK,CACrC,IAAIE,EAAKJ,EAAQE,GACjBD,GAAOI,KAAKC,IAAIF,EAAKL,EAAM,GAE/B,OAAOF,EAAUQ,KAAKE,KAAKN,GAAOD,EAAQG,OAAS,MAEvDM,KAAQ,SAAUV,EAAMC,GACpB,IAAIC,EAAM,EACV,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAQG,OAAQD,IAAK,CACrC,IAAIE,EAAKJ,EAAQE,GACjBD,GAAOI,KAAKC,IAAIF,EAAKL,EAAM,GAE/B,OAAOF,EAAUI,EAAMD,EAAQG,SAEnCO,IAAO,SAAUX,EAAMC,GACnB,IAAIC,EAAM,EACV,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAQG,OAAQD,IAAK,CACrC,IAAIE,EAAKJ,EAAQE,GACjBD,GAAOI,KAAKC,IAAIF,EAAKL,EAAM,GAE/B,OAAOF,EAAUI,GAAOD,EAAQG,OAAS","file":"../../methods/analysis.js","sourcesContent":["define(['../utils/util'], function (m_util) {\n    'use strict';\n    const {numFormat} = m_util;\n    const analysis = {\n        'STDEVP': function (mean, array1d) {\n            let cov = 0;\n            for (let i = 0; i < array1d.length; i++) {\n                let xi = array1d[i];\n                cov += Math.pow(xi - mean, 2);\n            }\n            return numFormat(Math.sqrt(cov / array1d.length));\n        },\n        'STDEV': function (mean, array1d) {\n            let cov = 0;\n            for (let i = 0; i < array1d.length; i++) {\n                let xi = array1d[i];\n                cov += Math.pow(xi - mean, 2);\n            }\n            return numFormat(Math.sqrt(cov / (array1d.length - 1)));\n        },\n        'VARP': function (mean, array1d) {\n            let cov = 0;\n            for (let i = 0; i < array1d.length; i++) {\n                let xi = array1d[i];\n                cov += Math.pow(xi - mean, 2);\n            }\n            return numFormat(cov / array1d.length);\n        },\n        'let': function (mean, array1d) {\n            let cov = 0;\n            for (let i = 0; i < array1d.length; i++) {\n                let xi = array1d[i];\n                cov += Math.pow(xi - mean, 2);\n            }\n            return numFormat(cov / (array1d.length - 1));\n        }\n    };\n    return analysis;\n});"]}