{"version":3,"sources":["methods/extend_methods.js"],"names":["define","m_getdata","m_setdata","m_get","Store","datagridgrowth","getcellFormula","setcellvalue","getSheetIndex","luckysheetextendData","rowlen","newData","d","deepCopyFlowData","flowdata","cfg","$","extend","config","collen","length","addNullData","concat","i","r","c","v","mc","rs","webWorkerFlowDataCache","luckysheetfile","currentSheetIndex","data","refreshGrid_rhcw","getMoveRange","type","str","edr","stc","edc","r1","r2","c1","c2","rlen","clen","newRange","push","row","column","range"],"mappings":"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","file":"../../methods/extend_methods.js","sourcesContent":["define([\r\n    '../methods/getdata',\r\n    '../methods/setdata',\r\n    '../methods/get',\r\n    '../store'\r\n], function ( m_getdata, m_setdata, m_get, Store) {\r\n    'use strict';\r\n    const {datagridgrowth, getcellFormula} = m_getdata;\r\n    const {setcellvalue} = m_setdata;\r\n    const {getSheetIndex} = m_get;\r\n\r\n    function luckysheetextendData(rowlen, newData) {\r\n        let d = Store.deepCopyFlowData(Store.flowdata);\r\n        let cfg = $.extend(true, {}, Store.config);\r\n        if (cfg['merge'] == null) {\r\n            cfg['merge'] = {};\r\n        }\r\n        let collen = d[0].length;\r\n        let addNullData = datagridgrowth([], rowlen, collen);\r\n        d = d.concat(addNullData);\r\n        for (let i = 0; i < newData.length; i++) {\r\n            let r = newData[i].r, c = newData[i].c, v = newData[i].v;\r\n            setcellvalue(r, c, d, v);\r\n            if (v != null && v.mc != null && v.mc.rs != null) {\r\n                cfg['merge'][v.mc.r + '_' + v.mc.c] = $.extend(true, {}, v.mc);\r\n            }\r\n        }    //luckysheet.flowdata\r\n        //luckysheet.flowdata\r\n        Store.flowdata = d;\r\n        Store.webWorkerFlowDataCache(Store.flowdata);    //worker存数据\r\n        //worker存数据\r\n        Store.luckysheetfile[getSheetIndex(Store.currentSheetIndex)].data = d;    //config\r\n        //config\r\n        Store.config = cfg;\r\n        Store.luckysheetfile[getSheetIndex(Store.currentSheetIndex)].config = Store.config;    //行高、列宽刷新\r\n        //行高、列宽刷新\r\n        ///jfrefreshgrid_rhcw(Store.flowdata.length, Store.flowdata[0].length);\r\n        Store.refreshGrid_rhcw(Store.flowdata.length, Store.flowdata[0].length);\r\n    }    \r\n\r\n    function getMoveRange(type, str, edr, stc, edc, r1, r2, c1, c2, rlen, clen) {\r\n        let newRange = [];\r\n        if (type == 'moveLeft') {\r\n            if (str > r2 || edr < r1 || stc > c2) {\r\n                newRange.push({\r\n                    'row': [\r\n                        r1,\r\n                        r2\r\n                    ],\r\n                    'column': [\r\n                        c1,\r\n                        c2\r\n                    ]\r\n                });\r\n            } else if (edc < c1) {\r\n                if (str <= r1 && edr >= r2) {\r\n                    newRange.push({\r\n                        'row': [\r\n                            r1,\r\n                            r2\r\n                        ],\r\n                        'column': [\r\n                            c1 - clen,\r\n                            c2 - clen\r\n                        ]\r\n                    });\r\n                } else if (str > r1 && edr < r2) {\r\n                    let range = [\r\n                        {\r\n                            'row': [\r\n                                r1,\r\n                                str - 1\r\n                            ],\r\n                            'column': [\r\n                                c1,\r\n                                c2\r\n                            ]\r\n                        },\r\n                        {\r\n                            'row': [\r\n                                edr + 1,\r\n                                r2\r\n                            ],\r\n                            'column': [\r\n                                c1,\r\n                                c2\r\n                            ]\r\n                        },\r\n                        {\r\n                            'row': [\r\n                                str,\r\n                                edr\r\n                            ],\r\n                            'column': [\r\n                                c1 - clen,\r\n                                c2 - clen\r\n                            ]\r\n                        }\r\n                    ];\r\n                    newRange = newRange.concat(range);\r\n                } else if (str > r1) {\r\n                    let range = [\r\n                        {\r\n                            'row': [\r\n                                r1,\r\n                                str - 1\r\n                            ],\r\n                            'column': [\r\n                                c1,\r\n                                c2\r\n                            ]\r\n                        },\r\n                        {\r\n                            'row': [\r\n                                str,\r\n                                r2\r\n                            ],\r\n                            'column': [\r\n                                c1 - clen,\r\n                                c2 - clen\r\n                            ]\r\n                        }\r\n                    ];\r\n                    newRange = newRange.concat(range);\r\n                } else if (edr < r2) {\r\n                    let range = [\r\n                        {\r\n                            'row': [\r\n                                r1,\r\n                                edr\r\n                            ],\r\n                            'column': [\r\n                                c1 - clen,\r\n                                c2 - clen\r\n                            ]\r\n                        },\r\n                        {\r\n                            'row': [\r\n                                edr + 1,\r\n                                r2\r\n                            ],\r\n                            'column': [\r\n                                c1,\r\n                                c2\r\n                            ]\r\n                        }\r\n                    ];\r\n                    newRange = newRange.concat(range);\r\n                }\r\n            } else if (edc >= c1) {\r\n                if (stc <= c1 && edc >= c2) {\r\n                    if (str > r1 && edr < r2) {\r\n                        let range = [\r\n                            {\r\n                                'row': [\r\n                                    r1,\r\n                                    str - 1\r\n                                ],\r\n                                'column': [\r\n                                    c1,\r\n                                    c2\r\n                                ]\r\n                            },\r\n                            {\r\n                                'row': [\r\n                                    edr + 1,\r\n                                    r2\r\n                                ],\r\n                                'column': [\r\n                                    c1,\r\n                                    c2\r\n                                ]\r\n                            }\r\n                        ];\r\n                        newRange = newRange.concat(range);\r\n                    } else if (str > r1) {\r\n                        let range = [{\r\n                                'row': [\r\n                                    r1,\r\n                                    str - 1\r\n                                ],\r\n                                'column': [\r\n                                    c1,\r\n                                    c2\r\n                                ]\r\n                            }];\r\n                        newRange = newRange.concat(range);\r\n                    } else if (edr < r2) {\r\n                        let range = [{\r\n                                'row': [\r\n                                    edr + 1,\r\n                                    r2\r\n                                ],\r\n                                'column': [\r\n                                    c1,\r\n                                    c2\r\n                                ]\r\n                            }];\r\n                        newRange = newRange.concat(range);\r\n                    }\r\n                } else if (stc > c1 && edc < c2) {\r\n                    if (str <= r1 && edr >= r2) {\r\n                        newRange.push({\r\n                            'row': [\r\n                                r1,\r\n                                r2\r\n                            ],\r\n                            'column': [\r\n                                c1,\r\n                                c2 - clen\r\n                            ]\r\n                        });\r\n                    } else if (str > r1 && edr < r2) {\r\n                        let range = [\r\n                            {\r\n                                'row': [\r\n                                    r1,\r\n                                    str - 1\r\n                                ],\r\n                                'column': [\r\n                                    c1,\r\n                                    c2\r\n                                ]\r\n                            },\r\n                            {\r\n                                'row': [\r\n                                    edr + 1,\r\n                                    r2\r\n                                ],\r\n                                'column': [\r\n                                    c1,\r\n                                    c2\r\n                                ]\r\n                            },\r\n                            {\r\n                                'row': [\r\n                                    str,\r\n                                    edr\r\n                                ],\r\n                                'column': [\r\n                                    c1,\r\n                                    c2 - clen\r\n                                ]\r\n                            }\r\n                        ];\r\n                        newRange = newRange.concat(range);\r\n                    } else if (str > r1) {\r\n                        let range = [\r\n                            {\r\n                                'row': [\r\n                                    r1,\r\n                                    str - 1\r\n                                ],\r\n                                'column': [\r\n                                    c1,\r\n                                    c2\r\n                                ]\r\n                            },\r\n                            {\r\n                                'row': [\r\n                                    str,\r\n                                    r2\r\n                                ],\r\n                                'column': [\r\n                                    c1,\r\n                                    c2 - clen\r\n                                ]\r\n                            }\r\n                        ];\r\n                        newRange = newRange.concat(range);\r\n                    } else if (edr < r2) {\r\n                        let range = [\r\n                            {\r\n                                'row': [\r\n                                    r1,\r\n                                    edr\r\n                                ],\r\n                                'column': [\r\n                                    c1,\r\n                                    c2 - clen\r\n                                ]\r\n                            },\r\n                            {\r\n                                'row': [\r\n                                    edr + 1,\r\n                                    r2\r\n                                ],\r\n                                'column': [\r\n                                    c1,\r\n                                    c2\r\n                                ]\r\n                            }\r\n                        ];\r\n                        newRange = newRange.concat(range);\r\n                    }\r\n                } else if (stc > c1) {\r\n                    if (str <= r1 && edr >= r2) {\r\n                        newRange.push({\r\n                            'row': [\r\n                                r1,\r\n                                r2\r\n                            ],\r\n                            'column': [\r\n                                c1,\r\n                                stc - 1\r\n                            ]\r\n                        });\r\n                    } else if (str > r1 && edr < r2) {\r\n                        let range = [\r\n                            {\r\n                                'row': [\r\n                                    r1,\r\n                                    str - 1\r\n                                ],\r\n                                'column': [\r\n                                    c1,\r\n                                    c2\r\n                                ]\r\n                            },\r\n                            {\r\n                                'row': [\r\n                                    edr + 1,\r\n                                    r2\r\n                                ],\r\n                                'column': [\r\n                                    c1,\r\n                                    c2\r\n                                ]\r\n                            },\r\n                            {\r\n                                'row': [\r\n                                    str,\r\n                                    edr\r\n                                ],\r\n                                'column': [\r\n                                    c1,\r\n                                    stc - 1\r\n                                ]\r\n                            }\r\n                        ];\r\n                        newRange = newRange.concat(range);\r\n                    } else if (str > r1) {\r\n                        let range = [\r\n                            {\r\n                                'row': [\r\n                                    r1,\r\n                                    str - 1\r\n                                ],\r\n                                'column': [\r\n                                    c1,\r\n                                    c2\r\n                                ]\r\n                            },\r\n                            {\r\n                                'row': [\r\n                                    str,\r\n                                    r2\r\n                                ],\r\n                                'column': [\r\n                                    c1,\r\n                                    stc - 1\r\n                                ]\r\n                            }\r\n                        ];\r\n                        newRange = newRange.concat(range);\r\n                    } else if (edr < r2) {\r\n                        let range = [\r\n                            {\r\n                                'row': [\r\n                                    r1,\r\n                                    edr\r\n                                ],\r\n                                'column': [\r\n                                    c1,\r\n                                    stc - 1\r\n                                ]\r\n                            },\r\n                            {\r\n                                'row': [\r\n                                    edr + 1,\r\n                                    r2\r\n                                ],\r\n                                'column': [\r\n                                    c1,\r\n                                    c2\r\n                                ]\r\n                            }\r\n                        ];\r\n                        newRange = newRange.concat(range);\r\n                    }\r\n                } else if (edc < c2) {\r\n                    if (str <= r1 && edr >= r2) {\r\n                        newRange.push({\r\n                            'row': [\r\n                                r1,\r\n                                r2\r\n                            ],\r\n                            'column': [\r\n                                c1 - clen,\r\n                                c2 - clen\r\n                            ]\r\n                        });\r\n                    } else if (str > r1 && edr < r2) {\r\n                        let range = [\r\n                            {\r\n                                'row': [\r\n                                    r1,\r\n                                    str - 1\r\n                                ],\r\n                                'column': [\r\n                                    c1,\r\n                                    c2\r\n                                ]\r\n                            },\r\n                            {\r\n                                'row': [\r\n                                    edr + 1,\r\n                                    r2\r\n                                ],\r\n                                'column': [\r\n                                    c1,\r\n                                    c2\r\n                                ]\r\n                            },\r\n                            {\r\n                                'row': [\r\n                                    str,\r\n                                    edr\r\n                                ],\r\n                                'column': [\r\n                                    c1 - clen,\r\n                                    c2 - clen\r\n                                ]\r\n                            }\r\n                        ];\r\n                        newRange = newRange.concat(range);\r\n                    } else if (str > r1) {\r\n                        let range = [\r\n                            {\r\n                                'row': [\r\n                                    r1,\r\n                                    str - 1\r\n                                ],\r\n                                'column': [\r\n                                    c1,\r\n                                    c2\r\n                                ]\r\n                            },\r\n                            {\r\n                                'row': [\r\n                                    str,\r\n                                    r2\r\n                                ],\r\n                                'column': [\r\n                                    c1 - clen,\r\n                                    c2 - clen\r\n                                ]\r\n                            }\r\n                        ];\r\n                        newRange = newRange.concat(range);\r\n                    } else if (edr < r2) {\r\n                        let range = [\r\n                            {\r\n                                'row': [\r\n                                    r1,\r\n                                    edr\r\n                                ],\r\n                                'column': [\r\n                                    c1 - clen,\r\n                                    c2 - clen\r\n                                ]\r\n                            },\r\n                            {\r\n                                'row': [\r\n                                    edr + 1,\r\n                                    r2\r\n                                ],\r\n                                'column': [\r\n                                    c1,\r\n                                    c2\r\n                                ]\r\n                            }\r\n                        ];\r\n                        newRange = newRange.concat(range);\r\n                    }\r\n                }\r\n            }\r\n        } else if (type == 'moveUp') {\r\n            if (stc > c2 || edc < c1 || str > r2) {\r\n                newRange.push({\r\n                    'row': [\r\n                        r1,\r\n                        r2\r\n                    ],\r\n                    'column': [\r\n                        c1,\r\n                        c2\r\n                    ]\r\n                });\r\n            } else if (edr < r1) {\r\n                if (stc <= c1 && edc >= c2) {\r\n                    newRange.push({\r\n                        'row': [\r\n                            r1 - rlen,\r\n                            r2 - rlen\r\n                        ],\r\n                        'column': [\r\n                            c1,\r\n                            c2\r\n                        ]\r\n                    });\r\n                } else if (stc > c1 && edc < c2) {\r\n                    let range = [\r\n                        {\r\n                            'row': [\r\n                                r1,\r\n                                r2\r\n                            ],\r\n                            'column': [\r\n                                c1,\r\n                                stc - 1\r\n                            ]\r\n                        },\r\n                        {\r\n                            'row': [\r\n                                r1,\r\n                                r2\r\n                            ],\r\n                            'column': [\r\n                                edc + 1,\r\n                                c2\r\n                            ]\r\n                        },\r\n                        {\r\n                            'row': [\r\n                                r1 - rlen,\r\n                                r2 - rlen\r\n                            ],\r\n                            'column': [\r\n                                stc,\r\n                                edc\r\n                            ]\r\n                        }\r\n                    ];\r\n                    newRange = newRange.concat(range);\r\n                } else if (stc > c1) {\r\n                    let range = [\r\n                        {\r\n                            'row': [\r\n                                r1,\r\n                                r2\r\n                            ],\r\n                            'column': [\r\n                                c1,\r\n                                stc - 1\r\n                            ]\r\n                        },\r\n                        {\r\n                            'row': [\r\n                                r1 - rlen,\r\n                                r2 - rlen\r\n                            ],\r\n                            'column': [\r\n                                stc,\r\n                                c2\r\n                            ]\r\n                        }\r\n                    ];\r\n                    newRange = newRange.concat(range);\r\n                } else if (edc < c2) {\r\n                    let range = [\r\n                        {\r\n                            'row': [\r\n                                r1 - rlen,\r\n                                r2 - rlen\r\n                            ],\r\n                            'column': [\r\n                                c1,\r\n                                edc\r\n                            ]\r\n                        },\r\n                        {\r\n                            'row': [\r\n                                r1,\r\n                                r2\r\n                            ],\r\n                            'column': [\r\n                                edc + 1,\r\n                                c2\r\n                            ]\r\n                        }\r\n                    ];\r\n                    newRange = newRange.concat(range);\r\n                }\r\n            } else if (edr >= r1) {\r\n                if (str <= r1 && edr >= r2) {\r\n                    if (stc > c1 && edc < c2) {\r\n                        let range = [\r\n                            {\r\n                                'row': [\r\n                                    r1,\r\n                                    r2\r\n                                ],\r\n                                'column': [\r\n                                    c1,\r\n                                    stc - 1\r\n                                ]\r\n                            },\r\n                            {\r\n                                'row': [\r\n                                    r1,\r\n                                    r2\r\n                                ],\r\n                                'column': [\r\n                                    edc + 1,\r\n                                    c2\r\n                                ]\r\n                            }\r\n                        ];\r\n                        newRange = newRange.concat(range);\r\n                    } else if (stc > c1) {\r\n                        let range = [{\r\n                                'row': [\r\n                                    r1,\r\n                                    r2\r\n                                ],\r\n                                'column': [\r\n                                    c1,\r\n                                    stc - 1\r\n                                ]\r\n                            }];\r\n                        newRange = newRange.concat(range);\r\n                    } else if (edc < c2) {\r\n                        let range = [{\r\n                                'row': [\r\n                                    r1,\r\n                                    r2\r\n                                ],\r\n                                'column': [\r\n                                    edc + 1,\r\n                                    c2\r\n                                ]\r\n                            }];\r\n                        newRange = newRange.concat(range);\r\n                    }\r\n                } else if (str > r1 && edr < r2) {\r\n                    if (stc <= c1 && edc >= c2) {\r\n                        newRange.push({\r\n                            'row': [\r\n                                r1,\r\n                                r2 - rlen\r\n                            ],\r\n                            'column': [\r\n                                c1,\r\n                                c2\r\n                            ]\r\n                        });\r\n                    } else if (stc > c1 && edc < c2) {\r\n                        let range = [\r\n                            {\r\n                                'row': [\r\n                                    r1,\r\n                                    r2\r\n                                ],\r\n                                'column': [\r\n                                    c1,\r\n                                    stc - 1\r\n                                ]\r\n                            },\r\n                            {\r\n                                'row': [\r\n                                    r1,\r\n                                    r2\r\n                                ],\r\n                                'column': [\r\n                                    edc + 1,\r\n                                    c2\r\n                                ]\r\n                            },\r\n                            {\r\n                                'row': [\r\n                                    r1,\r\n                                    r2 - rlen\r\n                                ],\r\n                                'column': [\r\n                                    stc,\r\n                                    edc\r\n                                ]\r\n                            }\r\n                        ];\r\n                        newRange = newRange.concat(range);\r\n                    } else if (stc > c1) {\r\n                        let range = [\r\n                            {\r\n                                'row': [\r\n                                    r1,\r\n                                    r2\r\n                                ],\r\n                                'column': [\r\n                                    c1,\r\n                                    stc - 1\r\n                                ]\r\n                            },\r\n                            {\r\n                                'row': [\r\n                                    r1,\r\n                                    r2 - rlen\r\n                                ],\r\n                                'column': [\r\n                                    stc,\r\n                                    c2\r\n                                ]\r\n                            }\r\n                        ];\r\n                        newRange = newRange.concat(range);\r\n                    } else if (edc < c2) {\r\n                        let range = [\r\n                            {\r\n                                'row': [\r\n                                    r1,\r\n                                    r2 - rlen\r\n                                ],\r\n                                'column': [\r\n                                    c1,\r\n                                    edc\r\n                                ]\r\n                            },\r\n                            {\r\n                                'row': [\r\n                                    r1,\r\n                                    r2\r\n                                ],\r\n                                'column': [\r\n                                    edc + 1,\r\n                                    c2\r\n                                ]\r\n                            }\r\n                        ];\r\n                        newRange = newRange.concat(range);\r\n                    }\r\n                } else if (str > r1) {\r\n                    if (stc <= c1 && edc >= c2) {\r\n                        newRange.push({\r\n                            'row': [\r\n                                r1,\r\n                                str - 1\r\n                            ],\r\n                            'column': [\r\n                                c1,\r\n                                c2\r\n                            ]\r\n                        });\r\n                    } else if (stc > c1 && edc < c2) {\r\n                        let range = [\r\n                            {\r\n                                'row': [\r\n                                    r1,\r\n                                    r2\r\n                                ],\r\n                                'column': [\r\n                                    c1,\r\n                                    stc - 1\r\n                                ]\r\n                            },\r\n                            {\r\n                                'row': [\r\n                                    r1,\r\n                                    r2\r\n                                ],\r\n                                'column': [\r\n                                    edc + 1,\r\n                                    c2\r\n                                ]\r\n                            },\r\n                            {\r\n                                'row': [\r\n                                    r1,\r\n                                    str - 1\r\n                                ],\r\n                                'column': [\r\n                                    stc,\r\n                                    edc\r\n                                ]\r\n                            }\r\n                        ];\r\n                        newRange = newRange.concat(range);\r\n                    } else if (stc > c1) {\r\n                        let range = [\r\n                            {\r\n                                'row': [\r\n                                    r1,\r\n                                    r2\r\n                                ],\r\n                                'column': [\r\n                                    c1,\r\n                                    stc - 1\r\n                                ]\r\n                            },\r\n                            {\r\n                                'row': [\r\n                                    r1,\r\n                                    str - 1\r\n                                ],\r\n                                'column': [\r\n                                    stc,\r\n                                    c2\r\n                                ]\r\n                            }\r\n                        ];\r\n                        newRange = newRange.concat(range);\r\n                    } else if (edc < c2) {\r\n                        let range = [\r\n                            {\r\n                                'row': [\r\n                                    r1,\r\n                                    str - 1\r\n                                ],\r\n                                'column': [\r\n                                    c1,\r\n                                    edc\r\n                                ]\r\n                            },\r\n                            {\r\n                                'row': [\r\n                                    r1,\r\n                                    r2\r\n                                ],\r\n                                'column': [\r\n                                    edc + 1,\r\n                                    c2\r\n                                ]\r\n                            }\r\n                        ];\r\n                        newRange = newRange.concat(range);\r\n                    }\r\n                } else if (edr < r2) {\r\n                    if (stc <= c1 && edc >= c2) {\r\n                        newRange.push({\r\n                            'row': [\r\n                                r1 - rlen,\r\n                                r2 - rlen\r\n                            ],\r\n                            'column': [\r\n                                c1,\r\n                                c2\r\n                            ]\r\n                        });\r\n                    } else if (stc > c1 && edc < c2) {\r\n                        let range = [\r\n                            {\r\n                                'row': [\r\n                                    r1,\r\n                                    r2\r\n                                ],\r\n                                'column': [\r\n                                    c1,\r\n                                    stc - 1\r\n                                ]\r\n                            },\r\n                            {\r\n                                'row': [\r\n                                    r1,\r\n                                    r2\r\n                                ],\r\n                                'column': [\r\n                                    edc + 1,\r\n                                    c2\r\n                                ]\r\n                            },\r\n                            {\r\n                                'row': [\r\n                                    r1 - rlen,\r\n                                    r2 - rlen\r\n                                ],\r\n                                'column': [\r\n                                    stc,\r\n                                    edc\r\n                                ]\r\n                            }\r\n                        ];\r\n                        newRange = newRange.concat(range);\r\n                    } else if (stc > c1) {\r\n                        let range = [\r\n                            {\r\n                                'row': [\r\n                                    r1,\r\n                                    r2\r\n                                ],\r\n                                'column': [\r\n                                    c1,\r\n                                    stc - 1\r\n                                ]\r\n                            },\r\n                            {\r\n                                'row': [\r\n                                    r1 - rlen,\r\n                                    r2 - rlen\r\n                                ],\r\n                                'column': [\r\n                                    stc,\r\n                                    c2\r\n                                ]\r\n                            }\r\n                        ];\r\n                        newRange = newRange.concat(range);\r\n                    } else if (edc < c2) {\r\n                        let range = [\r\n                            {\r\n                                'row': [\r\n                                    r1 - rlen,\r\n                                    r2 - rlen\r\n                                ],\r\n                                'column': [\r\n                                    c1,\r\n                                    edc\r\n                                ]\r\n                            },\r\n                            {\r\n                                'row': [\r\n                                    r1,\r\n                                    r2\r\n                                ],\r\n                                'column': [\r\n                                    edc + 1,\r\n                                    c2\r\n                                ]\r\n                            }\r\n                        ];\r\n                        newRange = newRange.concat(range);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return newRange;\r\n    }\r\n    return {\r\n        luckysheetextendData,\r\n        getMoveRange\r\n    };\r\n});"]}