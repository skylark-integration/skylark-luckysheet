{"version":3,"sources":["methods/protection_methods.js"],"names":["define","Store","locale","m_get","m_set","m_util","getSheetIndex","setluckysheet_scroll_status","replaceHtml","transformRangeToAbsolute","openSelfModel","checkProtectionNotEnable","sheetIndex","sheetFile","getSheetByIndex","config","authority","aut","sheet","local_protection","protection","ht","hintText","length","defaultSheetHintText","tooltip","info","checkProtectionLocked","r","c","cell","data","lo","checkProtectionLockedSqref","checkProtectionCellHidden","hi","checkProtectionLockedRangeList","rangeList","column","row","s","r1","r2","c1","c2","checkProtectionSelectLockedOrUnLockedCells","selectunLockedCells","selectLockedCells","checkProtectionAllSelected","checkProtectionFormatCells","formatCells","checkProtectionAuthorityNormal","type","isAlert"],"mappings":"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","file":"../../methods/protection_methods.js","sourcesContent":["define([\r\n    '../store',\r\n    '../locale/locale',\r\n    '../methods/get',\r\n    '../methods/set',\r\n    '../utils/util'\r\n], function (Store, locale, m_get, m_set, m_util) {\r\n    'use strict';\r\n    const {getSheetIndex} = m_get;\r\n    const {setluckysheet_scroll_status} = m_set;\r\n    const {replaceHtml, transformRangeToAbsolute, openSelfModel} = m_util;\r\n    let isInitialProtection = false, isInitialProtectionAddRang = false, rangeItemListCache = [], isAddRangeItemState = true, updateRangeItemIndex = null, validationAuthority = null, updatingSheetFile = null, firstInputSheetProtectionPassword = true;\r\n    let sqrefMapCache = {}, inputRangeProtectionPassword = {}, initialRangePasswordHtml = false;\r\n    //protection state\r\n    function checkProtectionNotEnable(sheetIndex) {\r\n        let sheetFile = Store.getSheetByIndex(sheetIndex);\r\n        if (sheetFile == null) {\r\n            return true;\r\n        }\r\n        if (sheetFile.config == null || sheetFile.config.authority == null) {\r\n            return true;\r\n        }\r\n        let aut = sheetFile.config.authority;\r\n        if (aut == null || aut.sheet == null || aut.sheet == 0) {\r\n            return true;\r\n        }\r\n        const _locale = locale();\r\n        const local_protection = _locale.protection;\r\n        let ht;\r\n        if (aut.hintText != null && aut.hintText.length > 0) {\r\n            ht = aut.hintText;\r\n        } else {\r\n            ht = local_protection.defaultSheetHintText;\r\n        }\r\n        tooltip.info('', ht);\r\n        return false;\r\n    }\r\n    function checkProtectionLocked(r, c, sheetIndex) {\r\n        let sheetFile = Store.getSheetByIndex(sheetIndex);\r\n        if (sheetFile == null) {\r\n            return true;\r\n        }\r\n        if (sheetFile.config == null || sheetFile.config.authority == null) {\r\n            return true;\r\n        }\r\n        let data = sheetFile.data, cell = data[r][c], aut = sheetFile.config.authority;\r\n        if (aut == null || aut.sheet == null || aut.sheet == 0) {\r\n            return true;\r\n        }\r\n        if (cell && !cell.lo) {\r\n            return true;\r\n        }\r\n        const _locale = locale();\r\n        const local_protection = _locale.protection;\r\n        return checkProtectionLockedSqref(r, c, aut, local_protection);\r\n    }\r\n    function checkProtectionCellHidden(r, c, sheetIndex) {\r\n        let sheetFile = Store.getSheetByIndex(sheetIndex);\r\n        if (!sheetFile || !sheetFile.data[r] || !sheetFile.data[r][c]) {\r\n            return true;\r\n        }\r\n        if (sheetFile.config == null || sheetFile.config.authority == null) {\r\n            return true;\r\n        }\r\n        let data = sheetFile.data, cell = data[r][c], aut = sheetFile.config.authority;\r\n        if (aut == null || aut.sheet == null || aut.sheet == 0) {\r\n            return true;\r\n        }\r\n        if (cell == null || cell.hi == null || cell.hi == 0) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    function checkProtectionLockedRangeList(rangeList, sheetIndex) {\r\n        //EPM-BUDGET-START\r\n        if (rangeList[0].column[0] !== rangeList[0].column[1])\r\n            return true;    //EPM-BUDGET-END\r\n        //EPM-BUDGET-END\r\n        let sheetFile = Store.getSheetByIndex(sheetIndex);\r\n        if (sheetFile == null) {\r\n            return true;\r\n        }\r\n        if (sheetFile.config == null || sheetFile.config.authority == null) {\r\n            return true;\r\n        }\r\n        let aut = sheetFile.config.authority;\r\n        if (aut == null || aut.sheet == null || aut.sheet == 0) {\r\n            return true;\r\n        }\r\n        if (rangeList == null || rangeList.length == 0) {\r\n            return true;\r\n        }    //EPM-BUDGET-START\r\n        //EPM-BUDGET-START\r\n        let cell = sheetFile.data[rangeList[0].row[0]][rangeList[0].column[0]];\r\n        if (cell && !cell.lo) {\r\n            return true;\r\n        }    //EPM-BUDGET-END\r\n        //EPM-BUDGET-END\r\n        const _locale = locale();\r\n        const local_protection = _locale.protection;\r\n        for (let s = 0; s < rangeList.length; s++) {\r\n            let r1 = rangeList[s].row[0], r2 = rangeList[s].row[1];\r\n            let c1 = rangeList[s].column[0], c2 = rangeList[s].column[1];\r\n            for (let r = r1; r <= r2; r++) {\r\n                for (let c = c1; c <= c2; c++) {\r\n                    let isPass = checkProtectionLockedSqref(r, c, aut, local_protection);\r\n                    if (isPass == false) {\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    function checkProtectionSelectLockedOrUnLockedCells(r, c, sheetIndex) {\r\n        const _locale = locale();\r\n        const local_protection = _locale.protection;\r\n        let sheetFile = Store.getSheetByIndex(sheetIndex);\r\n        if (sheetFile == null) {\r\n            return true;\r\n        }\r\n        if (sheetFile.config == null || sheetFile.config.authority == null) {\r\n            return true;\r\n        }\r\n        let data = sheetFile.data, cell = data[r][c], aut = sheetFile.config.authority;\r\n        if (aut == null || aut.sheet == null || aut.sheet == 0) {\r\n            return true;\r\n        }\r\n        if (cell && !cell.lo) {\r\n            //unlocked\r\n            if (aut.selectunLockedCells == 1 || aut.selectunLockedCells == null) {\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        } else {\r\n            //locked??\r\n            let isAllEdit = checkProtectionLockedSqref(r, c, aut, local_protection, false);    //dont alert password model\r\n            //dont alert password model\r\n            if (isAllEdit) {\r\n                //unlocked\r\n                if (aut.selectunLockedCells == 1 || aut.selectunLockedCells == null) {\r\n                    return true;\r\n                } else {\r\n                    return false;\r\n                }\r\n            } else {\r\n                //locked\r\n                if (aut.selectLockedCells == 1 || aut.selectLockedCells == null) {\r\n                    return true;\r\n                } else {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    function checkProtectionAllSelected(sheetIndex) {\r\n        const _locale = locale();\r\n        const local_protection = _locale.protection;\r\n        let sheetFile = Store.getSheetByIndex(sheetIndex);\r\n        if (sheetFile == null) {\r\n            return true;\r\n        }\r\n        if (sheetFile.config == null || sheetFile.config.authority == null) {\r\n            return true;\r\n        }\r\n        let aut = sheetFile.config.authority;\r\n        if (aut == null || aut.sheet == null || aut.sheet == 0) {\r\n            return true;\r\n        }\r\n        let selectunLockedCells = false;\r\n        if (aut.selectunLockedCells == 1 || aut.selectunLockedCells == null) {\r\n            selectunLockedCells = true;\r\n        }\r\n        let selectLockedCells = false;\r\n        if (aut.selectLockedCells == 1 || aut.selectLockedCells == null) {\r\n            selectLockedCells = true;\r\n        }\r\n        if (selectunLockedCells && selectLockedCells) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    function checkProtectionFormatCells(sheetIndex) {\r\n        let sheetFile = Store.getSheetByIndex(sheetIndex);\r\n        if (sheetFile == null) {\r\n            return true;\r\n        }\r\n        if (sheetFile.config == null || sheetFile.config.authority == null) {\r\n            return true;\r\n        }\r\n        let aut = sheetFile.config.authority;\r\n        if (aut == null || aut.sheet == null || aut.sheet == 0) {\r\n            return true;\r\n        }\r\n        if (aut.formatCells == 1 || aut.formatCells == null) {\r\n            return true;\r\n        }\r\n        const _locale = locale();\r\n        const local_protection = _locale.protection;\r\n        let ht;\r\n        if (aut.hintText != null && aut.hintText.length > 0) {\r\n            ht = aut.hintText;\r\n        } else {\r\n            ht = local_protection.defaultSheetHintText;\r\n        }\r\n        tooltip.info('', ht);\r\n        return false;\r\n    }\r\n    function checkProtectionAuthorityNormal(sheetIndex, type = 'formatColumns', isAlert = true) {\r\n        let sheetFile = Store.getSheetByIndex(sheetIndex);\r\n        if (sheetFile == null) {\r\n            return true;\r\n        }\r\n        if (sheetFile.config == null || sheetFile.config.authority == null) {\r\n            return true;\r\n        }\r\n        let aut = sheetFile.config.authority;\r\n        if (aut == null || aut.sheet == null || aut.sheet == 0) {\r\n            return true;\r\n        }\r\n        if (aut[type] == 1 || aut[type] == null) {\r\n            return true;\r\n        }\r\n        if (isAlert) {\r\n            const _locale = locale();\r\n            const local_protection = _locale.protection;\r\n            let ht;\r\n            if (aut.hintText != null && aut.hintText.length > 0) {\r\n                ht = aut.hintText;\r\n            } else {\r\n                ht = local_protection.defaultSheetHintText;\r\n            }\r\n            tooltip.info('', ht);\r\n        }\r\n        return false;\r\n    }\r\n    return {\r\n        checkProtectionNotEnable: checkProtectionNotEnable,\r\n        checkProtectionLocked: checkProtectionLocked,\r\n        checkProtectionCellHidden: checkProtectionCellHidden,\r\n        checkProtectionLockedRangeList: checkProtectionLockedRangeList,\r\n        checkProtectionSelectLockedOrUnLockedCells: checkProtectionSelectLockedOrUnLockedCells,\r\n        checkProtectionAllSelected: checkProtectionAllSelected,\r\n        checkProtectionFormatCells: checkProtectionFormatCells,\r\n        checkProtectionAuthorityNormal: checkProtectionAuthorityNormal\r\n    };\r\n});"]}