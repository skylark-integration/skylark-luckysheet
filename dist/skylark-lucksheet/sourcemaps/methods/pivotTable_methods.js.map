{"version":3,"sources":["methods/pivotTable_methods.js"],"names":["define","m_get","m_util","m_getdata","m_datecontroll","m_format","m_validate","luckysheetArray","analysis","luckysheetConfigsetting","sheets","m_protection","Store","locale","numeral","getSheetIndex","getRangetxt","replaceHtml","getObjType","ABCatNum","numFormat","numfloatlen","showrightclickmenu","mouseclickposition","getdatabyselectionD","getcellvalue","datagridgrowth","isdatetime","diff","isdatatypemulti","isdatatype","genarate","update","isRealNull","checkProtectionAuthorityNormal","isEditMode","pivotDatas","pivotSheetIndex","pivotDataSheetIndex","celldata","origindata","getCellData","cursheetindex","datasheetindex","data_select_save","sheetIndex","_this","this","currentSheetIndex","realIndex","luckysheetfile","pivotTable","Function","column","row","values","filter","showType","filterparm","drawPivotTable","pivotTableBoundary","pivot_select_save","luckysheet_select_save","pivotrealIndex","otherfile","buildGridData","data","rowhidden","f","h","$","extend","newdata","i","length","push","concat","pivot_data_type","c","type","toString","selected","caljs","initial","luckysheet_pivotTable_select_state","jgridCurrentPivotInput","movestate","moveitemposition","movesave","getSumTypeName","name","locale_pivotTable","valueStatisticsSUM","valueStatisticsCOUNT","valueStatisticsCOUNTA","valueStatisticsCOUNTUNIQUE","valueStatisticsAVERAGE","valueStatisticsMAX","valueStatisticsMIN","valueStatisticsMEDIAN","valueStatisticsPRODUCT","valueStatisticsSTDEV","valueStatisticsSTDEVP","valueStatisticslet","valueStatisticsVARP","setDatatojsfile","attr","value","cindex","index","isPivotRange","row_index","col_index","luckysheetcurrentisPivotTable","getPivotTableData","dataindex","addValuesToTitle","titles","rowLen","colLen","retdata","v","fullname","r","Array","Math","floor","getComposeArray","ret","x","getnameArray","field","c_value","getTitleFromGroup","group","config","dataposition","orderbygroup","generategrouparraymain","stackset","d","alllength","alllengthInital","a","children","orderbygroupchildren","orderby","order","splice","childrens","isAsc","locale_filter","y","s","valueBlank","parseFloat","result","isNaN","localeCompare","sort","generategroupaddstatic","arr","stasticarr","valueSum","issum","generategrouparray","stastic","level","unshift","addStatisticsData","valueobj","indicator","d_value","count","max","Infinity","min","counta","countunique","countuniquedata","sum","digitaldata","sumtype","acc","num","newAcc","dataHandler","_locale","datarowtitle","datarowtitlegroup","datarowposition","datacoltitle","datacoltitlegroup","datacolposition","rowtitle","rowtitlename","coltitle","coltitlename","curentLevelobj_row","curentLevelarr_row","item","parseInt","curentLevelobj_col","curentLevelarr_col","coltitle_c","rowtitle_c","join","split","slice","json","numArr","b","numLen","numindex","mean","STDEV","STDEVP","let","VARP","datacoltitle_index","transpose","valuenslen","rowOver","colOver","drt","prefix","suffix","dct","titleRow","newRetdata"],"mappings":"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","file":"../../methods/pivotTable_methods.js","sourcesContent":["define([\r\n    '../methods/get',\r\n    '../utils/util',\r\n    '../methods/getdata',\r\n    '../methods/datecontroll',\r\n    '../methods/format',\r\n    '../methods/validate',\r\n    '../methods/array',\r\n    '../methods/analysis',\r\n    '../methods/luckysheetConfigsetting',\r\n    './sheets',\r\n    '../methods/protection_methods',\r\n    '../store',\r\n    '../locale/locale',\r\n    '../vendors/numeral'\r\n], function (m_get, m_util, m_getdata, m_datecontroll, m_format, m_validate,  luckysheetArray, analysis,luckysheetConfigsetting, sheets,  m_protection, Store, locale, numeral) {\r\n    'use strict';\r\n    const {getSheetIndex, getRangetxt} = m_get;\r\n    const {replaceHtml, getObjType, ABCatNum, numFormat, numfloatlen, showrightclickmenu, mouseclickposition} = m_util;\r\n    const {getdatabyselectionD, getcellvalue, datagridgrowth} = m_getdata;\r\n    const {isdatetime, diff, isdatatypemulti, isdatatype} = m_datecontroll;\r\n    const {genarate, update} = m_format;\r\n    const {isRealNull} = m_validate;\r\n    const isEditMode = luckysheetConfigsetting.isEditMode;\r\n    const {checkProtectionAuthorityNormal} = m_protection;\r\n    const pivotTable = {\r\n        pivotDatas: null,\r\n        pivotSheetIndex: 0,\r\n        pivotDataSheetIndex: 0,\r\n        celldata: null,\r\n        origindata: null,\r\n        getCellData: function (cursheetindex, datasheetindex, data_select_save) {\r\n            let _this = this;\r\n            let sheetIndex;\r\n            if (cursheetindex != null) {\r\n                sheetIndex = cursheetindex;\r\n            } else {\r\n                sheetIndex = Store.currentSheetIndex;\r\n            }\r\n            let realIndex = getSheetIndex(sheetIndex);\r\n            if (getObjType(Store.luckysheetfile[realIndex].pivotTable) != 'object') {\r\n                Store.luckysheetfile[realIndex].pivotTable = new Function('return ' + Store.luckysheetfile[realIndex].pivotTable)();\r\n            }\r\n            if (Store.luckysheetfile[realIndex].pivotTable != null) {\r\n                _this.column = Store.luckysheetfile[realIndex].pivotTable.column;\r\n                _this.row = Store.luckysheetfile[realIndex].pivotTable.row;\r\n                _this.values = Store.luckysheetfile[realIndex].pivotTable.values;\r\n                _this.filter = Store.luckysheetfile[realIndex].pivotTable.filter;\r\n                _this.showType = Store.luckysheetfile[realIndex].pivotTable.showType;\r\n                _this.filterparm = Store.luckysheetfile[realIndex].pivotTable.filterparm;\r\n                if (Store.luckysheetfile[realIndex].pivotTable.drawPivotTable != null) {\r\n                    _this.drawPivotTable = Store.luckysheetfile[realIndex].pivotTable.drawPivotTable;\r\n                } else {\r\n                    _this.drawPivotTable = true;\r\n                }\r\n                if (Store.luckysheetfile[realIndex].pivotTable.pivotTableBoundary != null) {\r\n                    _this.pivotTableBoundary = Store.luckysheetfile[realIndex].pivotTable.pivotTableBoundary;\r\n                } else {\r\n                    _this.pivotTableBoundary = [\r\n                        12,\r\n                        6\r\n                    ];\r\n                }\r\n                if (data_select_save != null) {\r\n                    _this.pivot_select_save = data_select_save;\r\n                } else {\r\n                    _this.pivot_select_save = Store.luckysheetfile[realIndex].pivotTable.pivot_select_save;\r\n                }\r\n                if (datasheetindex != null) {\r\n                    _this.pivotDataSheetIndex = datasheetindex;\r\n                } else {\r\n                    _this.pivotDataSheetIndex = Store.luckysheetfile[realIndex].pivotTable.pivotDataSheetIndex;\r\n                }\r\n            } else {\r\n                _this.column = null;\r\n                _this.row = null;\r\n                _this.values = null;\r\n                _this.filter = null;\r\n                _this.showType = null;\r\n                _this.filterparm = null;\r\n                _this.drawPivotTable = true;\r\n                _this.pivotTableBoundary = [\r\n                    12,\r\n                    6\r\n                ];\r\n                if (data_select_save != null) {\r\n                    _this.pivot_select_save = data_select_save;\r\n                } else {\r\n                    _this.pivot_select_save = Store.luckysheet_select_save;\r\n                }\r\n                if (datasheetindex != null) {\r\n                    _this.pivotDataSheetIndex = datasheetindex;\r\n                } else {\r\n                    _this.pivotDataSheetIndex = sheetIndex;\r\n                }\r\n            }\r\n            let pivotrealIndex = getSheetIndex(_this.pivotDataSheetIndex);\r\n            let otherfile = Store.luckysheetfile[pivotrealIndex];\r\n            if (otherfile['data'] == null) {\r\n                otherfile['data'] = sheets.buildGridData(otherfile);\r\n            }\r\n            _this.origindata = getdatabyselectionD(otherfile.data, _this.pivot_select_save);\r\n            let rowhidden = {};\r\n            if (_this.filterparm != null) {\r\n                for (let f in _this.filterparm) {\r\n                    // 目的是取出rowhidden\r\n                    for (let h in _this.filterparm[f]) {\r\n                        if (h === 'rowhidden' && _this.filterparm[f][h] != null) {\r\n                            rowhidden = $.extend(true, rowhidden, _this.filterparm[f][h]);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            _this.rowhidden = rowhidden;\r\n            _this.pivotSheetIndex = sheetIndex;\r\n            let newdata = [];\r\n            for (let i = 0; i < _this.origindata.length; i++) {\r\n                if (_this.rowhidden != null && _this.rowhidden[i] != null) {\r\n                    continue;\r\n                }\r\n                newdata.push([].concat(_this.origindata[i]));\r\n            }\r\n            _this.celldata = newdata;\r\n            _this.pivot_data_type = {};\r\n            for (let c = 0; c < _this.celldata[1].length; c++) {\r\n                let type = isdatatype(_this.celldata[1][c]);\r\n                _this.pivot_data_type[c.toString()] = type;\r\n            }\r\n        },\r\n        pivot_data_type: {},\r\n        pivot_select_save: null,\r\n        column: null,\r\n        row: null,\r\n        values: null,\r\n        filter: null,\r\n        showType: null,\r\n        rowhidden: null,\r\n        selected: null,\r\n        caljs: null,\r\n        initial: true,\r\n        filterparm: null,\r\n        luckysheet_pivotTable_select_state: false,\r\n        jgridCurrentPivotInput: null,\r\n        movestate: false,\r\n        moveitemposition: [],\r\n        movesave: {},\r\n\r\n        getSumTypeName: function (type) {\r\n            let name = '';\r\n            const _locale = locale();\r\n            const locale_pivotTable = _locale.pivotTable;\r\n            if (type == 'SUM') {\r\n                name = locale_pivotTable.valueStatisticsSUM;\r\n            } else if (type == 'COUNT') {\r\n                name = locale_pivotTable.valueStatisticsCOUNT;\r\n            } else if (type == 'COUNTA') {\r\n                name = locale_pivotTable.valueStatisticsCOUNTA;\r\n            } else if (type == 'COUNTUNIQUE') {\r\n                name = locale_pivotTable.valueStatisticsCOUNTUNIQUE;\r\n            } else if (type == 'AVERAGE') {\r\n                name = locale_pivotTable.valueStatisticsAVERAGE;\r\n            } else if (type == 'MAX') {\r\n                name = locale_pivotTable.valueStatisticsMAX;\r\n            } else if (type == 'MIN') {\r\n                name = locale_pivotTable.valueStatisticsMIN;\r\n            } else if (type == 'MEDIAN') {\r\n                name = locale_pivotTable.valueStatisticsMEDIAN;\r\n            } else if (type == 'PRODUCT') {\r\n                name = locale_pivotTable.valueStatisticsPRODUCT;\r\n            } else if (type == 'STDEV') {\r\n                name = locale_pivotTable.valueStatisticsSTDEV;\r\n            } else if (type == 'STDEVP') {\r\n                name = locale_pivotTable.valueStatisticsSTDEVP;\r\n            } else if (type == 'let') {\r\n                name = locale_pivotTable.valueStatisticslet;\r\n            } else if (type == 'VARP') {\r\n                name = locale_pivotTable.valueStatisticsVARP;\r\n            }\r\n            return name;\r\n        },\r\n        setDatatojsfile: function (attr, value, cindex) {\r\n            let _this = this;\r\n            let index = getSheetIndex(_this.pivotSheetIndex);\r\n            if (Store.luckysheetfile[index]['pivotTable'] == null) {\r\n                Store.luckysheetfile[index]['pivotTable'] = {};\r\n            }\r\n            if (cindex == null) {\r\n                Store.luckysheetfile[index]['pivotTable'][attr] = value;\r\n                _this[attr] = value;\r\n            } else {\r\n                if (Store.luckysheetfile[index]['pivotTable']['filterparm'] == null) {\r\n                    Store.luckysheetfile[index]['pivotTable']['filterparm'] = {};\r\n                }\r\n                if (Store.luckysheetfile[index]['pivotTable']['filterparm'][cindex.toString()] == null) {\r\n                    Store.luckysheetfile[index]['pivotTable']['filterparm'][cindex.toString()] = {};\r\n                }\r\n                Store.luckysheetfile[index]['pivotTable']['filterparm'][cindex.toString()][attr] = value;\r\n                if (_this['filterparm'] == null) {\r\n                    _this['filterparm'] = {};\r\n                }\r\n                if (_this['filterparm'][cindex.toString()] == null) {\r\n                    _this['filterparm'][cindex.toString()] = {};\r\n                }\r\n                _this['filterparm'][cindex.toString()][attr] = value;\r\n            }\r\n        },\r\n        drawPivotTable: true,\r\n        pivotTableBoundary: [\r\n            12,\r\n            6\r\n        ],\r\n\r\n        isPivotRange: function (row_index, col_index) {\r\n            let _this = this;\r\n            if (!!Store.luckysheetcurrentisPivotTable) {\r\n                if (row_index < _this.pivotTableBoundary[0] && col_index < _this.pivotTableBoundary[1]) {\r\n                    return true;\r\n                } else {\r\n                    return false;\r\n                }\r\n            }\r\n        },\r\n\r\n        getPivotTableData: function (dataindex) {\r\n            if (dataindex == null) {\r\n                dataindex = this.pivotSheetIndex;\r\n            }\r\n            let index = getSheetIndex(dataindex);\r\n            let pivotTable = Store.luckysheetfile[index]['pivotTable'];\r\n            if (getObjType(pivotTable) == 'object') {\r\n                pivotTable = $.extend(true, {}, Store.luckysheetfile[index]['pivotTable']);\r\n            } else {\r\n                pivotTable = new Function('return ' + pivotTable)();\r\n            }\r\n            return pivotTable;\r\n        },\r\n        addValuesToTitle: function (titles, values) {\r\n            let rowLen = titles.length * values.length, colLen = titles[0].length + 1;\r\n            let retdata = [];\r\n            if (titles.length == 0 && values.length > 0) {\r\n                for (let v = 0; v < values.length; v++) {\r\n                    retdata.push(values[v].fullname);\r\n                }\r\n                return retdata;\r\n            }\r\n            if (values.length == 0 && titles.length > 0) {\r\n                return titles;\r\n            }\r\n            for (let r = 0; r < rowLen; r++) {\r\n                retdata[r] = new Array(colLen);\r\n                for (let c = 0; c < colLen - 1; c++) {\r\n                    retdata[r][c] = titles[Math.floor(r / values.length)][c];\r\n                }\r\n                retdata[r][colLen - 1] = values[r % values.length].fullname;\r\n            }\r\n            return retdata;\r\n        },\r\n\r\n        getComposeArray: function (data) {\r\n            if (data.length == 0) {\r\n                return [];\r\n            }\r\n            let ret = [];\r\n            for (let i = 0; i < data.length; i++) {\r\n                let name = '';\r\n                for (let x = 0; x <= i; x++) {\r\n                    if (!!data[x] && !!data[x]['m']) {\r\n                        name += data[x]['m'];\r\n                    } else {\r\n                        name += getcellvalue(x, null, data);\r\n                    }\r\n                }\r\n                ret.push(name);\r\n            }\r\n            return ret;\r\n        },\r\n        getnameArray: function (data, field) {\r\n            if (data.length == 0) {\r\n                return [];\r\n            }\r\n            if (field.length == 0) {\r\n                return [];\r\n            }\r\n            let ret = [];\r\n            for (let i = 0; i < field.length; i++) {\r\n                let c_value;\r\n                if (!!data[field[i].index] && !!data[field[i].index]['m']) {\r\n                    c_value = data[field[i].index]['m'];\r\n                } else {\r\n                    c_value = getcellvalue(field[i].index, null, data);\r\n                }\r\n                ret.push(c_value);\r\n            }\r\n            return ret;\r\n        },\r\n        getTitleFromGroup: function (group, config, dataposition) {\r\n            let _this = this;\r\n            let orderbygroup = _this.orderbygroup(group, config, dataposition);\r\n            return _this.generategrouparraymain(orderbygroup, config);\r\n        },\r\n        orderbygroup: function (group, config, dataposition) {\r\n            let _this = this;\r\n            let stackset = [];\r\n            if (group.length == 0) {\r\n                return [];\r\n            }\r\n            stackset = group;\r\n            let d = null, alllength = stackset.length, alllengthInital = stackset.length, a = 0;\r\n            while (alllength != 0) {\r\n                d = stackset[a++];\r\n                alllength--;\r\n                if (d.children != null && d.children.length > 0) {\r\n                    d.children = _this.orderbygroupchildren(d.children, config[d.index].orderby, config[d.index].order, dataposition);\r\n                    for (let i = 0; i < d.children.length; i++) {\r\n                        stackset.push(d.children[i]);\r\n                        alllength++;\r\n                    }\r\n                }\r\n            }\r\n            return group.splice(0, alllengthInital);\r\n        },\r\n        orderbygroupchildren: function (childrens, orderby, order, dataposition) {\r\n            if (childrens.length == 0) {\r\n                return [];\r\n            }\r\n            let isAsc = false;\r\n            if (order == null || order == 'asc') {\r\n                isAsc = true;\r\n            }\r\n            const _locale = locale();\r\n            const locale_filter = _locale.filter;\r\n            let a = function (x, y) {\r\n                let f = null, s = null;\r\n                if (orderby == 'self' || orderby == null) {\r\n                    if (x.name == null) {\r\n                        f = locale_filter.valueBlank;\r\n                    } else {\r\n                        f = x.name.toString();\r\n                    }\r\n                    if (y.name == null) {\r\n                        s = locale_filter.valueBlank;\r\n                    } else {\r\n                        s = y.name.toString();\r\n                    }\r\n                    if (isdatetime(f) && isdatetime(s)) {\r\n                        return diff(f, s);\r\n                    }\r\n                } else {\r\n                    f = parseFloat(dataposition[x.orderby].result);\r\n                    s = parseFloat(dataposition[y.orderby].result);\r\n                }\r\n                if (!isNaN(f) && !isNaN(s)) {\r\n                    return numeral(f).value() - numeral(s).value();\r\n                } else if (isNaN(f) && isNaN(s)) {\r\n                    return f.localeCompare(s);\r\n                } else if (isNaN(f)) {\r\n                    return 1;\r\n                } else if (isNaN(s)) {\r\n                    return -1;\r\n                }\r\n            };\r\n            let d = function (x, y) {\r\n                let f = null, s = null;\r\n                if (orderby == 'self' || orderby == null) {\r\n                    if (x.name == null) {\r\n                        f = locale_filter.valueBlank;\r\n                    } else {\r\n                        f = x.name.toString();\r\n                    }\r\n                    if (y.name == null) {\r\n                        s = locale_filter.valueBlank;\r\n                    } else {\r\n                        s = y.name.toString();\r\n                    }\r\n                    if (isdatetime(f) && isdatetime(s)) {\r\n                        return diff(f, s);\r\n                    }\r\n                } else {\r\n                    f = parseFloat(dataposition[x.orderby].result);\r\n                    s = parseFloat(dataposition[y.orderby].result);\r\n                }\r\n                if (!isNaN(f) && !isNaN(s)) {\r\n                    return numeral(s).value() - numeral(f).value();\r\n                } else if (isNaN(f) && isNaN(s)) {\r\n                    return s.localeCompare(f);\r\n                } else if (isNaN(f)) {\r\n                    return -1;\r\n                } else if (isNaN(s)) {\r\n                    return 1;\r\n                }\r\n            };\r\n            if (isAsc) {\r\n                return childrens.sort(a);\r\n            } else {\r\n                return childrens.sort(d);\r\n            }\r\n        },\r\n        generategroupaddstatic: function (arr, name) {\r\n            let stasticarr = [];\r\n            const _locale = locale();\r\n            const locale_pivotTable = _locale.pivotTable;\r\n            for (let a = 0; a < arr[0].length; a++) {\r\n                if (a == 0) {\r\n                    if (name == locale_pivotTable.valueSum) {\r\n                        stasticarr.push(name);\r\n                    } else {\r\n                        stasticarr.push({\r\n                            'name': name,\r\n                            'issum': true\r\n                        });\r\n                    }\r\n                } else {\r\n                    stasticarr.push('');\r\n                }\r\n            }\r\n            return stasticarr;\r\n        },\r\n        generategrouparraymain: function (group, config) {\r\n            let _this = this;    //生成数组\r\n            //生成数组\r\n            let ret = [];\r\n            for (let i = 0; i < group.length; i++) {\r\n                let name = group[i].name;\r\n                let arr = _this.generategrouparray(group[i].children, config, 1);\r\n                if (config[0].stastic == '1' || config[0].stastic == null) {\r\n                    arr.push(_this.generategroupaddstatic(arr, name));\r\n                }\r\n                ret = ret.concat(arr);\r\n            }\r\n            return ret;\r\n        },\r\n        generategrouparray: function (group, config, level) {\r\n            let _this = this;\r\n            let ret = [];\r\n            for (let i = 0; i < group.length; i++) {\r\n                let name = group[i].name;\r\n                let arr;\r\n                if (group[i].children == 0 || group[i].children.length == 0) {\r\n                    arr = [name];\r\n                    ret.push(arr);\r\n                } else {\r\n                    arr = _this.generategrouparray(group[i].children, config, level + 1);\r\n                    for (let a = 0; a < arr.length; a++) {\r\n                        arr[a].unshift(name);\r\n                    }\r\n                    if (config[level].stastic == '1' || config[level].stastic == null) {\r\n                        arr.push(_this.generategroupaddstatic(arr, name));\r\n                    }\r\n                    ret = ret.concat(arr);\r\n                }\r\n            }\r\n            return ret;\r\n        },\r\n        addStatisticsData: function (dataposition, valueobj, indicator, d_value) {\r\n            if (dataposition[indicator] == null) {\r\n                dataposition[indicator] = {\r\n                    'data': [],\r\n                    'count': 0,\r\n                    'max': -Infinity,\r\n                    'min': Infinity,\r\n                    'counta': 0,\r\n                    'countunique': 0,\r\n                    'countuniquedata': {},\r\n                    'sum': 0,\r\n                    'digitaldata': [],\r\n                    'sumtype': valueobj.sumtype,\r\n                    'index': valueobj.index,\r\n                    'name': valueobj.fullname,\r\n                    'acc': 0\r\n                };\r\n            }\r\n            if (isdatatypemulti(d_value)['num'] === true) {\r\n                let num = numFormat(d_value);\r\n                dataposition[indicator]['digitaldata'].push(num);\r\n                dataposition[indicator]['count'] += 1;\r\n                dataposition[indicator]['sum'] += num;\r\n                if (num > dataposition[indicator]['max']) {\r\n                    dataposition[indicator]['max'] = num;\r\n                }\r\n                if (num < dataposition[indicator]['min']) {\r\n                    dataposition[indicator]['min'] = num;\r\n                }\r\n                let newAcc = numfloatlen(num);\r\n                if (newAcc > dataposition[indicator]['acc']) {\r\n                    dataposition[indicator]['acc'] = newAcc;\r\n                }\r\n            }\r\n            if (d_value != '') {\r\n                dataposition[indicator]['data'].push(d_value);\r\n                dataposition[indicator]['counta'] += 1;\r\n                if (!(d_value in dataposition[indicator]['countuniquedata'])) {\r\n                    dataposition[indicator]['countuniquedata'][d_value] = 1;\r\n                    dataposition[indicator]['countunique'] += 1;\r\n                }\r\n            }\r\n        },\r\n        dataHandler: function (column, row, values, showType, celldata) {\r\n            //column:[{\"index\":1, name:\"列1\", \"order\":\"asc\", \"orderby\":\"self/0/1/2\", \"stastic\":\"0/1\"}]\r\n            //row:[{\"index\":1, name:\"列3\", \"order\":\"asc\", \"orderby\":\"self/0/1/2\", \"stastic\":\"0/1\"}]\r\n            //values:[{\"index\":1, \"sumtype\":\"SUM/COUNT/COUNTA/COUNTUNIQUE/AVERAGE/MAX/MIN/MEDIAN/PRODUCT/STDEV/STDEVP/let/VARP\", \"name\":\"求和:fyc\"}]\r\n            let _this = this;\r\n            const _locale = locale();\r\n            const locale_filter = _locale.filter;\r\n            const locale_pivotTable = _locale.pivotTable;\r\n            if (showType == null) {\r\n                showType = 'column';\r\n            }\r\n            if (column.length == 0 && row.length == 0 && values.length == 0 || celldata.length == 0) {\r\n                _this.pivotDatas = [];\r\n                return [];\r\n            }    //生成透视表值及定位\r\n            //生成透视表值及定位\r\n            let dataposition = {}, data = celldata, datarowtitle = [], datarowtitlegroup = [], datarowposition = {}, datarowposition_i = 0, datacoltitle = [], datacoltitlegroup = [], datacolposition = {}, datacolposition_i = 0;\r\n            for (let i = 1; i < data.length; i++) {\r\n                let d = data[i];\r\n                let groupbyrowtxt = '', groupbycoltxt = '', rowtxt = '', rowtitle = [], rowtitlename = [], coltxt = '', coltitle = [], coltitlename = [];    //[\"四川\", \"成都\", \"邛崃\"] 转换为 [\"四川\", \"四川成都\", \"四川成都邛崃\"]\r\n                //[\"四川\", \"成都\", \"邛崃\"] 转换为 [\"四川\", \"四川成都\", \"四川成都邛崃\"]\r\n                rowtitlename = _this.getnameArray(d, row);\r\n                coltitlename = _this.getnameArray(d, column);\r\n                rowtitle = _this.getComposeArray(rowtitlename);\r\n                coltitle = _this.getComposeArray(coltitlename);\r\n                if (rowtitle.length > 0) {\r\n                    rowtitle.unshift(locale_pivotTable.valueSum);\r\n                }\r\n                if (coltitle.length > 0) {\r\n                    coltitle.unshift(locale_pivotTable.valueSum);\r\n                }\r\n                let curentLevelobj_row = datarowposition, curentLevelarr_row = datarowtitlegroup;\r\n                for (let r = 0; r < rowtitle.length; r++) {\r\n                    let item = rowtitle[r], name = r == 0 ? locale_pivotTable.valueSum : rowtitlename[r - 1];    //修改\r\n                    //修改\r\n                    if (curentLevelobj_row[r.toString()] != null && curentLevelobj_row[r.toString()][item] != null) {\r\n                        //修改\r\n                        curentLevelarr_row = curentLevelarr_row[curentLevelobj_row[r.toString()][item]].children;\r\n                    } else {\r\n                        let orderby = r == 0 ? 'self' : row[r - 1].orderby == 'self' || row[r - 1].orderby == null ? item : showType == 'column' ? item + values[parseInt(row[r - 1].orderby)].fullname : item + locale_pivotTable.valueSum;\r\n                        if (name == null) {\r\n                            name = locale_filter.valueBlank;\r\n                        }\r\n                        curentLevelarr_row.push({\r\n                            'name': name,\r\n                            'fullname': item,\r\n                            'index': r,\r\n                            'orderby': orderby,\r\n                            'children': []\r\n                        });\r\n                        if (curentLevelobj_row[r.toString()] == null) {\r\n                            curentLevelobj_row[r.toString()] = {};\r\n                        }\r\n                        if (curentLevelobj_row[r.toString()][item] == null) {\r\n                            curentLevelobj_row[r.toString()][item] = curentLevelarr_row.length - 1;\r\n                        }\r\n                        curentLevelarr_row = curentLevelarr_row[curentLevelarr_row.length - 1].children;\r\n                    }\r\n                }\r\n                let curentLevelobj_col = datacolposition, curentLevelarr_col = datacoltitlegroup;\r\n                for (let r = 0; r < coltitle.length; r++) {\r\n                    let item = coltitle[r], name = r == 0 ? locale_pivotTable.valueSum : coltitlename[r - 1];\r\n                    if (curentLevelobj_col[r.toString()] != null && curentLevelobj_col[r.toString()][item] != null) {\r\n                        curentLevelarr_col = curentLevelarr_col[curentLevelobj_col[r.toString()][item]].children;\r\n                    } else {\r\n                        let orderby = r == 0 ? 'self' : column[r - 1].orderby == 'self' || column[r - 1].orderby == null ? item : showType == 'column' ? locale_pivotTable.valueSum + item : values[parseInt(column[r - 1].orderby)].fullname + item;\r\n                        if (name == null) {\r\n                            name = locale_filter.valueBlank;\r\n                        }\r\n                        curentLevelarr_col.push({\r\n                            'name': name,\r\n                            'fullname': item,\r\n                            'index': r,\r\n                            'orderby': orderby,\r\n                            'children': []\r\n                        });\r\n                        if (curentLevelobj_col[r.toString()] == null) {\r\n                            curentLevelobj_col[r.toString()] = {};\r\n                        }\r\n                        if (curentLevelobj_col[r.toString()][item] == null) {\r\n                            curentLevelobj_col[r.toString()][item] = curentLevelarr_col.length - 1;\r\n                        }\r\n                        curentLevelarr_col = curentLevelarr_col[curentLevelarr_col.length - 1].children;\r\n                    }\r\n                }\r\n                let v_str = '';\r\n                for (let v = 0; v < values.length; v++) {\r\n                    let d_value = getcellvalue(values[v].index, null, d);\r\n                    let coltitle_c = [].concat(coltitle), rowtitle_c = [].concat(rowtitle);\r\n                    if (showType == 'column') {\r\n                        if (coltitle_c.length > 0) {\r\n                            coltitle_c.push('');\r\n                            coltitle_c = coltitle_c.join(values[v].fullname + '|||').split('|||').slice(0, coltitle_c.length - 1);\r\n                        } else {\r\n                            coltitle_c.push(values[v].fullname);\r\n                        }\r\n                    } else {\r\n                        if (rowtitle_c.length > 0) {\r\n                            rowtitle_c.push('');\r\n                            rowtitle_c = rowtitle_c.join(values[v].fullname + '|||').split('|||').slice(0, rowtitle_c.length - 1);\r\n                        } else {\r\n                            rowtitle_c.push(values[v].fullname);\r\n                        }\r\n                    }\r\n                    if (coltitle_c.length == 0) {\r\n                        coltitle_c.push('');\r\n                    }\r\n                    if (rowtitle_c.length == 0) {\r\n                        rowtitle_c.push('');\r\n                    }\r\n                    for (let r = 0; r < rowtitle_c.length; r++) {\r\n                        for (let c = 0; c < coltitle_c.length; c++) {\r\n                            let indicator = rowtitle_c[r] + coltitle_c[c];\r\n                            _this.addStatisticsData(dataposition, values[v], indicator, d_value);\r\n                        }\r\n                    }\r\n                }\r\n            }    //计算值列\r\n                 //SUM/COUNT/COUNTA/COUNTUNIQUE/AVERAGE/MAX/MIN/MEDIAN/PRODUCT/STDEV/STDEVP/let/VARP\r\n            //计算值列\r\n            //SUM/COUNT/COUNTA/COUNTUNIQUE/AVERAGE/MAX/MIN/MEDIAN/PRODUCT/STDEV/STDEVP/let/VARP\r\n            for (let indicator in dataposition) {\r\n                let json = dataposition[indicator];\r\n                if (json.sumtype == 'SUM') {\r\n                    json.result = json.sum;\r\n                } else if (json.sumtype == 'COUNT') {\r\n                    json.result = json.count;\r\n                } else if (json.sumtype == 'COUNTA') {\r\n                    json.result = json.counta;\r\n                } else if (json.sumtype == 'COUNTUNIQUE') {\r\n                    json.result = json.countunique;\r\n                } else if (json.sumtype == 'AVERAGE') {\r\n                    json.result = numFormat(json.sum / json.count);\r\n                } else if (json.sumtype == 'MAX') {\r\n                    json.result = json.max;\r\n                } else if (json.sumtype == 'MIN') {\r\n                    json.result = json.min;\r\n                } else if (json.sumtype == 'MEDIAN') {\r\n                    let numArr = json.digitaldata.sort(function (a, b) {\r\n                        return a - b;\r\n                    });\r\n                    let numLen = numArr.length;\r\n                    let numindex = parseInt(numLen / 2);\r\n                    if (numLen % 2 == 0) {\r\n                        json.result = (numArr[numindex - 1] + numArr[numindex]) / 2;\r\n                    } else {\r\n                        json.result = numArr[numindex];\r\n                    }\r\n                } else if (json.sumtype == 'PRODUCT') {\r\n                    json.result = new Function('return ' + json.digitaldata.join('*'))();\r\n                } else if (json.sumtype == 'STDEV') {\r\n                    let mean = json.sum / json.count;\r\n                    json.result = analysis.STDEV(mean, json.digitaldata);\r\n                } else if (json.sumtype == 'STDEVP') {\r\n                    let mean = json.sum / json.count;\r\n                    json.result = analysis.STDEVP(mean, json.digitaldata);\r\n                } else if (json.sumtype == 'let') {\r\n                    let mean = json.sum / json.count;\r\n                    json.result = analysis.let(mean, json.digitaldata);\r\n                } else if (json.sumtype == 'VARP') {\r\n                    let mean = json.sum / json.count;\r\n                    json.result = analysis.VARP(mean, json.digitaldata);\r\n                }\r\n                let newAcc = numfloatlen(json.result);\r\n                if (newAcc > json.acc) {\r\n                    json.acc = newAcc;\r\n                }\r\n                json.result = numFormat(json.result, json.acc);\r\n            }\r\n            datarowtitle = _this.getTitleFromGroup(datarowtitlegroup, row, dataposition);\r\n            datacoltitle = _this.getTitleFromGroup(datacoltitlegroup, column, dataposition);    //加入值到列/行形成新的表头\r\n            //加入值到列/行形成新的表头\r\n            if (showType == 'column') {\r\n                if (datacoltitle.length > 0 && datacoltitle[0].length > 0) {\r\n                    datacoltitle = _this.addValuesToTitle(datacoltitle, values);\r\n                } else {\r\n                    for (let v = 0; v < values.length; v++) {\r\n                        datacoltitle.push([values[v].fullname]);\r\n                    }\r\n                }\r\n            } else {\r\n                if (datarowtitle.length > 0 && datarowtitle[0].length > 0) {\r\n                    datarowtitle = _this.addValuesToTitle(datarowtitle, values);\r\n                } else {\r\n                    for (let v = 0; v < values.length; v++) {\r\n                        datarowtitle.push([values[v].fullname]);\r\n                    }\r\n                }\r\n            }\r\n            let datacoltitle_index = datacoltitle;\r\n            datacoltitle = luckysheetArray.transpose(datacoltitle, false);\r\n            let valuenslen = values.length == 0 ? 0 : 1;\r\n            let rowLen = (datacoltitle.length == 0 ? valuenslen : datacoltitle.length) + (datarowtitle.length == 0 ? valuenslen : datarowtitle.length), colLen = (datacoltitle.length == 0 ? valuenslen : datacoltitle[0].length) + (datarowtitle.length == 0 ? valuenslen : datarowtitle[0].length);\r\n            let rowOver = datacoltitle.length, colOver = datarowtitle.length == 0 ? 0 : datarowtitle[0].length;\r\n            let retdata = [];\r\n            for (let r = 0; r < rowLen; r++) {\r\n                retdata[r] = new Array(colLen);\r\n                for (let c = 0; c < colLen; c++) {\r\n                    let drt = datarowtitle[r - rowOver];\r\n                    if (r < rowOver && c < colOver) {\r\n                        //空白列头\r\n                        retdata[r][c] = '';\r\n                    } else if (r < rowOver && c >= colOver) {\r\n                        //列标题\r\n                        if (datacoltitle[r] != null) {\r\n                            if (getObjType(datacoltitle[r][c - colOver]) == 'object') {\r\n                                retdata[r][c] = datacoltitle[r][c - colOver].name + locale_pivotTable.valueSum;\r\n                            } else {\r\n                                retdata[r][c] = datacoltitle[r][c - colOver];\r\n                            }\r\n                        } else {\r\n                            retdata[r][c] = '';\r\n                        }\r\n                    } else if (r >= rowOver && c < colOver) {\r\n                        //行标题\r\n                        if (drt != null) {\r\n                            if (getObjType(drt[c]) == 'object') {\r\n                                retdata[r][c] = drt[c].name + locale_pivotTable.valueSum;\r\n                            } else {\r\n                                retdata[r][c] = drt[c];\r\n                            }\r\n                        } else {\r\n                            retdata[r][c] = '';\r\n                        }\r\n                    } else {\r\n                        //单元格内容\r\n                        let prefix = '';\r\n                        if (drt != null) {\r\n                            if (!(drt instanceof Array) || drt.length == 1) {\r\n                                if (drt instanceof Array) {\r\n                                    prefix = drt[0];\r\n                                } else {\r\n                                    prefix = drt;\r\n                                }\r\n                            } else {\r\n                                for (let x = 0; x < drt.length; x++) {\r\n                                    if (getObjType(drt[x]) == 'object') {\r\n                                        prefix += drt[x].name;\r\n                                    } else {\r\n                                        prefix += drt[x];\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        let suffix = '';\r\n                        let dct = datacoltitle_index[c - colOver];\r\n                        if (dct != null) {\r\n                            if (!(dct instanceof Array) || dct.length == 1) {\r\n                                if (dct instanceof Array) {\r\n                                    suffix = dct[0];\r\n                                } else {\r\n                                    suffix = dct;\r\n                                }\r\n                            } else {\r\n                                for (let x = 0; x < dct.length; x++) {\r\n                                    if (getObjType(dct[x]) == 'object') {\r\n                                        suffix += dct[x].name;\r\n                                    } else {\r\n                                        suffix += dct[x];\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        let indicator = prefix;\r\n                        if (prefix != '' && suffix != '') {\r\n                            indicator = prefix + suffix;\r\n                        } else if (prefix == '') {\r\n                            indicator = suffix;\r\n                        }\r\n                        if (dataposition[indicator] == null) {\r\n                            retdata[r][c] = '';\r\n                        } else {\r\n                            retdata[r][c] = dataposition[indicator].result;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (values.length == 1 && column.length > 0 && row.length > 0) {\r\n                retdata[0][0] = values[0].fullname;\r\n                retdata.splice(column.length, 1);\r\n            } else if (values.length == 1 && column.length > 0) {\r\n                // 0: (6) [\"English\", \"foreign language\", \"mathematics\", \"science\", \"Sum\", undefined]\r\n                // 1: (6) [\"CountA:score\", \"CountA:score\", \"CountA:score\", \"CountA:score\", \"CountA:score\", undefined]\r\n                // 2: (6) [3, 3, 3, 3, 12, \"\"]\r\n                //The above format does not meet viewing habits,Process retdata into the correct format\r\n                let titleRow = retdata.splice(column.length, 1);\r\n                let newRetdata = [];\r\n                for (let r = 0; r < retdata.length; r++) {\r\n                    let row = [];\r\n                    if (r == retdata.length - 1) {\r\n                        row.push(titleRow[0][0]);\r\n                    } else {\r\n                        row.push('');\r\n                    }\r\n                    for (let c = 0; c < retdata[r].length - 1; c++) {\r\n                        row.push(retdata[r][c]);\r\n                    }\r\n                    newRetdata.push(row);\r\n                }\r\n                retdata = newRetdata;\r\n            }\r\n            _this.pivotDatas = retdata;\r\n            return retdata;\r\n        }\r\n    };\r\n    return pivotTable;\r\n});"]}