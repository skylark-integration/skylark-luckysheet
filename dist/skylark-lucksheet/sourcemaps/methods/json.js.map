{"version":3,"sources":["methods/json.js"],"names":["define","m_util","getObjType","parseJsonParm","obj","Function","e","hasKey","json","this","item"],"mappings":";;;;;;;AAAAA,QAAQ,iBAAkB,SAAUC,GAChC,aACA,MAAMC,WAACA,GAAcD,EAyBrB,OAvBIE,cAAe,SAAUC,GACrB,GAAW,MAAPA,EACA,SACG,GAAuB,UAAnBF,EAAWE,GAQlB,OAAOA,EAPP,IAEI,OADW,IAAIC,SAAS,UAAYD,EAAzB,GAEb,MAAOE,GACL,WAMZC,OAAQ,SAAUH,GACd,IACII,EADQC,KACKN,cAAcC,GAC/B,IAAK,IAAIM,KAAQF,EACb,OAAO,EAEX,OAAO","file":"../../methods/json.js","sourcesContent":["define(['../utils/util'], function (m_util) {\n    'use strict';\n    const {getObjType} = m_util;\n    const json = {\n        parseJsonParm: function (obj) {\n            if (obj == null) {\n                return {};\n            } else if (getObjType(obj) == 'string') {\n                try {\n                    let json = new Function('return ' + obj)();\n                    return json;\n                } catch (e) {\n                    return {};\n                }\n            } else {\n                return obj;\n            }\n        },\n        hasKey: function (obj) {\n            let _this = this;\n            let json = _this.parseJsonParm(obj);\n            for (let item in json) {\n                return true;\n            }\n            return false;\n        }\n    };\n    return json;\n});"]}